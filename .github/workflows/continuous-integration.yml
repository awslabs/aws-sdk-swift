name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  BUILDER_VERSION: v0.9.18
  BUILDER_SOURCE: releases
  # host owned by CRT team to host aws-crt-builder releases. Contact their on-call with any issues
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-sdk-swift
  LINUX_BASE_IMAGE: ubuntu-16-x64
  RUN: ${{ github.run_id }}-${{ github.run_number }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  AWS_SDK_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift
  AWS_CRT_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift/target/build/deps/aws-crt-swift
  SMITHY_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift/target/build/deps/smithy-swift
  AWS_SWIFT_SDK_USE_LOCAL_DEPS: 1

jobs:
  ios-compat:
    runs-on: macos-13
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Tools Versions
        run: |
          which swiftc
          swiftc --version
          echo
          which xcodebuild
          xcodebuild -version
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
          chmod a+x builder.pyz
          ./builder.pyz build -p ${{ env.PACKAGE_NAME }} --target=ios-armv8
  macos-compat:
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.2.app/Contents/Developer
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Tools Versions
        run: |
          which swiftc
          swiftc --version
          echo
          which xcodebuild
          xcodebuild -version
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
          chmod a+x builder.pyz
          ./builder.pyz build -p ${{ env.PACKAGE_NAME }}
  linux-compat:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - ubuntu-x64
          - al2-x64
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        # todo: remove the aws credentials from the below command eventually once the CRT builder no longer requires aws credentials
        run: |
          aws ecr get-login-password | docker login 123124136734.dkr.ecr.us-east-1.amazonaws.com -u AWS --password-stdin
          export DOCKER_IMAGE=123124136734.dkr.ecr.us-east-1.amazonaws.com/aws-crt-swift-5-${{ matrix.image }}:${{ env.BUILDER_VERSION }}
          docker pull $DOCKER_IMAGE
          docker run --mount type=bind,source=$(pwd),target=/root/${{ env.PACKAGE_NAME }} \
          --env GITHUB_REF \
          --env GITHUB_HEAD_REF \
          --env AWS_CRT_SWIFT_CI_DIR="/root/${{ env.PACKAGE_NAME }}/target/build/deps/aws-crt-swift" \
          --env AWS_SDK_SWIFT_CI_DIR="/root/${{ env.PACKAGE_NAME }}" \
          --env SMITHY_SWIFT_CI_DIR="/root/${{ env.PACKAGE_NAME }}/target/build/deps/smithy-swift" \
          --env AWS_SWIFT_SDK_USE_LOCAL_DEPS=1 \
          --env AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY --env AWS_DEFAULT_REGION --env CXXFLAGS \
          $DOCKER_IMAGE build -p ${{ env.PACKAGE_NAME }} --build-dir=/root/${{ env.PACKAGE_NAME }} --spec=downstream
  ios-compat-2:
    runs-on: macos-13
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer
    steps:
      - name: Select smithy-swift branch
        run: |
          SMITHY_SWIFT_BRANCH_SHA=`git ls-remote --heads https://github.com/awslabs/smithy-swift.git "refs/heads/$GITHUB_HEAD_REF" | awk '{print $1}'`
          if [[ ! -z "${SMITHY_SWIFT_BRANCH_SHA}" ]]; then
            echo "Ref $GITHUB_HEAD_REF was found on smithy-swift at SHA $SMITHY_SWIFT_BRANCH_SHA"
            echo "Selecting smithy-swift on branch $GITHUB_HEAD_REF at $SMITHY_SWIFT_BRANCH_SHA"
            echo "SMITHY_SWIFT_SHA=$SMITHY_SWIFT_BRANCH_SHA" >> "$GITHUB_ENV"
          else
            echo "Ref $GITHUB_HEAD_REF was not found on smithy-swift at SHA $SMITHY_SWIFT_BRANCH_SHA"
            SMITHY_SWIFT_MAIN_SHA=`git ls-remote --heads https://github.com/awslabs/smithy-swift.git "refs/heads/main" | awk '{print $1}'`
            echo "Selecting smithy-swift on main branch at $SMITHY_SWIFT_MAIN_SHA"
            echo "SMITHY_SWIFT_SHA=$SMITHY_SWIFT_MAIN_SHA" >> "$GITHUB_ENV"
          fi
      - name: Checkout smithy-swift
        uses: actions/checkout@v3
        with:
          repository: awslabs/smithy-swift
          ref: ${{ env.SMITHY_SWIFT_SHA }}
      - name: Checkout aws-sdk-swift
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - name: Tools Versions
        run: |
          which swiftc
          swiftc --version
          echo
          which xcodebuild
          xcodebuild -version
          echo
          which java
          java --version
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          rm -rf Sources/Services
          rm -rf Tests/Services
          cd AWSSDKSwiftCLI
          swift run AWSSDKSwiftCLI generate-package-manifest ..
          cd ..
          echo
          cat Package.swift
          echo
          ./gradlew -p codegen/smithy-aws-swift-codegen build
          ./gradlew -p codegen/protocol-test-codegen build
          ./gradlew -p codegen/protocol-test-codegen-local build
          swift test
          ./scripts/mergeModels.sh codegen/protocol-test-codegen/build/smithyprojections/protocol-test-codegen/aws-restjson/swift-codegen/AWSRestJsonTestSDK/models
          cd codegen
          swift test
          cd ..
