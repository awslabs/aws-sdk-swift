name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  BUILDER_VERSION: v0.9.18
  BUILDER_SOURCE: releases
  # host owned by CRT team to host aws-crt-builder releases. Contact their on-call with any issues
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-sdk-swift
  LINUX_BASE_IMAGE: ubuntu-16-x64
  RUN: ${{ github.run_id }}-${{ github.run_number }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  AWS_SDK_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift
  AWS_CRT_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift/target/build/deps/aws-crt-swift
  SMITHY_SWIFT_CI_DIR: /Users/runner/work/aws-sdk-swift/aws-sdk-swift/target/build/deps/smithy-swift

jobs:
  ios-compat:
    runs-on: macos-12
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.0.app
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
          chmod a+x builder.pyz
          AWS_CRT_SWIFT_CI_DIR="${{ env.AWS_CRT_SWIFT_CI_DIR }}" AWS_SDK_SWIFT_CI_DIR="${{ env.AWS_SDK_SWIFT_CI_DIR }}" SMITHY_SWIFT_CI_DIR="${{ env.SMITHY_SWIFT_CI_DIR }}" ./builder.pyz build -p ${{ env.PACKAGE_NAME }} --target=ios-armv8
  macos-compat:
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.2.1.app
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
          chmod a+x builder.pyz
          AWS_CRT_SWIFT_CI_DIR="${{ env.AWS_CRT_SWIFT_CI_DIR }}" AWS_SDK_SWIFT_CI_DIR="${{ env.AWS_SDK_SWIFT_CI_DIR }}" SMITHY_SWIFT_CI_DIR="${{ env.SMITHY_SWIFT_CI_DIR }}" ./builder.pyz build -p ${{ env.PACKAGE_NAME }}
  linux-compat:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - jammy
          - amazonlinux2
        swift:
          - 5.5
          - 5.6
          - 5.7
        exclude:
          - os: jammy
            swift: 5.5
          - os: jammy
            swift: 5.6
    container:
      image: swift:${{ matrix.swift }}-${{ matrix.os }}
    steps:
      - name: Install openssl
        run: |
          if [ -x "$(command -v apt)" ]; then
            apt-get update && apt-get install -y libssl-dev
          else
            yum install -y openssl-devel
          fi
      - name: Setup Environment
        run: |
          echo "AWS_SDK_REF_TO_BUILD=$GITHUB_REF_NAME" >> $GITHUB_ENV
      - name: Checkout Sources
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Set References
        run: ./scripts/steps/set_references.sh
      - name: Install Dependencies
        run: ./scripts/steps/install_dependencies.sh
      - name: Perform Test Codegen
        run: ./scripts/steps/perform_test_codegen.sh
      - name: Post-Codegen Cleanup
        run: ./scripts/steps/post_codegen_cleanup.sh
      - name: Build and Test With Swift CLI
        run: ./scripts/steps/build_and_test_with_swift_cli.sh

