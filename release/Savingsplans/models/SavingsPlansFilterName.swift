// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SavingsPlansFilterName {
    case commitment
    case ec2InstanceFamily
    case end
    case paymentOption
    case region
    case savingsPlanType
    case start
    case term
    case upfront
    case sdkUnknown(String)
}

extension SavingsPlansFilterName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SavingsPlansFilterName] {
        return [
            .commitment,
            .ec2InstanceFamily,
            .end,
            .paymentOption,
            .region,
            .savingsPlanType,
            .start,
            .term,
            .upfront,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .commitment: return "commitment"
        case .ec2InstanceFamily: return "ec2-instance-family"
        case .end: return "end"
        case .paymentOption: return "payment-option"
        case .region: return "region"
        case .savingsPlanType: return "savings-plan-type"
        case .start: return "start"
        case .term: return "term"
        case .upfront: return "upfront"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SavingsPlansFilterName(rawValue: rawValue) ?? SavingsPlansFilterName.sdkUnknown(rawValue)
    }
}
