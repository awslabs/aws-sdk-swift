// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeSavingsPlansOfferingRatesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filters
        case maxResults
        case nextToken
        case operations
        case products
        case savingsPlanOfferingIds
        case savingsPlanPaymentOptions
        case savingsPlanTypes
        case serviceCodes
        case usageTypes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for savingsplanofferingratefilterslist0 in filters {
                try filtersContainer.encode(savingsplanofferingratefilterslist0)
            }
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let operations = operations {
            var operationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .operations)
            for savingsplanrateoperationlist0 in operations {
                try operationsContainer.encode(savingsplanrateoperationlist0)
            }
        }
        if let products = products {
            var productsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .products)
            for savingsplanproducttypelist0 in products {
                try productsContainer.encode(savingsplanproducttypelist0.rawValue)
            }
        }
        if let savingsPlanOfferingIds = savingsPlanOfferingIds {
            var savingsPlanOfferingIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .savingsPlanOfferingIds)
            for uuids0 in savingsPlanOfferingIds {
                try savingsPlanOfferingIdsContainer.encode(uuids0)
            }
        }
        if let savingsPlanPaymentOptions = savingsPlanPaymentOptions {
            var savingsPlanPaymentOptionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .savingsPlanPaymentOptions)
            for savingsplanpaymentoptionlist0 in savingsPlanPaymentOptions {
                try savingsPlanPaymentOptionsContainer.encode(savingsplanpaymentoptionlist0.rawValue)
            }
        }
        if let savingsPlanTypes = savingsPlanTypes {
            var savingsPlanTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .savingsPlanTypes)
            for savingsplantypelist0 in savingsPlanTypes {
                try savingsPlanTypesContainer.encode(savingsplantypelist0.rawValue)
            }
        }
        if let serviceCodes = serviceCodes {
            var serviceCodesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .serviceCodes)
            for savingsplanrateservicecodelist0 in serviceCodes {
                try serviceCodesContainer.encode(savingsplanrateservicecodelist0.rawValue)
            }
        }
        if let usageTypes = usageTypes {
            var usageTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .usageTypes)
            for savingsplanrateusagetypelist0 in usageTypes {
                try usageTypesContainer.encode(savingsplanrateusagetypelist0)
            }
        }
    }
}
