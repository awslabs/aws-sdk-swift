// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>Amazon Cloud Directory</fullname>
///          <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the
///       development and management of cloud-scale web, mobile, and IoT applications. This guide
///       describes the Cloud Directory operations that you can call programmatically and includes
///       detailed information on data types and errors. For information about Cloud Directory features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory
///         Service</a> and the <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html">Amazon Cloud Directory Developer Guide</a>.</p>
public protocol CloudDirectoryClientProtocol {
    /// <p>Adds a new <a>Facet</a> to an object. An object can have more than one facet applied on it.</p>
    func addFacetToObject(input: AddFacetToObjectInput, completion: @escaping (SdkResult<AddFacetToObjectOutputResponse, AddFacetToObjectOutputError>) -> Void)
    /// <p>Copies the input published schema, at the specified version, into the <a>Directory</a> with the same
    ///       name and version as that of the published schema.</p>
    func applySchema(input: ApplySchemaInput, completion: @escaping (SdkResult<ApplySchemaOutputResponse, ApplySchemaOutputError>) -> Void)
    /// <p>Attaches an existing object to another object. An object can be accessed in two
    ///       ways:</p>
    ///          <ol>
    ///             <li>
    ///                <p>Using the path</p>
    ///             </li>
    ///             <li>
    ///                <p>Using <code>ObjectIdentifier</code>
    ///                </p>
    ///             </li>
    ///          </ol>
    func attachObject(input: AttachObjectInput, completion: @escaping (SdkResult<AttachObjectOutputResponse, AttachObjectOutputError>) -> Void)
    /// <p>Attaches a policy object to a regular object. An object can have a limited number of attached
    ///       policies.</p>
    func attachPolicy(input: AttachPolicyInput, completion: @escaping (SdkResult<AttachPolicyOutputResponse, AttachPolicyOutputError>) -> Void)
    /// <p>Attaches the specified object to the specified index.</p>
    func attachToIndex(input: AttachToIndexInput, completion: @escaping (SdkResult<AttachToIndexOutputResponse, AttachToIndexOutputError>) -> Void)
    /// <p>Attaches a typed link to a specified source and target object. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func attachTypedLink(input: AttachTypedLinkInput, completion: @escaping (SdkResult<AttachTypedLinkOutputResponse, AttachTypedLinkOutputError>) -> Void)
    /// <p>Performs all the read operations in a batch. </p>
    func batchRead(input: BatchReadInput, completion: @escaping (SdkResult<BatchReadOutputResponse, BatchReadOutputError>) -> Void)
    /// <p>Performs all the write operations in a batch. Either all the operations succeed or
    ///       none.</p>
    func batchWrite(input: BatchWriteInput, completion: @escaping (SdkResult<BatchWriteOutputResponse, BatchWriteOutputError>) -> Void)
    /// <p>Creates a <a>Directory</a> by copying the published schema into the
    ///       directory. A directory cannot be created without a schema.</p>
    ///          <p>You can also quickly create a directory using a managed schema, called the
    ///         <code>QuickStartSchema</code>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html">Managed Schema</a> in the <i>Amazon Cloud Directory Developer Guide</i>.</p>
    func createDirectory(input: CreateDirectoryInput, completion: @escaping (SdkResult<CreateDirectoryOutputResponse, CreateDirectoryOutputError>) -> Void)
    /// <p>Creates a new <a>Facet</a> in a schema. Facet creation is allowed only
    ///       in development or applied schemas.</p>
    func createFacet(input: CreateFacetInput, completion: @escaping (SdkResult<CreateFacetOutputResponse, CreateFacetOutputError>) -> Void)
    /// <p>Creates an index object. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html">Indexing and search</a> for more information.</p>
    func createIndex(input: CreateIndexInput, completion: @escaping (SdkResult<CreateIndexOutputResponse, CreateIndexOutputError>) -> Void)
    /// <p>Creates an object in a <a>Directory</a>. Additionally attaches the object to
    ///       a parent, if a parent reference and <code>LinkName</code> is specified. An object is simply a
    ///       collection of <a>Facet</a> attributes. You can also use this API call to create a
    ///       policy object, if the facet from which you create the object is a policy facet. </p>
    func createObject(input: CreateObjectInput, completion: @escaping (SdkResult<CreateObjectOutputResponse, CreateObjectOutputError>) -> Void)
    /// <p>Creates a new schema in a development state. A schema can exist in three
    ///       phases:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <i>Development:</i> This is a mutable phase of the schema. All new
    ///           schemas are in the development phase. Once the schema is finalized, it can be
    ///           published.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <i>Published:</i> Published schemas are immutable and have a version
    ///           associated with them.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <i>Applied:</i> Applied schemas are mutable in a way that allows you
    ///           to add new schema facets. You can also add new, nonrequired attributes to existing schema
    ///           facets. You can apply only published schemas to directories. </p>
    ///             </li>
    ///          </ul>
    func createSchema(input: CreateSchemaInput, completion: @escaping (SdkResult<CreateSchemaOutputResponse, CreateSchemaOutputError>) -> Void)
    /// <p>Creates a <a>TypedLinkFacet</a>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func createTypedLinkFacet(input: CreateTypedLinkFacetInput, completion: @escaping (SdkResult<CreateTypedLinkFacetOutputResponse, CreateTypedLinkFacetOutputError>) -> Void)
    /// <p>Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme
    ///         caution
    ///         when deleting directories.</p>
    func deleteDirectory(input: DeleteDirectoryInput, completion: @escaping (SdkResult<DeleteDirectoryOutputResponse, DeleteDirectoryOutputError>) -> Void)
    /// <p>Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s
    ///       that are associated with the facet will be deleted. Only development schema facets are allowed
    ///       deletion.</p>
    func deleteFacet(input: DeleteFacetInput, completion: @escaping (SdkResult<DeleteFacetOutputResponse, DeleteFacetOutputError>) -> Void)
    /// <p>Deletes an object and its associated attributes. Only objects with no children and no
    ///       parents can be deleted. The maximum number of attributes that can be deleted during an object deletion is 30. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html">Amazon Cloud Directory Limits</a>.</p>
    func deleteObject(input: DeleteObjectInput, completion: @escaping (SdkResult<DeleteObjectOutputResponse, DeleteObjectOutputError>) -> Void)
    /// <p>Deletes a given schema. Schemas in a development and published state can only be deleted. </p>
    func deleteSchema(input: DeleteSchemaInput, completion: @escaping (SdkResult<DeleteSchemaOutputResponse, DeleteSchemaOutputError>) -> Void)
    /// <p>Deletes a <a>TypedLinkFacet</a>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func deleteTypedLinkFacet(input: DeleteTypedLinkFacetInput, completion: @escaping (SdkResult<DeleteTypedLinkFacetOutputResponse, DeleteTypedLinkFacetOutputError>) -> Void)
    /// <p>Detaches the specified object from the specified index.</p>
    func detachFromIndex(input: DetachFromIndexInput, completion: @escaping (SdkResult<DetachFromIndexOutputResponse, DetachFromIndexOutputError>) -> Void)
    /// <p>Detaches a given object from the parent object. The object that is to be detached from the
    ///       parent is specified by the link name.</p>
    func detachObject(input: DetachObjectInput, completion: @escaping (SdkResult<DetachObjectOutputResponse, DetachObjectOutputError>) -> Void)
    /// <p>Detaches a policy from an object.</p>
    func detachPolicy(input: DetachPolicyInput, completion: @escaping (SdkResult<DetachPolicyOutputResponse, DetachPolicyOutputError>) -> Void)
    /// <p>Detaches a typed link from a specified source and target object. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func detachTypedLink(input: DetachTypedLinkInput, completion: @escaping (SdkResult<DetachTypedLinkOutputResponse, DetachTypedLinkOutputError>) -> Void)
    /// <p>Disables the specified directory. Disabled directories cannot be read or written to.
    ///       Only enabled directories can be disabled. Disabled directories may be reenabled.</p>
    func disableDirectory(input: DisableDirectoryInput, completion: @escaping (SdkResult<DisableDirectoryOutputResponse, DisableDirectoryOutputError>) -> Void)
    /// <p>Enables the specified directory. Only disabled directories can be enabled. Once
    ///       enabled, the directory can then be read and written to.</p>
    func enableDirectory(input: EnableDirectoryInput, completion: @escaping (SdkResult<EnableDirectoryOutputResponse, EnableDirectoryOutputError>) -> Void)
    /// <p>Returns current applied schema version ARN, including the minor version in use.</p>
    func getAppliedSchemaVersion(input: GetAppliedSchemaVersionInput, completion: @escaping (SdkResult<GetAppliedSchemaVersionOutputResponse, GetAppliedSchemaVersionOutputError>) -> Void)
    /// <p>Retrieves metadata about a directory.</p>
    func getDirectory(input: GetDirectoryInput, completion: @escaping (SdkResult<GetDirectoryOutputResponse, GetDirectoryOutputError>) -> Void)
    /// <p>Gets details of the <a>Facet</a>, such as facet name, attributes, <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds of schema
    ///       facets -- published, development, or applied.</p>
    func getFacet(input: GetFacetInput, completion: @escaping (SdkResult<GetFacetOutputResponse, GetFacetOutputError>) -> Void)
    /// <p>Retrieves attributes that are associated with a typed link.</p>
    func getLinkAttributes(input: GetLinkAttributesInput, completion: @escaping (SdkResult<GetLinkAttributesOutputResponse, GetLinkAttributesOutputError>) -> Void)
    /// <p>Retrieves attributes within a facet that are associated with an object.</p>
    func getObjectAttributes(input: GetObjectAttributesInput, completion: @escaping (SdkResult<GetObjectAttributesOutputResponse, GetObjectAttributesOutputError>) -> Void)
    /// <p>Retrieves metadata about an object.</p>
    func getObjectInformation(input: GetObjectInformationInput, completion: @escaping (SdkResult<GetObjectInformationOutputResponse, GetObjectInformationOutputError>) -> Void)
    /// <p>Retrieves a JSON representation of the schema. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON Schema Format</a> for more information.</p>
    func getSchemaAsJson(input: GetSchemaAsJsonInput, completion: @escaping (SdkResult<GetSchemaAsJsonOutputResponse, GetSchemaAsJsonOutputError>) -> Void)
    /// <p>Returns the identity attribute order for a specific <a>TypedLinkFacet</a>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func getTypedLinkFacetInformation(input: GetTypedLinkFacetInformationInput, completion: @escaping (SdkResult<GetTypedLinkFacetInformationOutputResponse, GetTypedLinkFacetInformationOutputError>) -> Void)
    /// <p>Lists schema major versions applied to a directory. If <code>SchemaArn</code> is provided, lists the minor version.</p>
    func listAppliedSchemaArns(input: ListAppliedSchemaArnsInput, completion: @escaping (SdkResult<ListAppliedSchemaArnsOutputResponse, ListAppliedSchemaArnsOutputError>) -> Void)
    /// <p>Lists indices attached to the specified object.</p>
    func listAttachedIndices(input: ListAttachedIndicesInput, completion: @escaping (SdkResult<ListAttachedIndicesOutputResponse, ListAttachedIndicesOutputError>) -> Void)
    /// <p>Retrieves each Amazon Resource Name (ARN) of schemas in the development
    ///       state.</p>
    func listDevelopmentSchemaArns(input: ListDevelopmentSchemaArnsInput, completion: @escaping (SdkResult<ListDevelopmentSchemaArnsOutputResponse, ListDevelopmentSchemaArnsOutputError>) -> Void)
    /// <p>Lists directories created within an account.</p>
    func listDirectories(input: ListDirectoriesInput, completion: @escaping (SdkResult<ListDirectoriesOutputResponse, ListDirectoriesOutputError>) -> Void)
    /// <p>Retrieves attributes attached to the facet.</p>
    func listFacetAttributes(input: ListFacetAttributesInput, completion: @escaping (SdkResult<ListFacetAttributesOutputResponse, ListFacetAttributesOutputError>) -> Void)
    /// <p>Retrieves the names of facets that exist in a schema.</p>
    func listFacetNames(input: ListFacetNamesInput, completion: @escaping (SdkResult<ListFacetNamesOutputResponse, ListFacetNamesOutputError>) -> Void)
    /// <p>Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>
    ///       information for an object. It also supports filtering by typed link facet and identity
    ///       attributes. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func listIncomingTypedLinks(input: ListIncomingTypedLinksInput, completion: @escaping (SdkResult<ListIncomingTypedLinksOutputResponse, ListIncomingTypedLinksOutputError>) -> Void)
    /// <p>Lists objects attached to the specified index.</p>
    func listIndex(input: ListIndexInput, completion: @escaping (SdkResult<ListIndexOutputResponse, ListIndexOutputError>) -> Void)
    /// <p>Lists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor version revisions in that family are listed instead.</p>
    func listManagedSchemaArns(input: ListManagedSchemaArnsInput, completion: @escaping (SdkResult<ListManagedSchemaArnsOutputResponse, ListManagedSchemaArnsOutputError>) -> Void)
    /// <p>Lists all attributes that are associated with an object.
    ///       </p>
    func listObjectAttributes(input: ListObjectAttributesInput, completion: @escaping (SdkResult<ListObjectAttributesOutputResponse, ListObjectAttributesOutputError>) -> Void)
    /// <p>Returns a paginated list of child objects that are associated with a given
    ///       object.</p>
    func listObjectChildren(input: ListObjectChildrenInput, completion: @escaping (SdkResult<ListObjectChildrenOutputResponse, ListObjectChildrenOutputError>) -> Void)
    /// <p>Retrieves all available parent paths for any object type such as node, leaf node,
    ///       policy node, and index node objects. For more information about objects, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html">Directory Structure</a>.</p>
    ///          <p>Use this API to evaluate all parents for an object. The call returns all objects from
    ///       the root of the directory up to the requested object. The API returns the number of paths
    ///       based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent.
    ///       The order of the paths and nodes returned is consistent among multiple API calls unless the
    ///       objects are deleted or moved. Paths not leading to the directory root are ignored from the
    ///       target object.</p>
    func listObjectParentPaths(input: ListObjectParentPathsInput, completion: @escaping (SdkResult<ListObjectParentPathsOutputResponse, ListObjectParentPathsOutputError>) -> Void)
    /// <p>Lists parent objects that are associated with a given object in pagination
    ///       fashion.</p>
    func listObjectParents(input: ListObjectParentsInput, completion: @escaping (SdkResult<ListObjectParentsOutputResponse, ListObjectParentsOutputError>) -> Void)
    /// <p>Returns policies attached to an object in pagination fashion.</p>
    func listObjectPolicies(input: ListObjectPoliciesInput, completion: @escaping (SdkResult<ListObjectPoliciesOutputResponse, ListObjectPoliciesOutputError>) -> Void)
    /// <p>Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>
    ///       information for an object. It also supports filtering by typed link facet and identity
    ///       attributes. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func listOutgoingTypedLinks(input: ListOutgoingTypedLinksInput, completion: @escaping (SdkResult<ListOutgoingTypedLinksOutputResponse, ListOutgoingTypedLinksOutputError>) -> Void)
    /// <p>Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.</p>
    func listPolicyAttachments(input: ListPolicyAttachmentsInput, completion: @escaping (SdkResult<ListPolicyAttachmentsOutputResponse, ListPolicyAttachmentsOutputError>) -> Void)
    /// <p>Lists the major version families of each published schema. If a major version ARN is provided as <code>SchemaArn</code>, the minor version revisions in that family are listed instead.</p>
    func listPublishedSchemaArns(input: ListPublishedSchemaArnsInput, completion: @escaping (SdkResult<ListPublishedSchemaArnsOutputResponse, ListPublishedSchemaArnsOutputError>) -> Void)
    /// <p>Returns tags for a resource. Tagging is currently supported only for directories with a
    ///       limit of 50 tags per directory. All 50 tags are returned for a given directory with this API
    ///       call.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Returns a paginated list of all attribute definitions for a particular <a>TypedLinkFacet</a>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func listTypedLinkFacetAttributes(input: ListTypedLinkFacetAttributesInput, completion: @escaping (SdkResult<ListTypedLinkFacetAttributesOutputResponse, ListTypedLinkFacetAttributesOutputError>) -> Void)
    /// <p>Returns a paginated list of <code>TypedLink</code> facet names for a particular schema.
    ///       For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func listTypedLinkFacetNames(input: ListTypedLinkFacetNamesInput, completion: @escaping (SdkResult<ListTypedLinkFacetNamesOutputResponse, ListTypedLinkFacetNamesOutputError>) -> Void)
    /// <p>Lists all policies from the root of the <a>Directory</a> to the object
    ///       specified. If there are no policies present, an empty list is returned. If policies are
    ///       present, and if some objects don't have the policies attached, it returns the <code>ObjectIdentifier</code>
    ///       for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and
    ///       <code>policyType</code>. Paths that don't lead to the root from the target object are ignored. For more
    ///       information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies">Policies</a>.</p>
    func lookupPolicy(input: LookupPolicyInput, completion: @escaping (SdkResult<LookupPolicyOutputResponse, LookupPolicyOutputError>) -> Void)
    /// <p>Publishes a development schema with a major version and a recommended minor version.</p>
    func publishSchema(input: PublishSchemaInput, completion: @escaping (SdkResult<PublishSchemaOutputResponse, PublishSchemaOutputError>) -> Void)
    /// <p>Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON Schema Format</a> for more information.</p>
    func putSchemaFromJson(input: PutSchemaFromJsonInput, completion: @escaping (SdkResult<PutSchemaFromJsonOutputResponse, PutSchemaFromJsonOutputError>) -> Void)
    /// <p>Removes the specified facet from the specified object.</p>
    func removeFacetFromObject(input: RemoveFacetFromObjectInput, completion: @escaping (SdkResult<RemoveFacetFromObjectOutputResponse, RemoveFacetFromObjectOutputError>) -> Void)
    /// <p>An API operation for adding tags to a resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>An API operation for removing tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Does the following:</p>
    ///          <ol>
    ///             <li>
    ///                <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p>
    ///             </li>
    ///          </ol>
    func updateFacet(input: UpdateFacetInput, completion: @escaping (SdkResult<UpdateFacetOutputResponse, UpdateFacetOutputError>) -> Void)
    /// <p>Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its <code>IdentityAttributeOrder</code>.</p>
    func updateLinkAttributes(input: UpdateLinkAttributesInput, completion: @escaping (SdkResult<UpdateLinkAttributesOutputResponse, UpdateLinkAttributesOutputError>) -> Void)
    /// <p>Updates a given object's attributes.</p>
    func updateObjectAttributes(input: UpdateObjectAttributesInput, completion: @escaping (SdkResult<UpdateObjectAttributesOutputResponse, UpdateObjectAttributesOutputError>) -> Void)
    /// <p>Updates the schema name with a new name. Only development schema names can be
    ///       updated.</p>
    func updateSchema(input: UpdateSchemaInput, completion: @escaping (SdkResult<UpdateSchemaOutputResponse, UpdateSchemaOutputError>) -> Void)
    /// <p>Updates a <a>TypedLinkFacet</a>. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    func updateTypedLinkFacet(input: UpdateTypedLinkFacetInput, completion: @escaping (SdkResult<UpdateTypedLinkFacetOutputResponse, UpdateTypedLinkFacetOutputError>) -> Void)
    /// <p>Upgrades a single directory in-place using the <code>PublishedSchemaArn</code> with schema updates found in <code>MinorVersion</code>. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.</p>
    func upgradeAppliedSchema(input: UpgradeAppliedSchemaInput, completion: @escaping (SdkResult<UpgradeAppliedSchemaOutputResponse, UpgradeAppliedSchemaOutputError>) -> Void)
    /// <p>Upgrades a published schema under a new minor version revision using the current contents of <code>DevelopmentSchemaArn</code>.</p>
    func upgradePublishedSchema(input: UpgradePublishedSchemaInput, completion: @escaping (SdkResult<UpgradePublishedSchemaOutputResponse, UpgradePublishedSchemaOutputError>) -> Void)
}
