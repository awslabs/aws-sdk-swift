// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateObjectAttributesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attributeUpdates = "AttributeUpdates"
        case objectReference = "ObjectReference"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributeUpdates = attributeUpdates {
            var attributeUpdatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attributeUpdates)
            for objectattributeupdatelist0 in attributeUpdates {
                try attributeUpdatesContainer.encode(objectattributeupdatelist0)
            }
        }
        if let objectReference = objectReference {
            try encodeContainer.encode(objectReference, forKey: .objectReference)
        }
    }
}
