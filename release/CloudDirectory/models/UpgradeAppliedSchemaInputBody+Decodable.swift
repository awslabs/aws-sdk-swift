// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpgradeAppliedSchemaInputBody: Equatable {
    public let publishedSchemaArn: String?
    public let directoryArn: String?
    public let dryRun: Bool
}

extension UpgradeAppliedSchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryArn = "DirectoryArn"
        case dryRun = "DryRun"
        case publishedSchemaArn = "PublishedSchemaArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publishedSchemaArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .publishedSchemaArn)
        publishedSchemaArn = publishedSchemaArnDecoded
        let directoryArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directoryArn)
        directoryArn = directoryArnDecoded
        let dryRunDecoded = try containerValues.decode(Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
