// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchAttachObjectResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attachedObjectIdentifier
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachedObjectIdentifier = attachedObjectIdentifier {
            try encodeContainer.encode(attachedObjectIdentifier, forKey: .attachedObjectIdentifier)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attachedObjectIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .attachedObjectIdentifier)
        attachedObjectIdentifier = attachedObjectIdentifierDecoded
    }
}
