// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListObjectParentsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case includeAllLinksToEachParent = "IncludeAllLinksToEachParent"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case objectReference = "ObjectReference"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if includeAllLinksToEachParent != false {
            try encodeContainer.encode(includeAllLinksToEachParent, forKey: .includeAllLinksToEachParent)
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let objectReference = objectReference {
            try encodeContainer.encode(objectReference, forKey: .objectReference)
        }
    }
}
