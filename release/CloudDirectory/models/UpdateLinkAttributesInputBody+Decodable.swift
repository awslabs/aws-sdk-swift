// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLinkAttributesInputBody: Equatable {
    public let typedLinkSpecifier: TypedLinkSpecifier?
    public let attributeUpdates: [LinkAttributeUpdate]?
}

extension UpdateLinkAttributesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeUpdates = "AttributeUpdates"
        case typedLinkSpecifier = "TypedLinkSpecifier"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typedLinkSpecifierDecoded = try containerValues.decodeIfPresent(TypedLinkSpecifier.self, forKey: .typedLinkSpecifier)
        typedLinkSpecifier = typedLinkSpecifierDecoded
        let attributeUpdatesContainer = try containerValues.decodeIfPresent([LinkAttributeUpdate].self, forKey: .attributeUpdates)
        var attributeUpdatesDecoded0:[LinkAttributeUpdate]? = nil
        if let attributeUpdatesContainer = attributeUpdatesContainer {
            attributeUpdatesDecoded0 = [LinkAttributeUpdate]()
            for structure0 in attributeUpdatesContainer {
                attributeUpdatesDecoded0?.append(structure0)
            }
        }
        attributeUpdates = attributeUpdatesDecoded0
    }
}
