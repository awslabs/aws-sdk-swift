// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListObjectChildrenOutputBody: Equatable {
    public let children: [String:String]?
    public let nextToken: String?
}

extension ListObjectChildrenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case children = "Children"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let childrenContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .children)
        var childrenDecoded0: [String:String]? = nil
        if let childrenContainer = childrenContainer {
            childrenDecoded0 = [String:String]()
            for (key0, objectidentifier0) in childrenContainer {
                childrenDecoded0?[key0] = objectidentifier0
            }
        }
        children = childrenDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
