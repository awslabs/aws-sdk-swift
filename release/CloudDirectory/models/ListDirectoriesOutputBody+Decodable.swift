// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDirectoriesOutputBody: Equatable {
    public let directories: [Directory]?
    public let nextToken: String?
}

extension ListDirectoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directories = "Directories"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoriesContainer = try containerValues.decodeIfPresent([Directory].self, forKey: .directories)
        var directoriesDecoded0:[Directory]? = nil
        if let directoriesContainer = directoriesContainer {
            directoriesDecoded0 = [Directory]()
            for structure0 in directoriesContainer {
                directoriesDecoded0?.append(structure0)
            }
        }
        directories = directoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
