// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFacetAttributesOutputBody: Equatable {
    public let attributes: [FacetAttribute]?
    public let nextToken: String?
}

extension ListFacetAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributes = "Attributes"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributesContainer = try containerValues.decodeIfPresent([FacetAttribute].self, forKey: .attributes)
        var attributesDecoded0:[FacetAttribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [FacetAttribute]()
            for structure0 in attributesContainer {
                attributesDecoded0?.append(structure0)
            }
        }
        attributes = attributesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
