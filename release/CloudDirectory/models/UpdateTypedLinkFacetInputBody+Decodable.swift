// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTypedLinkFacetInputBody: Equatable {
    public let name: String?
    public let attributeUpdates: [TypedLinkFacetAttributeUpdate]?
    public let identityAttributeOrder: [String]?
}

extension UpdateTypedLinkFacetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeUpdates = "AttributeUpdates"
        case identityAttributeOrder = "IdentityAttributeOrder"
        case name = "Name"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let attributeUpdatesContainer = try containerValues.decodeIfPresent([TypedLinkFacetAttributeUpdate].self, forKey: .attributeUpdates)
        var attributeUpdatesDecoded0:[TypedLinkFacetAttributeUpdate]? = nil
        if let attributeUpdatesContainer = attributeUpdatesContainer {
            attributeUpdatesDecoded0 = [TypedLinkFacetAttributeUpdate]()
            for structure0 in attributeUpdatesContainer {
                attributeUpdatesDecoded0?.append(structure0)
            }
        }
        attributeUpdates = attributeUpdatesDecoded0
        let identityAttributeOrderContainer = try containerValues.decodeIfPresent([String].self, forKey: .identityAttributeOrder)
        var identityAttributeOrderDecoded0:[String]? = nil
        if let identityAttributeOrderContainer = identityAttributeOrderContainer {
            identityAttributeOrderDecoded0 = [String]()
            for string0 in identityAttributeOrderContainer {
                identityAttributeOrderDecoded0?.append(string0)
            }
        }
        identityAttributeOrder = identityAttributeOrderDecoded0
    }
}
