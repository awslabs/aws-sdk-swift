// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchDeleteObject: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case objectReference = "ObjectReference"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let objectReference = objectReference {
            try encodeContainer.encode(objectReference, forKey: .objectReference)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectReferenceDecoded = try containerValues.decodeIfPresent(ObjectReference.self, forKey: .objectReference)
        objectReference = objectReferenceDecoded
    }
}
