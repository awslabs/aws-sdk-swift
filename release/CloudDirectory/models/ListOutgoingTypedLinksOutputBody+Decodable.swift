// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOutgoingTypedLinksOutputBody: Equatable {
    public let typedLinkSpecifiers: [TypedLinkSpecifier]?
    public let nextToken: String?
}

extension ListOutgoingTypedLinksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case typedLinkSpecifiers = "TypedLinkSpecifiers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typedLinkSpecifiersContainer = try containerValues.decodeIfPresent([TypedLinkSpecifier].self, forKey: .typedLinkSpecifiers)
        var typedLinkSpecifiersDecoded0:[TypedLinkSpecifier]? = nil
        if let typedLinkSpecifiersContainer = typedLinkSpecifiersContainer {
            typedLinkSpecifiersDecoded0 = [TypedLinkSpecifier]()
            for structure0 in typedLinkSpecifiersContainer {
                typedLinkSpecifiersDecoded0?.append(structure0)
            }
        }
        typedLinkSpecifiers = typedLinkSpecifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
