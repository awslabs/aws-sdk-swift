// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the output of a <code>BatchWrite</code> operation. </p>
public struct BatchWriteOperation: Equatable {
    /// <p>A batch operation that adds a facet to an object.</p>
    public let addFacetToObject: BatchAddFacetToObject?
    /// <p>Attaches an object to a <a>Directory</a>.</p>
    public let attachObject: BatchAttachObject?
    /// <p>Attaches a policy object to a regular object. An object can have a limited number of attached
    ///        policies.</p>
    public let attachPolicy: BatchAttachPolicy?
    /// <p>Attaches the specified object to the specified index.</p>
    public let attachToIndex: BatchAttachToIndex?
    /// <p>Attaches a typed link to a specified source and target object. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    public let attachTypedLink: BatchAttachTypedLink?
    /// <p>Creates an index object. See <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm">Indexing and search</a> for more information.</p>
    public let createIndex: BatchCreateIndex?
    /// <p>Creates an object.</p>
    public let createObject: BatchCreateObject?
    /// <p>Deletes an object in a <a>Directory</a>.</p>
    public let deleteObject: BatchDeleteObject?
    /// <p>Detaches the specified object from the specified index.</p>
    public let detachFromIndex: BatchDetachFromIndex?
    /// <p>Detaches an object from a <a>Directory</a>.</p>
    public let detachObject: BatchDetachObject?
    /// <p>Detaches a policy from a <a>Directory</a>.</p>
    public let detachPolicy: BatchDetachPolicy?
    /// <p>Detaches a typed link from a specified source and target object. For more information, see <a href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed Links</a>.</p>
    public let detachTypedLink: BatchDetachTypedLink?
    /// <p>A batch operation that removes a facet from an object.</p>
    public let removeFacetFromObject: BatchRemoveFacetFromObject?
    /// <p>Updates a given object's attributes.</p>
    public let updateLinkAttributes: BatchUpdateLinkAttributes?
    /// <p>Updates a given object's attributes.</p>
    public let updateObjectAttributes: BatchUpdateObjectAttributes?

    public init (
        addFacetToObject: BatchAddFacetToObject? = nil,
        attachObject: BatchAttachObject? = nil,
        attachPolicy: BatchAttachPolicy? = nil,
        attachToIndex: BatchAttachToIndex? = nil,
        attachTypedLink: BatchAttachTypedLink? = nil,
        createIndex: BatchCreateIndex? = nil,
        createObject: BatchCreateObject? = nil,
        deleteObject: BatchDeleteObject? = nil,
        detachFromIndex: BatchDetachFromIndex? = nil,
        detachObject: BatchDetachObject? = nil,
        detachPolicy: BatchDetachPolicy? = nil,
        detachTypedLink: BatchDetachTypedLink? = nil,
        removeFacetFromObject: BatchRemoveFacetFromObject? = nil,
        updateLinkAttributes: BatchUpdateLinkAttributes? = nil,
        updateObjectAttributes: BatchUpdateObjectAttributes? = nil
    )
    {
        self.addFacetToObject = addFacetToObject
        self.attachObject = attachObject
        self.attachPolicy = attachPolicy
        self.attachToIndex = attachToIndex
        self.attachTypedLink = attachTypedLink
        self.createIndex = createIndex
        self.createObject = createObject
        self.deleteObject = deleteObject
        self.detachFromIndex = detachFromIndex
        self.detachObject = detachObject
        self.detachPolicy = detachPolicy
        self.detachTypedLink = detachTypedLink
        self.removeFacetFromObject = removeFacetFromObject
        self.updateLinkAttributes = updateLinkAttributes
        self.updateObjectAttributes = updateObjectAttributes
    }
}
