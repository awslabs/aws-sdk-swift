// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateFacetInputBody: Equatable {
    public let name: String?
    public let attributes: [FacetAttribute]?
    public let objectType: ObjectType?
    public let facetStyle: FacetStyle?
}

extension CreateFacetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributes = "Attributes"
        case facetStyle = "FacetStyle"
        case name = "Name"
        case objectType = "ObjectType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let attributesContainer = try containerValues.decodeIfPresent([FacetAttribute].self, forKey: .attributes)
        var attributesDecoded0:[FacetAttribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [FacetAttribute]()
            for structure0 in attributesContainer {
                attributesDecoded0?.append(structure0)
            }
        }
        attributes = attributesDecoded0
        let objectTypeDecoded = try containerValues.decodeIfPresent(ObjectType.self, forKey: .objectType)
        objectType = objectTypeDecoded
        let facetStyleDecoded = try containerValues.decodeIfPresent(FacetStyle.self, forKey: .facetStyle)
        facetStyle = facetStyleDecoded
    }
}
