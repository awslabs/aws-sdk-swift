// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFacetInputBody: Equatable {
    public let name: String?
    public let attributeUpdates: [FacetAttributeUpdate]?
    public let objectType: ObjectType?
}

extension UpdateFacetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeUpdates = "AttributeUpdates"
        case name = "Name"
        case objectType = "ObjectType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let attributeUpdatesContainer = try containerValues.decodeIfPresent([FacetAttributeUpdate].self, forKey: .attributeUpdates)
        var attributeUpdatesDecoded0:[FacetAttributeUpdate]? = nil
        if let attributeUpdatesContainer = attributeUpdatesContainer {
            attributeUpdatesDecoded0 = [FacetAttributeUpdate]()
            for structure0 in attributeUpdatesContainer {
                attributeUpdatesDecoded0?.append(structure0)
            }
        }
        attributeUpdates = attributeUpdatesDecoded0
        let objectTypeDecoded = try containerValues.decodeIfPresent(ObjectType.self, forKey: .objectType)
        objectType = objectTypeDecoded
    }
}
