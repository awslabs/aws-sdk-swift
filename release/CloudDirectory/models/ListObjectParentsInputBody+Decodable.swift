// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListObjectParentsInputBody: Equatable {
    public let objectReference: ObjectReference?
    public let nextToken: String?
    public let maxResults: Int?
    public let includeAllLinksToEachParent: Bool
}

extension ListObjectParentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case includeAllLinksToEachParent = "IncludeAllLinksToEachParent"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case objectReference = "ObjectReference"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectReferenceDecoded = try containerValues.decodeIfPresent(ObjectReference.self, forKey: .objectReference)
        objectReference = objectReferenceDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let includeAllLinksToEachParentDecoded = try containerValues.decode(Bool.self, forKey: .includeAllLinksToEachParent)
        includeAllLinksToEachParent = includeAllLinksToEachParentDecoded
    }
}
