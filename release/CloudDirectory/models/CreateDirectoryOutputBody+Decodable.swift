// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDirectoryOutputBody: Equatable {
    public let directoryArn: String?
    public let name: String?
    public let objectIdentifier: String?
    public let appliedSchemaArn: String?
}

extension CreateDirectoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appliedSchemaArn = "AppliedSchemaArn"
        case directoryArn = "DirectoryArn"
        case name = "Name"
        case objectIdentifier = "ObjectIdentifier"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directoryArn)
        directoryArn = directoryArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let objectIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectIdentifier)
        objectIdentifier = objectIdentifierDecoded
        let appliedSchemaArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appliedSchemaArn)
        appliedSchemaArn = appliedSchemaArnDecoded
    }
}
