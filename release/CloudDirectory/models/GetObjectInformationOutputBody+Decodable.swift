// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetObjectInformationOutputBody: Equatable {
    public let schemaFacets: [SchemaFacet]?
    public let objectIdentifier: String?
}

extension GetObjectInformationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case objectIdentifier = "ObjectIdentifier"
        case schemaFacets = "SchemaFacets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaFacetsContainer = try containerValues.decodeIfPresent([SchemaFacet].self, forKey: .schemaFacets)
        var schemaFacetsDecoded0:[SchemaFacet]? = nil
        if let schemaFacetsContainer = schemaFacetsContainer {
            schemaFacetsDecoded0 = [SchemaFacet]()
            for structure0 in schemaFacetsContainer {
                schemaFacetsDecoded0?.append(structure0)
            }
        }
        schemaFacets = schemaFacetsDecoded0
        let objectIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectIdentifier)
        objectIdentifier = objectIdentifierDecoded
    }
}
