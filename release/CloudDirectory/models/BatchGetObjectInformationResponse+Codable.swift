// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchGetObjectInformationResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case objectIdentifier = "ObjectIdentifier"
        case schemaFacets = "SchemaFacets"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let objectIdentifier = objectIdentifier {
            try encodeContainer.encode(objectIdentifier, forKey: .objectIdentifier)
        }
        if let schemaFacets = schemaFacets {
            var schemaFacetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .schemaFacets)
            for schemafacetlist0 in schemaFacets {
                try schemaFacetsContainer.encode(schemafacetlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaFacetsContainer = try containerValues.decodeIfPresent([SchemaFacet].self, forKey: .schemaFacets)
        var schemaFacetsDecoded0:[SchemaFacet]? = nil
        if let schemaFacetsContainer = schemaFacetsContainer {
            schemaFacetsDecoded0 = [SchemaFacet]()
            for structure0 in schemaFacetsContainer {
                schemaFacetsDecoded0?.append(structure0)
            }
        }
        schemaFacets = schemaFacetsDecoded0
        let objectIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectIdentifier)
        objectIdentifier = objectIdentifierDecoded
    }
}
