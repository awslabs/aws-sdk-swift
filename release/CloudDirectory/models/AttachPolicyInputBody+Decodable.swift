// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachPolicyInputBody: Equatable {
    public let policyReference: ObjectReference?
    public let objectReference: ObjectReference?
}

extension AttachPolicyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case objectReference = "ObjectReference"
        case policyReference = "PolicyReference"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyReferenceDecoded = try containerValues.decodeIfPresent(ObjectReference.self, forKey: .policyReference)
        policyReference = policyReferenceDecoded
        let objectReferenceDecoded = try containerValues.decodeIfPresent(ObjectReference.self, forKey: .objectReference)
        objectReference = objectReferenceDecoded
    }
}
