// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpgradePublishedSchemaInput: Equatable {
    /// <p>The ARN of the development schema with the changes used for the upgrade.</p>
    public let developmentSchemaArn: String?
    /// <p>Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.</p>
    public let dryRun: Bool
    /// <p>Identifies the minor version of the published schema that will be created. This parameter is NOT optional.</p>
    public let minorVersion: String?
    /// <p>The ARN of the published schema to be upgraded.</p>
    public let publishedSchemaArn: String?

    public init (
        developmentSchemaArn: String? = nil,
        dryRun: Bool = false,
        minorVersion: String? = nil,
        publishedSchemaArn: String? = nil
    )
    {
        self.developmentSchemaArn = developmentSchemaArn
        self.dryRun = dryRun
        self.minorVersion = minorVersion
        self.publishedSchemaArn = publishedSchemaArn
    }
}
