// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLinkAttributesInputBody: Equatable {
    public let typedLinkSpecifier: TypedLinkSpecifier?
    public let attributeNames: [String]?
    public let consistencyLevel: ConsistencyLevel?
}

extension GetLinkAttributesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributeNames = "AttributeNames"
        case consistencyLevel = "ConsistencyLevel"
        case typedLinkSpecifier = "TypedLinkSpecifier"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typedLinkSpecifierDecoded = try containerValues.decodeIfPresent(TypedLinkSpecifier.self, forKey: .typedLinkSpecifier)
        typedLinkSpecifier = typedLinkSpecifierDecoded
        let attributeNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .attributeNames)
        var attributeNamesDecoded0:[String]? = nil
        if let attributeNamesContainer = attributeNamesContainer {
            attributeNamesDecoded0 = [String]()
            for string0 in attributeNamesContainer {
                attributeNamesDecoded0?.append(string0)
            }
        }
        attributeNames = attributeNamesDecoded0
        let consistencyLevelDecoded = try containerValues.decodeIfPresent(ConsistencyLevel.self, forKey: .consistencyLevel)
        consistencyLevel = consistencyLevelDecoded
    }
}
