// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchListPolicyAttachmentsResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case objectIdentifiers = "ObjectIdentifiers"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let objectIdentifiers = objectIdentifiers {
            var objectIdentifiersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .objectIdentifiers)
            for objectidentifierlist0 in objectIdentifiers {
                try objectIdentifiersContainer.encode(objectidentifierlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectIdentifiersContainer = try containerValues.decodeIfPresent([String].self, forKey: .objectIdentifiers)
        var objectIdentifiersDecoded0:[String]? = nil
        if let objectIdentifiersContainer = objectIdentifiersContainer {
            objectIdentifiersDecoded0 = [String]()
            for string0 in objectIdentifiersContainer {
                objectIdentifiersDecoded0?.append(string0)
            }
        }
        objectIdentifiers = objectIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
