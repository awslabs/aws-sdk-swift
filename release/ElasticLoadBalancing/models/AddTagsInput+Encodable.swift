// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddTagsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let loadBalancerNames = loadBalancerNames {
            var loadBalancerNamesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("LoadBalancerNames"))
            for (index0, accesspointname0) in loadBalancerNames.enumerated() {
                try loadBalancerNamesContainer.encode(accesspointname0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let tags = tags {
            var tagsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Tags"))
            for (index0, tag0) in tags.enumerated() {
                try tagsContainer.encode(tag0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("AddTags", forKey:Key("Action"))
        try container.encode("2012-06-01", forKey:Key("Version"))
    }
}
