// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The attributes for a load balancer.</p>
public struct LoadBalancerAttributes: Equatable {
    /// <p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html">Enable Access Logs</a>
    ///             in the <i>Classic Load Balancers Guide</i>.</p>
    public let accessLog: AccessLog?
    /// <p>Any additional attributes.</p>
    public let additionalAttributes: [AdditionalAttribute]?
    /// <p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Configure Connection Draining</a>
    ///             in the <i>Classic Load Balancers Guide</i>.</p>
    public let connectionDraining: ConnectionDraining?
    /// <p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p>
    ///         <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer.
    ///             For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Configure Idle Connection Timeout</a>
    ///             in the <i>Classic Load Balancers Guide</i>.</p>
    public let connectionSettings: ConnectionSettings?
    /// <p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Configure Cross-Zone Load Balancing</a>
    ///             in the <i>Classic Load Balancers Guide</i>.</p>
    public let crossZoneLoadBalancing: CrossZoneLoadBalancing?

    public init (
        accessLog: AccessLog? = nil,
        additionalAttributes: [AdditionalAttribute]? = nil,
        connectionDraining: ConnectionDraining? = nil,
        connectionSettings: ConnectionSettings? = nil,
        crossZoneLoadBalancing: CrossZoneLoadBalancing? = nil
    )
    {
        self.accessLog = accessLog
        self.additionalAttributes = additionalAttributes
        self.connectionDraining = connectionDraining
        self.connectionSettings = connectionSettings
        self.crossZoneLoadBalancing = crossZoneLoadBalancing
    }
}
