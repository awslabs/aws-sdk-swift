// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a listener.</p>
///         <p>For information about the protocols and the ports supported by Elastic Load Balancing, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners for Your Classic Load Balancer</a>
///             in the <i>Classic Load Balancers Guide</i>.</p>
public struct Listener: Equatable {
    /// <p>The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.</p>
    public let `protocol`: String?
    /// <p>The port on which the instance is listening.</p>
    public let instancePort: Int
    /// <p>The protocol to use for routing traffic to instances: HTTP, HTTPS, TCP, or SSL.</p>
    ///          <p>If the front-end protocol is TCP or SSL, the back-end protocol must be TCP or SSL.
    ///            If the front-end protocol is HTTP or HTTPS, the back-end protocol must be HTTP or HTTPS.</p>
    ///          <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is secure,
    ///           (HTTPS or SSL), the listener's <code>InstanceProtocol</code> must also be secure.</p>
    ///         <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is HTTP or TCP,
    ///            the listener's <code>InstanceProtocol</code> must be HTTP or TCP.</p>
    public let instanceProtocol: String?
    /// <p>The port on which the load balancer is listening. On EC2-VPC, you can specify any port from the range 1-65535. On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.</p>
    public let loadBalancerPort: Int
    /// <p>The Amazon Resource Name (ARN) of the server certificate.</p>
    public let sSLCertificateId: String?

    public init (
        `protocol`: String? = nil,
        instancePort: Int = 0,
        instanceProtocol: String? = nil,
        loadBalancerPort: Int = 0,
        sSLCertificateId: String? = nil
    )
    {
        self.`protocol` = `protocol`
        self.instancePort = instancePort
        self.instanceProtocol = instanceProtocol
        self.loadBalancerPort = loadBalancerPort
        self.sSLCertificateId = sSLCertificateId
    }
}
