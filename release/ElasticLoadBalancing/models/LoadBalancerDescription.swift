// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Information about a load balancer.</p>
public struct LoadBalancerDescription: Equatable {
    /// <p>The Availability Zones for the load balancer.</p>
    public let availabilityZones: [String]?
    /// <p>Information about your EC2 instances.</p>
    public let backendServerDescriptions: [BackendServerDescription]?
    /// <p>The DNS name of the load balancer.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/using-domain-names-with-elb.html">Configure a Custom Domain Name</a>
    ///             in the <i>Classic Load Balancers Guide</i>.</p>
    public let canonicalHostedZoneName: String?
    /// <p>The ID of the Amazon Route 53 hosted zone for the load balancer.</p>
    public let canonicalHostedZoneNameID: String?
    /// <p>The date and time the load balancer was created.</p>
    public let createdTime: Date?
    /// <p>The DNS name of the load balancer.</p>
    public let dNSName: String?
    /// <p>Information about the health checks conducted on the load balancer.</p>
    public let healthCheck: HealthCheck?
    /// <p>The IDs of the instances for the load balancer.</p>
    public let instances: [Instance]?
    /// <p>The listeners for the load balancer.</p>
    public let listenerDescriptions: [ListenerDescription]?
    /// <p>The name of the load balancer.</p>
    public let loadBalancerName: String?
    /// <p>The policies defined for the load balancer.</p>
    public let policies: Policies?
    /// <p>The type of load balancer. Valid only for load balancers in a VPC.</p>
    ///          <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer
    ///            has a public DNS name that resolves to a public IP address.</p>
    ///         <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public
    ///            DNS name that resolves to a private IP address.</p>
    public let scheme: String?
    /// <p>The security groups for the load balancer. Valid only for load balancers in a VPC.</p>
    public let securityGroups: [String]?
    /// <p>The security group for the load balancer, which you can use as part of your inbound rules for your registered instances.
    ///             To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.</p>
    public let sourceSecurityGroup: SourceSecurityGroup?
    /// <p>The IDs of the subnets for the load balancer.</p>
    public let subnets: [String]?
    /// <p>The ID of the VPC for the load balancer.</p>
    public let vPCId: String?

    public init (
        availabilityZones: [String]? = nil,
        backendServerDescriptions: [BackendServerDescription]? = nil,
        canonicalHostedZoneName: String? = nil,
        canonicalHostedZoneNameID: String? = nil,
        createdTime: Date? = nil,
        dNSName: String? = nil,
        healthCheck: HealthCheck? = nil,
        instances: [Instance]? = nil,
        listenerDescriptions: [ListenerDescription]? = nil,
        loadBalancerName: String? = nil,
        policies: Policies? = nil,
        scheme: String? = nil,
        securityGroups: [String]? = nil,
        sourceSecurityGroup: SourceSecurityGroup? = nil,
        subnets: [String]? = nil,
        vPCId: String? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.backendServerDescriptions = backendServerDescriptions
        self.canonicalHostedZoneName = canonicalHostedZoneName
        self.canonicalHostedZoneNameID = canonicalHostedZoneNameID
        self.createdTime = createdTime
        self.dNSName = dNSName
        self.healthCheck = healthCheck
        self.instances = instances
        self.listenerDescriptions = listenerDescriptions
        self.loadBalancerName = loadBalancerName
        self.policies = policies
        self.scheme = scheme
        self.securityGroups = securityGroups
        self.sourceSecurityGroup = sourceSecurityGroup
        self.subnets = subnets
        self.vPCId = vPCId
    }
}
