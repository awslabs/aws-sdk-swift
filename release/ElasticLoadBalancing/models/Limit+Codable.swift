// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Limit: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case max = "Max"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let max = max {
            try container.encode(max, forKey: Key("Max"))
        }
        if let name = name {
            try container.encode(name, forKey: Key("Name"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let maxDecoded = try containerValues.decodeIfPresent(String.self, forKey: .max)
        max = maxDecoded
    }
}
