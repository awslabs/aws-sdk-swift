// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsOutputBody: Equatable {
    public let streams: [StreamSummary]?
    public let nextToken: String?
}

extension ListStreamsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case streams
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamsContainer = try containerValues.decodeIfPresent([StreamSummary].self, forKey: .streams)
        var streamsDecoded0:[StreamSummary]? = nil
        if let streamsContainer = streamsContainer {
            streamsDecoded0 = [StreamSummary]()
            for structure0 in streamsContainer {
                streamsDecoded0?.append(structure0)
            }
        }
        streams = streamsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
