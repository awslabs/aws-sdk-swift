// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamKeysOutputBody: Equatable {
    public let streamKeys: [StreamKeySummary]?
    public let nextToken: String?
}

extension ListStreamKeysOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case streamKeys
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamKeysContainer = try containerValues.decodeIfPresent([StreamKeySummary].self, forKey: .streamKeys)
        var streamKeysDecoded0:[StreamKeySummary]? = nil
        if let streamKeysContainer = streamKeysContainer {
            streamKeysDecoded0 = [StreamKeySummary]()
            for structure0 in streamKeysContainer {
                streamKeysDecoded0?.append(structure0)
            }
        }
        streamKeys = streamKeysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
