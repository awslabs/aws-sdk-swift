// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateChannelInput: Equatable {
    /// <p>Whether the channel is private (enabled for playback authorization). Default:
    ///         <code>false</code>.</p>
    public let authorized: Bool
    /// <p>Channel latency mode. Use <code>NORMAL</code> to broadcast and deliver live video up to
    ///       Full HD. Use <code>LOW</code> for near-real-time interaction with viewers. (Note: In the
    ///       Amazon IVS console, <code>LOW</code> and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)
    ///       Default: <code>LOW</code>.</p>
    public let latencyMode: ChannelLatencyMode?
    /// <p>Channel name.</p>
    public let name: String?
    /// <p>Recording-configuration ARN. Default: "" (empty string, recording is disabled).</p>
    public let recordingConfigurationArn: String?
    /// <p>Array of 1-50 maps, each of the form <code>string:string (key:value)</code>.</p>
    public let tags: [String:String]?
    /// <p>Channel type, which determines the allowable resolution and bitrate. <i>If you
    ///         exceed the allowable resolution or bitrate, the stream probably will disconnect
    ///         immediately.</i> Default: <code>STANDARD</code>. Valid values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>STANDARD</code>: Multiple qualities are generated from the original input, to
    ///           automatically give viewers the best experience for their devices and network conditions.
    ///           Vertical resolution can be up to 1080 and bitrate can be up to 8.5 Mbps.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>BASIC</code>: Amazon IVS delivers the original input to viewers. The viewerâ€™s
    ///           video-quality choice is limited to the original input. Vertical resolution can be up to
    ///           480 and bitrate can be up to 1.5 Mbps.</p>
    ///             </li>
    ///          </ul>
    public let type: ChannelType?

    public init (
        authorized: Bool = false,
        latencyMode: ChannelLatencyMode? = nil,
        name: String? = nil,
        recordingConfigurationArn: String? = nil,
        tags: [String:String]? = nil,
        type: ChannelType? = nil
    )
    {
        self.authorized = authorized
        self.latencyMode = latencyMode
        self.name = name
        self.recordingConfigurationArn = recordingConfigurationArn
        self.tags = tags
        self.type = type
    }
}
