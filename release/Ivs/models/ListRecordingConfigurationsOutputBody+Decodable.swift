// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecordingConfigurationsOutputBody: Equatable {
    public let recordingConfigurations: [RecordingConfigurationSummary]?
    public let nextToken: String?
}

extension ListRecordingConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case recordingConfigurations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordingConfigurationsContainer = try containerValues.decodeIfPresent([RecordingConfigurationSummary].self, forKey: .recordingConfigurations)
        var recordingConfigurationsDecoded0:[RecordingConfigurationSummary]? = nil
        if let recordingConfigurationsContainer = recordingConfigurationsContainer {
            recordingConfigurationsDecoded0 = [RecordingConfigurationSummary]()
            for structure0 in recordingConfigurationsContainer {
                recordingConfigurationsDecoded0?.append(structure0)
            }
        }
        recordingConfigurations = recordingConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
