// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetChannelOutputBody: Equatable {
    public let channels: [Channel]?
    public let errors: [BatchError]?
}

extension BatchGetChannelOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channels
        case errors
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelsContainer = try containerValues.decodeIfPresent([Channel].self, forKey: .channels)
        var channelsDecoded0:[Channel]? = nil
        if let channelsContainer = channelsContainer {
            channelsDecoded0 = [Channel]()
            for structure0 in channelsContainer {
                channelsDecoded0?.append(structure0)
            }
        }
        channels = channelsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([BatchError].self, forKey: .errors)
        var errorsDecoded0:[BatchError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [BatchError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
