// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for CreatePipeline.</p>
public struct CreatePipelineInput: Equatable {
    /// <p>The description for the pipeline.</p>
    public let description: String?
    /// <p>The name for the pipeline. You can use the same name for multiple pipelines associated with your AWS account,
    ///             because AWS Data Pipeline assigns each pipeline a unique pipeline identifier.</p>
    public let name: String?
    /// <p>A list of tags to associate with the pipeline at creation. Tags let you control access to pipelines.
    ///             For more information, see <a href="http://docs.aws.amazon.com/datapipeline/latest/DeveloperGuide/dp-control-access.html">Controlling User Access to Pipelines</a>
    ///             in the <i>AWS Data Pipeline Developer Guide</i>.</p>
    public let tags: [Tag]?
    /// <p>A unique identifier. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline.
    ///             You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this
    ///             parameter to ensure idempotency during repeated calls to <code>CreatePipeline</code>. For example, if the
    ///             first call to <code>CreatePipeline</code> does not succeed, you can pass in the same unique identifier and
    ///             pipeline name combination on a subsequent call to <code>CreatePipeline</code>. <code>CreatePipeline</code>
    ///             ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline is not
    ///             created. Instead, you'll receive the pipeline identifier from the previous attempt. The uniqueness of the
    ///             name and unique identifier combination is scoped to the AWS account or IAM user credentials.</p>
    public let uniqueId: String?

    public init (
        description: String? = nil,
        name: String? = nil,
        tags: [Tag]? = nil,
        uniqueId: String? = nil
    )
    {
        self.description = description
        self.name = name
        self.tags = tags
        self.uniqueId = uniqueId
    }
}
