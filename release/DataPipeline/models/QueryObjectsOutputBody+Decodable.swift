// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryObjectsOutputBody: Equatable {
    public let ids: [String]?
    public let marker: String?
    public let hasMoreResults: Bool
}

extension QueryObjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hasMoreResults
        case ids
        case marker
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idsContainer = try containerValues.decodeIfPresent([String].self, forKey: .ids)
        var idsDecoded0:[String]? = nil
        if let idsContainer = idsContainer {
            idsDecoded0 = [String]()
            for string0 in idsContainer {
                idsDecoded0?.append(string0)
            }
        }
        ids = idsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let hasMoreResultsDecoded = try containerValues.decode(Bool.self, forKey: .hasMoreResults)
        hasMoreResults = hasMoreResultsDecoded
    }
}
