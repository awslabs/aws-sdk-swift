// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeObjectsOutputBody: Equatable {
    public let pipelineObjects: [PipelineObject]?
    public let marker: String?
    public let hasMoreResults: Bool
}

extension DescribeObjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hasMoreResults
        case marker
        case pipelineObjects
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineObjectsContainer = try containerValues.decodeIfPresent([PipelineObject].self, forKey: .pipelineObjects)
        var pipelineObjectsDecoded0:[PipelineObject]? = nil
        if let pipelineObjectsContainer = pipelineObjectsContainer {
            pipelineObjectsDecoded0 = [PipelineObject]()
            for structure0 in pipelineObjectsContainer {
                pipelineObjectsDecoded0?.append(structure0)
            }
        }
        pipelineObjects = pipelineObjectsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let hasMoreResultsDecoded = try containerValues.decode(Bool.self, forKey: .hasMoreResults)
        hasMoreResults = hasMoreResultsDecoded
    }
}
