// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EvaluateExpressionInputBody: Equatable {
    public let pipelineId: String?
    public let objectId: String?
    public let expression: String?
}

extension EvaluateExpressionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case expression
        case objectId
        case pipelineId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineId)
        pipelineId = pipelineIdDecoded
        let objectIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectId)
        objectId = objectIdDecoded
        let expressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .expression)
        expression = expressionDecoded
    }
}
