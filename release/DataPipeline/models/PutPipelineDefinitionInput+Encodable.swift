// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutPipelineDefinitionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case parameterObjects
        case parameterValues
        case pipelineId
        case pipelineObjects
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let parameterObjects = parameterObjects {
            var parameterObjectsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parameterObjects)
            for parameterobjectlist0 in parameterObjects {
                try parameterObjectsContainer.encode(parameterobjectlist0)
            }
        }
        if let parameterValues = parameterValues {
            var parameterValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .parameterValues)
            for parametervaluelist0 in parameterValues {
                try parameterValuesContainer.encode(parametervaluelist0)
            }
        }
        if let pipelineId = pipelineId {
            try encodeContainer.encode(pipelineId, forKey: .pipelineId)
        }
        if let pipelineObjects = pipelineObjects {
            var pipelineObjectsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pipelineObjects)
            for pipelineobjectlist0 in pipelineObjects {
                try pipelineObjectsContainer.encode(pipelineobjectlist0)
            }
        }
    }
}
