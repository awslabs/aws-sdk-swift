// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeObjectsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case evaluateExpressions
        case marker
        case objectIds
        case pipelineId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if evaluateExpressions != false {
            try encodeContainer.encode(evaluateExpressions, forKey: .evaluateExpressions)
        }
        if let marker = marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let objectIds = objectIds {
            var objectIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .objectIds)
            for idlist0 in objectIds {
                try objectIdsContainer.encode(idlist0)
            }
        }
        if let pipelineId = pipelineId {
            try encodeContainer.encode(pipelineId, forKey: .pipelineId)
        }
    }
}
