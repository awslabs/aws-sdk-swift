// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetStatusInputBody: Equatable {
    public let pipelineId: String?
    public let objectIds: [String]?
    public let status: String?
}

extension SetStatusInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case objectIds
        case pipelineId
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineId)
        pipelineId = pipelineIdDecoded
        let objectIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .objectIds)
        var objectIdsDecoded0:[String]? = nil
        if let objectIdsContainer = objectIdsContainer {
            objectIdsDecoded0 = [String]()
            for string0 in objectIdsContainer {
                objectIdsDecoded0?.append(string0)
            }
        }
        objectIds = objectIdsDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
    }
}
