// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelinesOutputBody: Equatable {
    public let pipelineIdList: [PipelineIdName]?
    public let marker: String?
    public let hasMoreResults: Bool
}

extension ListPipelinesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hasMoreResults
        case marker
        case pipelineIdList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdListContainer = try containerValues.decodeIfPresent([PipelineIdName].self, forKey: .pipelineIdList)
        var pipelineIdListDecoded0:[PipelineIdName]? = nil
        if let pipelineIdListContainer = pipelineIdListContainer {
            pipelineIdListDecoded0 = [PipelineIdName]()
            for structure0 in pipelineIdListContainer {
                pipelineIdListDecoded0?.append(structure0)
            }
        }
        pipelineIdList = pipelineIdListDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let hasMoreResultsDecoded = try containerValues.decode(Bool.self, forKey: .hasMoreResults)
        hasMoreResults = hasMoreResultsDecoded
    }
}
