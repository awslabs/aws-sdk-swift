// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QueryObjectsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case limit
        case marker
        case pipelineId
        case query
        case sphere
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let limit = limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let marker = marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let pipelineId = pipelineId {
            try encodeContainer.encode(pipelineId, forKey: .pipelineId)
        }
        if let query = query {
            try encodeContainer.encode(query, forKey: .query)
        }
        if let sphere = sphere {
            try encodeContainer.encode(sphere, forKey: .sphere)
        }
    }
}
