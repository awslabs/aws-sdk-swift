// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidatePipelineDefinitionOutputBody: Equatable {
    public let validationErrors: [ValidationError]?
    public let validationWarnings: [ValidationWarning]?
    public let errored: Bool
}

extension ValidatePipelineDefinitionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case errored
        case validationErrors
        case validationWarnings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let validationErrorsContainer = try containerValues.decodeIfPresent([ValidationError].self, forKey: .validationErrors)
        var validationErrorsDecoded0:[ValidationError]? = nil
        if let validationErrorsContainer = validationErrorsContainer {
            validationErrorsDecoded0 = [ValidationError]()
            for structure0 in validationErrorsContainer {
                validationErrorsDecoded0?.append(structure0)
            }
        }
        validationErrors = validationErrorsDecoded0
        let validationWarningsContainer = try containerValues.decodeIfPresent([ValidationWarning].self, forKey: .validationWarnings)
        var validationWarningsDecoded0:[ValidationWarning]? = nil
        if let validationWarningsContainer = validationWarningsContainer {
            validationWarningsDecoded0 = [ValidationWarning]()
            for structure0 in validationWarningsContainer {
                validationWarningsDecoded0?.append(structure0)
            }
        }
        validationWarnings = validationWarningsDecoded0
        let erroredDecoded = try containerValues.decode(Bool.self, forKey: .errored)
        errored = erroredDecoded
    }
}
