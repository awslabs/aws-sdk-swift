// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetTaskStatusInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case errorId
        case errorMessage
        case errorStackTrace
        case taskId
        case taskStatus
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorId = errorId {
            try encodeContainer.encode(errorId, forKey: .errorId)
        }
        if let errorMessage = errorMessage {
            try encodeContainer.encode(errorMessage, forKey: .errorMessage)
        }
        if let errorStackTrace = errorStackTrace {
            try encodeContainer.encode(errorStackTrace, forKey: .errorStackTrace)
        }
        if let taskId = taskId {
            try encodeContainer.encode(taskId, forKey: .taskId)
        }
        if let taskStatus = taskStatus {
            try encodeContainer.encode(taskStatus.rawValue, forKey: .taskStatus)
        }
    }
}
