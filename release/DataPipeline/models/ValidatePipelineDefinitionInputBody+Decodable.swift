// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidatePipelineDefinitionInputBody: Equatable {
    public let pipelineId: String?
    public let pipelineObjects: [PipelineObject]?
    public let parameterObjects: [ParameterObject]?
    public let parameterValues: [ParameterValue]?
}

extension ValidatePipelineDefinitionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case parameterObjects
        case parameterValues
        case pipelineId
        case pipelineObjects
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineId)
        pipelineId = pipelineIdDecoded
        let pipelineObjectsContainer = try containerValues.decodeIfPresent([PipelineObject].self, forKey: .pipelineObjects)
        var pipelineObjectsDecoded0:[PipelineObject]? = nil
        if let pipelineObjectsContainer = pipelineObjectsContainer {
            pipelineObjectsDecoded0 = [PipelineObject]()
            for structure0 in pipelineObjectsContainer {
                pipelineObjectsDecoded0?.append(structure0)
            }
        }
        pipelineObjects = pipelineObjectsDecoded0
        let parameterObjectsContainer = try containerValues.decodeIfPresent([ParameterObject].self, forKey: .parameterObjects)
        var parameterObjectsDecoded0:[ParameterObject]? = nil
        if let parameterObjectsContainer = parameterObjectsContainer {
            parameterObjectsDecoded0 = [ParameterObject]()
            for structure0 in parameterObjectsContainer {
                parameterObjectsDecoded0?.append(structure0)
            }
        }
        parameterObjects = parameterObjectsDecoded0
        let parameterValuesContainer = try containerValues.decodeIfPresent([ParameterValue].self, forKey: .parameterValues)
        var parameterValuesDecoded0:[ParameterValue]? = nil
        if let parameterValuesContainer = parameterValuesContainer {
            parameterValuesDecoded0 = [ParameterValue]()
            for structure0 in parameterValuesContainer {
                parameterValuesDecoded0?.append(structure0)
            }
        }
        parameterValues = parameterValuesDecoded0
    }
}
