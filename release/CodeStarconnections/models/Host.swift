// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A resource that represents the infrastructure where a third-party provider is installed.
///       The host is used when you create connections to an installed third-party provider type, such
///       as GitHub Enterprise Server. You create one host for all connections to that provider.</p>
///          <note>
///             <p>A host created through the CLI or the SDK is in `PENDING` status by
///         default. You can make its status `AVAILABLE` by setting up the host in the console.</p>
///          </note>
public struct Host: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the host.</p>
    public let hostArn: String?
    /// <p>The name of the host.</p>
    public let name: String?
    /// <p>The endpoint of the infrastructure where your provider type is installed.</p>
    public let providerEndpoint: String?
    /// <p>The name of the installed provider to be associated with your connection. The host
    ///       resource represents the infrastructure where your provider type is installed. The valid
    ///       provider type is GitHub Enterprise Server.</p>
    public let providerType: ProviderType?
    /// <p>The status of the host, such as PENDING, AVAILABLE, VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.</p>
    public let status: String?
    /// <p>The status description for the host.</p>
    public let statusMessage: String?
    /// <p>The VPC configuration provisioned for the host.</p>
    public let vpcConfiguration: VpcConfiguration?

    public init (
        hostArn: String? = nil,
        name: String? = nil,
        providerEndpoint: String? = nil,
        providerType: ProviderType? = nil,
        status: String? = nil,
        statusMessage: String? = nil,
        vpcConfiguration: VpcConfiguration? = nil
    )
    {
        self.hostArn = hostArn
        self.name = name
        self.providerEndpoint = providerEndpoint
        self.providerType = providerType
        self.status = status
        self.statusMessage = statusMessage
        self.vpcConfiguration = vpcConfiguration
    }
}
