// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHostsOutputBody: Equatable {
    public let hosts: [Host]?
    public let nextToken: String?
}

extension ListHostsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hosts = "Hosts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostsContainer = try containerValues.decodeIfPresent([Host].self, forKey: .hosts)
        var hostsDecoded0:[Host]? = nil
        if let hostsContainer = hostsContainer {
            hostsDecoded0 = [Host]()
            for structure0 in hostsContainer {
                hostsDecoded0?.append(structure0)
            }
        }
        hosts = hostsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
