// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A resource that is used to connect third-party source providers with services like AWS CodePipeline.</p>
///          <p>Note: A connection created through CloudFormation, the CLI, or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by updating the
///       connection in the console.</p>
public struct Connection: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the connection. The ARN is used as the connection
    ///       reference when the connection is shared between AWS services.</p>
    ///          <note>
    ///             <p>The ARN is never reused if the connection is deleted.</p>
    ///          </note>
    public let connectionArn: String?
    /// <p>The name of the connection. Connection names must be unique in an AWS user account.</p>
    public let connectionName: String?
    /// <p>The current status of the connection. </p>
    public let connectionStatus: ConnectionStatus?
    /// <p>The Amazon Resource Name (ARN) of the host associated with the connection.</p>
    public let hostArn: String?
    /// <p>The identifier of the external provider where your third-party code repository is configured.
    ///       For Bitbucket, this is the account ID of the owner of the Bitbucket repository.</p>
    public let ownerAccountId: String?
    /// <p>The name of the external provider where your third-party code repository is
    ///       configured.</p>
    public let providerType: ProviderType?

    public init (
        connectionArn: String? = nil,
        connectionName: String? = nil,
        connectionStatus: ConnectionStatus? = nil,
        hostArn: String? = nil,
        ownerAccountId: String? = nil,
        providerType: ProviderType? = nil
    )
    {
        self.connectionArn = connectionArn
        self.connectionName = connectionName
        self.connectionStatus = connectionStatus
        self.hostArn = hostArn
        self.ownerAccountId = ownerAccountId
        self.providerType = providerType
    }
}
