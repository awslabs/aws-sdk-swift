// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartHumanLoopInputBody: Equatable {
    public let humanLoopName: String?
    public let flowDefinitionArn: String?
    public let humanLoopInput: HumanLoopInput?
    public let dataAttributes: HumanLoopDataAttributes?
}

extension StartHumanLoopInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataAttributes = "DataAttributes"
        case flowDefinitionArn = "FlowDefinitionArn"
        case humanLoopInput = "HumanLoopInput"
        case humanLoopName = "HumanLoopName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanLoopNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanLoopName)
        humanLoopName = humanLoopNameDecoded
        let flowDefinitionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowDefinitionArn)
        flowDefinitionArn = flowDefinitionArnDecoded
        let humanLoopInputDecoded = try containerValues.decodeIfPresent(HumanLoopInput.self, forKey: .humanLoopInput)
        humanLoopInput = humanLoopInputDecoded
        let dataAttributesDecoded = try containerValues.decodeIfPresent(HumanLoopDataAttributes.self, forKey: .dataAttributes)
        dataAttributes = dataAttributesDecoded
    }
}
