// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeHumanLoopOutput: Equatable {
    /// <p>The creation time when Amazon Augmented AI created the human loop.</p>
    public let creationTime: Date?
    /// <p>A failure code that identifies the type of failure.</p>
    ///          <p>Possible values: <code>ValidationError</code>, <code>Expired</code>,
    ///         <code>InternalError</code>
    ///          </p>
    public let failureCode: String?
    /// <p>The reason why a human loop failed. The failure reason is returned when the status of the
    ///       human loop is <code>Failed</code>.</p>
    public let failureReason: String?
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    public let flowDefinitionArn: String?
    /// <p>The Amazon Resource Name (ARN) of the human loop.</p>
    public let humanLoopArn: String?
    /// <p>The name of the human loop. The name must be lowercase, unique within the Region in your
    ///       account, and can have up to 63 characters. Valid characters: a-z, 0-9, and - (hyphen).</p>
    public let humanLoopName: String?
    /// <p>An object that contains information about the output of the human loop.</p>
    public let humanLoopOutput: HumanLoopOutput?
    /// <p>The status of the human loop. </p>
    public let humanLoopStatus: HumanLoopStatus?

    public init (
        creationTime: Date? = nil,
        failureCode: String? = nil,
        failureReason: String? = nil,
        flowDefinitionArn: String? = nil,
        humanLoopArn: String? = nil,
        humanLoopName: String? = nil,
        humanLoopOutput: HumanLoopOutput? = nil,
        humanLoopStatus: HumanLoopStatus? = nil
    )
    {
        self.creationTime = creationTime
        self.failureCode = failureCode
        self.failureReason = failureReason
        self.flowDefinitionArn = flowDefinitionArn
        self.humanLoopArn = humanLoopArn
        self.humanLoopName = humanLoopName
        self.humanLoopOutput = humanLoopOutput
        self.humanLoopStatus = humanLoopStatus
    }
}
