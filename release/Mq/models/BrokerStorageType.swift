// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The broker's storage type. <important>EFS is currently not Supported for RabbitMQ engine type.</important>
public enum BrokerStorageType {
    case ebs
    case efs
    case sdkUnknown(String)
}

extension BrokerStorageType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BrokerStorageType] {
        return [
            .ebs,
            .efs,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ebs: return "EBS"
        case .efs: return "EFS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BrokerStorageType(rawValue: rawValue) ?? BrokerStorageType.sdkUnknown(rawValue)
    }
}
