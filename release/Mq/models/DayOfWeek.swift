// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DayOfWeek {
    case friday
    case monday
    case saturday
    case sunday
    case thursday
    case tuesday
    case wednesday
    case sdkUnknown(String)
}

extension DayOfWeek : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DayOfWeek] {
        return [
            .friday,
            .monday,
            .saturday,
            .sunday,
            .thursday,
            .tuesday,
            .wednesday,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .friday: return "FRIDAY"
        case .monday: return "MONDAY"
        case .saturday: return "SATURDAY"
        case .sunday: return "SUNDAY"
        case .thursday: return "THURSDAY"
        case .tuesday: return "TUESDAY"
        case .wednesday: return "WEDNESDAY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DayOfWeek(rawValue: rawValue) ?? DayOfWeek.sdkUnknown(rawValue)
    }
}
