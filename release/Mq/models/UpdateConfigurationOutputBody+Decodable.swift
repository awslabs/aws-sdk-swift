// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateConfigurationOutputBody: Equatable {
    public let arn: String?
    public let created: Date?
    public let id: String?
    public let latestRevision: ConfigurationRevision?
    public let name: String?
    public let warnings: [SanitizationWarning]?
}

extension UpdateConfigurationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn = "arn"
        case created = "created"
        case id = "id"
        case latestRevision = "latestRevision"
        case name = "name"
        case warnings = "warnings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let createdDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .created)
        created = createdDecoded
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let latestRevisionDecoded = try containerValues.decodeIfPresent(ConfigurationRevision.self, forKey: .latestRevision)
        latestRevision = latestRevisionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let warningsContainer = try containerValues.decodeIfPresent([SanitizationWarning].self, forKey: .warnings)
        var warningsDecoded0:[SanitizationWarning]? = nil
        if let warningsContainer = warningsContainer {
            warningsDecoded0 = [SanitizationWarning]()
            for structure0 in warningsContainer {
                warningsDecoded0?.append(structure0)
            }
        }
        warnings = warningsDecoded0
    }
}
