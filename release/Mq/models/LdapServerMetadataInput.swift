// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The metadata of the LDAP server used to authenticate and authorize connections to the broker.
public struct LdapServerMetadataInput: Equatable {
    /// Fully qualified domain name of the LDAP server. Optional failover server.
    public let hosts: [String]?
    /// Fully qualified name of the directory to search for a userâ€™s groups.
    public let roleBase: String?
    /// Specifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.
    public let roleName: String?
    /// The search criteria for groups.
    public let roleSearchMatching: String?
    /// The directory search scope for the role. If set to true, scope is to search the entire sub-tree.
    public let roleSearchSubtree: Bool
    /// Service account password.
    public let serviceAccountPassword: String?
    /// Service account username.
    public let serviceAccountUsername: String?
    /// Fully qualified name of the directory where you want to search for users.
    public let userBase: String?
    /// Specifies the name of the LDAP attribute for the user group membership.
    public let userRoleName: String?
    /// The search criteria for users.
    public let userSearchMatching: String?
    /// The directory search scope for the user. If set to true, scope is to search the entire sub-tree.
    public let userSearchSubtree: Bool

    public init (
        hosts: [String]? = nil,
        roleBase: String? = nil,
        roleName: String? = nil,
        roleSearchMatching: String? = nil,
        roleSearchSubtree: Bool = false,
        serviceAccountPassword: String? = nil,
        serviceAccountUsername: String? = nil,
        userBase: String? = nil,
        userRoleName: String? = nil,
        userSearchMatching: String? = nil,
        userSearchSubtree: Bool = false
    )
    {
        self.hosts = hosts
        self.roleBase = roleBase
        self.roleName = roleName
        self.roleSearchMatching = roleSearchMatching
        self.roleSearchSubtree = roleSearchSubtree
        self.serviceAccountPassword = serviceAccountPassword
        self.serviceAccountUsername = serviceAccountUsername
        self.userBase = userBase
        self.userRoleName = userRoleName
        self.userSearchMatching = userSearchMatching
        self.userSearchSubtree = userSearchSubtree
    }
}
