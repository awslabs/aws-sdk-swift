// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The authentication strategy used to secure the broker.
public enum AuthenticationStrategy {
    case ldap
    case simple
    case sdkUnknown(String)
}

extension AuthenticationStrategy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AuthenticationStrategy] {
        return [
            .ldap,
            .simple,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ldap: return "LDAP"
        case .simple: return "SIMPLE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AuthenticationStrategy(rawValue: rawValue) ?? AuthenticationStrategy.sdkUnknown(rawValue)
    }
}
