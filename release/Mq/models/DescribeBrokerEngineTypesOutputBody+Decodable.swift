// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBrokerEngineTypesOutputBody: Equatable {
    public let brokerEngineTypes: [BrokerEngineType]?
    public let maxResults: Int
    public let nextToken: String?
}

extension DescribeBrokerEngineTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case brokerEngineTypes = "brokerEngineTypes"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let brokerEngineTypesContainer = try containerValues.decodeIfPresent([BrokerEngineType].self, forKey: .brokerEngineTypes)
        var brokerEngineTypesDecoded0:[BrokerEngineType]? = nil
        if let brokerEngineTypesContainer = brokerEngineTypesContainer {
            brokerEngineTypesDecoded0 = [BrokerEngineType]()
            for structure0 in brokerEngineTypesContainer {
                brokerEngineTypesDecoded0?.append(structure0)
            }
        }
        brokerEngineTypes = brokerEngineTypesDecoded0
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
