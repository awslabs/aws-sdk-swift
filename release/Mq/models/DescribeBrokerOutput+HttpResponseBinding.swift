// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeBrokerOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: DescribeBrokerOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.authenticationStrategy = output.authenticationStrategy
            self.autoMinorVersionUpgrade = output.autoMinorVersionUpgrade
            self.brokerArn = output.brokerArn
            self.brokerId = output.brokerId
            self.brokerInstances = output.brokerInstances
            self.brokerName = output.brokerName
            self.brokerState = output.brokerState
            self.configurations = output.configurations
            self.created = output.created
            self.deploymentMode = output.deploymentMode
            self.encryptionOptions = output.encryptionOptions
            self.engineType = output.engineType
            self.engineVersion = output.engineVersion
            self.hostInstanceType = output.hostInstanceType
            self.ldapServerMetadata = output.ldapServerMetadata
            self.logs = output.logs
            self.maintenanceWindowStartTime = output.maintenanceWindowStartTime
            self.pendingAuthenticationStrategy = output.pendingAuthenticationStrategy
            self.pendingEngineVersion = output.pendingEngineVersion
            self.pendingHostInstanceType = output.pendingHostInstanceType
            self.pendingLdapServerMetadata = output.pendingLdapServerMetadata
            self.pendingSecurityGroups = output.pendingSecurityGroups
            self.publiclyAccessible = output.publiclyAccessible
            self.securityGroups = output.securityGroups
            self.storageType = output.storageType
            self.subnetIds = output.subnetIds
            self.tags = output.tags
            self.users = output.users
        } else {
            self.authenticationStrategy = nil
            self.autoMinorVersionUpgrade = false
            self.brokerArn = nil
            self.brokerId = nil
            self.brokerInstances = nil
            self.brokerName = nil
            self.brokerState = nil
            self.configurations = nil
            self.created = nil
            self.deploymentMode = nil
            self.encryptionOptions = nil
            self.engineType = nil
            self.engineVersion = nil
            self.hostInstanceType = nil
            self.ldapServerMetadata = nil
            self.logs = nil
            self.maintenanceWindowStartTime = nil
            self.pendingAuthenticationStrategy = nil
            self.pendingEngineVersion = nil
            self.pendingHostInstanceType = nil
            self.pendingLdapServerMetadata = nil
            self.pendingSecurityGroups = nil
            self.publiclyAccessible = false
            self.securityGroups = nil
            self.storageType = nil
            self.subnetIds = nil
            self.tags = nil
            self.users = nil
        }
    }
}
