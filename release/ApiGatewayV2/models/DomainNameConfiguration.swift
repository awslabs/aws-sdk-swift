// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The domain name configuration.</p>
public struct DomainNameConfiguration: Equatable {
    /// <p>A domain name for the API.</p>
    public let apiGatewayDomainName: String?
    /// <p>An AWS-managed certificate that will be used by the edge-optimized endpoint for this domain name. AWS Certificate Manager is the only supported source.</p>
    public let certificateArn: String?
    /// <p>The user-friendly name of the certificate that will be used by the edge-optimized endpoint for this domain name.</p>
    public let certificateName: String?
    /// <p>The timestamp when the certificate that was used by edge-optimized endpoint for this domain name was uploaded.</p>
    public let certificateUploadDate: Date?
    /// <p>The status of the domain name migration. The valid values are AVAILABLE and UPDATING. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.</p>
    public let domainNameStatus: DomainNameStatus?
    /// <p>An optional text message containing detailed information about status of the domain name migration.</p>
    public let domainNameStatusMessage: String?
    /// <p>The endpoint type.</p>
    public let endpointType: EndpointType?
    /// <p>The Amazon Route 53 Hosted Zone ID of the endpoint.</p>
    public let hostedZoneId: String?
    /// <p>The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.</p>
    public let securityPolicy: SecurityPolicy?

    public init (
        apiGatewayDomainName: String? = nil,
        certificateArn: String? = nil,
        certificateName: String? = nil,
        certificateUploadDate: Date? = nil,
        domainNameStatus: DomainNameStatus? = nil,
        domainNameStatusMessage: String? = nil,
        endpointType: EndpointType? = nil,
        hostedZoneId: String? = nil,
        securityPolicy: SecurityPolicy? = nil
    )
    {
        self.apiGatewayDomainName = apiGatewayDomainName
        self.certificateArn = certificateArn
        self.certificateName = certificateName
        self.certificateUploadDate = certificateUploadDate
        self.domainNameStatus = domainNameStatus
        self.domainNameStatusMessage = domainNameStatusMessage
        self.endpointType = endpointType
        self.hostedZoneId = hostedZoneId
        self.securityPolicy = securityPolicy
    }
}
