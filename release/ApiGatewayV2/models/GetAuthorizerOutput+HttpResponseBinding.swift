// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAuthorizerOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: GetAuthorizerOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.authorizerCredentialsArn = output.authorizerCredentialsArn
            self.authorizerId = output.authorizerId
            self.authorizerPayloadFormatVersion = output.authorizerPayloadFormatVersion
            self.authorizerResultTtlInSeconds = output.authorizerResultTtlInSeconds
            self.authorizerType = output.authorizerType
            self.authorizerUri = output.authorizerUri
            self.enableSimpleResponses = output.enableSimpleResponses
            self.identitySource = output.identitySource
            self.identityValidationExpression = output.identityValidationExpression
            self.jwtConfiguration = output.jwtConfiguration
            self.name = output.name
        } else {
            self.authorizerCredentialsArn = nil
            self.authorizerId = nil
            self.authorizerPayloadFormatVersion = nil
            self.authorizerResultTtlInSeconds = 0
            self.authorizerType = nil
            self.authorizerUri = nil
            self.enableSimpleResponses = false
            self.identitySource = nil
            self.identityValidationExpression = nil
            self.jwtConfiguration = nil
            self.name = nil
        }
    }
}
