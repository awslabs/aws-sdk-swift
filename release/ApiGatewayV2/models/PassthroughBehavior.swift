// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.</p>
public enum PassthroughBehavior {
    case never
    case whenNoMatch
    case whenNoTemplates
    case sdkUnknown(String)
}

extension PassthroughBehavior : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PassthroughBehavior] {
        return [
            .never,
            .whenNoMatch,
            .whenNoTemplates,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .never: return "NEVER"
        case .whenNoMatch: return "WHEN_NO_MATCH"
        case .whenNoTemplates: return "WHEN_NO_TEMPLATES"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PassthroughBehavior(rawValue: rawValue) ?? PassthroughBehavior.sdkUnknown(rawValue)
    }
}
