// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Updates a Route.</p>
public struct UpdateRouteInput: Equatable {
    /// <p>The API identifier.</p>
    public let apiId: String?
    /// <p>Specifies whether an API key is required for the route. Supported only for WebSocket APIs.</p>
    public let apiKeyRequired: Bool
    /// <p>The authorization scopes supported by this route.</p>
    public let authorizationScopes: [String]?
    /// <p>The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.</p>
    public let authorizationType: AuthorizationType?
    /// <p>The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.</p>
    public let authorizerId: String?
    /// <p>The model selection expression for the route. Supported only for WebSocket APIs.</p>
    public let modelSelectionExpression: String?
    /// <p>The operation name for the route.</p>
    public let operationName: String?
    /// <p>The request models for the route. Supported only for WebSocket APIs.</p>
    public let requestModels: [String:String]?
    /// <p>The request parameters for the route. Supported only for WebSocket APIs.</p>
    public let requestParameters: [String:ParameterConstraints]?
    /// <p>The route ID.</p>
    public let routeId: String?
    /// <p>The route key for the route.</p>
    public let routeKey: String?
    /// <p>The route response selection expression for the route. Supported only for WebSocket APIs.</p>
    public let routeResponseSelectionExpression: String?
    /// <p>The target for the route.</p>
    public let target: String?

    public init (
        apiId: String? = nil,
        apiKeyRequired: Bool = false,
        authorizationScopes: [String]? = nil,
        authorizationType: AuthorizationType? = nil,
        authorizerId: String? = nil,
        modelSelectionExpression: String? = nil,
        operationName: String? = nil,
        requestModels: [String:String]? = nil,
        requestParameters: [String:ParameterConstraints]? = nil,
        routeId: String? = nil,
        routeKey: String? = nil,
        routeResponseSelectionExpression: String? = nil,
        target: String? = nil
    )
    {
        self.apiId = apiId
        self.apiKeyRequired = apiKeyRequired
        self.authorizationScopes = authorizationScopes
        self.authorizationType = authorizationType
        self.authorizerId = authorizerId
        self.modelSelectionExpression = modelSelectionExpression
        self.operationName = operationName
        self.requestModels = requestModels
        self.requestParameters = requestParameters
        self.routeId = routeId
        self.routeKey = routeKey
        self.routeResponseSelectionExpression = routeResponseSelectionExpression
        self.target = target
    }
}
