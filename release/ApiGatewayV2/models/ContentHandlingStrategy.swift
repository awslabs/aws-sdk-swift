// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.</p>
public enum ContentHandlingStrategy {
    case convertToBinary
    case convertToText
    case sdkUnknown(String)
}

extension ContentHandlingStrategy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ContentHandlingStrategy] {
        return [
            .convertToBinary,
            .convertToText,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .convertToBinary: return "CONVERT_TO_BINARY"
        case .convertToText: return "CONVERT_TO_TEXT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ContentHandlingStrategy(rawValue: rawValue) ?? ContentHandlingStrategy.sdkUnknown(rawValue)
    }
}
