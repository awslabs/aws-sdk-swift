// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateApiInputBody: Equatable {
    public let apiKeySelectionExpression: String?
    public let corsConfiguration: Cors?
    public let credentialsArn: String?
    public let description: String?
    public let disableSchemaValidation: Bool
    public let disableExecuteApiEndpoint: Bool
    public let name: String?
    public let routeKey: String?
    public let routeSelectionExpression: String?
    public let target: String?
    public let version: String?
}

extension UpdateApiInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case apiKeySelectionExpression = "apiKeySelectionExpression"
        case corsConfiguration = "corsConfiguration"
        case credentialsArn = "credentialsArn"
        case description = "description"
        case disableExecuteApiEndpoint = "disableExecuteApiEndpoint"
        case disableSchemaValidation = "disableSchemaValidation"
        case name = "name"
        case routeKey = "routeKey"
        case routeSelectionExpression = "routeSelectionExpression"
        case target = "target"
        case version = "version"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiKeySelectionExpressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .apiKeySelectionExpression)
        apiKeySelectionExpression = apiKeySelectionExpressionDecoded
        let corsConfigurationDecoded = try containerValues.decodeIfPresent(Cors.self, forKey: .corsConfiguration)
        corsConfiguration = corsConfigurationDecoded
        let credentialsArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .credentialsArn)
        credentialsArn = credentialsArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let disableSchemaValidationDecoded = try containerValues.decode(Bool.self, forKey: .disableSchemaValidation)
        disableSchemaValidation = disableSchemaValidationDecoded
        let disableExecuteApiEndpointDecoded = try containerValues.decode(Bool.self, forKey: .disableExecuteApiEndpoint)
        disableExecuteApiEndpoint = disableExecuteApiEndpointDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let routeKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .routeKey)
        routeKey = routeKeyDecoded
        let routeSelectionExpressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .routeSelectionExpression)
        routeSelectionExpression = routeSelectionExpressionDecoded
        let targetDecoded = try containerValues.decodeIfPresent(String.self, forKey: .target)
        target = targetDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
    }
}
