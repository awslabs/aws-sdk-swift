// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateStageOutput: Equatable {
    /// <p>Settings for logging access in this stage.</p>
    public let accessLogSettings: AccessLogSettings?
    /// <p>Specifies whether a stage is managed by API Gateway. If you created an API using quick create, the $default stage is managed by API Gateway. You can't modify the $default stage.</p>
    public let apiGatewayManaged: Bool
    /// <p>Specifies whether updates to an API automatically trigger a new deployment. The default value is false.</p>
    public let autoDeploy: Bool
    /// <p>The identifier of a client certificate for a Stage. Supported only for WebSocket APIs.</p>
    public let clientCertificateId: String?
    /// <p>The timestamp when the stage was created.</p>
    public let createdDate: Date?
    /// <p>Default route settings for the stage.</p>
    public let defaultRouteSettings: RouteSettings?
    /// <p>The identifier of the Deployment that the Stage is associated with. Can't be updated if autoDeploy is enabled.</p>
    public let deploymentId: String?
    /// <p>The description of the stage.</p>
    public let description: String?
    /// <p>Describes the status of the last deployment of a stage. Supported only for stages with autoDeploy enabled.</p>
    public let lastDeploymentStatusMessage: String?
    /// <p>The timestamp when the stage was last updated.</p>
    public let lastUpdatedDate: Date?
    /// <p>Route settings for the stage, by routeKey.</p>
    public let routeSettings: [String:RouteSettings]?
    /// <p>The name of the stage.</p>
    public let stageName: String?
    /// <p>A map that defines the stage variables for a stage resource. Variable names can have alphanumeric and underscore characters, and the values must match [A-Za-z0-9-._~:/?#&amp;=,]+.</p>
    public let stageVariables: [String:String]?
    /// <p>The collection of tags. Each tag element is associated with a given resource.</p>
    public let tags: [String:String]?

    public init (
        accessLogSettings: AccessLogSettings? = nil,
        apiGatewayManaged: Bool = false,
        autoDeploy: Bool = false,
        clientCertificateId: String? = nil,
        createdDate: Date? = nil,
        defaultRouteSettings: RouteSettings? = nil,
        deploymentId: String? = nil,
        description: String? = nil,
        lastDeploymentStatusMessage: String? = nil,
        lastUpdatedDate: Date? = nil,
        routeSettings: [String:RouteSettings]? = nil,
        stageName: String? = nil,
        stageVariables: [String:String]? = nil,
        tags: [String:String]? = nil
    )
    {
        self.accessLogSettings = accessLogSettings
        self.apiGatewayManaged = apiGatewayManaged
        self.autoDeploy = autoDeploy
        self.clientCertificateId = clientCertificateId
        self.createdDate = createdDate
        self.defaultRouteSettings = defaultRouteSettings
        self.deploymentId = deploymentId
        self.description = description
        self.lastDeploymentStatusMessage = lastDeploymentStatusMessage
        self.lastUpdatedDate = lastUpdatedDate
        self.routeSettings = routeSettings
        self.stageName = stageName
        self.stageVariables = stageVariables
        self.tags = tags
    }
}
