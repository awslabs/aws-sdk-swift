// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDomainNameInputBody: Equatable {
    public let domainNameConfigurations: [DomainNameConfiguration]?
    public let mutualTlsAuthentication: MutualTlsAuthenticationInput?
}

extension UpdateDomainNameInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainNameConfigurations = "domainNameConfigurations"
        case mutualTlsAuthentication = "mutualTlsAuthentication"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameConfigurationsContainer = try containerValues.decodeIfPresent([DomainNameConfiguration].self, forKey: .domainNameConfigurations)
        var domainNameConfigurationsDecoded0:[DomainNameConfiguration]? = nil
        if let domainNameConfigurationsContainer = domainNameConfigurationsContainer {
            domainNameConfigurationsDecoded0 = [DomainNameConfiguration]()
            for structure0 in domainNameConfigurationsContainer {
                domainNameConfigurationsDecoded0?.append(structure0)
            }
        }
        domainNameConfigurations = domainNameConfigurationsDecoded0
        let mutualTlsAuthenticationDecoded = try containerValues.decodeIfPresent(MutualTlsAuthenticationInput.self, forKey: .mutualTlsAuthentication)
        mutualTlsAuthentication = mutualTlsAuthenticationDecoded
    }
}
