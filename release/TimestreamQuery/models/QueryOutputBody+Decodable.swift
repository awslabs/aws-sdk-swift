// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryOutputBody: Equatable {
    public let queryId: String?
    public let nextToken: String?
    public let rows: [Row]?
    public let columnInfo: [ColumnInfo]?
    public let queryStatus: QueryStatus?
}

extension QueryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case columnInfo = "ColumnInfo"
        case nextToken = "NextToken"
        case queryId = "QueryId"
        case queryStatus = "QueryStatus"
        case rows = "Rows"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryId)
        queryId = queryIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let rowsContainer = try containerValues.decodeIfPresent([Row].self, forKey: .rows)
        var rowsDecoded0:[Row]? = nil
        if let rowsContainer = rowsContainer {
            rowsDecoded0 = [Row]()
            for structure0 in rowsContainer {
                rowsDecoded0?.append(structure0)
            }
        }
        rows = rowsDecoded0
        let columnInfoContainer = try containerValues.decodeIfPresent([ColumnInfo].self, forKey: .columnInfo)
        var columnInfoDecoded0:[ColumnInfo]? = nil
        if let columnInfoContainer = columnInfoContainer {
            columnInfoDecoded0 = [ColumnInfo]()
            for structure0 in columnInfoContainer {
                columnInfoDecoded0?.append(structure0)
            }
        }
        columnInfo = columnInfoDecoded0
        let queryStatusDecoded = try containerValues.decodeIfPresent(QueryStatus.self, forKey: .queryStatus)
        queryStatus = queryStatusDecoded
    }
}
