// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchMeterUsageOutputBody: Equatable {
    public let results: [UsageRecordResult]?
    public let unprocessedRecords: [UsageRecord]?
}

extension BatchMeterUsageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case results = "Results"
        case unprocessedRecords = "UnprocessedRecords"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([UsageRecordResult].self, forKey: .results)
        var resultsDecoded0:[UsageRecordResult]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [UsageRecordResult]()
            for structure0 in resultsContainer {
                resultsDecoded0?.append(structure0)
            }
        }
        results = resultsDecoded0
        let unprocessedRecordsContainer = try containerValues.decodeIfPresent([UsageRecord].self, forKey: .unprocessedRecords)
        var unprocessedRecordsDecoded0:[UsageRecord]? = nil
        if let unprocessedRecordsContainer = unprocessedRecordsContainer {
            unprocessedRecordsDecoded0 = [UsageRecord]()
            for structure0 in unprocessedRecordsContainer {
                unprocessedRecordsDecoded0?.append(structure0)
            }
        }
        unprocessedRecords = unprocessedRecordsDecoded0
    }
}
