// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct MeterUsageInput: Equatable {
    /// <p>Checks whether you have the permissions required for the action, but does not make
    ///             the request. If you have the permissions, the request returns DryRunOperation;
    ///             otherwise, it returns UnauthorizedException. Defaults to <code>false</code> if not
    ///             specified.</p>
    public let dryRun: Bool?
    /// <p>Product code is used to uniquely identify a product in AWS Marketplace. The product
    ///             code should be the same as the one used during the publishing of a new
    ///             product.</p>
    public let productCode: String?
    /// <p>Timestamp, in UTC, for which the usage is being reported. Your application can
    ///             meter usage for up to one hour in the past. Make sure the timestamp value is not before
    ///             the start of the software usage.</p>
    public let timestamp: Date?
    /// <p>The set of UsageAllocations to submit.</p>
    ///         <p>The sum of all UsageAllocation quantities must equal the
    ///             UsageQuantity of the MeterUsage request, and each UsageAllocation must have a
    ///             unique set of tags (include no tags).</p>
    public let usageAllocations: [UsageAllocation]?
    /// <p>It will be one of the fcp dimension name provided during the publishing of the
    ///             product.</p>
    public let usageDimension: String?
    /// <p>Consumption value for the hour. Defaults to <code>0</code> if not
    ///             specified.</p>
    public let usageQuantity: Int?

    public init (
        dryRun: Bool? = nil,
        productCode: String? = nil,
        timestamp: Date? = nil,
        usageAllocations: [UsageAllocation]? = nil,
        usageDimension: String? = nil,
        usageQuantity: Int? = nil
    )
    {
        self.dryRun = dryRun
        self.productCode = productCode
        self.timestamp = timestamp
        self.usageAllocations = usageAllocations
        self.usageDimension = usageDimension
        self.usageQuantity = usageQuantity
    }
}
