// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VpcPeeringConnection: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fleetArn = "FleetArn"
        case fleetId = "FleetId"
        case gameLiftVpcId = "GameLiftVpcId"
        case ipV4CidrBlock = "IpV4CidrBlock"
        case peerVpcId = "PeerVpcId"
        case status = "Status"
        case vpcPeeringConnectionId = "VpcPeeringConnectionId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fleetArn = fleetArn {
            try encodeContainer.encode(fleetArn, forKey: .fleetArn)
        }
        if let fleetId = fleetId {
            try encodeContainer.encode(fleetId, forKey: .fleetId)
        }
        if let gameLiftVpcId = gameLiftVpcId {
            try encodeContainer.encode(gameLiftVpcId, forKey: .gameLiftVpcId)
        }
        if let ipV4CidrBlock = ipV4CidrBlock {
            try encodeContainer.encode(ipV4CidrBlock, forKey: .ipV4CidrBlock)
        }
        if let peerVpcId = peerVpcId {
            try encodeContainer.encode(peerVpcId, forKey: .peerVpcId)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let vpcPeeringConnectionId = vpcPeeringConnectionId {
            try encodeContainer.encode(vpcPeeringConnectionId, forKey: .vpcPeeringConnectionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let fleetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fleetArn)
        fleetArn = fleetArnDecoded
        let ipV4CidrBlockDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipV4CidrBlock)
        ipV4CidrBlock = ipV4CidrBlockDecoded
        let vpcPeeringConnectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpcPeeringConnectionId)
        vpcPeeringConnectionId = vpcPeeringConnectionIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(VpcPeeringConnectionStatus.self, forKey: .status)
        status = statusDecoded
        let peerVpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .peerVpcId)
        peerVpcId = peerVpcIdDecoded
        let gameLiftVpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameLiftVpcId)
        gameLiftVpcId = gameLiftVpcIdDecoded
    }
}
