// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetCapacityOutputBody: Equatable {
    public let fleetCapacity: [FleetCapacity]?
    public let nextToken: String?
}

extension DescribeFleetCapacityOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fleetCapacity = "FleetCapacity"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetCapacityContainer = try containerValues.decodeIfPresent([FleetCapacity].self, forKey: .fleetCapacity)
        var fleetCapacityDecoded0:[FleetCapacity]? = nil
        if let fleetCapacityContainer = fleetCapacityContainer {
            fleetCapacityDecoded0 = [FleetCapacity]()
            for structure0 in fleetCapacityContainer {
                fleetCapacityDecoded0?.append(structure0)
            }
        }
        fleetCapacity = fleetCapacityDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
