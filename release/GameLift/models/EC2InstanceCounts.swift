// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Resource capacity settings. Fleet capacity is measured in EC2 instances. Pending and
///             terminating counts are non-zero when the fleet capacity is adjusting to a scaling event
///             or if access to resources is temporarily affected.</p>
///         <p>EC2 instance counts are part of <a>FleetCapacity</a>.</p>
public struct EC2InstanceCounts: Equatable {
    /// <p>Actual number of instances that are ready to host game sessions.</p>
    public let aCTIVE: Int?
    /// <p>Ideal number of active instances. GameLift will always try to maintain the desired
    ///             number of instances. Capacity is scaled up or down by changing the desired instances. </p>
    public let dESIRED: Int?
    /// <p>Number of active instances that are not currently hosting a game session.</p>
    public let iDLE: Int?
    /// <p>The maximum instance count value allowed.</p>
    public let mAXIMUM: Int?
    /// <p>The minimum instance count value allowed.</p>
    public let mINIMUM: Int?
    /// <p>Number of instances that are starting but not yet active.</p>
    public let pENDING: Int?
    /// <p>Number of instances that are no longer active but haven't yet been terminated.</p>
    public let tERMINATING: Int?

    public init (
        aCTIVE: Int? = nil,
        dESIRED: Int? = nil,
        iDLE: Int? = nil,
        mAXIMUM: Int? = nil,
        mINIMUM: Int? = nil,
        pENDING: Int? = nil,
        tERMINATING: Int? = nil
    )
    {
        self.aCTIVE = aCTIVE
        self.dESIRED = dESIRED
        self.iDLE = iDLE
        self.mAXIMUM = mAXIMUM
        self.mINIMUM = mINIMUM
        self.pENDING = pENDING
        self.tERMINATING = tERMINATING
    }
}
