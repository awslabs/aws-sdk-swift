// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input for a request operation.</p>
public struct StartGameSessionPlacementInput: Equatable {
    /// <p>Set of information on each player to create a player session for.</p>
    public let desiredPlayerSessions: [DesiredPlayerSession]?
    /// <p>A set of custom properties for a game session, formatted as key:value pairs. These properties are passed to a game server process in the
    ///     <a>GameSession</a> object with a request to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start a Game Session</a>).</p>
    public let gameProperties: [GameProperty]?
    /// <p>A set of custom game session properties, formatted as a single string value. This data is passed to a game server process in the
    ///     <a>GameSession</a> object with a request to start a new game session (see <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession">Start a Game Session</a>).</p>
    public let gameSessionData: String?
    /// <p>A descriptive label that is associated with a game session. Session names do not need to be unique.</p>
    public let gameSessionName: String?
    /// <p>Name of the queue to use to place the new game session. You can use either the queue name
    ///             or ARN value. </p>
    public let gameSessionQueueName: String?
    /// <p>The maximum number of players that can be connected simultaneously to the game session.</p>
    public let maximumPlayerSessionCount: Int?
    /// <p>A unique identifier to assign to the new game session placement. This value is
    ///         developer-defined. The value must be unique across all Regions and cannot be reused
    ///         unless you are resubmitting a canceled or timed-out placement request.</p>
    public let placementId: String?
    /// <p>A set of values, expressed in milliseconds, that indicates the amount of latency that a player experiences when connected to AWS Regions. This information is used to try to place the new game session where
    ///         it can offer the best possible gameplay experience for the players. </p>
    public let playerLatencies: [PlayerLatency]?

    public init (
        desiredPlayerSessions: [DesiredPlayerSession]? = nil,
        gameProperties: [GameProperty]? = nil,
        gameSessionData: String? = nil,
        gameSessionName: String? = nil,
        gameSessionQueueName: String? = nil,
        maximumPlayerSessionCount: Int? = nil,
        placementId: String? = nil,
        playerLatencies: [PlayerLatency]? = nil
    )
    {
        self.desiredPlayerSessions = desiredPlayerSessions
        self.gameProperties = gameProperties
        self.gameSessionData = gameSessionData
        self.gameSessionName = gameSessionName
        self.gameSessionQueueName = gameSessionQueueName
        self.maximumPlayerSessionCount = maximumPlayerSessionCount
        self.placementId = placementId
        self.playerLatencies = playerLatencies
    }
}
