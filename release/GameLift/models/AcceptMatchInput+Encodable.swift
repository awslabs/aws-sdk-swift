// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcceptMatchInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case acceptanceType = "AcceptanceType"
        case playerIds = "PlayerIds"
        case ticketId = "TicketId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let acceptanceType = acceptanceType {
            try encodeContainer.encode(acceptanceType.rawValue, forKey: .acceptanceType)
        }
        if let playerIds = playerIds {
            var playerIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .playerIds)
            for stringlist0 in playerIds {
                try playerIdsContainer.encode(stringlist0)
            }
        }
        if let ticketId = ticketId {
            try encodeContainer.encode(ticketId, forKey: .ticketId)
        }
    }
}
