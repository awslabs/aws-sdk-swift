// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Alias: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case aliasArn = "AliasArn"
        case aliasId = "AliasId"
        case creationTime = "CreationTime"
        case description = "Description"
        case lastUpdatedTime = "LastUpdatedTime"
        case name = "Name"
        case routingStrategy = "RoutingStrategy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aliasArn = aliasArn {
            try encodeContainer.encode(aliasArn, forKey: .aliasArn)
        }
        if let aliasId = aliasId {
            try encodeContainer.encode(aliasId, forKey: .aliasId)
        }
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let lastUpdatedTime = lastUpdatedTime {
            try encodeContainer.encode(lastUpdatedTime.timeIntervalSince1970, forKey: .lastUpdatedTime)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let routingStrategy = routingStrategy {
            try encodeContainer.encode(routingStrategy, forKey: .routingStrategy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .aliasId)
        aliasId = aliasIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let aliasArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .aliasArn)
        aliasArn = aliasArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let routingStrategyDecoded = try containerValues.decodeIfPresent(RoutingStrategy.self, forKey: .routingStrategy)
        routingStrategy = routingStrategyDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastUpdatedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastUpdatedTime)
        lastUpdatedTime = lastUpdatedTimeDecoded
    }
}
