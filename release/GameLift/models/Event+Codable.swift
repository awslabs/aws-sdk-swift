// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Event: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case eventCode = "EventCode"
        case eventId = "EventId"
        case eventTime = "EventTime"
        case message = "Message"
        case preSignedLogUrl = "PreSignedLogUrl"
        case resourceId = "ResourceId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eventCode = eventCode {
            try encodeContainer.encode(eventCode.rawValue, forKey: .eventCode)
        }
        if let eventId = eventId {
            try encodeContainer.encode(eventId, forKey: .eventId)
        }
        if let eventTime = eventTime {
            try encodeContainer.encode(eventTime.timeIntervalSince1970, forKey: .eventTime)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
        if let preSignedLogUrl = preSignedLogUrl {
            try encodeContainer.encode(preSignedLogUrl, forKey: .preSignedLogUrl)
        }
        if let resourceId = resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventId)
        eventId = eventIdDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let eventCodeDecoded = try containerValues.decodeIfPresent(EventCode.self, forKey: .eventCode)
        eventCode = eventCodeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let eventTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .eventTime)
        eventTime = eventTimeDecoded
        let preSignedLogUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .preSignedLogUrl)
        preSignedLogUrl = preSignedLogUrlDecoded
    }
}
