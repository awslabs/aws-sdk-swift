// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateGameServerGroupInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case balancingStrategy = "BalancingStrategy"
        case gameServerGroupName = "GameServerGroupName"
        case gameServerProtectionPolicy = "GameServerProtectionPolicy"
        case instanceDefinitions = "InstanceDefinitions"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let balancingStrategy = balancingStrategy {
            try encodeContainer.encode(balancingStrategy.rawValue, forKey: .balancingStrategy)
        }
        if let gameServerGroupName = gameServerGroupName {
            try encodeContainer.encode(gameServerGroupName, forKey: .gameServerGroupName)
        }
        if let gameServerProtectionPolicy = gameServerProtectionPolicy {
            try encodeContainer.encode(gameServerProtectionPolicy.rawValue, forKey: .gameServerProtectionPolicy)
        }
        if let instanceDefinitions = instanceDefinitions {
            var instanceDefinitionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .instanceDefinitions)
            for instancedefinitions0 in instanceDefinitions {
                try instanceDefinitionsContainer.encode(instancedefinitions0)
            }
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
