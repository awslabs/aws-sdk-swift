// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LocationAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case locationState = "LocationState"
        case stoppedActions = "StoppedActions"
        case updateStatus = "UpdateStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let locationState = locationState {
            try encodeContainer.encode(locationState, forKey: .locationState)
        }
        if let stoppedActions = stoppedActions {
            var stoppedActionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stoppedActions)
            for fleetactionlist0 in stoppedActions {
                try stoppedActionsContainer.encode(fleetactionlist0.rawValue)
            }
        }
        if let updateStatus = updateStatus {
            try encodeContainer.encode(updateStatus.rawValue, forKey: .updateStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationStateDecoded = try containerValues.decodeIfPresent(LocationState.self, forKey: .locationState)
        locationState = locationStateDecoded
        let stoppedActionsContainer = try containerValues.decodeIfPresent([FleetAction].self, forKey: .stoppedActions)
        var stoppedActionsDecoded0:[FleetAction]? = nil
        if let stoppedActionsContainer = stoppedActionsContainer {
            stoppedActionsDecoded0 = [FleetAction]()
            for string0 in stoppedActionsContainer {
                stoppedActionsDecoded0?.append(string0)
            }
        }
        stoppedActions = stoppedActionsDecoded0
        let updateStatusDecoded = try containerValues.decodeIfPresent(LocationUpdateStatus.self, forKey: .updateStatus)
        updateStatus = updateStatusDecoded
    }
}
