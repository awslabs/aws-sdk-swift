// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Properties describing a custom game build.</p>
///         <p>
///             <b>Related actions</b>
///          </p>
///                     <p>
///             <a>CreateBuild</a> |
///                     <a>ListBuilds</a> |
///                     <a>DescribeBuild</a> |
///                     <a>UpdateBuild</a> |
///                     <a>DeleteBuild</a> |
///                     <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a>
///          </p>
public struct Build: Equatable {
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>) that is assigned to a GameLift build resource and uniquely identifies it. ARNs are unique across all Regions. Format is <code>arn:aws:gamelift:<region>::build/build-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</code>. In a GameLift build ARN, the resource ID matches the
    ///                 <i>BuildId</i> value.</p>
    public let buildArn: String?
    /// <p>A unique identifier for the build.</p>
    public let buildId: String?
    /// <p>A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example <code>"1469498468.057"</code>).</p>
    public let creationTime: Date?
    /// <p>A descriptive label that is associated with a build. Build names do not need to be unique. It can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.</p>
    public let name: String?
    /// <p>Operating system that the game server binaries are built to run on. This value
    ///             determines the type of fleet resources that you can use for this build.</p>
    public let operatingSystem: OperatingSystem?
    /// <p>File size of the uploaded game build, expressed in bytes. When the build status is
    ///                 <code>INITIALIZED</code>, this value is 0.</p>
    public let sizeOnDisk: Int?
    /// <p>Current status of the build.</p>
    ///         <p>Possible build statuses include the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <b>INITIALIZED</b> -- A new build has been defined,
    ///                     but no files have been uploaded. You cannot create fleets for builds that are in
    ///                     this status. When a build is successfully created, the build status is set to
    ///                     this value. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>READY</b> -- The game build has been successfully
    ///                     uploaded. You can now create new fleets for this build.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>FAILED</b> -- The game build upload failed. You
    ///                     cannot create new fleets for this build. </p>
    ///             </li>
    ///          </ul>
    public let status: BuildStatus?
    /// <p>Version information that is associated with a build or script. Version strings do not need to be unique. This value can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.</p>
    public let version: String?

    public init (
        buildArn: String? = nil,
        buildId: String? = nil,
        creationTime: Date? = nil,
        name: String? = nil,
        operatingSystem: OperatingSystem? = nil,
        sizeOnDisk: Int? = nil,
        status: BuildStatus? = nil,
        version: String? = nil
    )
    {
        self.buildArn = buildArn
        self.buildId = buildId
        self.creationTime = creationTime
        self.name = name
        self.operatingSystem = operatingSystem
        self.sizeOnDisk = sizeOnDisk
        self.status = status
        self.version = version
    }
}
