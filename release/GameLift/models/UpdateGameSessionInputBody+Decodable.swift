// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameSessionInputBody: Equatable {
    public let gameSessionId: String?
    public let maximumPlayerSessionCount: Int?
    public let name: String?
    public let playerSessionCreationPolicy: PlayerSessionCreationPolicy?
    public let protectionPolicy: ProtectionPolicy?
}

extension UpdateGameSessionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameSessionId = "GameSessionId"
        case maximumPlayerSessionCount = "MaximumPlayerSessionCount"
        case name = "Name"
        case playerSessionCreationPolicy = "PlayerSessionCreationPolicy"
        case protectionPolicy = "ProtectionPolicy"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameSessionId)
        gameSessionId = gameSessionIdDecoded
        let maximumPlayerSessionCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maximumPlayerSessionCount)
        maximumPlayerSessionCount = maximumPlayerSessionCountDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let playerSessionCreationPolicyDecoded = try containerValues.decodeIfPresent(PlayerSessionCreationPolicy.self, forKey: .playerSessionCreationPolicy)
        playerSessionCreationPolicy = playerSessionCreationPolicyDecoded
        let protectionPolicyDecoded = try containerValues.decodeIfPresent(ProtectionPolicy.self, forKey: .protectionPolicy)
        protectionPolicy = protectionPolicyDecoded
    }
}
