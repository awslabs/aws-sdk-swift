// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input for a request operation.</p>
public struct DescribePlayerSessionsInput: Equatable {
    /// <p>A unique identifier for the game session to retrieve player sessions for.</p>
    public let gameSessionId: String?
    /// <p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. If a player session ID is specified, this parameter is ignored.</p>
    public let limit: Int?
    /// <p>A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. If a player session ID is specified, this parameter is ignored.</p>
    public let nextToken: String?
    /// <p>A unique identifier for a player to retrieve player sessions for.</p>
    public let playerId: String?
    /// <p>A unique identifier for a player session to retrieve.</p>
    public let playerSessionId: String?
    /// <p>Player session status to filter results on.</p>
    ///          <p>Possible player session statuses include the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>RESERVED</b> -- The player session request has been
    ///                 received, but the player has not yet connected to the server process and/or been
    ///                 validated. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>ACTIVE</b> -- The player has been validated by the
    ///                 server process and is currently connected.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>COMPLETED</b> -- The player connection has been
    ///                 dropped.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>TIMEDOUT</b> -- A player session request was
    ///                 received, but the player did not connect and/or was not validated within the
    ///                 timeout limit (60 seconds).</p>
    ///             </li>
    ///          </ul>
    public let playerSessionStatusFilter: String?

    public init (
        gameSessionId: String? = nil,
        limit: Int? = nil,
        nextToken: String? = nil,
        playerId: String? = nil,
        playerSessionId: String? = nil,
        playerSessionStatusFilter: String? = nil
    )
    {
        self.gameSessionId = gameSessionId
        self.limit = limit
        self.nextToken = nextToken
        self.playerId = playerId
        self.playerSessionId = playerSessionId
        self.playerSessionStatusFilter = playerSessionStatusFilter
    }
}
