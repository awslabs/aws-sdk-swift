// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameServerGroupInputBody: Equatable {
    public let gameServerGroupName: String?
    public let roleArn: String?
    public let instanceDefinitions: [InstanceDefinition]?
    public let gameServerProtectionPolicy: GameServerProtectionPolicy?
    public let balancingStrategy: BalancingStrategy?
}

extension UpdateGameServerGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case balancingStrategy = "BalancingStrategy"
        case gameServerGroupName = "GameServerGroupName"
        case gameServerProtectionPolicy = "GameServerProtectionPolicy"
        case instanceDefinitions = "InstanceDefinitions"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let instanceDefinitionsContainer = try containerValues.decodeIfPresent([InstanceDefinition].self, forKey: .instanceDefinitions)
        var instanceDefinitionsDecoded0:[InstanceDefinition]? = nil
        if let instanceDefinitionsContainer = instanceDefinitionsContainer {
            instanceDefinitionsDecoded0 = [InstanceDefinition]()
            for structure0 in instanceDefinitionsContainer {
                instanceDefinitionsDecoded0?.append(structure0)
            }
        }
        instanceDefinitions = instanceDefinitionsDecoded0
        let gameServerProtectionPolicyDecoded = try containerValues.decodeIfPresent(GameServerProtectionPolicy.self, forKey: .gameServerProtectionPolicy)
        gameServerProtectionPolicy = gameServerProtectionPolicyDecoded
        let balancingStrategyDecoded = try containerValues.decodeIfPresent(BalancingStrategy.self, forKey: .balancingStrategy)
        balancingStrategy = balancingStrategyDecoded
    }
}
