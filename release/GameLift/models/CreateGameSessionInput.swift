// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input for a request operation.</p>
public struct CreateGameSessionInput: Equatable {
    /// <p>A unique identifier for the alias associated with the fleet to create a game session in. You can use either the
    ///             alias ID or ARN value. Each request must reference either a fleet ID or alias ID, but
    ///             not both.</p>
    public let aliasId: String?
    /// <p>A unique identifier for a player or entity creating the game session. This parameter is required when
    ///             requesting a new game session on a fleet with a resource creation limit policy. This
    ///             type of policy limits the number of concurrent active game sessions that one player can
    ///             create within a certain time span. GameLift uses the CreatorId to evaluate the new
    ///             request against the policy.</p>
    public let creatorId: String?
    /// <p>A unique identifier for the fleet to create a game session in. You can use either the fleet ID or ARN value. Each
    ///             request must reference either a fleet ID or alias ID, but not both.</p>
    public let fleetId: String?
    /// <p>A set of custom properties for a game session, formatted as key:value pairs. These properties are passed to a game server process in the
    ///     <a>GameSession</a> object with a request to start a new game session.</p>
    public let gameProperties: [GameProperty]?
    /// <p>A set of custom game session properties, formatted as a single string value. This data is passed to a game server process in the
    ///     <a>GameSession</a> object with a request to start a new game session.</p>
    public let gameSessionData: String?
    /// <p>
    ///             <i>This parameter is no longer preferred. Please use
    ///                     <code>IdempotencyToken</code> instead.</i> Custom string that uniquely
    ///             identifies a request for a new game session. Maximum token length is 48 characters. If
    ///             provided, this string is included in the new game session's ID.</p>
    public let gameSessionId: String?
    /// <p>Custom string that uniquely identifies the new game session request.  This is useful
    ///             for ensuring that game session requests with the same idempotency token are processed
    ///             only once. Subsequent requests with the same string return the original
    ///                 <code>GameSession</code> object, with an updated status. Maximum token length is 48
    ///             characters. If provided, this string is included in the new game session's ID.
    ///             A game session ARN has the following format:
    ///     <code>arn:aws:gamelift:<region>::gamesession/<fleet ID>/<custom ID string or idempotency token></code>. Idempotency tokens remain in use for 30 days after a game session has ended;
    ///             game session objects are retained for this time period and then deleted.</p>
    public let idempotencyToken: String?
    /// <p>A fleet's remote location to place the new game session in. If this parameter is not
    ///             set, the new game session is placed in the fleet's home Region. Specify a remote
    ///             location with an AWS Region code such as <code>us-west-2</code>.  </p>
    public let location: String?
    /// <p>The maximum number of players that can be connected simultaneously to the game session.</p>
    public let maximumPlayerSessionCount: Int?
    /// <p>A descriptive label that is associated with a game session. Session names do not need to be unique.</p>
    public let name: String?

    public init (
        aliasId: String? = nil,
        creatorId: String? = nil,
        fleetId: String? = nil,
        gameProperties: [GameProperty]? = nil,
        gameSessionData: String? = nil,
        gameSessionId: String? = nil,
        idempotencyToken: String? = nil,
        location: String? = nil,
        maximumPlayerSessionCount: Int? = nil,
        name: String? = nil
    )
    {
        self.aliasId = aliasId
        self.creatorId = creatorId
        self.fleetId = fleetId
        self.gameProperties = gameProperties
        self.gameSessionData = gameSessionData
        self.gameSessionId = gameSessionId
        self.idempotencyToken = idempotencyToken
        self.location = location
        self.maximumPlayerSessionCount = maximumPlayerSessionCount
        self.name = name
    }
}
