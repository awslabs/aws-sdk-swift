// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBuildsInputBody: Equatable {
    public let status: BuildStatus?
    public let limit: Int?
    public let nextToken: String?
}

extension ListBuildsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case limit = "Limit"
        case nextToken = "NextToken"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(BuildStatus.self, forKey: .status)
        status = statusDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
