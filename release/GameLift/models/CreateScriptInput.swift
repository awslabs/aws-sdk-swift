// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateScriptInput: Equatable {
    /// <p>A descriptive label that is associated with a script. Script names do not need to be unique. You can use <a>UpdateScript</a> to change this value later.
    ///         </p>
    public let name: String?
    /// <p>The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is
    ///             stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the
    ///             "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3
    ///             bucket must be in the same Region where you want to create a new script. By default,
    ///             Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning
    ///             turned on, you can use the <code>ObjectVersion</code> parameter to specify an earlier
    ///             version. </p>
    public let storageLocation: S3Location?
    /// <p>A list of labels to assign to the new script resource. Tags are developer-defined
    ///             key-value pairs. Tagging
    ///             AWS resources are useful for resource management, access management and cost allocation.
    ///             For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"> Tagging AWS Resources</a> in the
    ///             <i>AWS General Reference</i>. Once the resource is created, you can
    ///             use <a>TagResource</a>, <a>UntagResource</a>, and
    ///             <a>ListTagsForResource</a> to add, remove, and view tags. The
    ///             maximum tag limit may be lower than stated. See the AWS General Reference for actual
    ///             tagging limits.</p>
    public let tags: [Tag]?
    /// <p>Version information that is associated with a build or script. Version strings do not need to be unique. You can use <a>UpdateScript</a> to change this value later.
    ///         </p>
    public let version: String?
    /// <p>A data object containing your Realtime scripts and dependencies as a zip file. The zip
    ///             file can have one or multiple files. Maximum size of a zip file is 5 MB.</p>
    ///         <p>When using the AWS CLI tool to create a script, this parameter is set to the zip file name. It must be prepended with the
    ///             string "fileb://" to indicate that the file data is a binary object. For example: <code>--zip-file fileb://myRealtimeScript.zip</code>.</p>
    public let zipFile: Data?

    public init (
        name: String? = nil,
        storageLocation: S3Location? = nil,
        tags: [Tag]? = nil,
        version: String? = nil,
        zipFile: Data? = nil
    )
    {
        self.name = name
        self.storageLocation = storageLocation
        self.tags = tags
        self.version = version
        self.zipFile = zipFile
    }
}
