// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeGameSessionDetailsOutputBody: Equatable {
    public let gameSessionDetails: [GameSessionDetail]?
    public let nextToken: String?
}

extension DescribeGameSessionDetailsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameSessionDetails = "GameSessionDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionDetailsContainer = try containerValues.decodeIfPresent([GameSessionDetail].self, forKey: .gameSessionDetails)
        var gameSessionDetailsDecoded0:[GameSessionDetail]? = nil
        if let gameSessionDetailsContainer = gameSessionDetailsContainer {
            gameSessionDetailsDecoded0 = [GameSessionDetail]()
            for structure0 in gameSessionDetailsContainer {
                gameSessionDetailsDecoded0?.append(structure0)
            }
        }
        gameSessionDetails = gameSessionDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
