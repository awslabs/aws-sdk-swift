// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGameServerGroupsOutputBody: Equatable {
    public let gameServerGroups: [GameServerGroup]?
    public let nextToken: String?
}

extension ListGameServerGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameServerGroups = "GameServerGroups"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupsContainer = try containerValues.decodeIfPresent([GameServerGroup].self, forKey: .gameServerGroups)
        var gameServerGroupsDecoded0:[GameServerGroup]? = nil
        if let gameServerGroupsContainer = gameServerGroupsContainer {
            gameServerGroupsDecoded0 = [GameServerGroup]()
            for structure0 in gameServerGroupsContainer {
                gameServerGroupsDecoded0?.append(structure0)
            }
        }
        gameServerGroups = gameServerGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
