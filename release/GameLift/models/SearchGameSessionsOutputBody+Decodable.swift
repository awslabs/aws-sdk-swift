// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchGameSessionsOutputBody: Equatable {
    public let gameSessions: [GameSession]?
    public let nextToken: String?
}

extension SearchGameSessionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameSessions = "GameSessions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionsContainer = try containerValues.decodeIfPresent([GameSession].self, forKey: .gameSessions)
        var gameSessionsDecoded0:[GameSession]? = nil
        if let gameSessionsContainer = gameSessionsContainer {
            gameSessionsDecoded0 = [GameSession]()
            for structure0 in gameSessionsContainer {
                gameSessionsDecoded0?.append(structure0)
            }
        }
        gameSessions = gameSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
