// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePlayerSessionsInputBody: Equatable {
    public let gameSessionId: String?
    public let playerId: String?
    public let playerSessionId: String?
    public let playerSessionStatusFilter: String?
    public let limit: Int?
    public let nextToken: String?
}

extension DescribePlayerSessionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameSessionId = "GameSessionId"
        case limit = "Limit"
        case nextToken = "NextToken"
        case playerId = "PlayerId"
        case playerSessionId = "PlayerSessionId"
        case playerSessionStatusFilter = "PlayerSessionStatusFilter"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameSessionId)
        gameSessionId = gameSessionIdDecoded
        let playerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .playerId)
        playerId = playerIdDecoded
        let playerSessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .playerSessionId)
        playerSessionId = playerSessionIdDecoded
        let playerSessionStatusFilterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .playerSessionStatusFilter)
        playerSessionStatusFilter = playerSessionStatusFilterDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
