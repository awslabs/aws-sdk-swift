// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum GameServerGroupInstanceType {
    case c42xlarge
    case c44xlarge
    case c48xlarge
    case c4Large
    case c4Xlarge
    case c512xlarge
    case c518xlarge
    case c524xlarge
    case c52xlarge
    case c54xlarge
    case c59xlarge
    case c5Large
    case c5Xlarge
    case c5a12xlarge
    case c5a16xlarge
    case c5a24xlarge
    case c5a2xlarge
    case c5a4xlarge
    case c5a8xlarge
    case c5aLarge
    case c5aXlarge
    case m410xlarge
    case m42xlarge
    case m44xlarge
    case m4Large
    case m4Xlarge
    case m512xlarge
    case m516xlarge
    case m524xlarge
    case m52xlarge
    case m54xlarge
    case m58xlarge
    case m5Large
    case m5Xlarge
    case m5a12xlarge
    case m5a16xlarge
    case m5a24xlarge
    case m5a2xlarge
    case m5a4xlarge
    case m5a8xlarge
    case m5aLarge
    case m5aXlarge
    case r416xlarge
    case r42xlarge
    case r44xlarge
    case r48xlarge
    case r4Large
    case r4Xlarge
    case r512xlarge
    case r516xlarge
    case r524xlarge
    case r52xlarge
    case r54xlarge
    case r58xlarge
    case r5Large
    case r5Xlarge
    case r5a12xlarge
    case r5a16xlarge
    case r5a24xlarge
    case r5a2xlarge
    case r5a4xlarge
    case r5a8xlarge
    case r5aLarge
    case r5aXlarge
    case sdkUnknown(String)
}

extension GameServerGroupInstanceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [GameServerGroupInstanceType] {
        return [
            .c42xlarge,
            .c44xlarge,
            .c48xlarge,
            .c4Large,
            .c4Xlarge,
            .c512xlarge,
            .c518xlarge,
            .c524xlarge,
            .c52xlarge,
            .c54xlarge,
            .c59xlarge,
            .c5Large,
            .c5Xlarge,
            .c5a12xlarge,
            .c5a16xlarge,
            .c5a24xlarge,
            .c5a2xlarge,
            .c5a4xlarge,
            .c5a8xlarge,
            .c5aLarge,
            .c5aXlarge,
            .m410xlarge,
            .m42xlarge,
            .m44xlarge,
            .m4Large,
            .m4Xlarge,
            .m512xlarge,
            .m516xlarge,
            .m524xlarge,
            .m52xlarge,
            .m54xlarge,
            .m58xlarge,
            .m5Large,
            .m5Xlarge,
            .m5a12xlarge,
            .m5a16xlarge,
            .m5a24xlarge,
            .m5a2xlarge,
            .m5a4xlarge,
            .m5a8xlarge,
            .m5aLarge,
            .m5aXlarge,
            .r416xlarge,
            .r42xlarge,
            .r44xlarge,
            .r48xlarge,
            .r4Large,
            .r4Xlarge,
            .r512xlarge,
            .r516xlarge,
            .r524xlarge,
            .r52xlarge,
            .r54xlarge,
            .r58xlarge,
            .r5Large,
            .r5Xlarge,
            .r5a12xlarge,
            .r5a16xlarge,
            .r5a24xlarge,
            .r5a2xlarge,
            .r5a4xlarge,
            .r5a8xlarge,
            .r5aLarge,
            .r5aXlarge,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .c42xlarge: return "c4.2xlarge"
        case .c44xlarge: return "c4.4xlarge"
        case .c48xlarge: return "c4.8xlarge"
        case .c4Large: return "c4.large"
        case .c4Xlarge: return "c4.xlarge"
        case .c512xlarge: return "c5.12xlarge"
        case .c518xlarge: return "c5.18xlarge"
        case .c524xlarge: return "c5.24xlarge"
        case .c52xlarge: return "c5.2xlarge"
        case .c54xlarge: return "c5.4xlarge"
        case .c59xlarge: return "c5.9xlarge"
        case .c5Large: return "c5.large"
        case .c5Xlarge: return "c5.xlarge"
        case .c5a12xlarge: return "c5a.12xlarge"
        case .c5a16xlarge: return "c5a.16xlarge"
        case .c5a24xlarge: return "c5a.24xlarge"
        case .c5a2xlarge: return "c5a.2xlarge"
        case .c5a4xlarge: return "c5a.4xlarge"
        case .c5a8xlarge: return "c5a.8xlarge"
        case .c5aLarge: return "c5a.large"
        case .c5aXlarge: return "c5a.xlarge"
        case .m410xlarge: return "m4.10xlarge"
        case .m42xlarge: return "m4.2xlarge"
        case .m44xlarge: return "m4.4xlarge"
        case .m4Large: return "m4.large"
        case .m4Xlarge: return "m4.xlarge"
        case .m512xlarge: return "m5.12xlarge"
        case .m516xlarge: return "m5.16xlarge"
        case .m524xlarge: return "m5.24xlarge"
        case .m52xlarge: return "m5.2xlarge"
        case .m54xlarge: return "m5.4xlarge"
        case .m58xlarge: return "m5.8xlarge"
        case .m5Large: return "m5.large"
        case .m5Xlarge: return "m5.xlarge"
        case .m5a12xlarge: return "m5a.12xlarge"
        case .m5a16xlarge: return "m5a.16xlarge"
        case .m5a24xlarge: return "m5a.24xlarge"
        case .m5a2xlarge: return "m5a.2xlarge"
        case .m5a4xlarge: return "m5a.4xlarge"
        case .m5a8xlarge: return "m5a.8xlarge"
        case .m5aLarge: return "m5a.large"
        case .m5aXlarge: return "m5a.xlarge"
        case .r416xlarge: return "r4.16xlarge"
        case .r42xlarge: return "r4.2xlarge"
        case .r44xlarge: return "r4.4xlarge"
        case .r48xlarge: return "r4.8xlarge"
        case .r4Large: return "r4.large"
        case .r4Xlarge: return "r4.xlarge"
        case .r512xlarge: return "r5.12xlarge"
        case .r516xlarge: return "r5.16xlarge"
        case .r524xlarge: return "r5.24xlarge"
        case .r52xlarge: return "r5.2xlarge"
        case .r54xlarge: return "r5.4xlarge"
        case .r58xlarge: return "r5.8xlarge"
        case .r5Large: return "r5.large"
        case .r5Xlarge: return "r5.xlarge"
        case .r5a12xlarge: return "r5a.12xlarge"
        case .r5a16xlarge: return "r5a.16xlarge"
        case .r5a24xlarge: return "r5a.24xlarge"
        case .r5a2xlarge: return "r5a.2xlarge"
        case .r5a4xlarge: return "r5a.4xlarge"
        case .r5a8xlarge: return "r5a.8xlarge"
        case .r5aLarge: return "r5a.large"
        case .r5aXlarge: return "r5a.xlarge"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = GameServerGroupInstanceType(rawValue: rawValue) ?? GameServerGroupInstanceType.sdkUnknown(rawValue)
    }
}
