// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The routing configuration for a fleet alias.</p>
///         <p>
///             <b>Related actions</b>
///          </p>
///                     <p>
///             <a>CreateAlias</a> |
///                     <a>ListAliases</a> |
///                     <a>DescribeAlias</a> |
///                     <a>UpdateAlias</a> |
///                     <a>DeleteAlias</a> |
///                     <a>ResolveAlias</a> |
///                     <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a>
///          </p>
public struct RoutingStrategy: Equatable {
    /// <p>A unique identifier for the fleet that the alias points to. This value is the fleet ID, not the fleet ARN.</p>
    public let fleetId: String?
    /// <p>The message text to be used with a terminal routing strategy.</p>
    public let message: String?
    /// <p>The type of routing strategy for the alias.</p>
    ///         <p>Possible routing types include the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <b>SIMPLE</b> - The alias resolves to one specific
    ///                     fleet. Use this type when routing to active fleets.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>TERMINAL</b> - The alias does not resolve to a
    ///                     fleet but instead can be used to display a message to the user. A terminal alias
    ///                     throws a TerminalRoutingStrategyException with the <a>RoutingStrategy</a> message embedded.</p>
    ///             </li>
    ///          </ul>
    public let type: RoutingStrategyType?

    public init (
        fleetId: String? = nil,
        message: String? = nil,
        type: RoutingStrategyType? = nil
    )
    {
        self.fleetId = fleetId
        self.message = message
        self.type = type
    }
}
