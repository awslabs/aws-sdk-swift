// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceCreationLimitPolicy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case newGameSessionsPerCreator = "NewGameSessionsPerCreator"
        case policyPeriodInMinutes = "PolicyPeriodInMinutes"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let newGameSessionsPerCreator = newGameSessionsPerCreator {
            try encodeContainer.encode(newGameSessionsPerCreator, forKey: .newGameSessionsPerCreator)
        }
        if let policyPeriodInMinutes = policyPeriodInMinutes {
            try encodeContainer.encode(policyPeriodInMinutes, forKey: .policyPeriodInMinutes)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let newGameSessionsPerCreatorDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .newGameSessionsPerCreator)
        newGameSessionsPerCreator = newGameSessionsPerCreatorDecoded
        let policyPeriodInMinutesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .policyPeriodInMinutes)
        policyPeriodInMinutes = policyPeriodInMinutesDecoded
    }
}
