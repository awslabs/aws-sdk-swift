// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateScriptInput: Equatable {
    /// <p>A descriptive label that is associated with a script. Script names do not need to be unique.</p>
    public let name: String?
    /// <p>A unique identifier for the Realtime script to update. You can use either the script ID or ARN value.</p>
    public let scriptId: String?
    /// <p>The location of the Amazon S3 bucket where a zipped file containing your Realtime scripts is
    ///             stored. The storage location must specify the Amazon S3 bucket name, the zip file name (the
    ///             "key"), and a role ARN that allows Amazon GameLift to access the Amazon S3 storage location. The S3
    ///             bucket must be in the same Region where you want to create a new script. By default,
    ///             Amazon GameLift uploads the latest version of the zip file; if you have S3 object versioning
    ///             turned on, you can use the <code>ObjectVersion</code> parameter to specify an earlier
    ///             version. </p>
    public let storageLocation: S3Location?
    /// <p>Version information that is associated with a build or script. Version strings do not need to be unique.</p>
    public let version: String?
    /// <p>A data object containing your Realtime scripts and dependencies as a zip file. The zip
    ///             file can have one or multiple files. Maximum size of a zip file is 5 MB.</p>
    ///         <p>When using the AWS CLI tool to create a script, this parameter is set to the zip file
    ///             name. It must be prepended with the string "fileb://" to indicate that the file data is
    ///             a binary object. For example: <code>--zip-file
    ///             fileb://myRealtimeScript.zip</code>.</p>
    public let zipFile: Data?

    public init (
        name: String? = nil,
        scriptId: String? = nil,
        storageLocation: S3Location? = nil,
        version: String? = nil,
        zipFile: Data? = nil
    )
    {
        self.name = name
        self.scriptId = scriptId
        self.storageLocation = storageLocation
        self.version = version
        self.zipFile = zipFile
    }
}
