// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameSessionConnectionInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dnsName = "DnsName"
        case gameSessionArn = "GameSessionArn"
        case ipAddress = "IpAddress"
        case matchedPlayerSessions = "MatchedPlayerSessions"
        case port = "Port"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsName = dnsName {
            try encodeContainer.encode(dnsName, forKey: .dnsName)
        }
        if let gameSessionArn = gameSessionArn {
            try encodeContainer.encode(gameSessionArn, forKey: .gameSessionArn)
        }
        if let ipAddress = ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let matchedPlayerSessions = matchedPlayerSessions {
            var matchedPlayerSessionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .matchedPlayerSessions)
            for matchedplayersessionlist0 in matchedPlayerSessions {
                try matchedPlayerSessionsContainer.encode(matchedplayersessionlist0)
            }
        }
        if let port = port {
            try encodeContainer.encode(port, forKey: .port)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameSessionArn)
        gameSessionArn = gameSessionArnDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let dnsNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dnsName)
        dnsName = dnsNameDecoded
        let portDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .port)
        port = portDecoded
        let matchedPlayerSessionsContainer = try containerValues.decodeIfPresent([MatchedPlayerSession].self, forKey: .matchedPlayerSessions)
        var matchedPlayerSessionsDecoded0:[MatchedPlayerSession]? = nil
        if let matchedPlayerSessionsContainer = matchedPlayerSessionsContainer {
            matchedPlayerSessionsDecoded0 = [MatchedPlayerSession]()
            for structure0 in matchedPlayerSessionsContainer {
                matchedPlayerSessionsDecoded0?.append(structure0)
            }
        }
        matchedPlayerSessions = matchedPlayerSessionsDecoded0
    }
}
