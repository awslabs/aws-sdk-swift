// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum OperatingSystem {
    case amazonLinux
    case amazonLinux2
    case windows2012
    case sdkUnknown(String)
}

extension OperatingSystem : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OperatingSystem] {
        return [
            .amazonLinux,
            .amazonLinux2,
            .windows2012,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .amazonLinux: return "AMAZON_LINUX"
        case .amazonLinux2: return "AMAZON_LINUX_2"
        case .windows2012: return "WINDOWS_2012"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OperatingSystem(rawValue: rawValue) ?? OperatingSystem.sdkUnknown(rawValue)
    }
}
