// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFleetLocationAttributesOutputBody: Equatable {
    public let fleetId: String?
    public let fleetArn: String?
    public let locationAttributes: [LocationAttributes]?
    public let nextToken: String?
}

extension DescribeFleetLocationAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fleetArn = "FleetArn"
        case fleetId = "FleetId"
        case locationAttributes = "LocationAttributes"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let fleetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fleetArn)
        fleetArn = fleetArnDecoded
        let locationAttributesContainer = try containerValues.decodeIfPresent([LocationAttributes].self, forKey: .locationAttributes)
        var locationAttributesDecoded0:[LocationAttributes]? = nil
        if let locationAttributesContainer = locationAttributesContainer {
            locationAttributesDecoded0 = [LocationAttributes]()
            for structure0 in locationAttributesContainer {
                locationAttributesDecoded0?.append(structure0)
            }
        }
        locationAttributes = locationAttributesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
