// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMatchmakingConfigurationsOutputBody: Equatable {
    public let configurations: [MatchmakingConfiguration]?
    public let nextToken: String?
}

extension DescribeMatchmakingConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurations = "Configurations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationsContainer = try containerValues.decodeIfPresent([MatchmakingConfiguration].self, forKey: .configurations)
        var configurationsDecoded0:[MatchmakingConfiguration]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [MatchmakingConfiguration]()
            for structure0 in configurationsContainer {
                configurationsDecoded0?.append(structure0)
            }
        }
        configurations = configurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
