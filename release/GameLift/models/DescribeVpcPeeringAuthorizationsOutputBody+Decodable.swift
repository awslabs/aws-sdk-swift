// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVpcPeeringAuthorizationsOutputBody: Equatable {
    public let vpcPeeringAuthorizations: [VpcPeeringAuthorization]?
}

extension DescribeVpcPeeringAuthorizationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case vpcPeeringAuthorizations = "VpcPeeringAuthorizations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpcPeeringAuthorizationsContainer = try containerValues.decodeIfPresent([VpcPeeringAuthorization].self, forKey: .vpcPeeringAuthorizations)
        var vpcPeeringAuthorizationsDecoded0:[VpcPeeringAuthorization]? = nil
        if let vpcPeeringAuthorizationsContainer = vpcPeeringAuthorizationsContainer {
            vpcPeeringAuthorizationsDecoded0 = [VpcPeeringAuthorization]()
            for structure0 in vpcPeeringAuthorizationsContainer {
                vpcPeeringAuthorizationsDecoded0?.append(structure0)
            }
        }
        vpcPeeringAuthorizations = vpcPeeringAuthorizationsDecoded0
    }
}
