// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Values for use in <a>Player</a> attribute key-value pairs. This object lets
///             you specify an attribute value using any of the valid data types: string, number, string
///             array, or data map. Each <code>AttributeValue</code> object can use only one of the
///             available properties.</p>
public struct AttributeValue: Equatable {
    /// <p>For number values, expressed as double.</p>
    public let n: Double?
    /// <p>For single string values. Maximum string length is 100 characters.</p>
    public let s: String?
    /// <p>For a map of up to 10 data type:value pairs. Maximum length for each string value
    ///             is 100 characters. </p>
    public let sDM: [String:Double]?
    /// <p>For a list of up to 10 strings. Maximum length for each string is 100 characters.
    ///             Duplicate values are not recognized; all occurrences of the repeated value after the
    ///             first of a repeated value are ignored.</p>
    public let sL: [String]?

    public init (
        n: Double? = nil,
        s: String? = nil,
        sDM: [String:Double]? = nil,
        sL: [String]? = nil
    )
    {
        self.n = n
        self.s = s
        self.sDM = sDM
        self.sL = sL
    }
}
