// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceAccess: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case credentials = "Credentials"
        case fleetId = "FleetId"
        case instanceId = "InstanceId"
        case ipAddress = "IpAddress"
        case operatingSystem = "OperatingSystem"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let credentials = credentials {
            try encodeContainer.encode(credentials, forKey: .credentials)
        }
        if let fleetId = fleetId {
            try encodeContainer.encode(fleetId, forKey: .fleetId)
        }
        if let instanceId = instanceId {
            try encodeContainer.encode(instanceId, forKey: .instanceId)
        }
        if let ipAddress = ipAddress {
            try encodeContainer.encode(ipAddress, forKey: .ipAddress)
        }
        if let operatingSystem = operatingSystem {
            try encodeContainer.encode(operatingSystem.rawValue, forKey: .operatingSystem)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fleetId)
        fleetId = fleetIdDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let ipAddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipAddress)
        ipAddress = ipAddressDecoded
        let operatingSystemDecoded = try containerValues.decodeIfPresent(OperatingSystem.self, forKey: .operatingSystem)
        operatingSystem = operatingSystemDecoded
        let credentialsDecoded = try containerValues.decodeIfPresent(InstanceCredentials.self, forKey: .credentials)
        credentials = credentialsDecoded
    }
}
