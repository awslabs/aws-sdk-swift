// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input for a request operation.</p>
public struct CreateBuildInput: Equatable {
    /// <p>A descriptive label that is associated with a build. Build names do not need to be unique. You can use <a>UpdateBuild</a> to change this value later.
    ///         </p>
    public let name: String?
    /// <p>The operating system that the game server binaries are built to run on. This value
    ///             determines the type of fleet resources that you can use for this build. If your game
    ///             build contains multiple executables, they all must run on the same operating system. If
    ///             an operating system is not specified when creating a build, Amazon GameLift uses the
    ///             default value (WINDOWS_2012). This value cannot be changed later.</p>
    public let operatingSystem: OperatingSystem?
    /// <p>Information indicating where your game build files are stored. Use this parameter only
    ///             when creating a build with files stored in an Amazon S3 bucket that you own. The storage
    ///             location must specify an Amazon S3 bucket name and key. The location must also specify a role
    ///             ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your
    ///             new build must be in the same Region.</p>
    public let storageLocation: S3Location?
    /// <p>A list of labels to assign to the new build resource. Tags are developer-defined
    ///             key-value pairs. Tagging
    ///             AWS resources are useful for resource management, access management and cost allocation.
    ///             For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"> Tagging AWS Resources</a> in the
    ///             <i>AWS General Reference</i>. Once the resource is created, you can
    ///             use <a>TagResource</a>, <a>UntagResource</a>, and
    ///             <a>ListTagsForResource</a> to add, remove, and view tags. The
    ///             maximum tag limit may be lower than stated. See the AWS General Reference for actual
    ///             tagging limits.</p>
    public let tags: [Tag]?
    /// <p>Version information that is associated with a build or script. Version strings do not need to be unique. You can use <a>UpdateBuild</a> to change this value later.
    ///         </p>
    public let version: String?

    public init (
        name: String? = nil,
        operatingSystem: OperatingSystem? = nil,
        storageLocation: S3Location? = nil,
        tags: [Tag]? = nil,
        version: String? = nil
    )
    {
        self.name = name
        self.operatingSystem = operatingSystem
        self.storageLocation = storageLocation
        self.tags = tags
        self.version = version
    }
}
