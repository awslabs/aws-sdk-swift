// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateScriptInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case scriptId = "ScriptId"
        case storageLocation = "StorageLocation"
        case version = "Version"
        case zipFile = "ZipFile"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let scriptId = scriptId {
            try encodeContainer.encode(scriptId, forKey: .scriptId)
        }
        if let storageLocation = storageLocation {
            try encodeContainer.encode(storageLocation, forKey: .storageLocation)
        }
        if let version = version {
            try encodeContainer.encode(version, forKey: .version)
        }
        if let zipFile = zipFile {
            try encodeContainer.encode(zipFile.base64EncodedString(), forKey: .zipFile)
        }
    }
}
