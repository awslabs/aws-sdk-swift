// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameServerInstance: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case gameServerGroupArn = "GameServerGroupArn"
        case gameServerGroupName = "GameServerGroupName"
        case instanceId = "InstanceId"
        case instanceStatus = "InstanceStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gameServerGroupArn = gameServerGroupArn {
            try encodeContainer.encode(gameServerGroupArn, forKey: .gameServerGroupArn)
        }
        if let gameServerGroupName = gameServerGroupName {
            try encodeContainer.encode(gameServerGroupName, forKey: .gameServerGroupName)
        }
        if let instanceId = instanceId {
            try encodeContainer.encode(instanceId, forKey: .instanceId)
        }
        if let instanceStatus = instanceStatus {
            try encodeContainer.encode(instanceStatus.rawValue, forKey: .instanceStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let gameServerGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupArn)
        gameServerGroupArn = gameServerGroupArnDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let instanceStatusDecoded = try containerValues.decodeIfPresent(GameServerInstanceStatus.self, forKey: .instanceStatus)
        instanceStatus = instanceStatusDecoded
    }
}
