// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGameServerInputBody: Equatable {
    public let gameServerGroupName: String?
    public let gameServerId: String?
    public let gameServerData: String?
    public let utilizationStatus: GameServerUtilizationStatus?
    public let healthCheck: GameServerHealthCheck?
}

extension UpdateGameServerInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameServerData = "GameServerData"
        case gameServerGroupName = "GameServerGroupName"
        case gameServerId = "GameServerId"
        case healthCheck = "HealthCheck"
        case utilizationStatus = "UtilizationStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let gameServerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerId)
        gameServerId = gameServerIdDecoded
        let gameServerDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerData)
        gameServerData = gameServerDataDecoded
        let utilizationStatusDecoded = try containerValues.decodeIfPresent(GameServerUtilizationStatus.self, forKey: .utilizationStatus)
        utilizationStatus = utilizationStatusDecoded
        let healthCheckDecoded = try containerValues.decodeIfPresent(GameServerHealthCheck.self, forKey: .healthCheck)
        healthCheck = healthCheckDecoded
    }
}
