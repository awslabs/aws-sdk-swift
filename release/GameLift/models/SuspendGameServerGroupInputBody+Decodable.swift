// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SuspendGameServerGroupInputBody: Equatable {
    public let gameServerGroupName: String?
    public let suspendActions: [GameServerGroupAction]?
}

extension SuspendGameServerGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameServerGroupName = "GameServerGroupName"
        case suspendActions = "SuspendActions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let suspendActionsContainer = try containerValues.decodeIfPresent([GameServerGroupAction].self, forKey: .suspendActions)
        var suspendActionsDecoded0:[GameServerGroupAction]? = nil
        if let suspendActionsContainer = suspendActionsContainer {
            suspendActionsDecoded0 = [GameServerGroupAction]()
            for string0 in suspendActionsContainer {
                suspendActionsDecoded0?.append(string0)
            }
        }
        suspendActions = suspendActionsDecoded0
    }
}
