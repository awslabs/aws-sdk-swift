// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input for a request operation.</p>
public struct DescribeGameSessionsInput: Equatable {
    /// <p>A unique identifier for the alias associated with the fleet to retrieve game sessions for. You can use either the
    ///             alias ID or ARN value.</p>
    public let aliasId: String?
    /// <p>A unique identifier for the fleet to retrieve game sessions for. You can use either the fleet ID or ARN value. </p>
    public let fleetId: String?
    /// <p>A unique identifier for the game session to retrieve. </p>
    public let gameSessionId: String?
    /// <p>The maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.</p>
    public let limit: Int?
    /// <p>A fleet location to get game session details for. You can specify a fleet's home
    ///             Region or a remote location. Use the AWS Region code format, such as
    ///                 <code>us-west-2</code>. </p>
    public let location: String?
    /// <p>A token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value.</p>
    public let nextToken: String?
    /// <p>Game session status to filter results on. You can filter on the following states:
    ///                 <code>ACTIVE</code>, <code>TERMINATED</code>, <code>ACTIVATING</code>, and
    ///                 <code>TERMINATING</code>. The last two are transitory and used for only very brief
    ///             periods of time. </p>
    public let statusFilter: String?

    public init (
        aliasId: String? = nil,
        fleetId: String? = nil,
        gameSessionId: String? = nil,
        limit: Int? = nil,
        location: String? = nil,
        nextToken: String? = nil,
        statusFilter: String? = nil
    )
    {
        self.aliasId = aliasId
        self.fleetId = fleetId
        self.gameSessionId = gameSessionId
        self.limit = limit
        self.location = location
        self.nextToken = nextToken
        self.statusFilter = statusFilter
    }
}
