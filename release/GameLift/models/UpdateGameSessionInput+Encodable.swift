// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateGameSessionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case gameSessionId = "GameSessionId"
        case maximumPlayerSessionCount = "MaximumPlayerSessionCount"
        case name = "Name"
        case playerSessionCreationPolicy = "PlayerSessionCreationPolicy"
        case protectionPolicy = "ProtectionPolicy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gameSessionId = gameSessionId {
            try encodeContainer.encode(gameSessionId, forKey: .gameSessionId)
        }
        if let maximumPlayerSessionCount = maximumPlayerSessionCount {
            try encodeContainer.encode(maximumPlayerSessionCount, forKey: .maximumPlayerSessionCount)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let playerSessionCreationPolicy = playerSessionCreationPolicy {
            try encodeContainer.encode(playerSessionCreationPolicy.rawValue, forKey: .playerSessionCreationPolicy)
        }
        if let protectionPolicy = protectionPolicy {
            try encodeContainer.encode(protectionPolicy.rawValue, forKey: .protectionPolicy)
        }
    }
}
