// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResumeGameServerGroupInputBody: Equatable {
    public let gameServerGroupName: String?
    public let resumeActions: [GameServerGroupAction]?
}

extension ResumeGameServerGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameServerGroupName = "GameServerGroupName"
        case resumeActions = "ResumeActions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServerGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gameServerGroupName)
        gameServerGroupName = gameServerGroupNameDecoded
        let resumeActionsContainer = try containerValues.decodeIfPresent([GameServerGroupAction].self, forKey: .resumeActions)
        var resumeActionsDecoded0:[GameServerGroupAction]? = nil
        if let resumeActionsContainer = resumeActionsContainer {
            resumeActionsDecoded0 = [GameServerGroupAction]()
            for string0 in resumeActionsContainer {
                resumeActionsDecoded0?.append(string0)
            }
        }
        resumeActions = resumeActionsDecoded0
    }
}
