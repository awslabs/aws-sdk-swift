// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePlayerSessionsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case gameSessionId = "GameSessionId"
        case playerDataMap = "PlayerDataMap"
        case playerIds = "PlayerIds"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gameSessionId = gameSessionId {
            try encodeContainer.encode(gameSessionId, forKey: .gameSessionId)
        }
        if let playerDataMap = playerDataMap {
            var playerDataMapContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .playerDataMap)
            for (dictKey0, playerdatamap0) in playerDataMap {
                try playerDataMapContainer.encode(playerdatamap0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let playerIds = playerIds {
            var playerIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .playerIds)
            for playeridlist0 in playerIds {
                try playerIdsContainer.encode(playeridlist0)
            }
        }
    }
}
