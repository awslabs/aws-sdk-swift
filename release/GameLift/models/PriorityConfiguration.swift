// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Custom prioritization settings for use by a game session queue when placing new game
///             sessions with available game servers. When defined, this configuration replaces the
///             default FleetIQ prioritization process, which is as follows:</p>
///         <ul>
///             <li>
///                 <p>If player latency data is included in a game session request, destinations and
///                     locations are prioritized first based on lowest average latency (1), then on
///                     lowest hosting cost (2), then on destination list order (3), and finally on
///                     location (alphabetical) (4). This approach ensures that the queue's top priority
///                     is to place game sessions where average player latency is lowest, and--if
///                     latency is the same--where the hosting cost is less, etc.</p>
///             </li>
///             <li>
///                 <p>If player latency data is not included, destinations and locations are
///                     prioritized first on destination list order (1), and then on location
///                     (alphabetical) (2). This approach ensures that the queue's top priority is to
///                     place game sessions on the first destination fleet listed. If that fleet has
///                     multiple locations, the game session is placed on the first location (when
///                     listed alphabetically).</p>
///             </li>
///          </ul>
///         <p>Changing the priority order will affect how game sessions are placed.</p>
///         <p>Priority configurations are part of a <a>GameSessionQueue</a>.</p>
public struct PriorityConfiguration: Equatable {
    /// <p>The prioritization order to use for fleet locations, when the
    ///                 <code>PriorityOrder</code> property includes <code>LOCATION</code>. Locations are
    ///             identified by AWS Region codes such as <code>us-west-2</code>. Each location can only be
    ///             listed once. </p>
    public let locationOrder: [String]?
    /// <p>The recommended sequence to use when prioritizing where to place new game sessions.
    ///             Each type can only be listed once.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>LATENCY</code> -- FleetIQ prioritizes locations where the average player
    ///                     latency (provided in each game session request) is lowest. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>COST</code> -- FleetIQ prioritizes destinations with the lowest current
    ///                     hosting costs. Cost is evaluated based on the location, instance type, and fleet
    ///                     type (Spot or On-Demand) for each destination in the queue.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>DESTINATION</code> -- FleetIQ prioritizes based on the order that
    ///                     destinations are listed in the queue configuration.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>LOCATION</code> -- FleetIQ prioritizes based on the provided order of
    ///                     locations, as defined in <code>LocationOrder</code>. </p>
    ///             </li>
    ///          </ul>
    public let priorityOrder: [PriorityType]?

    public init (
        locationOrder: [String]? = nil,
        priorityOrder: [PriorityType]? = nil
    )
    {
        self.locationOrder = locationOrder
        self.priorityOrder = priorityOrder
    }
}
