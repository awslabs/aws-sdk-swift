// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGameServersOutputBody: Equatable {
    public let gameServers: [GameServer]?
    public let nextToken: String?
}

extension ListGameServersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gameServers = "GameServers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameServersContainer = try containerValues.decodeIfPresent([GameServer].self, forKey: .gameServers)
        var gameServersDecoded0:[GameServer]? = nil
        if let gameServersContainer = gameServersContainer {
            gameServersDecoded0 = [GameServer]()
            for structure0 in gameServersContainer {
                gameServersDecoded0?.append(structure0)
            }
        }
        gameServers = gameServersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
