// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMatchmakingRuleSetsOutputBody: Equatable {
    public let ruleSets: [MatchmakingRuleSet]?
    public let nextToken: String?
}

extension DescribeMatchmakingRuleSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case ruleSets = "RuleSets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleSetsContainer = try containerValues.decodeIfPresent([MatchmakingRuleSet].self, forKey: .ruleSets)
        var ruleSetsDecoded0:[MatchmakingRuleSet]? = nil
        if let ruleSetsContainer = ruleSetsContainer {
            ruleSetsDecoded0 = [MatchmakingRuleSet]()
            for structure0 in ruleSetsContainer {
                ruleSetsDecoded0?.append(structure0)
            }
        }
        ruleSets = ruleSetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
