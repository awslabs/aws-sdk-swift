// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TargetConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case targetValue = "TargetValue"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if targetValue != 0.0 {
            try encodeContainer.encode(targetValue, forKey: .targetValue)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetValueDecoded = try containerValues.decode(Double.self, forKey: .targetValue)
        targetValue = targetValueDecoded
    }
}
