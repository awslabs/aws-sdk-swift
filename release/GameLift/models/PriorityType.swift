// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PriorityType {
    case cost
    case destination
    case latency
    case location
    case sdkUnknown(String)
}

extension PriorityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PriorityType] {
        return [
            .cost,
            .destination,
            .latency,
            .location,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cost: return "COST"
        case .destination: return "DESTINATION"
        case .latency: return "LATENCY"
        case .location: return "LOCATION"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PriorityType(rawValue: rawValue) ?? PriorityType.sdkUnknown(rawValue)
    }
}
