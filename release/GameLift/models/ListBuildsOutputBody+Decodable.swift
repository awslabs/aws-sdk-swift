// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBuildsOutputBody: Equatable {
    public let builds: [Build]?
    public let nextToken: String?
}

extension ListBuildsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case builds = "Builds"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let buildsContainer = try containerValues.decodeIfPresent([Build].self, forKey: .builds)
        var buildsDecoded0:[Build]? = nil
        if let buildsContainer = buildsContainer {
            buildsDecoded0 = [Build]()
            for structure0 in buildsContainer {
                buildsDecoded0?.append(structure0)
            }
        }
        builds = buildsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
