// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents an EC2 instance of virtual computing resources that hosts one or more game
///             servers. In GameLift, a fleet can contain zero or more instances.</p>
///         <p>
///             <b>Related actions</b>
///          </p>
///         <p>
///             <a>DescribeInstances</a>
///          </p>
public struct Instance: Equatable {
    /// <p>A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example <code>"1469498468.057"</code>).</p>
    public let creationTime: Date?
    /// <p>The DNS identifier assigned to the instance that is running the game session. Values have
    ///             the following format:</p>
    ///          <ul>
    ///             <li>
    ///                <p>TLS-enabled fleets: <code><unique identifier>.<region identifier>.amazongamelift.com</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Non-TLS-enabled fleets: <code>ec2-<unique identifier>.compute.amazonaws.com</code>. (See
    ///             <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses">Amazon EC2 Instance IP Addressing</a>.)</p>
    ///             </li>
    ///          </ul>
    ///             <p>When connecting to a game session that is running on a TLS-enabled fleet, you must use the DNS name, not the IP address.</p>
    public let dnsName: String?
    /// <p>The Amazon Resource Name (<a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>) that is assigned to a GameLift fleet resource and uniquely identifies it. ARNs are unique across all Regions. Format is <code>arn:aws:gamelift:<region>::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912</code>.</p>
    public let fleetArn: String?
    /// <p>A unique identifier for the fleet that the instance is in.</p>
    public let fleetId: String?
    /// <p>A unique identifier for the instance.</p>
    public let instanceId: String?
    /// <p>IP address that is assigned to the instance.</p>
    public let ipAddress: String?
    /// <p>The fleet location of the instance, expressed as an AWS Region
    ///             code, such as <code>us-west-2</code>. </p>
    public let location: String?
    /// <p>Operating system that is running on this instance. </p>
    public let operatingSystem: OperatingSystem?
    /// <p>Current status of the instance. Possible statuses include the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>PENDING</b> -- The instance is in the process of
    ///                 being created and launching server processes as defined in the fleet's run-time
    ///                 configuration. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>ACTIVE</b> -- The instance has been successfully
    ///                 created and at least one server process has successfully launched and reported
    ///                 back to GameLift that it is ready to host a game session. The instance is now
    ///                 considered ready to host game sessions. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>TERMINATING</b> -- The instance is in the process
    ///                 of shutting down. This may happen to reduce capacity during a scaling down event
    ///                 or to recycle resources in the event of a problem.</p>
    ///             </li>
    ///          </ul>
    public let status: InstanceStatus?
    /// <p>EC2 instance type that defines the computing resources of this instance.
    ///     </p>
    public let type: EC2InstanceType?

    public init (
        creationTime: Date? = nil,
        dnsName: String? = nil,
        fleetArn: String? = nil,
        fleetId: String? = nil,
        instanceId: String? = nil,
        ipAddress: String? = nil,
        location: String? = nil,
        operatingSystem: OperatingSystem? = nil,
        status: InstanceStatus? = nil,
        type: EC2InstanceType? = nil
    )
    {
        self.creationTime = creationTime
        self.dnsName = dnsName
        self.fleetArn = fleetArn
        self.fleetId = fleetId
        self.instanceId = instanceId
        self.ipAddress = ipAddress
        self.location = location
        self.operatingSystem = operatingSystem
        self.status = status
        self.type = type
    }
}
