// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GameSessionDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case gameSession = "GameSession"
        case protectionPolicy = "ProtectionPolicy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gameSession = gameSession {
            try encodeContainer.encode(gameSession, forKey: .gameSession)
        }
        if let protectionPolicy = protectionPolicy {
            try encodeContainer.encode(protectionPolicy.rawValue, forKey: .protectionPolicy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gameSessionDecoded = try containerValues.decodeIfPresent(GameSession.self, forKey: .gameSession)
        gameSession = gameSessionDecoded
        let protectionPolicyDecoded = try containerValues.decodeIfPresent(ProtectionPolicy.self, forKey: .protectionPolicy)
        protectionPolicy = protectionPolicyDecoded
    }
}
