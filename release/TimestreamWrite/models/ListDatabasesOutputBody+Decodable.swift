// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatabasesOutputBody: Equatable {
    public let databases: [Database]?
    public let nextToken: String?
}

extension ListDatabasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case databases = "Databases"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let databasesContainer = try containerValues.decodeIfPresent([Database].self, forKey: .databases)
        var databasesDecoded0:[Database]? = nil
        if let databasesContainer = databasesContainer {
            databasesDecoded0 = [Database]()
            for structure0 in databasesContainer {
                databasesDecoded0?.append(structure0)
            }
        }
        databases = databasesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
