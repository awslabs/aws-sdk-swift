// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MeasureValueType {
    case bigint
    case boolean
    case double
    case varchar
    case sdkUnknown(String)
}

extension MeasureValueType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MeasureValueType] {
        return [
            .bigint,
            .boolean,
            .double,
            .varchar,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bigint: return "BIGINT"
        case .boolean: return "BOOLEAN"
        case .double: return "DOUBLE"
        case .varchar: return "VARCHAR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MeasureValueType(rawValue: rawValue) ?? MeasureValueType.sdkUnknown(rawValue)
    }
}
