// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartBulkDeploymentInputBody: Equatable {
    public let executionRoleArn: String?
    public let inputFileUri: String?
    public let tags: [String:String]?
}

extension StartBulkDeploymentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case executionRoleArn = "ExecutionRoleArn"
        case inputFileUri = "InputFileUri"
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let inputFileUriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .inputFileUri)
        inputFileUri = inputFileUriDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, __string0) in tagsContainer {
                tagsDecoded0?[key0] = __string0
            }
        }
        tags = tagsDecoded0
    }
}
