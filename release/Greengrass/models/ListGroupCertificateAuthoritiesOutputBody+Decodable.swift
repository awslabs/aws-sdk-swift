// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroupCertificateAuthoritiesOutputBody: Equatable {
    public let groupCertificateAuthorities: [GroupCertificateAuthorityProperties]?
}

extension ListGroupCertificateAuthoritiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groupCertificateAuthorities = "GroupCertificateAuthorities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupCertificateAuthoritiesContainer = try containerValues.decodeIfPresent([GroupCertificateAuthorityProperties].self, forKey: .groupCertificateAuthorities)
        var groupCertificateAuthoritiesDecoded0:[GroupCertificateAuthorityProperties]? = nil
        if let groupCertificateAuthoritiesContainer = groupCertificateAuthoritiesContainer {
            groupCertificateAuthoritiesDecoded0 = [GroupCertificateAuthorityProperties]()
            for structure0 in groupCertificateAuthoritiesContainer {
                groupCertificateAuthoritiesDecoded0?.append(structure0)
            }
        }
        groupCertificateAuthorities = groupCertificateAuthoritiesDecoded0
    }
}
