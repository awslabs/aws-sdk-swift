// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceDefinitionVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case devices = "Devices"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let devices = devices {
            var devicesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .devices)
            for __listofdevice0 in devices {
                try devicesContainer.encode(__listofdevice0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicesContainer = try containerValues.decodeIfPresent([Device].self, forKey: .devices)
        var devicesDecoded0:[Device]? = nil
        if let devicesContainer = devicesContainer {
            devicesDecoded0 = [Device]()
            for structure0 in devicesContainer {
                devicesDecoded0?.append(structure0)
            }
        }
        devices = devicesDecoded0
    }
}
