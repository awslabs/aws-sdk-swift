// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GroupOwnerSetting: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case autoAddGroupOwner = "AutoAddGroupOwner"
        case groupOwner = "GroupOwner"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if autoAddGroupOwner != false {
            try encodeContainer.encode(autoAddGroupOwner, forKey: .autoAddGroupOwner)
        }
        if let groupOwner = groupOwner {
            try encodeContainer.encode(groupOwner, forKey: .groupOwner)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let autoAddGroupOwnerDecoded = try containerValues.decode(Bool.self, forKey: .autoAddGroupOwner)
        autoAddGroupOwner = autoAddGroupOwnerDecoded
        let groupOwnerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupOwner)
        groupOwner = groupOwnerDecoded
    }
}
