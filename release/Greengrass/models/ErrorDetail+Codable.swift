// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ErrorDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case detailedErrorCode = "DetailedErrorCode"
        case detailedErrorMessage = "DetailedErrorMessage"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let detailedErrorCode = detailedErrorCode {
            try encodeContainer.encode(detailedErrorCode, forKey: .detailedErrorCode)
        }
        if let detailedErrorMessage = detailedErrorMessage {
            try encodeContainer.encode(detailedErrorMessage, forKey: .detailedErrorMessage)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detailedErrorCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .detailedErrorCode)
        detailedErrorCode = detailedErrorCodeDecoded
        let detailedErrorMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .detailedErrorMessage)
        detailedErrorMessage = detailedErrorMessageDecoded
    }
}
