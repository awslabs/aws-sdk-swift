// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceDefinitionVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resources = "Resources"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resources = resources {
            var resourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resources)
            for __listofresource0 in resources {
                try resourcesContainer.encode(__listofresource0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourcesContainer = try containerValues.decodeIfPresent([Resource].self, forKey: .resources)
        var resourcesDecoded0:[Resource]? = nil
        if let resourcesContainer = resourcesContainer {
            resourcesDecoded0 = [Resource]()
            for structure0 in resourcesContainer {
                resourcesDecoded0?.append(structure0)
            }
        }
        resources = resourcesDecoded0
    }
}
