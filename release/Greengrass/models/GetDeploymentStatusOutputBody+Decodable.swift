// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeploymentStatusOutputBody: Equatable {
    public let deploymentStatus: String?
    public let deploymentType: DeploymentType?
    public let errorDetails: [ErrorDetail]?
    public let errorMessage: String?
    public let updatedAt: String?
}

extension GetDeploymentStatusOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deploymentStatus = "DeploymentStatus"
        case deploymentType = "DeploymentType"
        case errorDetails = "ErrorDetails"
        case errorMessage = "ErrorMessage"
        case updatedAt = "UpdatedAt"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentStatus)
        deploymentStatus = deploymentStatusDecoded
        let deploymentTypeDecoded = try containerValues.decodeIfPresent(DeploymentType.self, forKey: .deploymentType)
        deploymentType = deploymentTypeDecoded
        let errorDetailsContainer = try containerValues.decodeIfPresent([ErrorDetail].self, forKey: .errorDetails)
        var errorDetailsDecoded0:[ErrorDetail]? = nil
        if let errorDetailsContainer = errorDetailsContainer {
            errorDetailsDecoded0 = [ErrorDetail]()
            for structure0 in errorDetailsContainer {
                errorDetailsDecoded0?.append(structure0)
            }
        }
        errorDetails = errorDetailsDecoded0
        let errorMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(String.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
