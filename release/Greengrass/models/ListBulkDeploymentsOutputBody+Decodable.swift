// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBulkDeploymentsOutputBody: Equatable {
    public let bulkDeployments: [BulkDeployment]?
    public let nextToken: String?
}

extension ListBulkDeploymentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bulkDeployments = "BulkDeployments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bulkDeploymentsContainer = try containerValues.decodeIfPresent([BulkDeployment].self, forKey: .bulkDeployments)
        var bulkDeploymentsDecoded0:[BulkDeployment]? = nil
        if let bulkDeploymentsContainer = bulkDeploymentsContainer {
            bulkDeploymentsDecoded0 = [BulkDeployment]()
            for structure0 in bulkDeploymentsContainer {
                bulkDeploymentsDecoded0?.append(structure0)
            }
        }
        bulkDeployments = bulkDeploymentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
