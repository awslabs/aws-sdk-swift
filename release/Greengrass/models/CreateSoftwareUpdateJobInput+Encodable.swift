// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateSoftwareUpdateJobInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case s3UrlSignerRole = "S3UrlSignerRole"
        case softwareToUpdate = "SoftwareToUpdate"
        case updateAgentLogLevel = "UpdateAgentLogLevel"
        case updateTargets = "UpdateTargets"
        case updateTargetsArchitecture = "UpdateTargetsArchitecture"
        case updateTargetsOperatingSystem = "UpdateTargetsOperatingSystem"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let s3UrlSignerRole = s3UrlSignerRole {
            try encodeContainer.encode(s3UrlSignerRole, forKey: .s3UrlSignerRole)
        }
        if let softwareToUpdate = softwareToUpdate {
            try encodeContainer.encode(softwareToUpdate.rawValue, forKey: .softwareToUpdate)
        }
        if let updateAgentLogLevel = updateAgentLogLevel {
            try encodeContainer.encode(updateAgentLogLevel.rawValue, forKey: .updateAgentLogLevel)
        }
        if let updateTargets = updateTargets {
            var updateTargetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .updateTargets)
            for updatetargets0 in updateTargets {
                try updateTargetsContainer.encode(updatetargets0)
            }
        }
        if let updateTargetsArchitecture = updateTargetsArchitecture {
            try encodeContainer.encode(updateTargetsArchitecture.rawValue, forKey: .updateTargetsArchitecture)
        }
        if let updateTargetsOperatingSystem = updateTargetsOperatingSystem {
            try encodeContainer.encode(updateTargetsOperatingSystem.rawValue, forKey: .updateTargetsOperatingSystem)
        }
    }
}
