// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConnectivityInfoOutputBody: Equatable {
    public let connectivityInfo: [ConnectivityInfo]?
    public let message: String?
}

extension GetConnectivityInfoOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectivityInfo = "ConnectivityInfo"
        case message = "message"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectivityInfoContainer = try containerValues.decodeIfPresent([ConnectivityInfo].self, forKey: .connectivityInfo)
        var connectivityInfoDecoded0:[ConnectivityInfo]? = nil
        if let connectivityInfoContainer = connectivityInfoContainer {
            connectivityInfoDecoded0 = [ConnectivityInfo]()
            for structure0 in connectivityInfoContainer {
                connectivityInfoDecoded0?.append(structure0)
            }
        }
        connectivityInfo = connectivityInfoDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
    }
}
