// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceDownloadOwnerSetting: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case groupOwner = "GroupOwner"
        case groupPermission = "GroupPermission"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groupOwner = groupOwner {
            try encodeContainer.encode(groupOwner, forKey: .groupOwner)
        }
        if let groupPermission = groupPermission {
            try encodeContainer.encode(groupPermission.rawValue, forKey: .groupPermission)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupOwnerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupOwner)
        groupOwner = groupOwnerDecoded
        let groupPermissionDecoded = try containerValues.decodeIfPresent(Permission.self, forKey: .groupPermission)
        groupPermission = groupPermissionDecoded
    }
}
