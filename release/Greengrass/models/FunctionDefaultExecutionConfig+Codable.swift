// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FunctionDefaultExecutionConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isolationMode = "IsolationMode"
        case runAs = "RunAs"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isolationMode = isolationMode {
            try encodeContainer.encode(isolationMode.rawValue, forKey: .isolationMode)
        }
        if let runAs = runAs {
            try encodeContainer.encode(runAs, forKey: .runAs)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let isolationModeDecoded = try containerValues.decodeIfPresent(FunctionIsolationMode.self, forKey: .isolationMode)
        isolationMode = isolationModeDecoded
        let runAsDecoded = try containerValues.decodeIfPresent(FunctionRunAsConfig.self, forKey: .runAs)
        runAs = runAsDecoded
    }
}
