// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCoreDefinitionsOutputBody: Equatable {
    public let definitions: [DefinitionInformation]?
    public let nextToken: String?
}

extension ListCoreDefinitionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case definitions = "Definitions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let definitionsContainer = try containerValues.decodeIfPresent([DefinitionInformation].self, forKey: .definitions)
        var definitionsDecoded0:[DefinitionInformation]? = nil
        if let definitionsContainer = definitionsContainer {
            definitionsDecoded0 = [DefinitionInformation]()
            for structure0 in definitionsContainer {
                definitionsDecoded0?.append(structure0)
            }
        }
        definitions = definitionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
