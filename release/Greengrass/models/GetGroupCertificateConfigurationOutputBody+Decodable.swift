// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetGroupCertificateConfigurationOutputBody: Equatable {
    public let certificateAuthorityExpiryInMilliseconds: String?
    public let certificateExpiryInMilliseconds: String?
    public let groupId: String?
}

extension GetGroupCertificateConfigurationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateAuthorityExpiryInMilliseconds = "CertificateAuthorityExpiryInMilliseconds"
        case certificateExpiryInMilliseconds = "CertificateExpiryInMilliseconds"
        case groupId = "GroupId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityExpiryInMillisecondsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateAuthorityExpiryInMilliseconds)
        certificateAuthorityExpiryInMilliseconds = certificateAuthorityExpiryInMillisecondsDecoded
        let certificateExpiryInMillisecondsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateExpiryInMilliseconds)
        certificateExpiryInMilliseconds = certificateExpiryInMillisecondsDecoded
        let groupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupId)
        groupId = groupIdDecoded
    }
}
