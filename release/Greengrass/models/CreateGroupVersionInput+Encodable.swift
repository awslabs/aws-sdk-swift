// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateGroupVersionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectorDefinitionVersionArn = "ConnectorDefinitionVersionArn"
        case coreDefinitionVersionArn = "CoreDefinitionVersionArn"
        case deviceDefinitionVersionArn = "DeviceDefinitionVersionArn"
        case functionDefinitionVersionArn = "FunctionDefinitionVersionArn"
        case loggerDefinitionVersionArn = "LoggerDefinitionVersionArn"
        case resourceDefinitionVersionArn = "ResourceDefinitionVersionArn"
        case subscriptionDefinitionVersionArn = "SubscriptionDefinitionVersionArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectorDefinitionVersionArn = connectorDefinitionVersionArn {
            try encodeContainer.encode(connectorDefinitionVersionArn, forKey: .connectorDefinitionVersionArn)
        }
        if let coreDefinitionVersionArn = coreDefinitionVersionArn {
            try encodeContainer.encode(coreDefinitionVersionArn, forKey: .coreDefinitionVersionArn)
        }
        if let deviceDefinitionVersionArn = deviceDefinitionVersionArn {
            try encodeContainer.encode(deviceDefinitionVersionArn, forKey: .deviceDefinitionVersionArn)
        }
        if let functionDefinitionVersionArn = functionDefinitionVersionArn {
            try encodeContainer.encode(functionDefinitionVersionArn, forKey: .functionDefinitionVersionArn)
        }
        if let loggerDefinitionVersionArn = loggerDefinitionVersionArn {
            try encodeContainer.encode(loggerDefinitionVersionArn, forKey: .loggerDefinitionVersionArn)
        }
        if let resourceDefinitionVersionArn = resourceDefinitionVersionArn {
            try encodeContainer.encode(resourceDefinitionVersionArn, forKey: .resourceDefinitionVersionArn)
        }
        if let subscriptionDefinitionVersionArn = subscriptionDefinitionVersionArn {
            try encodeContainer.encode(subscriptionDefinitionVersionArn, forKey: .subscriptionDefinitionVersionArn)
        }
    }
}
