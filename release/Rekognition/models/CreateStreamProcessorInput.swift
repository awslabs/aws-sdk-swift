// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateStreamProcessorInput: Equatable {
    /// <p>Kinesis video stream stream that provides the source streaming video. If you are using the AWS CLI, the parameter name is <code>StreamProcessorInput</code>.</p>
    public let input: StreamProcessorInput?
    /// <p>An identifier you assign to the stream processor. You can use <code>Name</code> to
    ///             manage the stream processor. For example, you can get the current status of the stream processor by calling <a>DescribeStreamProcessor</a>.
    ///              <code>Name</code> is idempotent.
    ///        </p>
    public let name: String?
    /// <p>Kinesis data stream stream to which Amazon Rekognition Video puts the analysis results. If you are using the AWS CLI, the parameter name is <code>StreamProcessorOutput</code>.</p>
    public let output: StreamProcessorOutput?
    /// <p>ARN of the IAM role that allows access to the stream processor.</p>
    public let roleArn: String?
    /// <p>Face recognition input parameters to be used by the stream processor. Includes the collection to use for face recognition and the face
    ///         attributes to detect.</p>
    public let settings: StreamProcessorSettings?
    /// <p>
    ///       A set of tags (key-value pairs) that you want to attach to the stream processor.
    ///     </p>
    public let tags: [String:String]?

    public init (
        input: StreamProcessorInput? = nil,
        name: String? = nil,
        output: StreamProcessorOutput? = nil,
        roleArn: String? = nil,
        settings: StreamProcessorSettings? = nil,
        tags: [String:String]? = nil
    )
    {
        self.input = input
        self.name = name
        self.output = output
        self.roleArn = roleArn
        self.settings = settings
        self.tags = tags
    }
}
