// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFaceSearchOutputBody: Equatable {
    public let jobStatus: VideoJobStatus?
    public let statusMessage: String?
    public let nextToken: String?
    public let videoMetadata: VideoMetadata?
    public let persons: [PersonMatch]?
}

extension GetFaceSearchOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobStatus = "JobStatus"
        case nextToken = "NextToken"
        case persons = "Persons"
        case statusMessage = "StatusMessage"
        case videoMetadata = "VideoMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobStatusDecoded = try containerValues.decodeIfPresent(VideoJobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let videoMetadataDecoded = try containerValues.decodeIfPresent(VideoMetadata.self, forKey: .videoMetadata)
        videoMetadata = videoMetadataDecoded
        let personsContainer = try containerValues.decodeIfPresent([PersonMatch].self, forKey: .persons)
        var personsDecoded0:[PersonMatch]? = nil
        if let personsContainer = personsContainer {
            personsDecoded0 = [PersonMatch]()
            for structure0 in personsContainer {
                personsDecoded0?.append(structure0)
            }
        }
        persons = personsDecoded0
    }
}
