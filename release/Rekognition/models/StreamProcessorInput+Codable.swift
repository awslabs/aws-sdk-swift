// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StreamProcessorInput: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case kinesisVideoStream = "KinesisVideoStream"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kinesisVideoStream = kinesisVideoStream {
            try encodeContainer.encode(kinesisVideoStream, forKey: .kinesisVideoStream)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kinesisVideoStreamDecoded = try containerValues.decodeIfPresent(KinesisVideoStream.self, forKey: .kinesisVideoStream)
        kinesisVideoStream = kinesisVideoStreamDecoded
    }
}
