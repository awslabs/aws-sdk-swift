// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProtectiveEquipmentPerson: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bodyParts = "BodyParts"
        case boundingBox = "BoundingBox"
        case confidence = "Confidence"
        case id = "Id"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bodyParts = bodyParts {
            var bodyPartsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .bodyParts)
            for bodyparts0 in bodyParts {
                try bodyPartsContainer.encode(bodyparts0)
            }
        }
        if let boundingBox = boundingBox {
            try encodeContainer.encode(boundingBox, forKey: .boundingBox)
        }
        if let confidence = confidence {
            try encodeContainer.encode(confidence, forKey: .confidence)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bodyPartsContainer = try containerValues.decodeIfPresent([ProtectiveEquipmentBodyPart].self, forKey: .bodyParts)
        var bodyPartsDecoded0:[ProtectiveEquipmentBodyPart]? = nil
        if let bodyPartsContainer = bodyPartsContainer {
            bodyPartsDecoded0 = [ProtectiveEquipmentBodyPart]()
            for structure0 in bodyPartsContainer {
                bodyPartsDecoded0?.append(structure0)
            }
        }
        bodyParts = bodyPartsDecoded0
        let boundingBoxDecoded = try containerValues.decodeIfPresent(BoundingBox.self, forKey: .boundingBox)
        boundingBox = boundingBoxDecoded
        let confidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .confidence)
        confidence = confidenceDecoded
        let idDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .id)
        id = idDecoded
    }
}
