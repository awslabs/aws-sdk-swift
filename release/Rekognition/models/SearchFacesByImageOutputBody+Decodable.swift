// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchFacesByImageOutputBody: Equatable {
    public let searchedFaceBoundingBox: BoundingBox?
    public let searchedFaceConfidence: Float?
    public let faceMatches: [FaceMatch]?
    public let faceModelVersion: String?
}

extension SearchFacesByImageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case faceMatches = "FaceMatches"
        case faceModelVersion = "FaceModelVersion"
        case searchedFaceBoundingBox = "SearchedFaceBoundingBox"
        case searchedFaceConfidence = "SearchedFaceConfidence"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let searchedFaceBoundingBoxDecoded = try containerValues.decodeIfPresent(BoundingBox.self, forKey: .searchedFaceBoundingBox)
        searchedFaceBoundingBox = searchedFaceBoundingBoxDecoded
        let searchedFaceConfidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .searchedFaceConfidence)
        searchedFaceConfidence = searchedFaceConfidenceDecoded
        let faceMatchesContainer = try containerValues.decodeIfPresent([FaceMatch].self, forKey: .faceMatches)
        var faceMatchesDecoded0:[FaceMatch]? = nil
        if let faceMatchesContainer = faceMatchesContainer {
            faceMatchesDecoded0 = [FaceMatch]()
            for structure0 in faceMatchesContainer {
                faceMatchesDecoded0?.append(structure0)
            }
        }
        faceMatches = faceMatchesDecoded0
        let faceModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .faceModelVersion)
        faceModelVersion = faceModelVersionDecoded
    }
}
