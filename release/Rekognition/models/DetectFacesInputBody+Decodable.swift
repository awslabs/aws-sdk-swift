// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectFacesInputBody: Equatable {
    public let image: Image?
    public let attributes: [Attribute]?
}

extension DetectFacesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributes = "Attributes"
        case image = "Image"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDecoded = try containerValues.decodeIfPresent(Image.self, forKey: .image)
        image = imageDecoded
        let attributesContainer = try containerValues.decodeIfPresent([Attribute].self, forKey: .attributes)
        var attributesDecoded0:[Attribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [Attribute]()
            for string0 in attributesContainer {
                attributesDecoded0?.append(string0)
            }
        }
        attributes = attributesDecoded0
    }
}
