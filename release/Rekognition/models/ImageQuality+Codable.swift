// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImageQuality: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case brightness = "Brightness"
        case sharpness = "Sharpness"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let brightness = brightness {
            try encodeContainer.encode(brightness, forKey: .brightness)
        }
        if let sharpness = sharpness {
            try encodeContainer.encode(sharpness, forKey: .sharpness)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let brightnessDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .brightness)
        brightness = brightnessDecoded
        let sharpnessDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .sharpness)
        sharpness = sharpnessDecoded
    }
}
