// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProjectVersionInputBody: Equatable {
    public let projectArn: String?
    public let versionName: String?
    public let outputConfig: OutputConfig?
    public let trainingData: TrainingData?
    public let testingData: TestingData?
    public let tags: [String:String]?
    public let kmsKeyId: String?
}

extension CreateProjectVersionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case kmsKeyId = "KmsKeyId"
        case outputConfig = "OutputConfig"
        case projectArn = "ProjectArn"
        case tags = "Tags"
        case testingData = "TestingData"
        case trainingData = "TrainingData"
        case versionName = "VersionName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let versionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionName)
        versionName = versionNameDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(OutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let trainingDataDecoded = try containerValues.decodeIfPresent(TrainingData.self, forKey: .trainingData)
        trainingData = trainingDataDecoded
        let testingDataDecoded = try containerValues.decodeIfPresent(TestingData.self, forKey: .testingData)
        testingData = testingDataDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
