// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectVersionsInputBody: Equatable {
    public let projectArn: String?
    public let versionNames: [String]?
    public let nextToken: String?
    public let maxResults: Int?
}

extension DescribeProjectVersionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case projectArn = "ProjectArn"
        case versionNames = "VersionNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let versionNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .versionNames)
        var versionNamesDecoded0:[String]? = nil
        if let versionNamesContainer = versionNamesContainer {
            versionNamesDecoded0 = [String]()
            for string0 in versionNamesContainer {
                versionNamesDecoded0?.append(string0)
            }
        }
        versionNames = versionNamesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
