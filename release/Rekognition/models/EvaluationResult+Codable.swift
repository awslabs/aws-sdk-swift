// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EvaluationResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case f1Score = "F1Score"
        case summary = "Summary"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let f1Score = f1Score {
            try encodeContainer.encode(f1Score, forKey: .f1Score)
        }
        if let summary = summary {
            try encodeContainer.encode(summary, forKey: .summary)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let f1ScoreDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .f1Score)
        f1Score = f1ScoreDecoded
        let summaryDecoded = try containerValues.decodeIfPresent(Summary.self, forKey: .summary)
        summary = summaryDecoded
    }
}
