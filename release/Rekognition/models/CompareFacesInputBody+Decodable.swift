// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CompareFacesInputBody: Equatable {
    public let sourceImage: Image?
    public let targetImage: Image?
    public let similarityThreshold: Float?
    public let qualityFilter: QualityFilter?
}

extension CompareFacesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case qualityFilter = "QualityFilter"
        case similarityThreshold = "SimilarityThreshold"
        case sourceImage = "SourceImage"
        case targetImage = "TargetImage"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceImageDecoded = try containerValues.decodeIfPresent(Image.self, forKey: .sourceImage)
        sourceImage = sourceImageDecoded
        let targetImageDecoded = try containerValues.decodeIfPresent(Image.self, forKey: .targetImage)
        targetImage = targetImageDecoded
        let similarityThresholdDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .similarityThreshold)
        similarityThreshold = similarityThresholdDecoded
        let qualityFilterDecoded = try containerValues.decodeIfPresent(QualityFilter.self, forKey: .qualityFilter)
        qualityFilter = qualityFilterDecoded
    }
}
