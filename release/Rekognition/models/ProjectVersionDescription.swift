// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The description of a version of a model.</p>
public struct ProjectVersionDescription: Equatable {
    /// <p>The duration, in seconds, that the model version has been billed for training.
    ///       This value is only returned if the model version has been successfully trained.</p>
    public let billableTrainingTimeInSeconds: Int?
    /// <p>The Unix datetime for the date and time that training started.</p>
    public let creationTimestamp: Date?
    /// <p>The training results. <code>EvaluationResult</code> is only returned if training is successful.</p>
    public let evaluationResult: EvaluationResult?
    /// <p>The identifer for the AWS Key Management Service (AWS KMS) customer master key that was used to encrypt the model during training. </p>
    public let kmsKeyId: String?
    /// <p>The location of the summary manifest. The summary manifest provides aggregate data validation results for the training
    ///          and test datasets.</p>
    public let manifestSummary: GroundTruthManifest?
    /// <p>The minimum number of inference units used by the model. For more information,
    ///       see <a>StartProjectVersion</a>.</p>
    public let minInferenceUnits: Int?
    /// <p>The location where training results are saved.</p>
    public let outputConfig: OutputConfig?
    /// <p>The Amazon Resource Name (ARN) of the model version. </p>
    public let projectVersionArn: String?
    /// <p>The current status of the model version.</p>
    public let status: ProjectVersionStatus?
    /// <p>A descriptive message for an error or warning that occurred.</p>
    public let statusMessage: String?
    /// <p>Contains information about the testing results.</p>
    public let testingDataResult: TestingDataResult?
    /// <p>Contains information about the training results.</p>
    public let trainingDataResult: TrainingDataResult?
    /// <p>The Unix date and time that training of the model ended.</p>
    public let trainingEndTimestamp: Date?

    public init (
        billableTrainingTimeInSeconds: Int? = nil,
        creationTimestamp: Date? = nil,
        evaluationResult: EvaluationResult? = nil,
        kmsKeyId: String? = nil,
        manifestSummary: GroundTruthManifest? = nil,
        minInferenceUnits: Int? = nil,
        outputConfig: OutputConfig? = nil,
        projectVersionArn: String? = nil,
        status: ProjectVersionStatus? = nil,
        statusMessage: String? = nil,
        testingDataResult: TestingDataResult? = nil,
        trainingDataResult: TrainingDataResult? = nil,
        trainingEndTimestamp: Date? = nil
    )
    {
        self.billableTrainingTimeInSeconds = billableTrainingTimeInSeconds
        self.creationTimestamp = creationTimestamp
        self.evaluationResult = evaluationResult
        self.kmsKeyId = kmsKeyId
        self.manifestSummary = manifestSummary
        self.minInferenceUnits = minInferenceUnits
        self.outputConfig = outputConfig
        self.projectVersionArn = projectVersionArn
        self.status = status
        self.statusMessage = statusMessage
        self.testingDataResult = testingDataResult
        self.trainingDataResult = trainingDataResult
        self.trainingEndTimestamp = trainingEndTimestamp
    }
}
