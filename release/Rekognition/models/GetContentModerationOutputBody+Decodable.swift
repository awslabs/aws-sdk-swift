// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetContentModerationOutputBody: Equatable {
    public let jobStatus: VideoJobStatus?
    public let statusMessage: String?
    public let videoMetadata: VideoMetadata?
    public let moderationLabels: [ContentModerationDetection]?
    public let nextToken: String?
    public let moderationModelVersion: String?
}

extension GetContentModerationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobStatus = "JobStatus"
        case moderationLabels = "ModerationLabels"
        case moderationModelVersion = "ModerationModelVersion"
        case nextToken = "NextToken"
        case statusMessage = "StatusMessage"
        case videoMetadata = "VideoMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobStatusDecoded = try containerValues.decodeIfPresent(VideoJobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let videoMetadataDecoded = try containerValues.decodeIfPresent(VideoMetadata.self, forKey: .videoMetadata)
        videoMetadata = videoMetadataDecoded
        let moderationLabelsContainer = try containerValues.decodeIfPresent([ContentModerationDetection].self, forKey: .moderationLabels)
        var moderationLabelsDecoded0:[ContentModerationDetection]? = nil
        if let moderationLabelsContainer = moderationLabelsContainer {
            moderationLabelsDecoded0 = [ContentModerationDetection]()
            for structure0 in moderationLabelsContainer {
                moderationLabelsDecoded0?.append(structure0)
            }
        }
        moderationLabels = moderationLabelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let moderationModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .moderationModelVersion)
        moderationModelVersion = moderationModelVersionDecoded
    }
}
