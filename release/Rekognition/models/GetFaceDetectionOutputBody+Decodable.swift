// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFaceDetectionOutputBody: Equatable {
    public let jobStatus: VideoJobStatus?
    public let statusMessage: String?
    public let videoMetadata: VideoMetadata?
    public let nextToken: String?
    public let faces: [FaceDetection]?
}

extension GetFaceDetectionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case faces = "Faces"
        case jobStatus = "JobStatus"
        case nextToken = "NextToken"
        case statusMessage = "StatusMessage"
        case videoMetadata = "VideoMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobStatusDecoded = try containerValues.decodeIfPresent(VideoJobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let videoMetadataDecoded = try containerValues.decodeIfPresent(VideoMetadata.self, forKey: .videoMetadata)
        videoMetadata = videoMetadataDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let facesContainer = try containerValues.decodeIfPresent([FaceDetection].self, forKey: .faces)
        var facesDecoded0:[FaceDetection]? = nil
        if let facesContainer = facesContainer {
            facesDecoded0 = [FaceDetection]()
            for structure0 in facesContainer {
                facesDecoded0?.append(structure0)
            }
        }
        faces = facesDecoded0
    }
}
