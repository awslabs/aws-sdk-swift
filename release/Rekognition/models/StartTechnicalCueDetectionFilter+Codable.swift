// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartTechnicalCueDetectionFilter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case minSegmentConfidence = "MinSegmentConfidence"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let minSegmentConfidence = minSegmentConfidence {
            try encodeContainer.encode(minSegmentConfidence, forKey: .minSegmentConfidence)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let minSegmentConfidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .minSegmentConfidence)
        minSegmentConfidence = minSegmentConfidenceDecoded
    }
}
