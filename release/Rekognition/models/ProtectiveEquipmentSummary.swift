// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Summary information for required items of personal protective equipment (PPE) detected on persons by a call
///          to <a>DetectProtectiveEquipment</a>. You specify the required type of PPE in
///          the <code>SummarizationAttributes</code>
///          (<a>ProtectiveEquipmentSummarizationAttributes</a>) input parameter.
///          The summary includes which persons were detected wearing the required personal protective equipment
///          (<code>PersonsWithRequiredEquipment</code>),
///          which persons were detected as not wearing the required PPE (<code>PersonsWithoutRequiredEquipment</code>),
///          and the persons in which a determination
///          could not be made (<code>PersonsIndeterminate</code>).</p>
///          <p>To get a total for each category, use the size of the field array. For example,
///          to find out how many people were detected as wearing the specified PPE,
///          use the size of the <code>PersonsWithRequiredEquipment</code> array.
///          If you want to find out more about a person, such as the
///          location (<a>BoundingBox</a>) of the person on the image, use the person ID in each array element.
///          Each person ID matches the ID field of a <a>ProtectiveEquipmentPerson</a> object returned
///          in the <code>Persons</code> array by <code>DetectProtectiveEquipment</code>.</p>
public struct ProtectiveEquipmentSummary: Equatable {
    /// <p>An array of IDs for persons where it was not possible to determine if they are wearing personal protective equipment.
    ///       </p>
    public let personsIndeterminate: [Int]?
    /// <p>An array of IDs for persons who are wearing detected personal protective equipment.
    ///       </p>
    public let personsWithRequiredEquipment: [Int]?
    /// <p>An array of IDs for persons who are not wearing all of the types of PPE specified in the <code>RequiredEquipmentTypes</code> field of
    ///          the detected personal protective equipment.
    ///       </p>
    public let personsWithoutRequiredEquipment: [Int]?

    public init (
        personsIndeterminate: [Int]? = nil,
        personsWithRequiredEquipment: [Int]? = nil,
        personsWithoutRequiredEquipment: [Int]? = nil
    )
    {
        self.personsIndeterminate = personsIndeterminate
        self.personsWithRequiredEquipment = personsWithRequiredEquipment
        self.personsWithoutRequiredEquipment = personsWithoutRequiredEquipment
    }
}
