// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Face: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case boundingBox = "BoundingBox"
        case confidence = "Confidence"
        case externalImageId = "ExternalImageId"
        case faceId = "FaceId"
        case imageId = "ImageId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let boundingBox = boundingBox {
            try encodeContainer.encode(boundingBox, forKey: .boundingBox)
        }
        if let confidence = confidence {
            try encodeContainer.encode(confidence, forKey: .confidence)
        }
        if let externalImageId = externalImageId {
            try encodeContainer.encode(externalImageId, forKey: .externalImageId)
        }
        if let faceId = faceId {
            try encodeContainer.encode(faceId, forKey: .faceId)
        }
        if let imageId = imageId {
            try encodeContainer.encode(imageId, forKey: .imageId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let faceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .faceId)
        faceId = faceIdDecoded
        let boundingBoxDecoded = try containerValues.decodeIfPresent(BoundingBox.self, forKey: .boundingBox)
        boundingBox = boundingBoxDecoded
        let imageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let externalImageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .externalImageId)
        externalImageId = externalImageIdDecoded
        let confidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .confidence)
        confidence = confidenceDecoded
    }
}
