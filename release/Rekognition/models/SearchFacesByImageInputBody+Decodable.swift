// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchFacesByImageInputBody: Equatable {
    public let collectionId: String?
    public let image: Image?
    public let maxFaces: Int?
    public let faceMatchThreshold: Float?
    public let qualityFilter: QualityFilter?
}

extension SearchFacesByImageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case collectionId = "CollectionId"
        case faceMatchThreshold = "FaceMatchThreshold"
        case image = "Image"
        case maxFaces = "MaxFaces"
        case qualityFilter = "QualityFilter"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .collectionId)
        collectionId = collectionIdDecoded
        let imageDecoded = try containerValues.decodeIfPresent(Image.self, forKey: .image)
        image = imageDecoded
        let maxFacesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxFaces)
        maxFaces = maxFacesDecoded
        let faceMatchThresholdDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .faceMatchThreshold)
        faceMatchThreshold = faceMatchThresholdDecoded
        let qualityFilterDecoded = try containerValues.decodeIfPresent(QualityFilter.self, forKey: .qualityFilter)
        qualityFilter = qualityFilterDecoded
    }
}
