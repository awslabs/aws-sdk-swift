// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AudioMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case codec = "Codec"
        case durationMillis = "DurationMillis"
        case numberOfChannels = "NumberOfChannels"
        case sampleRate = "SampleRate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codec = codec {
            try encodeContainer.encode(codec, forKey: .codec)
        }
        if let durationMillis = durationMillis {
            try encodeContainer.encode(durationMillis, forKey: .durationMillis)
        }
        if let numberOfChannels = numberOfChannels {
            try encodeContainer.encode(numberOfChannels, forKey: .numberOfChannels)
        }
        if let sampleRate = sampleRate {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codecDecoded = try containerValues.decodeIfPresent(String.self, forKey: .codec)
        codec = codecDecoded
        let durationMillisDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .durationMillis)
        durationMillis = durationMillisDecoded
        let sampleRateDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
        let numberOfChannelsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numberOfChannels)
        numberOfChannels = numberOfChannelsDecoded
    }
}
