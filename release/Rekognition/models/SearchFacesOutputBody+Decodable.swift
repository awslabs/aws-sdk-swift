// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchFacesOutputBody: Equatable {
    public let searchedFaceId: String?
    public let faceMatches: [FaceMatch]?
    public let faceModelVersion: String?
}

extension SearchFacesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case faceMatches = "FaceMatches"
        case faceModelVersion = "FaceModelVersion"
        case searchedFaceId = "SearchedFaceId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let searchedFaceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .searchedFaceId)
        searchedFaceId = searchedFaceIdDecoded
        let faceMatchesContainer = try containerValues.decodeIfPresent([FaceMatch].self, forKey: .faceMatches)
        var faceMatchesDecoded0:[FaceMatch]? = nil
        if let faceMatchesContainer = faceMatchesContainer {
            faceMatchesDecoded0 = [FaceMatch]()
            for structure0 in faceMatchesContainer {
                faceMatchesDecoded0?.append(structure0)
            }
        }
        faceMatches = faceMatchesDecoded0
        let faceModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .faceModelVersion)
        faceModelVersion = faceModelVersionDecoded
    }
}
