// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTextDetectionOutputBody: Equatable {
    public let jobStatus: VideoJobStatus?
    public let statusMessage: String?
    public let videoMetadata: VideoMetadata?
    public let textDetections: [TextDetectionResult]?
    public let nextToken: String?
    public let textModelVersion: String?
}

extension GetTextDetectionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobStatus = "JobStatus"
        case nextToken = "NextToken"
        case statusMessage = "StatusMessage"
        case textDetections = "TextDetections"
        case textModelVersion = "TextModelVersion"
        case videoMetadata = "VideoMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobStatusDecoded = try containerValues.decodeIfPresent(VideoJobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let videoMetadataDecoded = try containerValues.decodeIfPresent(VideoMetadata.self, forKey: .videoMetadata)
        videoMetadata = videoMetadataDecoded
        let textDetectionsContainer = try containerValues.decodeIfPresent([TextDetectionResult].self, forKey: .textDetections)
        var textDetectionsDecoded0:[TextDetectionResult]? = nil
        if let textDetectionsContainer = textDetectionsContainer {
            textDetectionsDecoded0 = [TextDetectionResult]()
            for structure0 in textDetectionsContainer {
                textDetectionsDecoded0?.append(structure0)
            }
        }
        textDetections = textDetectionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let textModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .textModelVersion)
        textModelVersion = textModelVersionDecoded
    }
}
