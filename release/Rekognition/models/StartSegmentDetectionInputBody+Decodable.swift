// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSegmentDetectionInputBody: Equatable {
    public let video: Video?
    public let clientRequestToken: String?
    public let notificationChannel: NotificationChannel?
    public let jobTag: String?
    public let filters: StartSegmentDetectionFilters?
    public let segmentTypes: [SegmentType]?
}

extension StartSegmentDetectionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case filters = "Filters"
        case jobTag = "JobTag"
        case notificationChannel = "NotificationChannel"
        case segmentTypes = "SegmentTypes"
        case video = "Video"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let videoDecoded = try containerValues.decodeIfPresent(Video.self, forKey: .video)
        video = videoDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let notificationChannelDecoded = try containerValues.decodeIfPresent(NotificationChannel.self, forKey: .notificationChannel)
        notificationChannel = notificationChannelDecoded
        let jobTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobTag)
        jobTag = jobTagDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(StartSegmentDetectionFilters.self, forKey: .filters)
        filters = filtersDecoded
        let segmentTypesContainer = try containerValues.decodeIfPresent([SegmentType].self, forKey: .segmentTypes)
        var segmentTypesDecoded0:[SegmentType]? = nil
        if let segmentTypesContainer = segmentTypesContainer {
            segmentTypesDecoded0 = [SegmentType]()
            for string0 in segmentTypesContainer {
                segmentTypesDecoded0?.append(string0)
            }
        }
        segmentTypes = segmentTypesDecoded0
    }
}
