// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectModerationLabelsInputBody: Equatable {
    public let image: Image?
    public let minConfidence: Float?
    public let humanLoopConfig: HumanLoopConfig?
}

extension DetectModerationLabelsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case humanLoopConfig = "HumanLoopConfig"
        case image = "Image"
        case minConfidence = "MinConfidence"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDecoded = try containerValues.decodeIfPresent(Image.self, forKey: .image)
        image = imageDecoded
        let minConfidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .minConfidence)
        minConfidence = minConfidenceDecoded
        let humanLoopConfigDecoded = try containerValues.decodeIfPresent(HumanLoopConfig.self, forKey: .humanLoopConfig)
        humanLoopConfig = humanLoopConfigDecoded
    }
}
