// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Celebrity: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case face = "Face"
        case id = "Id"
        case matchConfidence = "MatchConfidence"
        case name = "Name"
        case urls = "Urls"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let face = face {
            try encodeContainer.encode(face, forKey: .face)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let matchConfidence = matchConfidence {
            try encodeContainer.encode(matchConfidence, forKey: .matchConfidence)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let urls = urls {
            var urlsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .urls)
            for urls0 in urls {
                try urlsContainer.encode(urls0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let urlsContainer = try containerValues.decodeIfPresent([String].self, forKey: .urls)
        var urlsDecoded0:[String]? = nil
        if let urlsContainer = urlsContainer {
            urlsDecoded0 = [String]()
            for string0 in urlsContainer {
                urlsDecoded0?.append(string0)
            }
        }
        urls = urlsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let faceDecoded = try containerValues.decodeIfPresent(ComparedFace.self, forKey: .face)
        face = faceDecoded
        let matchConfidenceDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .matchConfidence)
        matchConfidence = matchConfidenceDecoded
    }
}
