// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProjectVersionInput: Equatable {
    /// <p>The identifier for your AWS Key Management Service (AWS KMS) customer master key (CMK).
    ///          You can supply the Amazon Resource Name (ARN) of your CMK, the ID of your CMK,
    ///          or an alias for your CMK.
    ///          The key is used to encrypt training and test images copied into the service for model training. Your
    ///          source images are unaffected. The key is also used to encrypt training results and manifest files written
    ///          to the output Amazon S3 bucket (<code>OutputConfig</code>).</p>
    ///          <p>If you don't specify a value for <code>KmsKeyId</code>, images copied into the service are encrypted
    ///          using a key that AWS owns and manages.</p>
    public let kmsKeyId: String?
    /// <p>The Amazon S3 location to store the results of training.</p>
    public let outputConfig: OutputConfig?
    /// <p>The ARN of the Amazon Rekognition Custom Labels project that
    ///          manages the model that you want to train.</p>
    public let projectArn: String?
    /// <p>
    ///       A set of tags (key-value pairs) that you want to attach to the model.
    ///     </p>
    public let tags: [String:String]?
    /// <p>The dataset to use for testing.</p>
    public let testingData: TestingData?
    /// <p>The dataset to use for training. </p>
    public let trainingData: TrainingData?
    /// <p>A name for the version of the model. This value must be unique.</p>
    public let versionName: String?

    public init (
        kmsKeyId: String? = nil,
        outputConfig: OutputConfig? = nil,
        projectArn: String? = nil,
        tags: [String:String]? = nil,
        testingData: TestingData? = nil,
        trainingData: TrainingData? = nil,
        versionName: String? = nil
    )
    {
        self.kmsKeyId = kmsKeyId
        self.outputConfig = outputConfig
        self.projectArn = projectArn
        self.tags = tags
        self.testingData = testingData
        self.trainingData = trainingData
        self.versionName = versionName
    }
}
