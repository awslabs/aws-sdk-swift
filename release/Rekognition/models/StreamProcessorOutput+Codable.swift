// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StreamProcessorOutput: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case kinesisDataStream = "KinesisDataStream"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kinesisDataStream = kinesisDataStream {
            try encodeContainer.encode(kinesisDataStream, forKey: .kinesisDataStream)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kinesisDataStreamDecoded = try containerValues.decodeIfPresent(KinesisDataStream.self, forKey: .kinesisDataStream)
        kinesisDataStream = kinesisDataStreamDecoded
    }
}
