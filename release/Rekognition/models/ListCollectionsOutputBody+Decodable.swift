// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCollectionsOutputBody: Equatable {
    public let collectionIds: [String]?
    public let nextToken: String?
    public let faceModelVersions: [String]?
}

extension ListCollectionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case collectionIds = "CollectionIds"
        case faceModelVersions = "FaceModelVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .collectionIds)
        var collectionIdsDecoded0:[String]? = nil
        if let collectionIdsContainer = collectionIdsContainer {
            collectionIdsDecoded0 = [String]()
            for string0 in collectionIdsContainer {
                collectionIdsDecoded0?.append(string0)
            }
        }
        collectionIds = collectionIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let faceModelVersionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .faceModelVersions)
        var faceModelVersionsDecoded0:[String]? = nil
        if let faceModelVersionsContainer = faceModelVersionsContainer {
            faceModelVersionsDecoded0 = [String]()
            for string0 in faceModelVersionsContainer {
                faceModelVersionsDecoded0?.append(string0)
            }
        }
        faceModelVersions = faceModelVersionsDecoded0
    }
}
