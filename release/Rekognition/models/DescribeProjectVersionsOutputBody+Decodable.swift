// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectVersionsOutputBody: Equatable {
    public let projectVersionDescriptions: [ProjectVersionDescription]?
    public let nextToken: String?
}

extension DescribeProjectVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case projectVersionDescriptions = "ProjectVersionDescriptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectVersionDescriptionsContainer = try containerValues.decodeIfPresent([ProjectVersionDescription].self, forKey: .projectVersionDescriptions)
        var projectVersionDescriptionsDecoded0:[ProjectVersionDescription]? = nil
        if let projectVersionDescriptionsContainer = projectVersionDescriptionsContainer {
            projectVersionDescriptionsDecoded0 = [ProjectVersionDescription]()
            for structure0 in projectVersionDescriptionsContainer {
                projectVersionDescriptionsDecoded0?.append(structure0)
            }
        }
        projectVersionDescriptions = projectVersionDescriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
