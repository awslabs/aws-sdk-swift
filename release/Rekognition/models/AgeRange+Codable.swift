// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AgeRange: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case high = "High"
        case low = "Low"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let high = high {
            try encodeContainer.encode(high, forKey: .high)
        }
        if let low = low {
            try encodeContainer.encode(low, forKey: .low)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lowDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .low)
        low = lowDecoded
        let highDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .high)
        high = highDecoded
    }
}
