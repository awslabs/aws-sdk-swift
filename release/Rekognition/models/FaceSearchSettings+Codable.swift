// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FaceSearchSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case collectionId = "CollectionId"
        case faceMatchThreshold = "FaceMatchThreshold"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let collectionId = collectionId {
            try encodeContainer.encode(collectionId, forKey: .collectionId)
        }
        if let faceMatchThreshold = faceMatchThreshold {
            try encodeContainer.encode(faceMatchThreshold, forKey: .faceMatchThreshold)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let collectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .collectionId)
        collectionId = collectionIdDecoded
        let faceMatchThresholdDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .faceMatchThreshold)
        faceMatchThreshold = faceMatchThresholdDecoded
    }
}
