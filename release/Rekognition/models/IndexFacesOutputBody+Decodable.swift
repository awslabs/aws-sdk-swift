// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct IndexFacesOutputBody: Equatable {
    public let faceRecords: [FaceRecord]?
    public let orientationCorrection: OrientationCorrection?
    public let faceModelVersion: String?
    public let unindexedFaces: [UnindexedFace]?
}

extension IndexFacesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case faceModelVersion = "FaceModelVersion"
        case faceRecords = "FaceRecords"
        case orientationCorrection = "OrientationCorrection"
        case unindexedFaces = "UnindexedFaces"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let faceRecordsContainer = try containerValues.decodeIfPresent([FaceRecord].self, forKey: .faceRecords)
        var faceRecordsDecoded0:[FaceRecord]? = nil
        if let faceRecordsContainer = faceRecordsContainer {
            faceRecordsDecoded0 = [FaceRecord]()
            for structure0 in faceRecordsContainer {
                faceRecordsDecoded0?.append(structure0)
            }
        }
        faceRecords = faceRecordsDecoded0
        let orientationCorrectionDecoded = try containerValues.decodeIfPresent(OrientationCorrection.self, forKey: .orientationCorrection)
        orientationCorrection = orientationCorrectionDecoded
        let faceModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .faceModelVersion)
        faceModelVersion = faceModelVersionDecoded
        let unindexedFacesContainer = try containerValues.decodeIfPresent([UnindexedFace].self, forKey: .unindexedFaces)
        var unindexedFacesDecoded0:[UnindexedFace]? = nil
        if let unindexedFacesContainer = unindexedFacesContainer {
            unindexedFacesDecoded0 = [UnindexedFace]()
            for structure0 in unindexedFacesContainer {
                unindexedFacesDecoded0?.append(structure0)
            }
        }
        unindexedFaces = unindexedFacesDecoded0
    }
}
