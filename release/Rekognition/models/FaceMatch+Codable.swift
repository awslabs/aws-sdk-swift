// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FaceMatch: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case face = "Face"
        case similarity = "Similarity"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let face = face {
            try encodeContainer.encode(face, forKey: .face)
        }
        if let similarity = similarity {
            try encodeContainer.encode(similarity, forKey: .similarity)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let similarityDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .similarity)
        similarity = similarityDecoded
        let faceDecoded = try containerValues.decodeIfPresent(Face.self, forKey: .face)
        face = faceDecoded
    }
}
