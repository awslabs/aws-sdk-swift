// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartSegmentDetectionInput: Equatable {
    /// <p>Idempotent token used to identify the start request. If you use the same token with multiple
    ///       <code>StartSegmentDetection</code> requests, the same <code>JobId</code> is returned. Use
    ///       <code>ClientRequestToken</code> to prevent the same job from being accidently started more than once. </p>
    public let clientRequestToken: String?
    /// <p>Filters for technical cue or shot detection.</p>
    public let filters: StartSegmentDetectionFilters?
    /// <p>An identifier you specify that's returned in the completion notification that's published to your Amazon Simple Notification Service topic.
    ///       For example, you can use <code>JobTag</code> to group related jobs and identify them in the completion notification.</p>
    public let jobTag: String?
    /// <p>The ARN of the Amazon SNS topic to which you want Amazon Rekognition Video to publish the completion status of the
    ///       segment detection operation.</p>
    public let notificationChannel: NotificationChannel?
    /// <p>An array of segment types to detect in the video. Valid values are TECHNICAL_CUE and SHOT.</p>
    public let segmentTypes: [SegmentType]?
    /// <p>Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as <a>StartLabelDetection</a> use <code>Video</code> to
    ///             specify a video for analysis. The supported file formats are .mp4, .mov and .avi.</p>
    public let video: Video?

    public init (
        clientRequestToken: String? = nil,
        filters: StartSegmentDetectionFilters? = nil,
        jobTag: String? = nil,
        notificationChannel: NotificationChannel? = nil,
        segmentTypes: [SegmentType]? = nil,
        video: Video? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.filters = filters
        self.jobTag = jobTag
        self.notificationChannel = notificationChannel
        self.segmentTypes = segmentTypes
        self.video = video
    }
}
