// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCelebrityInfoOutputBody: Equatable {
    public let urls: [String]?
    public let name: String?
}

extension GetCelebrityInfoOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case urls = "Urls"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let urlsContainer = try containerValues.decodeIfPresent([String].self, forKey: .urls)
        var urlsDecoded0:[String]? = nil
        if let urlsContainer = urlsContainer {
            urlsDecoded0 = [String]()
            for string0 in urlsContainer {
                urlsDecoded0?.append(string0)
            }
        }
        urls = urlsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
    }
}
