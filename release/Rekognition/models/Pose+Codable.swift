// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Pose: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pitch = "Pitch"
        case roll = "Roll"
        case yaw = "Yaw"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pitch = pitch {
            try encodeContainer.encode(pitch, forKey: .pitch)
        }
        if let roll = roll {
            try encodeContainer.encode(roll, forKey: .roll)
        }
        if let yaw = yaw {
            try encodeContainer.encode(yaw, forKey: .yaw)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rollDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .roll)
        roll = rollDecoded
        let yawDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .yaw)
        yaw = yawDecoded
        let pitchDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .pitch)
        pitch = pitchDecoded
    }
}
