// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a word or line of text detected by <a>DetectText</a>.</p>
///          <p>The <code>DetectedText</code> field contains the text that Amazon Rekognition detected in the
///       image. </p>
///          <p>Every word and line has an identifier (<code>Id</code>). Each word belongs to a line
///       and has a parent identifier (<code>ParentId</code>) that identifies the line of text in which
///       the word appears. The word <code>Id</code> is also an index for the word within a line of
///       words. </p>
///
///          <p>For more information, see Detecting Text in the Amazon Rekognition Developer Guide.</p>
public struct TextDetection: Equatable {
    /// <p>The confidence that Amazon Rekognition has in the accuracy of the detected text and the accuracy
    ///       of the geometry points around the detected text.</p>
    public let confidence: Float?
    /// <p>The word or line of text recognized by Amazon Rekognition. </p>
    public let detectedText: String?
    /// <p>The location of the detected text on the image. Includes an axis aligned coarse
    ///       bounding box surrounding the text and a finer grain polygon for more accurate spatial
    ///       information.</p>
    public let geometry: Geometry?
    /// <p>The identifier for the detected text. The identifier is only unique for a single call
    ///       to <code>DetectText</code>. </p>
    public let id: Int?
    /// <p>The Parent identifier for the detected text identified by the value of <code>ID</code>.
    ///       If the type of detected text is <code>LINE</code>, the value of <code>ParentId</code> is
    ///         <code>Null</code>. </p>
    public let parentId: Int?
    /// <p>The type of text that was detected.</p>
    public let type: TextTypes?

    public init (
        confidence: Float? = nil,
        detectedText: String? = nil,
        geometry: Geometry? = nil,
        id: Int? = nil,
        parentId: Int? = nil,
        type: TextTypes? = nil
    )
    {
        self.confidence = confidence
        self.detectedText = detectedText
        self.geometry = geometry
        self.id = id
        self.parentId = parentId
        self.type = type
    }
}
