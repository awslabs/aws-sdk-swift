// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>
///           This section provides documentation for the Amazon CodeGuru Profiler API operations.
///       </p>
///          <p>
///          Amazon CodeGuru Profiler collects runtime performance data from your live applications, and provides
///          recommendations that can help you fine-tune your application performance. Using machine learning
///          algorithms, CodeGuru Profiler can help you find your most expensive lines of code and suggest ways you can
///          improve efficiency and remove CPU bottlenecks.
///       </p>
///          <p>
///          Amazon CodeGuru Profiler provides different visualizations of profiling data to help you identify what code is
///          running on the CPU, see how much time is consumed, and suggest ways to reduce CPU utilization.
///       </p>
///          <note>
///             <p>Amazon CodeGuru Profiler currently supports applications written in all Java virtual machine (JVM)
///             languages and Python. While CodeGuru Profiler supports both visualizations and recommendations for applications
///             written in Java, it can also generate visualizations and a subset of recommendations for
///             applications written in other JVM languages and Python.</p>
///          </note>
///          <p>
///          For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/what-is-codeguru-profiler.html">What is Amazon CodeGuru Profiler</a> in
///          the <i>Amazon CodeGuru Profiler User Guide</i>.
///       </p>
public protocol CodeGuruProfilerClientProtocol {
    /// <p>Add up to 2 anomaly notifications channels for a profiling group.</p>
    func addNotificationChannels(input: AddNotificationChannelsInput, completion: @escaping (SdkResult<AddNotificationChannelsOutputResponse, AddNotificationChannelsOutputError>) -> Void)
    /// <p>
    ///          Returns the time series of values for a requested list
    ///          of frame metrics from a time period.</p>
    func batchGetFrameMetricData(input: BatchGetFrameMetricDataInput, completion: @escaping (SdkResult<BatchGetFrameMetricDataOutputResponse, BatchGetFrameMetricDataOutputError>) -> Void)
    /// <p>
    ///           Used by profiler agents to report their current state and to receive remote
    ///           configuration updates. For example, <code>ConfigureAgent</code> can be used
    ///          to tell an agent whether to profile or not and for how long to return profiling data.
    ///       </p>
    func configureAgent(input: ConfigureAgentInput, completion: @escaping (SdkResult<ConfigureAgentOutputResponse, ConfigureAgentOutputError>) -> Void)
    /// <p>Creates a profiling group.</p>
    func createProfilingGroup(input: CreateProfilingGroupInput, completion: @escaping (SdkResult<CreateProfilingGroupOutputResponse, CreateProfilingGroupOutputError>) -> Void)
    /// <p>Deletes a profiling group.</p>
    func deleteProfilingGroup(input: DeleteProfilingGroupInput, completion: @escaping (SdkResult<DeleteProfilingGroupOutputResponse, DeleteProfilingGroupOutputError>) -> Void)
    /// <p>
    ///          Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
    ///                <code>ProfilingGroupDescription</code>
    ///             </a>
    ///          object that contains information about the requested profiling group.
    ///       </p>
    func describeProfilingGroup(input: DescribeProfilingGroupInput, completion: @escaping (SdkResult<DescribeProfilingGroupOutputResponse, DescribeProfilingGroupOutputError>) -> Void)
    /// <p>
    ///             Returns a list of
    ///             <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_FindingsReportSummary.html">
    ///                <code>FindingsReportSummary</code>
    ///             </a>
    ///             objects that contain analysis results for all profiling groups in your AWS account.
    ///         </p>
    func getFindingsReportAccountSummary(input: GetFindingsReportAccountSummaryInput, completion: @escaping (SdkResult<GetFindingsReportAccountSummaryOutputResponse, GetFindingsReportAccountSummaryOutputError>) -> Void)
    /// <p>Get the current configuration for anomaly notifications for a profiling group.</p>
    func getNotificationConfiguration(input: GetNotificationConfigurationInput, completion: @escaping (SdkResult<GetNotificationConfigurationOutputResponse, GetNotificationConfigurationOutputError>) -> Void)
    /// <p>
    ///             Returns the JSON-formatted resource-based policy on a profiling group.
    ///         </p>
    func getPolicy(input: GetPolicyInput, completion: @escaping (SdkResult<GetPolicyOutputResponse, GetPolicyOutputError>) -> Void)
    /// <p>
    ///          Gets the aggregated profile of a profiling group for a specified time range.
    ///          Amazon CodeGuru Profiler collects posted agent profiles for a profiling group
    ///          into aggregated profiles.
    ///      </p>
    ///
    ///          <note>
    ///             <p>
    ///             Because aggregated profiles expire over time <code>GetProfile</code> is not idempotent.
    ///          </p>
    ///          </note>
    ///
    ///          <p>
    ///          Specify the time range for the requested aggregated profile using 1 or 2 of the following parameters: <code>startTime</code>,
    ///          <code>endTime</code>, <code>period</code>. The maximum time range allowed is 7 days. If you specify all 3 parameters,
    ///          an exception is thrown. If you specify only <code>period</code>, the latest aggregated profile is returned.
    ///       </p>
    ///
    ///          <p>
    ///          Aggregated profiles are available with aggregation periods of 5 minutes, 1 hour, and 1 day, aligned to
    ///          UTC. The aggregation period of an aggregated profile determines how long it is retained. For more
    ///          information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AggregatedProfileTime.html">
    ///                <code>AggregatedProfileTime</code>
    ///             </a>. The aggregated profile's aggregation period determines how long
    ///          it is retained by CodeGuru Profiler.
    ///       </p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                If the aggregation period is 5 minutes, the aggregated profile is retained for 15 days.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                If the aggregation period is 1 hour, the aggregated profile is retained for 60 days.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                If the aggregation period is 1 day, the aggregated profile is retained for 3 years.
    ///             </p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>There are two use cases for calling <code>GetProfile</code>.</p>
    ///          <ol>
    ///             <li>
    ///                <p>
    ///                If you want to return an aggregated profile that already exists, use
    ///                <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ListProfileTimes.html">
    ///                      <code>ListProfileTimes</code>
    ///                   </a> to
    ///                view the time ranges of existing aggregated profiles. Use them in a <code>GetProfile</code> request to return a specific,
    ///                existing aggregated profile.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                If you want to return an aggregated profile for a time range that doesn't align with an existing aggregated profile,
    ///                then CodeGuru Profiler makes a best effort to combine existing aggregated profiles from the requested time
    ///                range and return them as one aggregated profile.
    ///             </p>
    ///
    ///                <p> If aggregated profiles do not exist for the full time range requested, then
    ///                aggregated profiles for a smaller time range are returned. For example, if the
    ///                requested time range is from 00:00 to 00:20, and the existing aggregated profiles are
    ///                from 00:15 and 00:25, then the aggregated profiles from 00:15 to 00:20 are returned. </p>
    ///
    ///
    ///             </li>
    ///          </ol>
    func getProfile(input: GetProfileInput, completion: @escaping (SdkResult<GetProfileOutputResponse, GetProfileOutputError>) -> Void)
    /// <p>
    ///             Returns a list of
    ///             <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Recommendation.html">
    ///                <code>Recommendation</code>
    ///             </a>
    ///             objects that contain recommendations for a profiling group for a given time period. A list of
    ///             <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_Anomaly.html">
    ///                <code>Anomaly</code>
    ///             </a>
    ///             objects that contains details about anomalies detected in the profiling group for the same time period is also
    ///             returned.
    ///         </p>
    func getRecommendations(input: GetRecommendationsInput, completion: @escaping (SdkResult<GetRecommendationsOutputResponse, GetRecommendationsOutputError>) -> Void)
    /// <p>List the available reports for a given profiling group and time range.</p>
    func listFindingsReports(input: ListFindingsReportsInput, completion: @escaping (SdkResult<ListFindingsReportsOutputResponse, ListFindingsReportsOutputError>) -> Void)
    /// <p>Lists the start times of the available aggregated profiles of a profiling group
    ///         for an aggregation period within the specified time range.</p>
    func listProfileTimes(input: ListProfileTimesInput, completion: @escaping (SdkResult<ListProfileTimesOutputResponse, ListProfileTimesOutputError>) -> Void)
    /// <p>
    ///          Returns a list of profiling groups. The profiling groups are returned as
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ProfilingGroupDescription.html">
    ///                <code>ProfilingGroupDescription</code>
    ///             </a>
    ///          objects.
    ///       </p>
    func listProfilingGroups(input: ListProfilingGroupsInput, completion: @escaping (SdkResult<ListProfilingGroupsOutputResponse, ListProfilingGroupsOutputError>) -> Void)
    /// <p>
    ///          Returns a list of the tags that are assigned to a specified resource.
    ///       </p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>
    ///          Submits profiling data to an aggregated profile of a profiling group. To get an
    ///          aggregated profile that is created with this profiling data, use
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_GetProfile.html">
    ///                <code>GetProfile</code>
    ///             </a>.
    ///       </p>
    func postAgentProfile(input: PostAgentProfileInput, completion: @escaping (SdkResult<PostAgentProfileOutputResponse, PostAgentProfileOutputError>) -> Void)
    /// <p>
    ///             Adds permissions to a profiling group's resource-based policy
    ///             that are provided using an action group. If a profiling group doesn't have
    ///             a resource-based policy, one is created for it using the permissions in the action group and
    ///             the roles and users in the <code>principals</code> parameter.
    ///         </p>
    ///
    ///         <p> The one supported action group that can be added is <code>agentPermission</code>
    ///             which grants <code>ConfigureAgent</code> and <code>PostAgent</code> permissions. For
    ///             more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html">Resource-based
    ///                 policies in CodeGuru Profiler</a> in the <i>Amazon CodeGuru Profiler User
    ///                 Guide</i>, <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html">
    ///                <code>ConfigureAgent</code>
    ///             </a>, and <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html">
    ///                <code>PostAgentProfile</code>
    ///             </a>. </p>
    ///
    ///         <p>
    ///             The first time you call <code>PutPermission</code> on a profiling group, do not specify a <code>revisionId</code> because
    ///             it doesn't have a resource-based policy. Subsequent calls must provide a <code>revisionId</code> to specify
    ///             which revision of the resource-based policy to add the permissions to.
    ///         </p>
    ///
    ///         <p>
    ///             The response contains the profiling group's JSON-formatted resource policy.
    ///         </p>
    func putPermission(input: PutPermissionInput, completion: @escaping (SdkResult<PutPermissionOutputResponse, PutPermissionOutputError>) -> Void)
    /// <p>Remove one anomaly notifications channel for a profiling group.</p>
    func removeNotificationChannel(input: RemoveNotificationChannelInput, completion: @escaping (SdkResult<RemoveNotificationChannelOutputResponse, RemoveNotificationChannelOutputError>) -> Void)
    /// <p> Removes permissions from a profiling group's resource-based policy that are provided
    ///             using an action group. The one supported action group that can be removed is
    ///                 <code>agentPermission</code> which grants <code>ConfigureAgent</code> and
    ///                 <code>PostAgent</code> permissions. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-ug/resource-based-policies.html">Resource-based policies in CodeGuru Profiler</a> in the <i>Amazon
    ///                 CodeGuru Profiler User Guide</i>, <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html">
    ///                <code>ConfigureAgent</code>
    ///             </a>, and <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_PostAgentProfile.html">
    ///                <code>PostAgentProfile</code>
    ///             </a>. </p>
    func removePermission(input: RemovePermissionInput, completion: @escaping (SdkResult<RemovePermissionOutputResponse, RemovePermissionOutputError>) -> Void)
    /// <p>Sends feedback to CodeGuru Profiler about whether the anomaly detected by the analysis is
    ///             useful or not.</p>
    func submitFeedback(input: SubmitFeedbackInput, completion: @escaping (SdkResult<SubmitFeedbackOutputResponse, SubmitFeedbackOutputError>) -> Void)
    /// <p>
    ///          Use to assign one or more tags to a resource.
    ///       </p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>
    ///          Use to remove one or more tags from a resource.
    ///       </p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates a profiling group.</p>
    func updateProfilingGroup(input: UpdateProfilingGroupInput, completion: @escaping (SdkResult<UpdateProfilingGroupOutputResponse, UpdateProfilingGroupOutputError>) -> Void)
}
