// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReportDefinitionsOutputBody: Equatable {
    public let reportDefinitions: [ReportDefinition]?
    public let nextToken: String?
}

extension ListReportDefinitionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case reportDefinitions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reportDefinitionsContainer = try containerValues.decodeIfPresent([ReportDefinition].self, forKey: .reportDefinitions)
        var reportDefinitionsDecoded0:[ReportDefinition]? = nil
        if let reportDefinitionsContainer = reportDefinitionsContainer {
            reportDefinitionsDecoded0 = [ReportDefinition]()
            for structure0 in reportDefinitionsContainer {
                reportDefinitionsDecoded0?.append(structure0)
            }
        }
        reportDefinitions = reportDefinitionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
