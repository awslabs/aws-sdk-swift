// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The RegisterDomain request includes the following elements.</p>
public struct RegisterDomainInput: Equatable {
    /// <p>Provides detailed contact information. For information about the values that you specify for each element, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html">ContactDetail</a>.</p>
    public let adminContact: ContactDetail?
    /// <p>Indicates whether the domain will be automatically renewed (<code>true</code>) or not (<code>false</code>).
    /// 			Autorenewal only takes effect after the account is charged.</p>
    /// 		       <p>Default: <code>true</code>
    ///          </p>
    public let autoRenew: Bool?
    /// <p>The domain name that you want to register. The top-level domain (TLD), such as .com, must be a TLD that Route 53 supports.
    /// 			For a list of supported TLDs, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the
    /// 			<i>Amazon Route 53 Developer Guide</i>.</p>
    /// 		       <p>The domain name can contain only the following characters:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>Letters a through z. Domain names are not case sensitive.</p>
    ///             </li>
    ///             <li>
    ///                <p>Numbers 0 through 9.</p>
    ///             </li>
    ///             <li>
    ///                <p>Hyphen (-). You can't specify a hyphen at the beginning or end of a label. </p>
    ///             </li>
    ///             <li>
    ///                <p>Period (.) to separate the labels in the name, such as the <code>.</code> in <code>example.com</code>.</p>
    ///             </li>
    ///          </ul>
    /// 		       <p>Internationalized domain names are not supported for some top-level domains. To determine whether the TLD that you want to use supports
    /// 			internationalized domain names, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a>.
    /// 			For more information, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html#domain-name-format-idns">Formatting Internationalized Domain Names</a>.
    /// 		</p>
    public let domainName: String?
    /// <p>The number of years that you want to register the domain for. Domains are registered for a minimum of one year.
    /// 			The maximum period depends on the top-level domain. For the range of valid values for your domain, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/registrar-tld-list.html">Domains that You Can Register with Amazon Route 53</a> in the
    /// 			<i>Amazon Route 53 Developer Guide</i>.</p>
    /// 		       <p>Default: 1</p>
    public let durationInYears: Int?
    /// <p>Reserved for future use.</p>
    public let idnLangCode: String?
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the admin contact.</p>
    /// 		       <p>Default: <code>true</code>
    ///          </p>
    public let privacyProtectAdminContact: Bool?
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the registrant contact (the domain owner).</p>
    /// 		       <p>Default: <code>true</code>
    ///          </p>
    public let privacyProtectRegistrantContact: Bool?
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the technical contact.</p>
    /// 		       <p>Default: <code>true</code>
    ///          </p>
    public let privacyProtectTechContact: Bool?
    /// <p>Provides detailed contact information. For information about the values that you specify for each element, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html">ContactDetail</a>.</p>
    public let registrantContact: ContactDetail?
    /// <p>Provides detailed contact information. For information about the values that you specify for each element, see
    /// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html">ContactDetail</a>.</p>
    public let techContact: ContactDetail?

    public init (
        adminContact: ContactDetail? = nil,
        autoRenew: Bool? = nil,
        domainName: String? = nil,
        durationInYears: Int? = nil,
        idnLangCode: String? = nil,
        privacyProtectAdminContact: Bool? = nil,
        privacyProtectRegistrantContact: Bool? = nil,
        privacyProtectTechContact: Bool? = nil,
        registrantContact: ContactDetail? = nil,
        techContact: ContactDetail? = nil
    )
    {
        self.adminContact = adminContact
        self.autoRenew = autoRenew
        self.domainName = domainName
        self.durationInYears = durationInYears
        self.idnLangCode = idnLangCode
        self.privacyProtectAdminContact = privacyProtectAdminContact
        self.privacyProtectRegistrantContact = privacyProtectRegistrantContact
        self.privacyProtectTechContact = privacyProtectTechContact
        self.registrantContact = registrantContact
        self.techContact = techContact
    }
}
