// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOperationDetailOutputBody: Equatable {
    public let operationId: String?
    public let status: OperationStatus?
    public let message: String?
    public let domainName: String?
    public let type: OperationType?
    public let submittedDate: Date?
}

extension GetOperationDetailOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainName = "DomainName"
        case message = "Message"
        case operationId = "OperationId"
        case status = "Status"
        case submittedDate = "SubmittedDate"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let operationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .operationId)
        operationId = operationIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(OperationStatus.self, forKey: .status)
        status = statusDecoded
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(OperationType.self, forKey: .type)
        type = typeDecoded
        let submittedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .submittedDate)
        submittedDate = submittedDateDecoded
    }
}
