// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ViewBillingOutputBody: Equatable {
    public let nextPageMarker: String?
    public let billingRecords: [BillingRecord]?
}

extension ViewBillingOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case billingRecords = "BillingRecords"
        case nextPageMarker = "NextPageMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextPageMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageMarker)
        nextPageMarker = nextPageMarkerDecoded
        let billingRecordsContainer = try containerValues.decodeIfPresent([BillingRecord].self, forKey: .billingRecords)
        var billingRecordsDecoded0:[BillingRecord]? = nil
        if let billingRecordsContainer = billingRecordsContainer {
            billingRecordsDecoded0 = [BillingRecord]()
            for structure0 in billingRecordsContainer {
                billingRecordsDecoded0?.append(structure0)
            }
        }
        billingRecords = billingRecordsDecoded0
    }
}
