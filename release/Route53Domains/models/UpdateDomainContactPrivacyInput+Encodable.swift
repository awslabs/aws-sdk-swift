// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateDomainContactPrivacyInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case adminPrivacy = "AdminPrivacy"
        case domainName = "DomainName"
        case registrantPrivacy = "RegistrantPrivacy"
        case techPrivacy = "TechPrivacy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adminPrivacy = adminPrivacy {
            try encodeContainer.encode(adminPrivacy, forKey: .adminPrivacy)
        }
        if let domainName = domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let registrantPrivacy = registrantPrivacy {
            try encodeContainer.encode(registrantPrivacy, forKey: .registrantPrivacy)
        }
        if let techPrivacy = techPrivacy {
            try encodeContainer.encode(techPrivacy, forKey: .techPrivacy)
        }
    }
}
