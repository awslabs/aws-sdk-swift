// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Whether the domain name can be transferred to Route 53.</p>
/// 		       <note>
///             <p>You can transfer only domains that have a value of <code>TRANSFERABLE</code> for <code>Transferable</code>.</p>
///          </note>
/// 		
/// 		       <p>Valid values:</p>
/// 		       <dl>
///             <dt>TRANSFERABLE</dt>
///             <dd>
///                <p>The domain name can be transferred to Route 53.</p>
///             </dd>
///             <dt>UNTRANSFERRABLE</dt>
///             <dd>
///                <p>The domain name can't be transferred to Route 53.</p>
///             </dd>
///             <dt>DONT_KNOW</dt>
///             <dd>
///                <p>Reserved for future use.</p>
///             </dd>
///          </dl>
public enum Transferable {
    case dontKnow
    case transferable
    case untransferable
    case sdkUnknown(String)
}

extension Transferable : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Transferable] {
        return [
            .dontKnow,
            .transferable,
            .untransferable,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dontKnow: return "DONT_KNOW"
        case .transferable: return "TRANSFERABLE"
        case .untransferable: return "UNTRANSFERABLE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Transferable(rawValue: rawValue) ?? Transferable.sdkUnknown(rawValue)
    }
}
