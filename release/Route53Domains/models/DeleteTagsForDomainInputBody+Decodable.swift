// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteTagsForDomainInputBody: Equatable {
    public let domainName: String?
    public let tagsToDelete: [String]?
}

extension DeleteTagsForDomainInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainName = "DomainName"
        case tagsToDelete = "TagsToDelete"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let tagsToDeleteContainer = try containerValues.decodeIfPresent([String].self, forKey: .tagsToDelete)
        var tagsToDeleteDecoded0:[String]? = nil
        if let tagsToDeleteContainer = tagsToDeleteContainer {
            tagsToDeleteDecoded0 = [String]()
            for string0 in tagsToDeleteContainer {
                tagsToDeleteDecoded0?.append(string0)
            }
        }
        tagsToDelete = tagsToDeleteDecoded0
    }
}
