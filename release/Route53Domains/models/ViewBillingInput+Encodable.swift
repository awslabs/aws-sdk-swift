// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ViewBillingInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case end = "End"
        case marker = "Marker"
        case maxItems = "MaxItems"
        case start = "Start"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let end = end {
            try encodeContainer.encode(end.timeIntervalSince1970, forKey: .end)
        }
        if let marker = marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let maxItems = maxItems {
            try encodeContainer.encode(maxItems, forKey: .maxItems)
        }
        if let start = start {
            try encodeContainer.encode(start.timeIntervalSince1970, forKey: .start)
        }
    }
}
