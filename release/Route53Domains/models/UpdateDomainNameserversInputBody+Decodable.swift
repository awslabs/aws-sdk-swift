// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDomainNameserversInputBody: Equatable {
    public let domainName: String?
    public let fIAuthKey: String?
    public let nameservers: [Nameserver]?
}

extension UpdateDomainNameserversInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainName = "DomainName"
        case fIAuthKey = "FIAuthKey"
        case nameservers = "Nameservers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let fIAuthKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fIAuthKey)
        fIAuthKey = fIAuthKeyDecoded
        let nameserversContainer = try containerValues.decodeIfPresent([Nameserver].self, forKey: .nameservers)
        var nameserversDecoded0:[Nameserver]? = nil
        if let nameserversContainer = nameserversContainer {
            nameserversDecoded0 = [Nameserver]()
            for structure0 in nameserversContainer {
                nameserversDecoded0?.append(structure0)
            }
        }
        nameservers = nameserversDecoded0
    }
}
