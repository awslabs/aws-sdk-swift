// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTagsForDomainInputBody: Equatable {
    public let domainName: String?
    public let tagsToUpdate: [Tag]?
}

extension UpdateTagsForDomainInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainName = "DomainName"
        case tagsToUpdate = "TagsToUpdate"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let tagsToUpdateContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tagsToUpdate)
        var tagsToUpdateDecoded0:[Tag]? = nil
        if let tagsToUpdateContainer = tagsToUpdateContainer {
            tagsToUpdateDecoded0 = [Tag]()
            for structure0 in tagsToUpdateContainer {
                tagsToUpdateDecoded0?.append(structure0)
            }
        }
        tagsToUpdate = tagsToUpdateDecoded0
    }
}
