// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListOperationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case maxItems = "MaxItems"
        case submittedSince = "SubmittedSince"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let marker = marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
        if let maxItems = maxItems {
            try encodeContainer.encode(maxItems, forKey: .maxItems)
        }
        if let submittedSince = submittedSince {
            try encodeContainer.encode(submittedSince.timeIntervalSince1970, forKey: .submittedSince)
        }
    }
}
