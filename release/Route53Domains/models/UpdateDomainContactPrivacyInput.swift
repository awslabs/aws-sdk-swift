// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The UpdateDomainContactPrivacy request includes the following elements.</p>
public struct UpdateDomainContactPrivacyInput: Equatable {
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the admin contact.</p>
    public let adminPrivacy: Bool?
    /// <p>The name of the domain that you want to update the privacy setting for.</p>
    public let domainName: String?
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the registrant contact (domain owner).</p>
    public let registrantPrivacy: Bool?
    /// <p>Whether you want to conceal contact information from WHOIS queries. If you specify <code>true</code>,
    /// 			WHOIS ("who is") queries return contact information either for Amazon Registrar (for .com, .net, and .org domains)
    /// 			or for our registrar associate, Gandi (for all other TLDs). If you specify <code>false</code>,
    /// 			WHOIS queries return the information that you entered for the technical contact.</p>
    public let techPrivacy: Bool?

    public init (
        adminPrivacy: Bool? = nil,
        domainName: String? = nil,
        registrantPrivacy: Bool? = nil,
        techPrivacy: Bool? = nil
    )
    {
        self.adminPrivacy = adminPrivacy
        self.domainName = domainName
        self.registrantPrivacy = registrantPrivacy
        self.techPrivacy = techPrivacy
    }
}
