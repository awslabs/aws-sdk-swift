// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAuthorizationTokenOutputBody: Equatable {
    public let authorizationData: [AuthorizationData]?
}

extension GetAuthorizationTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authorizationData
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationDataContainer = try containerValues.decodeIfPresent([AuthorizationData].self, forKey: .authorizationData)
        var authorizationDataDecoded0:[AuthorizationData]? = nil
        if let authorizationDataContainer = authorizationDataContainer {
            authorizationDataDecoded0 = [AuthorizationData]()
            for structure0 in authorizationDataContainer {
                authorizationDataDecoded0?.append(structure0)
            }
        }
        authorizationData = authorizationDataDecoded0
    }
}
