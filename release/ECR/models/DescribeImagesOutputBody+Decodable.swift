// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImagesOutputBody: Equatable {
    public let imageDetails: [ImageDetail]?
    public let nextToken: String?
}

extension DescribeImagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageDetails
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDetailsContainer = try containerValues.decodeIfPresent([ImageDetail].self, forKey: .imageDetails)
        var imageDetailsDecoded0:[ImageDetail]? = nil
        if let imageDetailsContainer = imageDetailsContainer {
            imageDetailsDecoded0 = [ImageDetail]()
            for structure0 in imageDetailsContainer {
                imageDetailsDecoded0?.append(structure0)
            }
        }
        imageDetails = imageDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
