// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UploadLayerPartInput: Equatable {
    /// <p>The base64-encoded layer part payload.</p>
    public let layerPartBlob: Data?
    /// <p>The position of the first byte of the layer part witin the overall image layer.</p>
    public let partFirstByte: Int?
    /// <p>The position of the last byte of the layer part within the overall image layer.</p>
    public let partLastByte: Int?
    /// <p>The AWS account ID associated with the registry to which you are uploading layer
    ///             parts. If you do not specify a registry, the default registry is assumed.</p>
    public let registryId: String?
    /// <p>The name of the repository to which you are uploading layer parts.</p>
    public let repositoryName: String?
    /// <p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to
    ///             associate with the layer part upload.</p>
    public let uploadId: String?

    public init (
        layerPartBlob: Data? = nil,
        partFirstByte: Int? = nil,
        partLastByte: Int? = nil,
        registryId: String? = nil,
        repositoryName: String? = nil,
        uploadId: String? = nil
    )
    {
        self.layerPartBlob = layerPartBlob
        self.partFirstByte = partFirstByte
        self.partLastByte = partLastByte
        self.registryId = registryId
        self.repositoryName = repositoryName
        self.uploadId = uploadId
    }
}
