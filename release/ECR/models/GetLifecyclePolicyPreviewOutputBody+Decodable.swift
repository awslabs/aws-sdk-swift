// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLifecyclePolicyPreviewOutputBody: Equatable {
    public let registryId: String?
    public let repositoryName: String?
    public let lifecyclePolicyText: String?
    public let status: LifecyclePolicyPreviewStatus?
    public let nextToken: String?
    public let previewResults: [LifecyclePolicyPreviewResult]?
    public let summary: LifecyclePolicyPreviewSummary?
}

extension GetLifecyclePolicyPreviewOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lifecyclePolicyText
        case nextToken
        case previewResults
        case registryId
        case repositoryName
        case status
        case summary
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let lifecyclePolicyTextDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lifecyclePolicyText)
        lifecyclePolicyText = lifecyclePolicyTextDecoded
        let statusDecoded = try containerValues.decodeIfPresent(LifecyclePolicyPreviewStatus.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let previewResultsContainer = try containerValues.decodeIfPresent([LifecyclePolicyPreviewResult].self, forKey: .previewResults)
        var previewResultsDecoded0:[LifecyclePolicyPreviewResult]? = nil
        if let previewResultsContainer = previewResultsContainer {
            previewResultsDecoded0 = [LifecyclePolicyPreviewResult]()
            for structure0 in previewResultsContainer {
                previewResultsDecoded0?.append(structure0)
            }
        }
        previewResults = previewResultsDecoded0
        let summaryDecoded = try containerValues.decodeIfPresent(LifecyclePolicyPreviewSummary.self, forKey: .summary)
        summary = summaryDecoded
    }
}
