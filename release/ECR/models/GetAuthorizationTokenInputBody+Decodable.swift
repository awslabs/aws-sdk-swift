// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAuthorizationTokenInputBody: Equatable {
    public let registryIds: [String]?
}

extension GetAuthorizationTokenInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case registryIds
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .registryIds)
        var registryIdsDecoded0:[String]? = nil
        if let registryIdsContainer = registryIdsContainer {
            registryIdsDecoded0 = [String]()
            for string0 in registryIdsContainer {
                registryIdsDecoded0?.append(string0)
            }
        }
        registryIds = registryIdsDecoded0
    }
}
