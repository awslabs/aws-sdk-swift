// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImageScanFindingsOutputBody: Equatable {
    public let registryId: String?
    public let repositoryName: String?
    public let imageId: ImageIdentifier?
    public let imageScanStatus: ImageScanStatus?
    public let imageScanFindings: ImageScanFindings?
    public let nextToken: String?
}

extension DescribeImageScanFindingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageId
        case imageScanFindings
        case imageScanStatus
        case nextToken
        case registryId
        case repositoryName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .registryId)
        registryId = registryIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let imageIdDecoded = try containerValues.decodeIfPresent(ImageIdentifier.self, forKey: .imageId)
        imageId = imageIdDecoded
        let imageScanStatusDecoded = try containerValues.decodeIfPresent(ImageScanStatus.self, forKey: .imageScanStatus)
        imageScanStatus = imageScanStatusDecoded
        let imageScanFindingsDecoded = try containerValues.decodeIfPresent(ImageScanFindings.self, forKey: .imageScanFindings)
        imageScanFindings = imageScanFindingsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
