// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetLifecyclePolicyPreviewInput: Equatable {
    /// <p>An optional parameter that filters results based on image tag status and all tags, if
    ///             tagged.</p>
    public let filter: LifecyclePolicyPreviewFilter?
    /// <p>The list of imageIDs to be included.</p>
    public let imageIds: [ImageIdentifier]?
    /// <p>The maximum number of repository results returned by
    ///                 <code>GetLifecyclePolicyPreviewRequest</code> in  paginated output. When this
    ///             parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns 
    ///                 <code>maxResults</code> results in a single page along with a
    ///             <code>nextToken</code>  response element. The remaining results of the initial request
    ///             can be seen by sending  another <code>GetLifecyclePolicyPreviewRequest</code> request
    ///             with the returned <code>nextToken</code>  value. This value can be between
    ///             1 and 1000. If this  parameter is not used, then
    ///                 <code>GetLifecyclePolicyPreviewRequest</code> returns up to  100
    ///             results and a <code>nextToken</code> value, if  applicable. This option cannot be used
    ///             when you specify images with <code>imageIds</code>.</p>
    public let maxResults: Int?
    /// <p>The <code>nextToken</code> value returned from a previous paginated 
    ///                 <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code>
    ///             was used and the  results exceeded the value of that parameter. Pagination continues
    ///             from the end of the  previous results that returned the <code>nextToken</code> value.
    ///             This value is  <code>null</code> when there are no more results to return. This option
    ///             cannot be used when you specify images with <code>imageIds</code>.</p>
    public let nextToken: String?
    /// <p>The AWS account ID associated with the registry that contains the repository.
    ///             If you do not specify a registry, the default registry is assumed.</p>
    public let registryId: String?
    /// <p>The name of the repository.</p>
    public let repositoryName: String?

    public init (
        filter: LifecyclePolicyPreviewFilter? = nil,
        imageIds: [ImageIdentifier]? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        registryId: String? = nil,
        repositoryName: String? = nil
    )
    {
        self.filter = filter
        self.imageIds = imageIds
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.registryId = registryId
        self.repositoryName = repositoryName
    }
}
