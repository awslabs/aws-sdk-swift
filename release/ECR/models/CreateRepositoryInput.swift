// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRepositoryInput: Equatable {
    /// <p>The encryption configuration for the repository. This determines how the contents of
    ///             your repository are encrypted at rest.</p>
    public let encryptionConfiguration: EncryptionConfiguration?
    /// <p>The image scanning configuration for the repository. This determines whether images
    ///             are scanned for known vulnerabilities after being pushed to the repository.</p>
    public let imageScanningConfiguration: ImageScanningConfiguration?
    /// <p>The tag mutability setting for the repository. If this parameter is omitted, the
    ///             default setting of <code>MUTABLE</code> will be used which will allow image tags to be
    ///             overwritten. If <code>IMMUTABLE</code> is specified, all image tags within the
    ///             repository will be immutable which will prevent them from being overwritten.</p>
    public let imageTagMutability: ImageTagMutability?
    /// <p>The name to use for the repository. The repository name may be specified on its own
    ///             (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group
    ///             the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>
    public let repositoryName: String?
    /// <p>The metadata that you apply to the repository to help you categorize and organize
    ///             them. Each tag consists of a key and an optional value, both of which you define.
    ///             Tag keys can have a maximum character length of 128 characters, and tag values can have
    ///             a maximum length of 256 characters.</p>
    public let tags: [Tag]?

    public init (
        encryptionConfiguration: EncryptionConfiguration? = nil,
        imageScanningConfiguration: ImageScanningConfiguration? = nil,
        imageTagMutability: ImageTagMutability? = nil,
        repositoryName: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.encryptionConfiguration = encryptionConfiguration
        self.imageScanningConfiguration = imageScanningConfiguration
        self.imageTagMutability = imageTagMutability
        self.repositoryName = repositoryName
        self.tags = tags
    }
}
