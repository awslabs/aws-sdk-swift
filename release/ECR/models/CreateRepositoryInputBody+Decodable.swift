// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateRepositoryInputBody: Equatable {
    public let repositoryName: String?
    public let tags: [Tag]?
    public let imageTagMutability: ImageTagMutability?
    public let imageScanningConfiguration: ImageScanningConfiguration?
    public let encryptionConfiguration: EncryptionConfiguration?
}

extension CreateRepositoryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case encryptionConfiguration
        case imageScanningConfiguration
        case imageTagMutability
        case repositoryName
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let imageTagMutabilityDecoded = try containerValues.decodeIfPresent(ImageTagMutability.self, forKey: .imageTagMutability)
        imageTagMutability = imageTagMutabilityDecoded
        let imageScanningConfigurationDecoded = try containerValues.decodeIfPresent(ImageScanningConfiguration.self, forKey: .imageScanningConfiguration)
        imageScanningConfiguration = imageScanningConfigurationDecoded
        let encryptionConfigurationDecoded = try containerValues.decodeIfPresent(EncryptionConfiguration.self, forKey: .encryptionConfiguration)
        encryptionConfiguration = encryptionConfigurationDecoded
    }
}
