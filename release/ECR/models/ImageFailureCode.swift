// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ImageFailureCode {
    case imagenotfound
    case imagereferencedbymanifestlist
    case imagetagdoesnotmatchdigest
    case invalidimagedigest
    case invalidimagetag
    case kmserror
    case missingdigestandtag
    case sdkUnknown(String)
}

extension ImageFailureCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ImageFailureCode] {
        return [
            .imagenotfound,
            .imagereferencedbymanifestlist,
            .imagetagdoesnotmatchdigest,
            .invalidimagedigest,
            .invalidimagetag,
            .kmserror,
            .missingdigestandtag,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .imagenotfound: return "ImageNotFound"
        case .imagereferencedbymanifestlist: return "ImageReferencedByManifestList"
        case .imagetagdoesnotmatchdigest: return "ImageTagDoesNotMatchDigest"
        case .invalidimagedigest: return "InvalidImageDigest"
        case .invalidimagetag: return "InvalidImageTag"
        case .kmserror: return "KmsError"
        case .missingdigestandtag: return "MissingDigestAndTag"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ImageFailureCode(rawValue: rawValue) ?? ImageFailureCode.sdkUnknown(rawValue)
    }
}
