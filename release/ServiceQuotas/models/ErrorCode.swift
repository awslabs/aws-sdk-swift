// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ErrorCode {
    case dependencyAccessDeniedError
    case dependencyServiceError
    case dependencyThrottlingError
    case serviceQuotaNotAvailableError
    case sdkUnknown(String)
}

extension ErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ErrorCode] {
        return [
            .dependencyAccessDeniedError,
            .dependencyServiceError,
            .dependencyThrottlingError,
            .serviceQuotaNotAvailableError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dependencyAccessDeniedError: return "DEPENDENCY_ACCESS_DENIED_ERROR"
        case .dependencyServiceError: return "DEPENDENCY_SERVICE_ERROR"
        case .dependencyThrottlingError: return "DEPENDENCY_THROTTLING_ERROR"
        case .serviceQuotaNotAvailableError: return "SERVICE_QUOTA_NOT_AVAILABLE_ERROR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ErrorCode(rawValue: rawValue) ?? ErrorCode.sdkUnknown(rawValue)
    }
}
