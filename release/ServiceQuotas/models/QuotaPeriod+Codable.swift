// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QuotaPeriod: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case periodUnit = "PeriodUnit"
        case periodValue = "PeriodValue"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let periodUnit = periodUnit {
            try encodeContainer.encode(periodUnit.rawValue, forKey: .periodUnit)
        }
        if let periodValue = periodValue {
            try encodeContainer.encode(periodValue, forKey: .periodValue)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let periodValueDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .periodValue)
        periodValue = periodValueDecoded
        let periodUnitDecoded = try containerValues.decodeIfPresent(PeriodUnit.self, forKey: .periodUnit)
        periodUnit = periodUnitDecoded
    }
}
