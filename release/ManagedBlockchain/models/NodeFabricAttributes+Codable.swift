// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NodeFabricAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case peerEndpoint = "PeerEndpoint"
        case peerEventEndpoint = "PeerEventEndpoint"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let peerEndpoint = peerEndpoint {
            try encodeContainer.encode(peerEndpoint, forKey: .peerEndpoint)
        }
        if let peerEventEndpoint = peerEventEndpoint {
            try encodeContainer.encode(peerEventEndpoint, forKey: .peerEventEndpoint)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let peerEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .peerEndpoint)
        peerEndpoint = peerEndpointDecoded
        let peerEventEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .peerEventEndpoint)
        peerEventEndpoint = peerEventEndpointDecoded
    }
}
