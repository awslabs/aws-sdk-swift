// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApprovalThresholdPolicy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case proposalDurationInHours = "ProposalDurationInHours"
        case thresholdComparator = "ThresholdComparator"
        case thresholdPercentage = "ThresholdPercentage"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let proposalDurationInHours = proposalDurationInHours {
            try encodeContainer.encode(proposalDurationInHours, forKey: .proposalDurationInHours)
        }
        if let thresholdComparator = thresholdComparator {
            try encodeContainer.encode(thresholdComparator.rawValue, forKey: .thresholdComparator)
        }
        if let thresholdPercentage = thresholdPercentage {
            try encodeContainer.encode(thresholdPercentage, forKey: .thresholdPercentage)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thresholdPercentageDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .thresholdPercentage)
        thresholdPercentage = thresholdPercentageDecoded
        let proposalDurationInHoursDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .proposalDurationInHours)
        proposalDurationInHours = proposalDurationInHoursDecoded
        let thresholdComparatorDecoded = try containerValues.decodeIfPresent(ThresholdComparator.self, forKey: .thresholdComparator)
        thresholdComparator = thresholdComparatorDecoded
    }
}
