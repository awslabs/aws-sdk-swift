// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NetworkFrameworkAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ethereum = "Ethereum"
        case fabric = "Fabric"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ethereum = ethereum {
            try encodeContainer.encode(ethereum, forKey: .ethereum)
        }
        if let fabric = fabric {
            try encodeContainer.encode(fabric, forKey: .fabric)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fabricDecoded = try containerValues.decodeIfPresent(NetworkFabricAttributes.self, forKey: .fabric)
        fabric = fabricDecoded
        let ethereumDecoded = try containerValues.decodeIfPresent(NetworkEthereumAttributes.self, forKey: .ethereum)
        ethereum = ethereumDecoded
    }
}
