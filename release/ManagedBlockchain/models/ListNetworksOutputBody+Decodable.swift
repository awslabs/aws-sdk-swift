// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNetworksOutputBody: Equatable {
    public let networks: [NetworkSummary]?
    public let nextToken: String?
}

extension ListNetworksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case networks = "Networks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networksContainer = try containerValues.decodeIfPresent([NetworkSummary].self, forKey: .networks)
        var networksDecoded0:[NetworkSummary]? = nil
        if let networksContainer = networksContainer {
            networksDecoded0 = [NetworkSummary]()
            for structure0 in networksContainer {
                networksDecoded0?.append(structure0)
            }
        }
        networks = networksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
