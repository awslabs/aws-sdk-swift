// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNodesOutputBody: Equatable {
    public let nodes: [NodeSummary]?
    public let nextToken: String?
}

extension ListNodesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case nodes = "Nodes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodesContainer = try containerValues.decodeIfPresent([NodeSummary].self, forKey: .nodes)
        var nodesDecoded0:[NodeSummary]? = nil
        if let nodesContainer = nodesContainer {
            nodesDecoded0 = [NodeSummary]()
            for structure0 in nodesContainer {
                nodesDecoded0?.append(structure0)
            }
        }
        nodes = nodesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
