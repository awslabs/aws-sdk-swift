// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VotingPolicy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approvalThresholdPolicy = "ApprovalThresholdPolicy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalThresholdPolicy = approvalThresholdPolicy {
            try encodeContainer.encode(approvalThresholdPolicy, forKey: .approvalThresholdPolicy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let approvalThresholdPolicyDecoded = try containerValues.decodeIfPresent(ApprovalThresholdPolicy.self, forKey: .approvalThresholdPolicy)
        approvalThresholdPolicy = approvalThresholdPolicyDecoded
    }
}
