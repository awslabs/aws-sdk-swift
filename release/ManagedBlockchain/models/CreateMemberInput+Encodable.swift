// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateMemberInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case invitationId = "InvitationId"
        case memberConfiguration = "MemberConfiguration"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let invitationId = invitationId {
            try encodeContainer.encode(invitationId, forKey: .invitationId)
        }
        if let memberConfiguration = memberConfiguration {
            try encodeContainer.encode(memberConfiguration, forKey: .memberConfiguration)
        }
    }
}
