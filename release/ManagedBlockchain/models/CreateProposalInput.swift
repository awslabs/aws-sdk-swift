// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateProposalInput: Equatable {
    /// <p>The type of actions proposed, such as inviting a member or removing a member. The types of <code>Actions</code> in a proposal are mutually exclusive. For example, a proposal with <code>Invitations</code> actions cannot also contain <code>Removals</code> actions.</p>
    public let actions: ProposalActions?
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time. This identifier is required only if you make a service request directly using an HTTP client. It is generated automatically if you use an AWS SDK or the AWS CLI.</p>
    public var clientRequestToken: String?
    /// <p>A description for the proposal that is visible to voting members, for example, "Proposal to add Example Corp. as member."</p>
    public let description: String?
    /// <p>The unique identifier of the member that is creating the proposal. This identifier is especially useful for identifying the member making the proposal when multiple members exist in a single AWS account.</p>
    public let memberId: String?
    /// <p>
    ///          The unique identifier of the network for which the proposal is made.</p>
    public let networkId: String?
    /// <p>Tags to assign to the proposal. Each tag consists of a key and optional value.</p>
    ///          <p>When specifying tags during creation, you can specify multiple key-value pairs in a single request, with an overall maximum of 50 tags added to each resource. If the proposal is for a network invitation, the invitation inherits the tags added to the proposal.</p>
    ///          <p>For more information about tags, see <a href="https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html">Tagging Resources</a> in the <i>Amazon Managed Blockchain Ethereum Developer Guide</i>, or <a href="https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html">Tagging Resources</a> in the <i>Amazon Managed Blockchain Hyperledger Fabric Developer Guide</i>.</p>
    public let tags: [String:String]?

    public init (
        actions: ProposalActions? = nil,
        clientRequestToken: String? = nil,
        description: String? = nil,
        memberId: String? = nil,
        networkId: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.actions = actions
        self.clientRequestToken = clientRequestToken
        self.description = description
        self.memberId = memberId
        self.networkId = networkId
        self.tags = tags
    }
}
