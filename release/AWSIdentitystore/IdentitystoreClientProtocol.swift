// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// The Identity Store service used by AWS IAM Identity Center (successor to AWS Single Sign-On) provides a single place to retrieve all of your identities (users and groups). For more information, see the [IAM Identity Center User Guide](https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html). Although AWS Single Sign-On was renamed, the sso and identitystore API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see [IAM Identity Center rename](https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed). This reference guide describes the identity store operations that you can call programatically and includes detailed information on data types and errors.
public protocol IdentitystoreClientProtocol {
    /// Creates a group within the specified identity store.
    func createGroup(input: CreateGroupInput) async throws -> CreateGroupOutputResponse
    /// Creates a relationship between a member and a group. The following identifiers must be specified: GroupId, IdentityStoreId, and MemberId.
    func createGroupMembership(input: CreateGroupMembershipInput) async throws -> CreateGroupMembershipOutputResponse
    /// Creates a new user within the specified identity store.
    func createUser(input: CreateUserInput) async throws -> CreateUserOutputResponse
    /// Delete a group within an identity store given GroupId.
    func deleteGroup(input: DeleteGroupInput) async throws -> DeleteGroupOutputResponse
    /// Delete a membership within a group given MembershipId.
    func deleteGroupMembership(input: DeleteGroupMembershipInput) async throws -> DeleteGroupMembershipOutputResponse
    /// Deletes a user within an identity store given UserId.
    func deleteUser(input: DeleteUserInput) async throws -> DeleteUserOutputResponse
    /// Retrieves the group metadata and attributes from GroupId in an identity store.
    func describeGroup(input: DescribeGroupInput) async throws -> DescribeGroupOutputResponse
    /// Retrieves membership metadata and attributes from MembershipId in an identity store.
    func describeGroupMembership(input: DescribeGroupMembershipInput) async throws -> DescribeGroupMembershipOutputResponse
    /// Retrieves the user metadata and attributes from the UserId in an identity store.
    func describeUser(input: DescribeUserInput) async throws -> DescribeUserOutputResponse
    /// Retrieves GroupId in an identity store.
    func getGroupId(input: GetGroupIdInput) async throws -> GetGroupIdOutputResponse
    /// Retrieves the MembershipId in an identity store.
    func getGroupMembershipId(input: GetGroupMembershipIdInput) async throws -> GetGroupMembershipIdOutputResponse
    /// Retrieves the UserId in an identity store.
    func getUserId(input: GetUserIdInput) async throws -> GetUserIdOutputResponse
    /// Checks the user's membership in all requested groups and returns if the member exists in all queried groups.
    func isMemberInGroups(input: IsMemberInGroupsInput) async throws -> IsMemberInGroupsOutputResponse
    /// For the specified group in the specified identity store, returns the list of all GroupMembership objects and returns results in paginated form.
    func listGroupMemberships(input: ListGroupMembershipsInput) async throws -> ListGroupMembershipsOutputResponse
    /// For the specified member in the specified identity store, returns the list of all GroupMembership objects and returns results in paginated form.
    func listGroupMembershipsForMember(input: ListGroupMembershipsForMemberInput) async throws -> ListGroupMembershipsForMemberOutputResponse
    /// Lists all groups in the identity store. Returns a paginated list of complete Group objects. Filtering for a Group by the DisplayName attribute is deprecated. Instead, use the GetGroupId API action.
    func listGroups(input: ListGroupsInput) async throws -> ListGroupsOutputResponse
    /// Lists all users in the identity store. Returns a paginated list of complete User objects. Filtering for a User by the UserName attribute is deprecated. Instead, use the GetUserId API action.
    func listUsers(input: ListUsersInput) async throws -> ListUsersOutputResponse
    /// For the specified group in the specified identity store, updates the group metadata and attributes.
    func updateGroup(input: UpdateGroupInput) async throws -> UpdateGroupOutputResponse
    /// For the specified user in the specified identity store, updates the user metadata and attributes.
    func updateUser(input: UpdateUserInput) async throws -> UpdateUserOutputResponse
}

public protocol IdentitystoreClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum IdentitystoreClientTypes {}
