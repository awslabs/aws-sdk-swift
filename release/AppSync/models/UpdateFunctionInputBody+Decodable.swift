// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFunctionInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let dataSourceName: String?
    public let requestMappingTemplate: String?
    public let responseMappingTemplate: String?
    public let functionVersion: String?
    public let syncConfig: SyncConfig?
}

extension UpdateFunctionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataSourceName
        case description
        case functionVersion
        case name
        case requestMappingTemplate
        case responseMappingTemplate
        case syncConfig
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let dataSourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataSourceName)
        dataSourceName = dataSourceNameDecoded
        let requestMappingTemplateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestMappingTemplate)
        requestMappingTemplate = requestMappingTemplateDecoded
        let responseMappingTemplateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .responseMappingTemplate)
        responseMappingTemplate = responseMappingTemplateDecoded
        let functionVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .functionVersion)
        functionVersion = functionVersionDecoded
        let syncConfigDecoded = try containerValues.decodeIfPresent(SyncConfig.self, forKey: .syncConfig)
        syncConfig = syncConfigDecoded
    }
}
