// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateApiCacheInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case apiCachingBehavior
        case ttl
        case type
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiCachingBehavior = apiCachingBehavior {
            try encodeContainer.encode(apiCachingBehavior.rawValue, forKey: .apiCachingBehavior)
        }
        if ttl != 0 {
            try encodeContainer.encode(ttl, forKey: .ttl)
        }
        if let type = type {
            try encodeContainer.encode(type.rawValue, forKey: .type)
        }
    }
}
