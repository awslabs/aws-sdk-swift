// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a data source.</p>
public struct DataSource: Equatable {
    /// <p>The data source ARN.</p>
    public let dataSourceArn: String?
    /// <p>The description of the data source.</p>
    public let description: String?
    /// <p>Amazon DynamoDB settings.</p>
    public let dynamodbConfig: DynamodbDataSourceConfig?
    /// <p>Amazon Elasticsearch Service settings.</p>
    public let elasticsearchConfig: ElasticsearchDataSourceConfig?
    /// <p>HTTP endpoint settings.</p>
    public let httpConfig: HttpDataSourceConfig?
    /// <p>AWS Lambda settings.</p>
    public let lambdaConfig: LambdaDataSourceConfig?
    /// <p>The name of the data source.</p>
    public let name: String?
    /// <p>Relational database settings.</p>
    public let relationalDatabaseConfig: RelationalDatabaseDataSourceConfig?
    /// <p>The AWS IAM service role ARN for the data source. The system assumes this role when
    ///          accessing the data source.</p>
    public let serviceRoleArn: String?
    /// <p>The type of the data source.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>AMAZON_DYNAMODB</b>: The data source is an Amazon
    ///                DynamoDB table.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>AMAZON_ELASTICSEARCH</b>: The data source is an
    ///                Amazon Elasticsearch Service domain.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>AWS_LAMBDA</b>: The data source is an AWS Lambda
    ///                function.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>NONE</b>: There is no data source. This type is
    ///                used when you wish to invoke a GraphQL operation without connecting to a data source,
    ///                such as performing data transformation with resolvers or triggering a subscription to
    ///                be invoked from a mutation.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>HTTP</b>: The data source is an HTTP
    ///                endpoint.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>RELATIONAL_DATABASE</b>: The data source is a
    ///                relational database.</p>
    ///             </li>
    ///          </ul>
    public let type: DataSourceType?

    public init (
        dataSourceArn: String? = nil,
        description: String? = nil,
        dynamodbConfig: DynamodbDataSourceConfig? = nil,
        elasticsearchConfig: ElasticsearchDataSourceConfig? = nil,
        httpConfig: HttpDataSourceConfig? = nil,
        lambdaConfig: LambdaDataSourceConfig? = nil,
        name: String? = nil,
        relationalDatabaseConfig: RelationalDatabaseDataSourceConfig? = nil,
        serviceRoleArn: String? = nil,
        type: DataSourceType? = nil
    )
    {
        self.dataSourceArn = dataSourceArn
        self.description = description
        self.dynamodbConfig = dynamodbConfig
        self.elasticsearchConfig = elasticsearchConfig
        self.httpConfig = httpConfig
        self.lambdaConfig = lambdaConfig
        self.name = name
        self.relationalDatabaseConfig = relationalDatabaseConfig
        self.serviceRoleArn = serviceRoleArn
        self.type = type
    }
}
