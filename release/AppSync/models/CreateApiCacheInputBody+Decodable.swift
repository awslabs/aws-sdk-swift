// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateApiCacheInputBody: Equatable {
    public let ttl: Int
    public let transitEncryptionEnabled: Bool
    public let atRestEncryptionEnabled: Bool
    public let apiCachingBehavior: ApiCachingBehavior?
    public let type: ApiCacheType?
}

extension CreateApiCacheInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case apiCachingBehavior
        case atRestEncryptionEnabled
        case transitEncryptionEnabled
        case ttl
        case type
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ttlDecoded = try containerValues.decode(Int.self, forKey: .ttl)
        ttl = ttlDecoded
        let transitEncryptionEnabledDecoded = try containerValues.decode(Bool.self, forKey: .transitEncryptionEnabled)
        transitEncryptionEnabled = transitEncryptionEnabledDecoded
        let atRestEncryptionEnabledDecoded = try containerValues.decode(Bool.self, forKey: .atRestEncryptionEnabled)
        atRestEncryptionEnabled = atRestEncryptionEnabledDecoded
        let apiCachingBehaviorDecoded = try containerValues.decodeIfPresent(ApiCachingBehavior.self, forKey: .apiCachingBehavior)
        apiCachingBehavior = apiCachingBehaviorDecoded
        let typeDecoded = try containerValues.decodeIfPresent(ApiCacheType.self, forKey: .type)
        type = typeDecoded
    }
}
