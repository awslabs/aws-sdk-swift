// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApiKey: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deletes
        case description
        case expires
        case id
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if deletes != 0 {
            try encodeContainer.encode(deletes, forKey: .deletes)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if expires != 0 {
            try encodeContainer.encode(expires, forKey: .expires)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let expiresDecoded = try containerValues.decode(Int.self, forKey: .expires)
        expires = expiresDecoded
        let deletesDecoded = try containerValues.decode(Int.self, forKey: .deletes)
        deletes = deletesDecoded
    }
}
