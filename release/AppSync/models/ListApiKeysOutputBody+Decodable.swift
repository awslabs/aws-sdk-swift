// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApiKeysOutputBody: Equatable {
    public let apiKeys: [ApiKey]?
    public let nextToken: String?
}

extension ListApiKeysOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case apiKeys
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiKeysContainer = try containerValues.decodeIfPresent([ApiKey].self, forKey: .apiKeys)
        var apiKeysDecoded0:[ApiKey]? = nil
        if let apiKeysContainer = apiKeysContainer {
            apiKeysDecoded0 = [ApiKey]()
            for structure0 in apiKeysContainer {
                apiKeysDecoded0?.append(structure0)
            }
        }
        apiKeys = apiKeysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
