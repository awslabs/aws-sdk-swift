// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGraphqlApisOutputBody: Equatable {
    public let graphqlApis: [GraphqlApi]?
    public let nextToken: String?
}

extension ListGraphqlApisOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case graphqlApis
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let graphqlApisContainer = try containerValues.decodeIfPresent([GraphqlApi].self, forKey: .graphqlApis)
        var graphqlApisDecoded0:[GraphqlApi]? = nil
        if let graphqlApisContainer = graphqlApisContainer {
            graphqlApisDecoded0 = [GraphqlApi]()
            for structure0 in graphqlApisContainer {
                graphqlApisDecoded0?.append(structure0)
            }
        }
        graphqlApis = graphqlApisDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
