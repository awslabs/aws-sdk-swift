// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVPCEConfigurationsOutputBody: Equatable {
    public let vpceConfigurations: [VPCEConfiguration]?
    public let nextToken: String?
}

extension ListVPCEConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case vpceConfigurations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vpceConfigurationsContainer = try containerValues.decodeIfPresent([VPCEConfiguration].self, forKey: .vpceConfigurations)
        var vpceConfigurationsDecoded0:[VPCEConfiguration]? = nil
        if let vpceConfigurationsContainer = vpceConfigurationsContainer {
            vpceConfigurationsDecoded0 = [VPCEConfiguration]()
            for structure0 in vpceConfigurationsContainer {
                vpceConfigurationsDecoded0?.append(structure0)
            }
        }
        vpceConfigurations = vpceConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
