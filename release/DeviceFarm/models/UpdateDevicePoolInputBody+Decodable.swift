// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDevicePoolInputBody: Equatable {
    public let arn: String?
    public let name: String?
    public let description: String?
    public let rules: [Rule]?
    public let maxDevices: Int?
    public let clearMaxDevices: Bool?
}

extension UpdateDevicePoolInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn
        case clearMaxDevices
        case description
        case maxDevices
        case name
        case rules
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let rulesContainer = try containerValues.decodeIfPresent([Rule].self, forKey: .rules)
        var rulesDecoded0:[Rule]? = nil
        if let rulesContainer = rulesContainer {
            rulesDecoded0 = [Rule]()
            for structure0 in rulesContainer {
                rulesDecoded0?.append(structure0)
            }
        }
        rules = rulesDecoded0
        let maxDevicesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxDevices)
        maxDevices = maxDevicesDecoded
        let clearMaxDevicesDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .clearMaxDevices)
        clearMaxDevices = clearMaxDevicesDecoded
    }
}
