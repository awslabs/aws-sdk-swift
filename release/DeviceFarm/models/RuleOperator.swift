// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RuleOperator {
    case contains
    case equals
    case greaterThan
    case greaterThanOrEquals
    case `in`
    case lessThan
    case lessThanOrEquals
    case notIn
    case sdkUnknown(String)
}

extension RuleOperator : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RuleOperator] {
        return [
            .contains,
            .equals,
            .greaterThan,
            .greaterThanOrEquals,
            .in,
            .lessThan,
            .lessThanOrEquals,
            .notIn,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .contains: return "CONTAINS"
        case .equals: return "EQUALS"
        case .greaterThan: return "GREATER_THAN"
        case .greaterThanOrEquals: return "GREATER_THAN_OR_EQUALS"
        case .in: return "IN"
        case .lessThan: return "LESS_THAN"
        case .lessThanOrEquals: return "LESS_THAN_OR_EQUALS"
        case .notIn: return "NOT_IN"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RuleOperator(rawValue: rawValue) ?? RuleOperator.sdkUnknown(rawValue)
    }
}
