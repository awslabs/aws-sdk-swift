// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateInstanceProfileInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description
        case excludeAppPackagesFromCleanup
        case name
        case packageCleanup
        case rebootAfterUse
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let excludeAppPackagesFromCleanup = excludeAppPackagesFromCleanup {
            var excludeAppPackagesFromCleanupContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludeAppPackagesFromCleanup)
            for packageids0 in excludeAppPackagesFromCleanup {
                try excludeAppPackagesFromCleanupContainer.encode(packageids0)
            }
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let packageCleanup = packageCleanup {
            try encodeContainer.encode(packageCleanup, forKey: .packageCleanup)
        }
        if let rebootAfterUse = rebootAfterUse {
            try encodeContainer.encode(rebootAfterUse, forKey: .rebootAfterUse)
        }
    }
}
