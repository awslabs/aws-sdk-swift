// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateRemoteAccessSessionConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case billingMethod
        case vpceConfigurationArns
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let billingMethod = billingMethod {
            try encodeContainer.encode(billingMethod.rawValue, forKey: .billingMethod)
        }
        if let vpceConfigurationArns = vpceConfigurationArns {
            var vpceConfigurationArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .vpceConfigurationArns)
            for amazonresourcenames0 in vpceConfigurationArns {
                try vpceConfigurationArnsContainer.encode(amazonresourcenames0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let billingMethodDecoded = try containerValues.decodeIfPresent(BillingMethod.self, forKey: .billingMethod)
        billingMethod = billingMethodDecoded
        let vpceConfigurationArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .vpceConfigurationArns)
        var vpceConfigurationArnsDecoded0:[String]? = nil
        if let vpceConfigurationArnsContainer = vpceConfigurationArnsContainer {
            vpceConfigurationArnsDecoded0 = [String]()
            for string0 in vpceConfigurationArnsContainer {
                vpceConfigurationArnsDecoded0?.append(string0)
            }
        }
        vpceConfigurationArns = vpceConfigurationArnsDecoded0
    }
}
