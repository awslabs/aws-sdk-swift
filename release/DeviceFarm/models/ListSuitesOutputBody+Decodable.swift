// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSuitesOutputBody: Equatable {
    public let suites: [Suite]?
    public let nextToken: String?
}

extension ListSuitesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case suites
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suitesContainer = try containerValues.decodeIfPresent([Suite].self, forKey: .suites)
        var suitesDecoded0:[Suite]? = nil
        if let suitesContainer = suitesContainer {
            suitesDecoded0 = [Suite]()
            for structure0 in suitesContainer {
                suitesDecoded0?.append(structure0)
            }
        }
        suites = suitesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
