// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRunsOutputBody: Equatable {
    public let runs: [Run]?
    public let nextToken: String?
}

extension ListRunsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case runs
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let runsContainer = try containerValues.decodeIfPresent([Run].self, forKey: .runs)
        var runsDecoded0:[Run]? = nil
        if let runsContainer = runsContainer {
            runsDecoded0 = [Run]()
            for structure0 in runsContainer {
                runsDecoded0?.append(structure0)
            }
        }
        runs = runsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
