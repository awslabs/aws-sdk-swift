// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateInstanceProfileInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let packageCleanup: Bool?
    public let excludeAppPackagesFromCleanup: [String]?
    public let rebootAfterUse: Bool?
}

extension CreateInstanceProfileInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description
        case excludeAppPackagesFromCleanup
        case name
        case packageCleanup
        case rebootAfterUse
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let packageCleanupDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .packageCleanup)
        packageCleanup = packageCleanupDecoded
        let excludeAppPackagesFromCleanupContainer = try containerValues.decodeIfPresent([String].self, forKey: .excludeAppPackagesFromCleanup)
        var excludeAppPackagesFromCleanupDecoded0:[String]? = nil
        if let excludeAppPackagesFromCleanupContainer = excludeAppPackagesFromCleanupContainer {
            excludeAppPackagesFromCleanupDecoded0 = [String]()
            for string0 in excludeAppPackagesFromCleanupContainer {
                excludeAppPackagesFromCleanupDecoded0?.append(string0)
            }
        }
        excludeAppPackagesFromCleanup = excludeAppPackagesFromCleanupDecoded0
        let rebootAfterUseDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .rebootAfterUse)
        rebootAfterUse = rebootAfterUseDecoded
    }
}
