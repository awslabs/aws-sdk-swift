// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDevicePoolInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description
        case maxDevices
        case name
        case projectArn
        case rules
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let maxDevices = maxDevices {
            try encodeContainer.encode(maxDevices, forKey: .maxDevices)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let projectArn = projectArn {
            try encodeContainer.encode(projectArn, forKey: .projectArn)
        }
        if let rules = rules {
            var rulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rules)
            for rules0 in rules {
                try rulesContainer.encode(rules0)
            }
        }
    }
}
