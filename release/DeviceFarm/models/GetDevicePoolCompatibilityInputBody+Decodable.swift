// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDevicePoolCompatibilityInputBody: Equatable {
    public let devicePoolArn: String?
    public let appArn: String?
    public let testType: TestType?
    public let test: ScheduleRunTest?
    public let configuration: ScheduleRunConfiguration?
}

extension GetDevicePoolCompatibilityInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appArn
        case configuration
        case devicePoolArn
        case test
        case testType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicePoolArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .devicePoolArn)
        devicePoolArn = devicePoolArnDecoded
        let appArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appArn)
        appArn = appArnDecoded
        let testTypeDecoded = try containerValues.decodeIfPresent(TestType.self, forKey: .testType)
        testType = testTypeDecoded
        let testDecoded = try containerValues.decodeIfPresent(ScheduleRunTest.self, forKey: .test)
        test = testDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(ScheduleRunConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
    }
}
