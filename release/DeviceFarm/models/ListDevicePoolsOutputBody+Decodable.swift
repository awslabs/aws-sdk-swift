// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDevicePoolsOutputBody: Equatable {
    public let devicePools: [DevicePool]?
    public let nextToken: String?
}

extension ListDevicePoolsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case devicePools
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicePoolsContainer = try containerValues.decodeIfPresent([DevicePool].self, forKey: .devicePools)
        var devicePoolsDecoded0:[DevicePool]? = nil
        if let devicePoolsContainer = devicePoolsContainer {
            devicePoolsDecoded0 = [DevicePool]()
            for structure0 in devicePoolsContainer {
                devicePoolsDecoded0?.append(structure0)
            }
        }
        devicePools = devicePoolsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
