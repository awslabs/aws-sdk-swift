// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNetworkProfilesInputBody: Equatable {
    public let arn: String?
    public let type: NetworkProfileType?
    public let nextToken: String?
}

extension ListNetworkProfilesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn
        case nextToken
        case type
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let typeDecoded = try containerValues.decodeIfPresent(NetworkProfileType.self, forKey: .type)
        type = typeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
