// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestGridProjectsOutputBody: Equatable {
    public let testGridProjects: [TestGridProject]?
    public let nextToken: String?
}

extension ListTestGridProjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case testGridProjects
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testGridProjectsContainer = try containerValues.decodeIfPresent([TestGridProject].self, forKey: .testGridProjects)
        var testGridProjectsDecoded0:[TestGridProject]? = nil
        if let testGridProjectsContainer = testGridProjectsContainer {
            testGridProjectsDecoded0 = [TestGridProject]()
            for structure0 in testGridProjectsContainer {
                testGridProjectsDecoded0?.append(structure0)
            }
        }
        testGridProjects = testGridProjectsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
