// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Resolution: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case height
        case width
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let height = height {
            try encodeContainer.encode(height, forKey: .height)
        }
        if let width = width {
            try encodeContainer.encode(width, forKey: .width)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let widthDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .width)
        width = widthDecoded
        let heightDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .height)
        height = heightDecoded
    }
}
