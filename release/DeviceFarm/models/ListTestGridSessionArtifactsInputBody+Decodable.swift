// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestGridSessionArtifactsInputBody: Equatable {
    public let sessionArn: String?
    public let type: TestGridSessionArtifactCategory?
    public let maxResult: Int?
    public let nextToken: String?
}

extension ListTestGridSessionArtifactsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResult
        case nextToken
        case sessionArn
        case type
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sessionArn)
        sessionArn = sessionArnDecoded
        let typeDecoded = try containerValues.decodeIfPresent(TestGridSessionArtifactCategory.self, forKey: .type)
        type = typeDecoded
        let maxResultDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResult)
        maxResult = maxResultDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
