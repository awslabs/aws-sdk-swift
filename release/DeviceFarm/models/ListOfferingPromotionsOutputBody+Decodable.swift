// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOfferingPromotionsOutputBody: Equatable {
    public let offeringPromotions: [OfferingPromotion]?
    public let nextToken: String?
}

extension ListOfferingPromotionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case offeringPromotions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let offeringPromotionsContainer = try containerValues.decodeIfPresent([OfferingPromotion].self, forKey: .offeringPromotions)
        var offeringPromotionsDecoded0:[OfferingPromotion]? = nil
        if let offeringPromotionsContainer = offeringPromotionsContainer {
            offeringPromotionsDecoded0 = [OfferingPromotion]()
            for structure0 in offeringPromotionsContainer {
                offeringPromotionsDecoded0?.append(structure0)
            }
        }
        offeringPromotions = offeringPromotionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
