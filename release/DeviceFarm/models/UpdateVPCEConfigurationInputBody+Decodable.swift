// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVPCEConfigurationInputBody: Equatable {
    public let arn: String?
    public let vpceConfigurationName: String?
    public let vpceServiceName: String?
    public let serviceDnsName: String?
    public let vpceConfigurationDescription: String?
}

extension UpdateVPCEConfigurationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn
        case serviceDnsName
        case vpceConfigurationDescription
        case vpceConfigurationName
        case vpceServiceName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let vpceConfigurationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpceConfigurationName)
        vpceConfigurationName = vpceConfigurationNameDecoded
        let vpceServiceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpceServiceName)
        vpceServiceName = vpceServiceNameDecoded
        let serviceDnsNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceDnsName)
        serviceDnsName = serviceDnsNameDecoded
        let vpceConfigurationDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpceConfigurationDescription)
        vpceConfigurationDescription = vpceConfigurationDescriptionDecoded
    }
}
