// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOfferingStatusOutputBody: Equatable {
    public let current: [String:OfferingStatus]?
    public let nextPeriod: [String:OfferingStatus]?
    public let nextToken: String?
}

extension GetOfferingStatusOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case current
        case nextPeriod
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currentContainer = try containerValues.decodeIfPresent([String:OfferingStatus].self, forKey: .current)
        var currentDecoded0: [String:OfferingStatus]? = nil
        if let currentContainer = currentContainer {
            currentDecoded0 = [String:OfferingStatus]()
            for (key0, offeringstatus0) in currentContainer {
                currentDecoded0?[key0] = offeringstatus0
            }
        }
        current = currentDecoded0
        let nextPeriodContainer = try containerValues.decodeIfPresent([String:OfferingStatus].self, forKey: .nextPeriod)
        var nextPeriodDecoded0: [String:OfferingStatus]? = nil
        if let nextPeriodContainer = nextPeriodContainer {
            nextPeriodDecoded0 = [String:OfferingStatus]()
            for (key0, offeringstatus0) in nextPeriodContainer {
                nextPeriodDecoded0?[key0] = offeringstatus0
            }
        }
        nextPeriod = nextPeriodDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
