// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a collection of device types.</p>
public struct DevicePool: Equatable {
    /// <p>The device pool's ARN.</p>
    public let arn: String?
    /// <p>The device pool's description.</p>
    public let description: String?
    /// <p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are
    ///             available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many
    ///             devices meet these constraints, your device pool might contain fewer devices than the value for this
    ///             parameter.</p>
    ///         <p>By specifying the maximum number of devices, you can control the costs that you incur
    ///             by running tests.</p>
    public let maxDevices: Int?
    /// <p>The device pool's name.</p>
    public let name: String?
    /// <p>Information about the device pool's rules.</p>
    public let rules: [Rule]?
    /// <p>The device pool's type.</p>
    ///         <p>Allowed values include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>CURATED: A device pool that is created and managed by AWS Device
    ///                     Farm.</p>
    ///             </li>
    ///             <li>
    ///                 <p>PRIVATE: A device pool that is created and managed by the device pool
    ///                     developer.</p>
    ///             </li>
    ///          </ul>
    public let type: DevicePoolType?

    public init (
        arn: String? = nil,
        description: String? = nil,
        maxDevices: Int? = nil,
        name: String? = nil,
        rules: [Rule]? = nil,
        type: DevicePoolType? = nil
    )
    {
        self.arn = arn
        self.description = description
        self.maxDevices = maxDevices
        self.name = name
        self.rules = rules
        self.type = type
    }
}
