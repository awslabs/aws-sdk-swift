// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ScheduleRunInputBody: Equatable {
    public let projectArn: String?
    public let appArn: String?
    public let devicePoolArn: String?
    public let deviceSelectionConfiguration: DeviceSelectionConfiguration?
    public let name: String?
    public let test: ScheduleRunTest?
    public let configuration: ScheduleRunConfiguration?
    public let executionConfiguration: ExecutionConfiguration?
}

extension ScheduleRunInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appArn
        case configuration
        case devicePoolArn
        case deviceSelectionConfiguration
        case executionConfiguration
        case name
        case projectArn
        case test
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let appArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appArn)
        appArn = appArnDecoded
        let devicePoolArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .devicePoolArn)
        devicePoolArn = devicePoolArnDecoded
        let deviceSelectionConfigurationDecoded = try containerValues.decodeIfPresent(DeviceSelectionConfiguration.self, forKey: .deviceSelectionConfiguration)
        deviceSelectionConfiguration = deviceSelectionConfigurationDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let testDecoded = try containerValues.decodeIfPresent(ScheduleRunTest.self, forKey: .test)
        test = testDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(ScheduleRunConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let executionConfigurationDecoded = try containerValues.decodeIfPresent(ExecutionConfiguration.self, forKey: .executionConfiguration)
        executionConfiguration = executionConfigurationDecoded
    }
}
