// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestGridSessionsOutputBody: Equatable {
    public let testGridSessions: [TestGridSession]?
    public let nextToken: String?
}

extension ListTestGridSessionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case testGridSessions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testGridSessionsContainer = try containerValues.decodeIfPresent([TestGridSession].self, forKey: .testGridSessions)
        var testGridSessionsDecoded0:[TestGridSession]? = nil
        if let testGridSessionsContainer = testGridSessionsContainer {
            testGridSessionsDecoded0 = [TestGridSession]()
            for structure0 in testGridSessionsContainer {
                testGridSessionsDecoded0?.append(structure0)
            }
        }
        testGridSessions = testGridSessionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
