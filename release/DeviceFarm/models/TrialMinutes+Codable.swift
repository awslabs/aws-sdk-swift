// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrialMinutes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case remaining
        case total
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let remaining = remaining {
            try encodeContainer.encode(remaining, forKey: .remaining)
        }
        if let total = total {
            try encodeContainer.encode(total, forKey: .total)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .total)
        total = totalDecoded
        let remainingDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .remaining)
        remaining = remainingDecoded
    }
}
