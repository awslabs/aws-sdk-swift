// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a device.</p>
public struct Job: Equatable {
    /// <p>The job's ARN.</p>
    public let arn: String?
    /// <p>The job's result counters.</p>
    public let counters: Counters?
    /// <p>When the job was created.</p>
    public let created: Date?
    /// <p>The device (phone or tablet).</p>
    public let device: Device?
    /// <p>Represents the total (metered or unmetered) minutes used by the job.</p>
    public let deviceMinutes: DeviceMinutes?
    /// <p>The ARN of the instance.</p>
    public let instanceArn: String?
    /// <p>A message about the job's result.</p>
    public let message: String?
    /// <p>The job's name.</p>
    public let name: String?
    /// <p>The job's result.</p>
    ///         <p>Allowed values include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>PENDING</p>
    ///             </li>
    ///             <li>
    ///                 <p>PASSED</p>
    ///             </li>
    ///             <li>
    ///                 <p>WARNED</p>
    ///             </li>
    ///             <li>
    ///                 <p>FAILED</p>
    ///             </li>
    ///             <li>
    ///                 <p>SKIPPED</p>
    ///             </li>
    ///             <li>
    ///                 <p>ERRORED</p>
    ///             </li>
    ///             <li>
    ///                 <p>STOPPED</p>
    ///             </li>
    ///          </ul>
    public let result: ExecutionResult?
    /// <p>The job's start time.</p>
    public let started: Date?
    /// <p>The job's status.</p>
    ///         <p>Allowed values include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>PENDING</p>
    ///             </li>
    ///             <li>
    ///                 <p>PENDING_CONCURRENCY</p>
    ///             </li>
    ///             <li>
    ///                 <p>PENDING_DEVICE</p>
    ///             </li>
    ///             <li>
    ///                 <p>PROCESSING</p>
    ///             </li>
    ///             <li>
    ///                 <p>SCHEDULING</p>
    ///             </li>
    ///             <li>
    ///                 <p>PREPARING</p>
    ///             </li>
    ///             <li>
    ///                 <p>RUNNING</p>
    ///             </li>
    ///             <li>
    ///                 <p>COMPLETED</p>
    ///             </li>
    ///             <li>
    ///                 <p>STOPPING</p>
    ///             </li>
    ///          </ul>
    public let status: ExecutionStatus?
    /// <p>The job's stop time.</p>
    public let stopped: Date?
    /// <p>The job's type.</p>
    ///         <p>Allowed values include the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>BUILTIN_FUZZ</p>
    ///             </li>
    ///             <li>
    ///                 <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with
    ///                     it and capturing screenshots at the same time.</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_JAVA_JUNIT</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_JAVA_TESTNG</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_PYTHON</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_NODE</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_RUBY</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_WEB_JAVA_JUNIT</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_WEB_JAVA_TESTNG</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_WEB_PYTHON</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_WEB_NODE</p>
    ///             </li>
    ///             <li>
    ///                 <p>APPIUM_WEB_RUBY</p>
    ///             </li>
    ///             <li>
    ///                 <p>CALABASH</p>
    ///             </li>
    ///             <li>
    ///                 <p>INSTRUMENTATION</p>
    ///             </li>
    ///             <li>
    ///                 <p>UIAUTOMATION</p>
    ///             </li>
    ///             <li>
    ///                 <p>UIAUTOMATOR</p>
    ///             </li>
    ///             <li>
    ///                 <p>XCTEST</p>
    ///             </li>
    ///             <li>
    ///                 <p>XCTEST_UI</p>
    ///             </li>
    ///          </ul>
    public let type: TestType?
    /// <p>This value is set to true if video capture is enabled. Otherwise, it is set to false.</p>
    public let videoCapture: Bool?
    /// <p>The endpoint for streaming device video.</p>
    public let videoEndpoint: String?

    public init (
        arn: String? = nil,
        counters: Counters? = nil,
        created: Date? = nil,
        device: Device? = nil,
        deviceMinutes: DeviceMinutes? = nil,
        instanceArn: String? = nil,
        message: String? = nil,
        name: String? = nil,
        result: ExecutionResult? = nil,
        started: Date? = nil,
        status: ExecutionStatus? = nil,
        stopped: Date? = nil,
        type: TestType? = nil,
        videoCapture: Bool? = nil,
        videoEndpoint: String? = nil
    )
    {
        self.arn = arn
        self.counters = counters
        self.created = created
        self.device = device
        self.deviceMinutes = deviceMinutes
        self.instanceArn = instanceArn
        self.message = message
        self.name = name
        self.result = result
        self.started = started
        self.status = status
        self.stopped = stopped
        self.type = type
        self.videoCapture = videoCapture
        self.videoEndpoint = videoEndpoint
    }
}
