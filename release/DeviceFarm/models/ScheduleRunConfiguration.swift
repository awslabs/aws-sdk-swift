// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the settings for a run. Includes things like location, radio states,
///             auxiliary apps, and network profiles.</p>
public struct ScheduleRunConfiguration: Equatable {
    /// <p>A list of upload ARNs for app packages to be installed with your app.</p>
    public let auxiliaryApps: [String]?
    /// <p>Specifies the billing method for a test run: <code>metered</code> or
    ///                 <code>unmetered</code>. If the parameter is not specified, the default value is
    ///                 <code>metered</code>.</p>
    ///         <note>
    ///             <p>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code> to
    ///                 make use of them. Otherwise, your run counts against your metered time.</p>
    ///         </note>
    public let billingMethod: BillingMethod?
    /// <p>Input <code>CustomerArtifactPaths</code> object for the scheduled run
    ///             configuration.</p>
    public let customerArtifactPaths: CustomerArtifactPaths?
    /// <p>The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to
    ///             external data for Android or the app's sandbox for iOS.</p>
    public let extraDataPackageArn: String?
    /// <p>Information about the locale that is used for the run.</p>
    public let locale: String?
    /// <p>Information about the location that is used for the run.</p>
    public let location: Location?
    /// <p>Reserved for internal use.</p>
    public let networkProfileArn: String?
    /// <p>Information about the radio states for the run.</p>
    public let radios: Radios?
    /// <p>An array of ARNs for your VPC endpoint configurations.</p>
    public let vpceConfigurationArns: [String]?

    public init (
        auxiliaryApps: [String]? = nil,
        billingMethod: BillingMethod? = nil,
        customerArtifactPaths: CustomerArtifactPaths? = nil,
        extraDataPackageArn: String? = nil,
        locale: String? = nil,
        location: Location? = nil,
        networkProfileArn: String? = nil,
        radios: Radios? = nil,
        vpceConfigurationArns: [String]? = nil
    )
    {
        self.auxiliaryApps = auxiliaryApps
        self.billingMethod = billingMethod
        self.customerArtifactPaths = customerArtifactPaths
        self.extraDataPackageArn = extraDataPackageArn
        self.locale = locale
        self.location = location
        self.networkProfileArn = networkProfileArn
        self.radios = radios
        self.vpceConfigurationArns = vpceConfigurationArns
    }
}
