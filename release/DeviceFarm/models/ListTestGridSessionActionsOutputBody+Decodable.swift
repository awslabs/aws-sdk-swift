// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTestGridSessionActionsOutputBody: Equatable {
    public let actions: [TestGridSessionAction]?
    public let nextToken: String?
}

extension ListTestGridSessionActionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actions
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionsContainer = try containerValues.decodeIfPresent([TestGridSessionAction].self, forKey: .actions)
        var actionsDecoded0:[TestGridSessionAction]? = nil
        if let actionsContainer = actionsContainer {
            actionsDecoded0 = [TestGridSessionAction]()
            for structure0 in actionsContainer {
                actionsDecoded0?.append(structure0)
            }
        }
        actions = actionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
