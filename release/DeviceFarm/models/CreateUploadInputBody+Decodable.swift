// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateUploadInputBody: Equatable {
    public let projectArn: String?
    public let name: String?
    public let type: UploadType?
    public let contentType: String?
}

extension CreateUploadInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contentType
        case name
        case projectArn
        case type
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(UploadType.self, forKey: .type)
        type = typeDecoded
        let contentTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contentType)
        contentType = contentTypeDecoded
    }
}
