// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DeviceFilterAttribute {
    case arn
    case availability
    case fleetType
    case formFactor
    case instanceArn
    case instanceLabels
    case manufacturer
    case model
    case osVersion
    case platform
    case remoteAccessEnabled
    case remoteDebugEnabled
    case sdkUnknown(String)
}

extension DeviceFilterAttribute : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeviceFilterAttribute] {
        return [
            .arn,
            .availability,
            .fleetType,
            .formFactor,
            .instanceArn,
            .instanceLabels,
            .manufacturer,
            .model,
            .osVersion,
            .platform,
            .remoteAccessEnabled,
            .remoteDebugEnabled,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .arn: return "ARN"
        case .availability: return "AVAILABILITY"
        case .fleetType: return "FLEET_TYPE"
        case .formFactor: return "FORM_FACTOR"
        case .instanceArn: return "INSTANCE_ARN"
        case .instanceLabels: return "INSTANCE_LABELS"
        case .manufacturer: return "MANUFACTURER"
        case .model: return "MODEL"
        case .osVersion: return "OS_VERSION"
        case .platform: return "PLATFORM"
        case .remoteAccessEnabled: return "REMOTE_ACCESS_ENABLED"
        case .remoteDebugEnabled: return "REMOTE_DEBUG_ENABLED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeviceFilterAttribute(rawValue: rawValue) ?? DeviceFilterAttribute.sdkUnknown(rawValue)
    }
}
