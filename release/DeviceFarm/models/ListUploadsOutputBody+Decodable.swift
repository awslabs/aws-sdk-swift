// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUploadsOutputBody: Equatable {
    public let uploads: [Upload]?
    public let nextToken: String?
}

extension ListUploadsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case uploads
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let uploadsContainer = try containerValues.decodeIfPresent([Upload].self, forKey: .uploads)
        var uploadsDecoded0:[Upload]? = nil
        if let uploadsContainer = uploadsContainer {
            uploadsDecoded0 = [Upload]()
            for structure0 in uploadsContainer {
                uploadsDecoded0?.append(structure0)
            }
        }
        uploads = uploadsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
