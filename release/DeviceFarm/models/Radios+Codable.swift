// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Radios: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bluetooth
        case gps
        case nfc
        case wifi
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bluetooth = bluetooth {
            try encodeContainer.encode(bluetooth, forKey: .bluetooth)
        }
        if let gps = gps {
            try encodeContainer.encode(gps, forKey: .gps)
        }
        if let nfc = nfc {
            try encodeContainer.encode(nfc, forKey: .nfc)
        }
        if let wifi = wifi {
            try encodeContainer.encode(wifi, forKey: .wifi)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let wifiDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .wifi)
        wifi = wifiDecoded
        let bluetoothDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .bluetooth)
        bluetooth = bluetoothDecoded
        let nfcDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .nfc)
        nfc = nfcDecoded
        let gpsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .gps)
        gps = gpsDecoded
    }
}
