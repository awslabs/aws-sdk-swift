// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountRolesOutputBody: Equatable {
    public let nextToken: String?
    public let roleList: [RoleInfo]?
}

extension ListAccountRolesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case roleList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let roleListContainer = try containerValues.decodeIfPresent([RoleInfo].self, forKey: .roleList)
        var roleListDecoded0:[RoleInfo]? = nil
        if let roleListContainer = roleListContainer {
            roleListDecoded0 = [RoleInfo]()
            for structure0 in roleListContainer {
                roleListDecoded0?.append(structure0)
            }
        }
        roleList = roleListDecoded0
    }
}
