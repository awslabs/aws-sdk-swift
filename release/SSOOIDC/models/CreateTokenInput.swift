// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateTokenInput: Equatable {
    /// <p>The unique identifier string for each client. This value should come from the persisted result of the <a>RegisterClient</a> API.</p>
    public let clientId: String?
    /// <p>A secret string generated for the client. This value should come from the persisted result of the <a>RegisterClient</a> API.</p>
    public let clientSecret: String?
    /// <p>The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.</p>
    public let code: String?
    /// <p>Used only when calling this API for the device code grant type. This short-term code is
    ///       used to identify this authentication attempt. This should come from an in-memory reference to
    ///       the result of the <a>StartDeviceAuthorization</a> API.</p>
    public let deviceCode: String?
    /// <p>Supports grant types for authorization code, refresh token, and device code request.</p>
    public let grantType: String?
    /// <p>The location of the application that will receive the authorization code. Users authorize
    ///       the service to send the request to this location.</p>
    public let redirectUri: String?
    /// <p>The token used to obtain an access token in the event that the access token is invalid or expired. This token is not issued by the service.</p>
    public let refreshToken: String?
    /// <p>The list of scopes that is defined by the client. Upon authorization, this list is used to
    ///       restrict permissions when granting an access token.</p>
    public let scope: [String]?

    public init (
        clientId: String? = nil,
        clientSecret: String? = nil,
        code: String? = nil,
        deviceCode: String? = nil,
        grantType: String? = nil,
        redirectUri: String? = nil,
        refreshToken: String? = nil,
        scope: [String]? = nil
    )
    {
        self.clientId = clientId
        self.clientSecret = clientSecret
        self.code = code
        self.deviceCode = deviceCode
        self.grantType = grantType
        self.redirectUri = redirectUri
        self.refreshToken = refreshToken
        self.scope = scope
    }
}
