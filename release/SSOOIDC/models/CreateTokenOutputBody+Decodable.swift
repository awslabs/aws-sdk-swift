// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTokenOutputBody: Equatable {
    public let accessToken: String?
    public let tokenType: String?
    public let expiresIn: Int
    public let refreshToken: String?
    public let idToken: String?
}

extension CreateTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessToken
        case expiresIn
        case idToken
        case refreshToken
        case tokenType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let tokenTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tokenType)
        tokenType = tokenTypeDecoded
        let expiresInDecoded = try containerValues.decode(Int.self, forKey: .expiresIn)
        expiresIn = expiresInDecoded
        let refreshTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .refreshToken)
        refreshToken = refreshTokenDecoded
        let idTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .idToken)
        idToken = idTokenDecoded
    }
}
