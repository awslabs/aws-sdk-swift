// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterClientInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientName
        case clientType
        case scopes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientName = clientName {
            try encodeContainer.encode(clientName, forKey: .clientName)
        }
        if let clientType = clientType {
            try encodeContainer.encode(clientType, forKey: .clientType)
        }
        if let scopes = scopes {
            var scopesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scopes)
            for scopes0 in scopes {
                try scopesContainer.encode(scopes0)
            }
        }
    }
}
