// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFindingStatisticsOutputBody: Equatable {
    public let countsByGroup: [GroupCount]?
}

extension GetFindingStatisticsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case countsByGroup = "countsByGroup"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let countsByGroupContainer = try containerValues.decodeIfPresent([GroupCount].self, forKey: .countsByGroup)
        var countsByGroupDecoded0:[GroupCount]? = nil
        if let countsByGroupContainer = countsByGroupContainer {
            countsByGroupDecoded0 = [GroupCount]()
            for structure0 in countsByGroupContainer {
                countsByGroupDecoded0?.append(structure0)
            }
        }
        countsByGroup = countsByGroupDecoded0
    }
}
