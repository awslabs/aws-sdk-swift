// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMemberOutputBody: Equatable {
    public let accountId: String?
    public let administratorAccountId: String?
    public let arn: String?
    public let email: String?
    public let invitedAt: Date?
    public let masterAccountId: String?
    public let relationshipStatus: RelationshipStatus?
    public let tags: [String:String]?
    public let updatedAt: Date?
}

extension GetMemberOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountId = "accountId"
        case administratorAccountId = "administratorAccountId"
        case arn = "arn"
        case email = "email"
        case invitedAt = "invitedAt"
        case masterAccountId = "masterAccountId"
        case relationshipStatus = "relationshipStatus"
        case tags = "tags"
        case updatedAt = "updatedAt"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let administratorAccountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .administratorAccountId)
        administratorAccountId = administratorAccountIdDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let emailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .email)
        email = emailDecoded
        let invitedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .invitedAt)
        invitedAt = invitedAtDecoded
        let masterAccountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .masterAccountId)
        masterAccountId = masterAccountIdDecoded
        let relationshipStatusDecoded = try containerValues.decodeIfPresent(RelationshipStatus.self, forKey: .relationshipStatus)
        relationshipStatus = relationshipStatusDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, __string0) in tagsContainer {
                tagsDecoded0?[key0] = __string0
            }
        }
        tags = tagsDecoded0
        let updatedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
