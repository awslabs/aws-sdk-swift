// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SearchResourcesTagCriterion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case comparator = "comparator"
        case tagValues = "tagValues"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let comparator = comparator {
            try encodeContainer.encode(comparator.rawValue, forKey: .comparator)
        }
        if let tagValues = tagValues {
            var tagValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tagValues)
            for __listofsearchresourcestagcriterionpair0 in tagValues {
                try tagValuesContainer.encode(__listofsearchresourcestagcriterionpair0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let comparatorDecoded = try containerValues.decodeIfPresent(SearchResourcesComparator.self, forKey: .comparator)
        comparator = comparatorDecoded
        let tagValuesContainer = try containerValues.decodeIfPresent([SearchResourcesTagCriterionPair].self, forKey: .tagValues)
        var tagValuesDecoded0:[SearchResourcesTagCriterionPair]? = nil
        if let tagValuesContainer = tagValuesContainer {
            tagValuesDecoded0 = [SearchResourcesTagCriterionPair]()
            for structure0 in tagValuesContainer {
                tagValuesDecoded0?.append(structure0)
            }
        }
        tagValues = tagValuesDecoded0
    }
}
