// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides statistical data and other information about an S3 bucket that Amazon Macie monitors and analyzes.</p>
public struct MatchingBucket: Equatable {
    /// <p>The unique identifier for the AWS account that owns the bucket.</p>
    public let accountId: String?
    /// <p>The name of the bucket.</p>
    public let bucketName: String?
    /// <p>The total number of objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format.</p>
    public let classifiableObjectCount: Int
    /// <p>The total storage size, in bytes, of the objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format.</p><p>If versioning is enabled for the bucket, Macie calculates this value based on the size of the latest version of each applicable object in the bucket. This value doesn't reflect the storage size of all versions of each applicable object in the bucket.</p>
    public let classifiableSizeInBytes: Int
    /// <p>Specifies whether any one-time or recurring classification jobs are configured to analyze objects in the bucket, and, if so, the details of the job that ran most recently.</p>
    public let jobDetails: JobDetails?
    /// <p>The total number of objects in the bucket.</p>
    public let objectCount: Int
    /// <p>The total number of objects that are in the bucket, grouped by server-side encryption type. This includes a grouping that reports the total number of objects that aren't encrypted or use client-side encryption.</p>
    public let objectCountByEncryptionType: ObjectCountByEncryptionType?
    /// <p>The total storage size, in bytes, of the bucket.</p><p>If versioning is enabled for the bucket, Amazon Macie calculates this value based on the size of the latest version of each object in the bucket. This value doesn't reflect the storage size of all versions of each object in the bucket.</p>
    public let sizeInBytes: Int
    /// <p>The total storage size, in bytes, of the objects that are compressed (.gz, .gzip, .zip) files in the bucket.</p><p>If versioning is enabled for the bucket, Macie calculates this value based on the size of the latest version of each applicable object in the bucket. This value doesn't reflect the storage size of all versions of each applicable object in the bucket.</p>
    public let sizeInBytesCompressed: Int
    /// <p>The total number of objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format.</p>
    public let unclassifiableObjectCount: ObjectLevelStatistics?
    /// <p>The total storage size, in bytes, of the objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format.</p>
    public let unclassifiableObjectSizeInBytes: ObjectLevelStatistics?

    public init (
        accountId: String? = nil,
        bucketName: String? = nil,
        classifiableObjectCount: Int = 0,
        classifiableSizeInBytes: Int = 0,
        jobDetails: JobDetails? = nil,
        objectCount: Int = 0,
        objectCountByEncryptionType: ObjectCountByEncryptionType? = nil,
        sizeInBytes: Int = 0,
        sizeInBytesCompressed: Int = 0,
        unclassifiableObjectCount: ObjectLevelStatistics? = nil,
        unclassifiableObjectSizeInBytes: ObjectLevelStatistics? = nil
    )
    {
        self.accountId = accountId
        self.bucketName = bucketName
        self.classifiableObjectCount = classifiableObjectCount
        self.classifiableSizeInBytes = classifiableSizeInBytes
        self.jobDetails = jobDetails
        self.objectCount = objectCount
        self.objectCountByEncryptionType = objectCountByEncryptionType
        self.sizeInBytes = sizeInBytes
        self.sizeInBytesCompressed = sizeInBytesCompressed
        self.unclassifiableObjectCount = unclassifiableObjectCount
        self.unclassifiableObjectSizeInBytes = unclassifiableObjectSizeInBytes
    }
}
