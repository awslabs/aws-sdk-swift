// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableMacieInputBody: Equatable {
    public let clientToken: String?
    public let findingPublishingFrequency: FindingPublishingFrequency?
    public let status: MacieStatus?
}

extension EnableMacieInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken = "clientToken"
        case findingPublishingFrequency = "findingPublishingFrequency"
        case status = "status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let findingPublishingFrequencyDecoded = try containerValues.decodeIfPresent(FindingPublishingFrequency.self, forKey: .findingPublishingFrequency)
        findingPublishingFrequency = findingPublishingFrequencyDecoded
        let statusDecoded = try containerValues.decodeIfPresent(MacieStatus.self, forKey: .status)
        status = statusDecoded
    }
}
