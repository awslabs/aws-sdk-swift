// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchResourcesOutputBody: Equatable {
    public let matchingResources: [MatchingResource]?
    public let nextToken: String?
}

extension SearchResourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case matchingResources = "matchingResources"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let matchingResourcesContainer = try containerValues.decodeIfPresent([MatchingResource].self, forKey: .matchingResources)
        var matchingResourcesDecoded0:[MatchingResource]? = nil
        if let matchingResourcesContainer = matchingResourcesContainer {
            matchingResourcesDecoded0 = [MatchingResource]()
            for structure0 in matchingResourcesContainer {
                matchingResourcesDecoded0?.append(structure0)
            }
        }
        matchingResources = matchingResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
