// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Statistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approximateNumberOfObjectsToProcess = "approximateNumberOfObjectsToProcess"
        case numberOfRuns = "numberOfRuns"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if approximateNumberOfObjectsToProcess != 0.0 {
            try encodeContainer.encode(approximateNumberOfObjectsToProcess, forKey: .approximateNumberOfObjectsToProcess)
        }
        if numberOfRuns != 0.0 {
            try encodeContainer.encode(numberOfRuns, forKey: .numberOfRuns)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let approximateNumberOfObjectsToProcessDecoded = try containerValues.decode(Double.self, forKey: .approximateNumberOfObjectsToProcess)
        approximateNumberOfObjectsToProcess = approximateNumberOfObjectsToProcessDecoded
        let numberOfRunsDecoded = try containerValues.decode(Double.self, forKey: .numberOfRuns)
        numberOfRuns = numberOfRunsDecoded
    }
}
