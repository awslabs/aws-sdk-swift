// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UsageStatisticsSortBy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case key = "key"
        case orderBy = "orderBy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let key = key {
            try encodeContainer.encode(key.rawValue, forKey: .key)
        }
        if let orderBy = orderBy {
            try encodeContainer.encode(orderBy.rawValue, forKey: .orderBy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyDecoded = try containerValues.decodeIfPresent(UsageStatisticsSortKey.self, forKey: .key)
        key = keyDecoded
        let orderByDecoded = try containerValues.decodeIfPresent(OrderBy.self, forKey: .orderBy)
        orderBy = orderByDecoded
    }
}
