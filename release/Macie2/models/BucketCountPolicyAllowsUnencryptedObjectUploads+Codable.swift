// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BucketCountPolicyAllowsUnencryptedObjectUploads: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case allowsUnencryptedObjectUploads = "allowsUnencryptedObjectUploads"
        case deniesUnencryptedObjectUploads = "deniesUnencryptedObjectUploads"
        case unknown = "unknown"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if allowsUnencryptedObjectUploads != 0 {
            try encodeContainer.encode(allowsUnencryptedObjectUploads, forKey: .allowsUnencryptedObjectUploads)
        }
        if deniesUnencryptedObjectUploads != 0 {
            try encodeContainer.encode(deniesUnencryptedObjectUploads, forKey: .deniesUnencryptedObjectUploads)
        }
        if unknown != 0 {
            try encodeContainer.encode(unknown, forKey: .unknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let allowsUnencryptedObjectUploadsDecoded = try containerValues.decode(Int.self, forKey: .allowsUnencryptedObjectUploads)
        allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploadsDecoded
        let deniesUnencryptedObjectUploadsDecoded = try containerValues.decode(Int.self, forKey: .deniesUnencryptedObjectUploads)
        deniesUnencryptedObjectUploads = deniesUnencryptedObjectUploadsDecoded
        let unknownDecoded = try containerValues.decode(Int.self, forKey: .unknown)
        unknown = unknownDecoded
    }
}
