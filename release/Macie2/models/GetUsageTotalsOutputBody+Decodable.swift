// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageTotalsOutputBody: Equatable {
    public let timeRange: TimeRange?
    public let usageTotals: [UsageTotal]?
}

extension GetUsageTotalsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case timeRange = "timeRange"
        case usageTotals = "usageTotals"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeRangeDecoded = try containerValues.decodeIfPresent(TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
        let usageTotalsContainer = try containerValues.decodeIfPresent([UsageTotal].self, forKey: .usageTotals)
        var usageTotalsDecoded0:[UsageTotal]? = nil
        if let usageTotalsContainer = usageTotalsContainer {
            usageTotalsDecoded0 = [UsageTotal]()
            for structure0 in usageTotalsContainer {
                usageTotalsDecoded0?.append(structure0)
            }
        }
        usageTotals = usageTotalsDecoded0
    }
}
