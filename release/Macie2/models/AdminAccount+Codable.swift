// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AdminAccount: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId = "accountId"
        case status = "status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(AdminStatus.self, forKey: .status)
        status = statusDecoded
    }
}
