// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum GroupBy {
    case classificationdetailsJobid
    case resourcesaffectedS3bucketName
    case severityDescription
    case type
    case sdkUnknown(String)
}

extension GroupBy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [GroupBy] {
        return [
            .classificationdetailsJobid,
            .resourcesaffectedS3bucketName,
            .severityDescription,
            .type,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .classificationdetailsJobid: return "classificationDetails.jobId"
        case .resourcesaffectedS3bucketName: return "resourcesAffected.s3Bucket.name"
        case .severityDescription: return "severity.description"
        case .type: return "type"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = GroupBy(rawValue: rawValue) ?? GroupBy.sdkUnknown(rawValue)
    }
}
