// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information about an S3 bucket that Amazon Macie monitors and analyzes.</p>
public struct BucketMetadata: Equatable {
    /// <p>The unique identifier for the AWS account that owns the bucket.</p>
    public let accountId: String?
    /// <p>Specifies whether the bucket policy for the bucket requires server-side encryption of objects when objects are uploaded to the bucket. Possible values are:</p> <ul><li><p>FALSE - The bucket policy requires server-side encryption of new objects. PutObject requests must include the x-amz-server-side-encryption header and the value for that header must be AES256 or aws:kms.</p></li> <li><p>TRUE - The bucket doesn't have a bucket policy or it has a bucket policy that doesn't require server-side encryption of new objects. If a bucket policy exists, it doesn't require PutObject requests to include the x-amz-server-side-encryption header and it doesn't require the value for that header to be AES256 or aws:kms.</p></li> <li><p>UNKNOWN - Amazon Macie can't determine whether the bucket policy requires server-side encryption of new objects.</p></li></ul>
    public let allowsUnencryptedObjectUploads: AllowsUnencryptedObjectUploads?
    /// <p>The Amazon Resource Name (ARN) of the bucket.</p>
    public let bucketArn: String?
    /// <p>The date and time, in UTC and extended ISO 8601 format, when the bucket was created.</p>
    public let bucketCreatedAt: Date?
    /// <p>The name of the bucket.</p>
    public let bucketName: String?
    /// <p>The total number of objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format.</p>
    public let classifiableObjectCount: Int
    /// <p>The total storage size, in bytes, of the objects that Amazon Macie can analyze in the bucket. These objects use a supported storage class and have a file name extension for a supported file or storage format.</p> <p>If versioning is enabled for the bucket, Macie calculates this value based on the size of the latest version of each applicable object in the bucket. This value doesn't reflect the storage size of all versions of each applicable object in the bucket.</p>
    public let classifiableSizeInBytes: Int
    /// <p>Specifies whether any one-time or recurring classification jobs are configured to analyze data in the bucket, and, if so, the details of the job that ran most recently.</p>
    public let jobDetails: JobDetails?
    /// <p>The date and time, in UTC and extended ISO 8601 format, when Amazon Macie most recently retrieved both bucket and object metadata from Amazon S3 for the bucket.</p>
    public let lastUpdated: Date?
    /// <p>The total number of objects in the bucket.</p>
    public let objectCount: Int
    /// <p>The total number of objects that are in the bucket, grouped by server-side encryption type. This includes a grouping that reports the total number of objects that aren't encrypted or use client-side encryption.</p>
    public let objectCountByEncryptionType: ObjectCountByEncryptionType?
    /// <p>Specifies whether the bucket is publicly accessible due to the combination of permissions settings that apply to the bucket, and provides information about those settings.</p>
    public let publicAccess: BucketPublicAccess?
    /// <p>The AWS Region that hosts the bucket.</p>
    public let region: String?
    /// <p>Specifies whether the bucket is configured to replicate one or more objects to buckets for other AWS accounts and, if so, which accounts.</p>
    public let replicationDetails: ReplicationDetails?
    /// <p>Specifies whether the bucket encrypts new objects by default and, if so, the type of server-side encryption that's used.</p>
    public let serverSideEncryption: BucketServerSideEncryption?
    /// <p>Specifies whether the bucket is shared with another AWS account. Possible values are:</p> <ul><li><p>EXTERNAL - The bucket is shared with an AWS account that isn't part of the same Amazon Macie organization.</p></li> <li><p>INTERNAL - The bucket is shared with an AWS account that's part of the same Amazon Macie organization.</p></li> <li><p>NOT_SHARED - The bucket isn't shared with other AWS accounts.</p></li> <li><p>UNKNOWN - Amazon Macie wasn't able to evaluate the shared access settings for the bucket.</p></li></ul>
    public let sharedAccess: SharedAccess?
    /// <p>The total storage size, in bytes, of the bucket.</p> <p>If versioning is enabled for the bucket, Amazon Macie calculates this value based on the size of the latest version of each object in the bucket. This value doesn't reflect the storage size of all versions of each object in the bucket.</p>
    public let sizeInBytes: Int
    /// <p>The total storage size, in bytes, of the objects that are compressed (.gz, .gzip, .zip) files in the bucket.</p> <p>If versioning is enabled for the bucket, Macie calculates this value based on the size of the latest version of each applicable object in the bucket. This value doesn't reflect the storage size of all versions of each applicable object in the bucket.</p>
    public let sizeInBytesCompressed: Int
    /// <p>An array that specifies the tags (keys and values) that are associated with the bucket.</p>
    public let tags: [KeyValuePair]?
    /// <p>The total number of objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format.</p>
    public let unclassifiableObjectCount: ObjectLevelStatistics?
    /// <p>The total storage size, in bytes, of the objects that Amazon Macie can't analyze in the bucket. These objects don't use a supported storage class or don't have a file name extension for a supported file or storage format.</p>
    public let unclassifiableObjectSizeInBytes: ObjectLevelStatistics?
    /// <p>Specifies whether versioning is enabled for the bucket.</p>
    public let versioning: Bool

    public init (
        accountId: String? = nil,
        allowsUnencryptedObjectUploads: AllowsUnencryptedObjectUploads? = nil,
        bucketArn: String? = nil,
        bucketCreatedAt: Date? = nil,
        bucketName: String? = nil,
        classifiableObjectCount: Int = 0,
        classifiableSizeInBytes: Int = 0,
        jobDetails: JobDetails? = nil,
        lastUpdated: Date? = nil,
        objectCount: Int = 0,
        objectCountByEncryptionType: ObjectCountByEncryptionType? = nil,
        publicAccess: BucketPublicAccess? = nil,
        region: String? = nil,
        replicationDetails: ReplicationDetails? = nil,
        serverSideEncryption: BucketServerSideEncryption? = nil,
        sharedAccess: SharedAccess? = nil,
        sizeInBytes: Int = 0,
        sizeInBytesCompressed: Int = 0,
        tags: [KeyValuePair]? = nil,
        unclassifiableObjectCount: ObjectLevelStatistics? = nil,
        unclassifiableObjectSizeInBytes: ObjectLevelStatistics? = nil,
        versioning: Bool = false
    )
    {
        self.accountId = accountId
        self.allowsUnencryptedObjectUploads = allowsUnencryptedObjectUploads
        self.bucketArn = bucketArn
        self.bucketCreatedAt = bucketCreatedAt
        self.bucketName = bucketName
        self.classifiableObjectCount = classifiableObjectCount
        self.classifiableSizeInBytes = classifiableSizeInBytes
        self.jobDetails = jobDetails
        self.lastUpdated = lastUpdated
        self.objectCount = objectCount
        self.objectCountByEncryptionType = objectCountByEncryptionType
        self.publicAccess = publicAccess
        self.region = region
        self.replicationDetails = replicationDetails
        self.serverSideEncryption = serverSideEncryption
        self.sharedAccess = sharedAccess
        self.sizeInBytes = sizeInBytes
        self.sizeInBytesCompressed = sizeInBytesCompressed
        self.tags = tags
        self.unclassifiableObjectCount = unclassifiableObjectCount
        self.unclassifiableObjectSizeInBytes = unclassifiableObjectSizeInBytes
        self.versioning = versioning
    }
}
