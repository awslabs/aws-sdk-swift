// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetUsageStatisticsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filterBy = "filterBy"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
        case sortBy = "sortBy"
        case timeRange = "timeRange"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterBy = filterBy {
            var filterByContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filterBy)
            for __listofusagestatisticsfilter0 in filterBy {
                try filterByContainer.encode(__listofusagestatisticsfilter0)
            }
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let sortBy = sortBy {
            try encodeContainer.encode(sortBy, forKey: .sortBy)
        }
        if let timeRange = timeRange {
            try encodeContainer.encode(timeRange.rawValue, forKey: .timeRange)
        }
    }
}
