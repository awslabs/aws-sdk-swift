// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageStatisticsInputBody: Equatable {
    public let filterBy: [UsageStatisticsFilter]?
    public let maxResults: Int
    public let nextToken: String?
    public let sortBy: UsageStatisticsSortBy?
    public let timeRange: TimeRange?
}

extension GetUsageStatisticsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filterBy = "filterBy"
        case maxResults = "maxResults"
        case nextToken = "nextToken"
        case sortBy = "sortBy"
        case timeRange = "timeRange"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterByContainer = try containerValues.decodeIfPresent([UsageStatisticsFilter].self, forKey: .filterBy)
        var filterByDecoded0:[UsageStatisticsFilter]? = nil
        if let filterByContainer = filterByContainer {
            filterByDecoded0 = [UsageStatisticsFilter]()
            for structure0 in filterByContainer {
                filterByDecoded0?.append(structure0)
            }
        }
        filterBy = filterByDecoded0
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(UsageStatisticsSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let timeRangeDecoded = try containerValues.decodeIfPresent(TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
    }
}
