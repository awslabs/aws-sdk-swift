// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The qualitative representation of the finding's severity. Possible values are:</p>
public enum SeverityDescription {
    case high
    case low
    case medium
    case sdkUnknown(String)
}

extension SeverityDescription : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SeverityDescription] {
        return [
            .high,
            .low,
            .medium,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .high: return "High"
        case .low: return "Low"
        case .medium: return "Medium"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SeverityDescription(rawValue: rawValue) ?? SeverityDescription.sdkUnknown(rawValue)
    }
}
