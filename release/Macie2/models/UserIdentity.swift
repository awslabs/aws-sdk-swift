// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about the type and other characteristics of an entity that performed an action on an affected resource.</p>
public struct UserIdentity: Equatable {
    /// <p>If the action was performed with temporary security credentials that were obtained using the AssumeRole operation of the AWS Security Token Service (AWS STS) API, the identifiers, session context, and other details about the identity.</p>
    public let assumedRole: AssumedRole?
    /// <p>If the action was performed using the credentials for another AWS account, the details of that account.</p>
    public let awsAccount: AwsAccount?
    /// <p>If the action was performed by an AWS account that belongs to an AWS service, the name of the service.</p>
    public let awsService: AwsService?
    /// <p>If the action was performed with temporary security credentials that were obtained using the GetFederationToken operation of the AWS Security Token Service (AWS STS) API, the identifiers, session context, and other details about the identity.</p>
    public let federatedUser: FederatedUser?
    /// <p>If the action was performed using the credentials for an AWS Identity and Access Management (IAM) user, the name and other details about the user.</p>
    public let iamUser: IamUser?
    /// <p>If the action was performed using the credentials for your AWS account, the details of your account.</p>
    public let root: UserIdentityRoot?
    /// <p>The type of entity that performed the action.</p>
    public let type: UserIdentityType?

    public init (
        assumedRole: AssumedRole? = nil,
        awsAccount: AwsAccount? = nil,
        awsService: AwsService? = nil,
        federatedUser: FederatedUser? = nil,
        iamUser: IamUser? = nil,
        root: UserIdentityRoot? = nil,
        type: UserIdentityType? = nil
    )
    {
        self.assumedRole = assumedRole
        self.awsAccount = awsAccount
        self.awsService = awsService
        self.federatedUser = federatedUser
        self.iamUser = iamUser
        self.root = root
        self.type = type
    }
}
