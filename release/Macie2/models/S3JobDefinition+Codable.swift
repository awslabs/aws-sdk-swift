// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3JobDefinition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bucketCriteria = "bucketCriteria"
        case bucketDefinitions = "bucketDefinitions"
        case scoping = "scoping"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bucketCriteria = bucketCriteria {
            try encodeContainer.encode(bucketCriteria, forKey: .bucketCriteria)
        }
        if let bucketDefinitions = bucketDefinitions {
            var bucketDefinitionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .bucketDefinitions)
            for __listofs3bucketdefinitionforjob0 in bucketDefinitions {
                try bucketDefinitionsContainer.encode(__listofs3bucketdefinitionforjob0)
            }
        }
        if let scoping = scoping {
            try encodeContainer.encode(scoping, forKey: .scoping)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketDefinitionsContainer = try containerValues.decodeIfPresent([S3BucketDefinitionForJob].self, forKey: .bucketDefinitions)
        var bucketDefinitionsDecoded0:[S3BucketDefinitionForJob]? = nil
        if let bucketDefinitionsContainer = bucketDefinitionsContainer {
            bucketDefinitionsDecoded0 = [S3BucketDefinitionForJob]()
            for structure0 in bucketDefinitionsContainer {
                bucketDefinitionsDecoded0?.append(structure0)
            }
        }
        bucketDefinitions = bucketDefinitionsDecoded0
        let scopingDecoded = try containerValues.decodeIfPresent(Scoping.self, forKey: .scoping)
        scoping = scopingDecoded
        let bucketCriteriaDecoded = try containerValues.decodeIfPresent(S3BucketCriteriaForJob.self, forKey: .bucketCriteria)
        bucketCriteria = bucketCriteriaDecoded
    }
}
