// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateInvitationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountIds = "accountIds"
        case disableEmailNotification = "disableEmailNotification"
        case message = "message"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountIds = accountIds {
            var accountIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accountIds)
            for __listof__string0 in accountIds {
                try accountIdsContainer.encode(__listof__string0)
            }
        }
        if disableEmailNotification != false {
            try encodeContainer.encode(disableEmailNotification, forKey: .disableEmailNotification)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
    }
}
