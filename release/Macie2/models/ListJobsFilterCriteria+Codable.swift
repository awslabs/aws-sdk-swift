// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListJobsFilterCriteria: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case excludes = "excludes"
        case includes = "includes"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludes = excludes {
            var excludesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludes)
            for __listoflistjobsfilterterm0 in excludes {
                try excludesContainer.encode(__listoflistjobsfilterterm0)
            }
        }
        if let includes = includes {
            var includesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .includes)
            for __listoflistjobsfilterterm0 in includes {
                try includesContainer.encode(__listoflistjobsfilterterm0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let excludesContainer = try containerValues.decodeIfPresent([ListJobsFilterTerm].self, forKey: .excludes)
        var excludesDecoded0:[ListJobsFilterTerm]? = nil
        if let excludesContainer = excludesContainer {
            excludesDecoded0 = [ListJobsFilterTerm]()
            for structure0 in excludesContainer {
                excludesDecoded0?.append(structure0)
            }
        }
        excludes = excludesDecoded0
        let includesContainer = try containerValues.decodeIfPresent([ListJobsFilterTerm].self, forKey: .includes)
        var includesDecoded0:[ListJobsFilterTerm]? = nil
        if let includesContainer = includesContainer {
            includesDecoded0 = [ListJobsFilterTerm]()
            for structure0 in includesContainer {
                includesDecoded0?.append(structure0)
            }
        }
        includes = includesDecoded0
    }
}
