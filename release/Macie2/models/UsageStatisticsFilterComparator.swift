// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The operator to use in a condition that filters the results of a query for Amazon Macie account quotas and usage data. Valid values are:</p>
public enum UsageStatisticsFilterComparator {
    case contains
    case eq
    case gt
    case gte
    case lt
    case lte
    case ne
    case sdkUnknown(String)
}

extension UsageStatisticsFilterComparator : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UsageStatisticsFilterComparator] {
        return [
            .contains,
            .eq,
            .gt,
            .gte,
            .lt,
            .lte,
            .ne,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .contains: return "CONTAINS"
        case .eq: return "EQ"
        case .gt: return "GT"
        case .gte: return "GTE"
        case .lt: return "LT"
        case .lte: return "LTE"
        case .ne: return "NE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UsageStatisticsFilterComparator(rawValue: rawValue) ?? UsageStatisticsFilterComparator.sdkUnknown(rawValue)
    }
}
