// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The type of finding. For details about each type, see <a href="https://docs.aws.amazon.com/macie/latest/user/findings-types.html">Types of Amazon Macie findings</a> in the <i>Amazon Macie User Guide</i>. Valid values are:</p>
public enum FindingType {
    case policyIamuserS3blockpublicaccessdisabled
    case policyIamuserS3bucketencryptiondisabled
    case policyIamuserS3bucketpublic
    case policyIamuserS3bucketreplicatedexternally
    case policyIamuserS3bucketsharedexternally
    case sensitivedataS3objectCredentials
    case sensitivedataS3objectCustomidentifier
    case sensitivedataS3objectFinancial
    case sensitivedataS3objectMultiple
    case sensitivedataS3objectPersonal
    case sdkUnknown(String)
}

extension FindingType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FindingType] {
        return [
            .policyIamuserS3blockpublicaccessdisabled,
            .policyIamuserS3bucketencryptiondisabled,
            .policyIamuserS3bucketpublic,
            .policyIamuserS3bucketreplicatedexternally,
            .policyIamuserS3bucketsharedexternally,
            .sensitivedataS3objectCredentials,
            .sensitivedataS3objectCustomidentifier,
            .sensitivedataS3objectFinancial,
            .sensitivedataS3objectMultiple,
            .sensitivedataS3objectPersonal,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .policyIamuserS3blockpublicaccessdisabled: return "Policy:IAMUser/S3BlockPublicAccessDisabled"
        case .policyIamuserS3bucketencryptiondisabled: return "Policy:IAMUser/S3BucketEncryptionDisabled"
        case .policyIamuserS3bucketpublic: return "Policy:IAMUser/S3BucketPublic"
        case .policyIamuserS3bucketreplicatedexternally: return "Policy:IAMUser/S3BucketReplicatedExternally"
        case .policyIamuserS3bucketsharedexternally: return "Policy:IAMUser/S3BucketSharedExternally"
        case .sensitivedataS3objectCredentials: return "SensitiveData:S3Object/Credentials"
        case .sensitivedataS3objectCustomidentifier: return "SensitiveData:S3Object/CustomIdentifier"
        case .sensitivedataS3objectFinancial: return "SensitiveData:S3Object/Financial"
        case .sensitivedataS3objectMultiple: return "SensitiveData:S3Object/Multiple"
        case .sensitivedataS3objectPersonal: return "SensitiveData:S3Object/Personal"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FindingType(rawValue: rawValue) ?? FindingType.sdkUnknown(rawValue)
    }
}
