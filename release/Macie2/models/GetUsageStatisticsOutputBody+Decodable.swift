// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUsageStatisticsOutputBody: Equatable {
    public let nextToken: String?
    public let records: [UsageRecord]?
    public let timeRange: TimeRange?
}

extension GetUsageStatisticsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case records = "records"
        case timeRange = "timeRange"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let recordsContainer = try containerValues.decodeIfPresent([UsageRecord].self, forKey: .records)
        var recordsDecoded0:[UsageRecord]? = nil
        if let recordsContainer = recordsContainer {
            recordsDecoded0 = [UsageRecord]()
            for structure0 in recordsContainer {
                recordsDecoded0?.append(structure0)
            }
        }
        records = recordsDecoded0
        let timeRangeDecoded = try containerValues.decodeIfPresent(TimeRange.self, forKey: .timeRange)
        timeRange = timeRangeDecoded
    }
}
