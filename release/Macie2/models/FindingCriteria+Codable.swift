// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FindingCriteria: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case criterion = "criterion"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let criterion = criterion {
            var criterionContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .criterion)
            for (dictKey0, criterion0) in criterion {
                try criterionContainer.encode(criterion0, forKey: Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let criterionContainer = try containerValues.decodeIfPresent([String:CriterionAdditionalProperties].self, forKey: .criterion)
        var criterionDecoded0: [String:CriterionAdditionalProperties]? = nil
        if let criterionContainer = criterionContainer {
            criterionDecoded0 = [String:CriterionAdditionalProperties]()
            for (key0, criterionadditionalproperties0) in criterionContainer {
                criterionDecoded0?[key0] = criterionadditionalproperties0
            }
        }
        criterion = criterionDecoded0
    }
}
