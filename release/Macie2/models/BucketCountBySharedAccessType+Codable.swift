// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BucketCountBySharedAccessType: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case external = "external"
        case `internal` = "internal"
        case notShared = "notShared"
        case unknown = "unknown"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if external != 0 {
            try encodeContainer.encode(external, forKey: .external)
        }
        if `internal` != 0 {
            try encodeContainer.encode(`internal`, forKey: .`internal`)
        }
        if notShared != 0 {
            try encodeContainer.encode(notShared, forKey: .notShared)
        }
        if unknown != 0 {
            try encodeContainer.encode(unknown, forKey: .unknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalDecoded = try containerValues.decode(Int.self, forKey: .external)
        external = externalDecoded
        let internalDecoded = try containerValues.decode(Int.self, forKey: .internal)
        `internal` = internalDecoded
        let notSharedDecoded = try containerValues.decode(Int.self, forKey: .notShared)
        notShared = notSharedDecoded
        let unknownDecoded = try containerValues.decode(Int.self, forKey: .unknown)
        unknown = unknownDecoded
    }
}
