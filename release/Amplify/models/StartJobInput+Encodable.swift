// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartJobInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case commitId
        case commitMessage
        case commitTime
        case jobId
        case jobReason
        case jobType
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commitId = commitId {
            try encodeContainer.encode(commitId, forKey: .commitId)
        }
        if let commitMessage = commitMessage {
            try encodeContainer.encode(commitMessage, forKey: .commitMessage)
        }
        if let commitTime = commitTime {
            try encodeContainer.encode(commitTime.timeIntervalSince1970, forKey: .commitTime)
        }
        if let jobId = jobId {
            try encodeContainer.encode(jobId, forKey: .jobId)
        }
        if let jobReason = jobReason {
            try encodeContainer.encode(jobReason, forKey: .jobReason)
        }
        if let jobType = jobType {
            try encodeContainer.encode(jobType.rawValue, forKey: .jobType)
        }
    }
}
