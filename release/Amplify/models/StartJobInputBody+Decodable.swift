// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartJobInputBody: Equatable {
    public let jobId: String?
    public let jobType: JobType?
    public let jobReason: String?
    public let commitId: String?
    public let commitMessage: String?
    public let commitTime: Date?
}

extension StartJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case commitId
        case commitMessage
        case commitTime
        case jobId
        case jobReason
        case jobType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let jobTypeDecoded = try containerValues.decodeIfPresent(JobType.self, forKey: .jobType)
        jobType = jobTypeDecoded
        let jobReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobReason)
        jobReason = jobReasonDecoded
        let commitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let commitMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commitMessage)
        commitMessage = commitMessageDecoded
        let commitTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .commitTime)
        commitTime = commitTimeDecoded
    }
}
