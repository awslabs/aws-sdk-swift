// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Artifact: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactFileName
        case artifactId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactFileName = artifactFileName {
            try encodeContainer.encode(artifactFileName, forKey: .artifactFileName)
        }
        if let artifactId = artifactId {
            try encodeContainer.encode(artifactId, forKey: .artifactId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactFileNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactFileName)
        artifactFileName = artifactFileNameDecoded
        let artifactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactId)
        artifactId = artifactIdDecoded
    }
}
