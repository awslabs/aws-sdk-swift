// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWebhooksOutputBody: Equatable {
    public let webhooks: [Webhook]?
    public let nextToken: String?
}

extension ListWebhooksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case webhooks
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let webhooksContainer = try containerValues.decodeIfPresent([Webhook].self, forKey: .webhooks)
        var webhooksDecoded0:[Webhook]? = nil
        if let webhooksContainer = webhooksContainer {
            webhooksDecoded0 = [Webhook]()
            for structure0 in webhooksContainer {
                webhooksDecoded0?.append(structure0)
            }
        }
        webhooks = webhooksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
