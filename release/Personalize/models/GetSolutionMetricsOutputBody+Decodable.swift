// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSolutionMetricsOutputBody: Equatable {
    public let solutionVersionArn: String?
    public let metrics: [String:Double]?
}

extension GetSolutionMetricsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metrics
        case solutionVersionArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let solutionVersionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .solutionVersionArn)
        solutionVersionArn = solutionVersionArnDecoded
        let metricsContainer = try containerValues.decodeIfPresent([String:Double].self, forKey: .metrics)
        var metricsDecoded0: [String:Double]? = nil
        if let metricsContainer = metricsContainer {
            metricsDecoded0 = [String:Double]()
            for (key0, metricvalue0) in metricsContainer {
                metricsDecoded0?[key0] = metricvalue0
            }
        }
        metrics = metricsDecoded0
    }
}
