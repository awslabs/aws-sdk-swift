// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecipesOutputBody: Equatable {
    public let recipes: [RecipeSummary]?
    public let nextToken: String?
}

extension ListRecipesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case recipes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recipesContainer = try containerValues.decodeIfPresent([RecipeSummary].self, forKey: .recipes)
        var recipesDecoded0:[RecipeSummary]? = nil
        if let recipesContainer = recipesContainer {
            recipesDecoded0 = [RecipeSummary]()
            for structure0 in recipesContainer {
                recipesDecoded0?.append(structure0)
            }
        }
        recipes = recipesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
