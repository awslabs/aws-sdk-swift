// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetImportJobsOutputBody: Equatable {
    public let datasetImportJobs: [DatasetImportJobSummary]?
    public let nextToken: String?
}

extension ListDatasetImportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetImportJobs
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetImportJobsContainer = try containerValues.decodeIfPresent([DatasetImportJobSummary].self, forKey: .datasetImportJobs)
        var datasetImportJobsDecoded0:[DatasetImportJobSummary]? = nil
        if let datasetImportJobsContainer = datasetImportJobsContainer {
            datasetImportJobsDecoded0 = [DatasetImportJobSummary]()
            for structure0 in datasetImportJobsContainer {
                datasetImportJobsDecoded0?.append(structure0)
            }
        }
        datasetImportJobs = datasetImportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
