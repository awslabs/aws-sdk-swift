// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetGroupsOutputBody: Equatable {
    public let datasetGroups: [DatasetGroupSummary]?
    public let nextToken: String?
}

extension ListDatasetGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetGroups
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetGroupsContainer = try containerValues.decodeIfPresent([DatasetGroupSummary].self, forKey: .datasetGroups)
        var datasetGroupsDecoded0:[DatasetGroupSummary]? = nil
        if let datasetGroupsContainer = datasetGroupsContainer {
            datasetGroupsDecoded0 = [DatasetGroupSummary]()
            for structure0 in datasetGroupsContainer {
                datasetGroupsDecoded0?.append(structure0)
            }
        }
        datasetGroups = datasetGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
