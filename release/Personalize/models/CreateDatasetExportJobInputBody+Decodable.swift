// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDatasetExportJobInputBody: Equatable {
    public let jobName: String?
    public let datasetArn: String?
    public let ingestionMode: IngestionMode?
    public let roleArn: String?
    public let jobOutput: DatasetExportJobOutput?
}

extension CreateDatasetExportJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetArn
        case ingestionMode
        case jobName
        case jobOutput
        case roleArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let datasetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetArn)
        datasetArn = datasetArnDecoded
        let ingestionModeDecoded = try containerValues.decodeIfPresent(IngestionMode.self, forKey: .ingestionMode)
        ingestionMode = ingestionModeDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let jobOutputDecoded = try containerValues.decodeIfPresent(DatasetExportJobOutput.self, forKey: .jobOutput)
        jobOutput = jobOutputDecoded
    }
}
