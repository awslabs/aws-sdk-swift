// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSolutionInputBody: Equatable {
    public let name: String?
    public let performHPO: Bool?
    public let performAutoML: Bool
    public let recipeArn: String?
    public let datasetGroupArn: String?
    public let eventType: String?
    public let solutionConfig: SolutionConfig?
}

extension CreateSolutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetGroupArn
        case eventType
        case name
        case performAutoML
        case performHPO
        case recipeArn
        case solutionConfig
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let performHPODecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .performHPO)
        performHPO = performHPODecoded
        let performAutoMLDecoded = try containerValues.decode(Bool.self, forKey: .performAutoML)
        performAutoML = performAutoMLDecoded
        let recipeArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recipeArn)
        recipeArn = recipeArnDecoded
        let datasetGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetGroupArn)
        datasetGroupArn = datasetGroupArnDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let solutionConfigDecoded = try containerValues.decodeIfPresent(SolutionConfig.self, forKey: .solutionConfig)
        solutionConfig = solutionConfigDecoded
    }
}
