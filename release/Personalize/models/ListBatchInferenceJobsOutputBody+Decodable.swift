// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBatchInferenceJobsOutputBody: Equatable {
    public let batchInferenceJobs: [BatchInferenceJobSummary]?
    public let nextToken: String?
}

extension ListBatchInferenceJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case batchInferenceJobs
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let batchInferenceJobsContainer = try containerValues.decodeIfPresent([BatchInferenceJobSummary].self, forKey: .batchInferenceJobs)
        var batchInferenceJobsDecoded0:[BatchInferenceJobSummary]? = nil
        if let batchInferenceJobsContainer = batchInferenceJobsContainer {
            batchInferenceJobsDecoded0 = [BatchInferenceJobSummary]()
            for structure0 in batchInferenceJobsContainer {
                batchInferenceJobsDecoded0?.append(structure0)
            }
        }
        batchInferenceJobs = batchInferenceJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
