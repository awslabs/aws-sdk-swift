// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a job that imports training data from a data source (Amazon S3 bucket) to an
///       Amazon Personalize dataset. For more information, see <a>CreateDatasetImportJob</a>.</p>
///          <p>A dataset import job can be in one of the following states:</p>
///          <ul>
///             <li>
///                <p>CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED</p>
///             </li>
///          </ul>
public struct DatasetImportJob: Equatable {
    /// <p>The creation date and time (in Unix time) of the dataset import job.</p>
    public let creationDateTime: Date?
    /// <p>The Amazon S3 bucket that contains the training data to import.</p>
    public let dataSource: DataSource?
    /// <p>The Amazon Resource Name (ARN) of the dataset that receives the imported data.</p>
    public let datasetArn: String?
    /// <p>The ARN of the dataset import job.</p>
    public let datasetImportJobArn: String?
    /// <p>If a dataset import job fails, provides the reason why.</p>
    public let failureReason: String?
    /// <p>The name of the import job.</p>
    public let jobName: String?
    /// <p>The date and time (in Unix time) the dataset was last updated.</p>
    public let lastUpdatedDateTime: Date?
    /// <p>The ARN of the AWS Identity and Access Management (IAM) role that has permissions to read from the Amazon S3 data
    ///       source.</p>
    public let roleArn: String?
    /// <p>The status of the dataset import job.</p>
    ///          <p>A dataset import job can be in one of the following states:</p>
    ///          <ul>
    ///             <li>
    ///                <p>CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED</p>
    ///             </li>
    ///          </ul>
    public let status: String?

    public init (
        creationDateTime: Date? = nil,
        dataSource: DataSource? = nil,
        datasetArn: String? = nil,
        datasetImportJobArn: String? = nil,
        failureReason: String? = nil,
        jobName: String? = nil,
        lastUpdatedDateTime: Date? = nil,
        roleArn: String? = nil,
        status: String? = nil
    )
    {
        self.creationDateTime = creationDateTime
        self.dataSource = dataSource
        self.datasetArn = datasetArn
        self.datasetImportJobArn = datasetImportJobArn
        self.failureReason = failureReason
        self.jobName = jobName
        self.lastUpdatedDateTime = lastUpdatedDateTime
        self.roleArn = roleArn
        self.status = status
    }
}
