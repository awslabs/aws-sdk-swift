// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoMLConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case metricName
        case recipeList
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metricName = metricName {
            try encodeContainer.encode(metricName, forKey: .metricName)
        }
        if let recipeList = recipeList {
            var recipeListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .recipeList)
            for arnlist0 in recipeList {
                try recipeListContainer.encode(arnlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let recipeListContainer = try containerValues.decodeIfPresent([String].self, forKey: .recipeList)
        var recipeListDecoded0:[String]? = nil
        if let recipeListContainer = recipeListContainer {
            recipeListDecoded0 = [String]()
            for string0 in recipeListContainer {
                recipeListDecoded0?.append(string0)
            }
        }
        recipeList = recipeListDecoded0
    }
}
