// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HPOConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case algorithmHyperParameterRanges
        case hpoObjective
        case hpoResourceConfig
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let algorithmHyperParameterRanges = algorithmHyperParameterRanges {
            try encodeContainer.encode(algorithmHyperParameterRanges, forKey: .algorithmHyperParameterRanges)
        }
        if let hpoObjective = hpoObjective {
            try encodeContainer.encode(hpoObjective, forKey: .hpoObjective)
        }
        if let hpoResourceConfig = hpoResourceConfig {
            try encodeContainer.encode(hpoResourceConfig, forKey: .hpoResourceConfig)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hpoObjectiveDecoded = try containerValues.decodeIfPresent(HPOObjective.self, forKey: .hpoObjective)
        hpoObjective = hpoObjectiveDecoded
        let hpoResourceConfigDecoded = try containerValues.decodeIfPresent(HPOResourceConfig.self, forKey: .hpoResourceConfig)
        hpoResourceConfig = hpoResourceConfigDecoded
        let algorithmHyperParameterRangesDecoded = try containerValues.decodeIfPresent(HyperParameterRanges.self, forKey: .algorithmHyperParameterRanges)
        algorithmHyperParameterRanges = algorithmHyperParameterRangesDecoded
    }
}
