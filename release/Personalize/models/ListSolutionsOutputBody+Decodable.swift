// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSolutionsOutputBody: Equatable {
    public let solutions: [SolutionSummary]?
    public let nextToken: String?
}

extension ListSolutionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case solutions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let solutionsContainer = try containerValues.decodeIfPresent([SolutionSummary].self, forKey: .solutions)
        var solutionsDecoded0:[SolutionSummary]? = nil
        if let solutionsContainer = solutionsContainer {
            solutionsDecoded0 = [SolutionSummary]()
            for structure0 in solutionsContainer {
                solutionsDecoded0?.append(structure0)
            }
        }
        solutions = solutionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
