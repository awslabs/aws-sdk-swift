// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OptimizationObjective: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case itemAttribute
        case objectiveSensitivity
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let itemAttribute = itemAttribute {
            try encodeContainer.encode(itemAttribute, forKey: .itemAttribute)
        }
        if let objectiveSensitivity = objectiveSensitivity {
            try encodeContainer.encode(objectiveSensitivity.rawValue, forKey: .objectiveSensitivity)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemAttributeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .itemAttribute)
        itemAttribute = itemAttributeDecoded
        let objectiveSensitivityDecoded = try containerValues.decodeIfPresent(ObjectiveSensitivity.self, forKey: .objectiveSensitivity)
        objectiveSensitivity = objectiveSensitivityDecoded
    }
}
