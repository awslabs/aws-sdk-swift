// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProjectsOutputBody: Equatable {
    public let projects: [ProjectMetadata]?
    public let nextToken: String?
}

extension ListProjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case projects = "Projects"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectsContainer = try containerValues.decodeIfPresent([ProjectMetadata].self, forKey: .projects)
        var projectsDecoded0:[ProjectMetadata]? = nil
        if let projectsContainer = projectsContainer {
            projectsDecoded0 = [ProjectMetadata]()
            for structure0 in projectsContainer {
                projectsDecoded0?.append(structure0)
            }
        }
        projects = projectsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
