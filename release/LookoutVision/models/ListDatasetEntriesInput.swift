// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListDatasetEntriesInput: Equatable {
    /// <p>Only includes entries after the specified date in the response. For example, <code>2020-06-23T00:00:00</code>.</p>
    public let afterCreationDate: Date?
    /// <p>Specify <code>normal</code> to include only normal images. Specify <code>anomaly</code> to only include
    ///          anomalous entries. If you don't specify a value, Amazon Lookout for Vision returns normal and anomalous images.</p>
    public let anomalyClass: String?
    /// <p>Only includes entries before the specified date in the response. For example, <code>2020-06-23T00:00:00</code>.</p>
    public let beforeCreationDate: Date?
    /// <p>The type of the dataset that you want to list.  Specify <code>train</code> to list
    ///          the training dataset. Specify <code>test</code> to list the test dataset. If you have a single dataset
    ///       project, specify <code>train</code>.</p>
    public let datasetType: String?
    /// <p>Specify <code>true</code> to include labeled entries, otherwise specify <code>false</code>. If you
    ///       don't specify a value, Lookout for Vision returns all entries.</p>
    public let labeled: Bool?
    /// <p>The maximum number of results to return per paginated call. The largest value you can specify is 100.
    ///          If you specify a value greater than 100, a ValidationException
    ///          error occurs. The default value is 100.</p>
    public let maxResults: Int?
    /// <p>If the previous response was incomplete (because there is more data to retrieve),
    ///          Amazon Lookout for Vision returns a pagination token in the response. You can use this pagination token to
    ///          retrieve the next set of dataset entries.</p>
    public let nextToken: String?
    /// <p>The name of the project that contains the dataset that you want to list.</p>
    public let projectName: String?
    /// <p>Perform a "contains" search on the  values of the <code>source-ref</code> key within the dataset.
    ///          For example a value of "IMG_17"  returns all JSON Lines where the <code>source-ref</code> key value matches <i>*IMG_17*</i>.</p>
    public let sourceRefContains: String?

    public init (
        afterCreationDate: Date? = nil,
        anomalyClass: String? = nil,
        beforeCreationDate: Date? = nil,
        datasetType: String? = nil,
        labeled: Bool? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        projectName: String? = nil,
        sourceRefContains: String? = nil
    )
    {
        self.afterCreationDate = afterCreationDate
        self.anomalyClass = anomalyClass
        self.beforeCreationDate = beforeCreationDate
        self.datasetType = datasetType
        self.labeled = labeled
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.projectName = projectName
        self.sourceRefContains = sourceRefContains
    }
}
