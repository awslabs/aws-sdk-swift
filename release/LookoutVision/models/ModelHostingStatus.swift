// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ModelHostingStatus {
    case hosted
    case hostingFailed
    case startingHosting
    case stoppingHosting
    case systemUpdating
    case sdkUnknown(String)
}

extension ModelHostingStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ModelHostingStatus] {
        return [
            .hosted,
            .hostingFailed,
            .startingHosting,
            .stoppingHosting,
            .systemUpdating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .hosted: return "HOSTED"
        case .hostingFailed: return "HOSTING_FAILED"
        case .startingHosting: return "STARTING_HOSTING"
        case .stoppingHosting: return "STOPPING_HOSTING"
        case .systemUpdating: return "SYSTEM_UPDATING"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ModelHostingStatus(rawValue: rawValue) ?? ModelHostingStatus.sdkUnknown(rawValue)
    }
}
