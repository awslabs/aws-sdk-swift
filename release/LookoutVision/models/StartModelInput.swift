// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartModelInput: Equatable {
    /// <p>ClientToken is an idempotency token that ensures a call to <code>StartModel</code>
    ///          completes only once.  You choose the value to pass. For example, An issue,
    ///          such as an network outage, might prevent you from getting a response from <code>StartModel</code>.
    ///          In this case, safely retry your call
    ///          to <code>StartModel</code> by using the same <code>ClientToken</code> parameter value. An error occurs
    ///          if the other input parameters are not the same as in the first request. Using a different
    ///          value for <code>ClientToken</code> is considered a new call to <code>StartModel</code>. An idempotency
    ///          token is active for 8 hours.
    ///       </p>
    public var clientToken: String?
    /// <p>The minimum number of inference units to use. A single
    ///          inference unit represents 1 hour of processing and can support up to 5 Transaction Pers Second (TPS).
    ///          Use a higher number to increase the TPS throughput of your model. You are charged for the number
    ///          of inference units that you use.
    ///       </p>
    public let minInferenceUnits: Int?
    /// <p>The version of the model that you want to start.</p>
    public let modelVersion: String?
    /// <p>The name of the project that contains the model that you want to start.</p>
    public let projectName: String?

    public init (
        clientToken: String? = nil,
        minInferenceUnits: Int? = nil,
        modelVersion: String? = nil,
        projectName: String? = nil
    )
    {
        self.clientToken = clientToken
        self.minInferenceUnits = minInferenceUnits
        self.modelVersion = modelVersion
        self.projectName = projectName
    }
}
