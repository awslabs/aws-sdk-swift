// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelsOutputBody: Equatable {
    public let models: [ModelMetadata]?
    public let nextToken: String?
}

extension ListModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case models = "Models"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelsContainer = try containerValues.decodeIfPresent([ModelMetadata].self, forKey: .models)
        var modelsDecoded0:[ModelMetadata]? = nil
        if let modelsContainer = modelsContainer {
            modelsDecoded0 = [ModelMetadata]()
            for structure0 in modelsContainer {
                modelsDecoded0?.append(structure0)
            }
        }
        models = modelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
