// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComponentConfigurationOutputBody: Equatable {
    public let monitor: Bool?
    public let tier: Tier?
    public let componentConfiguration: String?
}

extension DescribeComponentConfigurationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case componentConfiguration = "ComponentConfiguration"
        case monitor = "Monitor"
        case tier = "Tier"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitorDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .monitor)
        monitor = monitorDecoded
        let tierDecoded = try containerValues.decodeIfPresent(Tier.self, forKey: .tier)
        tier = tierDecoded
        let componentConfigurationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .componentConfiguration)
        componentConfiguration = componentConfigurationDecoded
    }
}
