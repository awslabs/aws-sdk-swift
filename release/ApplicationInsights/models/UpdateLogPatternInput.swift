// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateLogPatternInput: Equatable {
    /// <p>The log pattern. The pattern must be DFA compatible. Patterns that utilize forward lookahead or backreference constructions are not supported.</p>
    public let pattern: String?
    /// <p>The name of the log pattern.</p>
    public let patternName: String?
    /// <p>The name of the log pattern set.</p>
    public let patternSetName: String?
    /// <p>Rank of the log pattern. Must be a value between <code>1</code> and <code>1,000,000</code>. The patterns are sorted by rank, so we recommend that you set your highest priority patterns with the lowest rank. A pattern of rank <code>1</code> will be the first to get matched to a log line. A pattern of rank <code>1,000,000</code> will be last to get matched. When you configure custom log patterns from the console, a <code>Low</code> severity pattern translates to a <code>750,000</code> rank. A <code>Medium</code> severity pattern translates to a <code>500,000</code> rank. And a <code>High</code> severity pattern translates to a <code>250,000</code> rank.
    ///          Rank values less than <code>1</code> or greater than <code>1,000,000</code> are reserved for AWS-provided patterns.
    ///       </p>
    public let rank: Int
    /// <p>The name of the resource group.</p>
    public let resourceGroupName: String?

    public init (
        pattern: String? = nil,
        patternName: String? = nil,
        patternSetName: String? = nil,
        rank: Int = 0,
        resourceGroupName: String? = nil
    )
    {
        self.pattern = pattern
        self.patternName = patternName
        self.patternSetName = patternSetName
        self.rank = rank
        self.resourceGroupName = resourceGroupName
    }
}
