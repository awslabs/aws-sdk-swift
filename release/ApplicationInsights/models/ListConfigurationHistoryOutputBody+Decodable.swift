// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConfigurationHistoryOutputBody: Equatable {
    public let eventList: [ConfigurationEvent]?
    public let nextToken: String?
}

extension ListConfigurationHistoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eventList = "EventList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventListContainer = try containerValues.decodeIfPresent([ConfigurationEvent].self, forKey: .eventList)
        var eventListDecoded0:[ConfigurationEvent]? = nil
        if let eventListContainer = eventListContainer {
            eventListDecoded0 = [ConfigurationEvent]()
            for structure0 in eventListContainer {
                eventListDecoded0?.append(structure0)
            }
        }
        eventList = eventListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
