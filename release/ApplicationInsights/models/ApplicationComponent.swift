// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a standalone resource or similarly grouped resources that the application is made
///          up of.</p>
public struct ApplicationComponent: Equatable {
    /// <p>The name of the component.</p>
    public let componentName: String?
    /// <p>
    ///          If logging is supported for the resource type, indicates whether the component has configured logs to be monitored.
    ///       </p>
    public let componentRemarks: String?
    /// <p>
    ///          Workloads detected in the application component.
    ///       </p>
    public let detectedWorkload: [String:[String:String]?]?
    /// <p>Indicates whether the application component is monitored. </p>
    public let monitor: Bool?
    /// <p>
    ///          The operating system of the component.
    ///       </p>
    public let osType: OsType?
    /// <p>The resource type. Supported resource types include EC2 instances, Auto Scaling group, Classic ELB, Application ELB, and SQS Queue.</p>
    public let resourceType: String?
    /// <p>The stack tier of the application component.</p>
    public let tier: Tier?

    public init (
        componentName: String? = nil,
        componentRemarks: String? = nil,
        detectedWorkload: [String:[String:String]?]? = nil,
        monitor: Bool? = nil,
        osType: OsType? = nil,
        resourceType: String? = nil,
        tier: Tier? = nil
    )
    {
        self.componentName = componentName
        self.componentRemarks = componentRemarks
        self.detectedWorkload = detectedWorkload
        self.monitor = monitor
        self.osType = osType
        self.resourceType = resourceType
        self.tier = tier
    }
}
