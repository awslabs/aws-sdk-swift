// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationsOutputBody: Equatable {
    public let applicationInfoList: [ApplicationInfo]?
    public let nextToken: String?
}

extension ListApplicationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationInfoList = "ApplicationInfoList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationInfoListContainer = try containerValues.decodeIfPresent([ApplicationInfo].self, forKey: .applicationInfoList)
        var applicationInfoListDecoded0:[ApplicationInfo]? = nil
        if let applicationInfoListContainer = applicationInfoListContainer {
            applicationInfoListDecoded0 = [ApplicationInfo]()
            for structure0 in applicationInfoListContainer {
                applicationInfoListDecoded0?.append(structure0)
            }
        }
        applicationInfoList = applicationInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
