// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RelatedObservations: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case observationList = "ObservationList"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let observationList = observationList {
            var observationListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .observationList)
            for observationlist0 in observationList {
                try observationListContainer.encode(observationlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let observationListContainer = try containerValues.decodeIfPresent([Observation].self, forKey: .observationList)
        var observationListDecoded0:[Observation]? = nil
        if let observationListContainer = observationListContainer {
            observationListDecoded0 = [Observation]()
            for structure0 in observationListContainer {
                observationListDecoded0?.append(structure0)
            }
        }
        observationList = observationListDecoded0
    }
}
