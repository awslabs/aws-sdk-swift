// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateComponentInputBody: Equatable {
    public let resourceGroupName: String?
    public let componentName: String?
    public let newComponentName: String?
    public let resourceList: [String]?
}

extension UpdateComponentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case componentName = "ComponentName"
        case newComponentName = "NewComponentName"
        case resourceGroupName = "ResourceGroupName"
        case resourceList = "ResourceList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceGroupName)
        resourceGroupName = resourceGroupNameDecoded
        let componentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .componentName)
        componentName = componentNameDecoded
        let newComponentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .newComponentName)
        newComponentName = newComponentNameDecoded
        let resourceListContainer = try containerValues.decodeIfPresent([String].self, forKey: .resourceList)
        var resourceListDecoded0:[String]? = nil
        if let resourceListContainer = resourceListContainer {
            resourceListDecoded0 = [String]()
            for string0 in resourceListContainer {
                resourceListDecoded0?.append(string0)
            }
        }
        resourceList = resourceListDecoded0
    }
}
