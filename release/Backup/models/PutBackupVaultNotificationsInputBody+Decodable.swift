// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutBackupVaultNotificationsInputBody: Equatable {
    public let sNSTopicArn: String?
    public let backupVaultEvents: [BackupVaultEvent]?
}

extension PutBackupVaultNotificationsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupVaultEvents = "BackupVaultEvents"
        case sNSTopicArn = "SNSTopicArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sNSTopicArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sNSTopicArn)
        sNSTopicArn = sNSTopicArnDecoded
        let backupVaultEventsContainer = try containerValues.decodeIfPresent([BackupVaultEvent].self, forKey: .backupVaultEvents)
        var backupVaultEventsDecoded0:[BackupVaultEvent]? = nil
        if let backupVaultEventsContainer = backupVaultEventsContainer {
            backupVaultEventsDecoded0 = [BackupVaultEvent]()
            for string0 in backupVaultEventsContainer {
                backupVaultEventsDecoded0?.append(string0)
            }
        }
        backupVaultEvents = backupVaultEventsDecoded0
    }
}
