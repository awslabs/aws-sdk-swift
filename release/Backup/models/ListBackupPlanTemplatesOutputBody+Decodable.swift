// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupPlanTemplatesOutputBody: Equatable {
    public let nextToken: String?
    public let backupPlanTemplatesList: [BackupPlanTemplatesListMember]?
}

extension ListBackupPlanTemplatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupPlanTemplatesList = "BackupPlanTemplatesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupPlanTemplatesListContainer = try containerValues.decodeIfPresent([BackupPlanTemplatesListMember].self, forKey: .backupPlanTemplatesList)
        var backupPlanTemplatesListDecoded0:[BackupPlanTemplatesListMember]? = nil
        if let backupPlanTemplatesListContainer = backupPlanTemplatesListContainer {
            backupPlanTemplatesListDecoded0 = [BackupPlanTemplatesListMember]()
            for structure0 in backupPlanTemplatesListContainer {
                backupPlanTemplatesListDecoded0?.append(structure0)
            }
        }
        backupPlanTemplatesList = backupPlanTemplatesListDecoded0
    }
}
