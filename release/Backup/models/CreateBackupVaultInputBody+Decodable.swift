// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBackupVaultInputBody: Equatable {
    public let backupVaultTags: [String:String]?
    public let encryptionKeyArn: String?
    public let creatorRequestId: String?
}

extension CreateBackupVaultInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupVaultTags = "BackupVaultTags"
        case creatorRequestId = "CreatorRequestId"
        case encryptionKeyArn = "EncryptionKeyArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .backupVaultTags)
        var backupVaultTagsDecoded0: [String:String]? = nil
        if let backupVaultTagsContainer = backupVaultTagsContainer {
            backupVaultTagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in backupVaultTagsContainer {
                backupVaultTagsDecoded0?[key0] = tagvalue0
            }
        }
        backupVaultTags = backupVaultTagsDecoded0
        let encryptionKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .encryptionKeyArn)
        encryptionKeyArn = encryptionKeyArnDecoded
        let creatorRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .creatorRequestId)
        creatorRequestId = creatorRequestIdDecoded
    }
}
