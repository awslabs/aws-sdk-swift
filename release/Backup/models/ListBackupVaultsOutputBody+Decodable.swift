// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupVaultsOutputBody: Equatable {
    public let backupVaultList: [BackupVaultListMember]?
    public let nextToken: String?
}

extension ListBackupVaultsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupVaultList = "BackupVaultList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultListContainer = try containerValues.decodeIfPresent([BackupVaultListMember].self, forKey: .backupVaultList)
        var backupVaultListDecoded0:[BackupVaultListMember]? = nil
        if let backupVaultListContainer = backupVaultListContainer {
            backupVaultListDecoded0 = [BackupVaultListMember]()
            for structure0 in backupVaultListContainer {
                backupVaultListDecoded0?.append(structure0)
            }
        }
        backupVaultList = backupVaultListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
