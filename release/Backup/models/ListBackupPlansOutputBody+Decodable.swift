// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupPlansOutputBody: Equatable {
    public let nextToken: String?
    public let backupPlansList: [BackupPlansListMember]?
}

extension ListBackupPlansOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupPlansList = "BackupPlansList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupPlansListContainer = try containerValues.decodeIfPresent([BackupPlansListMember].self, forKey: .backupPlansList)
        var backupPlansListDecoded0:[BackupPlansListMember]? = nil
        if let backupPlansListContainer = backupPlansListContainer {
            backupPlansListDecoded0 = [BackupPlansListMember]()
            for structure0 in backupPlansListContainer {
                backupPlansListDecoded0?.append(structure0)
            }
        }
        backupPlansList = backupPlansListDecoded0
    }
}
