// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartCopyJobInput: Equatable {
    /// <p>An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to
    ///          copy to; for example,
    ///          <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.</p>
    public let destinationBackupVaultArn: String?
    /// <p>Specifies the IAM role ARN used to copy the target recovery point; for example,
    ///             <code>arn:aws:iam::123456789012:role/S3Access</code>.</p>
    public let iamRoleArn: String?
    /// <p>A customer chosen string that can be used to distinguish between calls to
    ///             <code>StartCopyJob</code>.</p>
    public let idempotencyToken: String?
    /// <p>Contains an array of <code>Transition</code> objects specifying how long in days before
    ///          a recovery point transitions to cold storage or is deleted.</p>
    ///          <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90
    ///          days. Therefore, on the console, the “expire after days” setting must be 90 days greater
    ///          than the “transition to cold after days” setting. The “transition to cold after days”
    ///          setting cannot be changed after a backup has been transitioned to cold.</p>
    ///          <p>Only Amazon EFS file system backups can be transitioned to cold storage.</p>
    public let lifecycle: Lifecycle?
    /// <p>An ARN that uniquely identifies a recovery point to use for the copy job; for example,
    ///          arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45.
    ///       </p>
    public let recoveryPointArn: String?
    /// <p>The name of a logical source container where backups are stored. Backup vaults are
    ///          identified by names that are unique to the account used to create them and the AWS Region
    ///          where they are created. They consist of lowercase letters, numbers, and hyphens.</p>
    public let sourceBackupVaultName: String?

    public init (
        destinationBackupVaultArn: String? = nil,
        iamRoleArn: String? = nil,
        idempotencyToken: String? = nil,
        lifecycle: Lifecycle? = nil,
        recoveryPointArn: String? = nil,
        sourceBackupVaultName: String? = nil
    )
    {
        self.destinationBackupVaultArn = destinationBackupVaultArn
        self.iamRoleArn = iamRoleArn
        self.idempotencyToken = idempotencyToken
        self.lifecycle = lifecycle
        self.recoveryPointArn = recoveryPointArn
        self.sourceBackupVaultName = sourceBackupVaultName
    }
}
