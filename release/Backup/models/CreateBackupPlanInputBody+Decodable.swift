// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBackupPlanInputBody: Equatable {
    public let backupPlan: BackupPlanInput?
    public let backupPlanTags: [String:String]?
    public let creatorRequestId: String?
}

extension CreateBackupPlanInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupPlan = "BackupPlan"
        case backupPlanTags = "BackupPlanTags"
        case creatorRequestId = "CreatorRequestId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupPlanDecoded = try containerValues.decodeIfPresent(BackupPlanInput.self, forKey: .backupPlan)
        backupPlan = backupPlanDecoded
        let backupPlanTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .backupPlanTags)
        var backupPlanTagsDecoded0: [String:String]? = nil
        if let backupPlanTagsContainer = backupPlanTagsContainer {
            backupPlanTagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in backupPlanTagsContainer {
                backupPlanTagsDecoded0?[key0] = tagvalue0
            }
        }
        backupPlanTags = backupPlanTagsDecoded0
        let creatorRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .creatorRequestId)
        creatorRequestId = creatorRequestIdDecoded
    }
}
