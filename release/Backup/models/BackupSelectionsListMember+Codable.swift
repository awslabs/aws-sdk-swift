// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackupSelectionsListMember: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case backupPlanId = "BackupPlanId"
        case creationDate = "CreationDate"
        case creatorRequestId = "CreatorRequestId"
        case iamRoleArn = "IamRoleArn"
        case selectionId = "SelectionId"
        case selectionName = "SelectionName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupPlanId = backupPlanId {
            try encodeContainer.encode(backupPlanId, forKey: .backupPlanId)
        }
        if let creationDate = creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let creatorRequestId = creatorRequestId {
            try encodeContainer.encode(creatorRequestId, forKey: .creatorRequestId)
        }
        if let iamRoleArn = iamRoleArn {
            try encodeContainer.encode(iamRoleArn, forKey: .iamRoleArn)
        }
        if let selectionId = selectionId {
            try encodeContainer.encode(selectionId, forKey: .selectionId)
        }
        if let selectionName = selectionName {
            try encodeContainer.encode(selectionName, forKey: .selectionName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let selectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .selectionId)
        selectionId = selectionIdDecoded
        let selectionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .selectionName)
        selectionName = selectionNameDecoded
        let backupPlanIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backupPlanId)
        backupPlanId = backupPlanIdDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let creatorRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .creatorRequestId)
        creatorRequestId = creatorRequestIdDecoded
        let iamRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .iamRoleArn)
        iamRoleArn = iamRoleArnDecoded
    }
}
