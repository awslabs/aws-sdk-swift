// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Lifecycle: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deleteAfterDays = "DeleteAfterDays"
        case moveToColdStorageAfterDays = "MoveToColdStorageAfterDays"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deleteAfterDays = deleteAfterDays {
            try encodeContainer.encode(deleteAfterDays, forKey: .deleteAfterDays)
        }
        if let moveToColdStorageAfterDays = moveToColdStorageAfterDays {
            try encodeContainer.encode(moveToColdStorageAfterDays, forKey: .moveToColdStorageAfterDays)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let moveToColdStorageAfterDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .moveToColdStorageAfterDays)
        moveToColdStorageAfterDays = moveToColdStorageAfterDaysDecoded
        let deleteAfterDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .deleteAfterDays)
        deleteAfterDays = deleteAfterDaysDecoded
    }
}
