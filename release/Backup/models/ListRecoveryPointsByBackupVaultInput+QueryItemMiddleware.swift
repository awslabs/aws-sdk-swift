// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListRecoveryPointsByBackupVaultInputQueryItemMiddleware: Middleware {
    public let id: String = "ListRecoveryPointsByBackupVaultInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListRecoveryPointsByBackupVaultInput>,
                  next: H) -> Swift.Result<OperationOutput<ListRecoveryPointsByBackupVaultOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let byResourceType = input.operationInput.byResourceType {
            let byResourceTypeQueryItem = URLQueryItem(name: "resourceType".urlPercentEncoding(), value: String(byResourceType).urlPercentEncoding())
            input.builder.withQueryItem(byResourceTypeQueryItem)
        }
        if let byCreatedBefore = input.operationInput.byCreatedBefore {
            let byCreatedBeforeQueryItem = URLQueryItem(name: "createdBefore".urlPercentEncoding(), value: String(byCreatedBefore.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(byCreatedBeforeQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let byResourceArn = input.operationInput.byResourceArn {
            let byResourceArnQueryItem = URLQueryItem(name: "resourceArn".urlPercentEncoding(), value: String(byResourceArn).urlPercentEncoding())
            input.builder.withQueryItem(byResourceArnQueryItem)
        }
        if let byBackupPlanId = input.operationInput.byBackupPlanId {
            let byBackupPlanIdQueryItem = URLQueryItem(name: "backupPlanId".urlPercentEncoding(), value: String(byBackupPlanId).urlPercentEncoding())
            input.builder.withQueryItem(byBackupPlanIdQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let byCreatedAfter = input.operationInput.byCreatedAfter {
            let byCreatedAfterQueryItem = URLQueryItem(name: "createdAfter".urlPercentEncoding(), value: String(byCreatedAfter.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(byCreatedAfterQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListRecoveryPointsByBackupVaultInput>
    public typealias MOutput = OperationOutput<ListRecoveryPointsByBackupVaultOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListRecoveryPointsByBackupVaultOutputError>
}
