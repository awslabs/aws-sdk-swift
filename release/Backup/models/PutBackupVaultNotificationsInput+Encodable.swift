// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutBackupVaultNotificationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case backupVaultEvents = "BackupVaultEvents"
        case sNSTopicArn = "SNSTopicArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupVaultEvents = backupVaultEvents {
            var backupVaultEventsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .backupVaultEvents)
            for backupvaultevents0 in backupVaultEvents {
                try backupVaultEventsContainer.encode(backupvaultevents0.rawValue)
            }
        }
        if let sNSTopicArn = sNSTopicArn {
            try encodeContainer.encode(sNSTopicArn, forKey: .sNSTopicArn)
        }
    }
}
