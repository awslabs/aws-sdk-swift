// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBackupVaultOutputBody: Equatable {
    public let backupVaultName: String?
    public let backupVaultArn: String?
    public let encryptionKeyArn: String?
    public let creationDate: Date?
    public let creatorRequestId: String?
    public let numberOfRecoveryPoints: Int
}

extension DescribeBackupVaultOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupVaultArn = "BackupVaultArn"
        case backupVaultName = "BackupVaultName"
        case creationDate = "CreationDate"
        case creatorRequestId = "CreatorRequestId"
        case encryptionKeyArn = "EncryptionKeyArn"
        case numberOfRecoveryPoints = "NumberOfRecoveryPoints"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let backupVaultNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backupVaultName)
        backupVaultName = backupVaultNameDecoded
        let backupVaultArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backupVaultArn)
        backupVaultArn = backupVaultArnDecoded
        let encryptionKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .encryptionKeyArn)
        encryptionKeyArn = encryptionKeyArnDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let creatorRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .creatorRequestId)
        creatorRequestId = creatorRequestIdDecoded
        let numberOfRecoveryPointsDecoded = try containerValues.decode(Int.self, forKey: .numberOfRecoveryPoints)
        numberOfRecoveryPoints = numberOfRecoveryPointsDecoded
    }
}
