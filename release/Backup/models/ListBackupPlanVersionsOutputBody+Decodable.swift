// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupPlanVersionsOutputBody: Equatable {
    public let nextToken: String?
    public let backupPlanVersionsList: [BackupPlansListMember]?
}

extension ListBackupPlanVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupPlanVersionsList = "BackupPlanVersionsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupPlanVersionsListContainer = try containerValues.decodeIfPresent([BackupPlansListMember].self, forKey: .backupPlanVersionsList)
        var backupPlanVersionsListDecoded0:[BackupPlansListMember]? = nil
        if let backupPlanVersionsListContainer = backupPlanVersionsListContainer {
            backupPlanVersionsListDecoded0 = [BackupPlansListMember]()
            for structure0 in backupPlanVersionsListContainer {
                backupPlanVersionsListDecoded0?.append(structure0)
            }
        }
        backupPlanVersionsList = backupPlanVersionsListDecoded0
    }
}
