// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBackupSelectionsOutputBody: Equatable {
    public let nextToken: String?
    public let backupSelectionsList: [BackupSelectionsListMember]?
}

extension ListBackupSelectionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupSelectionsList = "BackupSelectionsList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let backupSelectionsListContainer = try containerValues.decodeIfPresent([BackupSelectionsListMember].self, forKey: .backupSelectionsList)
        var backupSelectionsListDecoded0:[BackupSelectionsListMember]? = nil
        if let backupSelectionsListContainer = backupSelectionsListContainer {
            backupSelectionsListDecoded0 = [BackupSelectionsListMember]()
            for structure0 in backupSelectionsListContainer {
                backupSelectionsListDecoded0?.append(structure0)
            }
        }
        backupSelectionsList = backupSelectionsListDecoded0
    }
}
