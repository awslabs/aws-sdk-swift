// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateBackupPlanInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case backupPlan = "BackupPlan"
        case backupPlanTags = "BackupPlanTags"
        case creatorRequestId = "CreatorRequestId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupPlan = backupPlan {
            try encodeContainer.encode(backupPlan, forKey: .backupPlan)
        }
        if let backupPlanTags = backupPlanTags {
            var backupPlanTagsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .backupPlanTags)
            for (dictKey0, tags0) in backupPlanTags {
                try backupPlanTagsContainer.encode(tags0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let creatorRequestId = creatorRequestId {
            try encodeContainer.encode(creatorRequestId, forKey: .creatorRequestId)
        }
    }
}
