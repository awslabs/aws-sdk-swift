// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DecreaseReplicationFactorInputBody: Equatable {
    public let clusterName: String?
    public let newReplicationFactor: Int
    public let availabilityZones: [String]?
    public let nodeIdsToRemove: [String]?
}

extension DecreaseReplicationFactorInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case availabilityZones = "AvailabilityZones"
        case clusterName = "ClusterName"
        case newReplicationFactor = "NewReplicationFactor"
        case nodeIdsToRemove = "NodeIdsToRemove"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let newReplicationFactorDecoded = try containerValues.decode(Int.self, forKey: .newReplicationFactor)
        newReplicationFactor = newReplicationFactorDecoded
        let availabilityZonesContainer = try containerValues.decodeIfPresent([String].self, forKey: .availabilityZones)
        var availabilityZonesDecoded0:[String]? = nil
        if let availabilityZonesContainer = availabilityZonesContainer {
            availabilityZonesDecoded0 = [String]()
            for string0 in availabilityZonesContainer {
                availabilityZonesDecoded0?.append(string0)
            }
        }
        availabilityZones = availabilityZonesDecoded0
        let nodeIdsToRemoveContainer = try containerValues.decodeIfPresent([String].self, forKey: .nodeIdsToRemove)
        var nodeIdsToRemoveDecoded0:[String]? = nil
        if let nodeIdsToRemoveContainer = nodeIdsToRemoveContainer {
            nodeIdsToRemoveDecoded0 = [String]()
            for string0 in nodeIdsToRemoveContainer {
                nodeIdsToRemoveDecoded0?.append(string0)
            }
        }
        nodeIdsToRemove = nodeIdsToRemoveDecoded0
    }
}
