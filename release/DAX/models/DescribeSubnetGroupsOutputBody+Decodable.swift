// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSubnetGroupsOutputBody: Equatable {
    public let nextToken: String?
    public let subnetGroups: [SubnetGroup]?
}

extension DescribeSubnetGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case subnetGroups = "SubnetGroups"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let subnetGroupsContainer = try containerValues.decodeIfPresent([SubnetGroup].self, forKey: .subnetGroups)
        var subnetGroupsDecoded0:[SubnetGroup]? = nil
        if let subnetGroupsContainer = subnetGroupsContainer {
            subnetGroupsDecoded0 = [SubnetGroup]()
            for structure0 in subnetGroupsContainer {
                subnetGroupsDecoded0?.append(structure0)
            }
        }
        subnetGroups = subnetGroupsDecoded0
    }
}
