// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeEventsInput: Equatable {
    /// <p>The number of minutes' worth of events to retrieve.</p>
    public let duration: Int?
    /// <p>The end of the time interval for which to retrieve events, specified in ISO 8601
    ///             format.</p>
    public let endTime: Date?
    /// <p>The maximum number of results to include in the response. If more results exist
    ///             than the specified <code>MaxResults</code> value, a token is included in the response so
    ///             that the remaining results can be retrieved.</p>
    ///         <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>
    public let maxResults: Int?
    /// <p>An optional token returned from a prior request. Use this token for pagination of
    ///             results from this action. If this parameter is specified, the response includes only
    ///             results beyond the token, up to the value specified by
    ///             <code>MaxResults</code>.</p>
    public let nextToken: String?
    /// <p>The identifier of the event source for which events will be returned. If not
    ///             specified, then all sources are included in the response.</p>
    public let sourceName: String?
    /// <p>The event source to retrieve events for. If no value is specified, all events are
    ///             returned.</p>
    public let sourceType: SourceType?
    /// <p>The beginning of the time interval to retrieve events for, specified in ISO 8601
    ///             format.</p>
    public let startTime: Date?

    public init (
        duration: Int? = nil,
        endTime: Date? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        sourceName: String? = nil,
        sourceType: SourceType? = nil,
        startTime: Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sourceName = sourceName
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
