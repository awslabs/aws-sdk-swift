// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateUpdatedImageInputBody: Equatable {
    public let existingImageName: String?
    public let newImageName: String?
    public let newImageDescription: String?
    public let newImageDisplayName: String?
    public let newImageTags: [String:String]?
    public let dryRun: Bool
}

extension CreateUpdatedImageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dryRun
        case existingImageName
        case newImageDescription
        case newImageDisplayName
        case newImageName
        case newImageTags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let existingImageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .existingImageName)
        existingImageName = existingImageNameDecoded
        let newImageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .newImageName)
        newImageName = newImageNameDecoded
        let newImageDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .newImageDescription)
        newImageDescription = newImageDescriptionDecoded
        let newImageDisplayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .newImageDisplayName)
        newImageDisplayName = newImageDisplayNameDecoded
        let newImageTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .newImageTags)
        var newImageTagsDecoded0: [String:String]? = nil
        if let newImageTagsContainer = newImageTagsContainer {
            newImageTagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in newImageTagsContainer {
                newImageTagsDecoded0?[key0] = tagvalue0
            }
        }
        newImageTags = newImageTagsDecoded0
        let dryRunDecoded = try containerValues.decode(Bool.self, forKey: .dryRun)
        dryRun = dryRunDecoded
    }
}
