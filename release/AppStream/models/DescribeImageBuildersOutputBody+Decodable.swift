// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImageBuildersOutputBody: Equatable {
    public let imageBuilders: [ImageBuilder]?
    public let nextToken: String?
}

extension DescribeImageBuildersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageBuilders = "ImageBuilders"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageBuildersContainer = try containerValues.decodeIfPresent([ImageBuilder].self, forKey: .imageBuilders)
        var imageBuildersDecoded0:[ImageBuilder]? = nil
        if let imageBuildersContainer = imageBuildersContainer {
            imageBuildersDecoded0 = [ImageBuilder]()
            for structure0 in imageBuildersContainer {
                imageBuildersDecoded0?.append(structure0)
            }
        }
        imageBuilders = imageBuildersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
