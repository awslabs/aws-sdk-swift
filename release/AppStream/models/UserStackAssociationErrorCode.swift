// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UserStackAssociationErrorCode {
    case directoryNotFound
    case internalError
    case stackNotFound
    case userNameNotFound
    case sdkUnknown(String)
}

extension UserStackAssociationErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UserStackAssociationErrorCode] {
        return [
            .directoryNotFound,
            .internalError,
            .stackNotFound,
            .userNameNotFound,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .directoryNotFound: return "DIRECTORY_NOT_FOUND"
        case .internalError: return "INTERNAL_ERROR"
        case .stackNotFound: return "STACK_NOT_FOUND"
        case .userNameNotFound: return "USER_NAME_NOT_FOUND"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UserStackAssociationErrorCode(rawValue: rawValue) ?? UserStackAssociationErrorCode.sdkUnknown(rawValue)
    }
}
