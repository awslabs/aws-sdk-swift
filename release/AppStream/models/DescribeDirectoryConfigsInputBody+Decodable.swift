// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDirectoryConfigsInputBody: Equatable {
    public let directoryNames: [String]?
    public let maxResults: Int?
    public let nextToken: String?
}

extension DescribeDirectoryConfigsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryNames = "DirectoryNames"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .directoryNames)
        var directoryNamesDecoded0:[String]? = nil
        if let directoryNamesContainer = directoryNamesContainer {
            directoryNamesDecoded0 = [String]()
            for string0 in directoryNamesContainer {
                directoryNamesDecoded0?.append(string0)
            }
        }
        directoryNames = directoryNamesDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
