// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a virtual machine that is used to create an image. </p>
public struct ImageBuilder: Equatable {
    /// <p>The list of virtual private cloud (VPC) interface endpoint objects. Administrators can connect to the image builder only through the specified endpoints.</p>
    public let accessEndpoints: [AccessEndpoint]?
    /// <p>The version of the AppStream 2.0 agent that is currently being used by the image builder. </p>
    public let appstreamAgentVersion: String?
    /// <p>The ARN for the image builder.</p>
    public let arn: String?
    /// <p>The time stamp when the image builder was created.</p>
    public let createdTime: Date?
    /// <p>The description to display.</p>
    public let description: String?
    /// <p>The image builder name to display.</p>
    public let displayName: String?
    /// <p>The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain. </p>
    public let domainJoinInfo: DomainJoinInfo?
    /// <p>Enables or disables default internet access for the image builder.</p>
    public let enableDefaultInternetAccess: Bool?
    /// <p>The ARN of the IAM role that is applied to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) <code>AssumeRole</code> API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the <b>appstream_machine_role</b> credential profile on the instance.</p>
    ///
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html">Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>
    public let iamRoleArn: String?
    /// <p>The ARN of the image from which this builder was created.</p>
    public let imageArn: String?
    /// <p>The image builder errors.</p>
    public let imageBuilderErrors: [ResourceError]?
    /// <p>The instance type for the image builder. The following instance types are available:</p>
    ///             <ul>
    ///             <li>
    ///                <p>stream.standard.small</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.standard.medium</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.standard.large</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.compute.large</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.compute.xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.compute.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.compute.4xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.compute.8xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.large</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.4xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.8xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.large</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.3xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.6xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.memory.z1d.12xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-design.large</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-design.xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-design.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-design.4xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-desktop.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.2xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.4xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.8xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.12xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics.g4dn.16xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-pro.4xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-pro.8xlarge</p>
    ///             </li>
    ///             <li>
    ///                <p>stream.graphics-pro.16xlarge</p>
    ///             </li>
    ///          </ul>
    public let instanceType: String?
    /// <p>The name of the image builder.</p>
    public let name: String?
    /// <p>Describes the network details of the fleet or image builder instance.</p>
    public let networkAccessConfiguration: NetworkAccessConfiguration?
    /// <p>The operating system platform of the image builder.</p>
    public let platform: PlatformType?
    /// <p>The state of the image builder.</p>
    public let state: ImageBuilderState?
    /// <p>The reason why the last state change occurred.</p>
    public let stateChangeReason: ImageBuilderStateChangeReason?
    /// <p>The VPC configuration of the image builder.</p>
    public let vpcConfig: VpcConfig?

    public init (
        accessEndpoints: [AccessEndpoint]? = nil,
        appstreamAgentVersion: String? = nil,
        arn: String? = nil,
        createdTime: Date? = nil,
        description: String? = nil,
        displayName: String? = nil,
        domainJoinInfo: DomainJoinInfo? = nil,
        enableDefaultInternetAccess: Bool? = nil,
        iamRoleArn: String? = nil,
        imageArn: String? = nil,
        imageBuilderErrors: [ResourceError]? = nil,
        instanceType: String? = nil,
        name: String? = nil,
        networkAccessConfiguration: NetworkAccessConfiguration? = nil,
        platform: PlatformType? = nil,
        state: ImageBuilderState? = nil,
        stateChangeReason: ImageBuilderStateChangeReason? = nil,
        vpcConfig: VpcConfig? = nil
    )
    {
        self.accessEndpoints = accessEndpoints
        self.appstreamAgentVersion = appstreamAgentVersion
        self.arn = arn
        self.createdTime = createdTime
        self.description = description
        self.displayName = displayName
        self.domainJoinInfo = domainJoinInfo
        self.enableDefaultInternetAccess = enableDefaultInternetAccess
        self.iamRoleArn = iamRoleArn
        self.imageArn = imageArn
        self.imageBuilderErrors = imageBuilderErrors
        self.instanceType = instanceType
        self.name = name
        self.networkAccessConfiguration = networkAccessConfiguration
        self.platform = platform
        self.state = state
        self.stateChangeReason = stateChangeReason
        self.vpcConfig = vpcConfig
    }
}
