// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDirectoryConfigsOutputBody: Equatable {
    public let directoryConfigs: [DirectoryConfig]?
    public let nextToken: String?
}

extension DescribeDirectoryConfigsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryConfigs = "DirectoryConfigs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryConfigsContainer = try containerValues.decodeIfPresent([DirectoryConfig].self, forKey: .directoryConfigs)
        var directoryConfigsDecoded0:[DirectoryConfig]? = nil
        if let directoryConfigsContainer = directoryConfigsContainer {
            directoryConfigsDecoded0 = [DirectoryConfig]()
            for structure0 in directoryConfigsContainer {
                directoryConfigsDecoded0?.append(structure0)
            }
        }
        directoryConfigs = directoryConfigsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
