// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum StackAttribute {
    case accessEndpoints
    case embedHostDomains
    case feedbackUrl
    case iamRoleArn
    case redirectUrl
    case storageConnectors
    case storageConnectorGoogleDrive
    case storageConnectorHomefolders
    case storageConnectorOneDrive
    case themeName
    case userSettings
    case sdkUnknown(String)
}

extension StackAttribute : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [StackAttribute] {
        return [
            .accessEndpoints,
            .embedHostDomains,
            .feedbackUrl,
            .iamRoleArn,
            .redirectUrl,
            .storageConnectors,
            .storageConnectorGoogleDrive,
            .storageConnectorHomefolders,
            .storageConnectorOneDrive,
            .themeName,
            .userSettings,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessEndpoints: return "ACCESS_ENDPOINTS"
        case .embedHostDomains: return "EMBED_HOST_DOMAINS"
        case .feedbackUrl: return "FEEDBACK_URL"
        case .iamRoleArn: return "IAM_ROLE_ARN"
        case .redirectUrl: return "REDIRECT_URL"
        case .storageConnectors: return "STORAGE_CONNECTORS"
        case .storageConnectorGoogleDrive: return "STORAGE_CONNECTOR_GOOGLE_DRIVE"
        case .storageConnectorHomefolders: return "STORAGE_CONNECTOR_HOMEFOLDERS"
        case .storageConnectorOneDrive: return "STORAGE_CONNECTOR_ONE_DRIVE"
        case .themeName: return "THEME_NAME"
        case .userSettings: return "USER_SETTINGS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = StackAttribute(rawValue: rawValue) ?? StackAttribute.sdkUnknown(rawValue)
    }
}
