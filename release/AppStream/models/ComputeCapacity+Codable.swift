// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComputeCapacity: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case desiredInstances = "DesiredInstances"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let desiredInstances = desiredInstances {
            try encodeContainer.encode(desiredInstances, forKey: .desiredInstances)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let desiredInstancesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .desiredInstances)
        desiredInstances = desiredInstancesDecoded
    }
}
