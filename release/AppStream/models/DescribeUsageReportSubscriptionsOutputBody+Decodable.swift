// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeUsageReportSubscriptionsOutputBody: Equatable {
    public let usageReportSubscriptions: [UsageReportSubscription]?
    public let nextToken: String?
}

extension DescribeUsageReportSubscriptionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case usageReportSubscriptions = "UsageReportSubscriptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let usageReportSubscriptionsContainer = try containerValues.decodeIfPresent([UsageReportSubscription].self, forKey: .usageReportSubscriptions)
        var usageReportSubscriptionsDecoded0:[UsageReportSubscription]? = nil
        if let usageReportSubscriptionsContainer = usageReportSubscriptionsContainer {
            usageReportSubscriptionsDecoded0 = [UsageReportSubscription]()
            for structure0 in usageReportSubscriptionsContainer {
                usageReportSubscriptionsDecoded0?.append(structure0)
            }
        }
        usageReportSubscriptions = usageReportSubscriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
