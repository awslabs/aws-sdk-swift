// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Action {
    case clipboardCopyFromLocalDevice
    case clipboardCopyToLocalDevice
    case domainPasswordSignin
    case domainSmartCardSignin
    case fileDownload
    case fileUpload
    case printingToLocalDevice
    case sdkUnknown(String)
}

extension Action : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Action] {
        return [
            .clipboardCopyFromLocalDevice,
            .clipboardCopyToLocalDevice,
            .domainPasswordSignin,
            .domainSmartCardSignin,
            .fileDownload,
            .fileUpload,
            .printingToLocalDevice,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .clipboardCopyFromLocalDevice: return "CLIPBOARD_COPY_FROM_LOCAL_DEVICE"
        case .clipboardCopyToLocalDevice: return "CLIPBOARD_COPY_TO_LOCAL_DEVICE"
        case .domainPasswordSignin: return "DOMAIN_PASSWORD_SIGNIN"
        case .domainSmartCardSignin: return "DOMAIN_SMART_CARD_SIGNIN"
        case .fileDownload: return "FILE_DOWNLOAD"
        case .fileUpload: return "FILE_UPLOAD"
        case .printingToLocalDevice: return "PRINTING_TO_LOCAL_DEVICE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Action(rawValue: rawValue) ?? Action.sdkUnknown(rawValue)
    }
}
