// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a stack.</p>
public struct Stack: Equatable {
    /// <p>The list of virtual private cloud (VPC) interface endpoint objects. Users of the stack can connect to AppStream 2.0 only through the specified endpoints. </p>
    public let accessEndpoints: [AccessEndpoint]?
    /// <p>The persistent application settings for users of the stack.</p>
    public let applicationSettings: ApplicationSettingsResponse?
    /// <p>The ARN of the stack.</p>
    public let arn: String?
    /// <p>The time the stack was created.</p>
    public let createdTime: Date?
    /// <p>The description to display.</p>
    public let description: String?
    /// <p>The stack name to display.</p>
    public let displayName: String?
    /// <p>The domains where AppStream 2.0 streaming sessions can be embedded in an iframe. You must approve the domains that you want to host embedded AppStream 2.0 streaming sessions.</p>
    public let embedHostDomains: [String]?
    /// <p>The URL that users are redirected to after they click the Send Feedback link. If no URL is specified, no Send Feedback link is displayed.</p>
    public let feedbackURL: String?
    /// <p>The name of the stack.</p>
    public let name: String?
    /// <p>The URL that users are redirected to after their streaming session ends.</p>
    public let redirectURL: String?
    /// <p>The errors for the stack.</p>
    public let stackErrors: [StackError]?
    /// <p>The storage connectors to enable.</p>
    public let storageConnectors: [StorageConnector]?
    /// <p>The actions that are enabled or disabled for users during their streaming sessions. By default these actions are enabled.</p>
    public let userSettings: [UserSetting]?

    public init (
        accessEndpoints: [AccessEndpoint]? = nil,
        applicationSettings: ApplicationSettingsResponse? = nil,
        arn: String? = nil,
        createdTime: Date? = nil,
        description: String? = nil,
        displayName: String? = nil,
        embedHostDomains: [String]? = nil,
        feedbackURL: String? = nil,
        name: String? = nil,
        redirectURL: String? = nil,
        stackErrors: [StackError]? = nil,
        storageConnectors: [StorageConnector]? = nil,
        userSettings: [UserSetting]? = nil
    )
    {
        self.accessEndpoints = accessEndpoints
        self.applicationSettings = applicationSettings
        self.arn = arn
        self.createdTime = createdTime
        self.description = description
        self.displayName = displayName
        self.embedHostDomains = embedHostDomains
        self.feedbackURL = feedbackURL
        self.name = name
        self.redirectURL = redirectURL
        self.stackErrors = stackErrors
        self.storageConnectors = storageConnectors
        self.userSettings = userSettings
    }
}
