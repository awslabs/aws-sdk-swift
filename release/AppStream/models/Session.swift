// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a streaming session.</p>
public struct Session: Equatable {
    /// <p>The authentication method. The user is authenticated using a streaming URL
    ///             (<code>API</code>) or SAML 2.0 federation (<code>SAML</code>).</p>
    public let authenticationType: AuthenticationType?
    /// <p>Specifies whether a user is connected to the streaming session.</p>
    public let connectionState: SessionConnectionState?
    /// <p>The name of the fleet for the streaming session.</p>
    public let fleetName: String?
    /// <p>The identifier of the streaming session.</p>
    public let id: String?
    /// <p>The time when the streaming session is set to expire. This time is based on the <code>MaxUserDurationinSeconds</code> value, which determines the maximum length of time that a streaming session can run. A streaming session might end earlier than the time specified in <code>SessionMaxExpirationTime</code>, when the <code>DisconnectTimeOutInSeconds</code> elapses or the user chooses to end his or her session. If the <code>DisconnectTimeOutInSeconds</code> elapses, or the user chooses to end his or her session, the streaming instance is terminated and the streaming session ends.</p>
    public let maxExpirationTime: Date?
    /// <p>The network details for the streaming session.</p>
    public let networkAccessConfiguration: NetworkAccessConfiguration?
    /// <p>The name of the stack for the streaming session.</p>
    public let stackName: String?
    /// <p>The time when a streaming instance is dedicated for the user.</p>
    public let startTime: Date?
    /// <p>The current state of the streaming session.</p>
    public let state: SessionState?
    /// <p>The identifier of the user for whom the session was created.</p>
    public let userId: String?

    public init (
        authenticationType: AuthenticationType? = nil,
        connectionState: SessionConnectionState? = nil,
        fleetName: String? = nil,
        id: String? = nil,
        maxExpirationTime: Date? = nil,
        networkAccessConfiguration: NetworkAccessConfiguration? = nil,
        stackName: String? = nil,
        startTime: Date? = nil,
        state: SessionState? = nil,
        userId: String? = nil
    )
    {
        self.authenticationType = authenticationType
        self.connectionState = connectionState
        self.fleetName = fleetName
        self.id = id
        self.maxExpirationTime = maxExpirationTime
        self.networkAccessConfiguration = networkAccessConfiguration
        self.stackName = stackName
        self.startTime = startTime
        self.state = state
        self.userId = userId
    }
}
