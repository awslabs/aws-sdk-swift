// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendSerialConsoleSSHPublicKeyInputBody: Equatable {
    public let instanceId: String?
    public let serialPort: Int
    public let sSHPublicKey: String?
}

extension SendSerialConsoleSSHPublicKeyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceId = "InstanceId"
        case sSHPublicKey = "SSHPublicKey"
        case serialPort = "SerialPort"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let serialPortDecoded = try containerValues.decode(Int.self, forKey: .serialPort)
        serialPort = serialPortDecoded
        let sSHPublicKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sSHPublicKey)
        sSHPublicKey = sSHPublicKeyDecoded
    }
}
