// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An entitlement represents capacity in a product owned by the customer. For example, a
///       customer might own some number of users or seats in an SaaS application or  some amount of
///       data capacity in a multi-tenant database.</p>
public struct Entitlement: Equatable {
    /// <p>The customer identifier is a handle to each unique customer in an application. Customer
    ///    identifiers are obtained through the ResolveCustomer operation in AWS Marketplace Metering
    ///    Service.</p>
    public let customerIdentifier: String?
    /// <p>The dimension for which the given entitlement applies. Dimensions represent categories of
    ///       capacity in a product and are specified when the product is listed in AWS
    ///       Marketplace.</p>
    public let dimension: String?
    /// <p>The expiration date represents the minimum date through which this entitlement is
    ///    expected to remain valid. For contractual products listed on AWS Marketplace, the expiration date
    ///    is the date at which the customer will renew or cancel their contract. Customers who are opting
    ///    to renew their contract will still have entitlements with an expiration date.</p>
    public let expirationDate: Date?
    /// <p>The product code for which the given entitlement applies. Product codes are provided by
    ///    AWS Marketplace when the product listing is created.</p>
    public let productCode: String?
    /// <p>The EntitlementValue represents the amount of capacity that the customer is entitled to
    ///    for the product.</p>
    public let value: EntitlementValue?

    public init (
        customerIdentifier: String? = nil,
        dimension: String? = nil,
        expirationDate: Date? = nil,
        productCode: String? = nil,
        value: EntitlementValue? = nil
    )
    {
        self.customerIdentifier = customerIdentifier
        self.dimension = dimension
        self.expirationDate = expirationDate
        self.productCode = productCode
        self.value = value
    }
}
