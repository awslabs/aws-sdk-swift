// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> A Web ACL defines a collection of rules to use to inspect and control web requests. Each rule has an action defined (allow, block, or count) for requests that match the statement of the rule. In the Web ACL, you assign a default action to take (allow, block) for any request that does not match any of the rules. The rules in a Web ACL can be a combination of the types <a>Rule</a>, <a>RuleGroup</a>, and managed rule group. You can associate a Web ACL with one or more AWS resources to protect. The resources can be Amazon CloudFront, an Amazon API Gateway REST API, an Application Load Balancer, or an AWS AppSync GraphQL API.  </p>
public struct WebACL: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.</p>
    public let aRN: String?
    /// <p>The web ACL capacity units (WCUs) currently being used by this web ACL. </p>
    ///          <p>AWS WAF uses WCUs to calculate and control the operating
    ///          resources that are used to run your rules, rule groups, and web ACLs. AWS WAF
    ///          calculates capacity differently for each rule type, to reflect the relative cost of each rule.
    ///          Simple rules that cost little to run use fewer WCUs than more complex rules
    /// 				that use more processing power.
    /// 				Rule group capacity is fixed at creation, which helps users plan their
    ///          web ACL WCU usage when they use a rule group.
    ///          The WCU limit for web ACLs is 1,500.  </p>
    public let capacity: Int
    /// <p>A map of custom response keys and content bodies. When you create a rule with a block action, you can send a custom response to the web request. You define these for the web ACL, and then use them in the rules and default actions that you define in the web ACL. </p>
    ///          <p>For information about customizing web requests and responses, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html">Customizing web requests and responses in AWS WAF</a> in the
    ///          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. </p>
    ///          <p>For information about the limits on count and size for custom request and response settings, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/limits.html">AWS WAF quotas</a> in the
    ///          <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. </p>
    public let customResponseBodies: [String:CustomResponseBody]?
    /// <p>The action to perform if none of the <code>Rules</code> contained in the <code>WebACL</code> match. </p>
    public let defaultAction: DefaultAction?
    /// <p>A description of the Web ACL that helps with identification. </p>
    public let description: String?
    /// <p>A unique identifier for the <code>WebACL</code>. This ID is returned in the responses to create and list commands. You use this ID to do things like get, update, and delete a <code>WebACL</code>.</p>
    public let id: String?
    /// <p>The label namespace prefix for this web ACL. All labels added by rules in this web ACL have this prefix. </p>
    ///          <ul>
    ///             <li>
    ///                <p>The syntax for the label namespace prefix for a web ACL is the following: </p>
    ///                <p>
    ///                   <code>awswaf:<account ID>:webacl:<web ACL name>:</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>When a rule with a label matches a web request, AWS WAF adds the fully qualified label to the request. A fully qualified label is made up of the label namespace from the rule group or web ACL where the rule is defined and the label from the rule, separated by a colon: </p>
    ///                <p>
    ///                   <code><label namespace>:<label from rule></code>
    ///                </p>
    ///
    ///             </li>
    ///          </ul>
    public let labelNamespace: String?
    /// <p>Indicates whether this web ACL is managed by AWS Firewall Manager. If true, then only AWS Firewall Manager can delete the web ACL or any Firewall Manager rule groups in the web ACL. </p>
    public let managedByFirewallManager: Bool
    /// <p>The name of the Web ACL. You cannot change the name of a Web ACL after you create it.</p>
    public let name: String?
    /// <p>The last set of rules for AWS WAF to process in the web ACL. This is defined in an AWS Firewall Manager WAF policy and
    ///            contains only rule group references. You can't alter these. Any rules and rule groups that you define for the web ACL are
    ///            prioritized before these. </p>
    ///          <p>In the Firewall Manager WAF policy, the Firewall Manager administrator can define a set of rule groups to run first in the web ACL
    ///            and a set of rule groups to run last. Within each set, the administrator prioritizes the rule groups, to
    ///           determine their relative processing order.</p>
    public let postProcessFirewallManagerRuleGroups: [FirewallManagerRuleGroup]?
    /// <p>The first set of rules for AWS WAF to process in the web ACL. This is defined in an AWS Firewall Manager WAF policy and
    ///            contains only rule group references. You can't alter these. Any rules and rule groups that you define for the web ACL are
    ///            prioritized after these. </p>
    ///          <p>In the Firewall Manager WAF policy, the Firewall Manager administrator can define a set of rule groups to run first in the web ACL
    ///            and a set of rule groups to run last. Within each set, the administrator prioritizes the rule groups, to
    ///           determine their relative processing order.</p>
    public let preProcessFirewallManagerRuleGroups: [FirewallManagerRuleGroup]?
    /// <p>The <a>Rule</a> statements used to identify the web requests that you
    ///          want to allow, block, or count. Each rule includes one top-level statement that AWS WAF uses to identify matching
    ///          web requests, and parameters that govern how AWS WAF handles them.
    ///       </p>
    public let rules: [Rule]?
    /// <p>Defines and enables Amazon CloudWatch metrics and web request sample collection.  </p>
    public let visibilityConfig: VisibilityConfig?

    public init (
        aRN: String? = nil,
        capacity: Int = 0,
        customResponseBodies: [String:CustomResponseBody]? = nil,
        defaultAction: DefaultAction? = nil,
        description: String? = nil,
        id: String? = nil,
        labelNamespace: String? = nil,
        managedByFirewallManager: Bool = false,
        name: String? = nil,
        postProcessFirewallManagerRuleGroups: [FirewallManagerRuleGroup]? = nil,
        preProcessFirewallManagerRuleGroups: [FirewallManagerRuleGroup]? = nil,
        rules: [Rule]? = nil,
        visibilityConfig: VisibilityConfig? = nil
    )
    {
        self.aRN = aRN
        self.capacity = capacity
        self.customResponseBodies = customResponseBodies
        self.defaultAction = defaultAction
        self.description = description
        self.id = id
        self.labelNamespace = labelNamespace
        self.managedByFirewallManager = managedByFirewallManager
        self.name = name
        self.postProcessFirewallManagerRuleGroups = postProcessFirewallManagerRuleGroups
        self.preProcessFirewallManagerRuleGroups = preProcessFirewallManagerRuleGroups
        self.rules = rules
        self.visibilityConfig = visibilityConfig
    }
}
