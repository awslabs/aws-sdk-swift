// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteRuleGroupInputBody: Equatable {
    public let name: String?
    public let scope: Scope?
    public let id: String?
    public let lockToken: String?
}

extension DeleteRuleGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case id = "Id"
        case lockToken = "LockToken"
        case name = "Name"
        case scope = "Scope"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let scopeDecoded = try containerValues.decodeIfPresent(Scope.self, forKey: .scope)
        scope = scopeDecoded
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let lockTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lockToken)
        lockToken = lockTokenDecoded
    }
}
