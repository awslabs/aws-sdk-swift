// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BlockAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customResponse = "CustomResponse"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customResponse = customResponse {
            try encodeContainer.encode(customResponse, forKey: .customResponse)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customResponseDecoded = try containerValues.decodeIfPresent(CustomResponse.self, forKey: .customResponse)
        customResponse = customResponseDecoded
    }
}
