// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VisibilityConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchMetricsEnabled = "CloudWatchMetricsEnabled"
        case metricName = "MetricName"
        case sampledRequestsEnabled = "SampledRequestsEnabled"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if cloudWatchMetricsEnabled != false {
            try encodeContainer.encode(cloudWatchMetricsEnabled, forKey: .cloudWatchMetricsEnabled)
        }
        if let metricName = metricName {
            try encodeContainer.encode(metricName, forKey: .metricName)
        }
        if sampledRequestsEnabled != false {
            try encodeContainer.encode(sampledRequestsEnabled, forKey: .sampledRequestsEnabled)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sampledRequestsEnabledDecoded = try containerValues.decode(Bool.self, forKey: .sampledRequestsEnabled)
        sampledRequestsEnabled = sampledRequestsEnabledDecoded
        let cloudWatchMetricsEnabledDecoded = try containerValues.decode(Bool.self, forKey: .cloudWatchMetricsEnabled)
        cloudWatchMetricsEnabled = cloudWatchMetricsEnabledDecoded
        let metricNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metricName)
        metricName = metricNameDecoded
    }
}
