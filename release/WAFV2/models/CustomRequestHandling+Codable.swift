// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomRequestHandling: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case insertHeaders = "InsertHeaders"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let insertHeaders = insertHeaders {
            var insertHeadersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .insertHeaders)
            for customhttpheaders0 in insertHeaders {
                try insertHeadersContainer.encode(customhttpheaders0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insertHeadersContainer = try containerValues.decodeIfPresent([CustomHTTPHeader].self, forKey: .insertHeaders)
        var insertHeadersDecoded0:[CustomHTTPHeader]? = nil
        if let insertHeadersContainer = insertHeadersContainer {
            insertHeadersDecoded0 = [CustomHTTPHeader]()
            for structure0 in insertHeadersContainer {
                insertHeadersDecoded0?.append(structure0)
            }
        }
        insertHeaders = insertHeadersDecoded0
    }
}
