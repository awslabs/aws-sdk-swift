// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>In a <a>GetSampledRequests</a> request, the <code>StartTime</code> and <code>EndTime</code> objects specify the time range
///          for which you want AWS WAF to return a sample of web requests.</p>
///          <p>You must specify the times in Coordinated Universal Time (UTC) format. UTC format includes the special designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>. You can specify any time range in the previous three hours.</p>
///          <p>In a <a>GetSampledRequests</a> response, the <code>StartTime</code> and <code>EndTime</code> objects specify the time range
///          for which AWS WAF actually returned a sample of web requests. AWS WAF gets the specified number of requests from among the first
///          5,000 requests that your AWS resource receives during the specified time period. If your resource receives more than 5,000
///          requests during that period, AWS WAF stops sampling after the 5,000th request. In that case, <code>EndTime</code>
///          is the time that AWS WAF received the 5,000th request.</p>
public struct TimeWindow: Equatable {
    /// <p>The end of the time range from which you want <code>GetSampledRequests</code> to return a sample of the requests that your
    ///          AWS resource received. You must specify the times in Coordinated Universal Time (UTC) format. UTC format includes the special designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>. You can specify any time range in the previous three hours.</p>
    public let endTime: Date?
    /// <p>The beginning of the time range from which you want <code>GetSampledRequests</code> to return a sample of the requests that your
    ///          AWS resource received. You must specify the times in Coordinated Universal Time (UTC) format. UTC format includes the special designator, <code>Z</code>. For example, <code>"2016-09-27T14:50Z"</code>. You can specify any time range in the previous three hours.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.startTime = startTime
    }
}
