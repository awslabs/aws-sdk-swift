// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWebACLsOutputBody: Equatable {
    public let nextMarker: String?
    public let webACLs: [WebACLSummary]?
}

extension ListWebACLsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextMarker = "NextMarker"
        case webACLs = "WebACLs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let webACLsContainer = try containerValues.decodeIfPresent([WebACLSummary].self, forKey: .webACLs)
        var webACLsDecoded0:[WebACLSummary]? = nil
        if let webACLsContainer = webACLsContainer {
            webACLsDecoded0 = [WebACLSummary]()
            for structure0 in webACLsContainer {
                webACLsDecoded0?.append(structure0)
            }
        }
        webACLs = webACLsDecoded0
    }
}
