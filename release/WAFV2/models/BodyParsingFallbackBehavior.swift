// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum BodyParsingFallbackBehavior {
    case evaluateAsString
    case match
    case noMatch
    case sdkUnknown(String)
}

extension BodyParsingFallbackBehavior : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BodyParsingFallbackBehavior] {
        return [
            .evaluateAsString,
            .match,
            .noMatch,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .evaluateAsString: return "EVALUATE_AS_STRING"
        case .match: return "MATCH"
        case .noMatch: return "NO_MATCH"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BodyParsingFallbackBehavior(rawValue: rawValue) ?? BodyParsingFallbackBehavior.sdkUnknown(rawValue)
    }
}
