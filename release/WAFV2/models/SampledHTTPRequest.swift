// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a single sampled web request. The response from <a>GetSampledRequests</a> includes a <code>SampledHTTPRequests</code> complex type that
///          appears as <code>SampledRequests</code> in the response syntax. <code>SampledHTTPRequests</code> contains an array of <code>SampledHTTPRequest</code> objects.</p>
public struct SampledHTTPRequest: Equatable {
    /// <p>The action for the <code>Rule</code> that the request matched: <code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>.</p>
    public let action: String?
    /// <p>Labels applied to the web request by matching rules. AWS WAF applies fully qualified labels to matching web requests. A fully qualified label is the concatenation of a label namespace and a rule label. The rule's rule group or web ACL defines the label namespace. </p>
    ///          <p>For example, <code>awswaf:111122223333:myRuleGroup:testRules:testNS1:testNS2:labelNameA</code> or <code>awswaf:managed:aws:managed-rule-set:header:encoding:utf8</code>.  </p>
    public let labels: [Label]?
    /// <p>A complex type that contains detailed information about the request.</p>
    public let request: HTTPRequest?
    /// <p>Custom request headers inserted by AWS WAF into the request, according to the custom request configuration for the matching rule action.</p>
    public let requestHeadersInserted: [HTTPHeader]?
    /// <p>The response code that was sent for the request.</p>
    public let responseCodeSent: Int?
    /// <p>The name of the <code>Rule</code> that the request matched. For managed rule groups, the format for this name is <code><vendor name>#<managed rule group name>#<rule name></code>. For your own rule
    ///          groups, the format for this name is <code><rule group name>#<rule name></code>. If the rule is not in a rule group, this field is absent. </p>
    public let ruleNameWithinRuleGroup: String?
    /// <p>The time at which AWS WAF received the request from your AWS resource, in Unix time format (in seconds).</p>
    public let timestamp: Date?
    /// <p>A value that indicates how one result in the response relates
    ///          proportionally to other results in the response.
    ///          For example, a result that has a weight of <code>2</code> represents roughly twice
    ///          as many web requests as a result
    ///          that has a weight of <code>1</code>.</p>
    public let weight: Int

    public init (
        action: String? = nil,
        labels: [Label]? = nil,
        request: HTTPRequest? = nil,
        requestHeadersInserted: [HTTPHeader]? = nil,
        responseCodeSent: Int? = nil,
        ruleNameWithinRuleGroup: String? = nil,
        timestamp: Date? = nil,
        weight: Int = 0
    )
    {
        self.action = action
        self.labels = labels
        self.request = request
        self.requestHeadersInserted = requestHeadersInserted
        self.responseCodeSent = responseCodeSent
        self.ruleNameWithinRuleGroup = ruleNameWithinRuleGroup
        self.timestamp = timestamp
        self.weight = weight
    }
}
