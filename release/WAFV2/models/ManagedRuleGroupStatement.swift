// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A rule statement used to run the rules that are defined in a managed rule group. To use this, provide the vendor name and the name of the rule group in this statement. You can retrieve the required names by calling <a>ListAvailableManagedRuleGroups</a>.</p>
///          <p>You can't nest a <code>ManagedRuleGroupStatement</code>, for example for use inside a <code>NotStatement</code> or <code>OrStatement</code>. It can only be referenced as a top-level statement within a rule.</p>
public struct ManagedRuleGroupStatement: Equatable {
    /// <p>The rules whose actions are set to <code>COUNT</code> by the web ACL, regardless of the action that is set on the rule. This effectively excludes the rule from acting on web requests.  </p>
    public let excludedRules: [ExcludedRule]?
    /// <p>The name of the managed rule group. You use this, along with the vendor name, to identify the rule group.</p>
    public let name: String?
    /// <p>The processing guidance for a <a>Rule</a>, used by AWS WAF to determine whether a web request matches the rule. </p>
    public let scopeDownStatement: Box<Statement>?
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify the rule group.</p>
    public let vendorName: String?

    public init (
        excludedRules: [ExcludedRule]? = nil,
        name: String? = nil,
        scopeDownStatement: Box<Statement>? = nil,
        vendorName: String? = nil
    )
    {
        self.excludedRules = excludedRules
        self.name = name
        self.scopeDownStatement = scopeDownStatement
        self.vendorName = vendorName
    }
}
