// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A rule group that's defined for an AWS Firewall Manager WAF policy.</p>
public struct FirewallManagerRuleGroup: Equatable {
    /// <p>The processing guidance for an AWS Firewall Manager rule. This is like a regular rule <a>Statement</a>, but it can only contain a rule group reference.</p>
    public let firewallManagerStatement: FirewallManagerStatement?
    /// <p>The name of the rule group. You cannot change the name of a rule group after you create it.</p>
    public let name: String?
    /// <p>The override action to apply to the rules in a rule group. Used only for rule statements that reference a rule group,
    ///            like <code>RuleGroupReferenceStatement</code> and <code>ManagedRuleGroupStatement</code>. </p>
    ///         <p>Set the override action to none to leave the rule actions in effect. Set it to count to only count matches, regardless of the rule action settings. </p>
    ///         <p>In a <a>Rule</a>, you must specify either this <code>OverrideAction</code> setting or the rule <code>Action</code> setting, but not both:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If the rule statement references a rule group, use this override action setting and not the action setting.  </p>
    ///             </li>
    ///             <li>
    ///                <p>If the rule statement does not reference a rule group, use the rule action setting and not this rule override action setting. </p>
    ///             </li>
    ///          </ul>
    public let overrideAction: OverrideAction?
    /// <p>If you define more than one rule group in the first or last Firewall Manager rule groups,
    ///           AWS WAF evaluates each request against the rule groups in order, starting from the lowest priority setting.
    ///          The priorities don't need to be consecutive, but they must all be different.</p>
    public let priority: Int
    /// <p>Defines and enables Amazon CloudWatch metrics and web request sample collection.  </p>
    public let visibilityConfig: VisibilityConfig?

    public init (
        firewallManagerStatement: FirewallManagerStatement? = nil,
        name: String? = nil,
        overrideAction: OverrideAction? = nil,
        priority: Int = 0,
        visibilityConfig: VisibilityConfig? = nil
    )
    {
        self.firewallManagerStatement = firewallManagerStatement
        self.name = name
        self.overrideAction = overrideAction
        self.priority = priority
        self.visibilityConfig = visibilityConfig
    }
}
