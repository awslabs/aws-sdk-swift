// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OverrideAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case count = "Count"
        case `none` = "None"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let count = count {
            try encodeContainer.encode(count, forKey: .count)
        }
        if let `none` = `none` {
            try encodeContainer.encode(`none`, forKey: .`none`)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let countDecoded = try containerValues.decodeIfPresent(CountAction.self, forKey: .count)
        count = countDecoded
        let noneDecoded = try containerValues.decodeIfPresent(NoneAction.self, forKey: .none)
        `none` = noneDecoded
    }
}
