// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Part of the response from <a>GetSampledRequests</a>.  This is a complex type that
///          appears as <code>Request</code> in the response syntax. <code>HTTPRequest</code> contains information about
///          one of the web requests. </p>
public struct HTTPRequest: Equatable {
    /// <p>The IP address that the request originated from. If the web ACL is associated with a CloudFront distribution,
    ///          this is the value of one of the following fields in CloudFront access logs:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>c-ip</code>, if the viewer did not use an HTTP proxy or a load balancer to send the request</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>x-forwarded-for</code>, if the viewer did use an HTTP proxy or a load balancer to send the request</p>
    ///             </li>
    ///          </ul>
    public let clientIP: String?
    /// <p>The two-letter country code for the country that the request originated from. For a current list of country codes,
    ///          see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a>.</p>
    public let country: String?
    /// <p>The HTTP version specified in the sampled web request, for example, <code>HTTP/1.1</code>.</p>
    public let hTTPVersion: String?
    /// <p>A complex type that contains the name and value for each header in the sampled web request.</p>
    public let headers: [HTTPHeader]?
    /// <p>The HTTP method specified in the sampled web request. </p>
    public let method: String?
    /// <p>The URI path of the request, which identifies the resource, for example, <code>/images/daily-ad.jpg</code>.</p>
    public let uRI: String?

    public init (
        clientIP: String? = nil,
        country: String? = nil,
        hTTPVersion: String? = nil,
        headers: [HTTPHeader]? = nil,
        method: String? = nil,
        uRI: String? = nil
    )
    {
        self.clientIP = clientIP
        self.country = country
        self.hTTPVersion = hTTPVersion
        self.headers = headers
        self.method = method
        self.uRI = uRI
    }
}
