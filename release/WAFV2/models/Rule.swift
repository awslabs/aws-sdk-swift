// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A single rule, which you can use in a <a>WebACL</a> or <a>RuleGroup</a> to identify
///          web requests that you want to allow, block, or count.
///          Each rule includes one top-level <a>Statement</a> that AWS WAF uses to identify matching
///          web requests, and parameters that govern how AWS WAF handles them. </p>
public struct Rule: Equatable {
    /// <p>The action that AWS WAF should take on a web request when it matches the rule statement. Settings at the web ACL level can override the rule action setting. </p>
    ///         <p>This is used only for rules whose statements do not reference a rule group. Rule statements that reference a rule group include <code>RuleGroupReferenceStatement</code> and <code>ManagedRuleGroupStatement</code>. </p>
    ///          <p>You must specify either this <code>Action</code> setting or the rule <code>OverrideAction</code> setting, but not both:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If the rule statement does not reference a rule group, use this rule action setting and not the rule override action setting. </p>
    ///             </li>
    ///             <li>
    ///                <p>If the rule statement references a rule group, use the override action setting and not this action setting.  </p>
    ///             </li>
    ///          </ul>
    public let action: RuleAction?
    /// <p>The name of the rule. You can't change the name of a <code>Rule</code> after you create it. </p>
    public let name: String?
    /// <p>The override action to apply to the rules in a rule group. Used only for rule statements that reference a rule group,
    ///            like <code>RuleGroupReferenceStatement</code> and <code>ManagedRuleGroupStatement</code>. </p>
    ///         <p>Set the override action to none to leave the rule actions in effect. Set it to count to only count matches, regardless of the rule action settings. </p>
    ///         <p>In a <a>Rule</a>, you must specify either this <code>OverrideAction</code> setting or the rule <code>Action</code> setting, but not both:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If the rule statement references a rule group, use this override action setting and not the action setting.  </p>
    ///             </li>
    ///             <li>
    ///                <p>If the rule statement does not reference a rule group, use the rule action setting and not this rule override action setting. </p>
    ///             </li>
    ///          </ul>
    public let overrideAction: OverrideAction?
    /// <p>If you define more than one <code>Rule</code> in a
    ///          <code>WebACL</code>, AWS WAF evaluates each request against the <code>Rules</code>
    ///          in order based on the value of <code>Priority</code>.
    ///          AWS WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.</p>
    public let priority: Int
    /// <p>Labels to apply to web requests that match the rule match statement. AWS WAF applies fully qualified labels to matching web requests. A fully qualified label is the concatenation of a label namespace and a rule label. The rule's rule group or web ACL defines the label namespace. </p>
    ///          <p>Rules that run after this rule in the web ACL can match against these labels using a <code>LabelMatchStatement</code>.</p>
    ///          <p>For each label, provide a case-sensitive string containing optional namespaces and a label name, according to the following guidelines:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Separate each component of the label with a colon. </p>
    ///             </li>
    ///             <li>
    ///                <p>Each namespace or name can have up to 128 characters.</p>
    ///             </li>
    ///             <li>
    ///                <p>You can specify up to 5 namespaces in a label.</p>
    ///             </li>
    ///             <li>
    ///                <p>Don't use the following reserved words in your label specification: <code>aws</code>, <code>waf</code>, <code>managed</code>, <code>rulegroup</code>, <code>webacl</code>, <code>regexpatternset</code>, or <code>ipset</code>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>For example, <code>myLabelName</code> or <code>nameSpace1:nameSpace2:myLabelName</code>.  </p>
    public let ruleLabels: [Label]?
    /// <p>The AWS WAF processing statement for the rule, for example <a>ByteMatchStatement</a> or <a>SizeConstraintStatement</a>. </p>
    public let statement: Statement?
    /// <p>Defines and enables Amazon CloudWatch metrics and web request sample collection.  </p>
    public let visibilityConfig: VisibilityConfig?

    public init (
        action: RuleAction? = nil,
        name: String? = nil,
        overrideAction: OverrideAction? = nil,
        priority: Int = 0,
        ruleLabels: [Label]? = nil,
        statement: Statement? = nil,
        visibilityConfig: VisibilityConfig? = nil
    )
    {
        self.action = action
        self.name = name
        self.overrideAction = overrideAction
        self.priority = priority
        self.ruleLabels = ruleLabels
        self.statement = statement
        self.visibilityConfig = visibilityConfig
    }
}
