// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that's reported by the web request origin. Commonly, this is the X-Forwarded-For (XFF) header, but you can specify any header name. </p>
///
///          <note>
///             <p>If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.</p>
///          </note>
///
///
///          <p>This configuration is used for <a>GeoMatchStatement</a> and <a>RateBasedStatement</a>.
///            For <a>IPSetReferenceStatement</a>, use <a>IPSetForwardedIPConfig</a> instead.  </p>
///          <p>AWS WAF only evaluates the first IP address found in the specified HTTP header. </p>
public struct ForwardedIPConfig: Equatable {
    /// <p>The match status to assign to the web request if the request doesn't have a valid IP address in the specified position.</p>
    ///
    ///          <note>
    ///             <p>If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.</p>
    ///          </note>
    ///
    ///          <p>You can specify the following fallback behaviors:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>MATCH</code> - Treat the web request as matching the rule statement. AWS WAF applies the rule action to the request.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NO_MATCH</code> - Treat the web request as not matching the rule statement.</p>
    ///             </li>
    ///          </ul>
    public let fallbackBehavior: FallbackBehavior?
    /// <p>The name of the HTTP header to use for the IP address. For example, to use the X-Forwarded-For (XFF) header, set this to <code>X-Forwarded-For</code>.</p>
    ///
    ///          <note>
    ///             <p>If the specified header isn't present in the request, AWS WAF doesn't apply the rule to the web request at all.</p>
    ///          </note>
    public let headerName: String?

    public init (
        fallbackBehavior: FallbackBehavior? = nil,
        headerName: String? = nil
    )
    {
        self.fallbackBehavior = fallbackBehavior
        self.headerName = headerName
    }
}
