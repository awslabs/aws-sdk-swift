// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForwardedIPConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fallbackBehavior = "FallbackBehavior"
        case headerName = "HeaderName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fallbackBehavior = fallbackBehavior {
            try encodeContainer.encode(fallbackBehavior.rawValue, forKey: .fallbackBehavior)
        }
        if let headerName = headerName {
            try encodeContainer.encode(headerName, forKey: .headerName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .headerName)
        headerName = headerNameDecoded
        let fallbackBehaviorDecoded = try containerValues.decodeIfPresent(FallbackBehavior.self, forKey: .fallbackBehavior)
        fallbackBehavior = fallbackBehaviorDecoded
    }
}
