// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A rule statement that defines a string match search for AWS WAF to apply to web requests. The byte match statement provides the bytes to search for, the location in requests that you want AWS WAF to search, and other settings. The bytes to search for are typically a string that corresponds with ASCII characters. In the AWS WAF console and the developer guide, this is refered to as a string match statement.</p>
public struct ByteMatchStatement: Equatable {
    /// <p>The part of a web request that you want AWS WAF to inspect. For more information, see <a>FieldToMatch</a>. </p>
    public let fieldToMatch: FieldToMatch?
    /// <p>The area within the portion of a web request that you want AWS WAF to search for <code>SearchString</code>. Valid values include the following:</p>
    ///          <p>
    ///             <b>CONTAINS</b>
    ///          </p>
    ///          <p>The specified part of the web request must include the value of <code>SearchString</code>, but the location doesn't matter.</p>		
    ///          <p>
    ///             <b>CONTAINS_WORD</b>
    ///          </p>
    ///          <p>The specified part of the web request must include the value of <code>SearchString</code>, and
    ///          <code>SearchString</code> must contain only alphanumeric characters or underscore (A-Z, a-z, 0-9, or _). In addition,
    ///          <code>SearchString</code> must be a word, which means that both of the following are true:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>SearchString</code> is at the beginning of the specified part of the web request or is
    ///                   preceded by a character other than an alphanumeric character or underscore (_).
    ///                   Examples include the value of a header and <code>;BadBot</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SearchString</code> is at the end of the specified part of the web request or is
    ///                   followed by a character other than an alphanumeric character or underscore (_), for example,
    ///                   <code>BadBot;</code> and <code>-BadBot;</code>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>
    ///             <b>EXACTLY</b>
    ///          </p>
    ///          <p>The value of the specified part of the web request must exactly match the value of <code>SearchString</code>.</p>
    ///          <p>
    ///             <b>STARTS_WITH</b>
    ///          </p>
    ///          <p>The value of <code>SearchString</code> must appear at the beginning of the specified part of the web request.</p>		
    ///          <p>
    ///             <b>ENDS_WITH</b>
    ///          </p>
    ///          <p>The value of <code>SearchString</code> must appear at the end of the specified part of the web request.</p>
    public let positionalConstraint: PositionalConstraint?
    /// <p>A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in <a>FieldToMatch</a>. The maximum length of the value is 50 bytes.</p>
    ///          <p>Valid values depend on the component that you specify for inspection in <code>FieldToMatch</code>:</p>		
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Method</code>: The HTTP method that you want AWS WAF to search for. This indicates the type of operation specified in the request. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>UriPath</code>: The value that you want AWS WAF to search for in the URI path,
    ///                for example, <code>/images/daily-ad.jpg</code>. </p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>If <code>SearchString</code> includes alphabetic characters A-Z and a-z, note that the value is case sensitive.</p>
    ///          <p>
    ///             <b>If you're using the AWS WAF API</b>
    ///          </p>
    ///          <p>Specify a base64-encoded version of the value. The maximum length of the value before you base64-encode it is 50 bytes.</p>
    ///          <p>For example, suppose the value of <code>Type</code> is <code>HEADER</code> and the
    ///          value of <code>Data</code> is <code>User-Agent</code>. If you want to search the
    ///          <code>User-Agent</code> header for the value <code>BadBot</code>, you base64-encode
    ///          <code>BadBot</code> using MIME
    ///          base64-encoding
    ///          and include the resulting value, <code>QmFkQm90</code>, in the value of
    ///          <code>SearchString</code>.</p>
    ///          <p>
    ///             <b>If you're using the AWS CLI or one of the AWS SDKs</b>
    ///          </p>
    ///          <p>The value that you want AWS WAF to search for. The SDK automatically base64 encodes the value.</p>
    public let searchString: Data?
    /// <p>Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.
    ///          If you specify one or more transformations in a rule statement, AWS WAF performs all transformations on the
    ///          content of the request component identified by <code>FieldToMatch</code>, starting from the lowest priority setting, before inspecting the content for a match.</p>
    public let textTransformations: [TextTransformation]?

    public init (
        fieldToMatch: FieldToMatch? = nil,
        positionalConstraint: PositionalConstraint? = nil,
        searchString: Data? = nil,
        textTransformations: [TextTransformation]? = nil
    )
    {
        self.fieldToMatch = fieldToMatch
        self.positionalConstraint = positionalConstraint
        self.searchString = searchString
        self.textTransformations = textTransformations
    }
}
