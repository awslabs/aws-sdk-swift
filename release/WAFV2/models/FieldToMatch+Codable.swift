// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FieldToMatch: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case allQueryArguments = "AllQueryArguments"
        case body = "Body"
        case jsonBody = "JsonBody"
        case method = "Method"
        case queryString = "QueryString"
        case singleHeader = "SingleHeader"
        case singleQueryArgument = "SingleQueryArgument"
        case uriPath = "UriPath"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let allQueryArguments = allQueryArguments {
            try encodeContainer.encode(allQueryArguments, forKey: .allQueryArguments)
        }
        if let body = body {
            try encodeContainer.encode(body, forKey: .body)
        }
        if let jsonBody = jsonBody {
            try encodeContainer.encode(jsonBody, forKey: .jsonBody)
        }
        if let method = method {
            try encodeContainer.encode(method, forKey: .method)
        }
        if let queryString = queryString {
            try encodeContainer.encode(queryString, forKey: .queryString)
        }
        if let singleHeader = singleHeader {
            try encodeContainer.encode(singleHeader, forKey: .singleHeader)
        }
        if let singleQueryArgument = singleQueryArgument {
            try encodeContainer.encode(singleQueryArgument, forKey: .singleQueryArgument)
        }
        if let uriPath = uriPath {
            try encodeContainer.encode(uriPath, forKey: .uriPath)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let singleHeaderDecoded = try containerValues.decodeIfPresent(SingleHeader.self, forKey: .singleHeader)
        singleHeader = singleHeaderDecoded
        let singleQueryArgumentDecoded = try containerValues.decodeIfPresent(SingleQueryArgument.self, forKey: .singleQueryArgument)
        singleQueryArgument = singleQueryArgumentDecoded
        let allQueryArgumentsDecoded = try containerValues.decodeIfPresent(AllQueryArguments.self, forKey: .allQueryArguments)
        allQueryArguments = allQueryArgumentsDecoded
        let uriPathDecoded = try containerValues.decodeIfPresent(UriPath.self, forKey: .uriPath)
        uriPath = uriPathDecoded
        let queryStringDecoded = try containerValues.decodeIfPresent(QueryString.self, forKey: .queryString)
        queryString = queryStringDecoded
        let bodyDecoded = try containerValues.decodeIfPresent(Body.self, forKey: .body)
        body = bodyDecoded
        let methodDecoded = try containerValues.decodeIfPresent(Method.self, forKey: .method)
        method = methodDecoded
        let jsonBodyDecoded = try containerValues.decodeIfPresent(JsonBody.self, forKey: .jsonBody)
        jsonBody = jsonBodyDecoded
    }
}
