// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableManagedRuleGroupsOutputBody: Equatable {
    public let nextMarker: String?
    public let managedRuleGroups: [ManagedRuleGroupSummary]?
}

extension ListAvailableManagedRuleGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case managedRuleGroups = "ManagedRuleGroups"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let managedRuleGroupsContainer = try containerValues.decodeIfPresent([ManagedRuleGroupSummary].self, forKey: .managedRuleGroups)
        var managedRuleGroupsDecoded0:[ManagedRuleGroupSummary]? = nil
        if let managedRuleGroupsContainer = managedRuleGroupsContainer {
            managedRuleGroupsDecoded0 = [ManagedRuleGroupSummary]()
            for structure0 in managedRuleGroupsContainer {
                managedRuleGroupsDecoded0?.append(structure0)
            }
        }
        managedRuleGroups = managedRuleGroupsDecoded0
    }
}
