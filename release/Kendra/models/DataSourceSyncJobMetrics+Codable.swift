// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSourceSyncJobMetrics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case documentsAdded = "DocumentsAdded"
        case documentsDeleted = "DocumentsDeleted"
        case documentsFailed = "DocumentsFailed"
        case documentsModified = "DocumentsModified"
        case documentsScanned = "DocumentsScanned"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let documentsAdded = documentsAdded {
            try encodeContainer.encode(documentsAdded, forKey: .documentsAdded)
        }
        if let documentsDeleted = documentsDeleted {
            try encodeContainer.encode(documentsDeleted, forKey: .documentsDeleted)
        }
        if let documentsFailed = documentsFailed {
            try encodeContainer.encode(documentsFailed, forKey: .documentsFailed)
        }
        if let documentsModified = documentsModified {
            try encodeContainer.encode(documentsModified, forKey: .documentsModified)
        }
        if let documentsScanned = documentsScanned {
            try encodeContainer.encode(documentsScanned, forKey: .documentsScanned)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentsAddedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentsAdded)
        documentsAdded = documentsAddedDecoded
        let documentsModifiedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentsModified)
        documentsModified = documentsModifiedDecoded
        let documentsDeletedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentsDeleted)
        documentsDeleted = documentsDeletedDecoded
        let documentsFailedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentsFailed)
        documentsFailed = documentsFailedDecoded
        let documentsScannedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentsScanned)
        documentsScanned = documentsScannedDecoded
    }
}
