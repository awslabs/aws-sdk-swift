// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RelevanceFeedback: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case relevanceValue = "RelevanceValue"
        case resultId = "ResultId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let relevanceValue = relevanceValue {
            try encodeContainer.encode(relevanceValue.rawValue, forKey: .relevanceValue)
        }
        if let resultId = resultId {
            try encodeContainer.encode(resultId, forKey: .resultId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resultId)
        resultId = resultIdDecoded
        let relevanceValueDecoded = try containerValues.decodeIfPresent(RelevanceType.self, forKey: .relevanceValue)
        relevanceValue = relevanceValueDecoded
    }
}
