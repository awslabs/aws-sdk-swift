// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CapacityUnitsConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case queryCapacityUnits = "QueryCapacityUnits"
        case storageCapacityUnits = "StorageCapacityUnits"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let queryCapacityUnits = queryCapacityUnits {
            try encodeContainer.encode(queryCapacityUnits, forKey: .queryCapacityUnits)
        }
        if let storageCapacityUnits = storageCapacityUnits {
            try encodeContainer.encode(storageCapacityUnits, forKey: .storageCapacityUnits)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let storageCapacityUnitsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .storageCapacityUnits)
        storageCapacityUnits = storageCapacityUnitsDecoded
        let queryCapacityUnitsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .queryCapacityUnits)
        queryCapacityUnits = queryCapacityUnitsDecoded
    }
}
