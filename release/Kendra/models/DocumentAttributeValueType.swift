// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DocumentAttributeValueType {
    case dateValue
    case longValue
    case stringListValue
    case stringValue
    case sdkUnknown(String)
}

extension DocumentAttributeValueType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DocumentAttributeValueType] {
        return [
            .dateValue,
            .longValue,
            .stringListValue,
            .stringValue,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dateValue: return "DATE_VALUE"
        case .longValue: return "LONG_VALUE"
        case .stringListValue: return "STRING_LIST_VALUE"
        case .stringValue: return "STRING_VALUE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DocumentAttributeValueType(rawValue: rawValue) ?? DocumentAttributeValueType.sdkUnknown(rawValue)
    }
}
