// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchPutDocumentInputBody: Equatable {
    public let indexId: String?
    public let roleArn: String?
    public let documents: [Document]?
}

extension BatchPutDocumentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case documents = "Documents"
        case indexId = "IndexId"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let documentsContainer = try containerValues.decodeIfPresent([Document].self, forKey: .documents)
        var documentsDecoded0:[Document]? = nil
        if let documentsContainer = documentsContainer {
            documentsDecoded0 = [Document]()
            for structure0 in documentsContainer {
                documentsDecoded0?.append(structure0)
            }
        }
        documents = documentsDecoded0
    }
}
