// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeQuerySuggestionsConfigOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: DescribeQuerySuggestionsConfigOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.includeQueriesWithoutUserInformation = output.includeQueriesWithoutUserInformation
            self.lastClearTime = output.lastClearTime
            self.lastSuggestionsBuildTime = output.lastSuggestionsBuildTime
            self.minimumNumberOfQueryingUsers = output.minimumNumberOfQueryingUsers
            self.minimumQueryCount = output.minimumQueryCount
            self.mode = output.mode
            self.queryLogLookBackWindowInDays = output.queryLogLookBackWindowInDays
            self.status = output.status
            self.totalSuggestionsCount = output.totalSuggestionsCount
        } else {
            self.includeQueriesWithoutUserInformation = nil
            self.lastClearTime = nil
            self.lastSuggestionsBuildTime = nil
            self.minimumNumberOfQueryingUsers = nil
            self.minimumQueryCount = nil
            self.mode = nil
            self.queryLogLookBackWindowInDays = nil
            self.status = nil
            self.totalSuggestionsCount = nil
        }
    }
}
