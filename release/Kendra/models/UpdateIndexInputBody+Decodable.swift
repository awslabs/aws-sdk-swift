// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateIndexInputBody: Equatable {
    public let id: String?
    public let name: String?
    public let roleArn: String?
    public let description: String?
    public let documentMetadataConfigurationUpdates: [DocumentMetadataConfiguration]?
    public let capacityUnits: CapacityUnitsConfiguration?
    public let userTokenConfigurations: [UserTokenConfiguration]?
    public let userContextPolicy: UserContextPolicy?
}

extension UpdateIndexInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityUnits = "CapacityUnits"
        case description = "Description"
        case documentMetadataConfigurationUpdates = "DocumentMetadataConfigurationUpdates"
        case id = "Id"
        case name = "Name"
        case roleArn = "RoleArn"
        case userContextPolicy = "UserContextPolicy"
        case userTokenConfigurations = "UserTokenConfigurations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let documentMetadataConfigurationUpdatesContainer = try containerValues.decodeIfPresent([DocumentMetadataConfiguration].self, forKey: .documentMetadataConfigurationUpdates)
        var documentMetadataConfigurationUpdatesDecoded0:[DocumentMetadataConfiguration]? = nil
        if let documentMetadataConfigurationUpdatesContainer = documentMetadataConfigurationUpdatesContainer {
            documentMetadataConfigurationUpdatesDecoded0 = [DocumentMetadataConfiguration]()
            for structure0 in documentMetadataConfigurationUpdatesContainer {
                documentMetadataConfigurationUpdatesDecoded0?.append(structure0)
            }
        }
        documentMetadataConfigurationUpdates = documentMetadataConfigurationUpdatesDecoded0
        let capacityUnitsDecoded = try containerValues.decodeIfPresent(CapacityUnitsConfiguration.self, forKey: .capacityUnits)
        capacityUnits = capacityUnitsDecoded
        let userTokenConfigurationsContainer = try containerValues.decodeIfPresent([UserTokenConfiguration].self, forKey: .userTokenConfigurations)
        var userTokenConfigurationsDecoded0:[UserTokenConfiguration]? = nil
        if let userTokenConfigurationsContainer = userTokenConfigurationsContainer {
            userTokenConfigurationsDecoded0 = [UserTokenConfiguration]()
            for structure0 in userTokenConfigurationsContainer {
                userTokenConfigurationsDecoded0?.append(structure0)
            }
        }
        userTokenConfigurations = userTokenConfigurationsDecoded0
        let userContextPolicyDecoded = try containerValues.decodeIfPresent(UserContextPolicy.self, forKey: .userContextPolicy)
        userContextPolicy = userContextPolicyDecoded
    }
}
