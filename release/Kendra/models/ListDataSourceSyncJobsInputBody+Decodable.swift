// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDataSourceSyncJobsInputBody: Equatable {
    public let id: String?
    public let indexId: String?
    public let nextToken: String?
    public let maxResults: Int?
    public let startTimeFilter: TimeRange?
    public let statusFilter: DataSourceSyncJobStatus?
}

extension ListDataSourceSyncJobsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case id = "Id"
        case indexId = "IndexId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case startTimeFilter = "StartTimeFilter"
        case statusFilter = "StatusFilter"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let indexIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let startTimeFilterDecoded = try containerValues.decodeIfPresent(TimeRange.self, forKey: .startTimeFilter)
        startTimeFilter = startTimeFilterDecoded
        let statusFilterDecoded = try containerValues.decodeIfPresent(DataSourceSyncJobStatus.self, forKey: .statusFilter)
        statusFilter = statusFilterDecoded
    }
}
