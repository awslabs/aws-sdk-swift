// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFaqInput: Equatable {
    /// <p>A token that you provide to identify the request to create a FAQ. Multiple calls to
    ///             the <code>CreateFaqRequest</code> operation with the same client token will create only
    ///             one FAQ. </p>
    public var clientToken: String?
    /// <p>A description of the FAQ.</p>
    public let description: String?
    /// <p>The format of the input file. You can choose between a basic CSV format, a CSV format
    ///             that includes customs attributes in a header, and a JSON format that includes custom
    ///             attributes.</p>
    ///         <p>The format must match the format of the file stored in the S3 bucket identified in the
    ///                 <code>S3Path</code> parameter.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html">Adding questions and
    ///             answers</a>.</p>
    public let fileFormat: FaqFileFormat?
    /// <p>The identifier of the index that contains the FAQ.</p>
    public let indexId: String?
    /// <p>The name that should be associated with the FAQ.</p>
    public let name: String?
    /// <p>The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that
    ///             contains the FAQs. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.</p>
    public let roleArn: String?
    /// <p>The S3 location of the FAQ input data.</p>
    public let s3Path: S3Path?
    /// <p>A list of key-value pairs that identify the FAQ. You can use the tags to identify and
    ///             organize your resources and to control access to resources.</p>
    public let tags: [Tag]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        fileFormat: FaqFileFormat? = nil,
        indexId: String? = nil,
        name: String? = nil,
        roleArn: String? = nil,
        s3Path: S3Path? = nil,
        tags: [Tag]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.fileFormat = fileFormat
        self.indexId = indexId
        self.name = name
        self.roleArn = roleArn
        self.s3Path = s3Path
        self.tags = tags
    }
}
