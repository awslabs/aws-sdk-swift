// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SuggestionHighlight: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case beginOffset = "BeginOffset"
        case endOffset = "EndOffset"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let beginOffset = beginOffset {
            try encodeContainer.encode(beginOffset, forKey: .beginOffset)
        }
        if let endOffset = endOffset {
            try encodeContainer.encode(endOffset, forKey: .endOffset)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let beginOffsetDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .beginOffset)
        beginOffset = beginOffsetDecoded
        let endOffsetDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .endOffset)
        endOffset = endOffsetDecoded
    }
}
