// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ScoreAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case scoreConfidence = "ScoreConfidence"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let scoreConfidence = scoreConfidence {
            try encodeContainer.encode(scoreConfidence.rawValue, forKey: .scoreConfidence)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scoreConfidenceDecoded = try containerValues.decodeIfPresent(ScoreConfidence.self, forKey: .scoreConfidence)
        scoreConfidence = scoreConfidenceDecoded
    }
}
