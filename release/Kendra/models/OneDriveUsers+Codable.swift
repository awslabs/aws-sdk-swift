// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OneDriveUsers: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case oneDriveUserList = "OneDriveUserList"
        case oneDriveUserS3Path = "OneDriveUserS3Path"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let oneDriveUserList = oneDriveUserList {
            var oneDriveUserListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .oneDriveUserList)
            for onedriveuserlist0 in oneDriveUserList {
                try oneDriveUserListContainer.encode(onedriveuserlist0)
            }
        }
        if let oneDriveUserS3Path = oneDriveUserS3Path {
            try encodeContainer.encode(oneDriveUserS3Path, forKey: .oneDriveUserS3Path)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let oneDriveUserListContainer = try containerValues.decodeIfPresent([String].self, forKey: .oneDriveUserList)
        var oneDriveUserListDecoded0:[String]? = nil
        if let oneDriveUserListContainer = oneDriveUserListContainer {
            oneDriveUserListDecoded0 = [String]()
            for string0 in oneDriveUserListContainer {
                oneDriveUserListDecoded0?.append(string0)
            }
        }
        oneDriveUserList = oneDriveUserListDecoded0
        let oneDriveUserS3PathDecoded = try containerValues.decodeIfPresent(S3Path.self, forKey: .oneDriveUserS3Path)
        oneDriveUserS3Path = oneDriveUserS3PathDecoded
    }
}
