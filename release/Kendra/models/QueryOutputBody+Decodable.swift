// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct QueryOutputBody: Equatable {
    public let queryId: String?
    public let resultItems: [QueryResultItem]?
    public let facetResults: [FacetResult]?
    public let totalNumberOfResults: Int?
}

extension QueryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case facetResults = "FacetResults"
        case queryId = "QueryId"
        case resultItems = "ResultItems"
        case totalNumberOfResults = "TotalNumberOfResults"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queryId)
        queryId = queryIdDecoded
        let resultItemsContainer = try containerValues.decodeIfPresent([QueryResultItem].self, forKey: .resultItems)
        var resultItemsDecoded0:[QueryResultItem]? = nil
        if let resultItemsContainer = resultItemsContainer {
            resultItemsDecoded0 = [QueryResultItem]()
            for structure0 in resultItemsContainer {
                resultItemsDecoded0?.append(structure0)
            }
        }
        resultItems = resultItemsDecoded0
        let facetResultsContainer = try containerValues.decodeIfPresent([FacetResult].self, forKey: .facetResults)
        var facetResultsDecoded0:[FacetResult]? = nil
        if let facetResultsContainer = facetResultsContainer {
            facetResultsDecoded0 = [FacetResult]()
            for structure0 in facetResultsContainer {
                facetResultsDecoded0?.append(structure0)
            }
        }
        facetResults = facetResultsDecoded0
        let totalNumberOfResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalNumberOfResults)
        totalNumberOfResults = totalNumberOfResultsDecoded
    }
}
