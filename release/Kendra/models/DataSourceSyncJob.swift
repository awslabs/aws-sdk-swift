// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information about a synchronization job.</p>
public struct DataSourceSyncJob: Equatable {
    /// <p>If the reason that the synchronization failed is due to an error
    ///             with the underlying data source, this field contains a code that
    ///             identifies the error.</p>
    public let dataSourceErrorCode: String?
    /// <p>The UNIX datetime that the synchronization job was
    ///             completed.</p>
    public let endTime: Date?
    /// <p>If the <code>Status</code> field is set to <code>FAILED</code>,
    ///             the <code>ErrorCode</code> field contains a the reason that the
    ///             synchronization failed.</p>
    public let errorCode: ErrorCode?
    /// <p>If the <code>Status</code> field is set to <code>ERROR</code>, the
    ///                 <code>ErrorMessage</code> field contains a description of the
    ///             error that caused the synchronization to fail.</p>
    public let errorMessage: String?
    /// <p>A unique identifier for the synchronization job.</p>
    public let executionId: String?
    /// <p>Maps a batch delete document request to a specific data source
    ///             sync job. This is optional and should only be supplied when
    ///             documents are deleted by a data source connector.</p>
    public let metrics: DataSourceSyncJobMetrics?
    /// <p>The UNIX datetime that the synchronization job was started.</p>
    public let startTime: Date?
    /// <p>The execution status of the synchronization job. When the
    ///                 <code>Status</code> field is set to <code>SUCCEEDED</code>, the
    ///             synchronization job is done. If the status code is set to
    ///                 <code>FAILED</code>, the <code>ErrorCode</code> and
    ///                 <code>ErrorMessage</code> fields give you the reason for the
    ///             failure.</p>
    public let status: DataSourceSyncJobStatus?

    public init (
        dataSourceErrorCode: String? = nil,
        endTime: Date? = nil,
        errorCode: ErrorCode? = nil,
        errorMessage: String? = nil,
        executionId: String? = nil,
        metrics: DataSourceSyncJobMetrics? = nil,
        startTime: Date? = nil,
        status: DataSourceSyncJobStatus? = nil
    )
    {
        self.dataSourceErrorCode = dataSourceErrorCode
        self.endTime = endTime
        self.errorCode = errorCode
        self.errorMessage = errorMessage
        self.executionId = executionId
        self.metrics = metrics
        self.startTime = startTime
        self.status = status
    }
}
