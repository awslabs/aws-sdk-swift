// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateQuerySuggestionsConfigInputBody: Equatable {
    public let indexId: String?
    public let mode: Mode?
    public let queryLogLookBackWindowInDays: Int?
    public let includeQueriesWithoutUserInformation: Bool?
    public let minimumNumberOfQueryingUsers: Int?
    public let minimumQueryCount: Int?
}

extension UpdateQuerySuggestionsConfigInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case includeQueriesWithoutUserInformation = "IncludeQueriesWithoutUserInformation"
        case indexId = "IndexId"
        case minimumNumberOfQueryingUsers = "MinimumNumberOfQueryingUsers"
        case minimumQueryCount = "MinimumQueryCount"
        case mode = "Mode"
        case queryLogLookBackWindowInDays = "QueryLogLookBackWindowInDays"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .indexId)
        indexId = indexIdDecoded
        let modeDecoded = try containerValues.decodeIfPresent(Mode.self, forKey: .mode)
        mode = modeDecoded
        let queryLogLookBackWindowInDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .queryLogLookBackWindowInDays)
        queryLogLookBackWindowInDays = queryLogLookBackWindowInDaysDecoded
        let includeQueriesWithoutUserInformationDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .includeQueriesWithoutUserInformation)
        includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformationDecoded
        let minimumNumberOfQueryingUsersDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .minimumNumberOfQueryingUsers)
        minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsersDecoded
        let minimumQueryCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .minimumQueryCount)
        minimumQueryCount = minimumQueryCountDecoded
    }
}
