// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides configuration information for data sources that connect
///             to Confluence.</p>
public struct ConfluenceConfiguration: Equatable {
    /// <p>Specifies configuration information for indexing attachments to
    ///             Confluence blogs and pages.</p>
    public let attachmentConfiguration: ConfluenceAttachmentConfiguration?
    /// <p> Specifies configuration information for indexing Confluence
    ///             blogs.</p>
    public let blogConfiguration: ConfluenceBlogConfiguration?
    /// <p>A list of regular expression patterns that apply to a URL on the
    ///             Confluence server. An exclusion pattern can apply to a blog post, a
    ///             page, a space, or an attachment. Items that match the pattern are
    ///             excluded from the index. Items that don't match the pattern are
    ///             included in the index. If a item matches both an exclusion pattern
    ///             and an inclusion pattern, the item isn't included in the
    ///             index.</p>
    public let exclusionPatterns: [String]?
    /// <p>A list of regular expression patterns that apply to a URL on the
    ///             Confluence server. An inclusion pattern can apply to a blog post, a
    ///             page, a space, or an attachment. Items that match the patterns are
    ///             included in the index. Items that don't match the pattern are
    ///             excluded from the index. If an item matches both an inclusion
    ///             pattern and an exclusion pattern, the item isn't included in the
    ///             index.</p>
    public let inclusionPatterns: [String]?
    /// <p>Specifies configuration information for indexing Confluence
    ///             pages.</p>
    public let pageConfiguration: ConfluencePageConfiguration?
    /// <p>The Amazon Resource Name (ARN) of an AWS Secrets Manager secret
    ///             that contains the key/value pairs required to connect to your
    ///             Confluence server. The secret must contain a JSON structure with the
    ///             following keys:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>username - The user name or email address of a user with
    ///                     administrative privileges for the Confluence server.</p>
    ///             </li>
    ///             <li>
    ///                 <p>password - The password associated with the user logging
    ///                     in to the Confluence server.</p>
    ///             </li>
    ///          </ul>
    public let secretArn: String?
    /// <p>The URL of your Confluence instance. Use the full URL of the
    ///             server. For example, <code>https://server.example.com:port/</code>.
    ///             You can also use an IP address, for example,
    ///                 <code>https://192.168.1.113/</code>.</p>
    public let serverUrl: String?
    /// <p>Specifies configuration information for indexing Confluence
    ///             spaces.</p>
    public let spaceConfiguration: ConfluenceSpaceConfiguration?
    /// <p>Specifies the version of the Confluence installation that you are
    ///             connecting to.</p>
    public let version: ConfluenceVersion?
    /// <p>Specifies the information for connecting to an Amazon VPC.</p>
    public let vpcConfiguration: DataSourceVpcConfiguration?

    public init (
        attachmentConfiguration: ConfluenceAttachmentConfiguration? = nil,
        blogConfiguration: ConfluenceBlogConfiguration? = nil,
        exclusionPatterns: [String]? = nil,
        inclusionPatterns: [String]? = nil,
        pageConfiguration: ConfluencePageConfiguration? = nil,
        secretArn: String? = nil,
        serverUrl: String? = nil,
        spaceConfiguration: ConfluenceSpaceConfiguration? = nil,
        version: ConfluenceVersion? = nil,
        vpcConfiguration: DataSourceVpcConfiguration? = nil
    )
    {
        self.attachmentConfiguration = attachmentConfiguration
        self.blogConfiguration = blogConfiguration
        self.exclusionPatterns = exclusionPatterns
        self.inclusionPatterns = inclusionPatterns
        self.pageConfiguration = pageConfiguration
        self.secretArn = secretArn
        self.serverUrl = serverUrl
        self.spaceConfiguration = spaceConfiguration
        self.version = version
        self.vpcConfiguration = vpcConfiguration
    }
}
