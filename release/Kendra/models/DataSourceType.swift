// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DataSourceType {
    case confluence
    case custom
    case database
    case googledrive
    case onedrive
    case s3
    case salesforce
    case servicenow
    case sharepoint
    case sdkUnknown(String)
}

extension DataSourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DataSourceType] {
        return [
            .confluence,
            .custom,
            .database,
            .googledrive,
            .onedrive,
            .s3,
            .salesforce,
            .servicenow,
            .sharepoint,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .confluence: return "CONFLUENCE"
        case .custom: return "CUSTOM"
        case .database: return "DATABASE"
        case .googledrive: return "GOOGLEDRIVE"
        case .onedrive: return "ONEDRIVE"
        case .s3: return "S3"
        case .salesforce: return "SALESFORCE"
        case .servicenow: return "SERVICENOW"
        case .sharepoint: return "SHAREPOINT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DataSourceType(rawValue: rawValue) ?? DataSourceType.sdkUnknown(rawValue)
    }
}
