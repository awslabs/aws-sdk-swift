// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the configuration for indexing Confluence spaces.</p>
public struct ConfluenceSpaceConfiguration: Equatable {
    /// <p>Specifies whether Amazon Kendra should index archived spaces.</p>
    public let crawlArchivedSpaces: Bool
    /// <p>Specifies whether Amazon Kendra should index personal spaces. Users can
    ///             add restrictions to items in personal spaces. If personal spaces are
    ///             indexed, queries without user context information may return
    ///             restricted items from a personal space in their results. For more
    ///             information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on
    ///                 user context</a>.</p>
    public let crawlPersonalSpaces: Bool
    /// <p>A list of space keys of Confluence spaces. If you include a key,
    ///             the blogs, documents, and attachments in the space are not indexed.
    ///             If a space is in both the <code>ExcludeSpaces</code> and the
    ///                 <code>IncludeSpaces</code> list, the space is excluded.</p>
    public let excludeSpaces: [String]?
    /// <p>A list of space keys for Confluence spaces. If you include a key,
    ///             the blogs, documents, and attachments in the space are indexed.
    ///             Spaces that aren't in the list aren't indexed. A space in the list
    ///             must exist. Otherwise, Amazon Kendra logs an error when the data source is
    ///             synchronized. If a space is in both the <code>IncludeSpaces</code>
    ///             and the <code>ExcludeSpaces</code> list, the space is
    ///             excluded.</p>
    public let includeSpaces: [String]?
    /// <p>Defines how space metadata fields should be mapped to index
    ///             fields. Before you can map a field, you must first create an index
    ///             field with a matching type using the console or the
    ///                 <code>UpdateIndex</code> operation.</p>
    ///         <p>If you specify the <code>SpaceFieldMappings</code> parameter, you
    ///             must specify at least one field mapping.</p>
    public let spaceFieldMappings: [ConfluenceSpaceToIndexFieldMapping]?

    public init (
        crawlArchivedSpaces: Bool = false,
        crawlPersonalSpaces: Bool = false,
        excludeSpaces: [String]? = nil,
        includeSpaces: [String]? = nil,
        spaceFieldMappings: [ConfluenceSpaceToIndexFieldMapping]? = nil
    )
    {
        self.crawlArchivedSpaces = crawlArchivedSpaces
        self.crawlPersonalSpaces = crawlPersonalSpaces
        self.excludeSpaces = excludeSpaces
        self.includeSpaces = includeSpaces
        self.spaceFieldMappings = spaceFieldMappings
    }
}
