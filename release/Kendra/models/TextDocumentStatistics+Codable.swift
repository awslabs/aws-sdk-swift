// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TextDocumentStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case indexedTextBytes = "IndexedTextBytes"
        case indexedTextDocumentsCount = "IndexedTextDocumentsCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if indexedTextBytes != 0 {
            try encodeContainer.encode(indexedTextBytes, forKey: .indexedTextBytes)
        }
        if indexedTextDocumentsCount != 0 {
            try encodeContainer.encode(indexedTextDocumentsCount, forKey: .indexedTextDocumentsCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let indexedTextDocumentsCountDecoded = try containerValues.decode(Int.self, forKey: .indexedTextDocumentsCount)
        indexedTextDocumentsCount = indexedTextDocumentsCountDecoded
        let indexedTextBytesDecoded = try containerValues.decode(Int.self, forKey: .indexedTextBytes)
        indexedTextBytes = indexedTextBytesDecoded
    }
}
