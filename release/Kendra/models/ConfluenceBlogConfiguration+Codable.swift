// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfluenceBlogConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case blogFieldMappings = "BlogFieldMappings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blogFieldMappings = blogFieldMappings {
            var blogFieldMappingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .blogFieldMappings)
            for confluenceblogfieldmappingslist0 in blogFieldMappings {
                try blogFieldMappingsContainer.encode(confluenceblogfieldmappingslist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blogFieldMappingsContainer = try containerValues.decodeIfPresent([ConfluenceBlogToIndexFieldMapping].self, forKey: .blogFieldMappings)
        var blogFieldMappingsDecoded0:[ConfluenceBlogToIndexFieldMapping]? = nil
        if let blogFieldMappingsContainer = blogFieldMappingsContainer {
            blogFieldMappingsDecoded0 = [ConfluenceBlogToIndexFieldMapping]()
            for structure0 in blogFieldMappingsContainer {
                blogFieldMappingsDecoded0?.append(structure0)
            }
        }
        blogFieldMappings = blogFieldMappingsDecoded0
    }
}
