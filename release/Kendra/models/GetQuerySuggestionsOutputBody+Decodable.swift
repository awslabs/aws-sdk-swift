// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetQuerySuggestionsOutputBody: Equatable {
    public let querySuggestionsId: String?
    public let suggestions: [Suggestion]?
}

extension GetQuerySuggestionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case querySuggestionsId = "QuerySuggestionsId"
        case suggestions = "Suggestions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let querySuggestionsIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .querySuggestionsId)
        querySuggestionsId = querySuggestionsIdDecoded
        let suggestionsContainer = try containerValues.decodeIfPresent([Suggestion].self, forKey: .suggestions)
        var suggestionsDecoded0:[Suggestion]? = nil
        if let suggestionsContainer = suggestionsContainer {
            suggestionsDecoded0 = [Suggestion]()
            for structure0 in suggestionsContainer {
                suggestionsDecoded0?.append(structure0)
            }
        }
        suggestions = suggestionsDecoded0
    }
}
