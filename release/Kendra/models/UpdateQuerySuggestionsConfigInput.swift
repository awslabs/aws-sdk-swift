// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateQuerySuggestionsConfigInput: Equatable {
    /// <p>
    ///             <code>TRUE</code> to include queries without user information (i.e. all queries,
    ///             irrespective of the user), otherwise <code>FALSE</code> to only include queries
    ///             with user information.</p>
    ///         <p>If you pass user information to Amazon Kendra along with the queries, you can set this
    ///             flag to <code>FALSE</code> and instruct Amazon Kendra to only consider queries with user
    ///             information.</p>
    ///         <p>If you set to <code>FALSE</code>, Amazon Kendra only considers queries searched at least
    ///             <code>MinimumQueryCount</code> times across <code>MinimumNumberOfQueryingUsers</code>
    ///             unique users for suggestions.</p>
    ///         <p>If you set to <code>TRUE</code>, Amazon Kendra ignores all user information and learns
    ///             from all queries.</p>
    public let includeQueriesWithoutUserInformation: Bool?
    /// <p>The identifier of the index you want to update query suggestions settings for.</p>
    public let indexId: String?
    /// <p>The minimum number of unique users who must search a query in order for the query
    ///             to be eligible to suggest to your users.</p>
    ///         <p>Increasing this number might decrease the number of suggestions. However, this
    ///             ensures a query is searched by many users and is truly popular to suggest to users.</p>
    ///         <p>How you tune this setting depends on your specific needs.</p>
    public let minimumNumberOfQueryingUsers: Int?
    /// <p>The the minimum number of times a query must be searched in order to be
    ///             eligible to suggest to your users.</p>
    ///         <p>Decreasing this number increases the number of suggestions. However, this
    ///             affects the quality of suggestions as it sets a low bar for a query to be
    ///             considered popular to suggest to users.</p>
    ///         <p>How you tune this setting depends on your specific needs.</p>
    public let minimumQueryCount: Int?
    /// <p>Set the mode to <code>ENABLED</code> or <code>LEARN_ONLY</code>.</p>
    ///         <p>By default, Amazon Kendra enables query suggestions.
    ///             <code>LEARN_ONLY</code> mode allows you to turn off query suggestions.
    ///             You can to update this at any time.</p>
    ///         <p>In <code>LEARN_ONLY</code> mode, Amazon Kendra continues to learn from new
    ///             queries to keep suggestions up to date for when you are ready to
    ///             switch to ENABLED mode again.</p>
    public let mode: Mode?
    /// <p>How recent your queries are in your query log time window.</p>
    ///         <p>The time window is the number of days from current day to past days.</p>
    ///         <p>By default, Amazon Kendra sets this to 180.</p>
    public let queryLogLookBackWindowInDays: Int?

    public init (
        includeQueriesWithoutUserInformation: Bool? = nil,
        indexId: String? = nil,
        minimumNumberOfQueryingUsers: Int? = nil,
        minimumQueryCount: Int? = nil,
        mode: Mode? = nil,
        queryLogLookBackWindowInDays: Int? = nil
    )
    {
        self.includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformation
        self.indexId = indexId
        self.minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsers
        self.minimumQueryCount = minimumQueryCount
        self.mode = mode
        self.queryLogLookBackWindowInDays = queryLogLookBackWindowInDays
    }
}
