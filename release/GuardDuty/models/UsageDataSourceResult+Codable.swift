// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UsageDataSourceResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataSource = "dataSource"
        case total = "total"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataSource = dataSource {
            try encodeContainer.encode(dataSource.rawValue, forKey: .dataSource)
        }
        if let total = total {
            try encodeContainer.encode(total, forKey: .total)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceDecoded = try containerValues.decodeIfPresent(DataSource.self, forKey: .dataSource)
        dataSource = dataSourceDecoded
        let totalDecoded = try containerValues.decodeIfPresent(Total.self, forKey: .total)
        total = totalDecoded
    }
}
