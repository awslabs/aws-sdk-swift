// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSampleFindingsInputBody: Equatable {
    public let findingTypes: [String]?
}

extension CreateSampleFindingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case findingTypes = "findingTypes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingTypesContainer = try containerValues.decodeIfPresent([String].self, forKey: .findingTypes)
        var findingTypesDecoded0:[String]? = nil
        if let findingTypesContainer = findingTypesContainer {
            findingTypesDecoded0 = [String]()
            for string0 in findingTypesContainer {
                findingTypesDecoded0?.append(string0)
            }
        }
        findingTypes = findingTypesDecoded0
    }
}
