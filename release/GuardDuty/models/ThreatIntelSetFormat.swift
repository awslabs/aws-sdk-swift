// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ThreatIntelSetFormat {
    case alienVault
    case fireEye
    case otxCsv
    case proofPoint
    case stix
    case txt
    case sdkUnknown(String)
}

extension ThreatIntelSetFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ThreatIntelSetFormat] {
        return [
            .alienVault,
            .fireEye,
            .otxCsv,
            .proofPoint,
            .stix,
            .txt,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .alienVault: return "ALIEN_VAULT"
        case .fireEye: return "FIRE_EYE"
        case .otxCsv: return "OTX_CSV"
        case .proofPoint: return "PROOF_POINT"
        case .stix: return "STIX"
        case .txt: return "TXT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ThreatIntelSetFormat(rawValue: rawValue) ?? ThreatIntelSetFormat.sdkUnknown(rawValue)
    }
}
