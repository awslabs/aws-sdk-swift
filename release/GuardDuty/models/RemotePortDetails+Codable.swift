// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RemotePortDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case port = "port"
        case portName = "portName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if port != 0 {
            try encodeContainer.encode(port, forKey: .port)
        }
        if let portName = portName {
            try encodeContainer.encode(portName, forKey: .portName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let portDecoded = try containerValues.decode(Int.self, forKey: .port)
        port = portDecoded
        let portNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portName)
        portName = portNameDecoded
    }
}
