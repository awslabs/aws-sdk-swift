// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PublishingStatus {
    case pendingVerification
    case publishing
    case stopped
    case unableToPublishFixDestinationProperty
    case sdkUnknown(String)
}

extension PublishingStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PublishingStatus] {
        return [
            .pendingVerification,
            .publishing,
            .stopped,
            .unableToPublishFixDestinationProperty,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .pendingVerification: return "PENDING_VERIFICATION"
        case .publishing: return "PUBLISHING"
        case .stopped: return "STOPPED"
        case .unableToPublishFixDestinationProperty: return "UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PublishingStatus(rawValue: rawValue) ?? PublishingStatus.sdkUnknown(rawValue)
    }
}
