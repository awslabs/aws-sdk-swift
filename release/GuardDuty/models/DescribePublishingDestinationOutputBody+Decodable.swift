// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePublishingDestinationOutputBody: Equatable {
    public let destinationId: String?
    public let destinationType: DestinationType?
    public let status: PublishingStatus?
    public let publishingFailureStartTimestamp: Int
    public let destinationProperties: DestinationProperties?
}

extension DescribePublishingDestinationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case destinationId = "destinationId"
        case destinationProperties = "destinationProperties"
        case destinationType = "destinationType"
        case publishingFailureStartTimestamp = "publishingFailureStartTimestamp"
        case status = "status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationId)
        destinationId = destinationIdDecoded
        let destinationTypeDecoded = try containerValues.decodeIfPresent(DestinationType.self, forKey: .destinationType)
        destinationType = destinationTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(PublishingStatus.self, forKey: .status)
        status = statusDecoded
        let publishingFailureStartTimestampDecoded = try containerValues.decode(Int.self, forKey: .publishingFailureStartTimestamp)
        publishingFailureStartTimestamp = publishingFailureStartTimestampDecoded
        let destinationPropertiesDecoded = try containerValues.decodeIfPresent(DestinationProperties.self, forKey: .destinationProperties)
        destinationProperties = destinationPropertiesDecoded
    }
}
