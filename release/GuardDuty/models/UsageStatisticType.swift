// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UsageStatisticType {
    case sumByAccount
    case sumByDataSource
    case sumByResource
    case topResources
    case sdkUnknown(String)
}

extension UsageStatisticType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UsageStatisticType] {
        return [
            .sumByAccount,
            .sumByDataSource,
            .sumByResource,
            .topResources,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .sumByAccount: return "SUM_BY_ACCOUNT"
        case .sumByDataSource: return "SUM_BY_DATA_SOURCE"
        case .sumByResource: return "SUM_BY_RESOURCE"
        case .topResources: return "TOP_RESOURCES"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UsageStatisticType(rawValue: rawValue) ?? UsageStatisticType.sdkUnknown(rawValue)
    }
}
