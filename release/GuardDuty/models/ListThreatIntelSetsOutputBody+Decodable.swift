// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListThreatIntelSetsOutputBody: Equatable {
    public let threatIntelSetIds: [String]?
    public let nextToken: String?
}

extension ListThreatIntelSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case threatIntelSetIds = "threatIntelSetIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let threatIntelSetIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .threatIntelSetIds)
        var threatIntelSetIdsDecoded0:[String]? = nil
        if let threatIntelSetIdsContainer = threatIntelSetIdsContainer {
            threatIntelSetIdsDecoded0 = [String]()
            for string0 in threatIntelSetIdsContainer {
                threatIntelSetIdsDecoded0?.append(string0)
            }
        }
        threatIntelSetIds = threatIntelSetIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
