// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Amazon GuardDuty is a continuous security monitoring service that analyzes and processes
///       the following data sources: VPC Flow Logs, AWS CloudTrail event logs, and DNS logs. It uses
///       threat intelligence feeds (such as lists of malicious IPs and domains) and machine learning to
///       identify unexpected, potentially unauthorized, and malicious activity within your AWS
///       environment. This can include issues like escalations of privileges, uses of exposed
///       credentials, or communication with malicious IPs, URLs, or domains. For example, GuardDuty can
///       detect compromised EC2 instances that serve malware or mine bitcoin. </p>
///          <p>GuardDuty also monitors AWS account access behavior for signs of compromise. Some examples
///       of this are unauthorized infrastructure deployments such as EC2 instances deployed in a Region
///       that has never been used, or unusual API calls like a password policy change to reduce
///       password strength. </p>
///          <p>GuardDuty informs you of the status of your AWS environment by producing security findings
///       that you can view in the GuardDuty console or through Amazon CloudWatch events. For more
///       information, see the <i>
///                <a href="https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html">Amazon
///           GuardDuty User Guide</a>
///             </i>. </p>
public protocol GuardDutyClientProtocol {
    /// <p>Accepts the invitation to be monitored by a GuardDuty administrator account.</p>
    func acceptInvitation(input: AcceptInvitationInput, completion: @escaping (SdkResult<AcceptInvitationOutputResponse, AcceptInvitationOutputError>) -> Void)
    /// <p>Archives GuardDuty findings that are specified by the list of finding IDs.</p>
    ///          <note>
    ///             <p>Only the administrator account can archive findings. Member accounts don't have permission to
    ///         archive findings from their accounts.</p>
    ///          </note>
    func archiveFindings(input: ArchiveFindingsInput, completion: @escaping (SdkResult<ArchiveFindingsOutputResponse, ArchiveFindingsOutputError>) -> Void)
    /// <p>Creates a single Amazon GuardDuty detector. A detector is a resource that represents the
    ///       GuardDuty service. To start using GuardDuty, you must create a detector in each Region where
    ///       you enable the service. You can have only one detector per account per Region. All data
    ///       sources are enabled in a new detector by default.</p>
    func createDetector(input: CreateDetectorInput, completion: @escaping (SdkResult<CreateDetectorOutputResponse, CreateDetectorOutputError>) -> Void)
    /// <p>Creates a filter using the specified finding criteria.</p>
    func createFilter(input: CreateFilterInput, completion: @escaping (SdkResult<CreateFilterOutputResponse, CreateFilterOutputError>) -> Void)
    /// <p>Creates a new IPSet, which is called a trusted IP list in the console user interface. An
    ///       IPSet is a list of IP addresses that are trusted for secure communication with AWS
    ///       infrastructure and applications. GuardDuty doesn't generate findings for IP addresses that are
    ///       included in IPSets. Only users from the administrator account can use this operation.</p>
    func createIPSet(input: CreateIPSetInput, completion: @escaping (SdkResult<CreateIPSetOutputResponse, CreateIPSetOutputError>) -> Void)
    /// <p>Creates member accounts of the current AWS account by specifying a list of AWS account
    ///       IDs. This step is a prerequisite for managing the associated member accounts either by
    ///       invitation or through an organization.</p>
    ///          <p>When using <code>Create Members</code> as an organizations delegated administrator this
    ///       action will enable GuardDuty in the added member accounts, with the exception of the
    ///       organization delegated administrator account, which must enable GuardDuty prior to being added as a
    ///       member.</p>
    ///          <p>If you are adding accounts by invitation use this action after GuardDuty has been enabled
    ///       in potential member accounts and before using <a href="https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html">
    ///                <code>Invite
    ///         Members</code>
    ///             </a>.</p>
    func createMembers(input: CreateMembersInput, completion: @escaping (SdkResult<CreateMembersOutputResponse, CreateMembersOutputError>) -> Void)
    /// <p>Creates a publishing destination to export findings to. The resource to export findings to
    ///       must exist before you use this operation.</p>
    func createPublishingDestination(input: CreatePublishingDestinationInput, completion: @escaping (SdkResult<CreatePublishingDestinationOutputResponse, CreatePublishingDestinationOutputError>) -> Void)
    /// <p>Generates example findings of types specified by the list of finding types. If 'NULL' is
    ///       specified for <code>findingTypes</code>, the API generates example findings of all supported
    ///       finding types.</p>
    func createSampleFindings(input: CreateSampleFindingsInput, completion: @escaping (SdkResult<CreateSampleFindingsOutputResponse, CreateSampleFindingsOutputError>) -> Void)
    /// <p>Creates a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses.
    ///       GuardDuty generates findings based on ThreatIntelSets. Only users of the administrator account can
    ///       use this operation.</p>
    func createThreatIntelSet(input: CreateThreatIntelSetInput, completion: @escaping (SdkResult<CreateThreatIntelSetOutputResponse, CreateThreatIntelSetOutputError>) -> Void)
    /// <p>Declines invitations sent to the current member account by AWS accounts specified by their
    ///       account IDs.</p>
    func declineInvitations(input: DeclineInvitationsInput, completion: @escaping (SdkResult<DeclineInvitationsOutputResponse, DeclineInvitationsOutputError>) -> Void)
    /// <p>Deletes an Amazon GuardDuty detector that is specified by the detector ID.</p>
    func deleteDetector(input: DeleteDetectorInput, completion: @escaping (SdkResult<DeleteDetectorOutputResponse, DeleteDetectorOutputError>) -> Void)
    /// <p>Deletes the filter specified by the filter name.</p>
    func deleteFilter(input: DeleteFilterInput, completion: @escaping (SdkResult<DeleteFilterOutputResponse, DeleteFilterOutputError>) -> Void)
    /// <p>Deletes invitations sent to the current member account by AWS accounts specified by their
    ///       account IDs.</p>
    func deleteInvitations(input: DeleteInvitationsInput, completion: @escaping (SdkResult<DeleteInvitationsOutputResponse, DeleteInvitationsOutputError>) -> Void)
    /// <p>Deletes the IPSet specified by the <code>ipSetId</code>. IPSets are called trusted IP
    ///       lists in the console user interface.</p>
    func deleteIPSet(input: DeleteIPSetInput, completion: @escaping (SdkResult<DeleteIPSetOutputResponse, DeleteIPSetOutputError>) -> Void)
    /// <p>Deletes GuardDuty member accounts (to the current GuardDuty administrator account) specified by
    ///       the account IDs.</p>
    func deleteMembers(input: DeleteMembersInput, completion: @escaping (SdkResult<DeleteMembersOutputResponse, DeleteMembersOutputError>) -> Void)
    /// <p>Deletes the publishing definition with the specified <code>destinationId</code>.</p>
    func deletePublishingDestination(input: DeletePublishingDestinationInput, completion: @escaping (SdkResult<DeletePublishingDestinationOutputResponse, DeletePublishingDestinationOutputError>) -> Void)
    /// <p>Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.</p>
    func deleteThreatIntelSet(input: DeleteThreatIntelSetInput, completion: @escaping (SdkResult<DeleteThreatIntelSetOutputResponse, DeleteThreatIntelSetOutputError>) -> Void)
    /// <p>Returns information about the account selected as the delegated administrator for
    ///       GuardDuty.</p>
    func describeOrganizationConfiguration(input: DescribeOrganizationConfigurationInput, completion: @escaping (SdkResult<DescribeOrganizationConfigurationOutputResponse, DescribeOrganizationConfigurationOutputError>) -> Void)
    /// <p>Returns information about the publishing destination specified by the provided
    ///         <code>destinationId</code>.</p>
    func describePublishingDestination(input: DescribePublishingDestinationInput, completion: @escaping (SdkResult<DescribePublishingDestinationOutputResponse, DescribePublishingDestinationOutputError>) -> Void)
    /// <p>Disables an AWS account within the Organization as the GuardDuty delegated
    ///       administrator.</p>
    func disableOrganizationAdminAccount(input: DisableOrganizationAdminAccountInput, completion: @escaping (SdkResult<DisableOrganizationAdminAccountOutputResponse, DisableOrganizationAdminAccountOutputError>) -> Void)
    /// <p>Disassociates the current GuardDuty member account from its administrator account.</p>
    func disassociateFromMasterAccount(input: DisassociateFromMasterAccountInput, completion: @escaping (SdkResult<DisassociateFromMasterAccountOutputResponse, DisassociateFromMasterAccountOutputError>) -> Void)
    /// <p>Disassociates GuardDuty member accounts (to the current GuardDuty administrator account)
    ///       specified by the account IDs.</p>
    func disassociateMembers(input: DisassociateMembersInput, completion: @escaping (SdkResult<DisassociateMembersOutputResponse, DisassociateMembersOutputError>) -> Void)
    /// <p>Enables an AWS account within the organization as the GuardDuty delegated
    ///       administrator.</p>
    func enableOrganizationAdminAccount(input: EnableOrganizationAdminAccountInput, completion: @escaping (SdkResult<EnableOrganizationAdminAccountOutputResponse, EnableOrganizationAdminAccountOutputError>) -> Void)
    /// <p>Retrieves an Amazon GuardDuty detector specified by the detectorId.</p>
    func getDetector(input: GetDetectorInput, completion: @escaping (SdkResult<GetDetectorOutputResponse, GetDetectorOutputError>) -> Void)
    /// <p>Returns the details of the filter specified by the filter name.</p>
    func getFilter(input: GetFilterInput, completion: @escaping (SdkResult<GetFilterOutputResponse, GetFilterOutputError>) -> Void)
    /// <p>Describes Amazon GuardDuty findings specified by finding IDs.</p>
    func getFindings(input: GetFindingsInput, completion: @escaping (SdkResult<GetFindingsOutputResponse, GetFindingsOutputError>) -> Void)
    /// <p>Lists Amazon GuardDuty findings statistics for the specified detector ID.</p>
    func getFindingsStatistics(input: GetFindingsStatisticsInput, completion: @escaping (SdkResult<GetFindingsStatisticsOutputResponse, GetFindingsStatisticsOutputError>) -> Void)
    /// <p>Returns the count of all GuardDuty membership invitations that were sent to the current
    ///       member account except the currently accepted invitation.</p>
    func getInvitationsCount(input: GetInvitationsCountInput, completion: @escaping (SdkResult<GetInvitationsCountOutputResponse, GetInvitationsCountOutputError>) -> Void)
    /// <p>Retrieves the IPSet specified by the <code>ipSetId</code>.</p>
    func getIPSet(input: GetIPSetInput, completion: @escaping (SdkResult<GetIPSetOutputResponse, GetIPSetOutputError>) -> Void)
    /// <p>Provides the details for the GuardDuty administrator account associated with the current
    ///       GuardDuty member account.</p>
    func getMasterAccount(input: GetMasterAccountInput, completion: @escaping (SdkResult<GetMasterAccountOutputResponse, GetMasterAccountOutputError>) -> Void)
    /// <p>Describes which data sources are enabled for the member account's detector.</p>
    func getMemberDetectors(input: GetMemberDetectorsInput, completion: @escaping (SdkResult<GetMemberDetectorsOutputResponse, GetMemberDetectorsOutputError>) -> Void)
    /// <p>Retrieves GuardDuty member accounts (of the current GuardDuty administrator account) specified by
    ///       the account IDs.</p>
    func getMembers(input: GetMembersInput, completion: @escaping (SdkResult<GetMembersOutputResponse, GetMembersOutputError>) -> Void)
    /// <p>Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.</p>
    func getThreatIntelSet(input: GetThreatIntelSetInput, completion: @escaping (SdkResult<GetThreatIntelSetOutputResponse, GetThreatIntelSetOutputError>) -> Void)
    /// <p>Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector
    ///       ID. For newly enabled detectors or data sources the cost returned will include only the usage
    ///       so far under 30 days, this may differ from the cost metrics in the console, which projects
    ///       usage over 30 days to provide a monthly cost estimate. For more information see <a href="https://docs.aws.amazon.com/guardduty/latest/ug/monitoring_costs.html#usage-calculations">Understanding How Usage Costs are Calculated</a>.</p>
    func getUsageStatistics(input: GetUsageStatisticsInput, completion: @escaping (SdkResult<GetUsageStatisticsOutputResponse, GetUsageStatisticsOutputError>) -> Void)
    /// <p>Invites other AWS accounts (created as members of the current AWS account by
    ///       CreateMembers) to enable GuardDuty, and allow the current AWS account to view and manage these
    ///       accounts' findings on their behalf as the GuardDuty administrator account.</p>
    func inviteMembers(input: InviteMembersInput, completion: @escaping (SdkResult<InviteMembersOutputResponse, InviteMembersOutputError>) -> Void)
    /// <p>Lists detectorIds of all the existing Amazon GuardDuty detector resources.</p>
    func listDetectors(input: ListDetectorsInput, completion: @escaping (SdkResult<ListDetectorsOutputResponse, ListDetectorsOutputError>) -> Void)
    /// <p>Returns a paginated list of the current filters.</p>
    func listFilters(input: ListFiltersInput, completion: @escaping (SdkResult<ListFiltersOutputResponse, ListFiltersOutputError>) -> Void)
    /// <p>Lists Amazon GuardDuty findings for the specified detector ID.</p>
    func listFindings(input: ListFindingsInput, completion: @escaping (SdkResult<ListFindingsOutputResponse, ListFindingsOutputError>) -> Void)
    /// <p>Lists all GuardDuty membership invitations that were sent to the current AWS
    ///       account.</p>
    func listInvitations(input: ListInvitationsInput, completion: @escaping (SdkResult<ListInvitationsOutputResponse, ListInvitationsOutputError>) -> Void)
    /// <p>Lists the IPSets of the GuardDuty service specified by the detector ID. If you use this
    ///       operation from a member account, the IPSets returned are the IPSets from the associated administrator
    ///       account.</p>
    func listIPSets(input: ListIPSetsInput, completion: @escaping (SdkResult<ListIPSetsOutputResponse, ListIPSetsOutputError>) -> Void)
    /// <p>Lists details about all member accounts for the current GuardDuty administrator account.</p>
    func listMembers(input: ListMembersInput, completion: @escaping (SdkResult<ListMembersOutputResponse, ListMembersOutputError>) -> Void)
    /// <p>Lists the accounts configured as GuardDuty delegated administrators.</p>
    func listOrganizationAdminAccounts(input: ListOrganizationAdminAccountsInput, completion: @escaping (SdkResult<ListOrganizationAdminAccountsOutputResponse, ListOrganizationAdminAccountsOutputError>) -> Void)
    /// <p>Returns a list of publishing destinations associated with the specified
    ///         <code>dectectorId</code>.</p>
    func listPublishingDestinations(input: ListPublishingDestinationsInput, completion: @escaping (SdkResult<ListPublishingDestinationsOutputResponse, ListPublishingDestinationsOutputError>) -> Void)
    /// <p>Lists tags for a resource. Tagging is currently supported for detectors, finding filters,
    ///       IP sets, and threat intel sets, with a limit of 50 tags per resource. When invoked, this
    ///       operation returns all assigned tags for a given resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID. If you
    ///       use this operation from a member account, the ThreatIntelSets associated with the administrator
    ///       account are returned.</p>
    func listThreatIntelSets(input: ListThreatIntelSetsInput, completion: @escaping (SdkResult<ListThreatIntelSetsOutputResponse, ListThreatIntelSetsOutputError>) -> Void)
    /// <p>Turns on GuardDuty monitoring of the specified member accounts. Use this operation to
    ///       restart monitoring of accounts that you stopped monitoring with the
    ///         <code>StopMonitoringMembers</code> operation.</p>
    func startMonitoringMembers(input: StartMonitoringMembersInput, completion: @escaping (SdkResult<StartMonitoringMembersOutputResponse, StartMonitoringMembersOutputError>) -> Void)
    /// <p>Stops GuardDuty monitoring for the specified member accounts. Use the
    ///         <code>StartMonitoringMembers</code> operation to restart monitoring for those
    ///       accounts.</p>
    func stopMonitoringMembers(input: StopMonitoringMembersInput, completion: @escaping (SdkResult<StopMonitoringMembersOutputResponse, StopMonitoringMembersOutputError>) -> Void)
    /// <p>Adds tags to a resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Unarchives GuardDuty findings specified by the <code>findingIds</code>.</p>
    func unarchiveFindings(input: UnarchiveFindingsInput, completion: @escaping (SdkResult<UnarchiveFindingsOutputResponse, UnarchiveFindingsOutputError>) -> Void)
    /// <p>Removes tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates the Amazon GuardDuty detector specified by the detectorId.</p>
    func updateDetector(input: UpdateDetectorInput, completion: @escaping (SdkResult<UpdateDetectorOutputResponse, UpdateDetectorOutputError>) -> Void)
    /// <p>Updates the filter specified by the filter name.</p>
    func updateFilter(input: UpdateFilterInput, completion: @escaping (SdkResult<UpdateFilterOutputResponse, UpdateFilterOutputError>) -> Void)
    /// <p>Marks the specified GuardDuty findings as useful or not useful.</p>
    func updateFindingsFeedback(input: UpdateFindingsFeedbackInput, completion: @escaping (SdkResult<UpdateFindingsFeedbackOutputResponse, UpdateFindingsFeedbackOutputError>) -> Void)
    /// <p>Updates the IPSet specified by the IPSet ID.</p>
    func updateIPSet(input: UpdateIPSetInput, completion: @escaping (SdkResult<UpdateIPSetOutputResponse, UpdateIPSetOutputError>) -> Void)
    /// <p>Contains information on member accounts to be updated.</p>
    func updateMemberDetectors(input: UpdateMemberDetectorsInput, completion: @escaping (SdkResult<UpdateMemberDetectorsOutputResponse, UpdateMemberDetectorsOutputError>) -> Void)
    /// <p>Updates the delegated administrator account with the values provided.</p>
    func updateOrganizationConfiguration(input: UpdateOrganizationConfigurationInput, completion: @escaping (SdkResult<UpdateOrganizationConfigurationOutputResponse, UpdateOrganizationConfigurationOutputError>) -> Void)
    /// <p>Updates information about the publishing destination specified by the
    ///         <code>destinationId</code>.</p>
    func updatePublishingDestination(input: UpdatePublishingDestinationInput, completion: @escaping (SdkResult<UpdatePublishingDestinationOutputResponse, UpdatePublishingDestinationOutputError>) -> Void)
    /// <p>Updates the ThreatIntelSet specified by the ThreatIntelSet ID.</p>
    func updateThreatIntelSet(input: UpdateThreatIntelSetInput, completion: @escaping (SdkResult<UpdateThreatIntelSetOutputResponse, UpdateThreatIntelSetOutputError>) -> Void)
}
