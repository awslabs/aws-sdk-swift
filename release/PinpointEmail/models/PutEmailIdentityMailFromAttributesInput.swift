// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A request to configure the custom MAIL FROM domain for a verified identity.</p>
public struct PutEmailIdentityMailFromAttributesInput: Equatable {
    /// <p>The action that you want Amazon Pinpoint to take if it can't read the required MX record when
    ///             you send an email. When you set this value to <code>UseDefaultValue</code>, Amazon Pinpoint uses
    ///                 <i>amazonses.com</i> as the MAIL FROM domain. When you set this value
    ///             to <code>RejectMessage</code>, Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code>
    ///             error, and doesn't attempt to deliver the email.</p>
    ///         <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the
    ///                 <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
    ///             states.</p>
    public let behaviorOnMxFailure: BehaviorOnMxFailure?
    /// <p>The verified email identity that you want to set up the custom MAIL FROM domain
    ///             for.</p>
    public let emailIdentity: String?
    /// <p> The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM
    ///             domain must meet the following criteria:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>It has to be a subdomain of the verified identity.</p>
    ///             </li>
    ///             <li>
    ///                 <p>It can't be used to receive email.</p>
    ///             </li>
    ///             <li>
    ///                 <p>It can't be used in a "From" address if the MAIL FROM domain is a destination
    ///                     for feedback forwarding emails.</p>
    ///             </li>
    ///          </ul>
    public let mailFromDomain: String?

    public init (
        behaviorOnMxFailure: BehaviorOnMxFailure? = nil,
        emailIdentity: String? = nil,
        mailFromDomain: String? = nil
    )
    {
        self.behaviorOnMxFailure = behaviorOnMxFailure
        self.emailIdentity = emailIdentity
        self.mailFromDomain = mailFromDomain
    }
}
