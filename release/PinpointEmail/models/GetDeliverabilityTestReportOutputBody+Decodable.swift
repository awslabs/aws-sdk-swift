// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeliverabilityTestReportOutputBody: Equatable {
    public let deliverabilityTestReport: DeliverabilityTestReport?
    public let overallPlacement: PlacementStatistics?
    public let ispPlacements: [IspPlacement]?
    public let message: String?
    public let tags: [Tag]?
}

extension GetDeliverabilityTestReportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deliverabilityTestReport = "DeliverabilityTestReport"
        case ispPlacements = "IspPlacements"
        case message = "Message"
        case overallPlacement = "OverallPlacement"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliverabilityTestReportDecoded = try containerValues.decodeIfPresent(DeliverabilityTestReport.self, forKey: .deliverabilityTestReport)
        deliverabilityTestReport = deliverabilityTestReportDecoded
        let overallPlacementDecoded = try containerValues.decodeIfPresent(PlacementStatistics.self, forKey: .overallPlacement)
        overallPlacement = overallPlacementDecoded
        let ispPlacementsContainer = try containerValues.decodeIfPresent([IspPlacement].self, forKey: .ispPlacements)
        var ispPlacementsDecoded0:[IspPlacement]? = nil
        if let ispPlacementsContainer = ispPlacementsContainer {
            ispPlacementsDecoded0 = [IspPlacement]()
            for structure0 in ispPlacementsContainer {
                ispPlacementsDecoded0?.append(structure0)
            }
        }
        ispPlacements = ispPlacementsDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
