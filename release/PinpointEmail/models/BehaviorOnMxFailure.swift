// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The action that you want Amazon Pinpoint to take if it can't read the required MX record for a
///             custom MAIL FROM domain. When you set this value to <code>UseDefaultValue</code>, Amazon Pinpoint
///             uses <i>amazonses.com</i> as the MAIL FROM domain. When you set this value
///             to <code>RejectMessage</code>, Amazon Pinpoint returns a <code>MailFromDomainNotVerified</code>
///             error, and doesn't attempt to deliver the email.</p>
///         <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the
///                 <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>
///             states.</p>
public enum BehaviorOnMxFailure {
    case rejectMessage
    case useDefaultValue
    case sdkUnknown(String)
}

extension BehaviorOnMxFailure : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BehaviorOnMxFailure] {
        return [
            .rejectMessage,
            .useDefaultValue,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .rejectMessage: return "REJECT_MESSAGE"
        case .useDefaultValue: return "USE_DEFAULT_VALUE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BehaviorOnMxFailure(rawValue: rawValue) ?? BehaviorOnMxFailure.sdkUnknown(rawValue)
    }
}
