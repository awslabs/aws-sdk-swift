// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The email identity type. The identity type can be one of the following:</p>
///         <ul>
///             <li>
///                 <p>
///                   <code>EMAIL_ADDRESS</code> – The identity is an email address.</p>
///             </li>
///             <li>
///                 <p>
///                   <code>DOMAIN</code> – The identity is a domain.</p>
///             </li>
///          </ul>
public enum IdentityType {
    case domain
    case emailAddress
    case managedDomain
    case sdkUnknown(String)
}

extension IdentityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [IdentityType] {
        return [
            .domain,
            .emailAddress,
            .managedDomain,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .domain: return "DOMAIN"
        case .emailAddress: return "EMAIL_ADDRESS"
        case .managedDomain: return "MANAGED_DOMAIN"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = IdentityType(rawValue: rawValue) ?? IdentityType.sdkUnknown(rawValue)
    }
}
