// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault
///       tolerance.
///       For more information, see
///       <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance">
///         Checkpoints for Fault Tolerance</a> in the
///       <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink Documentation</a>.</p>
public struct CheckpointConfiguration: Equatable {
    /// <p>Describes the interval in milliseconds between checkpoint operations. </p>
    ///          <note>
    ///             <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>,
    ///     the application will use a <code>CheckpointInterval</code> value of 60000, even if this value is set
    ///       to another value using this API or in application code.</p>
    ///          </note>
    public let checkpointInterval: Int?
    /// <p>Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.</p>
    ///          <note>
    ///             <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>,
    ///     the application will use a <code>CheckpointingEnabled</code> value of <code>true</code>, even if this value
    ///       is set to another value using this API or in application code.</p>
    ///          </note>
    public let checkpointingEnabled: Bool?
    /// <p>Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior.
    ///     You must set this property to <code>CUSTOM</code> in order to set the
    ///       <code>CheckpointingEnabled</code>, <code>CheckpointInterval</code>, or <code>MinPauseBetweenCheckpoints</code> parameters.</p>
    ///          <note>
    ///             <p>If this value is set to <code>DEFAULT</code>, the application will use the following values, even if they are set to other values using APIs or
    ///     application code:</p>
    ///             <ul>
    ///                <li>
    ///                   <p>
    ///                      <b>CheckpointingEnabled:</b> true</p>
    ///                </li>
    ///                <li>
    ///                   <p>
    ///                      <b>CheckpointInterval:</b> 60000</p>
    ///                </li>
    ///                <li>
    ///                   <p>
    ///                      <b>MinPauseBetweenCheckpoints:</b> 5000</p>
    ///                </li>
    ///             </ul>
    ///          </note>
    public let configurationType: ConfigurationType?
    /// <p>Describes the minimum time in milliseconds after a checkpoint operation completes that a
    ///       new checkpoint operation can start. If a checkpoint operation takes longer than the
    ///         <code>CheckpointInterval</code>, the application otherwise performs continual checkpoint
    ///       operations. For more information, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/ops/state/large_state_tuning.html#tuning-checkpointing"> Tuning Checkpointing</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink
    ///         Documentation</a>.</p>
    ///          <note>
    ///             <p>If <code>CheckpointConfiguration.ConfigurationType</code> is <code>DEFAULT</code>,
    ///     the application will use a <code>MinPauseBetweenCheckpoints</code> value of 5000, even if this value is set using this
    ///       API or in application code.</p>
    ///          </note>
    public let minPauseBetweenCheckpoints: Int?

    public init (
        checkpointInterval: Int? = nil,
        checkpointingEnabled: Bool? = nil,
        configurationType: ConfigurationType? = nil,
        minPauseBetweenCheckpoints: Int? = nil
    )
    {
        self.checkpointInterval = checkpointInterval
        self.checkpointingEnabled = checkpointingEnabled
        self.configurationType = configurationType
        self.minPauseBetweenCheckpoints = minPauseBetweenCheckpoints
    }
}
