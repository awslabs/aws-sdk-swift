// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateApplicationPresignedUrlInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationName = "ApplicationName"
        case sessionExpirationDurationInSeconds = "SessionExpirationDurationInSeconds"
        case urlType = "UrlType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationName = applicationName {
            try encodeContainer.encode(applicationName, forKey: .applicationName)
        }
        if let sessionExpirationDurationInSeconds = sessionExpirationDurationInSeconds {
            try encodeContainer.encode(sessionExpirationDurationInSeconds, forKey: .sessionExpirationDurationInSeconds)
        }
        if let urlType = urlType {
            try encodeContainer.encode(urlType.rawValue, forKey: .urlType)
        }
    }
}
