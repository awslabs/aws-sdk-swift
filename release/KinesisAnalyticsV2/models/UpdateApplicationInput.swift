// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateApplicationInput: Equatable {
    /// <p>Describes application configuration updates.</p>
    public let applicationConfigurationUpdate: ApplicationConfigurationUpdate?
    /// <p>The name of the application to update.</p>
    public let applicationName: String?
    /// <p>Describes application Amazon CloudWatch logging option updates. You can only update
    ///       existing CloudWatch logging options with this action. To add a new CloudWatch logging option,
    ///       use <a>AddApplicationCloudWatchLoggingOption</a>.</p>
    public let cloudWatchLoggingOptionUpdates: [CloudWatchLoggingOptionUpdate]?
    /// <p>A value you use to implement strong concurrency for application updates. You must
    ///       provide the <code>CurrentApplicationVersionId</code> or the <code>ConditionalToken</code>. You
    ///       get the application's current <code>ConditionalToken</code> using <a>DescribeApplication</a>. For better concurrency support, use the
    ///         <code>ConditionalToken</code> parameter instead of
    ///       <code>CurrentApplicationVersionId</code>.</p>
    public let conditionalToken: String?
    /// <p>The current application version ID. You must provide the
    ///         <code>CurrentApplicationVersionId</code> or the <code>ConditionalToken</code>.You can
    ///       retrieve the application version ID using <a>DescribeApplication</a>. For better
    ///       concurrency support, use the <code>ConditionalToken</code> parameter instead of
    ///         <code>CurrentApplicationVersionId</code>.</p>
    public let currentApplicationVersionId: Int?
    /// <p>Describes updates to the application's starting parameters.</p>
    public let runConfigurationUpdate: RunConfigurationUpdate?
    /// <p>Describes updates to the service execution role.</p>
    public let serviceExecutionRoleUpdate: String?

    public init (
        applicationConfigurationUpdate: ApplicationConfigurationUpdate? = nil,
        applicationName: String? = nil,
        cloudWatchLoggingOptionUpdates: [CloudWatchLoggingOptionUpdate]? = nil,
        conditionalToken: String? = nil,
        currentApplicationVersionId: Int? = nil,
        runConfigurationUpdate: RunConfigurationUpdate? = nil,
        serviceExecutionRoleUpdate: String? = nil
    )
    {
        self.applicationConfigurationUpdate = applicationConfigurationUpdate
        self.applicationName = applicationName
        self.cloudWatchLoggingOptionUpdates = cloudWatchLoggingOptionUpdates
        self.conditionalToken = conditionalToken
        self.currentApplicationVersionId = currentApplicationVersionId
        self.runConfigurationUpdate = runConfigurationUpdate
        self.serviceExecutionRoleUpdate = serviceExecutionRoleUpdate
    }
}
