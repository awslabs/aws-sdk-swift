// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationRestoreConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationRestoreType = "ApplicationRestoreType"
        case snapshotName = "SnapshotName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationRestoreType = applicationRestoreType {
            try encodeContainer.encode(applicationRestoreType.rawValue, forKey: .applicationRestoreType)
        }
        if let snapshotName = snapshotName {
            try encodeContainer.encode(snapshotName, forKey: .snapshotName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationRestoreTypeDecoded = try containerValues.decodeIfPresent(ApplicationRestoreType.self, forKey: .applicationRestoreType)
        applicationRestoreType = applicationRestoreTypeDecoded
        let snapshotNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .snapshotName)
        snapshotName = snapshotNameDecoded
    }
}
