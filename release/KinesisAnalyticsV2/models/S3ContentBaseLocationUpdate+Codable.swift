// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3ContentBaseLocationUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case basePathUpdate = "BasePathUpdate"
        case bucketARNUpdate = "BucketARNUpdate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let basePathUpdate = basePathUpdate {
            try encodeContainer.encode(basePathUpdate, forKey: .basePathUpdate)
        }
        if let bucketARNUpdate = bucketARNUpdate {
            try encodeContainer.encode(bucketARNUpdate, forKey: .bucketARNUpdate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketARNUpdateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketARNUpdate)
        bucketARNUpdate = bucketARNUpdateDecoded
        let basePathUpdateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .basePathUpdate)
        basePathUpdate = basePathUpdateDecoded
    }
}
