// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RuntimeEnvironment {
    case flink111
    case flink16
    case flink18
    case sql10
    case zeppelinFlink10
    case sdkUnknown(String)
}

extension RuntimeEnvironment : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RuntimeEnvironment] {
        return [
            .flink111,
            .flink16,
            .flink18,
            .sql10,
            .zeppelinFlink10,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .flink111: return "FLINK-1_11"
        case .flink16: return "FLINK-1_6"
        case .flink18: return "FLINK-1_8"
        case .sql10: return "SQL-1_0"
        case .zeppelinFlink10: return "ZEPPELIN-FLINK-1_0"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RuntimeEnvironment(rawValue: rawValue) ?? RuntimeEnvironment.sdkUnknown(rawValue)
    }
}
