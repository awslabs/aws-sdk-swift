// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FlinkApplicationConfigurationUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case checkpointConfigurationUpdate = "CheckpointConfigurationUpdate"
        case monitoringConfigurationUpdate = "MonitoringConfigurationUpdate"
        case parallelismConfigurationUpdate = "ParallelismConfigurationUpdate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checkpointConfigurationUpdate = checkpointConfigurationUpdate {
            try encodeContainer.encode(checkpointConfigurationUpdate, forKey: .checkpointConfigurationUpdate)
        }
        if let monitoringConfigurationUpdate = monitoringConfigurationUpdate {
            try encodeContainer.encode(monitoringConfigurationUpdate, forKey: .monitoringConfigurationUpdate)
        }
        if let parallelismConfigurationUpdate = parallelismConfigurationUpdate {
            try encodeContainer.encode(parallelismConfigurationUpdate, forKey: .parallelismConfigurationUpdate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkpointConfigurationUpdateDecoded = try containerValues.decodeIfPresent(CheckpointConfigurationUpdate.self, forKey: .checkpointConfigurationUpdate)
        checkpointConfigurationUpdate = checkpointConfigurationUpdateDecoded
        let monitoringConfigurationUpdateDecoded = try containerValues.decodeIfPresent(MonitoringConfigurationUpdate.self, forKey: .monitoringConfigurationUpdate)
        monitoringConfigurationUpdate = monitoringConfigurationUpdateDecoded
        let parallelismConfigurationUpdateDecoded = try containerValues.decodeIfPresent(ParallelismConfigurationUpdate.self, forKey: .parallelismConfigurationUpdate)
        parallelismConfigurationUpdate = parallelismConfigurationUpdateDecoded
    }
}
