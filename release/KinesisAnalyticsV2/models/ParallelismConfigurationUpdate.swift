// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes updates to parameters for how an application executes multiple tasks simultaneously.</p>
public struct ParallelismConfigurationUpdate: Equatable {
    /// <p>Describes updates to whether the Kinesis Data Analytics service can increase the parallelism of a Flink-based Kinesis Data Analytics application in response to increased throughput.</p>
    public let autoScalingEnabledUpdate: Bool?
    /// <p>Describes updates to whether the application uses the default parallelism for the Kinesis Data Analytics service, or if a custom parallelism is used.
    ///     You must set this property to <code>CUSTOM</code>
    ///     in order to change your application's <code>AutoScalingEnabled</code>, <code>Parallelism</code>, or <code>ParallelismPerKPU</code> properties.</p>
    public let configurationTypeUpdate: ConfigurationType?
    /// <p>Describes updates to the number of parallel tasks an application can perform per Kinesis Processing Unit (KPU) used by the application.</p>
    public let parallelismPerKPUUpdate: Int?
    /// <p>Describes updates to the initial number of parallel tasks an application can perform. If <code>AutoScalingEnabled</code> is set to True, then
    ///       Kinesis Data Analytics can increase the <code>CurrentParallelism</code> value in response to application
    ///     load. The service can increase <code>CurrentParallelism</code> up to the maximum parallelism, which is <code>ParalellismPerKPU</code> times the maximum KPUs for the application.
    ///     The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If application load is reduced, the service will
    ///     reduce <code>CurrentParallelism</code> down to the <code>Parallelism</code> setting.</p>
    public let parallelismUpdate: Int?

    public init (
        autoScalingEnabledUpdate: Bool? = nil,
        configurationTypeUpdate: ConfigurationType? = nil,
        parallelismPerKPUUpdate: Int? = nil,
        parallelismUpdate: Int? = nil
    )
    {
        self.autoScalingEnabledUpdate = autoScalingEnabledUpdate
        self.configurationTypeUpdate = configurationTypeUpdate
        self.parallelismPerKPUUpdate = parallelismPerKPUUpdate
        self.parallelismUpdate = parallelismUpdate
    }
}
