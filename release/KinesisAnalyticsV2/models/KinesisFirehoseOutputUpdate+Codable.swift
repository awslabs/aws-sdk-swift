// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisFirehoseOutputUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resourceARNUpdate = "ResourceARNUpdate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceARNUpdate = resourceARNUpdate {
            try encodeContainer.encode(resourceARNUpdate, forKey: .resourceARNUpdate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceARNUpdateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceARNUpdate)
        resourceARNUpdate = resourceARNUpdateDecoded
    }
}
