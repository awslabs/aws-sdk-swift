// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddApplicationInputProcessingConfigurationOutputBody: Equatable {
    public let applicationARN: String?
    public let applicationVersionId: Int?
    public let inputId: String?
    public let inputProcessingConfigurationDescription: InputProcessingConfigurationDescription?
}

extension AddApplicationInputProcessingConfigurationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationARN = "ApplicationARN"
        case applicationVersionId = "ApplicationVersionId"
        case inputId = "InputId"
        case inputProcessingConfigurationDescription = "InputProcessingConfigurationDescription"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationARN)
        applicationARN = applicationARNDecoded
        let applicationVersionIdDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .applicationVersionId)
        applicationVersionId = applicationVersionIdDecoded
        let inputIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .inputId)
        inputId = inputIdDecoded
        let inputProcessingConfigurationDescriptionDecoded = try containerValues.decodeIfPresent(InputProcessingConfigurationDescription.self, forKey: .inputProcessingConfigurationDescription)
        inputProcessingConfigurationDescription = inputProcessingConfigurationDescriptionDecoded
    }
}
