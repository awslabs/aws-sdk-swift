// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FlinkApplicationConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case checkpointConfiguration = "CheckpointConfiguration"
        case monitoringConfiguration = "MonitoringConfiguration"
        case parallelismConfiguration = "ParallelismConfiguration"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let checkpointConfiguration = checkpointConfiguration {
            try encodeContainer.encode(checkpointConfiguration, forKey: .checkpointConfiguration)
        }
        if let monitoringConfiguration = monitoringConfiguration {
            try encodeContainer.encode(monitoringConfiguration, forKey: .monitoringConfiguration)
        }
        if let parallelismConfiguration = parallelismConfiguration {
            try encodeContainer.encode(parallelismConfiguration, forKey: .parallelismConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkpointConfigurationDecoded = try containerValues.decodeIfPresent(CheckpointConfiguration.self, forKey: .checkpointConfiguration)
        checkpointConfiguration = checkpointConfigurationDecoded
        let monitoringConfigurationDecoded = try containerValues.decodeIfPresent(MonitoringConfiguration.self, forKey: .monitoringConfiguration)
        monitoringConfiguration = monitoringConfigurationDecoded
        let parallelismConfigurationDecoded = try containerValues.decodeIfPresent(ParallelismConfiguration.self, forKey: .parallelismConfiguration)
        parallelismConfiguration = parallelismConfigurationDecoded
    }
}
