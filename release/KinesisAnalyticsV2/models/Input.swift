// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream
///       name that is created,
///       and the mapping between the two. </p>
public struct Input: Equatable {
    /// <p>Describes the number of in-application streams to create. </p>
    public let inputParallelism: InputParallelism?
    /// <p>The <a>InputProcessingConfiguration</a> for the input. An input processor transforms records as they are received
    ///       from the stream, before the application's SQL code executes. Currently, the only input processing configuration available is
    ///       <a>InputLambdaProcessor</a>. </p>
    public let inputProcessingConfiguration: InputProcessingConfiguration?
    /// <p>Describes the format of the data in the streaming source, and how each data element maps
    ///       to corresponding columns in the in-application stream that is being created.</p>
    ///          <p>Also used to describe the format of the reference data source.</p>
    public let inputSchema: SourceSchema?
    /// <p>If the streaming source is an Amazon Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.</p>
    public let kinesisFirehoseInput: KinesisFirehoseInput?
    /// <p>If the streaming source is an Amazon Kinesis data stream, identifies the stream's Amazon Resource Name (ARN). </p>
    public let kinesisStreamsInput: KinesisStreamsInput?
    /// <p>The name prefix to use when creating an in-application stream. Suppose that you specify a
    ///       prefix "<code>MyInApplicationStream</code>." Kinesis Data Analytics then creates one or more
    ///       (as per the <code>InputParallelism</code> count you specified) in-application streams with the
    ///       names "<code>MyInApplicationStream_001</code>," "<code>MyInApplicationStream_002</code>," and
    ///       so on. </p>
    public let namePrefix: String?

    public init (
        inputParallelism: InputParallelism? = nil,
        inputProcessingConfiguration: InputProcessingConfiguration? = nil,
        inputSchema: SourceSchema? = nil,
        kinesisFirehoseInput: KinesisFirehoseInput? = nil,
        kinesisStreamsInput: KinesisStreamsInput? = nil,
        namePrefix: String? = nil
    )
    {
        self.inputParallelism = inputParallelism
        self.inputProcessingConfiguration = inputProcessingConfiguration
        self.inputSchema = inputSchema
        self.kinesisFirehoseInput = kinesisFirehoseInput
        self.kinesisStreamsInput = kinesisStreamsInput
        self.namePrefix = namePrefix
    }
}
