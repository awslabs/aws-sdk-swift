// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateApplicationInput: Equatable {
    /// <p>Use this parameter to configure the application.</p>
    public let applicationConfiguration: ApplicationConfiguration?
    /// <p>A summary description of the application.</p>
    public let applicationDescription: String?
    /// <p>Use the <code>STREAMING</code> mode to create a Kinesis Data Analytics Studio notebook. To create a Kinesis Data Analytics Studio notebook, use the
    ///     <code>INTERACTIVE</code> mode.</p>
    public let applicationMode: ApplicationMode?
    /// <p>The name of your application (for example, <code>sample-app</code>).</p>
    public let applicationName: String?
    /// <p>Use this parameter to configure an Amazon CloudWatch log stream to monitor application
    ///       configuration errors.
    ///       </p>
    public let cloudWatchLoggingOptions: [CloudWatchLoggingOption]?
    /// <p>The runtime environment for the application (<code>SQL-1_0</code>, <code>FLINK-1_6</code>, <code>FLINK-1_8</code>, or <code>FLINK-1_11</code>).</p>
    public let runtimeEnvironment: RuntimeEnvironment?
    /// <p>The IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose
    ///       delivery streams, Amazon S3 objects, and other external resources.</p>
    public let serviceExecutionRole: String?
    /// <p>A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an
    ///         application. Note that the maximum number of application tags includes system tags. The maximum number of
    ///         user-defined application tags is 50.
    ///         For more information, see
    ///         <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.</p>
    public let tags: [Tag]?

    public init (
        applicationConfiguration: ApplicationConfiguration? = nil,
        applicationDescription: String? = nil,
        applicationMode: ApplicationMode? = nil,
        applicationName: String? = nil,
        cloudWatchLoggingOptions: [CloudWatchLoggingOption]? = nil,
        runtimeEnvironment: RuntimeEnvironment? = nil,
        serviceExecutionRole: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.applicationConfiguration = applicationConfiguration
        self.applicationDescription = applicationDescription
        self.applicationMode = applicationMode
        self.applicationName = applicationName
        self.cloudWatchLoggingOptions = cloudWatchLoggingOptions
        self.runtimeEnvironment = runtimeEnvironment
        self.serviceExecutionRole = serviceExecutionRole
        self.tags = tags
    }
}
