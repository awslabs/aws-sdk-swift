// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MavenReference: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactId = "ArtifactId"
        case groupId = "GroupId"
        case version = "Version"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactId = artifactId {
            try encodeContainer.encode(artifactId, forKey: .artifactId)
        }
        if let groupId = groupId {
            try encodeContainer.encode(groupId, forKey: .groupId)
        }
        if let version = version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let artifactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactId)
        artifactId = artifactIdDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
    }
}
