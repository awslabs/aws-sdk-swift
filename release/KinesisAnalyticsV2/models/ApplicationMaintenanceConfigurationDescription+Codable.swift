// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationMaintenanceConfigurationDescription: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationMaintenanceWindowEndTime = "ApplicationMaintenanceWindowEndTime"
        case applicationMaintenanceWindowStartTime = "ApplicationMaintenanceWindowStartTime"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationMaintenanceWindowEndTime = applicationMaintenanceWindowEndTime {
            try encodeContainer.encode(applicationMaintenanceWindowEndTime, forKey: .applicationMaintenanceWindowEndTime)
        }
        if let applicationMaintenanceWindowStartTime = applicationMaintenanceWindowStartTime {
            try encodeContainer.encode(applicationMaintenanceWindowStartTime, forKey: .applicationMaintenanceWindowStartTime)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationMaintenanceWindowStartTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationMaintenanceWindowStartTime)
        applicationMaintenanceWindowStartTime = applicationMaintenanceWindowStartTimeDecoded
        let applicationMaintenanceWindowEndTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationMaintenanceWindowEndTime)
        applicationMaintenanceWindowEndTime = applicationMaintenanceWindowEndTimeDecoded
    }
}
