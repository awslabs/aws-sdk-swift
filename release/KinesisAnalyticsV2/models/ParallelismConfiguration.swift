// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes parameters for how a Flink-based Kinesis Data Analytics application
///       executes multiple tasks simultaneously. For more information about parallelism,
///       see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/parallel.html">Parallel Execution</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink
///         Documentation</a>.</p>
public struct ParallelismConfiguration: Equatable {
    /// <p>Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.</p>
    public let autoScalingEnabled: Bool?
    /// <p>Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. You must set this property to <code>CUSTOM</code>
    ///     in order to change your application's <code>AutoScalingEnabled</code>, <code>Parallelism</code>, or <code>ParallelismPerKPU</code> properties.</p>
    public let configurationType: ConfigurationType?
    /// <p>Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform. If <code>AutoScalingEnabled</code>
    ///       is set to True, Kinesis Data Analytics increases the <code>CurrentParallelism</code> value in response to application
    ///     load. The service can increase the <code>CurrentParallelism</code> value up to the maximum parallelism, which is
    ///       <code>ParalellismPerKPU</code> times the maximum KPUs for the application.
    ///     The maximum KPUs for an application is 32 by default, and can be increased by requesting a limit increase. If
    ///     application load is reduced, the service can
    ///     reduce the <code>CurrentParallelism</code> value down to the <code>Parallelism</code> setting.</p>
    public let parallelism: Int?
    /// <p>Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit
    ///       (KPU) used by the application. For more
    ///       information about KPUs, see <a href="http://aws.amazon.com/kinesis/data-analytics/pricing/">Amazon Kinesis Data Analytics Pricing</a>.</p>
    public let parallelismPerKPU: Int?

    public init (
        autoScalingEnabled: Bool? = nil,
        configurationType: ConfigurationType? = nil,
        parallelism: Int? = nil,
        parallelismPerKPU: Int? = nil
    )
    {
        self.autoScalingEnabled = autoScalingEnabled
        self.configurationType = configurationType
        self.parallelism = parallelism
        self.parallelismPerKPU = parallelismPerKPU
    }
}
