// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApplicationCodeConfigurationDescription: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case codeContentDescription = "CodeContentDescription"
        case codeContentType = "CodeContentType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let codeContentDescription = codeContentDescription {
            try encodeContainer.encode(codeContentDescription, forKey: .codeContentDescription)
        }
        if let codeContentType = codeContentType {
            try encodeContainer.encode(codeContentType.rawValue, forKey: .codeContentType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeContentTypeDecoded = try containerValues.decodeIfPresent(CodeContentType.self, forKey: .codeContentType)
        codeContentType = codeContentTypeDecoded
        let codeContentDescriptionDecoded = try containerValues.decodeIfPresent(CodeContentDescription.self, forKey: .codeContentDescription)
        codeContentDescription = codeContentDescriptionDecoded
    }
}
