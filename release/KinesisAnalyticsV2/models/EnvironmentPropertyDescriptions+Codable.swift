// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EnvironmentPropertyDescriptions: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case propertyGroupDescriptions = "PropertyGroupDescriptions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let propertyGroupDescriptions = propertyGroupDescriptions {
            var propertyGroupDescriptionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .propertyGroupDescriptions)
            for propertygroups0 in propertyGroupDescriptions {
                try propertyGroupDescriptionsContainer.encode(propertygroups0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let propertyGroupDescriptionsContainer = try containerValues.decodeIfPresent([PropertyGroup].self, forKey: .propertyGroupDescriptions)
        var propertyGroupDescriptionsDecoded0:[PropertyGroup]? = nil
        if let propertyGroupDescriptionsContainer = propertyGroupDescriptionsContainer {
            propertyGroupDescriptionsDecoded0 = [PropertyGroup]()
            for structure0 in propertyGroupDescriptionsContainer {
                propertyGroupDescriptionsDecoded0?.append(structure0)
            }
        }
        propertyGroupDescriptions = propertyGroupDescriptionsDecoded0
    }
}
