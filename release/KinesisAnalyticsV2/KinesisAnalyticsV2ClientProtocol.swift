// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Amazon Kinesis Data Analytics is a fully managed service that you can use to process and analyze streaming data using Java, SQL, or Scala. The service
///       enables you to quickly author and run Java, SQL, or Scala code against streaming sources to perform time
///       series analytics, feed real-time dashboards, and create real-time metrics.</p>
public protocol KinesisAnalyticsV2ClientProtocol {
    /// <p>Adds an Amazon CloudWatch log stream to monitor application configuration errors.</p>
    func addApplicationCloudWatchLoggingOption(input: AddApplicationCloudWatchLoggingOptionInput, completion: @escaping (SdkResult<AddApplicationCloudWatchLoggingOptionOutputResponse, AddApplicationCloudWatchLoggingOptionOutputError>) -> Void)
    /// <p>
    ///       Adds a streaming source to your SQL-based Kinesis Data Analytics application.
    ///     </p>
    ///          <p>You can add a streaming source when you create an application, or you can use this
    ///       operation to add a streaming source after you create an application. For more information, see
    ///         <a>CreateApplication</a>.</p>
    ///          <p>Any configuration update, including adding a streaming source using this operation,
    ///       results in a new version of the application. You can use the <a>DescribeApplication</a> operation
    ///       to find the current application version.
    ///     </p>
    func addApplicationInput(input: AddApplicationInputInput, completion: @escaping (SdkResult<AddApplicationInputOutputResponse, AddApplicationInputOutputError>) -> Void)
    /// <p>Adds an <a>InputProcessingConfiguration</a> to a SQL-based Kinesis Data Analytics application. An input processor pre-processes records
    ///       on the input stream before the
    ///       application's SQL code executes. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">AWS Lambda</a>.</p>
    func addApplicationInputProcessingConfiguration(input: AddApplicationInputProcessingConfigurationInput, completion: @escaping (SdkResult<AddApplicationInputProcessingConfigurationOutputResponse, AddApplicationInputProcessingConfigurationOutputError>) -> Void)
    /// <p>Adds an external destination to your SQL-based Kinesis Data Analytics application.</p>
    ///          <p>If you want Kinesis Data Analytics to deliver data from an in-application stream within
    ///       your application to an external destination (such as an Kinesis data stream, a Kinesis Data
    ///       Firehose delivery stream, or an AWS Lambda function), you add the relevant configuration to
    ///       your application using this operation. You can configure one or more outputs for your
    ///       application. Each output configuration maps an in-application stream and an external
    ///       destination.</p>
    ///          <p> You can use one of the output configurations to deliver data from your
    ///       in-application error stream to an external destination so that you can analyze the
    ///       errors.  </p>
    ///          <p> Any configuration update, including adding a streaming source using this
    ///       operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application
    ///       version.</p>
    func addApplicationOutput(input: AddApplicationOutputInput, completion: @escaping (SdkResult<AddApplicationOutputOutputResponse, AddApplicationOutputOutputError>) -> Void)
    /// <p>Adds a reference data source to an existing SQL-based Kinesis Data Analytics application.</p>
    ///          <p>Kinesis Data Analytics reads reference data (that is, an Amazon S3 object) and creates an
    ///       in-application table within your application. In the request, you provide the source (S3
    ///       bucket name and object key name), name of the in-application table to create, and the
    ///       necessary mapping information that describes how data in an Amazon S3 object maps to columns
    ///       in the resulting in-application table.</p>
    func addApplicationReferenceDataSource(input: AddApplicationReferenceDataSourceInput, completion: @escaping (SdkResult<AddApplicationReferenceDataSourceOutputResponse, AddApplicationReferenceDataSourceOutputError>) -> Void)
    /// <p>Adds a Virtual Private Cloud (VPC) configuration to the application. Applications can use VPCs to store
    ///         and access resources securely.</p>
    ///          <p>Note the following about VPC configurations for Kinesis Data Analytics applications:</p>
    ///          <ul>
    ///             <li>
    ///                <p>VPC configurations are not supported for SQL applications.</p>
    ///             </li>
    ///             <li>
    ///                <p>When a VPC is added to a Kinesis Data Analytics application, the application can no longer be accessed from the
    ///            Internet directly. To enable Internet access to the application, add an Internet gateway to your VPC.</p>
    ///             </li>
    ///          </ul>
    func addApplicationVpcConfiguration(input: AddApplicationVpcConfigurationInput, completion: @escaping (SdkResult<AddApplicationVpcConfigurationOutputResponse, AddApplicationVpcConfigurationOutputError>) -> Void)
    /// <p>Creates a Kinesis Data Analytics application. For information about creating a
    ///           Kinesis Data Analytics application, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html">Creating an
    ///         Application</a>.</p>
    func createApplication(input: CreateApplicationInput, completion: @escaping (SdkResult<CreateApplicationOutputResponse, CreateApplicationOutputError>) -> Void)
    /// <p>Creates and returns a URL that you can use to connect to
    ///             an application's extension. Currently, the only
    ///             available extension is the Apache Flink dashboard.</p>
    ///         <p>The IAM role or user used to call this API defines the permissions to access the
    ///       extension. After the presigned URL is created, no additional permission is required to access
    ///       this URL. IAM authorization policies for this API are also enforced for every HTTP request
    ///       that attempts to connect to the extension. </p>
    ///         <p>You    control the amount of time that the URL will be valid using the <code>SessionExpirationDurationInSeconds</code>
    ///         parameter. If you do not provide this parameter, the returned URL is valid for twelve hours.</p>
    ///         <note>
    ///             <p>The URL that you get from a call to CreateApplicationPresignedUrl must be used within 3 minutes
    ///             to be valid.
    ///             If you first try to use the URL after the 3-minute limit expires, the service returns an HTTP 403 Forbidden error.</p>
    ///          </note>
    func createApplicationPresignedUrl(input: CreateApplicationPresignedUrlInput, completion: @escaping (SdkResult<CreateApplicationPresignedUrlOutputResponse, CreateApplicationPresignedUrlOutputError>) -> Void)
    /// <p>Creates a snapshot of the application's state data.</p>
    func createApplicationSnapshot(input: CreateApplicationSnapshotInput, completion: @escaping (SdkResult<CreateApplicationSnapshotOutputResponse, CreateApplicationSnapshotOutputError>) -> Void)
    /// <p>Deletes the specified application. Kinesis Data Analytics halts application execution and deletes the application.</p>
    func deleteApplication(input: DeleteApplicationInput, completion: @escaping (SdkResult<DeleteApplicationOutputResponse, DeleteApplicationOutputError>) -> Void)
    /// <p>Deletes an Amazon CloudWatch log stream from an Kinesis Data Analytics application. </p>
    func deleteApplicationCloudWatchLoggingOption(input: DeleteApplicationCloudWatchLoggingOptionInput, completion: @escaping (SdkResult<DeleteApplicationCloudWatchLoggingOptionOutputResponse, DeleteApplicationCloudWatchLoggingOptionOutputError>) -> Void)
    /// <p>Deletes an <a>InputProcessingConfiguration</a> from an input.</p>
    func deleteApplicationInputProcessingConfiguration(input: DeleteApplicationInputProcessingConfigurationInput, completion: @escaping (SdkResult<DeleteApplicationInputProcessingConfigurationOutputResponse, DeleteApplicationInputProcessingConfigurationOutputError>) -> Void)
    /// <p>Deletes the output destination configuration from your SQL-based Kinesis Data Analytics application's configuration.
    ///       Kinesis Data Analytics will no longer write data from
    ///       the corresponding in-application stream to the external output destination.</p>
    func deleteApplicationOutput(input: DeleteApplicationOutputInput, completion: @escaping (SdkResult<DeleteApplicationOutputOutputResponse, DeleteApplicationOutputOutputError>) -> Void)
    /// <p>Deletes a reference data source configuration from the specified SQL-based Kinesis Data Analytics application's configuration.</p>
    ///          <p>If the application is running, Kinesis Data Analytics immediately removes the in-application table
    ///       that you created using the <a>AddApplicationReferenceDataSource</a> operation.  </p>
    func deleteApplicationReferenceDataSource(input: DeleteApplicationReferenceDataSourceInput, completion: @escaping (SdkResult<DeleteApplicationReferenceDataSourceOutputResponse, DeleteApplicationReferenceDataSourceOutputError>) -> Void)
    /// <p>Deletes a snapshot of application state.</p>
    func deleteApplicationSnapshot(input: DeleteApplicationSnapshotInput, completion: @escaping (SdkResult<DeleteApplicationSnapshotOutputResponse, DeleteApplicationSnapshotOutputError>) -> Void)
    /// <p>Removes a VPC configuration from a Kinesis Data Analytics application.</p>
    func deleteApplicationVpcConfiguration(input: DeleteApplicationVpcConfigurationInput, completion: @escaping (SdkResult<DeleteApplicationVpcConfigurationOutputResponse, DeleteApplicationVpcConfigurationOutputError>) -> Void)
    /// <p>Returns information about a specific Kinesis Data Analytics application.</p>
    ///          <p>If you want to retrieve a list of all applications in your account,
    ///       use the <a>ListApplications</a> operation.</p>
    func describeApplication(input: DescribeApplicationInput, completion: @escaping (SdkResult<DescribeApplicationOutputResponse, DescribeApplicationOutputError>) -> Void)
    /// <p>Returns information about a snapshot of application state data.</p>
    func describeApplicationSnapshot(input: DescribeApplicationSnapshotInput, completion: @escaping (SdkResult<DescribeApplicationSnapshotOutputResponse, DescribeApplicationSnapshotOutputError>) -> Void)
    /// <p>Provides a detailed description of a specified version of the application. To see a list of all the versions of an application, invoke the <a>ListApplicationVersions</a> operation.</p>
    ///          <note>
    ///             <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p>
    ///          </note>
    func describeApplicationVersion(input: DescribeApplicationVersionInput, completion: @escaping (SdkResult<DescribeApplicationVersionOutputResponse, DescribeApplicationVersionOutputError>) -> Void)
    /// <p>Infers a schema for a SQL-based Kinesis Data Analytics application by evaluating
    ///       sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose
    ///       delivery stream) or Amazon S3 object. In the response, the operation returns the inferred
    ///       schema and also the sample records that the operation used to infer the schema.</p>
    ///          <p> You can use the inferred schema when configuring a streaming source for your application.
    ///       When you create an application using the Kinesis Data Analytics console, the console uses this
    ///       operation to infer a schema and show it in the console user interface. </p>
    func discoverInputSchema(input: DiscoverInputSchemaInput, completion: @escaping (SdkResult<DiscoverInputSchemaOutputResponse, DiscoverInputSchemaOutputError>) -> Void)
    /// <p>Returns a list of Kinesis Data Analytics applications in your account. For each
    ///       application, the response includes the application name, Amazon Resource Name (ARN), and
    ///       status. </p>
    ///          <p>If you want detailed information about a specific application, use
    ///       <a>DescribeApplication</a>.</p>
    func listApplications(input: ListApplicationsInput, completion: @escaping (SdkResult<ListApplicationsOutputResponse, ListApplicationsOutputError>) -> Void)
    /// <p>Lists information about the current application snapshots.</p>
    func listApplicationSnapshots(input: ListApplicationSnapshotsInput, completion: @escaping (SdkResult<ListApplicationSnapshotsOutputResponse, ListApplicationSnapshotsOutputError>) -> Void)
    /// <p>Lists all the versions for the specified application, including versions that were rolled back. The response also includes a summary of the configuration
    ///       associated with each version.</p>
    ///
    ///          <p>To get the complete description of a specific application version, invoke the <a>DescribeApplicationVersion</a> operation.</p>
    ///          <note>
    ///             <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p>
    ///          </note>
    func listApplicationVersions(input: ListApplicationVersionsInput, completion: @escaping (SdkResult<ListApplicationVersionsOutputResponse, ListApplicationVersionsOutputError>) -> Void)
    /// <p>Retrieves the list of key-value tags assigned to the application. For more information, see
    ///         <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Reverts the application to the previous running version. You can
    ///             roll back an application if you suspect it is stuck in a transient status. </p>
    ///         <p>You can roll back an application only if it is in the <code>UPDATING</code>
    ///             or <code>AUTOSCALING</code> status.</p>
    ///         <p>When you rollback an application, it loads state data from the last successful snapshot.
    ///         If the application has no snapshots, Kinesis Data Analytics rejects the rollback request.</p>
    ///         <p>This action is not supported for Kinesis Data Analytics for SQL applications.</p>
    func rollbackApplication(input: RollbackApplicationInput, completion: @escaping (SdkResult<RollbackApplicationOutputResponse, RollbackApplicationOutputError>) -> Void)
    /// <p>Starts the specified Kinesis Data Analytics application. After creating an application, you must exclusively call this operation to
    ///       start your application.</p>
    func startApplication(input: StartApplicationInput, completion: @escaping (SdkResult<StartApplicationOutputResponse, StartApplicationOutputError>) -> Void)
    /// <p>Stops the application from processing data. You can stop
    ///       an application only if it is in the running status, unless you set the <code>Force</code>
    ///         parameter to <code>true</code>.</p>
    ///          <p>You can use the <a>DescribeApplication</a> operation to find the application status.
    ///        </p>
    ///          <p>Kinesis Data Analytics takes a snapshot when the application is stopped, unless <code>Force</code> is set
    ///           to <code>true</code>.</p>
    func stopApplication(input: StopApplicationInput, completion: @escaping (SdkResult<StopApplicationOutputResponse, StopApplicationOutputError>) -> Void)
    /// <p>Adds one or more key-value tags to a Kinesis Data Analytics application. Note that the maximum number of application
    ///         tags includes system tags. The maximum number of user-defined application tags is 50.
    ///       For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes one or more tags from a Kinesis Data Analytics application. For more information, see
    ///         <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates an existing Kinesis Data Analytics application. Using this operation, you
    ///       can update application code, input configuration, and output configuration. </p>
    ///          <p>Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update
    ///       your application. </p>
    ///          <note>
    ///             <p>You cannot update the <code>RuntimeEnvironment</code> of an existing application. If you
    ///     need to update an application's <code>RuntimeEnvironment</code>, you must delete the application
    ///     and create it again.</p>
    ///          </note>
    func updateApplication(input: UpdateApplicationInput, completion: @escaping (SdkResult<UpdateApplicationOutputResponse, UpdateApplicationOutputError>) -> Void)
    /// <p>Updates the maintenance configuration of the Kinesis Data Analytics application. </p>
    ///          <p>You can invoke this operation on an application that is in one of the two following
    ///       states: <code>READY</code> or <code>RUNNING</code>. If you invoke it when the application is
    ///       in a state other than these two states, it throws a <code>ResourceInUseException</code>. The
    ///       service makes use of the updated configuration the next time it schedules maintenance for the
    ///       application. If you invoke this operation after the service schedules maintenance, the service
    ///       will apply the configuration update the next time it schedules maintenance for the
    ///       application. This means that you might not see the maintenance configuration update applied to
    ///       the maintenance process that follows a successful invocation of this operation, but to the
    ///       following maintenance process instead.</p>
    ///          <p>To see the current maintenance configuration of your application, invoke the
    ///       <a>DescribeApplication</a> operation.</p>
    ///          <p>For information about application maintenance, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/maintenance.html">Kinesis Data Analytics for Apache Flink Maintenance</a>.</p>
    ///          <note>
    ///             <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p>
    ///          </note>
    func updateApplicationMaintenanceConfiguration(input: UpdateApplicationMaintenanceConfigurationInput, completion: @escaping (SdkResult<UpdateApplicationMaintenanceConfigurationOutputResponse, UpdateApplicationMaintenanceConfigurationOutputError>) -> Void)
}
