// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListPackageVersionsOutput: Equatable {
    /// <p>
    ///       The default package version to display. This depends on the package format:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///           For Maven and PyPI packages, it's the most recently published package version.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           For npm packages, it's the version referenced by the
    ///           <code>latest</code> tag. If the  <code>latest</code> tag is not set, it's the most recently published package version.
    ///         </p>
    ///             </li>
    ///          </ul>
    public let defaultDisplayVersion: String?
    /// <p>
    ///       A format of the package. Valid package format values are:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>npm</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>pypi</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>maven</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let format: PackageFormat?
    /// <p>
    ///       The namespace of the package. The package component that specifies its
    ///       namespace depends on its type. For example:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///           The namespace of a Maven package is its <code>groupId</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           The namespace of an npm package is its <code>scope</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           A Python package does not contain a corresponding component, so
    ///           Python packages do not have a namespace.
    ///         </p>
    ///             </li>
    ///          </ul>
    public let namespace: String?
    /// <p>
    ///         If there are additional results, this is the token for the next set of results.
    ///        </p>
    public let nextToken: String?
    /// <p>
    ///          The name of the package.
    ///        </p>
    public let package: String?
    /// <p>
    ///         The returned list of
    ///         <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html">PackageVersionSummary</a>
    ///         objects.
    ///        </p>
    public let versions: [PackageVersionSummary]?

    public init (
        defaultDisplayVersion: String? = nil,
        format: PackageFormat? = nil,
        namespace: String? = nil,
        nextToken: String? = nil,
        package: String? = nil,
        versions: [PackageVersionSummary]? = nil
    )
    {
        self.defaultDisplayVersion = defaultDisplayVersion
        self.format = format
        self.namespace = namespace
        self.nextToken = nextToken
        self.package = package
        self.versions = versions
    }
}
