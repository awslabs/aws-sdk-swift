// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceType {
    case asset
    case domain
    case package
    case packageVersion
    case repository
    case sdkUnknown(String)
}

extension ResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceType] {
        return [
            .asset,
            .domain,
            .package,
            .packageVersion,
            .repository,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .asset: return "asset"
        case .domain: return "domain"
        case .package: return "package"
        case .packageVersion: return "package-version"
        case .repository: return "repository"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
    }
}
