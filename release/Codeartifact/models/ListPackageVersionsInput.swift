// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListPackageVersionsInput: Equatable {
    /// <p>
    ///          The name of the domain that contains the repository that contains the returned package versions.
    ///        </p>
    public let domain: String?
    /// <p>
    ///         The 12-digit account number of the AWS account that owns the domain. It does not include
    ///         dashes or spaces.
    ///       </p>
    public let domainOwner: String?
    /// <p>
    ///       The format of the returned packages. The valid package types are:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>npm</code>: A Node Package Manager (npm) package.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>pypi</code>: A Python Package Index (PyPI) package.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file.
    ///         </p>
    ///             </li>
    ///          </ul>
    public let format: PackageFormat?
    /// <p>
    ///         The maximum number of results to return per page.
    ///        </p>
    public let maxResults: Int?
    /// <p>
    ///       The namespace of the package. The package component that specifies its
    ///       namespace depends on its type. For example:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///           The namespace of a Maven package is its <code>groupId</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           The namespace of an npm package is its <code>scope</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           A Python package does not contain a corresponding component, so
    ///           Python packages do not have a namespace.
    ///         </p>
    ///             </li>
    ///          </ul>
    public let namespace: String?
    /// <p>
    ///         The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
    ///        </p>
    public let nextToken: String?
    /// <p>
    ///       The name of the package for which you want to return a list of package versions.
    ///     </p>
    public let package: String?
    /// <p>
    ///          The name of the repository that contains the package.
    ///        </p>
    public let repository: String?
    /// <p>
    ///       How to sort the returned list of package versions.
    ///     </p>
    public let sortBy: PackageVersionSortType?
    /// <p>
    ///       A string that specifies the status of the package versions to include in the returned list. It can be one of the following:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Published</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Unfinished</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Unlisted</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Archived</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Disposed</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let status: PackageVersionStatus?

    public init (
        domain: String? = nil,
        domainOwner: String? = nil,
        format: PackageFormat? = nil,
        maxResults: Int? = nil,
        namespace: String? = nil,
        nextToken: String? = nil,
        package: String? = nil,
        repository: String? = nil,
        sortBy: PackageVersionSortType? = nil,
        status: PackageVersionStatus? = nil
    )
    {
        self.domain = domain
        self.domainOwner = domainOwner
        self.format = format
        self.maxResults = maxResults
        self.namespace = namespace
        self.nextToken = nextToken
        self.package = package
        self.repository = repository
        self.sortBy = sortBy
        self.status = status
    }
}
