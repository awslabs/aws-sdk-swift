// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetPackageVersionAssetInputQueryItemMiddleware: Middleware {
    public let id: String = "GetPackageVersionAssetInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetPackageVersionAssetInput>,
                  next: H) -> Swift.Result<OperationOutput<GetPackageVersionAssetOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let package = input.operationInput.package {
            let packageQueryItem = URLQueryItem(name: "package".urlPercentEncoding(), value: String(package).urlPercentEncoding())
            input.builder.withQueryItem(packageQueryItem)
        }
        if let domain = input.operationInput.domain {
            let domainQueryItem = URLQueryItem(name: "domain".urlPercentEncoding(), value: String(domain).urlPercentEncoding())
            input.builder.withQueryItem(domainQueryItem)
        }
        if let domainOwner = input.operationInput.domainOwner {
            let domainOwnerQueryItem = URLQueryItem(name: "domain-owner".urlPercentEncoding(), value: String(domainOwner).urlPercentEncoding())
            input.builder.withQueryItem(domainOwnerQueryItem)
        }
        if let format = input.operationInput.format {
            let formatQueryItem = URLQueryItem(name: "format".urlPercentEncoding(), value: String(format.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(formatQueryItem)
        }
        if let namespace = input.operationInput.namespace {
            let namespaceQueryItem = URLQueryItem(name: "namespace".urlPercentEncoding(), value: String(namespace).urlPercentEncoding())
            input.builder.withQueryItem(namespaceQueryItem)
        }
        if let packageVersion = input.operationInput.packageVersion {
            let packageVersionQueryItem = URLQueryItem(name: "version".urlPercentEncoding(), value: String(packageVersion).urlPercentEncoding())
            input.builder.withQueryItem(packageVersionQueryItem)
        }
        if let packageVersionRevision = input.operationInput.packageVersionRevision {
            let packageVersionRevisionQueryItem = URLQueryItem(name: "revision".urlPercentEncoding(), value: String(packageVersionRevision).urlPercentEncoding())
            input.builder.withQueryItem(packageVersionRevisionQueryItem)
        }
        if let repository = input.operationInput.repository {
            let repositoryQueryItem = URLQueryItem(name: "repository".urlPercentEncoding(), value: String(repository).urlPercentEncoding())
            input.builder.withQueryItem(repositoryQueryItem)
        }
        if let asset = input.operationInput.asset {
            let assetQueryItem = URLQueryItem(name: "asset".urlPercentEncoding(), value: String(asset).urlPercentEncoding())
            input.builder.withQueryItem(assetQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetPackageVersionAssetInput>
    public typealias MOutput = OperationOutput<GetPackageVersionAssetOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetPackageVersionAssetOutputError>
}
