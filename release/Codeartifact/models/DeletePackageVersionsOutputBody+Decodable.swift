// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeletePackageVersionsOutputBody: Equatable {
    public let successfulVersions: [String:SuccessfulPackageVersionInfo]?
    public let failedVersions: [String:PackageVersionError]?
}

extension DeletePackageVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedVersions
        case successfulVersions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulVersionsContainer = try containerValues.decodeIfPresent([String:SuccessfulPackageVersionInfo].self, forKey: .successfulVersions)
        var successfulVersionsDecoded0: [String:SuccessfulPackageVersionInfo]? = nil
        if let successfulVersionsContainer = successfulVersionsContainer {
            successfulVersionsDecoded0 = [String:SuccessfulPackageVersionInfo]()
            for (key0, successfulpackageversioninfo0) in successfulVersionsContainer {
                successfulVersionsDecoded0?[key0] = successfulpackageversioninfo0
            }
        }
        successfulVersions = successfulVersionsDecoded0
        let failedVersionsContainer = try containerValues.decodeIfPresent([String:PackageVersionError].self, forKey: .failedVersions)
        var failedVersionsDecoded0: [String:PackageVersionError]? = nil
        if let failedVersionsContainer = failedVersionsContainer {
            failedVersionsDecoded0 = [String:PackageVersionError]()
            for (key0, packageversionerror0) in failedVersionsContainer {
                failedVersionsDecoded0?[key0] = packageversionerror0
            }
        }
        failedVersions = failedVersionsDecoded0
    }
}
