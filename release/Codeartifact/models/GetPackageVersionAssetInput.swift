// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetPackageVersionAssetInput: Equatable {
    /// <p>
    ///       The name of the requested asset.
    ///     </p>
    public let asset: String?
    /// <p>
    ///       The name of the domain that contains the repository that contains the package version with the requested asset.
    ///     </p>
    public let domain: String?
    /// <p>
    ///         The 12-digit account number of the AWS account that owns the domain. It does not include
    ///         dashes or spaces.
    ///       </p>
    public let domainOwner: String?
    /// <p>
    ///       A format that specifies the type of the package version with the requested asset file. The valid values are:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>npm</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>pypi</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>maven</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let format: PackageFormat?
    /// <p>
    ///       The namespace of the package. The package component that specifies its
    ///       namespace depends on its type. For example:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///           The namespace of a Maven package is its <code>groupId</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           The namespace of an npm package is its <code>scope</code>.
    ///         </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///           A Python package does not contain a corresponding component, so
    ///           Python packages do not have a namespace.
    ///         </p>
    ///             </li>
    ///          </ul>
    public let namespace: String?
    /// <p>
    ///       The name of the package that contains the requested asset.
    ///     </p>
    public let package: String?
    /// <p>
    ///       A string that contains the package version (for example, <code>3.5.2</code>).
    ///     </p>
    public let packageVersion: String?
    /// <p>
    ///         The name of the package version revision that contains the requested asset.
    ///     </p>
    public let packageVersionRevision: String?
    /// <p>
    ///       The repository that contains the package version with the requested asset.
    ///     </p>
    public let repository: String?

    public init (
        asset: String? = nil,
        domain: String? = nil,
        domainOwner: String? = nil,
        format: PackageFormat? = nil,
        namespace: String? = nil,
        package: String? = nil,
        packageVersion: String? = nil,
        packageVersionRevision: String? = nil,
        repository: String? = nil
    )
    {
        self.asset = asset
        self.domain = domain
        self.domainOwner = domainOwner
        self.format = format
        self.namespace = namespace
        self.package = package
        self.packageVersion = packageVersion
        self.packageVersionRevision = packageVersionRevision
        self.repository = repository
    }
}
