// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PackageFormat {
    case maven
    case npm
    case nuget
    case pypi
    case sdkUnknown(String)
}

extension PackageFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PackageFormat] {
        return [
            .maven,
            .npm,
            .nuget,
            .pypi,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .maven: return "maven"
        case .npm: return "npm"
        case .nuget: return "nuget"
        case .pypi: return "pypi"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PackageFormat(rawValue: rawValue) ?? PackageFormat.sdkUnknown(rawValue)
    }
}
