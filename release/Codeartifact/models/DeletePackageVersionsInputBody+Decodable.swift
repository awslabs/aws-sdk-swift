// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeletePackageVersionsInputBody: Equatable {
    public let versions: [String]?
    public let expectedStatus: PackageVersionStatus?
}

extension DeletePackageVersionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case expectedStatus
        case versions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .versions)
        var versionsDecoded0:[String]? = nil
        if let versionsContainer = versionsContainer {
            versionsDecoded0 = [String]()
            for string0 in versionsContainer {
                versionsDecoded0?.append(string0)
            }
        }
        versions = versionsDecoded0
        let expectedStatusDecoded = try containerValues.decodeIfPresent(PackageVersionStatus.self, forKey: .expectedStatus)
        expectedStatus = expectedStatusDecoded
    }
}
