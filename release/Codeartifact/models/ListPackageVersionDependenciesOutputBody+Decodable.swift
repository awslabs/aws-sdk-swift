// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPackageVersionDependenciesOutputBody: Equatable {
    public let format: PackageFormat?
    public let namespace: String?
    public let package: String?
    public let version: String?
    public let versionRevision: String?
    public let nextToken: String?
    public let dependencies: [PackageDependency]?
}

extension ListPackageVersionDependenciesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dependencies
        case format
        case namespace
        case nextToken
        case package
        case version
        case versionRevision
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatDecoded = try containerValues.decodeIfPresent(PackageFormat.self, forKey: .format)
        format = formatDecoded
        let namespaceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .namespace)
        namespace = namespaceDecoded
        let packageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .package)
        package = packageDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let versionRevisionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionRevision)
        versionRevision = versionRevisionDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let dependenciesContainer = try containerValues.decodeIfPresent([PackageDependency].self, forKey: .dependencies)
        var dependenciesDecoded0:[PackageDependency]? = nil
        if let dependenciesContainer = dependenciesContainer {
            dependenciesDecoded0 = [PackageDependency]()
            for structure0 in dependenciesContainer {
                dependenciesDecoded0?.append(structure0)
            }
        }
        dependencies = dependenciesDecoded0
    }
}
