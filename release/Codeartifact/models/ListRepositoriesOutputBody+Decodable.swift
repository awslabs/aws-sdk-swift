// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRepositoriesOutputBody: Equatable {
    public let repositories: [RepositorySummary]?
    public let nextToken: String?
}

extension ListRepositoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case repositories
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoriesContainer = try containerValues.decodeIfPresent([RepositorySummary].self, forKey: .repositories)
        var repositoriesDecoded0:[RepositorySummary]? = nil
        if let repositoriesContainer = repositoriesContainer {
            repositoriesDecoded0 = [RepositorySummary]()
            for structure0 in repositoriesContainer {
                repositoriesDecoded0?.append(structure0)
            }
        }
        repositories = repositoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
