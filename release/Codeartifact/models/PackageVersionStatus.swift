// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PackageVersionStatus {
    case archived
    case deleted
    case disposed
    case published
    case unfinished
    case unlisted
    case sdkUnknown(String)
}

extension PackageVersionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PackageVersionStatus] {
        return [
            .archived,
            .deleted,
            .disposed,
            .published,
            .unfinished,
            .unlisted,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .archived: return "Archived"
        case .deleted: return "Deleted"
        case .disposed: return "Disposed"
        case .published: return "Published"
        case .unfinished: return "Unfinished"
        case .unlisted: return "Unlisted"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PackageVersionStatus(rawValue: rawValue) ?? PackageVersionStatus.sdkUnknown(rawValue)
    }
}
