// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> The details of a repository stored in AWS CodeArtifact. A CodeArtifact repository contains a set of
///       package versions, each of which maps to a set of assets. Repositories are polyglotâ€”a single
///       repository can contain packages of any supported type. Each repository exposes endpoints for
///       fetching and publishing packages using tools like the <code>npm</code> CLI, the Maven CLI
///         (<code>mvn</code>), and <code>pip</code>. You can create up to 100 repositories per AWS
///       account. </p>
public struct RepositoryDescription: Equatable {
    /// <p> The 12-digit account number of the AWS account that manages the repository. </p>
    public let administratorAccount: String?
    /// <p> The Amazon Resource Name (ARN) of the repository. </p>
    public let arn: String?
    /// <p>
    ///       A text description of the repository.
    ///     </p>
    public let description: String?
    /// <p>
    ///         The name of the domain that contains the repository.
    ///        </p>
    public let domainName: String?
    /// <p>
    ///         The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include
    ///         dashes or spaces.
    ///       </p>
    public let domainOwner: String?
    /// <p>
    ///       An array of external connections associated with the repository.
    ///     </p>
    public let externalConnections: [RepositoryExternalConnectionInfo]?
    /// <p>
    ///         The name of the repository.
    ///        </p>
    public let name: String?
    /// <p> A list of upstream repositories to associate with the repository. The order of the upstream repositories
    ///         in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more
    ///         information, see <a href="https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html">Working with upstream repositories</a>. </p>
    public let upstreams: [UpstreamRepositoryInfo]?

    public init (
        administratorAccount: String? = nil,
        arn: String? = nil,
        description: String? = nil,
        domainName: String? = nil,
        domainOwner: String? = nil,
        externalConnections: [RepositoryExternalConnectionInfo]? = nil,
        name: String? = nil,
        upstreams: [UpstreamRepositoryInfo]? = nil
    )
    {
        self.administratorAccount = administratorAccount
        self.arn = arn
        self.description = description
        self.domainName = domainName
        self.domainOwner = domainOwner
        self.externalConnections = externalConnections
        self.name = name
        self.upstreams = upstreams
    }
}
