// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAuthorizationTokenOutputBody: Equatable {
    public let authorizationToken: String?
    public let expiration: Date?
}

extension GetAuthorizationTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authorizationToken
        case expiration
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .authorizationToken)
        authorizationToken = authorizationTokenDecoded
        let expirationDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .expiration)
        expiration = expirationDecoded
    }
}
