// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPackageVersionReadmeOutputBody: Equatable {
    public let format: PackageFormat?
    public let namespace: String?
    public let package: String?
    public let version: String?
    public let versionRevision: String?
    public let readme: String?
}

extension GetPackageVersionReadmeOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case format
        case namespace
        case package
        case readme
        case version
        case versionRevision
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatDecoded = try containerValues.decodeIfPresent(PackageFormat.self, forKey: .format)
        format = formatDecoded
        let namespaceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .namespace)
        namespace = namespaceDecoded
        let packageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .package)
        package = packageDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let versionRevisionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionRevision)
        versionRevision = versionRevisionDecoded
        let readmeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .readme)
        readme = readmeDecoded
    }
}
