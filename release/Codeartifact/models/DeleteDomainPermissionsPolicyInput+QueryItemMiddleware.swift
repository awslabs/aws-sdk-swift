// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteDomainPermissionsPolicyInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteDomainPermissionsPolicyInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteDomainPermissionsPolicyInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteDomainPermissionsPolicyOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let domain = input.operationInput.domain {
            let domainQueryItem = URLQueryItem(name: "domain".urlPercentEncoding(), value: String(domain).urlPercentEncoding())
            input.builder.withQueryItem(domainQueryItem)
        }
        if let domainOwner = input.operationInput.domainOwner {
            let domainOwnerQueryItem = URLQueryItem(name: "domain-owner".urlPercentEncoding(), value: String(domainOwner).urlPercentEncoding())
            input.builder.withQueryItem(domainOwnerQueryItem)
        }
        if let policyRevision = input.operationInput.policyRevision {
            let policyRevisionQueryItem = URLQueryItem(name: "policy-revision".urlPercentEncoding(), value: String(policyRevision).urlPercentEncoding())
            input.builder.withQueryItem(policyRevisionQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteDomainPermissionsPolicyInput>
    public typealias MOutput = OperationOutput<DeleteDomainPermissionsPolicyOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DeleteDomainPermissionsPolicyOutputError>
}
