// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateScalingPlanInputBody: Equatable {
    public let scalingPlanName: String?
    public let applicationSource: ApplicationSource?
    public let scalingInstructions: [ScalingInstruction]?
}

extension CreateScalingPlanInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationSource = "ApplicationSource"
        case scalingInstructions = "ScalingInstructions"
        case scalingPlanName = "ScalingPlanName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalingPlanNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .scalingPlanName)
        scalingPlanName = scalingPlanNameDecoded
        let applicationSourceDecoded = try containerValues.decodeIfPresent(ApplicationSource.self, forKey: .applicationSource)
        applicationSource = applicationSourceDecoded
        let scalingInstructionsContainer = try containerValues.decodeIfPresent([ScalingInstruction].self, forKey: .scalingInstructions)
        var scalingInstructionsDecoded0:[ScalingInstruction]? = nil
        if let scalingInstructionsContainer = scalingInstructionsContainer {
            scalingInstructionsDecoded0 = [ScalingInstruction]()
            for structure0 in scalingInstructionsContainer {
                scalingInstructionsDecoded0?.append(structure0)
            }
        }
        scalingInstructions = scalingInstructionsDecoded0
    }
}
