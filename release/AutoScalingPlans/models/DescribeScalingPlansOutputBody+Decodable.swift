// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalingPlansOutputBody: Equatable {
    public let scalingPlans: [ScalingPlan]?
    public let nextToken: String?
}

extension DescribeScalingPlansOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case scalingPlans = "ScalingPlans"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalingPlansContainer = try containerValues.decodeIfPresent([ScalingPlan].self, forKey: .scalingPlans)
        var scalingPlansDecoded0:[ScalingPlan]? = nil
        if let scalingPlansContainer = scalingPlansContainer {
            scalingPlansDecoded0 = [ScalingPlan]()
            for structure0 in scalingPlansContainer {
                scalingPlansDecoded0?.append(structure0)
            }
        }
        scalingPlans = scalingPlansDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
