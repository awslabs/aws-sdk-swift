// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>AWS Auto Scaling</fullname>
///
///
///          <p>Use AWS Auto Scaling to create scaling plans for your applications to
///          automatically scale your scalable AWS resources. </p>
///          <p>
///             <b>API Summary</b>
///          </p>
///          <p>You can use the AWS Auto Scaling service API to accomplish the following tasks:</p>
///          <ul>
///             <li>
///                <p>Create and manage scaling plans</p>
///             </li>
///             <li>
///                <p>Define target tracking scaling policies to dynamically scale your resources based
///                on utilization</p>
///             </li>
///             <li>
///                <p>Scale Amazon EC2 Auto Scaling groups using predictive scaling and dynamic scaling to scale your
///                Amazon EC2 capacity faster</p>
///             </li>
///             <li>
///                <p>Set minimum and maximum capacity limits</p>
///             </li>
///             <li>
///                <p>Retrieve information on existing scaling plans</p>
///             </li>
///             <li>
///                <p>Access current forecast data and historical forecast data for up to 56 days
///                previous</p>
///             </li>
///          </ul>
///
///          <p>To learn more about AWS Auto Scaling, including information about granting IAM users required
///          permissions for AWS Auto Scaling actions, see the <a href="https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS Auto Scaling User Guide</a>. </p>
public protocol AutoScalingPlansClientProtocol {
    /// <p>Creates a scaling plan. </p>
    func createScalingPlan(input: CreateScalingPlanInput, completion: @escaping (SdkResult<CreateScalingPlanOutputResponse, CreateScalingPlanOutputError>) -> Void)
    /// <p>Deletes the specified scaling plan.</p>
    ///          <p>Deleting a scaling plan deletes the underlying <a>ScalingInstruction</a> for
    ///          all of the scalable resources that are covered by the plan.</p>
    ///          <p>If the plan has launched resources or has scaling activities in progress, you must
    ///          delete those resources separately.</p>
    func deleteScalingPlan(input: DeleteScalingPlanInput, completion: @escaping (SdkResult<DeleteScalingPlanOutputResponse, DeleteScalingPlanOutputError>) -> Void)
    /// <p>Describes the scalable resources in the specified scaling plan.</p>
    func describeScalingPlanResources(input: DescribeScalingPlanResourcesInput, completion: @escaping (SdkResult<DescribeScalingPlanResourcesOutputResponse, DescribeScalingPlanResourcesOutputError>) -> Void)
    /// <p>Describes one or more of your scaling plans.</p>
    func describeScalingPlans(input: DescribeScalingPlansInput, completion: @escaping (SdkResult<DescribeScalingPlansOutputResponse, DescribeScalingPlansOutputError>) -> Void)
    /// <p>Retrieves the forecast data for a scalable resource.</p>
    ///          <p>Capacity forecasts are represented as predicted values, or data points, that are
    ///          calculated using historical data points from a specified CloudWatch load metric. Data points are
    ///          available for up to 56 days. </p>
    func getScalingPlanResourceForecastData(input: GetScalingPlanResourceForecastDataInput, completion: @escaping (SdkResult<GetScalingPlanResourceForecastDataOutputResponse, GetScalingPlanResourceForecastDataOutputError>) -> Void)
    /// <p>Updates the specified scaling plan.</p>
    ///          <p>You cannot update a scaling plan if it is in the process of being created, updated, or
    ///          deleted.</p>
    func updateScalingPlan(input: UpdateScalingPlanInput, completion: @escaping (SdkResult<UpdateScalingPlanOutputResponse, UpdateScalingPlanOutputError>) -> Void)
}
