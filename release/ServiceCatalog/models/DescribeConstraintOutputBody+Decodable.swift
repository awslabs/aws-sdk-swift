// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConstraintOutputBody: Equatable {
    public let constraintDetail: ConstraintDetail?
    public let constraintParameters: String?
    public let status: Status?
}

extension DescribeConstraintOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case constraintDetail = "ConstraintDetail"
        case constraintParameters = "ConstraintParameters"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let constraintDetailDecoded = try containerValues.decodeIfPresent(ConstraintDetail.self, forKey: .constraintDetail)
        constraintDetail = constraintDetailDecoded
        let constraintParametersDecoded = try containerValues.decodeIfPresent(String.self, forKey: .constraintParameters)
        constraintParameters = constraintParametersDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Status.self, forKey: .status)
        status = statusDecoded
    }
}
