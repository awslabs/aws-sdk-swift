// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RecordStatus {
    case created
    case failed
    case inProgress
    case inProgressInError
    case succeeded
    case sdkUnknown(String)
}

extension RecordStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RecordStatus] {
        return [
            .created,
            .failed,
            .inProgress,
            .inProgressInError,
            .succeeded,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .created: return "CREATED"
        case .failed: return "FAILED"
        case .inProgress: return "IN_PROGRESS"
        case .inProgressInError: return "IN_PROGRESS_IN_ERROR"
        case .succeeded: return "SUCCEEDED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RecordStatus(rawValue: rawValue) ?? RecordStatus.sdkUnknown(rawValue)
    }
}
