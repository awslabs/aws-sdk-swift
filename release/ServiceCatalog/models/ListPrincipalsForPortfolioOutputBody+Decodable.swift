// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPrincipalsForPortfolioOutputBody: Equatable {
    public let principals: [Principal]?
    public let nextPageToken: String?
}

extension ListPrincipalsForPortfolioOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case principals = "Principals"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalsContainer = try containerValues.decodeIfPresent([Principal].self, forKey: .principals)
        var principalsDecoded0:[Principal]? = nil
        if let principalsContainer = principalsContainer {
            principalsDecoded0 = [Principal]()
            for structure0 in principalsContainer {
                principalsDecoded0?.append(structure0)
            }
        }
        principals = principalsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
