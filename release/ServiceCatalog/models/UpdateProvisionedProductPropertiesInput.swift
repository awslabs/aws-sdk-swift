// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateProvisionedProductPropertiesInput: Equatable {
    /// <p>The language code.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>en</code> - English (default)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>jp</code> - Japanese</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>zh</code> - Chinese</p>
    ///             </li>
    ///          </ul>
    public let acceptLanguage: String?
    /// <p>The idempotency token that uniquely identifies the provisioning product update request.</p>
    public var idempotencyToken: String?
    /// <p>The identifier of the provisioned product.</p>
    public let provisionedProductId: String?
    /// <p>A map that contains the provisioned product properties to be updated.</p>
    ///          <p>The <code>LAUNCH_ROLE</code> key accepts role ARNs. This key allows an
    ///          administrator to call <code>UpdateProvisionedProductProperties</code> to update the launch
    ///          role that is associated with a provisioned product. This role is used when an end user
    ///          calls a provisioning operation such as <code>UpdateProvisionedProduct</code>,
    ///             <code>TerminateProvisionedProduct</code>, or
    ///             <code>ExecuteProvisionedProductServiceAction</code>. Only a role ARN is valid. A user ARN is invalid. </p>
    ///
    ///          <p>The <code>OWNER</code> key accepts user ARNs and role ARNs. The owner is the user
    ///          that has permission to see, update, terminate, and execute service actions in the
    ///          provisioned product.</p>
    ///          <p>The administrator can change the owner of a provisioned product to another IAM user within the same account. Both end user owners and
    ///          administrators can see ownership history of the provisioned product using the <code>ListRecordHistory</code> API. The new owner can
    ///       describe all past records for the provisioned product using the <code>DescribeRecord</code> API. The previous owner can no longer use <code>DescribeRecord</code>,
    ///       but can still see the product's history from when he was an owner using <code>ListRecordHistory</code>.</p>
    ///          <p>If a provisioned product ownership is assigned to an end user, they can see and perform any action through the API or
    ///          Service Catalog console such as update, terminate, and execute service actions.
    ///          If an end user provisions a product and the owner is updated to someone else, they will no longer be able to see or perform any actions through
    ///          API or the Service Catalog console on that provisioned product.</p>
    public let provisionedProductProperties: [String:String]?

    public init (
        acceptLanguage: String? = nil,
        idempotencyToken: String? = nil,
        provisionedProductId: String? = nil,
        provisionedProductProperties: [String:String]? = nil
    )
    {
        self.acceptLanguage = acceptLanguage
        self.idempotencyToken = idempotencyToken
        self.provisionedProductId = provisionedProductId
        self.provisionedProductProperties = provisionedProductProperties
    }
}
