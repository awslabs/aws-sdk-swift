// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisioningArtifactsForServiceActionOutputBody: Equatable {
    public let provisioningArtifactViews: [ProvisioningArtifactView]?
    public let nextPageToken: String?
}

extension ListProvisioningArtifactsForServiceActionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case provisioningArtifactViews = "ProvisioningArtifactViews"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisioningArtifactViewsContainer = try containerValues.decodeIfPresent([ProvisioningArtifactView].self, forKey: .provisioningArtifactViews)
        var provisioningArtifactViewsDecoded0:[ProvisioningArtifactView]? = nil
        if let provisioningArtifactViewsContainer = provisioningArtifactViewsContainer {
            provisioningArtifactViewsDecoded0 = [ProvisioningArtifactView]()
            for structure0 in provisioningArtifactViewsContainer {
                provisioningArtifactViewsDecoded0?.append(structure0)
            }
        }
        provisioningArtifactViews = provisioningArtifactViewsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
