// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Summary information about a product view.</p>
public struct ProductViewSummary: Equatable {
    /// <p>The distributor of the product. Contact the product administrator for the
    ///          significance of this value.</p>
    public let distributor: String?
    /// <p>Indicates whether the product has a default path.
    ///          If the product does not have a default path, call <a>ListLaunchPaths</a>
    ///          to disambiguate between paths. Otherwise, <a>ListLaunchPaths</a> is not
    ///          required, and the output of <a>ProductViewSummary</a> can be used directly with
    ///          <a>DescribeProvisioningParameters</a>.</p>
    public let hasDefaultPath: Bool
    /// <p>The product view identifier.</p>
    public let id: String?
    /// <p>The name of the product.</p>
    public let name: String?
    /// <p>The owner of the product. Contact the product administrator for the significance of
    ///          this value.</p>
    public let owner: String?
    /// <p>The product identifier.</p>
    public let productId: String?
    /// <p>Short description of the product.</p>
    public let shortDescription: String?
    /// <p>The description of the support for this Product.</p>
    public let supportDescription: String?
    /// <p>The email contact information to obtain support for this Product.</p>
    public let supportEmail: String?
    /// <p>The URL information to obtain support for this Product.</p>
    public let supportUrl: String?
    /// <p>The product type. Contact the product administrator for the significance of this
    ///          value. If this value is <code>MARKETPLACE</code>, the product was created by AWS
    ///          Marketplace.</p>
    public let type: ProductType?

    public init (
        distributor: String? = nil,
        hasDefaultPath: Bool = false,
        id: String? = nil,
        name: String? = nil,
        owner: String? = nil,
        productId: String? = nil,
        shortDescription: String? = nil,
        supportDescription: String? = nil,
        supportEmail: String? = nil,
        supportUrl: String? = nil,
        type: ProductType? = nil
    )
    {
        self.distributor = distributor
        self.hasDefaultPath = hasDefaultPath
        self.id = id
        self.name = name
        self.owner = owner
        self.productId = productId
        self.shortDescription = shortDescription
        self.supportDescription = supportDescription
        self.supportEmail = supportEmail
        self.supportUrl = supportUrl
        self.type = type
    }
}
