// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisionedProductPlansOutputBody: Equatable {
    public let provisionedProductPlans: [ProvisionedProductPlanSummary]?
    public let nextPageToken: String?
}

extension ListProvisionedProductPlansOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case provisionedProductPlans = "ProvisionedProductPlans"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionedProductPlansContainer = try containerValues.decodeIfPresent([ProvisionedProductPlanSummary].self, forKey: .provisionedProductPlans)
        var provisionedProductPlansDecoded0:[ProvisionedProductPlanSummary]? = nil
        if let provisionedProductPlansContainer = provisionedProductPlansContainer {
            provisionedProductPlansDecoded0 = [ProvisionedProductPlanSummary]()
            for structure0 in provisionedProductPlansContainer {
                provisionedProductPlansDecoded0?.append(structure0)
            }
        }
        provisionedProductPlans = provisionedProductPlansDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
