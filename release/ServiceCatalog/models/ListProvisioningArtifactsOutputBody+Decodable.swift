// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProvisioningArtifactsOutputBody: Equatable {
    public let provisioningArtifactDetails: [ProvisioningArtifactDetail]?
    public let nextPageToken: String?
}

extension ListProvisioningArtifactsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case provisioningArtifactDetails = "ProvisioningArtifactDetails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisioningArtifactDetailsContainer = try containerValues.decodeIfPresent([ProvisioningArtifactDetail].self, forKey: .provisioningArtifactDetails)
        var provisioningArtifactDetailsDecoded0:[ProvisioningArtifactDetail]? = nil
        if let provisioningArtifactDetailsContainer = provisioningArtifactDetailsContainer {
            provisioningArtifactDetailsDecoded0 = [ProvisioningArtifactDetail]()
            for structure0 in provisioningArtifactDetailsContainer {
                provisioningArtifactDetailsDecoded0?.append(structure0)
            }
        }
        provisioningArtifactDetails = provisioningArtifactDetailsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
