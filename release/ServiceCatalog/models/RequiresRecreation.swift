// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RequiresRecreation {
    case always
    case conditionally
    case never
    case sdkUnknown(String)
}

extension RequiresRecreation : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RequiresRecreation] {
        return [
            .always,
            .conditionally,
            .never,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .always: return "ALWAYS"
        case .conditionally: return "CONDITIONALLY"
        case .never: return "NEVER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RequiresRecreation(rawValue: rawValue) ?? RequiresRecreation.sdkUnknown(rawValue)
    }
}
