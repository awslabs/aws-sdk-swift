// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProvisioningArtifactInputBody: Equatable {
    public let acceptLanguage: String?
    public let provisioningArtifactId: String?
    public let productId: String?
    public let provisioningArtifactName: String?
    public let productName: String?
    public let verbose: Bool
}

extension DescribeProvisioningArtifactInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case productId = "ProductId"
        case productName = "ProductName"
        case provisioningArtifactId = "ProvisioningArtifactId"
        case provisioningArtifactName = "ProvisioningArtifactName"
        case verbose = "Verbose"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
        let provisioningArtifactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .provisioningArtifactId)
        provisioningArtifactId = provisioningArtifactIdDecoded
        let productIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .productId)
        productId = productIdDecoded
        let provisioningArtifactNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .provisioningArtifactName)
        provisioningArtifactName = provisioningArtifactNameDecoded
        let productNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .productName)
        productName = productNameDecoded
        let verboseDecoded = try containerValues.decode(Bool.self, forKey: .verbose)
        verbose = verboseDecoded
    }
}
