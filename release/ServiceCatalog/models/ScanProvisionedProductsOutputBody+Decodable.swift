// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ScanProvisionedProductsOutputBody: Equatable {
    public let provisionedProducts: [ProvisionedProductDetail]?
    public let nextPageToken: String?
}

extension ScanProvisionedProductsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case provisionedProducts = "ProvisionedProducts"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionedProductsContainer = try containerValues.decodeIfPresent([ProvisionedProductDetail].self, forKey: .provisionedProducts)
        var provisionedProductsDecoded0:[ProvisionedProductDetail]? = nil
        if let provisionedProductsContainer = provisionedProductsContainer {
            provisionedProductsDecoded0 = [ProvisionedProductDetail]()
            for structure0 in provisionedProductsContainer {
                provisionedProductsDecoded0?.append(structure0)
            }
        }
        provisionedProducts = provisionedProductsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
