// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLaunchPathsOutputBody: Equatable {
    public let launchPathSummaries: [LaunchPathSummary]?
    public let nextPageToken: String?
}

extension ListLaunchPathsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case launchPathSummaries = "LaunchPathSummaries"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchPathSummariesContainer = try containerValues.decodeIfPresent([LaunchPathSummary].self, forKey: .launchPathSummaries)
        var launchPathSummariesDecoded0:[LaunchPathSummary]? = nil
        if let launchPathSummariesContainer = launchPathSummariesContainer {
            launchPathSummariesDecoded0 = [LaunchPathSummary]()
            for structure0 in launchPathSummariesContainer {
                launchPathSummariesDecoded0?.append(structure0)
            }
        }
        launchPathSummaries = launchPathSummariesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
