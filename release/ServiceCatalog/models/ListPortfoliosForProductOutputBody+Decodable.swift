// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPortfoliosForProductOutputBody: Equatable {
    public let portfolioDetails: [PortfolioDetail]?
    public let nextPageToken: String?
}

extension ListPortfoliosForProductOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case portfolioDetails = "PortfolioDetails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let portfolioDetailsContainer = try containerValues.decodeIfPresent([PortfolioDetail].self, forKey: .portfolioDetails)
        var portfolioDetailsDecoded0:[PortfolioDetail]? = nil
        if let portfolioDetailsContainer = portfolioDetailsContainer {
            portfolioDetailsDecoded0 = [PortfolioDetail]()
            for structure0 in portfolioDetailsContainer {
                portfolioDetailsDecoded0?.append(structure0)
            }
        }
        portfolioDetails = portfolioDetailsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
