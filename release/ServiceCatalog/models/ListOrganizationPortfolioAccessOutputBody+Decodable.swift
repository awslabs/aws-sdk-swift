// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOrganizationPortfolioAccessOutputBody: Equatable {
    public let organizationNodes: [OrganizationNode]?
    public let nextPageToken: String?
}

extension ListOrganizationPortfolioAccessOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case organizationNodes = "OrganizationNodes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationNodesContainer = try containerValues.decodeIfPresent([OrganizationNode].self, forKey: .organizationNodes)
        var organizationNodesDecoded0:[OrganizationNode]? = nil
        if let organizationNodesContainer = organizationNodesContainer {
            organizationNodesDecoded0 = [OrganizationNode]()
            for structure0 in organizationNodesContainer {
                organizationNodesDecoded0?.append(structure0)
            }
        }
        organizationNodes = organizationNodesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
