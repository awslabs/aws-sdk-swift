// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStackInstancesForProvisionedProductOutputBody: Equatable {
    public let stackInstances: [StackInstance]?
    public let nextPageToken: String?
}

extension ListStackInstancesForProvisionedProductOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case stackInstances = "StackInstances"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackInstancesContainer = try containerValues.decodeIfPresent([StackInstance].self, forKey: .stackInstances)
        var stackInstancesDecoded0:[StackInstance]? = nil
        if let stackInstancesContainer = stackInstancesContainer {
            stackInstancesDecoded0 = [StackInstance]()
            for structure0 in stackInstancesContainer {
                stackInstancesDecoded0?.append(structure0)
            }
        }
        stackInstances = stackInstancesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
