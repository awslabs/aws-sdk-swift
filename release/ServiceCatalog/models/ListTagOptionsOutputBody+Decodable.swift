// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTagOptionsOutputBody: Equatable {
    public let tagOptionDetails: [TagOptionDetail]?
    public let pageToken: String?
}

extension ListTagOptionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case pageToken = "PageToken"
        case tagOptionDetails = "TagOptionDetails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tagOptionDetailsContainer = try containerValues.decodeIfPresent([TagOptionDetail].self, forKey: .tagOptionDetails)
        var tagOptionDetailsDecoded0:[TagOptionDetail]? = nil
        if let tagOptionDetailsContainer = tagOptionDetailsContainer {
            tagOptionDetailsDecoded0 = [TagOptionDetail]()
            for structure0 in tagOptionDetailsContainer {
                tagOptionDetailsDecoded0?.append(structure0)
            }
        }
        tagOptionDetails = tagOptionDetailsDecoded0
        let pageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pageToken)
        pageToken = pageTokenDecoded
    }
}
