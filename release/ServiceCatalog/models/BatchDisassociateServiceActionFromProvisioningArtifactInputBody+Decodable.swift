// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDisassociateServiceActionFromProvisioningArtifactInputBody: Equatable {
    public let serviceActionAssociations: [ServiceActionAssociation]?
    public let acceptLanguage: String?
}

extension BatchDisassociateServiceActionFromProvisioningArtifactInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case serviceActionAssociations = "ServiceActionAssociations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceActionAssociationsContainer = try containerValues.decodeIfPresent([ServiceActionAssociation].self, forKey: .serviceActionAssociations)
        var serviceActionAssociationsDecoded0:[ServiceActionAssociation]? = nil
        if let serviceActionAssociationsContainer = serviceActionAssociationsContainer {
            serviceActionAssociationsDecoded0 = [ServiceActionAssociation]()
            for structure0 in serviceActionAssociationsContainer {
                serviceActionAssociationsDecoded0?.append(structure0)
            }
        }
        serviceActionAssociations = serviceActionAssociationsDecoded0
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
    }
}
