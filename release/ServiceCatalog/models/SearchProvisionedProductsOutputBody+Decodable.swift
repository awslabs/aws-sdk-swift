// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchProvisionedProductsOutputBody: Equatable {
    public let provisionedProducts: [ProvisionedProductAttribute]?
    public let totalResultsCount: Int
    public let nextPageToken: String?
}

extension SearchProvisionedProductsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case provisionedProducts = "ProvisionedProducts"
        case totalResultsCount = "TotalResultsCount"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisionedProductsContainer = try containerValues.decodeIfPresent([ProvisionedProductAttribute].self, forKey: .provisionedProducts)
        var provisionedProductsDecoded0:[ProvisionedProductAttribute]? = nil
        if let provisionedProductsContainer = provisionedProductsContainer {
            provisionedProductsDecoded0 = [ProvisionedProductAttribute]()
            for structure0 in provisionedProductsContainer {
                provisionedProductsDecoded0?.append(structure0)
            }
        }
        provisionedProducts = provisionedProductsDecoded0
        let totalResultsCountDecoded = try containerValues.decode(Int.self, forKey: .totalResultsCount)
        totalResultsCount = totalResultsCountDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
