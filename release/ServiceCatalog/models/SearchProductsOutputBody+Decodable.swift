// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchProductsOutputBody: Equatable {
    public let productViewSummaries: [ProductViewSummary]?
    public let productViewAggregations: [String:[ProductViewAggregationValue]?]?
    public let nextPageToken: String?
}

extension SearchProductsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case productViewAggregations = "ProductViewAggregations"
        case productViewSummaries = "ProductViewSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productViewSummariesContainer = try containerValues.decodeIfPresent([ProductViewSummary].self, forKey: .productViewSummaries)
        var productViewSummariesDecoded0:[ProductViewSummary]? = nil
        if let productViewSummariesContainer = productViewSummariesContainer {
            productViewSummariesDecoded0 = [ProductViewSummary]()
            for structure0 in productViewSummariesContainer {
                productViewSummariesDecoded0?.append(structure0)
            }
        }
        productViewSummaries = productViewSummariesDecoded0
        let productViewAggregationsContainer = try containerValues.decodeIfPresent([String:[ProductViewAggregationValue]?].self, forKey: .productViewAggregations)
        var productViewAggregationsDecoded0: [String:[ProductViewAggregationValue]?]? = nil
        if let productViewAggregationsContainer = productViewAggregationsContainer {
            productViewAggregationsDecoded0 = [String:[ProductViewAggregationValue]?]()
            for (key0, productviewaggregationvalues0) in productViewAggregationsContainer {
                var productviewaggregationvalues0Decoded0 = [ProductViewAggregationValue]()
                if let productviewaggregationvalues0 = productviewaggregationvalues0 {
                    for structure1 in productviewaggregationvalues0 {
                        productviewaggregationvalues0Decoded0.append(structure1)
                    }
                }
                productViewAggregationsDecoded0?[key0] = productviewaggregationvalues0Decoded0
            }
        }
        productViewAggregations = productViewAggregationsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
