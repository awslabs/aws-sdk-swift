// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProvisioningArtifactOutputBody: Equatable {
    public let provisioningArtifactDetail: ProvisioningArtifactDetail?
    public let info: [String:String]?
    public let status: Status?
}

extension CreateProvisioningArtifactOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case info = "Info"
        case provisioningArtifactDetail = "ProvisioningArtifactDetail"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let provisioningArtifactDetailDecoded = try containerValues.decodeIfPresent(ProvisioningArtifactDetail.self, forKey: .provisioningArtifactDetail)
        provisioningArtifactDetail = provisioningArtifactDetailDecoded
        let infoContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .info)
        var infoDecoded0: [String:String]? = nil
        if let infoContainer = infoContainer {
            infoDecoded0 = [String:String]()
            for (key0, provisioningartifactinfovalue0) in infoContainer {
                infoDecoded0?[key0] = provisioningartifactinfovalue0
            }
        }
        info = infoDecoded0
        let statusDecoded = try containerValues.decodeIfPresent(Status.self, forKey: .status)
        status = statusDecoded
    }
}
