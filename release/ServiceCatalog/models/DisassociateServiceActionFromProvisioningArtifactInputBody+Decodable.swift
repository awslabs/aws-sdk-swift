// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociateServiceActionFromProvisioningArtifactInputBody: Equatable {
    public let productId: String?
    public let provisioningArtifactId: String?
    public let serviceActionId: String?
    public let acceptLanguage: String?
}

extension DisassociateServiceActionFromProvisioningArtifactInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceptLanguage = "AcceptLanguage"
        case productId = "ProductId"
        case provisioningArtifactId = "ProvisioningArtifactId"
        case serviceActionId = "ServiceActionId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .productId)
        productId = productIdDecoded
        let provisioningArtifactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .provisioningArtifactId)
        provisioningArtifactId = provisioningArtifactIdDecoded
        let serviceActionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceActionId)
        serviceActionId = serviceActionIdDecoded
        let acceptLanguageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .acceptLanguage)
        acceptLanguage = acceptLanguageDecoded
    }
}
