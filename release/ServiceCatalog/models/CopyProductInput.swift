// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CopyProductInput: Equatable {
    /// <p>The language code.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>en</code> - English (default)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>jp</code> - Japanese</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>zh</code> - Chinese</p>
    ///             </li>
    ///          </ul>
    public let acceptLanguage: String?
    /// <p>The copy options. If the value is <code>CopyTags</code>, the tags from the source
    ///          product are copied to the target product.</p>
    public let copyOptions: [CopyOption]?
    /// <p> A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token,
    ///   the same response is returned for each repeated request. </p>
    public var idempotencyToken: String?
    /// <p>The Amazon Resource Name (ARN) of the source product.</p>
    public let sourceProductArn: String?
    /// <p>The identifiers of the provisioning artifacts (also known as versions) of the product to copy.
    ///          By default, all provisioning artifacts are copied.</p>
    public let sourceProvisioningArtifactIdentifiers: [[String:String]?]?
    /// <p>The identifier of the target product. By default, a new product is created.</p>
    public let targetProductId: String?
    /// <p>A name for the target product. The default is the name of the source product.</p>
    public let targetProductName: String?

    public init (
        acceptLanguage: String? = nil,
        copyOptions: [CopyOption]? = nil,
        idempotencyToken: String? = nil,
        sourceProductArn: String? = nil,
        sourceProvisioningArtifactIdentifiers: [[String:String]?]? = nil,
        targetProductId: String? = nil,
        targetProductName: String? = nil
    )
    {
        self.acceptLanguage = acceptLanguage
        self.copyOptions = copyOptions
        self.idempotencyToken = idempotencyToken
        self.sourceProductArn = sourceProductArn
        self.sourceProvisioningArtifactIdentifiers = sourceProvisioningArtifactIdentifiers
        self.targetProductId = targetProductId
        self.targetProductName = targetProductName
    }
}
