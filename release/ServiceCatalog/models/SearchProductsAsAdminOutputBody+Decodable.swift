// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchProductsAsAdminOutputBody: Equatable {
    public let productViewDetails: [ProductViewDetail]?
    public let nextPageToken: String?
}

extension SearchProductsAsAdminOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken = "NextPageToken"
        case productViewDetails = "ProductViewDetails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productViewDetailsContainer = try containerValues.decodeIfPresent([ProductViewDetail].self, forKey: .productViewDetails)
        var productViewDetailsDecoded0:[ProductViewDetail]? = nil
        if let productViewDetailsContainer = productViewDetailsContainer {
            productViewDetailsDecoded0 = [ProductViewDetail]()
            for structure0 in productViewDetailsContainer {
                productViewDetailsDecoded0?.append(structure0)
            }
        }
        productViewDetails = productViewDetailsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
