// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ProvisioningArtifactType {
    case cloudFormationTemplate
    case marketplaceAmi
    case marketplaceCar
    case sdkUnknown(String)
}

extension ProvisioningArtifactType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProvisioningArtifactType] {
        return [
            .cloudFormationTemplate,
            .marketplaceAmi,
            .marketplaceCar,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cloudFormationTemplate: return "CLOUD_FORMATION_TEMPLATE"
        case .marketplaceAmi: return "MARKETPLACE_AMI"
        case .marketplaceCar: return "MARKETPLACE_CAR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProvisioningArtifactType(rawValue: rawValue) ?? ProvisioningArtifactType.sdkUnknown(rawValue)
    }
}
