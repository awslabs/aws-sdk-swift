// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGraphsOutputBody: Equatable {
    public let graphList: [Graph]?
    public let nextToken: String?
}

extension ListGraphsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case graphList = "GraphList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let graphListContainer = try containerValues.decodeIfPresent([Graph].self, forKey: .graphList)
        var graphListDecoded0:[Graph]? = nil
        if let graphListContainer = graphListContainer {
            graphListDecoded0 = [Graph]()
            for structure0 in graphListContainer {
                graphListDecoded0?.append(structure0)
            }
        }
        graphList = graphListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
