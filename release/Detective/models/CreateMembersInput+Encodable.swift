// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateMembersInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accounts = "Accounts"
        case disableEmailNotification = "DisableEmailNotification"
        case graphArn = "GraphArn"
        case message = "Message"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accounts = accounts {
            var accountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accounts)
            for accountlist0 in accounts {
                try accountsContainer.encode(accountlist0)
            }
        }
        if disableEmailNotification != false {
            try encodeContainer.encode(disableEmailNotification, forKey: .disableEmailNotification)
        }
        if let graphArn = graphArn {
            try encodeContainer.encode(graphArn, forKey: .graphArn)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
    }
}
