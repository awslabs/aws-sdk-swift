// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Details about a member account that was invited to contribute to a behavior
///          graph.</p>
public struct MemberDetail: Equatable {
    /// <p>The AWS account identifier for the member account.</p>
    public let accountId: String?
    /// <p>The AWS account identifier of the administrator account for the behavior graph.</p>
    public let administratorId: String?
    /// <p>For member accounts with a status of <code>ACCEPTED_BUT_DISABLED</code>, the reason that
    ///          the member account is not enabled.</p>
    ///          <p>The reason can have one of the following values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>VOLUME_TOO_HIGH</code> - Indicates that adding the member account would
    ///                cause the data volume for the behavior graph to be too high.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VOLUME_UNKNOWN</code> - Indicates that Detective is unable to verify the data
    ///                volume for the member account. This is usually because the member account is not
    ///                enrolled in Amazon GuardDuty. </p>
    ///             </li>
    ///          </ul>
    public let disabledReason: MemberDisabledReason?
    /// <p>The AWS account root user email address for the member account.</p>
    public let emailAddress: String?
    /// <p>The ARN of the behavior graph that the member account was invited to.</p>
    public let graphArn: String?
    /// <p>The date and time that Detective sent the invitation to the member account. The value is in
    ///          milliseconds since the epoch.</p>
    public let invitedTime: Date?
    /// <p>The AWS account identifier of the administrator account for the behavior graph.</p>
    @available(*, deprecated, message: "This property is deprecated. Use AdministratorId instead.")
    public let masterId: String?
    /// <p>The member account data volume as a percentage of the maximum allowed data volume. 0
    ///          indicates 0 percent, and 100 indicates 100 percent.</p>
    ///          <p>Note that this is not the percentage of the behavior graph data volume.</p>
    ///          <p>For example, the data volume for the behavior graph is 80 GB per day. The maximum data
    ///          volume is 160 GB per day. If the data volume for the member account is 40 GB per day, then
    ///             <code>PercentOfGraphUtilization</code> is 25. It represents 25% of the maximum allowed
    ///          data volume. </p>
    @available(*, deprecated, message: "This property is deprecated. Use VolumeUsageInBytes instead.")
    public let percentOfGraphUtilization: Double?
    /// <p>The date and time when the graph utilization percentage was last updated.</p>
    @available(*, deprecated, message: "This property is deprecated. Use VolumeUsageUpdatedTime instead.")
    public let percentOfGraphUtilizationUpdatedTime: Date?
    /// <p>The current membership status of the member account. The status can have one of the
    ///          following values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>INVITED</code> - Indicates that the member was sent an invitation but has
    ///                not yet responded.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VERIFICATION_IN_PROGRESS</code> - Indicates that Detective is verifying that the
    ///                account identifier and email address provided for the member account match. If they
    ///                do match, then Detective sends the invitation. If the email address and account
    ///                identifier don't match, then the member cannot be added to the behavior graph.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VERIFICATION_FAILED</code> - Indicates that the account and email address
    ///                provided for the member account do not match, and Detective did not send an invitation to
    ///                the account.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ENABLED</code> - Indicates that the member account accepted the invitation
    ///                to contribute to the behavior graph.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ACCEPTED_BUT_DISABLED</code> - Indicates that the member account accepted
    ///                the invitation but is prevented from contributing data to the behavior graph.
    ///                   <code>DisabledReason</code> provides the reason why the member account is not
    ///                enabled.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Member accounts that declined an invitation or that were removed from the behavior graph
    ///          are not included.</p>
    public let status: MemberStatus?
    /// <p>The date and time that the member account was last updated. The value is in milliseconds
    ///          since the epoch.</p>
    public let updatedTime: Date?
    /// <p>The data volume in bytes per day for the member account.</p>
    public let volumeUsageInBytes: Int?
    /// <p>The data and time when the member account data volume was last updated.</p>
    public let volumeUsageUpdatedTime: Date?

    public init (
        accountId: String? = nil,
        administratorId: String? = nil,
        disabledReason: MemberDisabledReason? = nil,
        emailAddress: String? = nil,
        graphArn: String? = nil,
        invitedTime: Date? = nil,
        masterId: String? = nil,
        percentOfGraphUtilization: Double? = nil,
        percentOfGraphUtilizationUpdatedTime: Date? = nil,
        status: MemberStatus? = nil,
        updatedTime: Date? = nil,
        volumeUsageInBytes: Int? = nil,
        volumeUsageUpdatedTime: Date? = nil
    )
    {
        self.accountId = accountId
        self.administratorId = administratorId
        self.disabledReason = disabledReason
        self.emailAddress = emailAddress
        self.graphArn = graphArn
        self.invitedTime = invitedTime
        self.masterId = masterId
        self.percentOfGraphUtilization = percentOfGraphUtilization
        self.percentOfGraphUtilizationUpdatedTime = percentOfGraphUtilizationUpdatedTime
        self.status = status
        self.updatedTime = updatedTime
        self.volumeUsageInBytes = volumeUsageInBytes
        self.volumeUsageUpdatedTime = volumeUsageUpdatedTime
    }
}
