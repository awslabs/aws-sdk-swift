// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A grouping of protected resources that you and AWS Shield Advanced can monitor as a collective. This resource grouping improves the accuracy of detection and reduces false positives. </p>
public struct ProtectionGroup: Equatable {
    /// <p>Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.</p>
    ///          <ul>
    ///             <li>
    ///                <p>Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.</p>
    ///             </li>
    ///             <li>
    ///                <p>Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.</p>
    ///             </li>
    ///             <li>
    ///                <p>Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include CloudFront distributions and origin resources for CloudFront distributions.</p>
    ///             </li>
    ///          </ul>
    public let aggregation: ProtectionGroupAggregation?
    /// <p>The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set <code>Pattern</code> to <code>ARBITRARY</code> and you must not set it for any other <code>Pattern</code> setting. </p>
    public let members: [String]?
    /// <p>The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.</p>
    public let pattern: ProtectionGroupPattern?
    /// <p>The ARN (Amazon Resource Name) of the protection group.</p>
    public let protectionGroupArn: String?
    /// <p>The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it. </p>
    public let protectionGroupId: String?
    /// <p>The resource type to include in the protection group. All protected resources of this type are included in the protection group.
    ///            You must set this when you set <code>Pattern</code> to <code>BY_RESOURCE_TYPE</code> and you must not set it for any other <code>Pattern</code> setting. </p>
    public let resourceType: ProtectedResourceType?

    public init (
        aggregation: ProtectionGroupAggregation? = nil,
        members: [String]? = nil,
        pattern: ProtectionGroupPattern? = nil,
        protectionGroupArn: String? = nil,
        protectionGroupId: String? = nil,
        resourceType: ProtectedResourceType? = nil
    )
    {
        self.aggregation = aggregation
        self.members = members
        self.pattern = pattern
        self.protectionGroupArn = protectionGroupArn
        self.protectionGroupId = protectionGroupId
        self.resourceType = resourceType
    }
}
