// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ProtectedResourceType {
    case applicationLoadBalancer
    case classicLoadBalancer
    case cloudfrontDistribution
    case elasticIpAllocation
    case globalAccelerator
    case route53HostedZone
    case sdkUnknown(String)
}

extension ProtectedResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProtectedResourceType] {
        return [
            .applicationLoadBalancer,
            .classicLoadBalancer,
            .cloudfrontDistribution,
            .elasticIpAllocation,
            .globalAccelerator,
            .route53HostedZone,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .applicationLoadBalancer: return "APPLICATION_LOAD_BALANCER"
        case .classicLoadBalancer: return "CLASSIC_LOAD_BALANCER"
        case .cloudfrontDistribution: return "CLOUDFRONT_DISTRIBUTION"
        case .elasticIpAllocation: return "ELASTIC_IP_ALLOCATION"
        case .globalAccelerator: return "GLOBAL_ACCELERATOR"
        case .route53HostedZone: return "ROUTE_53_HOSTED_ZONE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProtectedResourceType(rawValue: rawValue) ?? ProtectedResourceType.sdkUnknown(rawValue)
    }
}
