// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartNextPendingJobExecutionInput: Equatable {
    /// <p>A collection of name/value pairs that describe the status of the job execution. If not specified, the
    ///          statusDetails are unchanged.</p>
    public let statusDetails: [String:String]?
    /// <p>Specifies the amount of time this device has to finish execution of this job. If the job
    ///            execution status is not set to a terminal state before this timer expires, or before the
    ///            timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to
    ///            <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>)
    ///            the job execution status will be automatically set to <code>TIMED_OUT</code>.  Note that setting
    ///            this timeout has no effect on that job execution timeout which may have been specified when
    ///            the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).</p>
    public let stepTimeoutInMinutes: Int?
    /// <p>The name of the thing associated with the device.</p>
    public let thingName: String?

    public init (
        statusDetails: [String:String]? = nil,
        stepTimeoutInMinutes: Int? = nil,
        thingName: String? = nil
    )
    {
        self.statusDetails = statusDetails
        self.stepTimeoutInMinutes = stepTimeoutInMinutes
        self.thingName = thingName
    }
}
