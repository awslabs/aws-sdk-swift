// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchStopUpdateActionInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheClusterIds = cacheClusterIds {
            var cacheClusterIdsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("CacheClusterIds"))
            for (index0, string0) in cacheClusterIds.enumerated() {
                try cacheClusterIdsContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let replicationGroupIds = replicationGroupIds {
            var replicationGroupIdsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("ReplicationGroupIds"))
            for (index0, string0) in replicationGroupIds.enumerated() {
                try replicationGroupIdsContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let serviceUpdateName = serviceUpdateName {
            try container.encode(serviceUpdateName, forKey: Key("ServiceUpdateName"))
        }
        try container.encode("BatchStopUpdateAction", forKey:Key("Action"))
        try container.encode("2015-02-02", forKey:Key("Version"))
    }
}
