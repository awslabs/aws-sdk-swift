// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GlobalReplicationGroupInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case globalReplicationGroupId = "GlobalReplicationGroupId"
        case globalReplicationGroupMemberRole = "GlobalReplicationGroupMemberRole"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let globalReplicationGroupId = globalReplicationGroupId {
            try container.encode(globalReplicationGroupId, forKey: Key("GlobalReplicationGroupId"))
        }
        if let globalReplicationGroupMemberRole = globalReplicationGroupMemberRole {
            try container.encode(globalReplicationGroupMemberRole, forKey: Key("GlobalReplicationGroupMemberRole"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalReplicationGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .globalReplicationGroupId)
        globalReplicationGroupId = globalReplicationGroupIdDecoded
        let globalReplicationGroupMemberRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .globalReplicationGroupMemberRole)
        globalReplicationGroupMemberRole = globalReplicationGroupMemberRoleDecoded
    }
}
