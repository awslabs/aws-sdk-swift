// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains all of the attributes of a specific Redis replication group.</p>
public struct ReplicationGroup: Equatable {
    /// <p>The ARN (Amazon Resource Name) of the replication group.</p>
    public let aRN: String?
    /// <p>A flag that enables encryption at-rest when set to <code>true</code>.</p>
    ///         <p>You cannot modify the value of <code>AtRestEncryptionEnabled</code>
    ///             after the cluster is created. To enable encryption at-rest on a cluster
    ///             you must set <code>AtRestEncryptionEnabled</code> to <code>true</code>
    ///             when you create a cluster.</p>
    ///         <p>
    ///             <b>Required:</b>
    ///             Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p>
    ///         <p>Default: <code>false</code>
    ///          </p>
    public let atRestEncryptionEnabled: Bool?
    /// <p>A flag that enables using an <code>AuthToken</code> (password)
    ///             when issuing Redis commands.</p>
    ///         <p>Default: <code>false</code>
    ///          </p>
    public let authTokenEnabled: Bool?
    /// <p>The date the auth token was last modified</p>
    public let authTokenLastModifiedDate: Date?
    /// <p>Indicates the status of automatic failover for this Redis replication group.</p>
    public let automaticFailover: AutomaticFailoverStatus?
    /// <p>The name of the compute and memory capacity node type for each node in the replication group.</p>
    public let cacheNodeType: String?
    /// <p>A flag indicating whether or not this replication group is cluster enabled;
    ///             i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups).</p>
    ///         <p>Valid values: <code>true</code> | <code>false</code>
    ///          </p>
    public let clusterEnabled: Bool?
    /// <p>The configuration endpoint for this replication group.
    ///             Use the configuration endpoint to connect to this replication group.</p>
    public let configurationEndpoint: Endpoint?
    /// <p>The user supplied description of the replication group.</p>
    public let description: String?
    /// <p>The name of the Global datastore and role of this replication group in the Global datastore.</p>
    public let globalReplicationGroupInfo: GlobalReplicationGroupInfo?
    /// <p>The ID of the KMS key used to encrypt the disk in the cluster.</p>
    public let kmsKeyId: String?
    /// <p>Returns the destination, format and type of the logs. </p>
    public let logDeliveryConfigurations: [LogDeliveryConfiguration]?
    /// <p>The names of all the cache clusters that are part of this replication group.</p>
    public let memberClusters: [String]?
    /// <p>The outpost ARNs of the replication group's member clusters.</p>
    public let memberClustersOutpostArns: [String]?
    /// <p>A flag indicating if you have Multi-AZ enabled to enhance fault tolerance. For more information, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html">Minimizing Downtime: Multi-AZ</a>
    ///          </p>
    public let multiAZ: MultiAZStatus?
    /// <p>A list of node groups in this replication group.
    ///             For Redis (cluster mode disabled) replication groups, this is a single-element list.
    ///             For Redis (cluster mode enabled) replication groups, the list contains an entry for each
    ///             node group (shard).</p>
    public let nodeGroups: [NodeGroup]?
    /// <p>A group of settings to be applied to the replication group,
    ///             either immediately or during the next maintenance window.</p>
    public let pendingModifiedValues: ReplicationGroupPendingModifiedValues?
    /// <p>The identifier for the replication group.</p>
    public let replicationGroupId: String?
    /// <p>The number of days for which ElastiCache retains automatic cluster snapshots before
    ///             deleting them. For example, if you set <code>SnapshotRetentionLimit</code> to 5, a
    ///             snapshot that was taken today is retained for 5 days before being deleted.</p>
    ///         <important>
    ///             <p>
    ///             If the value of <code>SnapshotRetentionLimit</code> is set to zero (0), backups are turned off.</p>
    ///          </important>
    public let snapshotRetentionLimit: Int?
    /// <p>The daily time range (in UTC) during which ElastiCache  begins taking a daily snapshot of your node group (shard).</p>
    ///         <p>Example: <code>05:00-09:00</code>
    ///         </p>
    ///         <p>If you do not specify this parameter, ElastiCache  automatically chooses an appropriate time range.</p>
    ///         <note>
    ///             <p>This parameter is only valid if the <code>Engine</code> parameter is <code>redis</code>.</p>
    ///          </note>
    public let snapshotWindow: String?
    /// <p>The cluster ID that is used as the daily snapshot source for the replication group.</p>
    public let snapshottingClusterId: String?
    /// <p>The current state of this replication group -
    ///             <code>creating</code>,
    ///             <code>available</code>,
    ///             <code>modifying</code>,
    ///             <code>deleting</code>,
    ///             <code>create-failed</code>,
    ///             <code>snapshotting</code>.</p>
    public let status: String?
    /// <p>A flag that enables in-transit encryption when set to <code>true</code>.</p>
    ///         <p>You cannot modify the value of <code>TransitEncryptionEnabled</code>
    ///             after the cluster is created. To enable in-transit encryption on a cluster
    ///             you must set <code>TransitEncryptionEnabled</code> to <code>true</code>
    ///             when you create a cluster.</p>
    ///         <p>
    ///             <b>Required:</b>
    ///             Only available when creating a replication group in an Amazon VPC using redis version <code>3.2.6</code>, <code>4.x</code> or later.</p>
    ///         <p>Default: <code>false</code>
    ///          </p>
    public let transitEncryptionEnabled: Bool?
    /// <p>The list of user group IDs that have access to the replication group.</p>
    public let userGroupIds: [String]?

    public init (
        aRN: String? = nil,
        atRestEncryptionEnabled: Bool? = nil,
        authTokenEnabled: Bool? = nil,
        authTokenLastModifiedDate: Date? = nil,
        automaticFailover: AutomaticFailoverStatus? = nil,
        cacheNodeType: String? = nil,
        clusterEnabled: Bool? = nil,
        configurationEndpoint: Endpoint? = nil,
        description: String? = nil,
        globalReplicationGroupInfo: GlobalReplicationGroupInfo? = nil,
        kmsKeyId: String? = nil,
        logDeliveryConfigurations: [LogDeliveryConfiguration]? = nil,
        memberClusters: [String]? = nil,
        memberClustersOutpostArns: [String]? = nil,
        multiAZ: MultiAZStatus? = nil,
        nodeGroups: [NodeGroup]? = nil,
        pendingModifiedValues: ReplicationGroupPendingModifiedValues? = nil,
        replicationGroupId: String? = nil,
        snapshotRetentionLimit: Int? = nil,
        snapshotWindow: String? = nil,
        snapshottingClusterId: String? = nil,
        status: String? = nil,
        transitEncryptionEnabled: Bool? = nil,
        userGroupIds: [String]? = nil
    )
    {
        self.aRN = aRN
        self.atRestEncryptionEnabled = atRestEncryptionEnabled
        self.authTokenEnabled = authTokenEnabled
        self.authTokenLastModifiedDate = authTokenLastModifiedDate
        self.automaticFailover = automaticFailover
        self.cacheNodeType = cacheNodeType
        self.clusterEnabled = clusterEnabled
        self.configurationEndpoint = configurationEndpoint
        self.description = description
        self.globalReplicationGroupInfo = globalReplicationGroupInfo
        self.kmsKeyId = kmsKeyId
        self.logDeliveryConfigurations = logDeliveryConfigurations
        self.memberClusters = memberClusters
        self.memberClustersOutpostArns = memberClustersOutpostArns
        self.multiAZ = multiAZ
        self.nodeGroups = nodeGroups
        self.pendingModifiedValues = pendingModifiedValues
        self.replicationGroupId = replicationGroupId
        self.snapshotRetentionLimit = snapshotRetentionLimit
        self.snapshotWindow = snapshotWindow
        self.snapshottingClusterId = snapshottingClusterId
        self.status = status
        self.transitEncryptionEnabled = transitEncryptionEnabled
        self.userGroupIds = userGroupIds
    }
}
