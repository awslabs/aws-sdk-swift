// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An update that you can apply to your Redis clusters.</p>
public struct ServiceUpdate: Equatable {
    /// <p>Indicates whether the service update will be automatically applied once the recommended apply-by date has expired. </p>
    public let autoUpdateAfterRecommendedApplyByDate: Bool?
    /// <p>The Elasticache engine to which the update applies. Either Redis or Memcached</p>
    public let engine: String?
    /// <p>The Elasticache engine version to which the update applies. Either Redis or Memcached engine version</p>
    public let engineVersion: String?
    /// <p>The estimated length of time the service update will take</p>
    public let estimatedUpdateTime: String?
    /// <p>Provides details of the service update</p>
    public let serviceUpdateDescription: String?
    /// <p>The date after which the service update is no longer available</p>
    public let serviceUpdateEndDate: Date?
    /// <p>The unique ID of the service update</p>
    public let serviceUpdateName: String?
    /// <p>The recommendend date to apply the service update in order to ensure compliance. For information on compliance, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service">Self-Service Security Updates for Compliance</a>.</p>
    public let serviceUpdateRecommendedApplyByDate: Date?
    /// <p>The date when the service update is initially available</p>
    public let serviceUpdateReleaseDate: Date?
    /// <p>The severity of the service update</p>
    public let serviceUpdateSeverity: ServiceUpdateSeverity?
    /// <p>The status of the service update</p>
    public let serviceUpdateStatus: ServiceUpdateStatus?
    /// <p>Reflects the nature of the service update</p>
    public let serviceUpdateType: ServiceUpdateType?

    public init (
        autoUpdateAfterRecommendedApplyByDate: Bool? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        estimatedUpdateTime: String? = nil,
        serviceUpdateDescription: String? = nil,
        serviceUpdateEndDate: Date? = nil,
        serviceUpdateName: String? = nil,
        serviceUpdateRecommendedApplyByDate: Date? = nil,
        serviceUpdateReleaseDate: Date? = nil,
        serviceUpdateSeverity: ServiceUpdateSeverity? = nil,
        serviceUpdateStatus: ServiceUpdateStatus? = nil,
        serviceUpdateType: ServiceUpdateType? = nil
    )
    {
        self.autoUpdateAfterRecommendedApplyByDate = autoUpdateAfterRecommendedApplyByDate
        self.engine = engine
        self.engineVersion = engineVersion
        self.estimatedUpdateTime = estimatedUpdateTime
        self.serviceUpdateDescription = serviceUpdateDescription
        self.serviceUpdateEndDate = serviceUpdateEndDate
        self.serviceUpdateName = serviceUpdateName
        self.serviceUpdateRecommendedApplyByDate = serviceUpdateRecommendedApplyByDate
        self.serviceUpdateReleaseDate = serviceUpdateReleaseDate
        self.serviceUpdateSeverity = serviceUpdateSeverity
        self.serviceUpdateStatus = serviceUpdateStatus
        self.serviceUpdateType = serviceUpdateType
    }
}
