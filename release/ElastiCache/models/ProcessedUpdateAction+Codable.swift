// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProcessedUpdateAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cacheClusterId = "CacheClusterId"
        case replicationGroupId = "ReplicationGroupId"
        case serviceUpdateName = "ServiceUpdateName"
        case updateActionStatus = "UpdateActionStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheClusterId = cacheClusterId {
            try container.encode(cacheClusterId, forKey: Key("CacheClusterId"))
        }
        if let replicationGroupId = replicationGroupId {
            try container.encode(replicationGroupId, forKey: Key("ReplicationGroupId"))
        }
        if let serviceUpdateName = serviceUpdateName {
            try container.encode(serviceUpdateName, forKey: Key("ServiceUpdateName"))
        }
        if let updateActionStatus = updateActionStatus {
            try container.encode(updateActionStatus, forKey: Key("UpdateActionStatus"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationGroupId)
        replicationGroupId = replicationGroupIdDecoded
        let cacheClusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheClusterId)
        cacheClusterId = cacheClusterIdDecoded
        let serviceUpdateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceUpdateName)
        serviceUpdateName = serviceUpdateNameDecoded
        let updateActionStatusDecoded = try containerValues.decodeIfPresent(UpdateActionStatus.self, forKey: .updateActionStatus)
        updateActionStatus = updateActionStatusDecoded
    }
}
