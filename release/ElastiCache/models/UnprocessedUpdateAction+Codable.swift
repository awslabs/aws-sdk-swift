// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UnprocessedUpdateAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cacheClusterId = "CacheClusterId"
        case errorMessage = "ErrorMessage"
        case errorType = "ErrorType"
        case replicationGroupId = "ReplicationGroupId"
        case serviceUpdateName = "ServiceUpdateName"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheClusterId = cacheClusterId {
            try container.encode(cacheClusterId, forKey: Key("CacheClusterId"))
        }
        if let errorMessage = errorMessage {
            try container.encode(errorMessage, forKey: Key("ErrorMessage"))
        }
        if let errorType = errorType {
            try container.encode(errorType, forKey: Key("ErrorType"))
        }
        if let replicationGroupId = replicationGroupId {
            try container.encode(replicationGroupId, forKey: Key("ReplicationGroupId"))
        }
        if let serviceUpdateName = serviceUpdateName {
            try container.encode(serviceUpdateName, forKey: Key("ServiceUpdateName"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationGroupId)
        replicationGroupId = replicationGroupIdDecoded
        let cacheClusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheClusterId)
        cacheClusterId = cacheClusterIdDecoded
        let serviceUpdateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceUpdateName)
        serviceUpdateName = serviceUpdateNameDecoded
        let errorTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .errorType)
        errorType = errorTypeDecoded
        let errorMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .errorMessage)
        errorMessage = errorMessageDecoded
    }
}
