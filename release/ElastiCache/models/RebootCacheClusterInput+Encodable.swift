// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RebootCacheClusterInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheClusterId = cacheClusterId {
            try container.encode(cacheClusterId, forKey: Key("CacheClusterId"))
        }
        if let cacheNodeIdsToReboot = cacheNodeIdsToReboot {
            var cacheNodeIdsToRebootContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("CacheNodeIdsToReboot"))
            for (index0, string0) in cacheNodeIdsToReboot.enumerated() {
                try cacheNodeIdsToRebootContainer.encode(string0, forKey: Key("CacheNodeId.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("RebootCacheCluster", forKey:Key("Action"))
        try container.encode("2015-02-02", forKey:Key("Version"))
    }
}
