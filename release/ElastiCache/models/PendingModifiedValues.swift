// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A group of settings that are applied to the cluster in the future,
///             or that are currently being applied.</p>
public struct PendingModifiedValues: Equatable {
    /// <p>The auth token status</p>
    public let authTokenStatus: AuthTokenUpdateStatus?
    /// <p>A list of cache node IDs that are being removed (or will be removed) from the cluster.
    ///             A node ID is a 4-digit numeric identifier (0001, 0002, etc.).</p>
    public let cacheNodeIdsToRemove: [String]?
    /// <p>The cache node type that this cluster or replication group is scaled to.</p>
    public let cacheNodeType: String?
    /// <p>The new cache engine version that the cluster  runs.</p>
    public let engineVersion: String?
    /// <p>The log delivery configurations being modified </p>
    public let logDeliveryConfigurations: [PendingLogDeliveryConfiguration]?
    /// <p>The new number of cache nodes for the cluster.</p>
    ///         <p>For clusters running Redis, this value must be 1.
    ///             For clusters running Memcached, this value must be between 1 and 40.</p>
    public let numCacheNodes: Int?

    public init (
        authTokenStatus: AuthTokenUpdateStatus? = nil,
        cacheNodeIdsToRemove: [String]? = nil,
        cacheNodeType: String? = nil,
        engineVersion: String? = nil,
        logDeliveryConfigurations: [PendingLogDeliveryConfiguration]? = nil,
        numCacheNodes: Int? = nil
    )
    {
        self.authTokenStatus = authTokenStatus
        self.cacheNodeIdsToRemove = cacheNodeIdsToRemove
        self.cacheNodeType = cacheNodeType
        self.engineVersion = engineVersion
        self.logDeliveryConfigurations = logDeliveryConfigurations
        self.numCacheNodes = numCacheNodes
    }
}
