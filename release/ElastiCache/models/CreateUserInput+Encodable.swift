// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateUserInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let accessString = accessString {
            try container.encode(accessString, forKey: Key("AccessString"))
        }
        if let engine = engine {
            try container.encode(engine, forKey: Key("Engine"))
        }
        if let noPasswordRequired = noPasswordRequired {
            try container.encode(noPasswordRequired, forKey: Key("NoPasswordRequired"))
        }
        if let passwords = passwords {
            var passwordsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Passwords"))
            for (index0, string0) in passwords.enumerated() {
                try passwordsContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let tags = tags {
            var tagsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Tags"))
            for (index0, tag0) in tags.enumerated() {
                try tagsContainer.encode(tag0, forKey: Key("Tag.\(index0.advanced(by: 1))"))
            }
        }
        if let userId = userId {
            try container.encode(userId, forKey: Key("UserId"))
        }
        if let userName = userName {
            try container.encode(userName, forKey: Key("UserName"))
        }
        try container.encode("CreateUser", forKey:Key("Action"))
        try container.encode("2015-02-02", forKey:Key("Version"))
    }
}
