// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DecreaseReplicaCountInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if applyImmediately != false {
            try container.encode(applyImmediately, forKey: Key("ApplyImmediately"))
        }
        if let newReplicaCount = newReplicaCount {
            try container.encode(newReplicaCount, forKey: Key("NewReplicaCount"))
        }
        if let replicaConfiguration = replicaConfiguration {
            var replicaConfigurationContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("ReplicaConfiguration"))
            for (index0, configureshard0) in replicaConfiguration.enumerated() {
                try replicaConfigurationContainer.encode(configureshard0, forKey: Key("ConfigureShard.\(index0.advanced(by: 1))"))
            }
        }
        if let replicasToRemove = replicasToRemove {
            var replicasToRemoveContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("ReplicasToRemove"))
            for (index0, string0) in replicasToRemove.enumerated() {
                try replicasToRemoveContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let replicationGroupId = replicationGroupId {
            try container.encode(replicationGroupId, forKey: Key("ReplicationGroupId"))
        }
        try container.encode("DecreaseReplicaCount", forKey:Key("Action"))
        try container.encode("2015-02-02", forKey:Key("Version"))
    }
}
