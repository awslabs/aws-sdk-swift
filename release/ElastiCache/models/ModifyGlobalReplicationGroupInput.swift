// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyGlobalReplicationGroupInput: Equatable {
    /// <p>This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global
    ///             Replication Groups cannot be requested to be applied in PreferredMaintenceWindow.
    ///              </p>
    public let applyImmediately: Bool
    /// <p>Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure. </p>
    public let automaticFailoverEnabled: Bool?
    /// <p>A valid cache node type that you want to scale this Global datastore to.</p>
    public let cacheNodeType: String?
    /// <p>The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.</p>
    public let cacheParameterGroupName: String?
    /// <p>The upgraded version of the cache engine to be run on the clusters in the Global datastore. </p>
    public let engineVersion: String?
    /// <p>A description of the Global datastore</p>
    public let globalReplicationGroupDescription: String?
    /// <p>The name of the Global datastore</p>
    public let globalReplicationGroupId: String?

    public init (
        applyImmediately: Bool = false,
        automaticFailoverEnabled: Bool? = nil,
        cacheNodeType: String? = nil,
        cacheParameterGroupName: String? = nil,
        engineVersion: String? = nil,
        globalReplicationGroupDescription: String? = nil,
        globalReplicationGroupId: String? = nil
    )
    {
        self.applyImmediately = applyImmediately
        self.automaticFailoverEnabled = automaticFailoverEnabled
        self.cacheNodeType = cacheNodeType
        self.cacheParameterGroupName = cacheParameterGroupName
        self.engineVersion = engineVersion
        self.globalReplicationGroupDescription = globalReplicationGroupDescription
        self.globalReplicationGroupId = globalReplicationGroupId
    }
}
