// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NodeGroupMember: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cacheClusterId = "CacheClusterId"
        case cacheNodeId = "CacheNodeId"
        case currentRole = "CurrentRole"
        case preferredAvailabilityZone = "PreferredAvailabilityZone"
        case preferredOutpostArn = "PreferredOutpostArn"
        case readEndpoint = "ReadEndpoint"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheClusterId = cacheClusterId {
            try container.encode(cacheClusterId, forKey: Key("CacheClusterId"))
        }
        if let cacheNodeId = cacheNodeId {
            try container.encode(cacheNodeId, forKey: Key("CacheNodeId"))
        }
        if let currentRole = currentRole {
            try container.encode(currentRole, forKey: Key("CurrentRole"))
        }
        if let preferredAvailabilityZone = preferredAvailabilityZone {
            try container.encode(preferredAvailabilityZone, forKey: Key("PreferredAvailabilityZone"))
        }
        if let preferredOutpostArn = preferredOutpostArn {
            try container.encode(preferredOutpostArn, forKey: Key("PreferredOutpostArn"))
        }
        if let readEndpoint = readEndpoint {
            try container.encode(readEndpoint, forKey: Key("ReadEndpoint"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cacheClusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheClusterId)
        cacheClusterId = cacheClusterIdDecoded
        let cacheNodeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheNodeId)
        cacheNodeId = cacheNodeIdDecoded
        let readEndpointDecoded = try containerValues.decodeIfPresent(Endpoint.self, forKey: .readEndpoint)
        readEndpoint = readEndpointDecoded
        let preferredAvailabilityZoneDecoded = try containerValues.decodeIfPresent(String.self, forKey: .preferredAvailabilityZone)
        preferredAvailabilityZone = preferredAvailabilityZoneDecoded
        let preferredOutpostArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .preferredOutpostArn)
        preferredOutpostArn = preferredOutpostArnDecoded
        let currentRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .currentRole)
        currentRole = currentRoleDecoded
    }
}
