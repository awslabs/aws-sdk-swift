// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CacheEngineVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cacheEngineDescription = "CacheEngineDescription"
        case cacheEngineVersionDescription = "CacheEngineVersionDescription"
        case cacheParameterGroupFamily = "CacheParameterGroupFamily"
        case engine = "Engine"
        case engineVersion = "EngineVersion"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cacheEngineDescription = cacheEngineDescription {
            try container.encode(cacheEngineDescription, forKey: Key("CacheEngineDescription"))
        }
        if let cacheEngineVersionDescription = cacheEngineVersionDescription {
            try container.encode(cacheEngineVersionDescription, forKey: Key("CacheEngineVersionDescription"))
        }
        if let cacheParameterGroupFamily = cacheParameterGroupFamily {
            try container.encode(cacheParameterGroupFamily, forKey: Key("CacheParameterGroupFamily"))
        }
        if let engine = engine {
            try container.encode(engine, forKey: Key("Engine"))
        }
        if let engineVersion = engineVersion {
            try container.encode(engineVersion, forKey: Key("EngineVersion"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let engineDecoded = try containerValues.decodeIfPresent(String.self, forKey: .engine)
        engine = engineDecoded
        let engineVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let cacheParameterGroupFamilyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheParameterGroupFamily)
        cacheParameterGroupFamily = cacheParameterGroupFamilyDecoded
        let cacheEngineDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheEngineDescription)
        cacheEngineDescription = cacheEngineDescriptionDecoded
        let cacheEngineVersionDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheEngineVersionDescription)
        cacheEngineVersionDescription = cacheEngineVersionDescriptionDecoded
    }
}
