// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The status of the service update for a specific replication group</p>
public struct UpdateAction: Equatable {
    /// <p>The ID of the cache cluster</p>
    public let cacheClusterId: String?
    /// <p>The status of the service update on the cache node</p>
    public let cacheNodeUpdateStatus: [CacheNodeUpdateStatus]?
    /// <p>The Elasticache engine to which the update applies. Either Redis or Memcached</p>
    public let engine: String?
    /// <p>The estimated length of time for the update to complete</p>
    public let estimatedUpdateTime: String?
    /// <p>The status of the service update on the node group</p>
    public let nodeGroupUpdateStatus: [NodeGroupUpdateStatus]?
    /// <p>The progress of the service update on the replication group</p>
    public let nodesUpdated: String?
    /// <p>The ID of the replication group</p>
    public let replicationGroupId: String?
    /// <p>The unique ID of the service update</p>
    public let serviceUpdateName: String?
    /// <p>The recommended date to apply the service update to ensure compliance. For information on compliance, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service">Self-Service Security Updates for Compliance</a>.</p>
    public let serviceUpdateRecommendedApplyByDate: Date?
    /// <p>The date the update is first available</p>
    public let serviceUpdateReleaseDate: Date?
    /// <p>The severity of the service update</p>
    public let serviceUpdateSeverity: ServiceUpdateSeverity?
    /// <p>The status of the service update</p>
    public let serviceUpdateStatus: ServiceUpdateStatus?
    /// <p>Reflects the nature of the service update  </p>
    public let serviceUpdateType: ServiceUpdateType?
    /// <p>If yes, all nodes in the replication group have been updated by the recommended apply-by date. If no, at least one node in the replication group have not been updated by the recommended apply-by date. If N/A, the replication group was created after the
    ///       recommended apply-by date.</p>
    public let slaMet: SlaMet?
    /// <p>The date that the service update is available to a replication group</p>
    public let updateActionAvailableDate: Date?
    /// <p>The status of the update action</p>
    public let updateActionStatus: UpdateActionStatus?
    /// <p>The date when the UpdateActionStatus was last modified</p>
    public let updateActionStatusModifiedDate: Date?

    public init (
        cacheClusterId: String? = nil,
        cacheNodeUpdateStatus: [CacheNodeUpdateStatus]? = nil,
        engine: String? = nil,
        estimatedUpdateTime: String? = nil,
        nodeGroupUpdateStatus: [NodeGroupUpdateStatus]? = nil,
        nodesUpdated: String? = nil,
        replicationGroupId: String? = nil,
        serviceUpdateName: String? = nil,
        serviceUpdateRecommendedApplyByDate: Date? = nil,
        serviceUpdateReleaseDate: Date? = nil,
        serviceUpdateSeverity: ServiceUpdateSeverity? = nil,
        serviceUpdateStatus: ServiceUpdateStatus? = nil,
        serviceUpdateType: ServiceUpdateType? = nil,
        slaMet: SlaMet? = nil,
        updateActionAvailableDate: Date? = nil,
        updateActionStatus: UpdateActionStatus? = nil,
        updateActionStatusModifiedDate: Date? = nil
    )
    {
        self.cacheClusterId = cacheClusterId
        self.cacheNodeUpdateStatus = cacheNodeUpdateStatus
        self.engine = engine
        self.estimatedUpdateTime = estimatedUpdateTime
        self.nodeGroupUpdateStatus = nodeGroupUpdateStatus
        self.nodesUpdated = nodesUpdated
        self.replicationGroupId = replicationGroupId
        self.serviceUpdateName = serviceUpdateName
        self.serviceUpdateRecommendedApplyByDate = serviceUpdateRecommendedApplyByDate
        self.serviceUpdateReleaseDate = serviceUpdateReleaseDate
        self.serviceUpdateSeverity = serviceUpdateSeverity
        self.serviceUpdateStatus = serviceUpdateStatus
        self.serviceUpdateType = serviceUpdateType
        self.slaMet = slaMet
        self.updateActionAvailableDate = updateActionAvailableDate
        self.updateActionStatus = updateActionStatus
        self.updateActionStatusModifiedDate = updateActionStatusModifiedDate
    }
}
