// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeUpdateActionsInput: Equatable {
    /// <p>The cache cluster IDs</p>
    public let cacheClusterIds: [String]?
    /// <p>The Elasticache engine to which the update applies. Either Redis or Memcached </p>
    public let engine: String?
    /// <p>An optional marker returned from a prior request.
    ///            Use this marker for pagination of results from this operation. If this
    ///            parameter is specified, the response includes only records beyond the marker, up to the
    ///            value specified by <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response</p>
    public let maxRecords: Int?
    /// <p>The replication group IDs</p>
    public let replicationGroupIds: [String]?
    /// <p>The unique ID of the service update</p>
    public let serviceUpdateName: String?
    /// <p>The status of the service update</p>
    public let serviceUpdateStatus: [ServiceUpdateStatus]?
    /// <p>The range of time specified to search for service updates that are in available status</p>
    public let serviceUpdateTimeRange: TimeRangeFilter?
    /// <p>Dictates whether to include node level update status in the response </p>
    public let showNodeLevelUpdateStatus: Bool?
    /// <p>The status of the update action.</p>
    public let updateActionStatus: [UpdateActionStatus]?

    public init (
        cacheClusterIds: [String]? = nil,
        engine: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        replicationGroupIds: [String]? = nil,
        serviceUpdateName: String? = nil,
        serviceUpdateStatus: [ServiceUpdateStatus]? = nil,
        serviceUpdateTimeRange: TimeRangeFilter? = nil,
        showNodeLevelUpdateStatus: Bool? = nil,
        updateActionStatus: [UpdateActionStatus]? = nil
    )
    {
        self.cacheClusterIds = cacheClusterIds
        self.engine = engine
        self.marker = marker
        self.maxRecords = maxRecords
        self.replicationGroupIds = replicationGroupIds
        self.serviceUpdateName = serviceUpdateName
        self.serviceUpdateStatus = serviceUpdateStatus
        self.serviceUpdateTimeRange = serviceUpdateTimeRange
        self.showNodeLevelUpdateStatus = showNodeLevelUpdateStatus
        self.updateActionStatus = updateActionStatus
    }
}
