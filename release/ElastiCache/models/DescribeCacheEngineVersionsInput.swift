// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input of a <code>DescribeCacheEngineVersions</code> operation.</p>
public struct DescribeCacheEngineVersionsInput: Equatable {
    /// <p>The name of a specific cache parameter group family to return details for.</p>
    ///         <p>Valid values are:
    ///     <code>memcached1.4</code> |
    ///      <code>memcached1.5</code> |
    ///       <code>memcached1.6</code> |
    ///     <code>redis2.6</code> |
    ///     <code>redis2.8</code> |
    ///     <code>redis3.2</code> |
    ///     <code>redis4.0</code> |
    ///      <code>redis5.0</code> |
    ///       <code>redis6.x</code> |
    ///     </p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must be 1 to 255 alphanumeric characters</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    public let cacheParameterGroupFamily: String?
    /// <p>If <code>true</code>, specifies that only the default version of the specified engine or engine
    ///             and major version combination is to be returned.</p>
    public let defaultOnly: Bool
    /// <p>The cache engine to return. Valid values: <code>memcached</code> | <code>redis</code>
    ///          </p>
    public let engine: String?
    /// <p>The cache engine version to return.</p>
    ///         <p>Example: <code>1.4.14</code>
    ///          </p>
    public let engineVersion: String?
    /// <p>An optional marker returned from a prior request. Use this marker for pagination of results from this operation.
    ///             If this parameter is specified, the response includes only records beyond the marker, up to the
    ///             value specified by <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response. If more records exist than the
    ///             specified <code>MaxRecords</code> value, a marker is included in the response so that
    ///             the remaining results can be retrieved.</p>
    ///
    ///         <p>Default: 100</p>
    ///         <p>Constraints: minimum 20; maximum 100.</p>
    public let maxRecords: Int?

    public init (
        cacheParameterGroupFamily: String? = nil,
        defaultOnly: Bool = false,
        engine: String? = nil,
        engineVersion: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.cacheParameterGroupFamily = cacheParameterGroupFamily
        self.defaultOnly = defaultOnly
        self.engine = engine
        self.engineVersion = engineVersion
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
