// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the input of a <code>DescribeEvents</code> operation.</p>
public struct DescribeEventsInput: Equatable {
    /// <p>The number of minutes worth of events to retrieve.</p>
    public let duration: Int?
    /// <p>The end of the time interval for which to retrieve events, specified in ISO 8601 format.</p>
    ///         <p>
    ///             <b>Example:</b> 2017-03-30T07:03:49.555Z</p>
    public let endTime: Date?
    /// <p>An optional marker returned from a prior request.
    ///             Use this marker for pagination of results from this operation.
    ///             If this parameter is specified, the response includes only records beyond the marker,
    ///             up to the value specified by <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response. If more records exist than the
    ///             specified <code>MaxRecords</code> value, a marker is included in the response so that
    ///             the remaining results can be retrieved.</p>
    ///
    ///         <p>Default: 100</p>
    ///         <p>Constraints: minimum 20; maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The identifier of the event source for which events are returned.
    ///             If not specified, all sources are included in the response.</p>
    public let sourceIdentifier: String?
    /// <p>The event source to retrieve events for.
    ///             If no value is specified, all events are returned.</p>
    public let sourceType: SourceType?
    /// <p>The beginning of the time interval to retrieve events for, specified in ISO 8601 format.</p>
    ///         <p>
    ///             <b>Example:</b> 2017-03-30T07:03:49.555Z</p>
    public let startTime: Date?

    public init (
        duration: Int? = nil,
        endTime: Date? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        sourceIdentifier: String? = nil,
        sourceType: SourceType? = nil,
        startTime: Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.marker = marker
        self.maxRecords = maxRecords
        self.sourceIdentifier = sourceIdentifier
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
