// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input of a <code>PurchaseReservedCacheNodesOffering</code> operation.</p>
public struct PurchaseReservedCacheNodesOfferingInput: Equatable {
    /// <p>The number of cache node instances to reserve.</p>
    ///         <p>Default: <code>1</code>
    ///          </p>
    public let cacheNodeCount: Int?
    /// <p>A customer-specified identifier to track this reservation.</p>
    ///         <note>
    ///             <p>The Reserved Cache Node ID is an unique customer-specified identifier to track this reservation.
    ///                 If this parameter is not specified,
    ///                 ElastiCache automatically generates an identifier for the reservation.</p>
    ///          </note>
    ///         <p>Example: myreservationID</p>
    public let reservedCacheNodeId: String?
    /// <p>The ID of the reserved cache node offering to purchase.</p>
    ///         <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code>
    ///          </p>
    public let reservedCacheNodesOfferingId: String?
    /// <p>A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.</p>
    public let tags: [Tag]?

    public init (
        cacheNodeCount: Int? = nil,
        reservedCacheNodeId: String? = nil,
        reservedCacheNodesOfferingId: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.cacheNodeCount = cacheNodeCount
        self.reservedCacheNodeId = reservedCacheNodeId
        self.reservedCacheNodesOfferingId = reservedCacheNodesOfferingId
        self.tags = tags
    }
}
