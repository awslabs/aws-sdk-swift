// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Tcs {
    case bt2100linhlg
    case bt2100linpq
    case density
    case hlg
    case linear
    case pq
    case sdr
    case st20651
    case st4281
    case sdkUnknown(String)
}

extension Tcs : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Tcs] {
        return [
            .bt2100linhlg,
            .bt2100linpq,
            .density,
            .hlg,
            .linear,
            .pq,
            .sdr,
            .st20651,
            .st4281,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bt2100linhlg: return "BT2100LINHLG"
        case .bt2100linpq: return "BT2100LINPQ"
        case .density: return "DENSITY"
        case .hlg: return "HLG"
        case .linear: return "LINEAR"
        case .pq: return "PQ"
        case .sdr: return "SDR"
        case .st20651: return "ST2065-1"
        case .st4281: return "ST428-1"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Tcs(rawValue: rawValue) ?? Tcs.sdkUnknown(rawValue)
    }
}
