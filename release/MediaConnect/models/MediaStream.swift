// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.
public struct MediaStream: Equatable {
    /// Attributes that are related to the media stream.
    public let attributes: MediaStreamAttributes?
    /// The sample rate for the stream. This value is measured in Hz.
    public let clockRate: Int
    /// A description that can help you quickly identify what your media stream is used for.
    public let description: String?
    /// The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.
    public let fmt: Int
    /// A unique identifier for the media stream.
    public let mediaStreamId: Int
    /// A name that helps you distinguish one media stream from another.
    public let mediaStreamName: String?
    /// The type of media stream.
    public let mediaStreamType: MediaStreamType?
    /// The resolution of the video.
    public let videoFormat: String?

    public init (
        attributes: MediaStreamAttributes? = nil,
        clockRate: Int = 0,
        description: String? = nil,
        fmt: Int = 0,
        mediaStreamId: Int = 0,
        mediaStreamName: String? = nil,
        mediaStreamType: MediaStreamType? = nil,
        videoFormat: String? = nil
    )
    {
        self.attributes = attributes
        self.clockRate = clockRate
        self.description = description
        self.fmt = fmt
        self.mediaStreamId = mediaStreamId
        self.mediaStreamName = mediaStreamName
        self.mediaStreamType = mediaStreamType
        self.videoFormat = videoFormat
    }
}
