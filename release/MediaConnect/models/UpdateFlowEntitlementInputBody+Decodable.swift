// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFlowEntitlementInputBody: Equatable {
    public let description: String?
    public let encryption: UpdateEncryption?
    public let entitlementStatus: EntitlementStatus?
    public let subscribers: [String]?
}

extension UpdateFlowEntitlementInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description = "description"
        case encryption = "encryption"
        case entitlementStatus = "entitlementStatus"
        case subscribers = "subscribers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let encryptionDecoded = try containerValues.decodeIfPresent(UpdateEncryption.self, forKey: .encryption)
        encryption = encryptionDecoded
        let entitlementStatusDecoded = try containerValues.decodeIfPresent(EntitlementStatus.self, forKey: .entitlementStatus)
        entitlementStatus = entitlementStatusDecoded
        let subscribersContainer = try containerValues.decodeIfPresent([String].self, forKey: .subscribers)
        var subscribersDecoded0:[String]? = nil
        if let subscribersContainer = subscribersContainer {
            subscribersDecoded0 = [String]()
            for string0 in subscribersContainer {
                subscribersDecoded0?.append(string0)
            }
        }
        subscribers = subscribersDecoded0
    }
}
