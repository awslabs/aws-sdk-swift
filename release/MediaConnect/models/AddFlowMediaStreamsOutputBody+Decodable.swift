// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowMediaStreamsOutputBody: Equatable {
    public let flowArn: String?
    public let mediaStreams: [MediaStream]?
}

extension AddFlowMediaStreamsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flowArn = "flowArn"
        case mediaStreams = "mediaStreams"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let mediaStreamsContainer = try containerValues.decodeIfPresent([MediaStream].self, forKey: .mediaStreams)
        var mediaStreamsDecoded0:[MediaStream]? = nil
        if let mediaStreamsContainer = mediaStreamsContainer {
            mediaStreamsDecoded0 = [MediaStream]()
            for structure0 in mediaStreamsContainer {
                mediaStreamsDecoded0?.append(structure0)
            }
        }
        mediaStreams = mediaStreamsDecoded0
    }
}
