// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowOutputsOutputBody: Equatable {
    public let flowArn: String?
    public let outputs: [Output]?
}

extension AddFlowOutputsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flowArn = "flowArn"
        case outputs = "outputs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let outputsContainer = try containerValues.decodeIfPresent([Output].self, forKey: .outputs)
        var outputsDecoded0:[Output]? = nil
        if let outputsContainer = outputsContainer {
            outputsDecoded0 = [Output]()
            for structure0 in outputsContainer {
                outputsDecoded0?.append(structure0)
            }
        }
        outputs = outputsDecoded0
    }
}
