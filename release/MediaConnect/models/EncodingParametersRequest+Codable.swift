// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EncodingParametersRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case compressionFactor = "compressionFactor"
        case encoderProfile = "encoderProfile"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if compressionFactor != 0.0 {
            try encodeContainer.encode(compressionFactor, forKey: .compressionFactor)
        }
        if let encoderProfile = encoderProfile {
            try encodeContainer.encode(encoderProfile.rawValue, forKey: .encoderProfile)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compressionFactorDecoded = try containerValues.decode(Double.self, forKey: .compressionFactor)
        compressionFactor = compressionFactorDecoded
        let encoderProfileDecoded = try containerValues.decodeIfPresent(EncoderProfile.self, forKey: .encoderProfile)
        encoderProfile = encoderProfileDecoded
    }
}
