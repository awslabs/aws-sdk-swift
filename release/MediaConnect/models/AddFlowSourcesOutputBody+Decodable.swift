// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddFlowSourcesOutputBody: Equatable {
    public let flowArn: String?
    public let sources: [Source]?
}

extension AddFlowSourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flowArn = "flowArn"
        case sources = "sources"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
        let sourcesContainer = try containerValues.decodeIfPresent([Source].self, forKey: .sources)
        var sourcesDecoded0:[Source]? = nil
        if let sourcesContainer = sourcesContainer {
            sourcesDecoded0 = [Source]()
            for structure0 in sourcesContainer {
                sourcesDecoded0?.append(structure0)
            }
        }
        sources = sourcesDecoded0
    }
}
