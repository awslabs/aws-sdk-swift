// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputConfigurationRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case inputPort = "inputPort"
        case interface = "interface"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if inputPort != 0 {
            try encodeContainer.encode(inputPort, forKey: .inputPort)
        }
        if let interface = interface {
            try encodeContainer.encode(interface, forKey: .interface)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputPortDecoded = try containerValues.decode(Int.self, forKey: .inputPort)
        inputPort = inputPortDecoded
        let interfaceDecoded = try containerValues.decodeIfPresent(InterfaceRequest.self, forKey: .interface)
        interface = interfaceDecoded
    }
}
