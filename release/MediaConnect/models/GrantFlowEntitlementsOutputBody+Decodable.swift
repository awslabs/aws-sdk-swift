// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GrantFlowEntitlementsOutputBody: Equatable {
    public let entitlements: [Entitlement]?
    public let flowArn: String?
}

extension GrantFlowEntitlementsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entitlements = "entitlements"
        case flowArn = "flowArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitlementsContainer = try containerValues.decodeIfPresent([Entitlement].self, forKey: .entitlements)
        var entitlementsDecoded0:[Entitlement]? = nil
        if let entitlementsContainer = entitlementsContainer {
            entitlementsDecoded0 = [Entitlement]()
            for structure0 in entitlementsContainer {
                entitlementsDecoded0?.append(structure0)
            }
        }
        entitlements = entitlementsDecoded0
        let flowArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowArn)
        flowArn = flowArnDecoded
    }
}
