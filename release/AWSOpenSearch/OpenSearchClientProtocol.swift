// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// Amazon OpenSearch Configuration Service Use the Amazon OpenSearch configuration API to create, configure, and manage Amazon OpenSearch Service domains. For sample code that uses the configuration API, see the [ Amazon OpenSearch Service Developer Guide](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-configuration-samples.html). The guide also contains [ sample code for sending signed HTTP requests to the OpenSearch APIs](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/request-signing.html). The endpoint for configuration service requests is region-specific: es.region.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see [Regions and Endpoints](http://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions).
public protocol OpenSearchClientProtocol {
    /// Allows the remote domain owner to accept an inbound cross-cluster connection request.
    func acceptInboundConnection(input: AcceptInboundConnectionInput) async throws -> AcceptInboundConnectionOutputResponse
    /// Attaches tags to an existing domain. Tags are a set of case-sensitive key value pairs. An domain can have up to 10 tags. See [ Tagging Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging) for more information.
    func addTags(input: AddTagsInput) async throws -> AddTagsOutputResponse
    /// Associates a package with an Amazon OpenSearch Service domain.
    func associatePackage(input: AssociatePackageInput) async throws -> AssociatePackageOutputResponse
    /// Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the AutomatedUpdateDate and when the UpdateStatus is in the PENDING_UPDATE state.
    func cancelServiceSoftwareUpdate(input: CancelServiceSoftwareUpdateInput) async throws -> CancelServiceSoftwareUpdateOutputResponse
    /// Creates a new Amazon OpenSearch Service domain. For more information, see [Creating and managing Amazon OpenSearch Service domains ](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html) in the Amazon OpenSearch Service Developer Guide.
    func createDomain(input: CreateDomainInput) async throws -> CreateDomainOutputResponse
    /// Creates a new cross-cluster connection from a local OpenSearch domain to a remote OpenSearch domain.
    func createOutboundConnection(input: CreateOutboundConnectionInput) async throws -> CreateOutboundConnectionOutputResponse
    /// Create a package for use with Amazon OpenSearch Service domains.
    func createPackage(input: CreatePackageInput) async throws -> CreatePackageOutputResponse
    /// Permanently deletes the specified domain and all of its data. Once a domain is deleted, it cannot be recovered.
    func deleteDomain(input: DeleteDomainInput) async throws -> DeleteDomainOutputResponse
    /// Allows the remote domain owner to delete an existing inbound cross-cluster connection.
    func deleteInboundConnection(input: DeleteInboundConnectionInput) async throws -> DeleteInboundConnectionOutputResponse
    /// Allows the local domain owner to delete an existing outbound cross-cluster connection.
    func deleteOutboundConnection(input: DeleteOutboundConnectionInput) async throws -> DeleteOutboundConnectionOutputResponse
    /// Deletes the package.
    func deletePackage(input: DeletePackageInput) async throws -> DeletePackageOutputResponse
    /// Returns domain configuration information about the specified domain, including the domain ID, domain endpoint, and domain ARN.
    func describeDomain(input: DescribeDomainInput) async throws -> DescribeDomainOutputResponse
    /// Provides scheduled Auto-Tune action details for the domain, such as Auto-Tune action type, description, severity, and scheduled date.
    func describeDomainAutoTunes(input: DescribeDomainAutoTunesInput) async throws -> DescribeDomainAutoTunesOutputResponse
    /// Returns information about the current blue/green deployment happening on a domain, including a change ID, status, and progress stages.
    func describeDomainChangeProgress(input: DescribeDomainChangeProgressInput) async throws -> DescribeDomainChangeProgressOutputResponse
    /// Provides cluster configuration information about the specified domain, such as the state, creation date, update version, and update date for cluster options.
    func describeDomainConfig(input: DescribeDomainConfigInput) async throws -> DescribeDomainConfigOutputResponse
    /// Returns domain configuration information about the specified domains, including the domain ID, domain endpoint, and domain ARN.
    func describeDomains(input: DescribeDomainsInput) async throws -> DescribeDomainsOutputResponse
    /// Lists all the inbound cross-cluster connections for a remote domain.
    func describeInboundConnections(input: DescribeInboundConnectionsInput) async throws -> DescribeInboundConnectionsOutputResponse
    /// Describe the limits for a given instance type and OpenSearch or Elasticsearch version. When modifying an existing domain, specify the [DomainName] to see which limits you can modify.
    func describeInstanceTypeLimits(input: DescribeInstanceTypeLimitsInput) async throws -> DescribeInstanceTypeLimitsOutputResponse
    /// Lists all the outbound cross-cluster connections for a local domain.
    func describeOutboundConnections(input: DescribeOutboundConnectionsInput) async throws -> DescribeOutboundConnectionsOutputResponse
    /// Describes all packages available to Amazon OpenSearch Service domains. Includes options for filtering, limiting the number of results, and pagination.
    func describePackages(input: DescribePackagesInput) async throws -> DescribePackagesOutputResponse
    /// Lists available reserved OpenSearch instance offerings.
    func describeReservedInstanceOfferings(input: DescribeReservedInstanceOfferingsInput) async throws -> DescribeReservedInstanceOfferingsOutputResponse
    /// Returns information about reserved OpenSearch instances for this account.
    func describeReservedInstances(input: DescribeReservedInstancesInput) async throws -> DescribeReservedInstancesOutputResponse
    /// Dissociates a package from the Amazon OpenSearch Service domain.
    func dissociatePackage(input: DissociatePackageInput) async throws -> DissociatePackageOutputResponse
    /// Returns a list of upgrade-compatible versions of OpenSearch/Elasticsearch. You can optionally pass a [DomainName] to get all upgrade-compatible versions of OpenSearch/Elasticsearch for that specific domain.
    func getCompatibleVersions(input: GetCompatibleVersionsInput) async throws -> GetCompatibleVersionsOutputResponse
    /// Returns a list of package versions, along with their creation time and commit message.
    func getPackageVersionHistory(input: GetPackageVersionHistoryInput) async throws -> GetPackageVersionHistoryOutputResponse
    /// Retrieves the complete history of the last 10 upgrades performed on the domain.
    func getUpgradeHistory(input: GetUpgradeHistoryInput) async throws -> GetUpgradeHistoryOutputResponse
    /// Retrieves the latest status of the last upgrade or upgrade eligibility check performed on the domain.
    func getUpgradeStatus(input: GetUpgradeStatusInput) async throws -> GetUpgradeStatusOutputResponse
    /// Returns the names of all domains owned by the current user's account.
    func listDomainNames(input: ListDomainNamesInput) async throws -> ListDomainNamesOutputResponse
    /// Lists all Amazon OpenSearch Service domains associated with the package.
    func listDomainsForPackage(input: ListDomainsForPackageInput) async throws -> ListDomainsForPackageOutputResponse
    func listInstanceTypeDetails(input: ListInstanceTypeDetailsInput) async throws -> ListInstanceTypeDetailsOutputResponse
    /// Lists all packages associated with the Amazon OpenSearch Service domain.
    func listPackagesForDomain(input: ListPackagesForDomainInput) async throws -> ListPackagesForDomainOutputResponse
    /// Returns all tags for the given domain.
    func listTags(input: ListTagsInput) async throws -> ListTagsOutputResponse
    /// List all supported versions of OpenSearch and Elasticsearch.
    func listVersions(input: ListVersionsInput) async throws -> ListVersionsOutputResponse
    /// Allows you to purchase reserved OpenSearch instances.
    func purchaseReservedInstanceOffering(input: PurchaseReservedInstanceOfferingInput) async throws -> PurchaseReservedInstanceOfferingOutputResponse
    /// Allows the remote domain owner to reject an inbound cross-cluster connection request.
    func rejectInboundConnection(input: RejectInboundConnectionInput) async throws -> RejectInboundConnectionOutputResponse
    /// Removes the specified set of tags from the given domain.
    func removeTags(input: RemoveTagsInput) async throws -> RemoveTagsOutputResponse
    /// Schedules a service software update for an Amazon OpenSearch Service domain.
    func startServiceSoftwareUpdate(input: StartServiceSoftwareUpdateInput) async throws -> StartServiceSoftwareUpdateOutputResponse
    /// Modifies the cluster configuration of the specified domain, such as setting the instance type and the number of instances.
    func updateDomainConfig(input: UpdateDomainConfigInput) async throws -> UpdateDomainConfigOutputResponse
    /// Updates a package for use with Amazon OpenSearch Service domains.
    func updatePackage(input: UpdatePackageInput) async throws -> UpdatePackageOutputResponse
    /// Allows you to either upgrade your domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch.
    func upgradeDomain(input: UpgradeDomainInput) async throws -> UpgradeDomainOutputResponse
}

public protocol OpenSearchClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum OpenSearchClientTypes {}
