// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ReplicateSecretToRegionsInputBody: Equatable {
    public let secretId: String?
    public let addReplicaRegions: [ReplicaRegionType]?
    public let forceOverwriteReplicaSecret: Bool
}

extension ReplicateSecretToRegionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addReplicaRegions = "AddReplicaRegions"
        case forceOverwriteReplicaSecret = "ForceOverwriteReplicaSecret"
        case secretId = "SecretId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .secretId)
        secretId = secretIdDecoded
        let addReplicaRegionsContainer = try containerValues.decodeIfPresent([ReplicaRegionType].self, forKey: .addReplicaRegions)
        var addReplicaRegionsDecoded0:[ReplicaRegionType]? = nil
        if let addReplicaRegionsContainer = addReplicaRegionsContainer {
            addReplicaRegionsDecoded0 = [ReplicaRegionType]()
            for structure0 in addReplicaRegionsContainer {
                addReplicaRegionsDecoded0?.append(structure0)
            }
        }
        addReplicaRegions = addReplicaRegionsDecoded0
        let forceOverwriteReplicaSecretDecoded = try containerValues.decode(Bool.self, forKey: .forceOverwriteReplicaSecret)
        forceOverwriteReplicaSecret = forceOverwriteReplicaSecretDecoded
    }
}
