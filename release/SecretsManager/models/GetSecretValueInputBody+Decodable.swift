// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSecretValueInputBody: Equatable {
    public let secretId: String?
    public let versionId: String?
    public let versionStage: String?
}

extension GetSecretValueInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case secretId = "SecretId"
        case versionId = "VersionId"
        case versionStage = "VersionStage"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .secretId)
        secretId = secretIdDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionId)
        versionId = versionIdDecoded
        let versionStageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionStage)
        versionStage = versionStageDecoded
    }
}
