// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeleteSecretInput: Equatable {
    /// <p>(Optional) Specifies that the secret is to be deleted without any recovery window. You
    ///       can't use both this parameter and the <code>RecoveryWindowInDays</code> parameter in the same
    ///       API call.</p>
    ///          <p>An asynchronous background process performs the actual deletion, so there can be a short
    ///       delay before the operation completes. If you write code to delete and then immediately
    ///       recreate a secret with the same name, ensure that your code includes appropriate back off and
    ///       retry logic.</p>
    ///          <important>
    ///             <p>Use this parameter with caution. This parameter causes the operation to skip the normal
    ///         waiting period before the permanent deletion that AWS would normally impose with the
    ///           <code>RecoveryWindowInDays</code> parameter. If you delete a secret with the
    ///           <code>ForceDeleteWithouRecovery</code> parameter, then you have no opportunity to recover
    ///         the secret. You lose the secret permanently.</p>
    ///          </important>
    ///          <important>
    ///             <p>If you use this parameter and include a previously deleted or nonexistent secret, the
    ///         operation does not return the error <code>ResourceNotFoundException</code> in order to
    ///         correctly handle retries.</p>
    ///          </important>
    public let forceDeleteWithoutRecovery: Bool
    /// <p>(Optional) Specifies the number of days that Secrets Manager waits before Secrets Manager can delete the
    ///       secret. You can't use both this parameter and the <code>ForceDeleteWithoutRecovery</code>
    ///       parameter in the same API call.</p>
    ///          <p>This value can range from 7 to 30 days with a default value of 30.</p>
    public let recoveryWindowInDays: Int
    /// <p>Specifies the secret to delete. You can specify either the Amazon Resource Name (ARN) or
    ///       the friendly name of the secret.</p>
    ///          <note>
    ///             <p>If you specify an ARN, we generally recommend that you specify a complete ARN. You can
    ///         specify a partial ARN too—for example, if you don’t include the final hyphen and six random
    ///         characters that Secrets Manager adds at the end of the ARN when you created the secret. A partial ARN
    ///         match can work as long as it uniquely matches only one secret. However, if your secret has a
    ///         name that ends in a hyphen followed by six characters (before Secrets Manager adds the hyphen and six
    ///         characters to the ARN) and you try to use that as a partial ARN, then those characters cause
    ///         Secrets Manager to assume that you’re specifying a complete ARN. This confusion can cause unexpected
    ///         results. To avoid this situation, we recommend that you don’t create secret names ending
    ///         with a hyphen followed by six characters.</p>
    ///             <p>If you specify an incomplete ARN without the random suffix, and instead provide the
    ///         'friendly name', you <i>must</i> not include the random suffix. If you do include the random suffix added by Secrets Manager,
    ///         you receive either a <i>ResourceNotFoundException</i> or an <i>AccessDeniedException</i> error, depending on your permissions.</p>
    ///         </note>
    public let secretId: String?

    public init (
        forceDeleteWithoutRecovery: Bool = false,
        recoveryWindowInDays: Int = 0,
        secretId: String? = nil
    )
    {
        self.forceDeleteWithoutRecovery = forceDeleteWithoutRecovery
        self.recoveryWindowInDays = recoveryWindowInDays
        self.secretId = secretId
    }
}
