// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutResourcePolicyInput: Equatable {
    /// <p>(Optional) If you set the parameter, <code>BlockPublicPolicy</code> to true, then you
    ///       block resource-based policies that allow broad access to the secret.</p>
    public let blockPublicPolicy: Bool
    /// <p>A JSON-formatted string constructed according to the grammar and syntax for an AWS
    ///       resource-based policy. The policy in the string identifies who can access or manage this
    ///       secret and its versions. For information on how to format a JSON parameter for the various
    ///       command line tool environments, see <a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-using-param.html#cli-using-param-json">Using
    ///         JSON for Parameters</a> in the <i>AWS CLI User Guide</i>.</p>
    public let resourcePolicy: String?
    /// <p>Specifies the secret that you want to attach the resource-based policy. You can specify
    ///       either the ARN or the friendly name of the secret.</p>
    ///          <note>
    ///             <p>If you specify an ARN, we generally recommend that you specify a complete ARN. You can
    ///         specify a partial ARN too—for example, if you don’t include the final hyphen and six random
    ///         characters that Secrets Manager adds at the end of the ARN when you created the secret. A partial ARN
    ///         match can work as long as it uniquely matches only one secret. However, if your secret has a
    ///         name that ends in a hyphen followed by six characters (before Secrets Manager adds the hyphen and six
    ///         characters to the ARN) and you try to use that as a partial ARN, then those characters cause
    ///         Secrets Manager to assume that you’re specifying a complete ARN. This confusion can cause unexpected
    ///         results. To avoid this situation, we recommend that you don’t create secret names ending
    ///         with a hyphen followed by six characters.</p>
    ///             <p>If you specify an incomplete ARN without the random suffix, and instead provide the
    ///         'friendly name', you <i>must</i> not include the random suffix. If you do include the random suffix added by Secrets Manager,
    ///         you receive either a <i>ResourceNotFoundException</i> or an <i>AccessDeniedException</i> error, depending on your permissions.</p>
    ///         </note>
    public let secretId: String?

    public init (
        blockPublicPolicy: Bool = false,
        resourcePolicy: String? = nil,
        secretId: String? = nil
    )
    {
        self.blockPublicPolicy = blockPublicPolicy
        self.resourcePolicy = resourcePolicy
        self.secretId = secretId
    }
}
