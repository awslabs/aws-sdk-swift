// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateSecretInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case description = "Description"
        case kmsKeyId = "KmsKeyId"
        case secretBinary = "SecretBinary"
        case secretId = "SecretId"
        case secretString = "SecretString"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let kmsKeyId = kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
        if let secretBinary = secretBinary {
            try encodeContainer.encode(secretBinary.base64EncodedString(), forKey: .secretBinary)
        }
        if let secretId = secretId {
            try encodeContainer.encode(secretId, forKey: .secretId)
        }
        if let secretString = secretString {
            try encodeContainer.encode(secretString, forKey: .secretString)
        }
    }
}
