// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecretsOutputBody: Equatable {
    public let secretList: [SecretListEntry]?
    public let nextToken: String?
}

extension ListSecretsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case secretList = "SecretList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretListContainer = try containerValues.decodeIfPresent([SecretListEntry].self, forKey: .secretList)
        var secretListDecoded0:[SecretListEntry]? = nil
        if let secretListContainer = secretListContainer {
            secretListDecoded0 = [SecretListEntry]()
            for structure0 in secretListContainer {
                secretListDecoded0?.append(structure0)
            }
        }
        secretList = secretListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
