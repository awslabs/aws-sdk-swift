// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The user-specified message attribute value. For string data types, the value attribute
///             has the same restrictions on the content as the message body. For more information, see
///                 <a href="https://docs.aws.amazon.com/sns/latest/api/API_Publish.html">Publish</a>.</p>
///         <p>Name, type, and value must not be empty or null. In addition, the message body should
///             not be empty or null. All parts of the message attribute, including name, type, and
///             value, are included in the message size restriction, which is currently 256 KB (262,144
///             bytes). For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html">Amazon SNS message attributes</a> and
///                 <a href="https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html">Publishing
///                 to a mobile phone</a> in the <i>Amazon SNS Developer Guide.</i>
///          </p>
public struct MessageAttributeValue: Equatable {
    /// <p>Binary type attributes can store any binary data, for example, compressed data,
    ///             encrypted data, or images.</p>
    public let binaryValue: Data?
    /// <p>Amazon SNS supports the following logical data types: String, String.Array, Number, and
    ///             Binary. For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes">Message
    ///                 Attribute Data Types</a>.</p>
    public let dataType: String?
    /// <p>Strings are Unicode with UTF8 binary encoding. For a list of code values, see <a href="https://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters">ASCII Printable
    ///                 Characters</a>.</p>
    public let stringValue: String?

    public init (
        binaryValue: Data? = nil,
        dataType: String? = nil,
        stringValue: String? = nil
    )
    {
        self.binaryValue = binaryValue
        self.dataType = dataType
        self.stringValue = stringValue
    }
}
