// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddPermissionInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let aWSAccountId = aWSAccountId {
            var aWSAccountIdContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("AWSAccountId"))
            for (index0, delegate0) in aWSAccountId.enumerated() {
                try aWSAccountIdContainer.encode(delegate0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let actionName = actionName {
            var actionNameContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("ActionName"))
            for (index0, action0) in actionName.enumerated() {
                try actionNameContainer.encode(action0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let label = label {
            try container.encode(label, forKey: Key("Label"))
        }
        if let topicArn = topicArn {
            try container.encode(topicArn, forKey: Key("TopicArn"))
        }
        try container.encode("AddPermission", forKey:Key("Action"))
        try container.encode("2010-03-31", forKey:Key("Version"))
    }
}
