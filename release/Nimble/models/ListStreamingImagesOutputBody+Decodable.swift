// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamingImagesOutputBody: Equatable {
    public let nextToken: String?
    public let streamingImages: [StreamingImage]?
}

extension ListStreamingImagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case streamingImages = "streamingImages"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let streamingImagesContainer = try containerValues.decodeIfPresent([StreamingImage].self, forKey: .streamingImages)
        var streamingImagesDecoded0:[StreamingImage]? = nil
        if let streamingImagesContainer = streamingImagesContainer {
            streamingImagesDecoded0 = [StreamingImage]()
            for structure0 in streamingImagesContainer {
                streamingImagesDecoded0?.append(structure0)
            }
        }
        streamingImages = streamingImagesDecoded0
    }
}
