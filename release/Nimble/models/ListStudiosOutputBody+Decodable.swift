// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudiosOutputBody: Equatable {
    public let nextToken: String?
    public let studios: [Studio]?
}

extension ListStudiosOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case studios = "studios"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let studiosContainer = try containerValues.decodeIfPresent([Studio].self, forKey: .studios)
        var studiosDecoded0:[Studio]? = nil
        if let studiosContainer = studiosContainer {
            studiosDecoded0 = [Studio]()
            for structure0 in studiosContainer {
                studiosDecoded0?.append(structure0)
            }
        }
        studios = studiosDecoded0
    }
}
