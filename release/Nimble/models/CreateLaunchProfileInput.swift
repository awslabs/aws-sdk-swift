// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A collection of launch profiles.</p>
public struct CreateLaunchProfileInput: Equatable {
    /// <p>To make an idempotent API request using one of these actions, specify a client token in the request. You should not reuse the same client token for other API requests. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails with a ValidationException error.</p>
    public var clientToken: String?
    /// <p>The description.</p>
    public let description: String?
    public let ec2SubnetIds: [String]?
    /// <p>The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".</p>
    public let launchProfileProtocolVersions: [String]?
    /// <p>The name for the launch profile.</p>
    public let name: String?
    /// <p>A configuration for a streaming session.</p>
    public let streamConfiguration: StreamConfigurationCreate?
    /// <p>Unique identifiers for a collection of studio components that can be used with this launch profile.</p>
    public let studioComponentIds: [String]?
    /// <p>The studio ID.</p>
    public let studioId: String?
    /// <p>A collection of labels, in the form of key:value pairs, that apply to this resource.</p>
    public let tags: [String:String]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        ec2SubnetIds: [String]? = nil,
        launchProfileProtocolVersions: [String]? = nil,
        name: String? = nil,
        streamConfiguration: StreamConfigurationCreate? = nil,
        studioComponentIds: [String]? = nil,
        studioId: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.ec2SubnetIds = ec2SubnetIds
        self.launchProfileProtocolVersions = launchProfileProtocolVersions
        self.name = name
        self.streamConfiguration = streamConfiguration
        self.studioComponentIds = studioComponentIds
        self.studioId = studioId
        self.tags = tags
    }
}
