// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StreamConfigurationCreate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clipboardMode = "clipboardMode"
        case ec2InstanceTypes = "ec2InstanceTypes"
        case maxSessionLengthInMinutes = "maxSessionLengthInMinutes"
        case streamingImageIds = "streamingImageIds"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clipboardMode = clipboardMode {
            try encodeContainer.encode(clipboardMode.rawValue, forKey: .clipboardMode)
        }
        if let ec2InstanceTypes = ec2InstanceTypes {
            var ec2InstanceTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ec2InstanceTypes)
            for streaminginstancetypelist0 in ec2InstanceTypes {
                try ec2InstanceTypesContainer.encode(streaminginstancetypelist0.rawValue)
            }
        }
        if maxSessionLengthInMinutes != 0 {
            try encodeContainer.encode(maxSessionLengthInMinutes, forKey: .maxSessionLengthInMinutes)
        }
        if let streamingImageIds = streamingImageIds {
            var streamingImageIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .streamingImageIds)
            for streamingimageidlist0 in streamingImageIds {
                try streamingImageIdsContainer.encode(streamingimageidlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clipboardModeDecoded = try containerValues.decodeIfPresent(StreamingClipboardMode.self, forKey: .clipboardMode)
        clipboardMode = clipboardModeDecoded
        let ec2InstanceTypesContainer = try containerValues.decodeIfPresent([StreamingInstanceType].self, forKey: .ec2InstanceTypes)
        var ec2InstanceTypesDecoded0:[StreamingInstanceType]? = nil
        if let ec2InstanceTypesContainer = ec2InstanceTypesContainer {
            ec2InstanceTypesDecoded0 = [StreamingInstanceType]()
            for string0 in ec2InstanceTypesContainer {
                ec2InstanceTypesDecoded0?.append(string0)
            }
        }
        ec2InstanceTypes = ec2InstanceTypesDecoded0
        let maxSessionLengthInMinutesDecoded = try containerValues.decode(Int.self, forKey: .maxSessionLengthInMinutes)
        maxSessionLengthInMinutes = maxSessionLengthInMinutesDecoded
        let streamingImageIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .streamingImageIds)
        var streamingImageIdsDecoded0:[String]? = nil
        if let streamingImageIdsContainer = streamingImageIdsContainer {
            streamingImageIdsDecoded0 = [String]()
            for string0 in streamingImageIdsContainer {
                streamingImageIdsDecoded0?.append(string0)
            }
        }
        streamingImageIds = streamingImageIdsDecoded0
    }
}
