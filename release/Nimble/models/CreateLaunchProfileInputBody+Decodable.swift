// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLaunchProfileInputBody: Equatable {
    public let description: String?
    public let ec2SubnetIds: [String]?
    public let launchProfileProtocolVersions: [String]?
    public let name: String?
    public let streamConfiguration: StreamConfigurationCreate?
    public let studioComponentIds: [String]?
    public let tags: [String:String]?
}

extension CreateLaunchProfileInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description = "description"
        case ec2SubnetIds = "ec2SubnetIds"
        case launchProfileProtocolVersions = "launchProfileProtocolVersions"
        case name = "name"
        case streamConfiguration = "streamConfiguration"
        case studioComponentIds = "studioComponentIds"
        case tags = "tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let ec2SubnetIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .ec2SubnetIds)
        var ec2SubnetIdsDecoded0:[String]? = nil
        if let ec2SubnetIdsContainer = ec2SubnetIdsContainer {
            ec2SubnetIdsDecoded0 = [String]()
            for string0 in ec2SubnetIdsContainer {
                ec2SubnetIdsDecoded0?.append(string0)
            }
        }
        ec2SubnetIds = ec2SubnetIdsDecoded0
        let launchProfileProtocolVersionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .launchProfileProtocolVersions)
        var launchProfileProtocolVersionsDecoded0:[String]? = nil
        if let launchProfileProtocolVersionsContainer = launchProfileProtocolVersionsContainer {
            launchProfileProtocolVersionsDecoded0 = [String]()
            for string0 in launchProfileProtocolVersionsContainer {
                launchProfileProtocolVersionsDecoded0?.append(string0)
            }
        }
        launchProfileProtocolVersions = launchProfileProtocolVersionsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let streamConfigurationDecoded = try containerValues.decodeIfPresent(StreamConfigurationCreate.self, forKey: .streamConfiguration)
        streamConfiguration = streamConfigurationDecoded
        let studioComponentIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .studioComponentIds)
        var studioComponentIdsDecoded0:[String]? = nil
        if let studioComponentIdsContainer = studioComponentIdsContainer {
            studioComponentIdsDecoded0 = [String]()
            for string0 in studioComponentIdsContainer {
                studioComponentIdsDecoded0?.append(string0)
            }
        }
        studioComponentIds = studioComponentIdsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, __string0) in tagsContainer {
                tagsDecoded0?[key0] = __string0
            }
        }
        tags = tagsDecoded0
    }
}
