// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEulaAcceptancesOutputBody: Equatable {
    public let eulaAcceptances: [EulaAcceptance]?
    public let nextToken: String?
}

extension ListEulaAcceptancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eulaAcceptances = "eulaAcceptances"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eulaAcceptancesContainer = try containerValues.decodeIfPresent([EulaAcceptance].self, forKey: .eulaAcceptances)
        var eulaAcceptancesDecoded0:[EulaAcceptance]? = nil
        if let eulaAcceptancesContainer = eulaAcceptancesContainer {
            eulaAcceptancesDecoded0 = [EulaAcceptance]()
            for structure0 in eulaAcceptancesContainer {
                eulaAcceptancesDecoded0?.append(structure0)
            }
        }
        eulaAcceptances = eulaAcceptancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
