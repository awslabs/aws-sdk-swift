// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StreamingImage: Equatable {
    /// <p>The ARN of the resource.</p>
    public let arn: String?
    /// <p>A human-readable description of the streaming image.</p>
    public let description: String?
    /// <p>The ID of an EC2 machine image with which to create the streaming image.</p>
    public let ec2ImageId: String?
    /// <p>The encryption configuration.</p>
    public let encryptionConfiguration: StreamingImageEncryptionConfiguration?
    /// <p>The list of EULAs that must be accepted before a Streaming Session can be started using this streaming image.</p>
    public let eulaIds: [String]?
    /// <p>A friendly name for a streaming image resource.</p>
    public let name: String?
    /// <p>The owner of the streaming image, either the studioId that contains the streaming image, or 'amazon' for images that are provided by Amazon Nimble Studio.</p>
    public let owner: String?
    /// <p>The platform of the streaming image, either WINDOWS or LINUX.</p>
    public let platform: String?
    /// <p>The current state.</p>
    public let state: StreamingImageState?
    /// <p>The status code.</p>
    public let statusCode: StreamingImageStatusCode?
    /// <p>The status message for the streaming image.</p>
    public let statusMessage: String?
    /// <p>The ID of the streaming image.</p>
    public let streamingImageId: String?
    /// <p>A collection of labels, in the form of key:value pairs, that apply to this resource.</p>
    public let tags: [String:String]?

    public init (
        arn: String? = nil,
        description: String? = nil,
        ec2ImageId: String? = nil,
        encryptionConfiguration: StreamingImageEncryptionConfiguration? = nil,
        eulaIds: [String]? = nil,
        name: String? = nil,
        owner: String? = nil,
        platform: String? = nil,
        state: StreamingImageState? = nil,
        statusCode: StreamingImageStatusCode? = nil,
        statusMessage: String? = nil,
        streamingImageId: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.arn = arn
        self.description = description
        self.ec2ImageId = ec2ImageId
        self.encryptionConfiguration = encryptionConfiguration
        self.eulaIds = eulaIds
        self.name = name
        self.owner = owner
        self.platform = platform
        self.state = state
        self.statusCode = statusCode
        self.statusMessage = statusMessage
        self.streamingImageId = streamingImageId
        self.tags = tags
    }
}
