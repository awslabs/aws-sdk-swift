// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A network that is used by a studioâ€™s users and workflows, including render farm, Active Directory, licensing, and file system.</p>
public struct StudioComponent: Equatable {
    /// <p>The ARN of the resource.</p>
    public let arn: String?
    /// <p>The configuration of the studio component, based on component type.</p>
    public let configuration: StudioComponentConfiguration?
    /// <p>The Unix epoch timestamp in seconds for when the resource was created.</p>
    public let createdAt: Date?
    /// <p>The user ID of the user that created the studio component.</p>
    public let createdBy: String?
    /// <p>A human-readable description for the studio component resource.</p>
    public let description: String?
    /// <p>The EC2 security groups that control access to the studio component.</p>
    public let ec2SecurityGroupIds: [String]?
    /// <p>Initialization scripts for studio components.</p>
    public let initializationScripts: [StudioComponentInitializationScript]?
    /// <p>A friendly name for the studio component resource.</p>
    public let name: String?
    /// <p>Parameters for the studio component scripts.</p>
    public let scriptParameters: [ScriptParameterKeyValue]?
    /// <p>The current state.</p>
    public let state: StudioComponentState?
    /// <p>The status code.</p>
    public let statusCode: StudioComponentStatusCode?
    /// <p>The status message for the studio component.</p>
    public let statusMessage: String?
    /// <p>The unique identifier for a studio component resource.</p>
    public let studioComponentId: String?
    /// <p>The specific subtype of a studio component.</p>
    public let subtype: StudioComponentSubtype?
    /// <p>A collection of labels, in the form of key:value pairs, that apply to this resource.</p>
    public let tags: [String:String]?
    /// <p>The type of the studio component.</p>
    public let type: StudioComponentType?
    /// <p>The Unix epoch timestamp in seconds for when the resource was updated.</p>
    public let updatedAt: Date?
    /// <p>The user ID of the user that most recently updated the resource.</p>
    public let updatedBy: String?

    public init (
        arn: String? = nil,
        configuration: StudioComponentConfiguration? = nil,
        createdAt: Date? = nil,
        createdBy: String? = nil,
        description: String? = nil,
        ec2SecurityGroupIds: [String]? = nil,
        initializationScripts: [StudioComponentInitializationScript]? = nil,
        name: String? = nil,
        scriptParameters: [ScriptParameterKeyValue]? = nil,
        state: StudioComponentState? = nil,
        statusCode: StudioComponentStatusCode? = nil,
        statusMessage: String? = nil,
        studioComponentId: String? = nil,
        subtype: StudioComponentSubtype? = nil,
        tags: [String:String]? = nil,
        type: StudioComponentType? = nil,
        updatedAt: Date? = nil,
        updatedBy: String? = nil
    )
    {
        self.arn = arn
        self.configuration = configuration
        self.createdAt = createdAt
        self.createdBy = createdBy
        self.description = description
        self.ec2SecurityGroupIds = ec2SecurityGroupIds
        self.initializationScripts = initializationScripts
        self.name = name
        self.scriptParameters = scriptParameters
        self.state = state
        self.statusCode = statusCode
        self.statusMessage = statusMessage
        self.studioComponentId = studioComponentId
        self.subtype = subtype
        self.tags = tags
        self.type = type
        self.updatedAt = updatedAt
        self.updatedBy = updatedBy
    }
}
