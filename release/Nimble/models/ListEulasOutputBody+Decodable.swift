// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEulasOutputBody: Equatable {
    public let eulas: [Eula]?
    public let nextToken: String?
}

extension ListEulasOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eulas = "eulas"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eulasContainer = try containerValues.decodeIfPresent([Eula].self, forKey: .eulas)
        var eulasDecoded0:[Eula]? = nil
        if let eulasContainer = eulasContainer {
            eulasDecoded0 = [Eula]()
            for structure0 in eulasContainer {
                eulasDecoded0?.append(structure0)
            }
        }
        eulas = eulasDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
