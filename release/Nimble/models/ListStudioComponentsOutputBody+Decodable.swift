// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudioComponentsOutputBody: Equatable {
    public let nextToken: String?
    public let studioComponents: [StudioComponent]?
}

extension ListStudioComponentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case studioComponents = "studioComponents"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let studioComponentsContainer = try containerValues.decodeIfPresent([StudioComponent].self, forKey: .studioComponents)
        var studioComponentsDecoded0:[StudioComponent]? = nil
        if let studioComponentsContainer = studioComponentsContainer {
            studioComponentsDecoded0 = [StudioComponent]()
            for structure0 in studioComponentsContainer {
                studioComponentsDecoded0?.append(structure0)
            }
        }
        studioComponents = studioComponentsDecoded0
    }
}
