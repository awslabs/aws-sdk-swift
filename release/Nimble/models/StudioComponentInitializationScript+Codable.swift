// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StudioComponentInitializationScript: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case launchProfileProtocolVersion = "launchProfileProtocolVersion"
        case platform = "platform"
        case runContext = "runContext"
        case script = "script"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let launchProfileProtocolVersion = launchProfileProtocolVersion {
            try encodeContainer.encode(launchProfileProtocolVersion, forKey: .launchProfileProtocolVersion)
        }
        if let platform = platform {
            try encodeContainer.encode(platform.rawValue, forKey: .platform)
        }
        if let runContext = runContext {
            try encodeContainer.encode(runContext.rawValue, forKey: .runContext)
        }
        if let script = script {
            try encodeContainer.encode(script, forKey: .script)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let launchProfileProtocolVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .launchProfileProtocolVersion)
        launchProfileProtocolVersion = launchProfileProtocolVersionDecoded
        let platformDecoded = try containerValues.decodeIfPresent(LaunchProfilePlatform.self, forKey: .platform)
        platform = platformDecoded
        let runContextDecoded = try containerValues.decodeIfPresent(StudioComponentInitializationScriptRunContext.self, forKey: .runContext)
        runContext = runContextDecoded
        let scriptDecoded = try containerValues.decodeIfPresent(String.self, forKey: .script)
        script = scriptDecoded
    }
}
