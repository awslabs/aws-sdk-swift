// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AccessDeniedExceptionBody: Equatable {
    public let code: String?
    public let context: [String:String]?
    public let message: String?
}

extension AccessDeniedExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case code = "code"
        case context = "context"
        case message = "message"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .code)
        code = codeDecoded
        let contextContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .context)
        var contextDecoded0: [String:String]? = nil
        if let contextContainer = contextContainer {
            contextDecoded0 = [String:String]()
            for (key0, __string0) in contextContainer {
                contextDecoded0?[key0] = __string0
            }
        }
        context = contextDecoded0
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
    }
}
