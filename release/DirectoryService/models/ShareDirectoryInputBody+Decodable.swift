// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ShareDirectoryInputBody: Equatable {
    public let directoryId: String?
    public let shareNotes: String?
    public let shareTarget: ShareTarget?
    public let shareMethod: ShareMethod?
}

extension ShareDirectoryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryId = "DirectoryId"
        case shareMethod = "ShareMethod"
        case shareNotes = "ShareNotes"
        case shareTarget = "ShareTarget"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directoryId)
        directoryId = directoryIdDecoded
        let shareNotesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .shareNotes)
        shareNotes = shareNotesDecoded
        let shareTargetDecoded = try containerValues.decodeIfPresent(ShareTarget.self, forKey: .shareTarget)
        shareTarget = shareTargetDecoded
        let shareMethodDecoded = try containerValues.decodeIfPresent(ShareMethod.self, forKey: .shareMethod)
        shareMethod = shareMethodDecoded
    }
}
