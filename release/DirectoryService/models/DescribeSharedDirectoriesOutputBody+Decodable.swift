// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSharedDirectoriesOutputBody: Equatable {
    public let sharedDirectories: [SharedDirectory]?
    public let nextToken: String?
}

extension DescribeSharedDirectoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case sharedDirectories = "SharedDirectories"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sharedDirectoriesContainer = try containerValues.decodeIfPresent([SharedDirectory].self, forKey: .sharedDirectories)
        var sharedDirectoriesDecoded0:[SharedDirectory]? = nil
        if let sharedDirectoriesContainer = sharedDirectoriesContainer {
            sharedDirectoriesDecoded0 = [SharedDirectory]()
            for structure0 in sharedDirectoriesContainer {
                sharedDirectoriesDecoded0?.append(structure0)
            }
        }
        sharedDirectories = sharedDirectoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
