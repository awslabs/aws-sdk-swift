// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum IpRouteStatusMsg {
    case added
    case adding
    case addFailed
    case removed
    case removeFailed
    case removing
    case sdkUnknown(String)
}

extension IpRouteStatusMsg : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [IpRouteStatusMsg] {
        return [
            .added,
            .adding,
            .addFailed,
            .removed,
            .removeFailed,
            .removing,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .added: return "Added"
        case .adding: return "Adding"
        case .addFailed: return "AddFailed"
        case .removed: return "Removed"
        case .removeFailed: return "RemoveFailed"
        case .removing: return "Removing"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = IpRouteStatusMsg(rawValue: rawValue) ?? IpRouteStatusMsg.sdkUnknown(rawValue)
    }
}
