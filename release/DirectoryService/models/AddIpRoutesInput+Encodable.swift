// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddIpRoutesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case directoryId = "DirectoryId"
        case ipRoutes = "IpRoutes"
        case updateSecurityGroupForDirectoryControllers = "UpdateSecurityGroupForDirectoryControllers"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let directoryId = directoryId {
            try encodeContainer.encode(directoryId, forKey: .directoryId)
        }
        if let ipRoutes = ipRoutes {
            var ipRoutesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ipRoutes)
            for iproutes0 in ipRoutes {
                try ipRoutesContainer.encode(iproutes0)
            }
        }
        if updateSecurityGroupForDirectoryControllers != false {
            try encodeContainer.encode(updateSecurityGroupForDirectoryControllers, forKey: .updateSecurityGroupForDirectoryControllers)
        }
    }
}
