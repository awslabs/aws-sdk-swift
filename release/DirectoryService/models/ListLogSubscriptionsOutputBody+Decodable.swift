// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLogSubscriptionsOutputBody: Equatable {
    public let logSubscriptions: [LogSubscription]?
    public let nextToken: String?
}

extension ListLogSubscriptionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logSubscriptions = "LogSubscriptions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logSubscriptionsContainer = try containerValues.decodeIfPresent([LogSubscription].self, forKey: .logSubscriptions)
        var logSubscriptionsDecoded0:[LogSubscription]? = nil
        if let logSubscriptionsContainer = logSubscriptionsContainer {
            logSubscriptionsDecoded0 = [LogSubscription]()
            for structure0 in logSubscriptionsContainer {
                logSubscriptionsDecoded0?.append(structure0)
            }
        }
        logSubscriptions = logSubscriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
