// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSchemaExtensionsOutputBody: Equatable {
    public let schemaExtensionsInfo: [SchemaExtensionInfo]?
    public let nextToken: String?
}

extension ListSchemaExtensionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case schemaExtensionsInfo = "SchemaExtensionsInfo"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaExtensionsInfoContainer = try containerValues.decodeIfPresent([SchemaExtensionInfo].self, forKey: .schemaExtensionsInfo)
        var schemaExtensionsInfoDecoded0:[SchemaExtensionInfo]? = nil
        if let schemaExtensionsInfoContainer = schemaExtensionsInfoContainer {
            schemaExtensionsInfoDecoded0 = [SchemaExtensionInfo]()
            for structure0 in schemaExtensionsInfoContainer {
                schemaExtensionsInfoDecoded0?.append(structure0)
            }
        }
        schemaExtensionsInfo = schemaExtensionsInfoDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
