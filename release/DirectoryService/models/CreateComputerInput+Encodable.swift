// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateComputerInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case computerAttributes = "ComputerAttributes"
        case computerName = "ComputerName"
        case directoryId = "DirectoryId"
        case organizationalUnitDistinguishedName = "OrganizationalUnitDistinguishedName"
        case password = "Password"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let computerAttributes = computerAttributes {
            var computerAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .computerAttributes)
            for attributes0 in computerAttributes {
                try computerAttributesContainer.encode(attributes0)
            }
        }
        if let computerName = computerName {
            try encodeContainer.encode(computerName, forKey: .computerName)
        }
        if let directoryId = directoryId {
            try encodeContainer.encode(directoryId, forKey: .directoryId)
        }
        if let organizationalUnitDistinguishedName = organizationalUnitDistinguishedName {
            try encodeContainer.encode(organizationalUnitDistinguishedName, forKey: .organizationalUnitDistinguishedName)
        }
        if let password = password {
            try encodeContainer.encode(password, forKey: .password)
        }
    }
}
