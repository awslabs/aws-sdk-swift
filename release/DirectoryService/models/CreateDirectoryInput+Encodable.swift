// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDirectoryInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case name = "Name"
        case password = "Password"
        case shortName = "ShortName"
        case size = "Size"
        case tags = "Tags"
        case vpcSettings = "VpcSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let password = password {
            try encodeContainer.encode(password, forKey: .password)
        }
        if let shortName = shortName {
            try encodeContainer.encode(shortName, forKey: .shortName)
        }
        if let size = size {
            try encodeContainer.encode(size.rawValue, forKey: .size)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
        if let vpcSettings = vpcSettings {
            try encodeContainer.encode(vpcSettings, forKey: .vpcSettings)
        }
    }
}
