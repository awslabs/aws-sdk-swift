// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRegionsOutputBody: Equatable {
    public let regionsDescription: [RegionDescription]?
    public let nextToken: String?
}

extension DescribeRegionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case regionsDescription = "RegionsDescription"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regionsDescriptionContainer = try containerValues.decodeIfPresent([RegionDescription].self, forKey: .regionsDescription)
        var regionsDescriptionDecoded0:[RegionDescription]? = nil
        if let regionsDescriptionContainer = regionsDescriptionContainer {
            regionsDescriptionDecoded0 = [RegionDescription]()
            for structure0 in regionsDescriptionContainer {
                regionsDescriptionDecoded0?.append(structure0)
            }
        }
        regionsDescription = regionsDescriptionDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
