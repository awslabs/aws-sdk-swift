// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Information about the certificate.</p>
public struct Certificate: Equatable {
    /// <p>The identifier of the certificate.</p>
    public let certificateId: String?
    /// <p>A <code>ClientCertAuthSettings</code> object that contains client certificate authentication settings.</p>
    public let clientCertAuthSettings: ClientCertAuthSettings?
    /// <p>The common name for the certificate.</p>
    public let commonName: String?
    /// <p>The date and time when the certificate will expire.</p>
    public let expiryDateTime: Date?
    /// <p>The date and time that the certificate was registered.</p>
    public let registeredDateTime: Date?
    /// <p>The state of the certificate.</p>
    public let state: CertificateState?
    /// <p>Describes a state change for the certificate.</p>
    public let stateReason: String?
    /// <p>The function that the registered certificate performs. Valid values include <code>ClientLDAPS</code> or <code>ClientCertAuth</code>. The default value is <code>ClientLDAPS</code>.</p>
    public let type: CertificateType?

    public init (
        certificateId: String? = nil,
        clientCertAuthSettings: ClientCertAuthSettings? = nil,
        commonName: String? = nil,
        expiryDateTime: Date? = nil,
        registeredDateTime: Date? = nil,
        state: CertificateState? = nil,
        stateReason: String? = nil,
        type: CertificateType? = nil
    )
    {
        self.certificateId = certificateId
        self.clientCertAuthSettings = clientCertAuthSettings
        self.commonName = commonName
        self.expiryDateTime = expiryDateTime
        self.registeredDateTime = registeredDateTime
        self.state = state
        self.stateReason = stateReason
        self.type = type
    }
}
