// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTrustInputBody: Equatable {
    public let trustId: String?
    public let selectiveAuth: SelectiveAuth?
}

extension UpdateTrustInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case selectiveAuth = "SelectiveAuth"
        case trustId = "TrustId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trustIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trustId)
        trustId = trustIdDecoded
        let selectiveAuthDecoded = try containerValues.decodeIfPresent(SelectiveAuth.self, forKey: .selectiveAuth)
        selectiveAuth = selectiveAuthDecoded
    }
}
