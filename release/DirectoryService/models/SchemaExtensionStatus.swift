// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SchemaExtensionStatus {
    case cancelled
    case cancelInProgress
    case completed
    case creatingSnapshot
    case failed
    case initializing
    case replicating
    case rollbackInProgress
    case updatingSchema
    case sdkUnknown(String)
}

extension SchemaExtensionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SchemaExtensionStatus] {
        return [
            .cancelled,
            .cancelInProgress,
            .completed,
            .creatingSnapshot,
            .failed,
            .initializing,
            .replicating,
            .rollbackInProgress,
            .updatingSchema,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cancelled: return "Cancelled"
        case .cancelInProgress: return "CancelInProgress"
        case .completed: return "Completed"
        case .creatingSnapshot: return "CreatingSnapshot"
        case .failed: return "Failed"
        case .initializing: return "Initializing"
        case .replicating: return "Replicating"
        case .rollbackInProgress: return "RollbackInProgress"
        case .updatingSchema: return "UpdatingSchema"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SchemaExtensionStatus(rawValue: rawValue) ?? SchemaExtensionStatus.sdkUnknown(rawValue)
    }
}
