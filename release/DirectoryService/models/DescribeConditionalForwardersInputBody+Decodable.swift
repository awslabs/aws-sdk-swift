// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConditionalForwardersInputBody: Equatable {
    public let directoryId: String?
    public let remoteDomainNames: [String]?
}

extension DescribeConditionalForwardersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryId = "DirectoryId"
        case remoteDomainNames = "RemoteDomainNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directoryId)
        directoryId = directoryIdDecoded
        let remoteDomainNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .remoteDomainNames)
        var remoteDomainNamesDecoded0:[String]? = nil
        if let remoteDomainNamesContainer = remoteDomainNamesContainer {
            remoteDomainNamesDecoded0 = [String]()
            for string0 in remoteDomainNamesContainer {
                remoteDomainNamesDecoded0?.append(string0)
            }
        }
        remoteDomainNames = remoteDomainNamesDecoded0
    }
}
