// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDomainControllersOutputBody: Equatable {
    public let domainControllers: [DomainController]?
    public let nextToken: String?
}

extension DescribeDomainControllersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainControllers = "DomainControllers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainControllersContainer = try containerValues.decodeIfPresent([DomainController].self, forKey: .domainControllers)
        var domainControllersDecoded0:[DomainController]? = nil
        if let domainControllersContainer = domainControllersContainer {
            domainControllersDecoded0 = [DomainController]()
            for structure0 in domainControllersContainer {
                domainControllersDecoded0?.append(structure0)
            }
        }
        domainControllers = domainControllersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
