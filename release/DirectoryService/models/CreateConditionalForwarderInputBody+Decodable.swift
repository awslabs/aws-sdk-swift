// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateConditionalForwarderInputBody: Equatable {
    public let directoryId: String?
    public let remoteDomainName: String?
    public let dnsIpAddrs: [String]?
}

extension CreateConditionalForwarderInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case directoryId = "DirectoryId"
        case dnsIpAddrs = "DnsIpAddrs"
        case remoteDomainName = "RemoteDomainName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directoryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directoryId)
        directoryId = directoryIdDecoded
        let remoteDomainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .remoteDomainName)
        remoteDomainName = remoteDomainNameDecoded
        let dnsIpAddrsContainer = try containerValues.decodeIfPresent([String].self, forKey: .dnsIpAddrs)
        var dnsIpAddrsDecoded0:[String]? = nil
        if let dnsIpAddrsContainer = dnsIpAddrsContainer {
            dnsIpAddrsDecoded0 = [String]()
            for string0 in dnsIpAddrsContainer {
                dnsIpAddrsDecoded0?.append(string0)
            }
        }
        dnsIpAddrs = dnsIpAddrsDecoded0
    }
}
