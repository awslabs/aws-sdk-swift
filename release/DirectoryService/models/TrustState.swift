// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum TrustState {
    case created
    case creating
    case deleted
    case deleting
    case failed
    case updated
    case updateFailed
    case updating
    case verified
    case verifying
    case verifyFailed
    case sdkUnknown(String)
}

extension TrustState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TrustState] {
        return [
            .created,
            .creating,
            .deleted,
            .deleting,
            .failed,
            .updated,
            .updateFailed,
            .updating,
            .verified,
            .verifying,
            .verifyFailed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .created: return "Created"
        case .creating: return "Creating"
        case .deleted: return "Deleted"
        case .deleting: return "Deleting"
        case .failed: return "Failed"
        case .updated: return "Updated"
        case .updateFailed: return "UpdateFailed"
        case .updating: return "Updating"
        case .verified: return "Verified"
        case .verifying: return "Verifying"
        case .verifyFailed: return "VerifyFailed"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TrustState(rawValue: rawValue) ?? TrustState.sdkUnknown(rawValue)
    }
}
