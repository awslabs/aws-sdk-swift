// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DirectoryStage {
    case active
    case created
    case creating
    case deleted
    case deleting
    case failed
    case impaired
    case inoperable
    case requested
    case restorefailed
    case restoring
    case sdkUnknown(String)
}

extension DirectoryStage : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DirectoryStage] {
        return [
            .active,
            .created,
            .creating,
            .deleted,
            .deleting,
            .failed,
            .impaired,
            .inoperable,
            .requested,
            .restorefailed,
            .restoring,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "Active"
        case .created: return "Created"
        case .creating: return "Creating"
        case .deleted: return "Deleted"
        case .deleting: return "Deleting"
        case .failed: return "Failed"
        case .impaired: return "Impaired"
        case .inoperable: return "Inoperable"
        case .requested: return "Requested"
        case .restorefailed: return "RestoreFailed"
        case .restoring: return "Restoring"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DirectoryStage(rawValue: rawValue) ?? DirectoryStage.sdkUnknown(rawValue)
    }
}
