// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The replicated Region information for a directory.</p>
public struct RegionDescription: Equatable {
    /// <p>The desired number of domain controllers in the specified Region for the specified
    ///       directory.</p>
    public let desiredNumberOfDomainControllers: Int
    /// <p>The identifier of the directory.</p>
    public let directoryId: String?
    /// <p>The date and time that the Region description was last updated.</p>
    public let lastUpdatedDateTime: Date?
    /// <p>Specifies when the Region replication began.</p>
    public let launchTime: Date?
    /// <p>The name of the Region. For example, <code>us-east-1</code>.</p>
    public let regionName: String?
    /// <p>Specifies whether the Region is the primary Region or an additional Region.</p>
    public let regionType: RegionType?
    /// <p>The status of the replication process for the specified Region.</p>
    public let status: DirectoryStage?
    /// <p>The date and time that the Region status was last updated.</p>
    public let statusLastUpdatedDateTime: Date?
    /// <p>Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.</p>
    public let vpcSettings: DirectoryVpcSettings?

    public init (
        desiredNumberOfDomainControllers: Int = 0,
        directoryId: String? = nil,
        lastUpdatedDateTime: Date? = nil,
        launchTime: Date? = nil,
        regionName: String? = nil,
        regionType: RegionType? = nil,
        status: DirectoryStage? = nil,
        statusLastUpdatedDateTime: Date? = nil,
        vpcSettings: DirectoryVpcSettings? = nil
    )
    {
        self.desiredNumberOfDomainControllers = desiredNumberOfDomainControllers
        self.directoryId = directoryId
        self.lastUpdatedDateTime = lastUpdatedDateTime
        self.launchTime = launchTime
        self.regionName = regionName
        self.regionType = regionType
        self.status = status
        self.statusLastUpdatedDateTime = statusLastUpdatedDateTime
        self.vpcSettings = vpcSettings
    }
}
