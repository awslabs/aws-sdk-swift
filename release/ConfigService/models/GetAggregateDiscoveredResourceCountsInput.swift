// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetAggregateDiscoveredResourceCountsInput: Equatable {
    /// <p>The name of the configuration aggregator.</p>
    public let configurationAggregatorName: String?
    /// <p>Filters the results based on the <code>ResourceCountFilters</code> object.</p>
    public let filters: ResourceCountFilters?
    /// <p>The key to group the resource counts.</p>
    public let groupByKey: ResourceCountGroupKey?
    /// <p>The maximum number of <a>GroupedResourceCount</a> objects returned on each page. The default is 1000. You cannot specify a number greater than 1000. If you specify 0, AWS Config uses the default.</p>
    public let limit: Int
    /// <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response. </p>
    public let nextToken: String?

    public init (
        configurationAggregatorName: String? = nil,
        filters: ResourceCountFilters? = nil,
        groupByKey: ResourceCountGroupKey? = nil,
        limit: Int = 0,
        nextToken: String? = nil
    )
    {
        self.configurationAggregatorName = configurationAggregatorName
        self.filters = filters
        self.groupByKey = groupByKey
        self.limit = limit
        self.nextToken = nextToken
    }
}
