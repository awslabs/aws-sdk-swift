// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationRecorderStatusInputBody: Equatable {
    public let configurationRecorderNames: [String]?
}

extension DescribeConfigurationRecorderStatusInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurationRecorderNames = "ConfigurationRecorderNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationRecorderNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .configurationRecorderNames)
        var configurationRecorderNamesDecoded0:[String]? = nil
        if let configurationRecorderNamesContainer = configurationRecorderNamesContainer {
            configurationRecorderNamesDecoded0 = [String]()
            for string0 in configurationRecorderNamesContainer {
                configurationRecorderNamesDecoded0?.append(string0)
            }
        }
        configurationRecorderNames = configurationRecorderNamesDecoded0
    }
}
