// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConformancePacksOutputBody: Equatable {
    public let conformancePackDetails: [ConformancePackDetail]?
    public let nextToken: String?
}

extension DescribeConformancePacksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackDetails = "ConformancePackDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackDetailsContainer = try containerValues.decodeIfPresent([ConformancePackDetail].self, forKey: .conformancePackDetails)
        var conformancePackDetailsDecoded0:[ConformancePackDetail]? = nil
        if let conformancePackDetailsContainer = conformancePackDetailsContainer {
            conformancePackDetailsDecoded0 = [ConformancePackDetail]()
            for structure0 in conformancePackDetailsContainer {
                conformancePackDetailsDecoded0?.append(structure0)
            }
        }
        conformancePackDetails = conformancePackDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
