// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The details of an AWS Config evaluation for an account ID and
/// 			region in an aggregator. Provides the AWS resource that was
/// 			evaluated, the compliance of the resource, related time stamps, and
/// 			supplementary information. </p>
public struct AggregateEvaluationResult: Equatable {
    /// <p>The 12-digit account ID of the source account.</p>
    public let accountId: String?
    /// <p>Supplementary information about how the agrregate evaluation
    /// 			determined the compliance.</p>
    public let annotation: String?
    /// <p>The source region from where the data is aggregated.</p>
    public let awsRegion: String?
    /// <p>The resource compliance status.</p>
    /// 		       <p>For the <code>AggregationEvaluationResult</code> data type, AWS
    /// 			Config supports only the <code>COMPLIANT</code> and
    /// 				<code>NON_COMPLIANT</code>. AWS Config does not support the
    /// 				<code>NOT_APPLICABLE</code> and <code>INSUFFICIENT_DATA</code>
    /// 			value.</p>
    public let complianceType: ComplianceType?
    /// <p>The time when the AWS Config rule evaluated the AWS
    /// 			resource.</p>
    public let configRuleInvokedTime: Date?
    /// <p>Uniquely identifies the evaluation result.</p>
    public let evaluationResultIdentifier: EvaluationResultIdentifier?
    /// <p>The time when AWS Config recorded the aggregate evaluation
    /// 			result.</p>
    public let resultRecordedTime: Date?

    public init (
        accountId: String? = nil,
        annotation: String? = nil,
        awsRegion: String? = nil,
        complianceType: ComplianceType? = nil,
        configRuleInvokedTime: Date? = nil,
        evaluationResultIdentifier: EvaluationResultIdentifier? = nil,
        resultRecordedTime: Date? = nil
    )
    {
        self.accountId = accountId
        self.annotation = annotation
        self.awsRegion = awsRegion
        self.complianceType = complianceType
        self.configRuleInvokedTime = configRuleInvokedTime
        self.evaluationResultIdentifier = evaluationResultIdentifier
        self.resultRecordedTime = resultRecordedTime
    }
}
