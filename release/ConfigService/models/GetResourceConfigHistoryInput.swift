// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The input for the <a>GetResourceConfigHistory</a>
/// 			action.</p>
public struct GetResourceConfigHistoryInput: Equatable {
    /// <p>The chronological order for configuration items listed. By
    /// 			default, the results are listed in reverse chronological
    /// 			order.</p>
    public let chronologicalOrder: ChronologicalOrder?
    /// <p>The time stamp that indicates an earlier time. If not
    /// 			specified, the action returns paginated results that contain
    /// 			configuration items that start when the first configuration item was
    /// 			recorded.</p>
    public let earlierTime: Date?
    /// <p>The time stamp that indicates a later time. If not specified,
    /// 			current time is taken.</p>
    public let laterTime: Date?
    /// <p>The maximum number of configuration items returned on each
    /// 			page. The default is 10. You cannot specify a number greater than
    /// 			100. If you specify 0, AWS Config uses the default.</p>
    public let limit: Int
    /// <p>The <code>nextToken</code> string returned on a previous page
    /// 			that you use to get the next page of results in a paginated
    /// 			response.</p>
    public let nextToken: String?
    /// <p>The ID of the resource (for example.,
    /// 			<code>sg-xxxxxx</code>).</p>
    public let resourceId: String?
    /// <p>The resource type.</p>
    public let resourceType: ResourceType?

    public init (
        chronologicalOrder: ChronologicalOrder? = nil,
        earlierTime: Date? = nil,
        laterTime: Date? = nil,
        limit: Int = 0,
        nextToken: String? = nil,
        resourceId: String? = nil,
        resourceType: ResourceType? = nil
    )
    {
        self.chronologicalOrder = chronologicalOrder
        self.earlierTime = earlierTime
        self.laterTime = laterTime
        self.limit = limit
        self.nextToken = nextToken
        self.resourceId = resourceId
        self.resourceType = resourceType
    }
}
