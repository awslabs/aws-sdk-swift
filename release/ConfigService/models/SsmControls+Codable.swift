// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SsmControls: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case concurrentExecutionRatePercentage = "ConcurrentExecutionRatePercentage"
        case errorPercentage = "ErrorPercentage"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let concurrentExecutionRatePercentage = concurrentExecutionRatePercentage {
            try encodeContainer.encode(concurrentExecutionRatePercentage, forKey: .concurrentExecutionRatePercentage)
        }
        if let errorPercentage = errorPercentage {
            try encodeContainer.encode(errorPercentage, forKey: .errorPercentage)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let concurrentExecutionRatePercentageDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .concurrentExecutionRatePercentage)
        concurrentExecutionRatePercentage = concurrentExecutionRatePercentageDecoded
        let errorPercentageDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .errorPercentage)
        errorPercentage = errorPercentageDecoded
    }
}
