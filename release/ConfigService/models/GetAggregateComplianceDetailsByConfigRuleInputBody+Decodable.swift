// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAggregateComplianceDetailsByConfigRuleInputBody: Equatable {
    public let configurationAggregatorName: String?
    public let configRuleName: String?
    public let accountId: String?
    public let awsRegion: String?
    public let complianceType: ComplianceType?
    public let limit: Int
    public let nextToken: String?
}

extension GetAggregateComplianceDetailsByConfigRuleInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case awsRegion = "AwsRegion"
        case complianceType = "ComplianceType"
        case configRuleName = "ConfigRuleName"
        case configurationAggregatorName = "ConfigurationAggregatorName"
        case limit = "Limit"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationAggregatorNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configurationAggregatorName)
        configurationAggregatorName = configurationAggregatorNameDecoded
        let configRuleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configRuleName)
        configRuleName = configRuleNameDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let awsRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsRegion)
        awsRegion = awsRegionDecoded
        let complianceTypeDecoded = try containerValues.decodeIfPresent(ComplianceType.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let limitDecoded = try containerValues.decode(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
