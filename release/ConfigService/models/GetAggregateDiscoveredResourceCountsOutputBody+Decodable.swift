// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAggregateDiscoveredResourceCountsOutputBody: Equatable {
    public let totalDiscoveredResources: Int
    public let groupByKey: String?
    public let groupedResourceCounts: [GroupedResourceCount]?
    public let nextToken: String?
}

extension GetAggregateDiscoveredResourceCountsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groupByKey = "GroupByKey"
        case groupedResourceCounts = "GroupedResourceCounts"
        case nextToken = "NextToken"
        case totalDiscoveredResources = "TotalDiscoveredResources"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let totalDiscoveredResourcesDecoded = try containerValues.decode(Int.self, forKey: .totalDiscoveredResources)
        totalDiscoveredResources = totalDiscoveredResourcesDecoded
        let groupByKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupByKey)
        groupByKey = groupByKeyDecoded
        let groupedResourceCountsContainer = try containerValues.decodeIfPresent([GroupedResourceCount].self, forKey: .groupedResourceCounts)
        var groupedResourceCountsDecoded0:[GroupedResourceCount]? = nil
        if let groupedResourceCountsContainer = groupedResourceCountsContainer {
            groupedResourceCountsDecoded0 = [GroupedResourceCount]()
            for structure0 in groupedResourceCountsContainer {
                groupedResourceCountsDecoded0?.append(structure0)
            }
        }
        groupedResourceCounts = groupedResourceCountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
