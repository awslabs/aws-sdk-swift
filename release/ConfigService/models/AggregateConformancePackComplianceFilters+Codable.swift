// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AggregateConformancePackComplianceFilters: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case awsRegion = "AwsRegion"
        case complianceType = "ComplianceType"
        case conformancePackName = "ConformancePackName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let awsRegion = awsRegion {
            try encodeContainer.encode(awsRegion, forKey: .awsRegion)
        }
        if let complianceType = complianceType {
            try encodeContainer.encode(complianceType.rawValue, forKey: .complianceType)
        }
        if let conformancePackName = conformancePackName {
            try encodeContainer.encode(conformancePackName, forKey: .conformancePackName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let complianceTypeDecoded = try containerValues.decodeIfPresent(ConformancePackComplianceType.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let awsRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsRegion)
        awsRegion = awsRegionDecoded
    }
}
