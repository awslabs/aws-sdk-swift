// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConformancePackStatusOutputBody: Equatable {
    public let conformancePackStatusDetails: [ConformancePackStatusDetail]?
    public let nextToken: String?
}

extension DescribeConformancePackStatusOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackStatusDetails = "ConformancePackStatusDetails"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackStatusDetailsContainer = try containerValues.decodeIfPresent([ConformancePackStatusDetail].self, forKey: .conformancePackStatusDetails)
        var conformancePackStatusDetailsDecoded0:[ConformancePackStatusDetail]? = nil
        if let conformancePackStatusDetailsContainer = conformancePackStatusDetailsContainer {
            conformancePackStatusDetailsDecoded0 = [ConformancePackStatusDetail]()
            for structure0 in conformancePackStatusDetailsContainer {
                conformancePackStatusDetailsDecoded0?.append(structure0)
            }
        }
        conformancePackStatusDetails = conformancePackStatusDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
