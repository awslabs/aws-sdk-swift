// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOrganizationConformancePackDetailedStatusOutputBody: Equatable {
    public let organizationConformancePackDetailedStatuses: [OrganizationConformancePackDetailedStatus]?
    public let nextToken: String?
}

extension GetOrganizationConformancePackDetailedStatusOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case organizationConformancePackDetailedStatuses = "OrganizationConformancePackDetailedStatuses"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConformancePackDetailedStatusesContainer = try containerValues.decodeIfPresent([OrganizationConformancePackDetailedStatus].self, forKey: .organizationConformancePackDetailedStatuses)
        var organizationConformancePackDetailedStatusesDecoded0:[OrganizationConformancePackDetailedStatus]? = nil
        if let organizationConformancePackDetailedStatusesContainer = organizationConformancePackDetailedStatusesContainer {
            organizationConformancePackDetailedStatusesDecoded0 = [OrganizationConformancePackDetailedStatus]()
            for structure0 in organizationConformancePackDetailedStatusesContainer {
                organizationConformancePackDetailedStatusesDecoded0?.append(structure0)
            }
        }
        organizationConformancePackDetailedStatuses = organizationConformancePackDetailedStatusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
