// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationConformancePacksOutputBody: Equatable {
    public let organizationConformancePacks: [OrganizationConformancePack]?
    public let nextToken: String?
}

extension DescribeOrganizationConformancePacksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case organizationConformancePacks = "OrganizationConformancePacks"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConformancePacksContainer = try containerValues.decodeIfPresent([OrganizationConformancePack].self, forKey: .organizationConformancePacks)
        var organizationConformancePacksDecoded0:[OrganizationConformancePack]? = nil
        if let organizationConformancePacksContainer = organizationConformancePacksContainer {
            organizationConformancePacksDecoded0 = [OrganizationConformancePack]()
            for structure0 in organizationConformancePacksContainer {
                organizationConformancePacksDecoded0?.append(structure0)
            }
        }
        organizationConformancePacks = organizationConformancePacksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
