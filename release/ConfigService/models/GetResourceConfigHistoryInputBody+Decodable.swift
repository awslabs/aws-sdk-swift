// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceConfigHistoryInputBody: Equatable {
    public let resourceType: ResourceType?
    public let resourceId: String?
    public let laterTime: Date?
    public let earlierTime: Date?
    public let chronologicalOrder: ChronologicalOrder?
    public let limit: Int
    public let nextToken: String?
}

extension GetResourceConfigHistoryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case chronologicalOrder
        case earlierTime
        case laterTime
        case limit
        case nextToken
        case resourceId
        case resourceType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let laterTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .laterTime)
        laterTime = laterTimeDecoded
        let earlierTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .earlierTime)
        earlierTime = earlierTimeDecoded
        let chronologicalOrderDecoded = try containerValues.decodeIfPresent(ChronologicalOrder.self, forKey: .chronologicalOrder)
        chronologicalOrder = chronologicalOrderDecoded
        let limitDecoded = try containerValues.decode(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
