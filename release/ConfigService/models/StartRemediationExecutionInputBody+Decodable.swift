// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartRemediationExecutionInputBody: Equatable {
    public let configRuleName: String?
    public let resourceKeys: [ResourceKey]?
}

extension StartRemediationExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configRuleName = "ConfigRuleName"
        case resourceKeys = "ResourceKeys"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configRuleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configRuleName)
        configRuleName = configRuleNameDecoded
        let resourceKeysContainer = try containerValues.decodeIfPresent([ResourceKey].self, forKey: .resourceKeys)
        var resourceKeysDecoded0:[ResourceKey]? = nil
        if let resourceKeysContainer = resourceKeysContainer {
            resourceKeysDecoded0 = [ResourceKey]()
            for structure0 in resourceKeysContainer {
                resourceKeysDecoded0?.append(structure0)
            }
        }
        resourceKeys = resourceKeysDecoded0
    }
}
