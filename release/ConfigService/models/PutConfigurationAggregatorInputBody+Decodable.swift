// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutConfigurationAggregatorInputBody: Equatable {
    public let configurationAggregatorName: String?
    public let accountAggregationSources: [AccountAggregationSource]?
    public let organizationAggregationSource: OrganizationAggregationSource?
    public let tags: [Tag]?
}

extension PutConfigurationAggregatorInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountAggregationSources = "AccountAggregationSources"
        case configurationAggregatorName = "ConfigurationAggregatorName"
        case organizationAggregationSource = "OrganizationAggregationSource"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationAggregatorNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configurationAggregatorName)
        configurationAggregatorName = configurationAggregatorNameDecoded
        let accountAggregationSourcesContainer = try containerValues.decodeIfPresent([AccountAggregationSource].self, forKey: .accountAggregationSources)
        var accountAggregationSourcesDecoded0:[AccountAggregationSource]? = nil
        if let accountAggregationSourcesContainer = accountAggregationSourcesContainer {
            accountAggregationSourcesDecoded0 = [AccountAggregationSource]()
            for structure0 in accountAggregationSourcesContainer {
                accountAggregationSourcesDecoded0?.append(structure0)
            }
        }
        accountAggregationSources = accountAggregationSourcesDecoded0
        let organizationAggregationSourceDecoded = try containerValues.decodeIfPresent(OrganizationAggregationSource.self, forKey: .organizationAggregationSource)
        organizationAggregationSource = organizationAggregationSourceDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
