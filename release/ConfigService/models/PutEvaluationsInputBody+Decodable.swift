// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutEvaluationsInputBody: Equatable {
    public let evaluations: [Evaluation]?
    public let resultToken: String?
    public let testMode: Bool
}

extension PutEvaluationsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case evaluations = "Evaluations"
        case resultToken = "ResultToken"
        case testMode = "TestMode"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evaluationsContainer = try containerValues.decodeIfPresent([Evaluation].self, forKey: .evaluations)
        var evaluationsDecoded0:[Evaluation]? = nil
        if let evaluationsContainer = evaluationsContainer {
            evaluationsDecoded0 = [Evaluation]()
            for structure0 in evaluationsContainer {
                evaluationsDecoded0?.append(structure0)
            }
        }
        evaluations = evaluationsDecoded0
        let resultTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resultToken)
        resultToken = resultTokenDecoded
        let testModeDecoded = try containerValues.decode(Bool.self, forKey: .testMode)
        testMode = testModeDecoded
    }
}
