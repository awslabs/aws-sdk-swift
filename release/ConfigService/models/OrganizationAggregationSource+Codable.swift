// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OrganizationAggregationSource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case allAwsRegions = "AllAwsRegions"
        case awsRegions = "AwsRegions"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if allAwsRegions != false {
            try encodeContainer.encode(allAwsRegions, forKey: .allAwsRegions)
        }
        if let awsRegions = awsRegions {
            var awsRegionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .awsRegions)
            for aggregatorregionlist0 in awsRegions {
                try awsRegionsContainer.encode(aggregatorregionlist0)
            }
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let awsRegionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .awsRegions)
        var awsRegionsDecoded0:[String]? = nil
        if let awsRegionsContainer = awsRegionsContainer {
            awsRegionsDecoded0 = [String]()
            for string0 in awsRegionsContainer {
                awsRegionsDecoded0?.append(string0)
            }
        }
        awsRegions = awsRegionsDecoded0
        let allAwsRegionsDecoded = try containerValues.decode(Bool.self, forKey: .allAwsRegions)
        allAwsRegions = allAwsRegionsDecoded
    }
}
