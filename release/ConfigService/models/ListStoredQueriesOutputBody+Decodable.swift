// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStoredQueriesOutputBody: Equatable {
    public let storedQueryMetadata: [StoredQueryMetadata]?
    public let nextToken: String?
}

extension ListStoredQueriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case storedQueryMetadata = "StoredQueryMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let storedQueryMetadataContainer = try containerValues.decodeIfPresent([StoredQueryMetadata].self, forKey: .storedQueryMetadata)
        var storedQueryMetadataDecoded0:[StoredQueryMetadata]? = nil
        if let storedQueryMetadataContainer = storedQueryMetadataContainer {
            storedQueryMetadataDecoded0 = [StoredQueryMetadata]()
            for structure0 in storedQueryMetadataContainer {
                storedQueryMetadataDecoded0?.append(structure0)
            }
        }
        storedQueryMetadata = storedQueryMetadataDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
