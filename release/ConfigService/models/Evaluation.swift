// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Identifies an AWS resource and indicates whether it complies
/// 			with the AWS Config rule that it was evaluated against.</p>
public struct Evaluation: Equatable {
    /// <p>Supplementary information about how the evaluation determined
    /// 			the compliance.</p>
    public let annotation: String?
    /// <p>The ID of the AWS resource that was evaluated.</p>
    public let complianceResourceId: String?
    /// <p>The type of AWS resource that was evaluated.</p>
    public let complianceResourceType: String?
    /// <p>Indicates whether the AWS resource complies with the AWS Config
    /// 			rule that it was evaluated against.</p>
    /// 		       <p>For the <code>Evaluation</code> data type, AWS Config supports
    /// 			only the <code>COMPLIANT</code>, <code>NON_COMPLIANT</code>, and
    /// 				<code>NOT_APPLICABLE</code> values. AWS Config does not support
    /// 			the <code>INSUFFICIENT_DATA</code> value for this data
    /// 			type.</p>
    /// 		       <p>Similarly, AWS Config does not accept
    /// 				<code>INSUFFICIENT_DATA</code> as the value for
    /// 				<code>ComplianceType</code> from a <code>PutEvaluations</code>
    /// 			request. For example, an AWS Lambda function for a custom AWS Config
    /// 			rule cannot pass an <code>INSUFFICIENT_DATA</code> value to AWS
    /// 			Config.</p>
    public let complianceType: ComplianceType?
    /// <p>The time of the event in AWS Config that triggered the
    /// 			evaluation. For event-based evaluations, the time indicates when AWS
    /// 			Config created the configuration item that triggered the evaluation.
    /// 			For periodic evaluations, the time indicates when AWS Config
    /// 			triggered the evaluation at the frequency that you specified (for
    /// 			example, every 24 hours).</p>
    public let orderingTimestamp: Date?

    public init (
        annotation: String? = nil,
        complianceResourceId: String? = nil,
        complianceResourceType: String? = nil,
        complianceType: ComplianceType? = nil,
        orderingTimestamp: Date? = nil
    )
    {
        self.annotation = annotation
        self.complianceResourceId = complianceResourceId
        self.complianceResourceType = complianceResourceType
        self.complianceType = complianceType
        self.orderingTimestamp = orderingTimestamp
    }
}
