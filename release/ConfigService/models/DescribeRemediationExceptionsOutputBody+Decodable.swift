// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRemediationExceptionsOutputBody: Equatable {
    public let remediationExceptions: [RemediationException]?
    public let nextToken: String?
}

extension DescribeRemediationExceptionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case remediationExceptions = "RemediationExceptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remediationExceptionsContainer = try containerValues.decodeIfPresent([RemediationException].self, forKey: .remediationExceptions)
        var remediationExceptionsDecoded0:[RemediationException]? = nil
        if let remediationExceptionsContainer = remediationExceptionsContainer {
            remediationExceptionsDecoded0 = [RemediationException]()
            for structure0 in remediationExceptionsContainer {
                remediationExceptionsDecoded0?.append(structure0)
            }
        }
        remediationExceptions = remediationExceptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
