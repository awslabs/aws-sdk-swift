// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAggregateComplianceByConformancePacksOutputBody: Equatable {
    public let aggregateComplianceByConformancePacks: [AggregateComplianceByConformancePack]?
    public let nextToken: String?
}

extension DescribeAggregateComplianceByConformancePacksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aggregateComplianceByConformancePacks = "AggregateComplianceByConformancePacks"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregateComplianceByConformancePacksContainer = try containerValues.decodeIfPresent([AggregateComplianceByConformancePack].self, forKey: .aggregateComplianceByConformancePacks)
        var aggregateComplianceByConformancePacksDecoded0:[AggregateComplianceByConformancePack]? = nil
        if let aggregateComplianceByConformancePacksContainer = aggregateComplianceByConformancePacksContainer {
            aggregateComplianceByConformancePacksDecoded0 = [AggregateComplianceByConformancePack]()
            for structure0 in aggregateComplianceByConformancePacksContainer {
                aggregateComplianceByConformancePacksDecoded0?.append(structure0)
            }
        }
        aggregateComplianceByConformancePacks = aggregateComplianceByConformancePacksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
