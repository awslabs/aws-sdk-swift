// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutConformancePackInputBody: Equatable {
    public let conformancePackName: String?
    public let templateS3Uri: String?
    public let templateBody: String?
    public let deliveryS3Bucket: String?
    public let deliveryS3KeyPrefix: String?
    public let conformancePackInputParameters: [ConformancePackInputParameter]?
}

extension PutConformancePackInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackInputParameters = "ConformancePackInputParameters"
        case conformancePackName = "ConformancePackName"
        case deliveryS3Bucket = "DeliveryS3Bucket"
        case deliveryS3KeyPrefix = "DeliveryS3KeyPrefix"
        case templateBody = "TemplateBody"
        case templateS3Uri = "TemplateS3Uri"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let templateS3UriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateS3Uri)
        templateS3Uri = templateS3UriDecoded
        let templateBodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateBody)
        templateBody = templateBodyDecoded
        let deliveryS3BucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deliveryS3Bucket)
        deliveryS3Bucket = deliveryS3BucketDecoded
        let deliveryS3KeyPrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deliveryS3KeyPrefix)
        deliveryS3KeyPrefix = deliveryS3KeyPrefixDecoded
        let conformancePackInputParametersContainer = try containerValues.decodeIfPresent([ConformancePackInputParameter].self, forKey: .conformancePackInputParameters)
        var conformancePackInputParametersDecoded0:[ConformancePackInputParameter]? = nil
        if let conformancePackInputParametersContainer = conformancePackInputParametersContainer {
            conformancePackInputParametersDecoded0 = [ConformancePackInputParameter]()
            for structure0 in conformancePackInputParametersContainer {
                conformancePackInputParametersDecoded0?.append(structure0)
            }
        }
        conformancePackInputParameters = conformancePackInputParametersDecoded0
    }
}
