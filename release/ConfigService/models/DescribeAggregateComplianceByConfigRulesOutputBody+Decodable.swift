// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAggregateComplianceByConfigRulesOutputBody: Equatable {
    public let aggregateComplianceByConfigRules: [AggregateComplianceByConfigRule]?
    public let nextToken: String?
}

extension DescribeAggregateComplianceByConfigRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aggregateComplianceByConfigRules = "AggregateComplianceByConfigRules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregateComplianceByConfigRulesContainer = try containerValues.decodeIfPresent([AggregateComplianceByConfigRule].self, forKey: .aggregateComplianceByConfigRules)
        var aggregateComplianceByConfigRulesDecoded0:[AggregateComplianceByConfigRule]? = nil
        if let aggregateComplianceByConfigRulesContainer = aggregateComplianceByConfigRulesContainer {
            aggregateComplianceByConfigRulesDecoded0 = [AggregateComplianceByConfigRule]()
            for structure0 in aggregateComplianceByConfigRulesContainer {
                aggregateComplianceByConfigRulesDecoded0?.append(structure0)
            }
        }
        aggregateComplianceByConfigRules = aggregateComplianceByConfigRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
