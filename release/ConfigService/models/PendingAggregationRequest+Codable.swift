// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PendingAggregationRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case requesterAccountId = "RequesterAccountId"
        case requesterAwsRegion = "RequesterAwsRegion"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let requesterAccountId = requesterAccountId {
            try encodeContainer.encode(requesterAccountId, forKey: .requesterAccountId)
        }
        if let requesterAwsRegion = requesterAwsRegion {
            try encodeContainer.encode(requesterAwsRegion, forKey: .requesterAwsRegion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requesterAccountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requesterAccountId)
        requesterAccountId = requesterAccountIdDecoded
        let requesterAwsRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requesterAwsRegion)
        requesterAwsRegion = requesterAwsRegionDecoded
    }
}
