// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RemediationParameterValue: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resourceValue = "ResourceValue"
        case staticValue = "StaticValue"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceValue = resourceValue {
            try encodeContainer.encode(resourceValue, forKey: .resourceValue)
        }
        if let staticValue = staticValue {
            try encodeContainer.encode(staticValue, forKey: .staticValue)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceValueDecoded = try containerValues.decodeIfPresent(ResourceValue.self, forKey: .resourceValue)
        resourceValue = resourceValueDecoded
        let staticValueDecoded = try containerValues.decodeIfPresent(StaticValue.self, forKey: .staticValue)
        staticValue = staticValueDecoded
    }
}
