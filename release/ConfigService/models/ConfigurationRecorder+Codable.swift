// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigurationRecorder: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name
        case recordingGroup
        case roleARN
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let recordingGroup = recordingGroup {
            try encodeContainer.encode(recordingGroup, forKey: .recordingGroup)
        }
        if let roleARN = roleARN {
            try encodeContainer.encode(roleARN, forKey: .roleARN)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let roleARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
        let recordingGroupDecoded = try containerValues.decodeIfPresent(RecordingGroup.self, forKey: .recordingGroup)
        recordingGroup = recordingGroupDecoded
    }
}
