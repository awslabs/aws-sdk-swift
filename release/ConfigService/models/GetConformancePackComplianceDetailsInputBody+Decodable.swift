// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConformancePackComplianceDetailsInputBody: Equatable {
    public let conformancePackName: String?
    public let filters: ConformancePackEvaluationFilters?
    public let limit: Int
    public let nextToken: String?
}

extension GetConformancePackComplianceDetailsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackName = "ConformancePackName"
        case filters = "Filters"
        case limit = "Limit"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(ConformancePackEvaluationFilters.self, forKey: .filters)
        filters = filtersDecoded
        let limitDecoded = try containerValues.decode(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
