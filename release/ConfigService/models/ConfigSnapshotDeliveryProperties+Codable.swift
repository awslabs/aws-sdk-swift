// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigSnapshotDeliveryProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deliveryFrequency
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deliveryFrequency = deliveryFrequency {
            try encodeContainer.encode(deliveryFrequency.rawValue, forKey: .deliveryFrequency)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryFrequencyDecoded = try containerValues.decodeIfPresent(MaximumExecutionFrequency.self, forKey: .deliveryFrequency)
        deliveryFrequency = deliveryFrequencyDecoded
    }
}
