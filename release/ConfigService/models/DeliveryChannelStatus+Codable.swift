// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeliveryChannelStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case configHistoryDeliveryInfo
        case configSnapshotDeliveryInfo
        case configStreamDeliveryInfo
        case name
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let configHistoryDeliveryInfo = configHistoryDeliveryInfo {
            try encodeContainer.encode(configHistoryDeliveryInfo, forKey: .configHistoryDeliveryInfo)
        }
        if let configSnapshotDeliveryInfo = configSnapshotDeliveryInfo {
            try encodeContainer.encode(configSnapshotDeliveryInfo, forKey: .configSnapshotDeliveryInfo)
        }
        if let configStreamDeliveryInfo = configStreamDeliveryInfo {
            try encodeContainer.encode(configStreamDeliveryInfo, forKey: .configStreamDeliveryInfo)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let configSnapshotDeliveryInfoDecoded = try containerValues.decodeIfPresent(ConfigExportDeliveryInfo.self, forKey: .configSnapshotDeliveryInfo)
        configSnapshotDeliveryInfo = configSnapshotDeliveryInfoDecoded
        let configHistoryDeliveryInfoDecoded = try containerValues.decodeIfPresent(ConfigExportDeliveryInfo.self, forKey: .configHistoryDeliveryInfo)
        configHistoryDeliveryInfo = configHistoryDeliveryInfoDecoded
        let configStreamDeliveryInfoDecoded = try containerValues.decodeIfPresent(ConfigStreamDeliveryInfo.self, forKey: .configStreamDeliveryInfo)
        configStreamDeliveryInfo = configStreamDeliveryInfoDecoded
    }
}
