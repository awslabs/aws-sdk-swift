// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum OrganizationRuleStatus {
    case createFailed
    case createInProgress
    case createSuccessful
    case deleteFailed
    case deleteInProgress
    case deleteSuccessful
    case updateFailed
    case updateInProgress
    case updateSuccessful
    case sdkUnknown(String)
}

extension OrganizationRuleStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OrganizationRuleStatus] {
        return [
            .createFailed,
            .createInProgress,
            .createSuccessful,
            .deleteFailed,
            .deleteInProgress,
            .deleteSuccessful,
            .updateFailed,
            .updateInProgress,
            .updateSuccessful,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createFailed: return "CREATE_FAILED"
        case .createInProgress: return "CREATE_IN_PROGRESS"
        case .createSuccessful: return "CREATE_SUCCESSFUL"
        case .deleteFailed: return "DELETE_FAILED"
        case .deleteInProgress: return "DELETE_IN_PROGRESS"
        case .deleteSuccessful: return "DELETE_SUCCESSFUL"
        case .updateFailed: return "UPDATE_FAILED"
        case .updateInProgress: return "UPDATE_IN_PROGRESS"
        case .updateSuccessful: return "UPDATE_SUCCESSFUL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OrganizationRuleStatus(rawValue: rawValue) ?? OrganizationRuleStatus.sdkUnknown(rawValue)
    }
}
