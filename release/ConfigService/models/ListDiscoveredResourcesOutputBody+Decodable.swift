// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDiscoveredResourcesOutputBody: Equatable {
    public let resourceIdentifiers: [ResourceIdentifier]?
    public let nextToken: String?
}

extension ListDiscoveredResourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case resourceIdentifiers
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdentifiersContainer = try containerValues.decodeIfPresent([ResourceIdentifier].self, forKey: .resourceIdentifiers)
        var resourceIdentifiersDecoded0:[ResourceIdentifier]? = nil
        if let resourceIdentifiersContainer = resourceIdentifiersContainer {
            resourceIdentifiersDecoded0 = [ResourceIdentifier]()
            for structure0 in resourceIdentifiersContainer {
                resourceIdentifiersDecoded0?.append(structure0)
            }
        }
        resourceIdentifiers = resourceIdentifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
