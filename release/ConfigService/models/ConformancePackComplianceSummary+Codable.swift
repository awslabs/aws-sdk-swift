// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConformancePackComplianceSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case conformancePackComplianceStatus = "ConformancePackComplianceStatus"
        case conformancePackName = "ConformancePackName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conformancePackComplianceStatus = conformancePackComplianceStatus {
            try encodeContainer.encode(conformancePackComplianceStatus.rawValue, forKey: .conformancePackComplianceStatus)
        }
        if let conformancePackName = conformancePackName {
            try encodeContainer.encode(conformancePackName, forKey: .conformancePackName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let conformancePackComplianceStatusDecoded = try containerValues.decodeIfPresent(ConformancePackComplianceType.self, forKey: .conformancePackComplianceStatus)
        conformancePackComplianceStatus = conformancePackComplianceStatusDecoded
    }
}
