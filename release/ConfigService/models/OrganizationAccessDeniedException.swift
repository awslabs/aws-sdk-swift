// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>For <code>PutConfigurationAggregator</code> API, you can see this exception for the following reasons:</p>
/// 		       <ul>
///             <li>
///                <p>No permission to call <code>EnableAWSServiceAccess</code> API</p>
///             </li>
///             <li>
///                <p>The configuration aggregator cannot be updated because your AWS Organization management account or the delegated administrator role changed.
/// 				Delete this aggregator and create a new one with the current AWS Organization.</p>
///             </li>
///             <li>
///                <p>The configuration aggregator is associated with a previous AWS Organization and AWS Config cannot aggregate data with current AWS Organization.
/// 				Delete this aggregator and create a new one with the current AWS Organization.</p>
///             </li>
///             <li>
///                <p>You are not a registered delegated administrator for AWS Config with permissions to call <code>ListDelegatedAdministrators</code> API.
/// 			Ensure that the management account registers delagated administrator for AWS Config service principle name before the delegated administrator creates an aggregator.</p>
///             </li>
///          </ul>	
/// 		       <p>For all <code>OrganizationConfigRule</code> and <code>OrganizationConformancePack</code> APIs, AWS Config throws an exception if APIs are called from member accounts. All APIs must be called from organization master account.</p>
public struct OrganizationAccessDeniedException: ClientRuntime.ServiceError, Equatable {
    public var _headers: Headers?
    public var _statusCode: HttpStatusCode?
    public var _message: String?
    public var _requestID: String?
    public var _retryable: Bool = false
    public var _isThrottling: Bool = false
    public var _type: ErrorType = .client
    /// <p>Error executing the command</p>
    public var message: String?

    public init (
        message: String? = nil
    )
    {
        self.message = message
    }
}
