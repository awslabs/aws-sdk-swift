// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutEvaluationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case evaluations = "Evaluations"
        case resultToken = "ResultToken"
        case testMode = "TestMode"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let evaluations = evaluations {
            var evaluationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .evaluations)
            for evaluations0 in evaluations {
                try evaluationsContainer.encode(evaluations0)
            }
        }
        if let resultToken = resultToken {
            try encodeContainer.encode(resultToken, forKey: .resultToken)
        }
        if testMode != false {
            try encodeContainer.encode(testMode, forKey: .testMode)
        }
    }
}
