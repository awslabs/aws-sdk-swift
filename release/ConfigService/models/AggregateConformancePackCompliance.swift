// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides the number of compliant and noncompliant rules within a conformance pack.
/// 			Also provides the compliance status of the conformance pack and the total rule count which includes compliant rules, noncompliant rules, and rules that cannot be evaluated due to insufficient data.</p>
/// 		
/// 		       <p>A conformance pack is compliant if all of the rules in a conformance packs are compliant. It is noncompliant if any of the rules are not compliant.
/// 			The compliance status of a conformance pack is INSUFFICIENT_DATA only if all rules within a conformance pack cannot be evaluated due to insufficient data.
/// 			If some of the rules in a conformance pack are compliant but the compliance status of other rules in that same conformance pack is INSUFFICIENT_DATA, the conformance pack shows compliant.</p>
public struct AggregateConformancePackCompliance: Equatable {
    /// <p>The compliance status of the conformance pack.</p>
    public let complianceType: ConformancePackComplianceType?
    /// <p>The number of compliant AWS Config Rules.</p>
    public let compliantRuleCount: Int
    /// <p>The number of noncompliant AWS Config Rules.</p>
    public let nonCompliantRuleCount: Int
    /// <p>Total number of compliant rules, noncompliant rules, and the rules that do not have any applicable resources to evaluate upon resulting in insufficient data.</p>
    public let totalRuleCount: Int

    public init (
        complianceType: ConformancePackComplianceType? = nil,
        compliantRuleCount: Int = 0,
        nonCompliantRuleCount: Int = 0,
        totalRuleCount: Int = 0
    )
    {
        self.complianceType = complianceType
        self.compliantRuleCount = compliantRuleCount
        self.nonCompliantRuleCount = nonCompliantRuleCount
        self.totalRuleCount = totalRuleCount
    }
}
