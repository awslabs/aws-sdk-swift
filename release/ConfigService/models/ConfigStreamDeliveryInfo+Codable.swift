// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigStreamDeliveryInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case lastErrorCode
        case lastErrorMessage
        case lastStatus
        case lastStatusChangeTime
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let lastErrorCode = lastErrorCode {
            try encodeContainer.encode(lastErrorCode, forKey: .lastErrorCode)
        }
        if let lastErrorMessage = lastErrorMessage {
            try encodeContainer.encode(lastErrorMessage, forKey: .lastErrorMessage)
        }
        if let lastStatus = lastStatus {
            try encodeContainer.encode(lastStatus.rawValue, forKey: .lastStatus)
        }
        if let lastStatusChangeTime = lastStatusChangeTime {
            try encodeContainer.encode(lastStatusChangeTime.timeIntervalSince1970, forKey: .lastStatusChangeTime)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastStatusDecoded = try containerValues.decodeIfPresent(DeliveryStatus.self, forKey: .lastStatus)
        lastStatus = lastStatusDecoded
        let lastErrorCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastErrorCode)
        lastErrorCode = lastErrorCodeDecoded
        let lastErrorMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastErrorMessage)
        lastErrorMessage = lastErrorMessageDecoded
        let lastStatusChangeTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastStatusChangeTime)
        lastStatusChangeTime = lastStatusChangeTimeDecoded
    }
}
