// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigRulesOutputBody: Equatable {
    public let configRules: [ConfigRule]?
    public let nextToken: String?
}

extension DescribeConfigRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configRules = "ConfigRules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configRulesContainer = try containerValues.decodeIfPresent([ConfigRule].self, forKey: .configRules)
        var configRulesDecoded0:[ConfigRule]? = nil
        if let configRulesContainer = configRulesContainer {
            configRulesDecoded0 = [ConfigRule]()
            for structure0 in configRulesContainer {
                configRulesDecoded0?.append(structure0)
            }
        }
        configRules = configRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
