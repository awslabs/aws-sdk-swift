// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePendingAggregationRequestsOutputBody: Equatable {
    public let pendingAggregationRequests: [PendingAggregationRequest]?
    public let nextToken: String?
}

extension DescribePendingAggregationRequestsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pendingAggregationRequests = "PendingAggregationRequests"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pendingAggregationRequestsContainer = try containerValues.decodeIfPresent([PendingAggregationRequest].self, forKey: .pendingAggregationRequests)
        var pendingAggregationRequestsDecoded0:[PendingAggregationRequest]? = nil
        if let pendingAggregationRequestsContainer = pendingAggregationRequestsContainer {
            pendingAggregationRequestsDecoded0 = [PendingAggregationRequest]()
            for structure0 in pendingAggregationRequestsContainer {
                pendingAggregationRequestsDecoded0?.append(structure0)
            }
        }
        pendingAggregationRequests = pendingAggregationRequestsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
