// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConformancePackComplianceDetailsOutputBody: Equatable {
    public let conformancePackName: String?
    public let conformancePackRuleEvaluationResults: [ConformancePackEvaluationResult]?
    public let nextToken: String?
}

extension GetConformancePackComplianceDetailsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conformancePackName = "ConformancePackName"
        case conformancePackRuleEvaluationResults = "ConformancePackRuleEvaluationResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conformancePackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conformancePackName)
        conformancePackName = conformancePackNameDecoded
        let conformancePackRuleEvaluationResultsContainer = try containerValues.decodeIfPresent([ConformancePackEvaluationResult].self, forKey: .conformancePackRuleEvaluationResults)
        var conformancePackRuleEvaluationResultsDecoded0:[ConformancePackEvaluationResult]? = nil
        if let conformancePackRuleEvaluationResultsContainer = conformancePackRuleEvaluationResultsContainer {
            conformancePackRuleEvaluationResultsDecoded0 = [ConformancePackEvaluationResult]()
            for structure0 in conformancePackRuleEvaluationResultsContainer {
                conformancePackRuleEvaluationResultsDecoded0?.append(structure0)
            }
        }
        conformancePackRuleEvaluationResults = conformancePackRuleEvaluationResultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
