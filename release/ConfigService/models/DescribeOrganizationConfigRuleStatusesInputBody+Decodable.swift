// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOrganizationConfigRuleStatusesInputBody: Equatable {
    public let organizationConfigRuleNames: [String]?
    public let limit: Int
    public let nextToken: String?
}

extension DescribeOrganizationConfigRuleStatusesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case limit = "Limit"
        case nextToken = "NextToken"
        case organizationConfigRuleNames = "OrganizationConfigRuleNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationConfigRuleNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .organizationConfigRuleNames)
        var organizationConfigRuleNamesDecoded0:[String]? = nil
        if let organizationConfigRuleNamesContainer = organizationConfigRuleNamesContainer {
            organizationConfigRuleNamesDecoded0 = [String]()
            for string0 in organizationConfigRuleNamesContainer {
                organizationConfigRuleNamesDecoded0?.append(string0)
            }
        }
        organizationConfigRuleNames = organizationConfigRuleNamesDecoded0
        let limitDecoded = try containerValues.decode(Int.self, forKey: .limit)
        limit = limitDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
