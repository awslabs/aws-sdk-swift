// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAggregateComplianceDetailsByConfigRuleOutputBody: Equatable {
    public let aggregateEvaluationResults: [AggregateEvaluationResult]?
    public let nextToken: String?
}

extension GetAggregateComplianceDetailsByConfigRuleOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aggregateEvaluationResults = "AggregateEvaluationResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregateEvaluationResultsContainer = try containerValues.decodeIfPresent([AggregateEvaluationResult].self, forKey: .aggregateEvaluationResults)
        var aggregateEvaluationResultsDecoded0:[AggregateEvaluationResult]? = nil
        if let aggregateEvaluationResultsContainer = aggregateEvaluationResultsContainer {
            aggregateEvaluationResultsDecoded0 = [AggregateEvaluationResult]()
            for structure0 in aggregateEvaluationResultsContainer {
                aggregateEvaluationResultsDecoded0?.append(structure0)
            }
        }
        aggregateEvaluationResults = aggregateEvaluationResultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
