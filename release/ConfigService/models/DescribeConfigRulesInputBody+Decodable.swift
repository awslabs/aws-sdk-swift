// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigRulesInputBody: Equatable {
    public let configRuleNames: [String]?
    public let nextToken: String?
}

extension DescribeConfigRulesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configRuleNames = "ConfigRuleNames"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configRuleNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .configRuleNames)
        var configRuleNamesDecoded0:[String]? = nil
        if let configRuleNamesContainer = configRuleNamesContainer {
            configRuleNamesDecoded0 = [String]()
            for string0 in configRuleNamesContainer {
                configRuleNamesDecoded0?.append(string0)
            }
        }
        configRuleNames = configRuleNamesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
