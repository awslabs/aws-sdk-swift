// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociateMacSecKeyOutputBody: Equatable {
    public let connectionId: String?
    public let macSecKeys: [MacSecKey]?
}

extension DisassociateMacSecKeyOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectionId
        case macSecKeys
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .connectionId)
        connectionId = connectionIdDecoded
        let macSecKeysContainer = try containerValues.decodeIfPresent([MacSecKey].self, forKey: .macSecKeys)
        var macSecKeysDecoded0:[MacSecKey]? = nil
        if let macSecKeysContainer = macSecKeysContainer {
            macSecKeysDecoded0 = [MacSecKey]()
            for structure0 in macSecKeysContainer {
                macSecKeysDecoded0?.append(structure0)
            }
        }
        macSecKeys = macSecKeysDecoded0
    }
}
