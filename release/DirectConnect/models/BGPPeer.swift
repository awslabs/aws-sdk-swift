// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a BGP peer.</p>
public struct BGPPeer: Equatable {
    /// <p>The address family for the BGP peer.</p>
    public let addressFamily: AddressFamily?
    /// <p>The IP address assigned to the Amazon interface.</p>
    public let amazonAddress: String?
    /// <p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p>
    public let asn: Int
    /// <p>The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.</p>
    public let authKey: String?
    /// <p>The Direct Connect endpoint on which the BGP peer terminates.</p>
    public let awsDeviceV2: String?
    /// <p>The ID of the BGP peer.</p>
    public let bgpPeerId: String?
    /// <p>The state of the BGP peer. The following are the possible values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>verifying</code>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>pending</code>: The BGP peer is created, and remains in this state until it is ready to be established.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>available</code>: The BGP peer is ready to be established.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>deleting</code>:  The BGP peer is being deleted.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>deleted</code>:  The BGP peer is deleted and cannot be established.</p>
    ///             </li>
    ///          </ul>
    public let bgpPeerState: BGPPeerState?
    /// <p>The status of the BGP peer. The following are the possible values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>up</code>: The BGP peer is established. This state does not indicate the
    ///         state of the routing function. Ensure that you are receiving routes over the BGP session.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>down</code>: The BGP peer is down.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>unknown</code>: The BGP peer status is not available.</p>
    ///             </li>
    ///          </ul>
    public let bgpStatus: BGPStatus?
    /// <p>The IP address assigned to the customer interface.</p>
    public let customerAddress: String?

    public init (
        addressFamily: AddressFamily? = nil,
        amazonAddress: String? = nil,
        asn: Int = 0,
        authKey: String? = nil,
        awsDeviceV2: String? = nil,
        bgpPeerId: String? = nil,
        bgpPeerState: BGPPeerState? = nil,
        bgpStatus: BGPStatus? = nil,
        customerAddress: String? = nil
    )
    {
        self.addressFamily = addressFamily
        self.amazonAddress = amazonAddress
        self.asn = asn
        self.authKey = authKey
        self.awsDeviceV2 = awsDeviceV2
        self.bgpPeerId = bgpPeerId
        self.bgpPeerState = bgpPeerState
        self.bgpStatus = bgpStatus
        self.customerAddress = customerAddress
    }
}
