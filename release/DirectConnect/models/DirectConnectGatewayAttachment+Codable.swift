// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DirectConnectGatewayAttachment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attachmentState
        case attachmentType
        case directConnectGatewayId
        case stateChangeError
        case virtualInterfaceId
        case virtualInterfaceOwnerAccount
        case virtualInterfaceRegion
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachmentState = attachmentState {
            try encodeContainer.encode(attachmentState.rawValue, forKey: .attachmentState)
        }
        if let attachmentType = attachmentType {
            try encodeContainer.encode(attachmentType.rawValue, forKey: .attachmentType)
        }
        if let directConnectGatewayId = directConnectGatewayId {
            try encodeContainer.encode(directConnectGatewayId, forKey: .directConnectGatewayId)
        }
        if let stateChangeError = stateChangeError {
            try encodeContainer.encode(stateChangeError, forKey: .stateChangeError)
        }
        if let virtualInterfaceId = virtualInterfaceId {
            try encodeContainer.encode(virtualInterfaceId, forKey: .virtualInterfaceId)
        }
        if let virtualInterfaceOwnerAccount = virtualInterfaceOwnerAccount {
            try encodeContainer.encode(virtualInterfaceOwnerAccount, forKey: .virtualInterfaceOwnerAccount)
        }
        if let virtualInterfaceRegion = virtualInterfaceRegion {
            try encodeContainer.encode(virtualInterfaceRegion, forKey: .virtualInterfaceRegion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let directConnectGatewayIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .directConnectGatewayId)
        directConnectGatewayId = directConnectGatewayIdDecoded
        let virtualInterfaceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .virtualInterfaceId)
        virtualInterfaceId = virtualInterfaceIdDecoded
        let virtualInterfaceRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .virtualInterfaceRegion)
        virtualInterfaceRegion = virtualInterfaceRegionDecoded
        let virtualInterfaceOwnerAccountDecoded = try containerValues.decodeIfPresent(String.self, forKey: .virtualInterfaceOwnerAccount)
        virtualInterfaceOwnerAccount = virtualInterfaceOwnerAccountDecoded
        let attachmentStateDecoded = try containerValues.decodeIfPresent(DirectConnectGatewayAttachmentState.self, forKey: .attachmentState)
        attachmentState = attachmentStateDecoded
        let attachmentTypeDecoded = try containerValues.decodeIfPresent(DirectConnectGatewayAttachmentType.self, forKey: .attachmentType)
        attachmentType = attachmentTypeDecoded
        let stateChangeErrorDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateChangeError)
        stateChangeError = stateChangeErrorDecoded
    }
}
