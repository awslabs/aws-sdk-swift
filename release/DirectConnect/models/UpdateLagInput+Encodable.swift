// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateLagInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case encryptionMode
        case lagId
        case lagName
        case minimumLinks
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let encryptionMode = encryptionMode {
            try encodeContainer.encode(encryptionMode, forKey: .encryptionMode)
        }
        if let lagId = lagId {
            try encodeContainer.encode(lagId, forKey: .lagId)
        }
        if let lagName = lagName {
            try encodeContainer.encode(lagName, forKey: .lagName)
        }
        if minimumLinks != 0 {
            try encodeContainer.encode(minimumLinks, forKey: .minimumLinks)
        }
    }
}
