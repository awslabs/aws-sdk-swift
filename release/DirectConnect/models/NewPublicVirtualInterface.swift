// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a public virtual interface.</p>
public struct NewPublicVirtualInterface: Equatable {
    /// <p>The address family for the BGP peer.</p>
    public let addressFamily: AddressFamily?
    /// <p>The IP address assigned to the Amazon interface.</p>
    public let amazonAddress: String?
    /// <p>The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.</p>
    ///          <p>The valid values are 1-2147483647.</p>
    public let asn: Int
    /// <p>The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.</p>
    public let authKey: String?
    /// <p>The IP address assigned to the customer interface.</p>
    public let customerAddress: String?
    /// <p>The routes to be advertised to the AWS network in this Region. Applies to public virtual interfaces.</p>
    public let routeFilterPrefixes: [RouteFilterPrefix]?
    /// <p>The tags associated with the public virtual interface.</p>
    public let tags: [Tag]?
    /// <p>The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).</p>
    public let virtualInterfaceName: String?
    /// <p>The ID of the VLAN.</p>
    public let vlan: Int

    public init (
        addressFamily: AddressFamily? = nil,
        amazonAddress: String? = nil,
        asn: Int = 0,
        authKey: String? = nil,
        customerAddress: String? = nil,
        routeFilterPrefixes: [RouteFilterPrefix]? = nil,
        tags: [Tag]? = nil,
        virtualInterfaceName: String? = nil,
        vlan: Int = 0
    )
    {
        self.addressFamily = addressFamily
        self.amazonAddress = amazonAddress
        self.asn = asn
        self.authKey = authKey
        self.customerAddress = customerAddress
        self.routeFilterPrefixes = routeFilterPrefixes
        self.tags = tags
        self.virtualInterfaceName = virtualInterfaceName
        self.vlan = vlan
    }
}
