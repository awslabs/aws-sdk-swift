// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLagInputBody: Equatable {
    public let lagId: String?
    public let lagName: String?
    public let minimumLinks: Int
    public let encryptionMode: String?
}

extension UpdateLagInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case encryptionMode
        case lagId
        case lagName
        case minimumLinks
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lagIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lagId)
        lagId = lagIdDecoded
        let lagNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lagName)
        lagName = lagNameDecoded
        let minimumLinksDecoded = try containerValues.decode(Int.self, forKey: .minimumLinks)
        minimumLinks = minimumLinksDecoded
        let encryptionModeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .encryptionMode)
        encryptionMode = encryptionModeDecoded
    }
}
