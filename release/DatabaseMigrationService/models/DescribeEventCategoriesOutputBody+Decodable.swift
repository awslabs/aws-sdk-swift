// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventCategoriesOutputBody: Equatable {
    public let eventCategoryGroupList: [EventCategoryGroup]?
}

extension DescribeEventCategoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eventCategoryGroupList = "EventCategoryGroupList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventCategoryGroupListContainer = try containerValues.decodeIfPresent([EventCategoryGroup].self, forKey: .eventCategoryGroupList)
        var eventCategoryGroupListDecoded0:[EventCategoryGroup]? = nil
        if let eventCategoryGroupListContainer = eventCategoryGroupListContainer {
            eventCategoryGroupListDecoded0 = [EventCategoryGroup]()
            for structure0 in eventCategoryGroupListContainer {
                eventCategoryGroupListDecoded0?.append(structure0)
            }
        }
        eventCategoryGroupList = eventCategoryGroupListDecoded0
    }
}
