// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p></p>
public struct DescribeEventsInput: Equatable {
    /// <p>The duration of the events to be listed.</p>
    public let duration: Int?
    /// <p>The end time for the events to be listed.</p>
    public let endTime: Date?
    /// <p>A list of event categories for the source type that you've chosen.</p>
    public let eventCategories: [String]?
    /// <p>Filters applied to events.</p>
    public let filters: [Filter]?
    /// <p> An optional pagination token provided by a previous request. If this parameter is
    ///          specified, the response includes only records beyond the marker, up to the value specified
    ///          by <code>MaxRecords</code>. </p>
    public let marker: String?
    /// <p> The maximum number of records to include in the response. If more records exist than
    ///          the specified <code>MaxRecords</code> value, a pagination token called a marker is included
    ///          in the response so that the remaining results can be retrieved. </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p> The identifier of an event source.</p>
    public let sourceIdentifier: String?
    /// <p>The type of AWS DMS resource that generates events.</p>
    ///          <p>Valid values: replication-instance | replication-task</p>
    public let sourceType: SourceType?
    /// <p>The start time for the events to be listed.</p>
    public let startTime: Date?

    public init (
        duration: Int? = nil,
        endTime: Date? = nil,
        eventCategories: [String]? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        sourceIdentifier: String? = nil,
        sourceType: SourceType? = nil,
        startTime: Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.eventCategories = eventCategories
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.sourceIdentifier = sourceIdentifier
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
