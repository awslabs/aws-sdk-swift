// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct CreateReplicationInstanceInput: Equatable {
    /// <p>The amount of storage (in gigabytes) to be initially allocated for the replication
    ///          instance.</p>
    public let allocatedStorage: Int?
    /// <p>A value that indicates whether minor engine upgrades are applied automatically to the
    ///          replication instance during the maintenance window. This parameter defaults to
    ///             <code>true</code>.</p>
    ///          <p>Default: <code>true</code>
    ///          </p>
    public let autoMinorVersionUpgrade: Bool?
    /// <p>The Availability Zone where the replication instance will be created. The default
    ///          value is a random, system-chosen Availability Zone in the endpoint's AWS Region, for
    ///          example: <code>us-east-1d</code>
    ///          </p>
    public let availabilityZone: String?
    /// <p>A list of custom DNS name servers supported for the replication instance to access your
    ///          on-premise source or target database. This list overrides the default name servers
    ///          supported by the replication instance. You can specify a comma-separated list of internet
    ///          addresses for up to four on-premise DNS name servers. For example:
    ///             <code>"1.1.1.1,2.2.2.2,3.3.3.3,4.4.4.4"</code>
    ///          </p>
    public let dnsNameServers: String?
    /// <p>The engine version number of the replication instance.</p>
    ///          <p>If an engine version number is not specified when a replication
    ///          instance is created, the default is the latest engine version available.</p>
    public let engineVersion: String?
    /// <p>An AWS KMS key identifier that is used to encrypt the data on the replication
    ///            instance.</p>
    ///          <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then
    ///            AWS DMS uses your default encryption key.</p>
    ///          <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a
    ///          different default encryption key for each AWS Region.</p>
    public let kmsKeyId: String?
    /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the
    ///             <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to
    ///             <code>true</code>. </p>
    public let multiAZ: Bool?
    /// <p>The weekly time range during which system maintenance can occur, in Universal
    ///          Coordinated Time (UTC).</p>
    ///          <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
    ///          </p>
    ///          <p>Default: A 30-minute window selected at random from an 8-hour block of time per AWS
    ///          Region, occurring on a random day of the week.</p>
    ///          <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p>
    ///          <p>Constraints: Minimum 30-minute window.</p>
    public let preferredMaintenanceWindow: String?
    /// <p> Specifies the accessibility options for the replication instance. A value of
    ///             <code>true</code> represents an instance with a public IP address. A value of
    ///             <code>false</code> represents an instance with a private IP address. The default value
    ///          is <code>true</code>. </p>
    public let publiclyAccessible: Bool?
    /// <p>The compute and memory capacity of the replication instance as defined for the specified
    ///          replication instance class. For example to specify the instance class dms.c4.large, set this parameter to <code>"dms.c4.large"</code>.</p>
    ///          <p>For more information on the settings and capacities for the available replication instance classes, see
    ///          <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth">
    ///             Selecting the right AWS DMS replication instance for your migration</a>.
    ///       </p>
    public let replicationInstanceClass: String?
    /// <p>The replication instance identifier. This parameter is stored as a lowercase
    ///          string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain 1-63 alphanumeric characters or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>myrepinstance</code>
    ///          </p>
    public let replicationInstanceIdentifier: String?
    /// <p>A subnet group to associate with the replication instance.</p>
    public let replicationSubnetGroupIdentifier: String?
    /// <p>A friendly name for the resource identifier at the end of the <code>EndpointArn</code>
    ///          response parameter that is returned in the created <code>Endpoint</code> object. The value
    ///          for this parameter can have up to 31 characters. It can contain only ASCII letters, digits,
    ///          and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens,
    ///          and can only begin with a letter, such as <code>Example-App-ARN1</code>. For example, this
    ///          value might result in the <code>EndpointArn</code> value
    ///          <code>arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1</code>. If you don't
    ///          specify a <code>ResourceIdentifier</code> value, AWS DMS generates a default identifier
    ///          value for the end of <code>EndpointArn</code>.</p>
    public let resourceIdentifier: String?
    /// <p>One or more tags to be assigned to the replication instance.</p>
    public let tags: [Tag]?
    /// <p> Specifies the VPC security group to be used with the replication instance. The VPC
    ///          security group must work with the VPC containing the replication instance. </p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        allocatedStorage: Int? = nil,
        autoMinorVersionUpgrade: Bool? = nil,
        availabilityZone: String? = nil,
        dnsNameServers: String? = nil,
        engineVersion: String? = nil,
        kmsKeyId: String? = nil,
        multiAZ: Bool? = nil,
        preferredMaintenanceWindow: String? = nil,
        publiclyAccessible: Bool? = nil,
        replicationInstanceClass: String? = nil,
        replicationInstanceIdentifier: String? = nil,
        replicationSubnetGroupIdentifier: String? = nil,
        resourceIdentifier: String? = nil,
        tags: [Tag]? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.availabilityZone = availabilityZone
        self.dnsNameServers = dnsNameServers
        self.engineVersion = engineVersion
        self.kmsKeyId = kmsKeyId
        self.multiAZ = multiAZ
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.publiclyAccessible = publiclyAccessible
        self.replicationInstanceClass = replicationInstanceClass
        self.replicationInstanceIdentifier = replicationInstanceIdentifier
        self.replicationSubnetGroupIdentifier = replicationSubnetGroupIdentifier
        self.resourceIdentifier = resourceIdentifier
        self.tags = tags
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
