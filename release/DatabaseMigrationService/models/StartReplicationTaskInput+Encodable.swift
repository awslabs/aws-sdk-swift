// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartReplicationTaskInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cdcStartPosition = "CdcStartPosition"
        case cdcStartTime = "CdcStartTime"
        case cdcStopPosition = "CdcStopPosition"
        case replicationTaskArn = "ReplicationTaskArn"
        case startReplicationTaskType = "StartReplicationTaskType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cdcStartPosition = cdcStartPosition {
            try encodeContainer.encode(cdcStartPosition, forKey: .cdcStartPosition)
        }
        if let cdcStartTime = cdcStartTime {
            try encodeContainer.encode(cdcStartTime.timeIntervalSince1970, forKey: .cdcStartTime)
        }
        if let cdcStopPosition = cdcStopPosition {
            try encodeContainer.encode(cdcStopPosition, forKey: .cdcStopPosition)
        }
        if let replicationTaskArn = replicationTaskArn {
            try encodeContainer.encode(replicationTaskArn, forKey: .replicationTaskArn)
        }
        if let startReplicationTaskType = startReplicationTaskType {
            try encodeContainer.encode(startReplicationTaskType.rawValue, forKey: .startReplicationTaskType)
        }
    }
}
