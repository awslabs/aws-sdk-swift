// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventsOutputBody: Equatable {
    public let marker: String?
    public let events: [Event]?
}

extension DescribeEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case events = "Events"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let eventsContainer = try containerValues.decodeIfPresent([Event].self, forKey: .events)
        var eventsDecoded0:[Event]? = nil
        if let eventsContainer = eventsContainer {
            eventsDecoded0 = [Event]()
            for structure0 in eventsContainer {
                eventsDecoded0?.append(structure0)
            }
        }
        events = eventsDecoded0
    }
}
