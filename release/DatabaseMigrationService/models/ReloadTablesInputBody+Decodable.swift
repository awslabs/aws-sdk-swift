// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ReloadTablesInputBody: Equatable {
    public let replicationTaskArn: String?
    public let tablesToReload: [TableToReload]?
    public let reloadOption: ReloadOptionValue?
}

extension ReloadTablesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case reloadOption = "ReloadOption"
        case replicationTaskArn = "ReplicationTaskArn"
        case tablesToReload = "TablesToReload"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationTaskArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationTaskArn)
        replicationTaskArn = replicationTaskArnDecoded
        let tablesToReloadContainer = try containerValues.decodeIfPresent([TableToReload].self, forKey: .tablesToReload)
        var tablesToReloadDecoded0:[TableToReload]? = nil
        if let tablesToReloadContainer = tablesToReloadContainer {
            tablesToReloadDecoded0 = [TableToReload]()
            for structure0 in tablesToReloadContainer {
                tablesToReloadDecoded0?.append(structure0)
            }
        }
        tablesToReload = tablesToReloadDecoded0
        let reloadOptionDecoded = try containerValues.decodeIfPresent(ReloadOptionValue.self, forKey: .reloadOption)
        reloadOption = reloadOptionDecoded
    }
}
