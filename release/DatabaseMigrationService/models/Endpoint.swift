// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes an endpoint of a database instance in response to operations such as the
///          following:</p>
///          <ul>
///             <li>
///                <p>
///                   <code>CreateEndpoint</code>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <code>DescribeEndpoint</code>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <code>DescribeEndpointTypes</code>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <code>ModifyEndpoint</code>
///                </p>
///             </li>
///          </ul>
public struct Endpoint: Equatable {
    /// <p>The Amazon Resource Name (ARN) used for SSL connection to the endpoint.</p>
    public let certificateArn: String?
    /// <p>The name of the database at the endpoint.</p>
    public let databaseName: String?
    /// <p>The settings in JSON format for the DMS transfer type of source endpoint. </p>
    ///          <p>Possible settings include the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>ServiceAccessRoleArn</code> - The IAM role that has permission to access the
    ///                Amazon S3 bucket.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>BucketName</code> - The name of the S3 bucket to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CompressionType</code> - An optional parameter to use GZIP to compress the
    ///                target files. To use GZIP, set this value to <code>NONE</code> (the default). To keep
    ///                the files uncompressed, don't use this value.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Shorthand syntax for these settings is as follows:
    ///             <code>ServiceAccessRoleArn=string,BucketName=string,CompressionType=string</code>
    ///          </p>
    ///          <p>JSON syntax for these settings is as follows: <code>{ "ServiceAccessRoleArn":
    ///             "string", "BucketName": "string", "CompressionType": "none"|"gzip" } </code>
    ///          </p>
    public let dmsTransferSettings: DmsTransferSettings?
    /// <p>Provides information that defines a DocumentDB endpoint.</p>
    public let docDbSettings: DocDbSettings?
    /// <p>The settings for the DynamoDB target endpoint. For more information, see the
    ///             <code>DynamoDBSettings</code> structure.</p>
    public let dynamoDbSettings: DynamoDbSettings?
    /// <p>The settings for the Elasticsearch source endpoint. For more information, see the
    ///             <code>ElasticsearchSettings</code> structure.</p>
    public let elasticsearchSettings: ElasticsearchSettings?
    /// <p>The Amazon Resource Name (ARN) string that uniquely identifies the endpoint.</p>
    public let endpointArn: String?
    /// <p>The database endpoint identifier. Identifiers must begin with a letter and must contain
    ///          only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two
    ///          consecutive hyphens.</p>
    public let endpointIdentifier: String?
    /// <p>The type of endpoint.  Valid values are <code>source</code> and <code>target</code>.</p>
    public let endpointType: ReplicationEndpointTypeValue?
    /// <p>The expanded name for the engine name. For example, if the <code>EngineName</code>
    ///          parameter is "aurora," this value would be "Amazon Aurora MySQL."</p>
    public let engineDisplayName: String?
    /// <p>The database engine name. Valid values, depending on the EndpointType, include
    ///             <code>"mysql"</code>, <code>"oracle"</code>, <code>"postgres"</code>,
    ///             <code>"mariadb"</code>, <code>"aurora"</code>, <code>"aurora-postgresql"</code>,
    ///             <code>"redshift"</code>, <code>"s3"</code>, <code>"db2"</code>, <code>"azuredb"</code>,
    ///             <code>"sybase"</code>, <code>"dynamodb"</code>, <code>"mongodb"</code>,
    ///             <code>"kinesis"</code>, <code>"kafka"</code>, <code>"elasticsearch"</code>,
    ///             <code>"documentdb"</code>, <code>"sqlserver"</code>, and <code>"neptune"</code>.</p>
    public let engineName: String?
    /// <p> Value returned by a call to CreateEndpoint that can be used for cross-account
    ///          validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a
    ///          cross-account. </p>
    public let externalId: String?
    /// <p>The external table definition.</p>
    public let externalTableDefinition: String?
    /// <p>Additional connection attributes used to connect to the endpoint.</p>
    public let extraConnectionAttributes: String?
    /// <p>The settings for the IBM Db2 LUW source endpoint. For more information, see the
    ///             <code>IBMDb2Settings</code> structure.
    ///       </p>
    public let iBMDb2Settings: IBMDb2Settings?
    /// <p>The settings for the Apache Kafka target endpoint. For more information, see the
    ///          <code>KafkaSettings</code> structure.</p>
    public let kafkaSettings: KafkaSettings?
    /// <p>The settings for the Amazon Kinesis target endpoint. For more information, see the
    ///             <code>KinesisSettings</code> structure.</p>
    public let kinesisSettings: KinesisSettings?
    /// <p>An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.</p>
    ///          <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then
    ///            AWS DMS uses your default encryption key.</p>
    ///          <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a
    ///          different default encryption key for each AWS Region.</p>
    public let kmsKeyId: String?
    /// <p>The settings for the Microsoft SQL Server source and target endpoint. For more
    ///          information, see the <code>MicrosoftSQLServerSettings</code> structure.</p>
    public let microsoftSQLServerSettings: MicrosoftSQLServerSettings?
    /// <p>The settings for the MongoDB source endpoint. For more information, see the
    ///             <code>MongoDbSettings</code> structure.</p>
    public let mongoDbSettings: MongoDbSettings?
    /// <p>The settings for the MySQL source and target endpoint. For more information, see the
    ///             <code>MySQLSettings</code> structure.</p>
    public let mySQLSettings: MySQLSettings?
    /// <p>The settings for the Amazon Neptune target endpoint. For more information, see the
    ///          <code>NeptuneSettings</code> structure.</p>
    public let neptuneSettings: NeptuneSettings?
    /// <p>The settings for the Oracle source and target endpoint. For more information, see the
    ///             <code>OracleSettings</code> structure.</p>
    public let oracleSettings: OracleSettings?
    /// <p>The port value used to access the endpoint.</p>
    public let port: Int?
    /// <p>The settings for the PostgreSQL source and target endpoint. For more information, see
    ///          the <code>PostgreSQLSettings</code> structure.</p>
    public let postgreSQLSettings: PostgreSQLSettings?
    /// <p>Settings for the Amazon Redshift endpoint.</p>
    public let redshiftSettings: RedshiftSettings?
    /// <p>The settings for the S3 target endpoint. For more information, see the
    ///             <code>S3Settings</code> structure.</p>
    public let s3Settings: S3Settings?
    /// <p>The name of the server at the endpoint.</p>
    public let serverName: String?
    /// <p>The Amazon Resource Name (ARN) used by the service access IAM role.</p>
    public let serviceAccessRoleArn: String?
    /// <p>The SSL mode used to connect to the endpoint. The default value is <code>none</code>.</p>
    public let sslMode: DmsSslModeValue?
    /// <p>The status of the endpoint.</p>
    public let status: String?
    /// <p>The settings for the SAP ASE source and target endpoint. For more information, see the
    ///             <code>SybaseSettings</code> structure.</p>
    public let sybaseSettings: SybaseSettings?
    /// <p>The user name used to connect to the endpoint.</p>
    public let username: String?

    public init (
        certificateArn: String? = nil,
        databaseName: String? = nil,
        dmsTransferSettings: DmsTransferSettings? = nil,
        docDbSettings: DocDbSettings? = nil,
        dynamoDbSettings: DynamoDbSettings? = nil,
        elasticsearchSettings: ElasticsearchSettings? = nil,
        endpointArn: String? = nil,
        endpointIdentifier: String? = nil,
        endpointType: ReplicationEndpointTypeValue? = nil,
        engineDisplayName: String? = nil,
        engineName: String? = nil,
        externalId: String? = nil,
        externalTableDefinition: String? = nil,
        extraConnectionAttributes: String? = nil,
        iBMDb2Settings: IBMDb2Settings? = nil,
        kafkaSettings: KafkaSettings? = nil,
        kinesisSettings: KinesisSettings? = nil,
        kmsKeyId: String? = nil,
        microsoftSQLServerSettings: MicrosoftSQLServerSettings? = nil,
        mongoDbSettings: MongoDbSettings? = nil,
        mySQLSettings: MySQLSettings? = nil,
        neptuneSettings: NeptuneSettings? = nil,
        oracleSettings: OracleSettings? = nil,
        port: Int? = nil,
        postgreSQLSettings: PostgreSQLSettings? = nil,
        redshiftSettings: RedshiftSettings? = nil,
        s3Settings: S3Settings? = nil,
        serverName: String? = nil,
        serviceAccessRoleArn: String? = nil,
        sslMode: DmsSslModeValue? = nil,
        status: String? = nil,
        sybaseSettings: SybaseSettings? = nil,
        username: String? = nil
    )
    {
        self.certificateArn = certificateArn
        self.databaseName = databaseName
        self.dmsTransferSettings = dmsTransferSettings
        self.docDbSettings = docDbSettings
        self.dynamoDbSettings = dynamoDbSettings
        self.elasticsearchSettings = elasticsearchSettings
        self.endpointArn = endpointArn
        self.endpointIdentifier = endpointIdentifier
        self.endpointType = endpointType
        self.engineDisplayName = engineDisplayName
        self.engineName = engineName
        self.externalId = externalId
        self.externalTableDefinition = externalTableDefinition
        self.extraConnectionAttributes = extraConnectionAttributes
        self.iBMDb2Settings = iBMDb2Settings
        self.kafkaSettings = kafkaSettings
        self.kinesisSettings = kinesisSettings
        self.kmsKeyId = kmsKeyId
        self.microsoftSQLServerSettings = microsoftSQLServerSettings
        self.mongoDbSettings = mongoDbSettings
        self.mySQLSettings = mySQLSettings
        self.neptuneSettings = neptuneSettings
        self.oracleSettings = oracleSettings
        self.port = port
        self.postgreSQLSettings = postgreSQLSettings
        self.redshiftSettings = redshiftSettings
        self.s3Settings = s3Settings
        self.serverName = serverName
        self.serviceAccessRoleArn = serviceAccessRoleArn
        self.sslMode = sslMode
        self.status = status
        self.sybaseSettings = sybaseSettings
        self.username = username
    }
}
