// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ApplyPendingMaintenanceActionInputBody: Equatable {
    public let replicationInstanceArn: String?
    public let applyAction: String?
    public let optInType: String?
}

extension ApplyPendingMaintenanceActionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applyAction = "ApplyAction"
        case optInType = "OptInType"
        case replicationInstanceArn = "ReplicationInstanceArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationInstanceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationInstanceArn)
        replicationInstanceArn = replicationInstanceArnDecoded
        let applyActionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applyAction)
        applyAction = applyActionDecoded
        let optInTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .optInType)
        optInType = optInTypeDecoded
    }
}
