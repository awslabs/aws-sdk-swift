// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationTaskAssessmentResultsOutputBody: Equatable {
    public let marker: String?
    public let bucketName: String?
    public let replicationTaskAssessmentResults: [ReplicationTaskAssessmentResult]?
}

extension DescribeReplicationTaskAssessmentResultsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bucketName = "BucketName"
        case marker = "Marker"
        case replicationTaskAssessmentResults = "ReplicationTaskAssessmentResults"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let bucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketName)
        bucketName = bucketNameDecoded
        let replicationTaskAssessmentResultsContainer = try containerValues.decodeIfPresent([ReplicationTaskAssessmentResult].self, forKey: .replicationTaskAssessmentResults)
        var replicationTaskAssessmentResultsDecoded0:[ReplicationTaskAssessmentResult]? = nil
        if let replicationTaskAssessmentResultsContainer = replicationTaskAssessmentResultsContainer {
            replicationTaskAssessmentResultsDecoded0 = [ReplicationTaskAssessmentResult]()
            for structure0 in replicationTaskAssessmentResultsContainer {
                replicationTaskAssessmentResultsDecoded0?.append(structure0)
            }
        }
        replicationTaskAssessmentResults = replicationTaskAssessmentResultsDecoded0
    }
}
