// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MigrationTypeValue {
    case cdc
    case fullLoad
    case fullLoadAndCdc
    case sdkUnknown(String)
}

extension MigrationTypeValue : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MigrationTypeValue] {
        return [
            .cdc,
            .fullLoad,
            .fullLoadAndCdc,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cdc: return "cdc"
        case .fullLoad: return "full-load"
        case .fullLoadAndCdc: return "full-load-and-cdc"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MigrationTypeValue(rawValue: rawValue) ?? MigrationTypeValue.sdkUnknown(rawValue)
    }
}
