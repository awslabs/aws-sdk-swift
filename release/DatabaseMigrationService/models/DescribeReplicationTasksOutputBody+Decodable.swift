// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationTasksOutputBody: Equatable {
    public let marker: String?
    public let replicationTasks: [ReplicationTask]?
}

extension DescribeReplicationTasksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationTasks = "ReplicationTasks"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let replicationTasksContainer = try containerValues.decodeIfPresent([ReplicationTask].self, forKey: .replicationTasks)
        var replicationTasksDecoded0:[ReplicationTask]? = nil
        if let replicationTasksContainer = replicationTasksContainer {
            replicationTasksDecoded0 = [ReplicationTask]()
            for structure0 in replicationTasksContainer {
                replicationTasksDecoded0?.append(structure0)
            }
        }
        replicationTasks = replicationTasksDecoded0
    }
}
