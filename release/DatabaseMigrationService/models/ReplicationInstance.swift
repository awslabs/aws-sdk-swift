// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information that defines a replication instance.</p>
public struct ReplicationInstance: Equatable {
    /// <p>The amount of storage (in gigabytes) that is allocated for the replication
    ///          instance.</p>
    public let allocatedStorage: Int
    /// <p>Boolean value indicating if minor version upgrades will be automatically applied to the
    ///          instance.</p>
    public let autoMinorVersionUpgrade: Bool
    /// <p>The Availability Zone for the instance.</p>
    public let availabilityZone: String?
    /// <p>The DNS name servers supported for the replication instance to access your on-premise source or target database.</p>
    public let dnsNameServers: String?
    /// <p>The engine version number of the replication instance.</p>
    ///          <p>If an engine version number is not specified when a replication
    ///          instance is created, the default is the latest engine version available.</p>
    ///          <p>When modifying a major engine version of an instance, also set
    ///          <code>AllowMajorVersionUpgrade</code> to <code>true</code>.</p>
    public let engineVersion: String?
    /// <p> The expiration date of the free replication instance that is part of the Free DMS
    ///          program. </p>
    public let freeUntil: Date?
    /// <p>The time the replication instance was created.</p>
    public let instanceCreateTime: Date?
    /// <p>An AWS KMS key identifier that is used to encrypt the data on the replication
    ///            instance.</p>
    ///          <p>If you don't specify a value for the <code>KmsKeyId</code> parameter, then
    ///            AWS DMS uses your default encryption key.</p>
    ///          <p>AWS KMS creates the default encryption key for your AWS account. Your AWS account has a
    ///          different default encryption key for each AWS Region.</p>
    public let kmsKeyId: String?
    /// <p> Specifies whether the replication instance is a Multi-AZ deployment. You can't set the
    ///             <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to
    ///             <code>true</code>. </p>
    public let multiAZ: Bool
    /// <p>The pending modification values.</p>
    public let pendingModifiedValues: ReplicationPendingModifiedValues?
    /// <p>The maintenance window times for the replication instance. Any pending upgrades to the
    ///          replication instance are performed during this time.</p>
    public let preferredMaintenanceWindow: String?
    /// <p> Specifies the accessibility options for the replication instance. A value of
    ///             <code>true</code> represents an instance with a public IP address. A value of
    ///             <code>false</code> represents an instance with a private IP address. The default value
    ///          is <code>true</code>. </p>
    public let publiclyAccessible: Bool
    /// <p>The Amazon Resource Name (ARN) of the replication instance.</p>
    public let replicationInstanceArn: String?
    /// <p>The compute and memory capacity of the replication instance as defined for the specified
    ///          replication instance class. It is a required parameter, although a defualt value is
    ///          pre-selected in the DMS console.</p>
    ///          <p>For more information on the settings and capacities for the available replication instance classes, see
    ///          <a href="https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth">
    ///             Selecting the right AWS DMS replication instance for your migration</a>.
    ///       </p>
    public let replicationInstanceClass: String?
    /// <p>The replication instance identifier is a required parameter. This parameter is stored as
    ///          a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain 1-63 alphanumeric characters or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>myrepinstance</code>
    ///          </p>
    public let replicationInstanceIdentifier: String?
    /// <p>The private IP address of the replication instance.</p>
    @available(*, deprecated)
    public let replicationInstancePrivateIpAddress: String?
    /// <p>One or more private IP addresses for the replication instance.</p>
    public let replicationInstancePrivateIpAddresses: [String]?
    /// <p>The public IP address of the replication instance.</p>
    @available(*, deprecated)
    public let replicationInstancePublicIpAddress: String?
    /// <p>One or more public IP addresses for the replication instance.</p>
    public let replicationInstancePublicIpAddresses: [String]?
    /// <p>The status of the replication instance. The possible return values include:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>"available"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"creating"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"deleted"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"deleting"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"failed"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"modifying"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"upgrading"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"rebooting"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"resetting-master-credentials"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"storage-full"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"incompatible-credentials"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"incompatible-network"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"maintenance"</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let replicationInstanceStatus: String?
    /// <p>The subnet group for the replication instance.</p>
    public let replicationSubnetGroup: ReplicationSubnetGroup?
    /// <p>The Availability Zone of the standby replication instance in a Multi-AZ
    ///          deployment.</p>
    public let secondaryAvailabilityZone: String?
    /// <p>The VPC security group for the instance.</p>
    public let vpcSecurityGroups: [VpcSecurityGroupMembership]?

    public init (
        allocatedStorage: Int = 0,
        autoMinorVersionUpgrade: Bool = false,
        availabilityZone: String? = nil,
        dnsNameServers: String? = nil,
        engineVersion: String? = nil,
        freeUntil: Date? = nil,
        instanceCreateTime: Date? = nil,
        kmsKeyId: String? = nil,
        multiAZ: Bool = false,
        pendingModifiedValues: ReplicationPendingModifiedValues? = nil,
        preferredMaintenanceWindow: String? = nil,
        publiclyAccessible: Bool = false,
        replicationInstanceArn: String? = nil,
        replicationInstanceClass: String? = nil,
        replicationInstanceIdentifier: String? = nil,
        replicationInstancePrivateIpAddress: String? = nil,
        replicationInstancePrivateIpAddresses: [String]? = nil,
        replicationInstancePublicIpAddress: String? = nil,
        replicationInstancePublicIpAddresses: [String]? = nil,
        replicationInstanceStatus: String? = nil,
        replicationSubnetGroup: ReplicationSubnetGroup? = nil,
        secondaryAvailabilityZone: String? = nil,
        vpcSecurityGroups: [VpcSecurityGroupMembership]? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.availabilityZone = availabilityZone
        self.dnsNameServers = dnsNameServers
        self.engineVersion = engineVersion
        self.freeUntil = freeUntil
        self.instanceCreateTime = instanceCreateTime
        self.kmsKeyId = kmsKeyId
        self.multiAZ = multiAZ
        self.pendingModifiedValues = pendingModifiedValues
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.publiclyAccessible = publiclyAccessible
        self.replicationInstanceArn = replicationInstanceArn
        self.replicationInstanceClass = replicationInstanceClass
        self.replicationInstanceIdentifier = replicationInstanceIdentifier
        self.replicationInstancePrivateIpAddress = replicationInstancePrivateIpAddress
        self.replicationInstancePrivateIpAddresses = replicationInstancePrivateIpAddresses
        self.replicationInstancePublicIpAddress = replicationInstancePublicIpAddress
        self.replicationInstancePublicIpAddresses = replicationInstancePublicIpAddresses
        self.replicationInstanceStatus = replicationInstanceStatus
        self.replicationSubnetGroup = replicationSubnetGroup
        self.secondaryAvailabilityZone = secondaryAvailabilityZone
        self.vpcSecurityGroups = vpcSecurityGroups
    }
}
