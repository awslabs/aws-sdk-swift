// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyReplicationTaskInputBody: Equatable {
    public let replicationTaskArn: String?
    public let replicationTaskIdentifier: String?
    public let migrationType: MigrationTypeValue?
    public let tableMappings: String?
    public let replicationTaskSettings: String?
    public let cdcStartTime: Date?
    public let cdcStartPosition: String?
    public let cdcStopPosition: String?
    public let taskData: String?
}

extension ModifyReplicationTaskInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cdcStartPosition = "CdcStartPosition"
        case cdcStartTime = "CdcStartTime"
        case cdcStopPosition = "CdcStopPosition"
        case migrationType = "MigrationType"
        case replicationTaskArn = "ReplicationTaskArn"
        case replicationTaskIdentifier = "ReplicationTaskIdentifier"
        case replicationTaskSettings = "ReplicationTaskSettings"
        case tableMappings = "TableMappings"
        case taskData = "TaskData"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationTaskArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationTaskArn)
        replicationTaskArn = replicationTaskArnDecoded
        let replicationTaskIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationTaskIdentifier)
        replicationTaskIdentifier = replicationTaskIdentifierDecoded
        let migrationTypeDecoded = try containerValues.decodeIfPresent(MigrationTypeValue.self, forKey: .migrationType)
        migrationType = migrationTypeDecoded
        let tableMappingsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableMappings)
        tableMappings = tableMappingsDecoded
        let replicationTaskSettingsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationTaskSettings)
        replicationTaskSettings = replicationTaskSettingsDecoded
        let cdcStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .cdcStartTime)
        cdcStartTime = cdcStartTimeDecoded
        let cdcStartPositionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cdcStartPosition)
        cdcStartPosition = cdcStartPositionDecoded
        let cdcStopPositionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cdcStopPosition)
        cdcStopPosition = cdcStopPositionDecoded
        let taskDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskData)
        taskData = taskDataDecoded
    }
}
