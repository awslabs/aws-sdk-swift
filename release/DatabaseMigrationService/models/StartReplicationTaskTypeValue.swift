// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum StartReplicationTaskTypeValue {
    case reloadTarget
    case resumeProcessing
    case startReplication
    case sdkUnknown(String)
}

extension StartReplicationTaskTypeValue : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [StartReplicationTaskTypeValue] {
        return [
            .reloadTarget,
            .resumeProcessing,
            .startReplication,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .reloadTarget: return "reload-target"
        case .resumeProcessing: return "resume-processing"
        case .startReplication: return "start-replication"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = StartReplicationTaskTypeValue(rawValue: rawValue) ?? StartReplicationTaskTypeValue.sdkUnknown(rawValue)
    }
}
