// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationInstancesOutputBody: Equatable {
    public let marker: String?
    public let replicationInstances: [ReplicationInstance]?
}

extension DescribeReplicationInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationInstances = "ReplicationInstances"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let replicationInstancesContainer = try containerValues.decodeIfPresent([ReplicationInstance].self, forKey: .replicationInstances)
        var replicationInstancesDecoded0:[ReplicationInstance]? = nil
        if let replicationInstancesContainer = replicationInstancesContainer {
            replicationInstancesDecoded0 = [ReplicationInstance]()
            for structure0 in replicationInstancesContainer {
                replicationInstancesDecoded0?.append(structure0)
            }
        }
        replicationInstances = replicationInstancesDecoded0
    }
}
