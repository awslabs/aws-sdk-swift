// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventCategoriesInputBody: Equatable {
    public let sourceType: String?
    public let filters: [Filter]?
}

extension DescribeEventCategoriesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters = "Filters"
        case sourceType = "SourceType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceType)
        sourceType = sourceTypeDecoded
        let filtersContainer = try containerValues.decodeIfPresent([Filter].self, forKey: .filters)
        var filtersDecoded0:[Filter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [Filter]()
            for structure0 in filtersContainer {
                filtersDecoded0?.append(structure0)
            }
        }
        filters = filtersDecoded0
    }
}
