// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information that defines a SAP ASE endpoint.</p>
public struct SybaseSettings: Equatable {
    /// <p>Database name for the endpoint.</p>
    public let databaseName: String?
    /// <p>Endpoint connection password.</p>
    public let password: String?
    /// <p>Endpoint TCP port.</p>
    public let port: Int?
    /// <p>The full Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the
    ///          trusted entity and grants the required permissions to access the value in
    ///             <code>SecretsManagerSecret</code>. <code>SecretsManagerSecret</code> has the value of the AWS Secrets
    ///          Manager secret that allows access to the SAP ASE endpoint.</p>
    ///          <note>
    ///             <p>You can specify one of two sets of values for these permissions. You can specify the
    ///             values for this setting and <code>SecretsManagerSecretId</code>. Or you can specify
    ///             clear-text values for <code>UserName</code>, <code>Password</code>,
    ///                <code>ServerName</code>, and <code>Port</code>. You can't specify both. For more
    ///             information on creating this <code>SecretsManagerSecret</code> and the
    ///                <code>SecretsManagerAccessRoleArn</code> and <code>SecretsManagerSecretId</code>
    ///             required to access it, see <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager">Using secrets to access AWS Database Migration Service
    ///                resources</a> in the <i>AWS Database Migration Service User
    ///                Guide</i>.</p>
    ///          </note>
    public let secretsManagerAccessRoleArn: String?
    /// <p>The full ARN, partial ARN, or friendly name of the <code>SecretsManagerSecret</code> that contains the SAP SAE endpoint connection details.</p>
    public let secretsManagerSecretId: String?
    /// <p>Fully qualified domain name of the endpoint.</p>
    public let serverName: String?
    /// <p>Endpoint connection user name.</p>
    public let username: String?

    public init (
        databaseName: String? = nil,
        password: String? = nil,
        port: Int? = nil,
        secretsManagerAccessRoleArn: String? = nil,
        secretsManagerSecretId: String? = nil,
        serverName: String? = nil,
        username: String? = nil
    )
    {
        self.databaseName = databaseName
        self.password = password
        self.port = port
        self.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn
        self.secretsManagerSecretId = secretsManagerSecretId
        self.serverName = serverName
        self.username = username
    }
}
