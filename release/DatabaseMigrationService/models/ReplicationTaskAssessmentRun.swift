// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information that describes a premigration assessment run that you have started
///          using the <code>StartReplicationTaskAssessmentRun</code> operation.</p>
///          <p>Some of the information appears based on other operations that can return the
///             <code>ReplicationTaskAssessmentRun</code> object.</p>
public struct ReplicationTaskAssessmentRun: Equatable {
    /// <p>Indication of the completion progress for the individual assessments specified to
    ///          run.</p>
    public let assessmentProgress: ReplicationTaskAssessmentRunProgress?
    /// <p>Unique name of the assessment run.</p>
    public let assessmentRunName: String?
    /// <p>Last message generated by an individual assessment failure.</p>
    public let lastFailureMessage: String?
    /// <p>ARN of the migration task associated with this premigration
    ///          assessment run.</p>
    public let replicationTaskArn: String?
    /// <p>Amazon Resource Name (ARN) of this assessment run.</p>
    public let replicationTaskAssessmentRunArn: String?
    /// <p>Date on which the assessment run was created using the
    ///             <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    public let replicationTaskAssessmentRunCreationDate: Date?
    /// <p>Encryption mode used to encrypt the assessment run results.</p>
    public let resultEncryptionMode: String?
    /// <p>ARN of the AWS KMS encryption key used to encrypt the assessment run results.</p>
    public let resultKmsKeyArn: String?
    /// <p>Amazon S3 bucket where AWS DMS stores the results of this assessment run.</p>
    public let resultLocationBucket: String?
    /// <p>Folder in an Amazon S3 bucket where AWS DMS stores the results of this assessment
    ///          run.</p>
    public let resultLocationFolder: String?
    /// <p>ARN of the service role used to start the assessment run using the
    ///             <code>StartReplicationTaskAssessmentRun</code> operation.</p>
    public let serviceAccessRoleArn: String?
    /// <p>Assessment run status. </p>
    ///          <p>This status can have one of the following values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>"cancelling"</code> – The assessment run was canceled by the
    ///                   <code>CancelReplicationTaskAssessmentRun</code> operation.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"deleting"</code> – The assessment run was deleted by the
    ///                   <code>DeleteReplicationTaskAssessmentRun</code> operation.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"failed"</code> – At least one individual assessment completed with a
    ///                   <code>failed</code> status.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"error-provisioning"</code> – An internal error occurred while
    ///                resources were provisioned (during <code>provisioning</code> status).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"error-executing"</code> – An internal error occurred while
    ///                individual assessments ran (during <code>running</code> status).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"invalid state"</code> – The assessment run is in an unknown state.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"passed"</code> – All individual assessments have completed, and none
    ///                has a <code>failed</code> status.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"provisioning"</code> – Resources required to run individual
    ///                assessments are being provisioned.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"running"</code> – Individual assessments are being run.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"starting"</code> – The assessment run is starting, but resources are not yet
    ///                being provisioned for individual assessments.</p>
    ///             </li>
    ///          </ul>
    public let status: String?

    public init (
        assessmentProgress: ReplicationTaskAssessmentRunProgress? = nil,
        assessmentRunName: String? = nil,
        lastFailureMessage: String? = nil,
        replicationTaskArn: String? = nil,
        replicationTaskAssessmentRunArn: String? = nil,
        replicationTaskAssessmentRunCreationDate: Date? = nil,
        resultEncryptionMode: String? = nil,
        resultKmsKeyArn: String? = nil,
        resultLocationBucket: String? = nil,
        resultLocationFolder: String? = nil,
        serviceAccessRoleArn: String? = nil,
        status: String? = nil
    )
    {
        self.assessmentProgress = assessmentProgress
        self.assessmentRunName = assessmentRunName
        self.lastFailureMessage = lastFailureMessage
        self.replicationTaskArn = replicationTaskArn
        self.replicationTaskAssessmentRunArn = replicationTaskAssessmentRunArn
        self.replicationTaskAssessmentRunCreationDate = replicationTaskAssessmentRunCreationDate
        self.resultEncryptionMode = resultEncryptionMode
        self.resultKmsKeyArn = resultKmsKeyArn
        self.resultLocationBucket = resultLocationBucket
        self.resultLocationFolder = resultLocationFolder
        self.serviceAccessRoleArn = serviceAccessRoleArn
        self.status = status
    }
}
