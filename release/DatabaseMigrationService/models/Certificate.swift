// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The SSL certificate that can be used to encrypt connections between the endpoints and
///          the replication instance.</p>
public struct Certificate: Equatable {
    /// <p>The Amazon Resource Name (ARN) for the certificate.</p>
    public let certificateArn: String?
    /// <p>The date that the certificate was created.</p>
    public let certificateCreationDate: Date?
    /// <p>A customer-assigned name for the certificate. Identifiers must begin with a letter and
    ///          must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or
    ///          contain two consecutive hyphens.</p>
    public let certificateIdentifier: String?
    /// <p>The owner of the certificate.</p>
    public let certificateOwner: String?
    /// <p>The contents of a <code>.pem</code> file, which contains an X.509 certificate.</p>
    public let certificatePem: String?
    /// <p>The location of an imported Oracle Wallet certificate for use with SSL.</p>
    public let certificateWallet: Data?
    /// <p>The key length of the cryptographic algorithm being used.</p>
    public let keyLength: Int?
    /// <p>The signing algorithm for the certificate.</p>
    public let signingAlgorithm: String?
    /// <p>The beginning date that the certificate is valid.</p>
    public let validFromDate: Date?
    /// <p>The final date that the certificate is valid.</p>
    public let validToDate: Date?

    public init (
        certificateArn: String? = nil,
        certificateCreationDate: Date? = nil,
        certificateIdentifier: String? = nil,
        certificateOwner: String? = nil,
        certificatePem: String? = nil,
        certificateWallet: Data? = nil,
        keyLength: Int? = nil,
        signingAlgorithm: String? = nil,
        validFromDate: Date? = nil,
        validToDate: Date? = nil
    )
    {
        self.certificateArn = certificateArn
        self.certificateCreationDate = certificateCreationDate
        self.certificateIdentifier = certificateIdentifier
        self.certificateOwner = certificateOwner
        self.certificatePem = certificatePem
        self.certificateWallet = certificateWallet
        self.keyLength = keyLength
        self.signingAlgorithm = signingAlgorithm
        self.validFromDate = validFromDate
        self.validToDate = validToDate
    }
}
