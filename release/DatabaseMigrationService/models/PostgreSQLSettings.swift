// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information that defines a PostgreSQL endpoint.</p>
public struct PostgreSQLSettings: Equatable {
    /// <p>For use with change data capture (CDC) only, this attribute
    ///          has AWS DMS bypass foreign keys and user triggers to
    ///          reduce the time it takes to bulk load data.</p>
    ///          <p>Example: <code>afterConnectScript=SET
    ///          session_replication_role='replica'</code>
    ///          </p>
    public let afterConnectScript: String?
    /// <p>To capture DDL events, AWS DMS creates various artifacts in
    ///          the PostgreSQL database when the task starts. You can later
    ///          remove these artifacts.</p>
    ///          <p>If this value is set to <code>N</code>, you don't have to create tables or
    ///          triggers on the source database.</p>
    public let captureDdls: Bool?
    /// <p>Database name for the endpoint.</p>
    public let databaseName: String?
    /// <p>The schema in which the operational DDL database artifacts
    ///          are created.</p>
    ///          <p>Example: <code>ddlArtifactsSchema=xyzddlschema;</code>
    ///          </p>
    public let ddlArtifactsSchema: String?
    /// <p>Sets the client statement timeout for the PostgreSQL
    ///          instance, in seconds. The default value is 60 seconds.</p>
    ///          <p>Example: <code>executeTimeout=100;</code>
    ///          </p>
    public let executeTimeout: Int?
    /// <p>When set to <code>true</code>, this value causes a task to fail if the
    ///          actual size of a LOB column is greater than the specified
    ///          <code>LobMaxSize</code>.</p>
    ///          <p>If task is set to Limited LOB mode and this option is set to
    ///          true, the task fails instead of truncating the LOB data.</p>
    public let failTasksOnLobTruncation: Bool?
    /// <p>Specifies the maximum size (in KB) of any .csv file used to
    ///          transfer data to PostgreSQL.</p>
    ///          <p>Example: <code>maxFileSize=512</code>
    ///          </p>
    public let maxFileSize: Int?
    /// <p>Endpoint connection password.</p>
    public let password: String?
    /// <p>Endpoint TCP port.</p>
    public let port: Int?
    /// <p>The full Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the
    ///          trusted entity and grants the required permissions to access the value in
    ///             <code>SecretsManagerSecret</code>. <code>SecretsManagerSecret</code> has the value of the AWS Secrets
    ///          Manager secret that allows access to the PostgreSQL endpoint.</p>
    ///          <note>
    ///             <p>You can specify one of two sets of values for these permissions. You can specify the
    ///             values for this setting and <code>SecretsManagerSecretId</code>. Or you can specify
    ///             clear-text values for <code>UserName</code>, <code>Password</code>,
    ///                <code>ServerName</code>, and <code>Port</code>. You can't specify both. For more
    ///             information on creating this <code>SecretsManagerSecret</code> and the
    ///                <code>SecretsManagerAccessRoleArn</code> and <code>SecretsManagerSecretId</code>
    ///             required to access it, see <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager">Using secrets to access AWS Database Migration Service
    ///                resources</a> in the <i>AWS Database Migration Service User
    ///                Guide</i>.</p>
    ///          </note>
    public let secretsManagerAccessRoleArn: String?
    /// <p>The full ARN, partial ARN, or friendly name of the <code>SecretsManagerSecret</code> that contains the PostgreSQL endpoint connection details.</p>
    public let secretsManagerSecretId: String?
    /// <p>Fully qualified domain name of the endpoint.</p>
    public let serverName: String?
    /// <p>Sets the name of a previously created logical replication slot
    ///          for a CDC load of the PostgreSQL source instance.</p>
    ///          <p>When used with the AWS DMS API <code>CdcStartPosition</code>
    ///          request parameter, this attribute also enables using native
    ///          CDC start points.</p>
    public let slotName: String?
    /// <p>Endpoint connection user name.</p>
    public let username: String?

    public init (
        afterConnectScript: String? = nil,
        captureDdls: Bool? = nil,
        databaseName: String? = nil,
        ddlArtifactsSchema: String? = nil,
        executeTimeout: Int? = nil,
        failTasksOnLobTruncation: Bool? = nil,
        maxFileSize: Int? = nil,
        password: String? = nil,
        port: Int? = nil,
        secretsManagerAccessRoleArn: String? = nil,
        secretsManagerSecretId: String? = nil,
        serverName: String? = nil,
        slotName: String? = nil,
        username: String? = nil
    )
    {
        self.afterConnectScript = afterConnectScript
        self.captureDdls = captureDdls
        self.databaseName = databaseName
        self.ddlArtifactsSchema = ddlArtifactsSchema
        self.executeTimeout = executeTimeout
        self.failTasksOnLobTruncation = failTasksOnLobTruncation
        self.maxFileSize = maxFileSize
        self.password = password
        self.port = port
        self.secretsManagerAccessRoleArn = secretsManagerAccessRoleArn
        self.secretsManagerSecretId = secretsManagerSecretId
        self.serverName = serverName
        self.slotName = slotName
        self.username = username
    }
}
