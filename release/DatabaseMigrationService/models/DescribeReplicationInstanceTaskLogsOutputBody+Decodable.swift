// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationInstanceTaskLogsOutputBody: Equatable {
    public let replicationInstanceArn: String?
    public let replicationInstanceTaskLogs: [ReplicationInstanceTaskLog]?
    public let marker: String?
}

extension DescribeReplicationInstanceTaskLogsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationInstanceArn = "ReplicationInstanceArn"
        case replicationInstanceTaskLogs = "ReplicationInstanceTaskLogs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationInstanceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationInstanceArn)
        replicationInstanceArn = replicationInstanceArnDecoded
        let replicationInstanceTaskLogsContainer = try containerValues.decodeIfPresent([ReplicationInstanceTaskLog].self, forKey: .replicationInstanceTaskLogs)
        var replicationInstanceTaskLogsDecoded0:[ReplicationInstanceTaskLog]? = nil
        if let replicationInstanceTaskLogsContainer = replicationInstanceTaskLogsContainer {
            replicationInstanceTaskLogsDecoded0 = [ReplicationInstanceTaskLog]()
            for structure0 in replicationInstanceTaskLogsContainer {
                replicationInstanceTaskLogsDecoded0?.append(structure0)
            }
        }
        replicationInstanceTaskLogs = replicationInstanceTaskLogsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
