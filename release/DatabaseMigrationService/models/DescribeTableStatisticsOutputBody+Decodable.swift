// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTableStatisticsOutputBody: Equatable {
    public let replicationTaskArn: String?
    public let tableStatistics: [TableStatistics]?
    public let marker: String?
}

extension DescribeTableStatisticsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationTaskArn = "ReplicationTaskArn"
        case tableStatistics = "TableStatistics"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationTaskArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationTaskArn)
        replicationTaskArn = replicationTaskArnDecoded
        let tableStatisticsContainer = try containerValues.decodeIfPresent([TableStatistics].self, forKey: .tableStatistics)
        var tableStatisticsDecoded0:[TableStatistics]? = nil
        if let tableStatisticsContainer = tableStatisticsContainer {
            tableStatisticsDecoded0 = [TableStatistics]()
            for structure0 in tableStatisticsContainer {
                tableStatisticsDecoded0?.append(structure0)
            }
        }
        tableStatistics = tableStatisticsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
