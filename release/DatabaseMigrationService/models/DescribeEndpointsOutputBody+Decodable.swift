// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEndpointsOutputBody: Equatable {
    public let marker: String?
    public let endpoints: [Endpoint]?
}

extension DescribeEndpointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endpoints = "Endpoints"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let endpointsContainer = try containerValues.decodeIfPresent([Endpoint].self, forKey: .endpoints)
        var endpointsDecoded0:[Endpoint]? = nil
        if let endpointsContainer = endpointsContainer {
            endpointsDecoded0 = [Endpoint]()
            for structure0 in endpointsContainer {
                endpointsDecoded0?.append(structure0)
            }
        }
        endpoints = endpointsDecoded0
    }
}
