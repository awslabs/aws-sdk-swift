// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Endpoint settings.</p>
public struct EndpointSetting: Equatable {
    /// <p>The relevance or validity of an endpoint setting for an engine name and its endpoint type.</p>
    public let applicability: String?
    /// <p>Enumerated values to use for this endpoint.</p>
    public let enumValues: [String]?
    /// <p>The maximum value of an endpoint setting that is of type <code>int</code>.</p>
    public let intValueMax: Int?
    /// <p>The minimum value of an endpoint setting that is of type <code>int</code>.</p>
    public let intValueMin: Int?
    /// <p>The name that you want to give the endpoint settings.</p>
    public let name: String?
    /// <p>A value that marks this endpoint setting as sensitive.</p>
    public let sensitive: Bool?
    /// <p>The type of endpoint.  Valid values are <code>source</code> and <code>target</code>.</p>
    public let type: EndpointSettingTypeValue?
    /// <p>The unit of measure for this endpoint setting.</p>
    public let units: String?

    public init (
        applicability: String? = nil,
        enumValues: [String]? = nil,
        intValueMax: Int? = nil,
        intValueMin: Int? = nil,
        name: String? = nil,
        sensitive: Bool? = nil,
        type: EndpointSettingTypeValue? = nil,
        units: String? = nil
    )
    {
        self.applicability = applicability
        self.enumValues = enumValues
        self.intValueMax = intValueMax
        self.intValueMin = intValueMin
        self.name = name
        self.sensitive = sensitive
        self.type = type
        self.units = units
    }
}
