// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReplicationSubnetGroupsOutputBody: Equatable {
    public let marker: String?
    public let replicationSubnetGroups: [ReplicationSubnetGroup]?
}

extension DescribeReplicationSubnetGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case replicationSubnetGroups = "ReplicationSubnetGroups"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let replicationSubnetGroupsContainer = try containerValues.decodeIfPresent([ReplicationSubnetGroup].self, forKey: .replicationSubnetGroups)
        var replicationSubnetGroupsDecoded0:[ReplicationSubnetGroup]? = nil
        if let replicationSubnetGroupsContainer = replicationSubnetGroupsContainer {
            replicationSubnetGroupsDecoded0 = [ReplicationSubnetGroup]()
            for structure0 in replicationSubnetGroupsContainer {
                replicationSubnetGroupsDecoded0?.append(structure0)
            }
        }
        replicationSubnetGroups = replicationSubnetGroupsDecoded0
    }
}
