// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDestinationInput: Equatable {
    /// <p>Obtain this value from the <code>VersionId</code> result of <a>DeliveryStreamDescription</a>. This value is required, and helps the service
    ///          perform conditional operations. For example, if there is an interleaving update and this
    ///          value is null, then the update destination fails. After the update is successful, the
    ///             <code>VersionId</code> value is updated. The service then performs a merge of the old
    ///          configuration with the new configuration.</p>
    public let currentDeliveryStreamVersionId: String?
    /// <p>The name of the delivery stream.</p>
    public let deliveryStreamName: String?
    /// <p>The ID of the destination.</p>
    public let destinationId: String?
    /// <p>Describes an update for a destination in Amazon ES.</p>
    public let elasticsearchDestinationUpdate: ElasticsearchDestinationUpdate?
    /// <p>Describes an update for a destination in Amazon S3.</p>
    public let extendedS3DestinationUpdate: ExtendedS3DestinationUpdate?
    /// <p>Describes an update to the specified HTTP endpoint destination.</p>
    public let httpEndpointDestinationUpdate: HttpEndpointDestinationUpdate?
    /// <p>Describes an update for a destination in Amazon Redshift.</p>
    public let redshiftDestinationUpdate: RedshiftDestinationUpdate?
    /// <p>[Deprecated] Describes an update for a destination in Amazon S3.</p>
    @available(*, deprecated)
    public let s3DestinationUpdate: S3DestinationUpdate?
    /// <p>Describes an update for a destination in Splunk.</p>
    public let splunkDestinationUpdate: SplunkDestinationUpdate?

    public init (
        currentDeliveryStreamVersionId: String? = nil,
        deliveryStreamName: String? = nil,
        destinationId: String? = nil,
        elasticsearchDestinationUpdate: ElasticsearchDestinationUpdate? = nil,
        extendedS3DestinationUpdate: ExtendedS3DestinationUpdate? = nil,
        httpEndpointDestinationUpdate: HttpEndpointDestinationUpdate? = nil,
        redshiftDestinationUpdate: RedshiftDestinationUpdate? = nil,
        s3DestinationUpdate: S3DestinationUpdate? = nil,
        splunkDestinationUpdate: SplunkDestinationUpdate? = nil
    )
    {
        self.currentDeliveryStreamVersionId = currentDeliveryStreamVersionId
        self.deliveryStreamName = deliveryStreamName
        self.destinationId = destinationId
        self.elasticsearchDestinationUpdate = elasticsearchDestinationUpdate
        self.extendedS3DestinationUpdate = extendedS3DestinationUpdate
        self.httpEndpointDestinationUpdate = httpEndpointDestinationUpdate
        self.redshiftDestinationUpdate = redshiftDestinationUpdate
        self.s3DestinationUpdate = s3DestinationUpdate
        self.splunkDestinationUpdate = splunkDestinationUpdate
    }
}
