// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListDeliveryStreamsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deliveryStreamType = "DeliveryStreamType"
        case exclusiveStartDeliveryStreamName = "ExclusiveStartDeliveryStreamName"
        case limit = "Limit"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deliveryStreamType = deliveryStreamType {
            try encodeContainer.encode(deliveryStreamType.rawValue, forKey: .deliveryStreamType)
        }
        if let exclusiveStartDeliveryStreamName = exclusiveStartDeliveryStreamName {
            try encodeContainer.encode(exclusiveStartDeliveryStreamName, forKey: .exclusiveStartDeliveryStreamName)
        }
        if let limit = limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
    }
}
