// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDeliveryStreamInputBody: Equatable {
    public let deliveryStreamName: String?
    public let limit: Int?
    public let exclusiveStartDestinationId: String?
}

extension DescribeDeliveryStreamInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deliveryStreamName = "DeliveryStreamName"
        case exclusiveStartDestinationId = "ExclusiveStartDestinationId"
        case limit = "Limit"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deliveryStreamName)
        deliveryStreamName = deliveryStreamNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartDestinationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartDestinationId)
        exclusiveStartDestinationId = exclusiveStartDestinationIdDecoded
    }
}
