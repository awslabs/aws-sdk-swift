// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisStreamSourceConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case kinesisStreamARN = "KinesisStreamARN"
        case roleARN = "RoleARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kinesisStreamARN = kinesisStreamARN {
            try encodeContainer.encode(kinesisStreamARN, forKey: .kinesisStreamARN)
        }
        if let roleARN = roleARN {
            try encodeContainer.encode(roleARN, forKey: .roleARN)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kinesisStreamARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kinesisStreamARN)
        kinesisStreamARN = kinesisStreamARNDecoded
        let roleARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
    }
}
