// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum HttpEndpointS3BackupMode {
    case alldata
    case faileddataonly
    case sdkUnknown(String)
}

extension HttpEndpointS3BackupMode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HttpEndpointS3BackupMode] {
        return [
            .alldata,
            .faileddataonly,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .alldata: return "AllData"
        case .faileddataonly: return "FailedDataOnly"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HttpEndpointS3BackupMode(rawValue: rawValue) ?? HttpEndpointS3BackupMode.sdkUnknown(rawValue)
    }
}
