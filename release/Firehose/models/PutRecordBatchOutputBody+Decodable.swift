// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecordBatchOutputBody: Equatable {
    public let failedPutCount: Int?
    public let encrypted: Bool?
    public let requestResponses: [PutRecordBatchResponseEntry]?
}

extension PutRecordBatchOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case encrypted = "Encrypted"
        case failedPutCount = "FailedPutCount"
        case requestResponses = "RequestResponses"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedPutCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .failedPutCount)
        failedPutCount = failedPutCountDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
        let requestResponsesContainer = try containerValues.decodeIfPresent([PutRecordBatchResponseEntry].self, forKey: .requestResponses)
        var requestResponsesDecoded0:[PutRecordBatchResponseEntry]? = nil
        if let requestResponsesContainer = requestResponsesContainer {
            requestResponsesDecoded0 = [PutRecordBatchResponseEntry]()
            for structure0 in requestResponsesContainer {
                requestResponsesDecoded0?.append(structure0)
            }
        }
        requestResponses = requestResponsesDecoded0
    }
}
