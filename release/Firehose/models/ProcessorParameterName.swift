// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ProcessorParameterName {
    case bufferIntervalInSeconds
    case bufferSizeInMb
    case lambdaArn
    case lambdaNumberOfRetries
    case roleArn
    case sdkUnknown(String)
}

extension ProcessorParameterName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProcessorParameterName] {
        return [
            .bufferIntervalInSeconds,
            .bufferSizeInMb,
            .lambdaArn,
            .lambdaNumberOfRetries,
            .roleArn,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bufferIntervalInSeconds: return "BufferIntervalInSeconds"
        case .bufferSizeInMb: return "BufferSizeInMBs"
        case .lambdaArn: return "LambdaArn"
        case .lambdaNumberOfRetries: return "NumberOfRetries"
        case .roleArn: return "RoleArn"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProcessorParameterName(rawValue: rawValue) ?? ProcessorParameterName.sdkUnknown(rawValue)
    }
}
