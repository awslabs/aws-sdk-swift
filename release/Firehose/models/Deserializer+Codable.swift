// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Deserializer: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case hiveJsonSerDe = "HiveJsonSerDe"
        case openXJsonSerDe = "OpenXJsonSerDe"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hiveJsonSerDe = hiveJsonSerDe {
            try encodeContainer.encode(hiveJsonSerDe, forKey: .hiveJsonSerDe)
        }
        if let openXJsonSerDe = openXJsonSerDe {
            try encodeContainer.encode(openXJsonSerDe, forKey: .openXJsonSerDe)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let openXJsonSerDeDecoded = try containerValues.decodeIfPresent(OpenXJsonSerDe.self, forKey: .openXJsonSerDe)
        openXJsonSerDe = openXJsonSerDeDecoded
        let hiveJsonSerDeDecoded = try containerValues.decodeIfPresent(HiveJsonSerDe.self, forKey: .hiveJsonSerDe)
        hiveJsonSerDe = hiveJsonSerDeDecoded
    }
}
