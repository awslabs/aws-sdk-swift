// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutputFormatConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case serializer = "Serializer"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let serializer = serializer {
            try encodeContainer.encode(serializer, forKey: .serializer)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serializerDecoded = try containerValues.decodeIfPresent(Serializer.self, forKey: .serializer)
        serializer = serializerDecoded
    }
}
