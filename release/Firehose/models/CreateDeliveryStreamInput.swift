// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDeliveryStreamInput: Equatable {
    /// <p>Used to specify the type and Amazon Resource Name (ARN) of the KMS key needed for
    ///          Server-Side Encryption (SSE).</p>
    public let deliveryStreamEncryptionConfigurationInput: DeliveryStreamEncryptionConfigurationInput?
    /// <p>The name of the delivery stream. This name must be unique per AWS account in the same
    ///          AWS Region. If the delivery streams are in different accounts or different Regions, you can
    ///          have multiple delivery streams with the same name.</p>
    public let deliveryStreamName: String?
    /// <p>The delivery stream type. This parameter can be one of the following
    ///          values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>DirectPut</code>: Provider applications access the delivery stream
    ///                directly.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data
    ///                stream as a source.</p>
    ///             </li>
    ///          </ul>
    public let deliveryStreamType: DeliveryStreamType?
    /// <p>The destination in Amazon ES. You can specify only one destination.</p>
    public let elasticsearchDestinationConfiguration: ElasticsearchDestinationConfiguration?
    /// <p>The destination in Amazon S3. You can specify only one destination.</p>
    public let extendedS3DestinationConfiguration: ExtendedS3DestinationConfiguration?
    /// <p>Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination.
    ///          You can specify only one destination.</p>
    public let httpEndpointDestinationConfiguration: HttpEndpointDestinationConfiguration?
    /// <p>When a Kinesis data stream is used as the source for the delivery stream, a <a>KinesisStreamSourceConfiguration</a> containing the Kinesis data stream Amazon
    ///          Resource Name (ARN) and the role ARN for the source stream.</p>
    public let kinesisStreamSourceConfiguration: KinesisStreamSourceConfiguration?
    /// <p>The destination in Amazon Redshift. You can specify only one destination.</p>
    public let redshiftDestinationConfiguration: RedshiftDestinationConfiguration?
    /// <p>[Deprecated]
    ///          The destination in Amazon S3. You can specify only one destination.</p>
    @available(*, deprecated)
    public let s3DestinationConfiguration: S3DestinationConfiguration?
    /// <p>The destination in Splunk. You can specify only one destination.</p>
    public let splunkDestinationConfiguration: SplunkDestinationConfiguration?
    /// <p>A set of tags to assign to the delivery stream. A tag is a key-value pair that you can
    ///          define and assign to AWS resources. Tags are metadata. For example, you can add friendly
    ///          names and descriptions or other types of information that can help you distinguish the
    ///          delivery stream. For more information about tags, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the AWS Billing and Cost Management User
    ///          Guide.</p>
    ///
    ///          <p>You can specify up to 50 tags when creating a delivery stream.</p>
    public let tags: [Tag]?

    public init (
        deliveryStreamEncryptionConfigurationInput: DeliveryStreamEncryptionConfigurationInput? = nil,
        deliveryStreamName: String? = nil,
        deliveryStreamType: DeliveryStreamType? = nil,
        elasticsearchDestinationConfiguration: ElasticsearchDestinationConfiguration? = nil,
        extendedS3DestinationConfiguration: ExtendedS3DestinationConfiguration? = nil,
        httpEndpointDestinationConfiguration: HttpEndpointDestinationConfiguration? = nil,
        kinesisStreamSourceConfiguration: KinesisStreamSourceConfiguration? = nil,
        redshiftDestinationConfiguration: RedshiftDestinationConfiguration? = nil,
        s3DestinationConfiguration: S3DestinationConfiguration? = nil,
        splunkDestinationConfiguration: SplunkDestinationConfiguration? = nil,
        tags: [Tag]? = nil
    )
    {
        self.deliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInput
        self.deliveryStreamName = deliveryStreamName
        self.deliveryStreamType = deliveryStreamType
        self.elasticsearchDestinationConfiguration = elasticsearchDestinationConfiguration
        self.extendedS3DestinationConfiguration = extendedS3DestinationConfiguration
        self.httpEndpointDestinationConfiguration = httpEndpointDestinationConfiguration
        self.kinesisStreamSourceConfiguration = kinesisStreamSourceConfiguration
        self.redshiftDestinationConfiguration = redshiftDestinationConfiguration
        self.s3DestinationConfiguration = s3DestinationConfiguration
        self.splunkDestinationConfiguration = splunkDestinationConfiguration
        self.tags = tags
    }
}
