// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeliveryStreamsOutputBody: Equatable {
    public let deliveryStreamNames: [String]?
    public let hasMoreDeliveryStreams: Bool?
}

extension ListDeliveryStreamsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deliveryStreamNames = "DeliveryStreamNames"
        case hasMoreDeliveryStreams = "HasMoreDeliveryStreams"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .deliveryStreamNames)
        var deliveryStreamNamesDecoded0:[String]? = nil
        if let deliveryStreamNamesContainer = deliveryStreamNamesContainer {
            deliveryStreamNamesDecoded0 = [String]()
            for string0 in deliveryStreamNamesContainer {
                deliveryStreamNamesDecoded0?.append(string0)
            }
        }
        deliveryStreamNames = deliveryStreamNamesDecoded0
        let hasMoreDeliveryStreamsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .hasMoreDeliveryStreams)
        hasMoreDeliveryStreams = hasMoreDeliveryStreamsDecoded
    }
}
