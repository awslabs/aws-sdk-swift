// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DeliveryStreamFailureType {
    case createEniFailed
    case createKmsGrantFailed
    case deleteEniFailed
    case disabledKmsKey
    case eniAccessDenied
    case invalidKmsKey
    case kmsAccessDenied
    case kmsKeyNotFound
    case kmsOptInRequired
    case retireKmsGrantFailed
    case securityGroupAccessDenied
    case securityGroupNotFound
    case subnetAccessDenied
    case subnetNotFound
    case unknownError
    case sdkUnknown(String)
}

extension DeliveryStreamFailureType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeliveryStreamFailureType] {
        return [
            .createEniFailed,
            .createKmsGrantFailed,
            .deleteEniFailed,
            .disabledKmsKey,
            .eniAccessDenied,
            .invalidKmsKey,
            .kmsAccessDenied,
            .kmsKeyNotFound,
            .kmsOptInRequired,
            .retireKmsGrantFailed,
            .securityGroupAccessDenied,
            .securityGroupNotFound,
            .subnetAccessDenied,
            .subnetNotFound,
            .unknownError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createEniFailed: return "CREATE_ENI_FAILED"
        case .createKmsGrantFailed: return "CREATE_KMS_GRANT_FAILED"
        case .deleteEniFailed: return "DELETE_ENI_FAILED"
        case .disabledKmsKey: return "DISABLED_KMS_KEY"
        case .eniAccessDenied: return "ENI_ACCESS_DENIED"
        case .invalidKmsKey: return "INVALID_KMS_KEY"
        case .kmsAccessDenied: return "KMS_ACCESS_DENIED"
        case .kmsKeyNotFound: return "KMS_KEY_NOT_FOUND"
        case .kmsOptInRequired: return "KMS_OPT_IN_REQUIRED"
        case .retireKmsGrantFailed: return "RETIRE_KMS_GRANT_FAILED"
        case .securityGroupAccessDenied: return "SECURITY_GROUP_ACCESS_DENIED"
        case .securityGroupNotFound: return "SECURITY_GROUP_NOT_FOUND"
        case .subnetAccessDenied: return "SUBNET_ACCESS_DENIED"
        case .subnetNotFound: return "SUBNET_NOT_FOUND"
        case .unknownError: return "UNKNOWN_ERROR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeliveryStreamFailureType(rawValue: rawValue) ?? DeliveryStreamFailureType.sdkUnknown(rawValue)
    }
}
