// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Serializer: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case orcSerDe = "OrcSerDe"
        case parquetSerDe = "ParquetSerDe"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let orcSerDe = orcSerDe {
            try encodeContainer.encode(orcSerDe, forKey: .orcSerDe)
        }
        if let parquetSerDe = parquetSerDe {
            try encodeContainer.encode(parquetSerDe, forKey: .parquetSerDe)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parquetSerDeDecoded = try containerValues.decodeIfPresent(ParquetSerDe.self, forKey: .parquetSerDe)
        parquetSerDe = parquetSerDeDecoded
        let orcSerDeDecoded = try containerValues.decodeIfPresent(OrcSerDe.self, forKey: .orcSerDe)
        orcSerDe = orcSerDeDecoded
    }
}
