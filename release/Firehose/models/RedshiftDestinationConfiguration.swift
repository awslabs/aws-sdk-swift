// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the configuration of a destination in Amazon Redshift.</p>
public struct RedshiftDestinationConfiguration: Equatable {
    /// <p>The CloudWatch logging options for your delivery stream.</p>
    public let cloudWatchLoggingOptions: CloudWatchLoggingOptions?
    /// <p>The database connection string.</p>
    public let clusterJDBCURL: String?
    /// <p>The <code>COPY</code> command.</p>
    public let copyCommand: CopyCommand?
    /// <p>The user password.</p>
    public let password: String?
    /// <p>The data processing configuration.</p>
    public let processingConfiguration: ProcessingConfiguration?
    /// <p>The retry behavior in case Kinesis Data Firehose is unable to deliver documents to
    ///          Amazon Redshift. Default value is 3600 (60 minutes).</p>
    public let retryOptions: RedshiftRetryOptions?
    /// <p>The Amazon Resource Name (ARN) of the AWS credentials. For more information, see
    ///             <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    public let roleARN: String?
    /// <p>The configuration for backup in Amazon S3.</p>
    public let s3BackupConfiguration: S3DestinationConfiguration?
    /// <p>The Amazon S3 backup mode. After you create a delivery stream, you can update it to
    ///          enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the
    ///          delivery stream to disable it. </p>
    public let s3BackupMode: RedshiftS3BackupMode?
    /// <p>The configuration for the intermediate Amazon S3 location from which Amazon Redshift
    ///          obtains data. Restrictions are described in the topic for <a>CreateDeliveryStream</a>.</p>
    ///          <p>The compression formats <code>SNAPPY</code> or <code>ZIP</code> cannot be specified
    ///          in <code>RedshiftDestinationConfiguration.S3Configuration</code> because the Amazon
    ///          Redshift <code>COPY</code> operation that reads from the S3 bucket doesn't support these
    ///          compression formats.</p>
    public let s3Configuration: S3DestinationConfiguration?
    /// <p>The name of the user.</p>
    public let username: String?

    public init (
        cloudWatchLoggingOptions: CloudWatchLoggingOptions? = nil,
        clusterJDBCURL: String? = nil,
        copyCommand: CopyCommand? = nil,
        password: String? = nil,
        processingConfiguration: ProcessingConfiguration? = nil,
        retryOptions: RedshiftRetryOptions? = nil,
        roleARN: String? = nil,
        s3BackupConfiguration: S3DestinationConfiguration? = nil,
        s3BackupMode: RedshiftS3BackupMode? = nil,
        s3Configuration: S3DestinationConfiguration? = nil,
        username: String? = nil
    )
    {
        self.cloudWatchLoggingOptions = cloudWatchLoggingOptions
        self.clusterJDBCURL = clusterJDBCURL
        self.copyCommand = copyCommand
        self.password = password
        self.processingConfiguration = processingConfiguration
        self.retryOptions = retryOptions
        self.roleARN = roleARN
        self.s3BackupConfiguration = s3BackupConfiguration
        self.s3BackupMode = s3BackupMode
        self.s3Configuration = s3Configuration
        self.username = username
    }
}
