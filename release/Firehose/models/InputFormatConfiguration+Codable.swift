// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputFormatConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deserializer = "Deserializer"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deserializer = deserializer {
            try encodeContainer.encode(deserializer, forKey: .deserializer)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deserializerDecoded = try containerValues.decodeIfPresent(Deserializer.self, forKey: .deserializer)
        deserializer = deserializerDecoded
    }
}
