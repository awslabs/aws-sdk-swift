// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about a delivery stream.</p>
public struct DeliveryStreamDescription: Equatable {
    /// <p>The date and time that the delivery stream was created.</p>
    public let createTimestamp: Date?
    /// <p>The Amazon Resource Name (ARN) of the delivery stream. For more information, see
    ///             <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    public let deliveryStreamARN: String?
    /// <p>Indicates the server-side encryption (SSE) status for the delivery stream.</p>
    public let deliveryStreamEncryptionConfiguration: DeliveryStreamEncryptionConfiguration?
    /// <p>The name of the delivery stream.</p>
    public let deliveryStreamName: String?
    /// <p>The status of the delivery stream. If the status of a delivery stream is
    ///             <code>CREATING_FAILED</code>, this status doesn't change, and you can't invoke
    ///             <code>CreateDeliveryStream</code> again on it. However, you can invoke the <a>DeleteDeliveryStream</a> operation to delete it.</p>
    public let deliveryStreamStatus: DeliveryStreamStatus?
    /// <p>The delivery stream type. This can be one of the following values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>DirectPut</code>: Provider applications access the delivery stream
    ///                directly.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KinesisStreamAsSource</code>: The delivery stream uses a Kinesis data
    ///                stream as a source.</p>
    ///             </li>
    ///          </ul>
    public let deliveryStreamType: DeliveryStreamType?
    /// <p>The destinations.</p>
    public let destinations: [DestinationDescription]?
    /// <p>Provides details in case one of the following operations fails due to an error related
    ///          to KMS: <a>CreateDeliveryStream</a>, <a>DeleteDeliveryStream</a>,
    ///             <a>StartDeliveryStreamEncryption</a>, <a>StopDeliveryStreamEncryption</a>.</p>
    public let failureDescription: FailureDescription?
    /// <p>Indicates whether there are more destinations available to list.</p>
    public let hasMoreDestinations: Bool?
    /// <p>The date and time that the delivery stream was last updated.</p>
    public let lastUpdateTimestamp: Date?
    /// <p>If the <code>DeliveryStreamType</code> parameter is
    ///             <code>KinesisStreamAsSource</code>, a <a>SourceDescription</a> object
    ///          describing the source Kinesis data stream.</p>
    public let source: SourceDescription?
    /// <p>Each time the destination is updated for a delivery stream, the version ID is
    ///          changed, and the current version ID is required when updating the destination. This is so
    ///          that the service knows it is applying the changes to the correct version of the delivery
    ///          stream.</p>
    public let versionId: String?

    public init (
        createTimestamp: Date? = nil,
        deliveryStreamARN: String? = nil,
        deliveryStreamEncryptionConfiguration: DeliveryStreamEncryptionConfiguration? = nil,
        deliveryStreamName: String? = nil,
        deliveryStreamStatus: DeliveryStreamStatus? = nil,
        deliveryStreamType: DeliveryStreamType? = nil,
        destinations: [DestinationDescription]? = nil,
        failureDescription: FailureDescription? = nil,
        hasMoreDestinations: Bool? = nil,
        lastUpdateTimestamp: Date? = nil,
        source: SourceDescription? = nil,
        versionId: String? = nil
    )
    {
        self.createTimestamp = createTimestamp
        self.deliveryStreamARN = deliveryStreamARN
        self.deliveryStreamEncryptionConfiguration = deliveryStreamEncryptionConfiguration
        self.deliveryStreamName = deliveryStreamName
        self.deliveryStreamStatus = deliveryStreamStatus
        self.deliveryStreamType = deliveryStreamType
        self.destinations = destinations
        self.failureDescription = failureDescription
        self.hasMoreDestinations = hasMoreDestinations
        self.lastUpdateTimestamp = lastUpdateTimestamp
        self.source = source
        self.versionId = versionId
    }
}
