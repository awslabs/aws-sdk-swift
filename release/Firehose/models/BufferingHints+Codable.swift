// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BufferingHints: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case intervalInSeconds = "IntervalInSeconds"
        case sizeInMBs = "SizeInMBs"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intervalInSeconds = intervalInSeconds {
            try encodeContainer.encode(intervalInSeconds, forKey: .intervalInSeconds)
        }
        if let sizeInMBs = sizeInMBs {
            try encodeContainer.encode(sizeInMBs, forKey: .sizeInMBs)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sizeInMBsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .sizeInMBs)
        sizeInMBs = sizeInMBsDecoded
        let intervalInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .intervalInSeconds)
        intervalInSeconds = intervalInSecondsDecoded
    }
}
