// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDeliveryStreamEncryptionInputBody: Equatable {
    public let deliveryStreamName: String?
    public let deliveryStreamEncryptionConfigurationInput: DeliveryStreamEncryptionConfigurationInput?
}

extension StartDeliveryStreamEncryptionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deliveryStreamEncryptionConfigurationInput = "DeliveryStreamEncryptionConfigurationInput"
        case deliveryStreamName = "DeliveryStreamName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deliveryStreamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deliveryStreamName)
        deliveryStreamName = deliveryStreamNameDecoded
        let deliveryStreamEncryptionConfigurationInputDecoded = try containerValues.decodeIfPresent(DeliveryStreamEncryptionConfigurationInput.self, forKey: .deliveryStreamEncryptionConfigurationInput)
        deliveryStreamEncryptionConfigurationInput = deliveryStreamEncryptionConfigurationInputDecoded
    }
}
