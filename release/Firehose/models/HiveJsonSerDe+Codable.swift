// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HiveJsonSerDe: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case timestampFormats = "TimestampFormats"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let timestampFormats = timestampFormats {
            var timestampFormatsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .timestampFormats)
            for listofnonemptystrings0 in timestampFormats {
                try timestampFormatsContainer.encode(listofnonemptystrings0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timestampFormatsContainer = try containerValues.decodeIfPresent([String].self, forKey: .timestampFormats)
        var timestampFormatsDecoded0:[String]? = nil
        if let timestampFormatsContainer = timestampFormatsContainer {
            timestampFormatsDecoded0 = [String]()
            for string0 in timestampFormatsContainer {
                timestampFormatsDecoded0?.append(string0)
            }
        }
        timestampFormats = timestampFormatsDecoded0
    }
}
