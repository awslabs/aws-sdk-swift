// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HttpEndpointRequestConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case commonAttributes = "CommonAttributes"
        case contentEncoding = "ContentEncoding"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commonAttributes = commonAttributes {
            var commonAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .commonAttributes)
            for httpendpointcommonattributeslist0 in commonAttributes {
                try commonAttributesContainer.encode(httpendpointcommonattributeslist0)
            }
        }
        if let contentEncoding = contentEncoding {
            try encodeContainer.encode(contentEncoding.rawValue, forKey: .contentEncoding)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contentEncodingDecoded = try containerValues.decodeIfPresent(ContentEncoding.self, forKey: .contentEncoding)
        contentEncoding = contentEncodingDecoded
        let commonAttributesContainer = try containerValues.decodeIfPresent([HttpEndpointCommonAttribute].self, forKey: .commonAttributes)
        var commonAttributesDecoded0:[HttpEndpointCommonAttribute]? = nil
        if let commonAttributesContainer = commonAttributesContainer {
            commonAttributesDecoded0 = [HttpEndpointCommonAttribute]()
            for structure0 in commonAttributesContainer {
                commonAttributesDecoded0?.append(structure0)
            }
        }
        commonAttributes = commonAttributesDecoded0
    }
}
