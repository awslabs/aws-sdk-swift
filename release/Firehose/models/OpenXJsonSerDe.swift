// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The OpenX SerDe. Used by Kinesis Data Firehose for deserializing data, which means
///          converting it from the JSON format in preparation for serializing it to the Parquet or ORC
///          format. This is one of two deserializers you can choose, depending on which one offers the
///          functionality you need. The other option is the native Hive / HCatalog JsonSerDe.</p>
public struct OpenXJsonSerDe: Equatable {
    /// <p>When set to <code>true</code>, which is the default, Kinesis Data Firehose converts
    ///          JSON keys to lowercase before deserializing them.</p>
    public let caseInsensitive: Bool?
    /// <p>Maps column names to JSON keys that aren't identical to the column names. This is
    ///          useful when the JSON contains keys that are Hive keywords. For example,
    ///             <code>timestamp</code> is a Hive keyword. If you have a JSON key named
    ///             <code>timestamp</code>, set this parameter to <code>{"ts": "timestamp"}</code> to map
    ///          this key to a column named <code>ts</code>.</p>
    public let columnToJsonKeyMappings: [String:String]?
    /// <p>When set to <code>true</code>, specifies that the names of the keys include dots and
    ///          that you want Kinesis Data Firehose to replace them with underscores. This is useful
    ///          because Apache Hive does not allow dots in column names. For example, if the JSON contains
    ///          a key whose name is "a.b", you can define the column name to be "a_b" when using this
    ///          option.</p>
    ///          <p>The default is <code>false</code>.</p>
    public let convertDotsInJsonKeysToUnderscores: Bool?

    public init (
        caseInsensitive: Bool? = nil,
        columnToJsonKeyMappings: [String:String]? = nil,
        convertDotsInJsonKeysToUnderscores: Bool? = nil
    )
    {
        self.caseInsensitive = caseInsensitive
        self.columnToJsonKeyMappings = columnToJsonKeyMappings
        self.convertDotsInJsonKeysToUnderscores = convertDotsInJsonKeysToUnderscores
    }
}
