// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendVoiceMessageInputBody: Equatable {
    public let callerId: String?
    public let configurationSetName: String?
    public let content: VoiceMessageContent?
    public let destinationPhoneNumber: String?
    public let originationPhoneNumber: String?
}

extension SendVoiceMessageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case callerId = "CallerId"
        case configurationSetName = "ConfigurationSetName"
        case content = "Content"
        case destinationPhoneNumber = "DestinationPhoneNumber"
        case originationPhoneNumber = "OriginationPhoneNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let callerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .callerId)
        callerId = callerIdDecoded
        let configurationSetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configurationSetName)
        configurationSetName = configurationSetNameDecoded
        let contentDecoded = try containerValues.decodeIfPresent(VoiceMessageContent.self, forKey: .content)
        content = contentDecoded
        let destinationPhoneNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationPhoneNumber)
        destinationPhoneNumber = destinationPhoneNumberDecoded
        let originationPhoneNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .originationPhoneNumber)
        originationPhoneNumber = originationPhoneNumberDecoded
    }
}
