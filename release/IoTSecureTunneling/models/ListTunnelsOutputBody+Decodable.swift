// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTunnelsOutputBody: Equatable {
    public let tunnelSummaries: [TunnelSummary]?
    public let nextToken: String?
}

extension ListTunnelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case tunnelSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tunnelSummariesContainer = try containerValues.decodeIfPresent([TunnelSummary].self, forKey: .tunnelSummaries)
        var tunnelSummariesDecoded0:[TunnelSummary]? = nil
        if let tunnelSummariesContainer = tunnelSummariesContainer {
            tunnelSummariesDecoded0 = [TunnelSummary]()
            for structure0 in tunnelSummariesContainer {
                tunnelSummariesDecoded0?.append(structure0)
            }
        }
        tunnelSummaries = tunnelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
