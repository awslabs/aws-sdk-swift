// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct OpenTunnelOutputBody: Equatable {
    public let tunnelId: String?
    public let tunnelArn: String?
    public let sourceAccessToken: String?
    public let destinationAccessToken: String?
}

extension OpenTunnelOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case destinationAccessToken
        case sourceAccessToken
        case tunnelArn
        case tunnelId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tunnelIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tunnelId)
        tunnelId = tunnelIdDecoded
        let tunnelArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tunnelArn)
        tunnelArn = tunnelArnDecoded
        let sourceAccessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceAccessToken)
        sourceAccessToken = sourceAccessTokenDecoded
        let destinationAccessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationAccessToken)
        destinationAccessToken = destinationAccessTokenDecoded
    }
}
