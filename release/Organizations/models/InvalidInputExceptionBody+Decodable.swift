// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvalidInputExceptionBody: Equatable {
    public let message: String?
    public let reason: InvalidInputExceptionReason?
}

extension InvalidInputExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case message = "Message"
        case reason = "Reason"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(InvalidInputExceptionReason.self, forKey: .reason)
        reason = reasonDecoded
    }
}
