// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct EnablePolicyTypeInput: Equatable {
    /// <p>The policy type that you want to enable. You can specify one of the following
    ///             values:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let policyType: PolicyType?
    /// <p>The unique identifier (ID) of the root in which you want to enable a policy type. You
    ///             can get the ID from the <a>ListRoots</a> operation.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by
    ///     from 4 to 32 lowercase letters or digits.</p>
    public let rootId: String?

    public init (
        policyType: PolicyType? = nil,
        rootId: String? = nil
    )
    {
        self.policyType = policyType
        self.rootId = rootId
    }
}
