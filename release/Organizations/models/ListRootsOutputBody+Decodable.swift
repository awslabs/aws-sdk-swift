// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRootsOutputBody: Equatable {
    public let roots: [Root]?
    public let nextToken: String?
}

extension ListRootsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case roots = "Roots"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rootsContainer = try containerValues.decodeIfPresent([Root].self, forKey: .roots)
        var rootsDecoded0:[Root]? = nil
        if let rootsContainer = rootsContainer {
            rootsDecoded0 = [Root]()
            for structure0 in rootsContainer {
                rootsDecoded0?.append(structure0)
            }
        }
        roots = rootsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
