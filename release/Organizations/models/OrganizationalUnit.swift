// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains details about an organizational unit (OU). An OU is a container of AWS
///             accounts within a root of an organization. Policies that are attached to an OU apply to
///             all accounts contained in that OU and in any child OUs.</p>
public struct OrganizationalUnit: Equatable {
    /// <p>The Amazon Resource Name (ARN) of this OU.</p>
    ///         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
    ///     Formats Supported by Organizations</a> in the <i>AWS Service Authorization Reference</i>.</p>
    public let arn: String?
    /// <p>The unique identifier (ID) associated with this OU.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organizational unit ID string requires
    ///     "ou-" followed by from 4 to 32 lowercase letters or digits (the ID of the root that contains the
    ///     OU). This string is followed by a second "-" dash and from 8 to 32 additional lowercase letters
    ///     or digits.</p>
    public let id: String?
    /// <p>The friendly name of this OU.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     that is used to validate this parameter is a string of any of the characters in the ASCII
    ///     character range.</p>
    public let name: String?

    public init (
        arn: String? = nil,
        id: String? = nil,
        name: String? = nil
    )
    {
        self.arn = arn
        self.id = id
        self.name = name
    }
}
