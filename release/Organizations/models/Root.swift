// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains details about a root. A root is a top-level parent node in the hierarchy of
///             an organization that can contain organizational units (OUs) and accounts.
///             The root contains every AWS account in the
///             organization.</p>
public struct Root: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the root.</p>
    ///         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
    ///     Formats Supported by Organizations</a> in the <i>AWS Service Authorization Reference</i>.</p>
    public let arn: String?
    /// <p>The unique identifier (ID) for the root.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a root ID string requires "r-" followed by
    ///     from 4 to 32 lowercase letters or digits.</p>
    public let id: String?
    /// <p>The friendly name of the root.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     that is used to validate this parameter is a string of any of the characters in the ASCII
    ///     character range.</p>
    public let name: String?
    /// <p>The types of policies that are currently enabled for the root and therefore can be
    ///             attached to the root or to its OUs or accounts.</p>
    ///         <note>
    ///             <p>Even if a policy type is shown as available in the organization, you can
    ///                 separately enable and disable them at the root level by using <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. Use <a>DescribeOrganization</a> to see the availability of the policy types in
    ///                 that organization.</p>
    ///         </note>
    public let policyTypes: [PolicyTypeSummary]?

    public init (
        arn: String? = nil,
        id: String? = nil,
        name: String? = nil,
        policyTypes: [PolicyTypeSummary]? = nil
    )
    {
        self.arn = arn
        self.id = id
        self.name = name
        self.policyTypes = policyTypes
    }
}
