// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains additional data that is needed to process a handshake.</p>
public struct HandshakeResource: Equatable {
    /// <p>When needed, contains an additional array of <code>HandshakeResource</code>
    ///             objects.</p>
    public let resources: [HandshakeResource]?
    /// <p>The type of information being passed, specifying how the value is to be interpreted by
    ///             the other party:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>ACCOUNT</code> - Specifies an AWS account ID number.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ORGANIZATION</code> - Specifies an organization ID number.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>EMAIL</code> - Specifies the email address that is associated with the
    ///                     account that receives the handshake. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>OWNER_EMAIL</code> - Specifies the email address associated with the
    ///                     management account. Included as information about an organization. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>OWNER_NAME</code> - Specifies the name associated with the management
    ///                     account. Included as information about an organization. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>NOTES</code> - Additional text provided by the handshake initiator and
    ///                     intended for the recipient to read.</p>
    ///             </li>
    ///          </ul>
    public let type: HandshakeResourceType?
    /// <p>The information that is passed to the other party in the handshake. The format of the
    ///             value string must match the requirements of the specified type.</p>
    public let value: String?

    public init (
        resources: [HandshakeResource]? = nil,
        type: HandshakeResourceType? = nil,
        value: String? = nil
    )
    {
        self.resources = resources
        self.type = type
        self.value = value
    }
}
