// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DetachPolicyInput: Equatable {
    /// <p>The unique identifier (ID) of the policy you want to detach. You can get the ID from
    ///             the <a>ListPolicies</a> or <a>ListPoliciesForTarget</a>
    ///             operations.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a policy ID string requires "p-" followed
    ///     by from 8 to 128 lowercase or uppercase letters, digits, or the underscore character (_).</p>
    public let policyId: String?
    /// <p>The unique identifier (ID) of the root, OU, or account that you want to detach the
    ///             policy from. You can get the ID from the <a>ListRoots</a>, <a>ListOrganizationalUnitsForParent</a>, or <a>ListAccounts</a>
    ///             operations.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
    ///     following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
    ///           digits.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
    ///           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
    ///           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
    ///             </li>
    ///          </ul>
    public let targetId: String?

    public init (
        policyId: String? = nil,
        targetId: String? = nil
    )
    {
        self.policyId = policyId
        self.targetId = targetId
    }
}
