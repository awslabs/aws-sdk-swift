// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListHandshakesForOrganizationInput: Equatable {
    /// <p>A filter of the handshakes that you want included in the response. The default is all
    ///             types. Use the <code>ActionType</code> element to limit the output to only a specified
    ///             type, such as <code>INVITE</code>, <code>ENABLE-ALL-FEATURES</code>, or
    ///                 <code>APPROVE-ALL-FEATURES</code>. Alternatively, for the
    ///                 <code>ENABLE-ALL-FEATURES</code> handshake that generates a separate child handshake
    ///             for each member account, you can specify the <code>ParentHandshakeId</code> to see only
    ///             the handshakes that were generated by that parent request.</p>
    public let filter: HandshakeFilter?
    /// <p>The total number of results that you want included on each page of the
    ///     response. If you do not include this parameter, it defaults to a value that is specific to the
    ///     operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code>
    ///     response element is present and has a value (is not null). Include that value as the
    ///     <code>NextToken</code> request parameter in the next call to the operation to get the next part
    ///     of the results. Note that Organizations might return fewer results than the maximum even when there are
    ///     more results available. You should check <code>NextToken</code> after every operation to ensure
    ///     that you receive all of the results.</p>
    public let maxResults: Int?
    /// <p>The parameter for receiving additional results if you receive a
    ///     <code>NextToken</code> response in a previous request. A <code>NextToken</code> response
    ///     indicates that more output is available. Set this parameter to the value of the previous
    ///     call's <code>NextToken</code> response to indicate where the output should continue
    ///     from.</p>
    public let nextToken: String?

    public init (
        filter: HandshakeFilter? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil
    )
    {
        self.filter = filter
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
