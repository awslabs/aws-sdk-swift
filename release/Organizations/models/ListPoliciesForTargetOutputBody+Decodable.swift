// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPoliciesForTargetOutputBody: Equatable {
    public let policies: [PolicySummary]?
    public let nextToken: String?
}

extension ListPoliciesForTargetOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case policies = "Policies"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policiesContainer = try containerValues.decodeIfPresent([PolicySummary].self, forKey: .policies)
        var policiesDecoded0:[PolicySummary]? = nil
        if let policiesContainer = policiesContainer {
            policiesDecoded0 = [PolicySummary]()
            for structure0 in policiesContainer {
                policiesDecoded0?.append(structure0)
            }
        }
        policies = policiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
