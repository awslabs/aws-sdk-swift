// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListParentsOutputBody: Equatable {
    public let parents: [Parent]?
    public let nextToken: String?
}

extension ListParentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case parents = "Parents"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parentsContainer = try containerValues.decodeIfPresent([Parent].self, forKey: .parents)
        var parentsDecoded0:[Parent]? = nil
        if let parentsContainer = parentsContainer {
            parentsDecoded0 = [Parent]()
            for structure0 in parentsContainer {
                parentsDecoded0?.append(structure0)
            }
        }
        parents = parentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
