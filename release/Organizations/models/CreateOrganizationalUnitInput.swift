// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateOrganizationalUnitInput: Equatable {
    /// <p>The friendly name to assign to the new OU.</p>
    public let name: String?
    /// <p>The unique identifier (ID) of the parent root or OU that you want to create the new OU
    ///             in.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a parent ID string requires one of the
    ///     following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
    ///           digits.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
    ///           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
    ///           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
    ///             </li>
    ///          </ul>
    public let parentId: String?
    /// <p>A list of tags that you want to attach to the newly created OU. For each tag in the
    ///             list, you must specify both a tag key and a value. You can set the value to an empty
    ///             string, but you can't set it to <code>null</code>. For more information about tagging,
    ///             see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html">Tagging AWS Organizations
    ///                 resources</a> in the AWS Organizations User Guide.</p>
    ///         <note>
    ///             <p>If any one of the tags is invalid or if you exceed the allowed number of tags for
    ///                 an OU, then the entire request fails and the OU is not created.</p>
    ///         </note>
    public let tags: [Tag]?

    public init (
        name: String? = nil,
        parentId: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.name = name
        self.parentId = parentId
        self.tags = tags
    }
}
