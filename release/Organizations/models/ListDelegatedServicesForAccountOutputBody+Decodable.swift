// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDelegatedServicesForAccountOutputBody: Equatable {
    public let delegatedServices: [DelegatedService]?
    public let nextToken: String?
}

extension ListDelegatedServicesForAccountOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case delegatedServices = "DelegatedServices"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatedServicesContainer = try containerValues.decodeIfPresent([DelegatedService].self, forKey: .delegatedServices)
        var delegatedServicesDecoded0:[DelegatedService]? = nil
        if let delegatedServicesContainer = delegatedServicesContainer {
            delegatedServicesDecoded0 = [DelegatedService]()
            for structure0 in delegatedServicesContainer {
                delegatedServicesDecoded0?.append(structure0)
            }
        }
        delegatedServices = delegatedServicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
