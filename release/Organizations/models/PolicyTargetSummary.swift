// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about a root, OU, or account that a policy is attached to.</p>
public struct PolicyTargetSummary: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the policy target.</p>
    ///         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
    ///     Formats Supported by Organizations</a> in the <i>AWS Service Authorization Reference</i>.</p>
    public let arn: String?
    /// <p>The friendly name of the policy target.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     that is used to validate this parameter is a string of any of the characters in the ASCII
    ///     character range.</p>
    public let name: String?
    /// <p>The unique identifier (ID) of the policy target.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for a target ID string requires one of the
    ///     following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Root</b> - A string that begins with "r-" followed by from 4 to 32 lowercase letters or
    ///           digits.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Account</b> - A string that consists of exactly 12 digits.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Organizational unit (OU)</b> - A string that begins with "ou-" followed by from 4 to 32
    ///           lowercase letters or digits (the ID of the root that the OU is in). This string is followed by a second
    ///           "-" dash and from 8 to 32 additional lowercase letters or digits.</p>
    ///             </li>
    ///          </ul>
    public let targetId: String?
    /// <p>The type of the policy target.</p>
    public let type: TargetType?

    public init (
        arn: String? = nil,
        name: String? = nil,
        targetId: String? = nil,
        type: TargetType? = nil
    )
    {
        self.arn = arn
        self.name = name
        self.targetId = targetId
        self.type = type
    }
}
