// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAWSServiceAccessForOrganizationOutputBody: Equatable {
    public let enabledServicePrincipals: [EnabledServicePrincipal]?
    public let nextToken: String?
}

extension ListAWSServiceAccessForOrganizationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case enabledServicePrincipals = "EnabledServicePrincipals"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledServicePrincipalsContainer = try containerValues.decodeIfPresent([EnabledServicePrincipal].self, forKey: .enabledServicePrincipals)
        var enabledServicePrincipalsDecoded0:[EnabledServicePrincipal]? = nil
        if let enabledServicePrincipalsContainer = enabledServicePrincipalsContainer {
            enabledServicePrincipalsDecoded0 = [EnabledServicePrincipal]()
            for structure0 in enabledServicePrincipalsContainer {
                enabledServicePrincipalsDecoded0?.append(structure0)
            }
        }
        enabledServicePrincipals = enabledServicePrincipalsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
