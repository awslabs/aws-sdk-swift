// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountsForParentOutputBody: Equatable {
    public let accounts: [Account]?
    public let nextToken: String?
}

extension ListAccountsForParentOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accounts = "Accounts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountsContainer = try containerValues.decodeIfPresent([Account].self, forKey: .accounts)
        var accountsDecoded0:[Account]? = nil
        if let accountsContainer = accountsContainer {
            accountsDecoded0 = [Account]()
            for structure0 in accountsContainer {
                accountsDecoded0?.append(structure0)
            }
        }
        accounts = accountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
