// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum HandshakeResourceType {
    case account
    case email
    case masterEmail
    case masterName
    case notes
    case organization
    case organizationFeatureSet
    case parentHandshake
    case sdkUnknown(String)
}

extension HandshakeResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HandshakeResourceType] {
        return [
            .account,
            .email,
            .masterEmail,
            .masterName,
            .notes,
            .organization,
            .organizationFeatureSet,
            .parentHandshake,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .account: return "ACCOUNT"
        case .email: return "EMAIL"
        case .masterEmail: return "MASTER_EMAIL"
        case .masterName: return "MASTER_NAME"
        case .notes: return "NOTES"
        case .organization: return "ORGANIZATION"
        case .organizationFeatureSet: return "ORGANIZATION_FEATURE_SET"
        case .parentHandshake: return "PARENT_HANDSHAKE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HandshakeResourceType(rawValue: rawValue) ?? HandshakeResourceType.sdkUnknown(rawValue)
    }
}
