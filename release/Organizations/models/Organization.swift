// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains details about an organization. An organization is a collection of accounts
///             that are centrally managed together using consolidated billing, organized hierarchically
///             with organizational units (OUs), and controlled with policies .</p>
public struct Organization: Equatable {
    /// <p>The Amazon Resource Name (ARN) of an organization.</p>
    ///         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
    ///     Formats Supported by Organizations</a> in the <i>AWS Service Authorization Reference</i>.</p>
    public let arn: String?
    /// <important>
    ///             <p>Do not use. This field is deprecated and doesn't provide complete information
    ///                 about the policies in your organization.</p>
    ///         </important>
    ///         <p>To determine the policies that are enabled and available for use in your organization,
    ///             use the <a>ListRoots</a> operation instead.</p>
    public let availablePolicyTypes: [PolicyTypeSummary]?
    /// <p>Specifies the functionality that currently is available to the organization. If set to
    ///             "ALL", then all features are enabled and policies can be applied to accounts in the
    ///             organization. If set to "CONSOLIDATED_BILLING", then only consolidated billing
    ///             functionality is available. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">Enabling All Features
    ///                 in Your Organization</a> in the <i>AWS Organizations User Guide</i>.</p>
    public let featureSet: OrganizationFeatureSet?
    /// <p>The unique identifier (ID) of an organization.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an organization ID string requires "o-"
    ///     followed by from 10 to 32 lowercase letters or digits.</p>
    public let id: String?
    /// <p>The Amazon Resource Name (ARN) of the account that is designated as the management
    ///             account for the organization.</p>
    ///         <p>For more information about ARNs in Organizations, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsorganizations.html#awsorganizations-resources-for-iam-policies">ARN
    ///     Formats Supported by Organizations</a> in the <i>AWS Service Authorization Reference</i>.</p>
    public let masterAccountArn: String?
    /// <p>The email address that is associated with the AWS account that is designated as the
    ///             management account for the organization.</p>
    public let masterAccountEmail: String?
    /// <p>The unique identifier (ID) of the management account of an organization.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> for an account ID string requires exactly 12
    ///     digits.</p>
    public let masterAccountId: String?

    public init (
        arn: String? = nil,
        availablePolicyTypes: [PolicyTypeSummary]? = nil,
        featureSet: OrganizationFeatureSet? = nil,
        id: String? = nil,
        masterAccountArn: String? = nil,
        masterAccountEmail: String? = nil,
        masterAccountId: String? = nil
    )
    {
        self.arn = arn
        self.availablePolicyTypes = availablePolicyTypes
        self.featureSet = featureSet
        self.id = id
        self.masterAccountArn = masterAccountArn
        self.masterAccountEmail = masterAccountEmail
        self.masterAccountId = masterAccountId
    }
}
