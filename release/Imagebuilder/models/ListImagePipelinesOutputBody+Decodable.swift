// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImagePipelinesOutputBody: Equatable {
    public let requestId: String?
    public let imagePipelineList: [ImagePipeline]?
    public let nextToken: String?
}

extension ListImagePipelinesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imagePipelineList
        case nextToken
        case requestId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let imagePipelineListContainer = try containerValues.decodeIfPresent([ImagePipeline].self, forKey: .imagePipelineList)
        var imagePipelineListDecoded0:[ImagePipeline]? = nil
        if let imagePipelineListContainer = imagePipelineListContainer {
            imagePipelineListDecoded0 = [ImagePipeline]()
            for structure0 in imagePipelineListContainer {
                imagePipelineListDecoded0?.append(structure0)
            }
        }
        imagePipelineList = imagePipelineListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
