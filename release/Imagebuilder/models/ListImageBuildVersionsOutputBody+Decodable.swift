// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImageBuildVersionsOutputBody: Equatable {
    public let requestId: String?
    public let imageSummaryList: [ImageSummary]?
    public let nextToken: String?
}

extension ListImageBuildVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageSummaryList
        case nextToken
        case requestId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let imageSummaryListContainer = try containerValues.decodeIfPresent([ImageSummary].self, forKey: .imageSummaryList)
        var imageSummaryListDecoded0:[ImageSummary]? = nil
        if let imageSummaryListContainer = imageSummaryListContainer {
            imageSummaryListDecoded0 = [ImageSummary]()
            for structure0 in imageSummaryListContainer {
                imageSummaryListDecoded0?.append(structure0)
            }
        }
        imageSummaryList = imageSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
