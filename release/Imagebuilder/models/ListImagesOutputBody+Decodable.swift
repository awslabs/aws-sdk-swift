// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImagesOutputBody: Equatable {
    public let requestId: String?
    public let imageVersionList: [ImageVersion]?
    public let nextToken: String?
}

extension ListImagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageVersionList
        case nextToken
        case requestId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let imageVersionListContainer = try containerValues.decodeIfPresent([ImageVersion].self, forKey: .imageVersionList)
        var imageVersionListDecoded0:[ImageVersion]? = nil
        if let imageVersionListContainer = imageVersionListContainer {
            imageVersionListDecoded0 = [ImageVersion]()
            for structure0 in imageVersionListContainer {
                imageVersionListDecoded0?.append(structure0)
            }
        }
        imageVersionList = imageVersionListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
