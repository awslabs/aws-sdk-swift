// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateImageInputBody: Equatable {
    public let imageRecipeArn: String?
    public let containerRecipeArn: String?
    public let distributionConfigurationArn: String?
    public let infrastructureConfigurationArn: String?
    public let imageTestsConfiguration: ImageTestsConfiguration?
    public let enhancedImageMetadataEnabled: Bool?
    public let tags: [String:String]?
    public let clientToken: String?
}

extension CreateImageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case containerRecipeArn
        case distributionConfigurationArn
        case enhancedImageMetadataEnabled
        case imageRecipeArn
        case imageTestsConfiguration
        case infrastructureConfigurationArn
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageRecipeArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageRecipeArn)
        imageRecipeArn = imageRecipeArnDecoded
        let containerRecipeArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .containerRecipeArn)
        containerRecipeArn = containerRecipeArnDecoded
        let distributionConfigurationArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .distributionConfigurationArn)
        distributionConfigurationArn = distributionConfigurationArnDecoded
        let infrastructureConfigurationArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .infrastructureConfigurationArn)
        infrastructureConfigurationArn = infrastructureConfigurationArnDecoded
        let imageTestsConfigurationDecoded = try containerValues.decodeIfPresent(ImageTestsConfiguration.self, forKey: .imageTestsConfiguration)
        imageTestsConfiguration = imageTestsConfigurationDecoded
        let enhancedImageMetadataEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enhancedImageMetadataEnabled)
        enhancedImageMetadataEnabled = enhancedImageMetadataEnabledDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
