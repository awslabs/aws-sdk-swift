// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImagesInputBody: Equatable {
    public let owner: Ownership?
    public let filters: [Filter]?
    public let byName: Bool
    public let maxResults: Int
    public let nextToken: String?
    public let includeDeprecated: Bool?
}

extension ListImagesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case byName
        case filters
        case includeDeprecated
        case maxResults
        case nextToken
        case owner
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ownerDecoded = try containerValues.decodeIfPresent(Ownership.self, forKey: .owner)
        owner = ownerDecoded
        let filtersContainer = try containerValues.decodeIfPresent([Filter].self, forKey: .filters)
        var filtersDecoded0:[Filter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [Filter]()
            for structure0 in filtersContainer {
                filtersDecoded0?.append(structure0)
            }
        }
        filters = filtersDecoded0
        let byNameDecoded = try containerValues.decode(Bool.self, forKey: .byName)
        byName = byNameDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let includeDeprecatedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .includeDeprecated)
        includeDeprecated = includeDeprecatedDecoded
    }
}
