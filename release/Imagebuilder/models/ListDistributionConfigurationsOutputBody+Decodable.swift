// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDistributionConfigurationsOutputBody: Equatable {
    public let requestId: String?
    public let distributionConfigurationSummaryList: [DistributionConfigurationSummary]?
    public let nextToken: String?
}

extension ListDistributionConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case distributionConfigurationSummaryList
        case nextToken
        case requestId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let distributionConfigurationSummaryListContainer = try containerValues.decodeIfPresent([DistributionConfigurationSummary].self, forKey: .distributionConfigurationSummaryList)
        var distributionConfigurationSummaryListDecoded0:[DistributionConfigurationSummary]? = nil
        if let distributionConfigurationSummaryListContainer = distributionConfigurationSummaryListContainer {
            distributionConfigurationSummaryListDecoded0 = [DistributionConfigurationSummary]()
            for structure0 in distributionConfigurationSummaryListContainer {
                distributionConfigurationSummaryListDecoded0?.append(structure0)
            }
        }
        distributionConfigurationSummaryList = distributionConfigurationSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
