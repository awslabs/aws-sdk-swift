// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An image build version.</p>
public struct Image: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the image.</p>
    public let arn: String?
    /// <p>The container recipe used to create the container image type.</p>
    public let containerRecipe: ContainerRecipe?
    /// <p>The date on which this image was created.</p>
    public let dateCreated: String?
    /// <p>The distribution configuration used when creating this image.</p>
    public let distributionConfiguration: DistributionConfiguration?
    /// <p> Collects additional information about the image being created, including the operating
    ///       system (OS) version and package list. This information is used to enhance the overall
    ///       experience of using EC2 Image Builder. Enabled by default.</p>
    public let enhancedImageMetadataEnabled: Bool?
    /// <p>The image recipe used when creating the image.</p>
    public let imageRecipe: ImageRecipe?
    /// <p>The image tests configuration used when creating this image.</p>
    public let imageTestsConfiguration: ImageTestsConfiguration?
    /// <p>The infrastructure used when creating this image.</p>
    public let infrastructureConfiguration: InfrastructureConfiguration?
    /// <p>The name of the image.</p>
    public let name: String?
    /// <p>The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or
    ///       Microsoft Windows Server 2019.</p>
    public let osVersion: String?
    /// <p>The output resources produced when creating this image.</p>
    public let outputResources: OutputResources?
    /// <p>The platform of the image.</p>
    public let platform: Platform?
    /// <p>The Amazon Resource Name (ARN) of the image pipeline that created this image.</p>
    public let sourcePipelineArn: String?
    /// <p>The name of the image pipeline that created this image.</p>
    public let sourcePipelineName: String?
    /// <p>The state of the image.</p>
    public let state: ImageState?
    /// <p>The tags of the image.</p>
    public let tags: [String:String]?
    /// <p>Specifies whether this is an AMI or container image.</p>
    public let type: ImageType?
    /// <p>The semantic version of the image.</p>
    public let version: String?

    public init (
        arn: String? = nil,
        containerRecipe: ContainerRecipe? = nil,
        dateCreated: String? = nil,
        distributionConfiguration: DistributionConfiguration? = nil,
        enhancedImageMetadataEnabled: Bool? = nil,
        imageRecipe: ImageRecipe? = nil,
        imageTestsConfiguration: ImageTestsConfiguration? = nil,
        infrastructureConfiguration: InfrastructureConfiguration? = nil,
        name: String? = nil,
        osVersion: String? = nil,
        outputResources: OutputResources? = nil,
        platform: Platform? = nil,
        sourcePipelineArn: String? = nil,
        sourcePipelineName: String? = nil,
        state: ImageState? = nil,
        tags: [String:String]? = nil,
        type: ImageType? = nil,
        version: String? = nil
    )
    {
        self.arn = arn
        self.containerRecipe = containerRecipe
        self.dateCreated = dateCreated
        self.distributionConfiguration = distributionConfiguration
        self.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled
        self.imageRecipe = imageRecipe
        self.imageTestsConfiguration = imageTestsConfiguration
        self.infrastructureConfiguration = infrastructureConfiguration
        self.name = name
        self.osVersion = osVersion
        self.outputResources = outputResources
        self.platform = platform
        self.sourcePipelineArn = sourcePipelineArn
        self.sourcePipelineName = sourcePipelineName
        self.state = state
        self.tags = tags
        self.type = type
        self.version = version
    }
}
