// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateInfrastructureConfigurationInput: Equatable {
    /// <p>The idempotency token used to make this request idempotent.</p>
    public var clientToken: String?
    /// <p>The description of the infrastructure configuration.</p>
    public let description: String?
    /// <p>The instance profile to associate with the instance used to customize your EC2 AMI.</p>
    public let instanceProfileName: String?
    /// <p>The instance types of the infrastructure configuration. You can specify one or more
    ///       instance types to use for this build. The service will pick one of these instance types based
    ///       on availability.</p>
    public let instanceTypes: [String]?
    /// <p>The key pair of the infrastructure configuration. This can be used to log on to and debug
    ///       the instance used to create your image.</p>
    public let keyPair: String?
    /// <p>The logging configuration of the infrastructure configuration.</p>
    public let logging: Logging?
    /// <p>The name of the infrastructure configuration.</p>
    public let name: String?
    /// <p>The tags attached to the resource created by Image Builder.</p>
    public let resourceTags: [String:String]?
    /// <p>The security group IDs to associate with the instance used to customize your EC2 AMI.</p>
    public let securityGroupIds: [String]?
    /// <p>The SNS topic on which to send image build events.</p>
    public let snsTopicArn: String?
    /// <p>The subnet ID in which to place the instance used to customize your EC2 AMI.</p>
    public let subnetId: String?
    /// <p>The tags of the infrastructure configuration.</p>
    public let tags: [String:String]?
    /// <p>The terminate instance on failure setting of the infrastructure configuration. Set to
    ///       false if you want Image Builder to retain the instance used to configure your AMI if the build
    ///       or test phase of your workflow fails.</p>
    public let terminateInstanceOnFailure: Bool?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        instanceProfileName: String? = nil,
        instanceTypes: [String]? = nil,
        keyPair: String? = nil,
        logging: Logging? = nil,
        name: String? = nil,
        resourceTags: [String:String]? = nil,
        securityGroupIds: [String]? = nil,
        snsTopicArn: String? = nil,
        subnetId: String? = nil,
        tags: [String:String]? = nil,
        terminateInstanceOnFailure: Bool? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.instanceProfileName = instanceProfileName
        self.instanceTypes = instanceTypes
        self.keyPair = keyPair
        self.logging = logging
        self.name = name
        self.resourceTags = resourceTags
        self.securityGroupIds = securityGroupIds
        self.snsTopicArn = snsTopicArn
        self.subnetId = subnetId
        self.tags = tags
        self.terminateInstanceOnFailure = terminateInstanceOnFailure
    }
}
