// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImagePackage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case packageName
        case packageVersion
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let packageName = packageName {
            try encodeContainer.encode(packageName, forKey: .packageName)
        }
        if let packageVersion = packageVersion {
            try encodeContainer.encode(packageVersion, forKey: .packageVersion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .packageName)
        packageName = packageNameDecoded
        let packageVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .packageVersion)
        packageVersion = packageVersionDecoded
    }
}
