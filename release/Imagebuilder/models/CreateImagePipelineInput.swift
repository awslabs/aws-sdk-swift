// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateImagePipelineInput: Equatable {
    /// <p> The idempotency token used to make this request idempotent.</p>
    public var clientToken: String?
    /// <p>The Amazon Resource Name (ARN) of the container recipe that is used to configure images created by this container pipeline.</p>
    public let containerRecipeArn: String?
    /// <p> The description of the image pipeline.</p>
    public let description: String?
    /// <p> The Amazon Resource Name (ARN) of the distribution configuration that will be used to
    ///       configure and distribute images created by this image pipeline.</p>
    public let distributionConfigurationArn: String?
    /// <p> Collects additional information about the image being created, including the operating
    ///       system (OS) version and package list. This information is used to enhance the overall
    ///       experience of using EC2 Image Builder. Enabled by default.</p>
    public let enhancedImageMetadataEnabled: Bool?
    /// <p> The Amazon Resource Name (ARN) of the image recipe that will be used to configure images
    ///       created by this image pipeline.</p>
    public let imageRecipeArn: String?
    /// <p> The image test configuration of the image pipeline.</p>
    public let imageTestsConfiguration: ImageTestsConfiguration?
    /// <p> The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to
    ///       build images created by this image pipeline.</p>
    public let infrastructureConfigurationArn: String?
    /// <p> The name of the image pipeline.</p>
    public let name: String?
    /// <p> The schedule of the image pipeline.</p>
    public let schedule: Schedule?
    /// <p> The status of the image pipeline.</p>
    public let status: PipelineStatus?
    /// <p> The tags of the image pipeline.</p>
    public let tags: [String:String]?

    public init (
        clientToken: String? = nil,
        containerRecipeArn: String? = nil,
        description: String? = nil,
        distributionConfigurationArn: String? = nil,
        enhancedImageMetadataEnabled: Bool? = nil,
        imageRecipeArn: String? = nil,
        imageTestsConfiguration: ImageTestsConfiguration? = nil,
        infrastructureConfigurationArn: String? = nil,
        name: String? = nil,
        schedule: Schedule? = nil,
        status: PipelineStatus? = nil,
        tags: [String:String]? = nil
    )
    {
        self.clientToken = clientToken
        self.containerRecipeArn = containerRecipeArn
        self.description = description
        self.distributionConfigurationArn = distributionConfigurationArn
        self.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled
        self.imageRecipeArn = imageRecipeArn
        self.imageTestsConfiguration = imageTestsConfiguration
        self.infrastructureConfigurationArn = infrastructureConfigurationArn
        self.name = name
        self.schedule = schedule
        self.status = status
        self.tags = tags
    }
}
