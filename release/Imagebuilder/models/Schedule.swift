// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A schedule configures how often and when a pipeline will automatically create a new image.</p>
public struct Schedule: Equatable {
    /// <p>The condition configures when the pipeline should trigger a new image build. When the
    ///         <code>pipelineExecutionStartCondition</code> is set to
    ///         <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, and you use semantic version
    ///       filters on the source image or components in your image recipe, EC2 Image Builder will build a
    ///       new image only when there are new versions of the image or components in your recipe that
    ///       match the semantic version filter. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it
    ///       will build a new image every time the CRON expression matches the current time. For semantic
    ///       version syntax, see <a href="https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html">CreateComponent</a> in the <i> EC2 Image Builder API
    ///       Reference</i>.</p>
    public let pipelineExecutionStartCondition: PipelineExecutionStartCondition?
    /// <p>The cron expression determines how often EC2 Image Builder evaluates your
    ///         <code>pipelineExecutionStartCondition</code>.</p>
    ///          <p>For information on how to format a cron expression in Image Builder, see <a href="https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html">Use cron
    ///         expressions in EC2 Image Builder</a>.</p>
    public let scheduleExpression: String?
    /// <p>The timezone that applies to the scheduling expression. For example, "Etc/UTC",
    ///       "America/Los_Angeles" in the <a href="https://www.joda.org/joda-time/timezones.html">IANA
    ///         timezone format</a>. If not specified this defaults to UTC.</p>
    public let timezone: String?

    public init (
        pipelineExecutionStartCondition: PipelineExecutionStartCondition? = nil,
        scheduleExpression: String? = nil,
        timezone: String? = nil
    )
    {
        self.pipelineExecutionStartCondition = pipelineExecutionStartCondition
        self.scheduleExpression = scheduleExpression
        self.timezone = timezone
    }
}
