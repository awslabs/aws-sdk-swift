// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeStatementOutput: Equatable {
    /// <p>The cluster identifier. </p>
    public let clusterIdentifier: String?
    /// <p>The date and time (UTC) when the SQL statement was submitted to run. </p>
    public let createdAt: Date?
    /// <p>The name of the database. </p>
    public let database: String?
    /// <p>The database user name. </p>
    public let dbUser: String?
    /// <p>The amount of time in nanoseconds that the statement ran. </p>
    public let duration: Int
    /// <p>The error message from the cluster if the SQL statement encountered an error while running. </p>
    public let error: String?
    /// <p>A value that indicates whether the statement has a result set. The result set can be empty. </p>
    public let hasResultSet: Bool?
    /// <p>The identifier of the SQL statement described. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. </p>
    public let id: String?
    /// <p>The SQL statement text. </p>
    public let queryString: String?
    /// <p>The process identifier from Amazon Redshift. </p>
    public let redshiftPid: Int
    /// <p>The identifier of the query generated by Amazon Redshift.
    ///       These identifiers are also available in the <code>query</code> column of the <code>STL_QUERY</code> system view. </p>
    public let redshiftQueryId: Int
    /// <p>Either the number of rows returned from the SQL statement or the number of rows affected.
    ///        If result size is greater than zero, the result rows can be the number of rows affected by SQL statements such as INSERT, UPDATE, DELETE, COPY, and others. </p>
    public let resultRows: Int
    /// <p>The size in bytes of the returned results. </p>
    public let resultSize: Int
    /// <p>The name or Amazon Resource Name (ARN) of the secret that enables access to the database. </p>
    public let secretArn: String?
    /// <p>The status of the SQL statement being described. Status values are defined as follows: </p>
    ///          <ul>
    ///             <li>
    ///                <p>ABORTED - The query run was stopped by the user. </p>
    ///             </li>
    ///             <li>
    ///                <p>ALL -  A status value that includes all query statuses. This value can be used to filter results. </p>
    ///             </li>
    ///             <li>
    ///                <p>FAILED - The query run failed. </p>
    ///             </li>
    ///             <li>
    ///                <p>FINISHED - The query has finished running. </p>
    ///             </li>
    ///             <li>
    ///                <p>PICKED - The query has been chosen to be run. </p>
    ///             </li>
    ///             <li>
    ///                <p>STARTED - The query run has started. </p>
    ///             </li>
    ///             <li>
    ///                <p>SUBMITTED - The query was submitted, but not yet processed. </p>
    ///             </li>
    ///          </ul>
    public let status: StatusString?
    /// <p>The date and time (UTC) that the metadata for the SQL statement was last updated. An
    ///       example is the time the status last changed. </p>
    public let updatedAt: Date?

    public init (
        clusterIdentifier: String? = nil,
        createdAt: Date? = nil,
        database: String? = nil,
        dbUser: String? = nil,
        duration: Int = 0,
        error: String? = nil,
        hasResultSet: Bool? = nil,
        id: String? = nil,
        queryString: String? = nil,
        redshiftPid: Int = 0,
        redshiftQueryId: Int = 0,
        resultRows: Int = 0,
        resultSize: Int = 0,
        secretArn: String? = nil,
        status: StatusString? = nil,
        updatedAt: Date? = nil
    )
    {
        self.clusterIdentifier = clusterIdentifier
        self.createdAt = createdAt
        self.database = database
        self.dbUser = dbUser
        self.duration = duration
        self.error = error
        self.hasResultSet = hasResultSet
        self.id = id
        self.queryString = queryString
        self.redshiftPid = redshiftPid
        self.redshiftQueryId = redshiftQueryId
        self.resultRows = resultRows
        self.resultSize = resultSize
        self.secretArn = secretArn
        self.status = status
        self.updatedAt = updatedAt
    }
}
