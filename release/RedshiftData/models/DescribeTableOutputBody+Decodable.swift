// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTableOutputBody: Equatable {
    public let tableName: String?
    public let columnList: [ColumnMetadata]?
    public let nextToken: String?
}

extension DescribeTableOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case columnList = "ColumnList"
        case nextToken = "NextToken"
        case tableName = "TableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let columnListContainer = try containerValues.decodeIfPresent([ColumnMetadata].self, forKey: .columnList)
        var columnListDecoded0:[ColumnMetadata]? = nil
        if let columnListContainer = columnListContainer {
            columnListDecoded0 = [ColumnMetadata]()
            for structure0 in columnListContainer {
                columnListDecoded0?.append(structure0)
            }
        }
        columnList = columnListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
