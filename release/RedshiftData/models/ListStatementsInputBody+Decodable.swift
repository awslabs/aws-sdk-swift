// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStatementsInputBody: Equatable {
    public let nextToken: String?
    public let maxResults: Int
    public let statementName: String?
    public let status: StatusString?
    public let roleLevel: Bool?
}

extension ListStatementsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case roleLevel = "RoleLevel"
        case statementName = "StatementName"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statementNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statementName)
        statementName = statementNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(StatusString.self, forKey: .status)
        status = statusDecoded
        let roleLevelDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .roleLevel)
        roleLevel = roleLevelDecoded
    }
}
