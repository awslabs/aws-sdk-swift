// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>You can use the Amazon Redshift Data API to run queries on Amazon Redshift tables. You
///       can run individual SQL statements, which are committed if the statement succeeds. </p>
///          <p>For more information about the Amazon Redshift Data API, see
///        <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/data-api.html">Using the Amazon Redshift Data API</a> in the
///        <i>Amazon Redshift Cluster Management Guide</i>. </p>
public protocol RedshiftDataClientProtocol {
    /// <p>Cancels a running query. To be canceled, a query must be running. </p>
    func cancelStatement(input: CancelStatementInput, completion: @escaping (SdkResult<CancelStatementOutputResponse, CancelStatementOutputError>) -> Void)
    /// <p>Describes the details about a specific instance when a query was run by the Amazon Redshift Data API. The information
    ///       includes when the query started, when it finished, the query status, the number of rows returned, and the SQL
    ///       statement. </p>
    func describeStatement(input: DescribeStatementInput, completion: @escaping (SdkResult<DescribeStatementOutputResponse, DescribeStatementOutputError>) -> Void)
    /// <p>Describes the detailed information about a table from metadata in the cluster. The
    ///       information includes its columns.
    ///       A token is returned to page through the column list.
    ///       Depending on the authorization method, use one of the
    ///       following combinations of request parameters: </p>
    ///          <ul>
    ///             <li>
    ///                <p>AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the secret and the
    ///          cluster identifier that matches the cluster in the secret. </p>
    ///             </li>
    ///             <li>
    ///                <p>Temporary credentials - specify the cluster identifier, the database name, and the database
    ///           user name. Permission to call the <code>redshift:GetClusterCredentials</code> operation is
    ///           required to use this method. </p>
    ///             </li>
    ///          </ul>
    func describeTable(input: DescribeTableInput, completion: @escaping (SdkResult<DescribeTableOutputResponse, DescribeTableOutputError>) -> Void)
    /// <p>Runs an SQL statement, which can be data manipulation language (DML) or data definition
    ///       language (DDL). This statement must be a single SQL statement.
    ///       Depending on the authorization
    ///       method, use one of the following combinations of request parameters: </p>
    ///          <ul>
    ///             <li>
    ///                <p>AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the secret and the
    ///          cluster identifier that matches the cluster in the secret. </p>
    ///             </li>
    ///             <li>
    ///                <p>Temporary credentials - specify the cluster identifier, the database name, and the
    ///           database user name. Permission to call the <code>redshift:GetClusterCredentials</code>
    ///           operation is required to use this method. </p>
    ///             </li>
    ///          </ul>
    func executeStatement(input: ExecuteStatementInput, completion: @escaping (SdkResult<ExecuteStatementOutputResponse, ExecuteStatementOutputError>) -> Void)
    /// <p>Fetches the temporarily cached result of an SQL statement.
    ///        A token is returned to page through the statement results. </p>
    func getStatementResult(input: GetStatementResultInput, completion: @escaping (SdkResult<GetStatementResultOutputResponse, GetStatementResultOutputError>) -> Void)
    /// <p>List the databases in a cluster.
    ///       A token is returned to page through the database list.
    ///       Depending on the authorization method, use one of the
    ///       following combinations of request parameters: </p>
    ///          <ul>
    ///             <li>
    ///                <p>AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the secret and the
    ///          cluster identifier that matches the cluster in the secret. </p>
    ///             </li>
    ///             <li>
    ///                <p>Temporary credentials - specify the cluster identifier, the database name, and the
    ///           database user name. Permission to call the <code>redshift:GetClusterCredentials</code>
    ///           operation is required to use this method. </p>
    ///             </li>
    ///          </ul>
    func listDatabases(input: ListDatabasesInput, completion: @escaping (SdkResult<ListDatabasesOutputResponse, ListDatabasesOutputError>) -> Void)
    /// <p>Lists the schemas in a database.
    ///       A token is returned to page through the schema list.
    ///       Depending on the authorization method, use one of the
    ///       following combinations of request parameters: </p>
    ///          <ul>
    ///             <li>
    ///                <p>AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the secret and the
    ///          cluster identifier that matches the cluster in the secret. </p>
    ///             </li>
    ///             <li>
    ///                <p>Temporary credentials - specify the cluster identifier, the database name, and the
    ///           database user name. Permission to call the <code>redshift:GetClusterCredentials</code>
    ///           operation is required to use this method. </p>
    ///             </li>
    ///          </ul>
    func listSchemas(input: ListSchemasInput, completion: @escaping (SdkResult<ListSchemasOutputResponse, ListSchemasOutputError>) -> Void)
    /// <p>List of SQL statements. By default, only finished statements are shown.
    ///         A token is returned to page through the statement list. </p>
    func listStatements(input: ListStatementsInput, completion: @escaping (SdkResult<ListStatementsOutputResponse, ListStatementsOutputError>) -> Void)
    /// <p>List the tables in a database. If neither <code>SchemaPattern</code> nor <code>TablePattern</code> are specified, then
    ///        all tables in the database are returned.
    ///       A token is returned to page through the table list.
    ///       Depending on the authorization method, use one of the
    ///       following combinations of request parameters: </p>
    ///          <ul>
    ///             <li>
    ///                <p>AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the secret and the
    ///          cluster identifier that matches the cluster in the secret. </p>
    ///             </li>
    ///             <li>
    ///                <p>Temporary credentials - specify the cluster identifier, the database name, and the
    ///           database user name. Permission to call the <code>redshift:GetClusterCredentials</code>
    ///           operation is required to use this method. </p>
    ///             </li>
    ///          </ul>
    func listTables(input: ListTablesInput, completion: @escaping (SdkResult<ListTablesOutputResponse, ListTablesOutputError>) -> Void)
}
