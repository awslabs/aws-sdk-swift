// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Indicates whether the account is compliant with the specified policy. An account is
///       considered noncompliant if it includes resources that are not protected by the policy, for AWS
///       WAF and Shield Advanced policies, or that are noncompliant with the policy, for security group
///       policies.</p>
public struct PolicyComplianceStatus: Equatable {
    /// <p>An array of <code>EvaluationResult</code> objects.</p>
    public let evaluationResults: [EvaluationResult]?
    /// <p>Details about problems with dependent services, such as AWS WAF or AWS Config, that are
    ///       causing a resource to be noncompliant. The details include the name of the dependent service
    ///       and the error message received that indicates the problem with the service.</p>
    public let issueInfoMap: [String:String]?
    /// <p>Timestamp of the last update to the <code>EvaluationResult</code> objects.</p>
    public let lastUpdated: Date?
    /// <p>The member account ID.</p>
    public let memberAccount: String?
    /// <p>The ID of the AWS Firewall Manager policy.</p>
    public let policyId: String?
    /// <p>The name of the AWS Firewall Manager policy.</p>
    public let policyName: String?
    /// <p>The AWS account that created the AWS Firewall Manager policy.</p>
    public let policyOwner: String?

    public init (
        evaluationResults: [EvaluationResult]? = nil,
        issueInfoMap: [String:String]? = nil,
        lastUpdated: Date? = nil,
        memberAccount: String? = nil,
        policyId: String? = nil,
        policyName: String? = nil,
        policyOwner: String? = nil
    )
    {
        self.evaluationResults = evaluationResults
        self.issueInfoMap = issueInfoMap
        self.lastUpdated = lastUpdated
        self.memberAccount = memberAccount
        self.policyId = policyId
        self.policyName = policyName
        self.policyOwner = policyOwner
    }
}
