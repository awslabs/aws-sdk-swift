// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListComplianceStatusOutputBody: Equatable {
    public let policyComplianceStatusList: [PolicyComplianceStatus]?
    public let nextToken: String?
}

extension ListComplianceStatusOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case policyComplianceStatusList = "PolicyComplianceStatusList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyComplianceStatusListContainer = try containerValues.decodeIfPresent([PolicyComplianceStatus].self, forKey: .policyComplianceStatusList)
        var policyComplianceStatusListDecoded0:[PolicyComplianceStatus]? = nil
        if let policyComplianceStatusListContainer = policyComplianceStatusListContainer {
            policyComplianceStatusListDecoded0 = [PolicyComplianceStatus]()
            for structure0 in policyComplianceStatusListContainer {
                policyComplianceStatusListDecoded0?.append(structure0)
            }
        }
        policyComplianceStatusList = policyComplianceStatusListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
