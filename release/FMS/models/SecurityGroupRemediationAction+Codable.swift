// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SecurityGroupRemediationAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case isDefaultAction = "IsDefaultAction"
        case remediationActionType = "RemediationActionType"
        case remediationResult = "RemediationResult"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if isDefaultAction != false {
            try encodeContainer.encode(isDefaultAction, forKey: .isDefaultAction)
        }
        if let remediationActionType = remediationActionType {
            try encodeContainer.encode(remediationActionType.rawValue, forKey: .remediationActionType)
        }
        if let remediationResult = remediationResult {
            try encodeContainer.encode(remediationResult, forKey: .remediationResult)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let remediationActionTypeDecoded = try containerValues.decodeIfPresent(RemediationActionType.self, forKey: .remediationActionType)
        remediationActionType = remediationActionTypeDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let remediationResultDecoded = try containerValues.decodeIfPresent(SecurityGroupRuleDescription.self, forKey: .remediationResult)
        remediationResult = remediationResultDecoded
        let isDefaultActionDecoded = try containerValues.decode(Bool.self, forKey: .isDefaultAction)
        isDefaultAction = isDefaultActionDecoded
    }
}
