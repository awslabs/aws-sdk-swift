// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetProtectionStatusInput: Equatable {
    /// <p>The end of the time period to query for the attacks. This is a <code>timestamp</code> type. The
    ///          request syntax listing indicates a <code>number</code> type because the default used by AWS Firewall
    ///          Manager is Unix time in seconds. However, any valid <code>timestamp</code> format is
    ///          allowed.</p>
    public let endTime: Date?
    /// <p>Specifies the number of objects that you want AWS Firewall Manager to return for this request. If you have more
    ///         objects than the number that you specify for <code>MaxResults</code>, the response includes a
    ///          <code>NextToken</code> value that you can use to get another batch of objects.</p>
    public let maxResults: Int?
    /// <p>The AWS account that is in scope of the policy that you want to get the details
    ///          for.</p>
    public let memberAccountId: String?
    /// <p>If you specify a value for <code>MaxResults</code> and you have more objects than the number that you specify
    ///          for <code>MaxResults</code>, AWS Firewall Manager returns a <code>NextToken</code> value in the response, which you can use to retrieve another group of
    ///          objects. For the second and subsequent <code>GetProtectionStatus</code> requests, specify the value of <code>NextToken</code>
    ///          from the previous response to get information about another batch of objects.</p>
    public let nextToken: String?
    /// <p>The ID of the policy for which you want to get the attack information.</p>
    public let policyId: String?
    /// <p>The start of the time period to query for the attacks. This is a <code>timestamp</code> type. The
    ///           request syntax listing indicates a <code>number</code> type because the default used by AWS Firewall
    ///          Manager is Unix time in seconds. However, any valid <code>timestamp</code> format is
    ///          allowed.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        maxResults: Int? = nil,
        memberAccountId: String? = nil,
        nextToken: String? = nil,
        policyId: String? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.maxResults = maxResults
        self.memberAccountId = memberAccountId
        self.nextToken = nextToken
        self.policyId = policyId
        self.startTime = startTime
    }
}
