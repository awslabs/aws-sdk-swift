// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeletePolicyInput: Equatable {
    /// <p>If <code>True</code>, the request performs cleanup according to the policy type. </p>
    ///          <p>For AWS WAF and Shield Advanced policies, the cleanup does the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Deletes rule groups created by AWS Firewall Manager</p>
    ///             </li>
    ///             <li>
    ///                <p>Removes web ACLs from in-scope resources</p>
    ///             </li>
    ///             <li>
    ///                <p>Deletes web ACLs that contain no rules or rule groups</p>
    ///             </li>
    ///          </ul>
    ///          <p>For security group policies, the cleanup does the following for each security group in
    ///       the policy:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Disassociates the security group from in-scope resources </p>
    ///             </li>
    ///             <li>
    ///                <p>Deletes the security group if it was created through Firewall Manager and if it's
    ///           no longer associated with any resources through another policy</p>
    ///             </li>
    ///          </ul>
    ///          <p>After the cleanup, in-scope resources are no longer protected by web ACLs in this policy.
    ///       Protection of out-of-scope resources remains unchanged. Scope is determined by tags that you
    ///       create and accounts that you associate with the policy. When creating the policy, if you
    ///       specify that only resources in specific accounts or with specific tags are in scope of the
    ///       policy, those accounts and resources are handled by the policy. All others are out of scope.
    ///       If you don't specify tags or accounts, all resources are in scope. </p>
    public let deleteAllPolicyResources: Bool
    /// <p>The ID of the policy that you want to delete. You can retrieve this ID from
    ///         <code>PutPolicy</code> and <code>ListPolicies</code>.</p>
    public let policyId: String?

    public init (
        deleteAllPolicyResources: Bool = false,
        policyId: String? = nil
    )
    {
        self.deleteAllPolicyResources = deleteAllPolicyResources
        self.policyId = policyId
    }
}
