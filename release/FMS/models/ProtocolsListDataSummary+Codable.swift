// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProtocolsListDataSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case listArn = "ListArn"
        case listId = "ListId"
        case listName = "ListName"
        case protocolsList = "ProtocolsList"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let listArn = listArn {
            try encodeContainer.encode(listArn, forKey: .listArn)
        }
        if let listId = listId {
            try encodeContainer.encode(listId, forKey: .listId)
        }
        if let listName = listName {
            try encodeContainer.encode(listName, forKey: .listName)
        }
        if let protocolsList = protocolsList {
            var protocolsListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .protocolsList)
            for protocolslist0 in protocolsList {
                try protocolsListContainer.encode(protocolslist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let listArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .listArn)
        listArn = listArnDecoded
        let listIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .listId)
        listId = listIdDecoded
        let listNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .listName)
        listName = listNameDecoded
        let protocolsListContainer = try containerValues.decodeIfPresent([String].self, forKey: .protocolsList)
        var protocolsListDecoded0:[String]? = nil
        if let protocolsListContainer = protocolsListContainer {
            protocolsListDecoded0 = [String]()
            for string0 in protocolsListContainer {
                protocolsListDecoded0?.append(string0)
            }
        }
        protocolsList = protocolsListDecoded0
    }
}
