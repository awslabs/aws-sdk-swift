// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes
///       the noncompliant resources in a member account for a specific AWS Firewall
///       Manager policy. A maximum of 100 entries are displayed. If more than 100 resources are
///       noncompliant, <code>EvaluationLimitExceeded</code> is set to <code>True</code>.</p>
public struct PolicyComplianceDetail: Equatable {
    /// <p>Indicates if over 100 resources are noncompliant with the AWS Firewall Manager
    ///       policy.</p>
    public let evaluationLimitExceeded: Bool
    /// <p>A timestamp that indicates when the returned information should be considered out of
    ///       date.</p>
    public let expiredAt: Date?
    /// <p>Details about problems with dependent services, such as AWS WAF or AWS Config, that are
    ///       causing a resource to be noncompliant. The details include the name of the dependent service
    ///       and the error message received that indicates the problem with the service.</p>
    public let issueInfoMap: [String:String]?
    /// <p>The AWS account ID.</p>
    public let memberAccount: String?
    /// <p>The ID of the AWS Firewall Manager policy.</p>
    public let policyId: String?
    /// <p>The AWS account that created the AWS Firewall Manager policy.</p>
    public let policyOwner: String?
    /// <p>An array of resources that aren't protected by the AWS WAF or Shield Advanced policy or
    ///       that aren't in compliance with the security group policy.</p>
    public let violators: [ComplianceViolator]?

    public init (
        evaluationLimitExceeded: Bool = false,
        expiredAt: Date? = nil,
        issueInfoMap: [String:String]? = nil,
        memberAccount: String? = nil,
        policyId: String? = nil,
        policyOwner: String? = nil,
        violators: [ComplianceViolator]? = nil
    )
    {
        self.evaluationLimitExceeded = evaluationLimitExceeded
        self.expiredAt = expiredAt
        self.issueInfoMap = issueInfoMap
        self.memberAccount = memberAccount
        self.policyId = policyId
        self.policyOwner = policyOwner
        self.violators = violators
    }
}
