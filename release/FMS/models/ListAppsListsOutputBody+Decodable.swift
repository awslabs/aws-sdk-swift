// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppsListsOutputBody: Equatable {
    public let appsLists: [AppsListDataSummary]?
    public let nextToken: String?
}

extension ListAppsListsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appsLists = "AppsLists"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appsListsContainer = try containerValues.decodeIfPresent([AppsListDataSummary].self, forKey: .appsLists)
        var appsListsDecoded0:[AppsListDataSummary]? = nil
        if let appsListsContainer = appsListsContainer {
            appsListsDecoded0 = [AppsListDataSummary]()
            for structure0 in appsListsContainer {
                appsListsDecoded0?.append(structure0)
            }
        }
        appsLists = appsListsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
