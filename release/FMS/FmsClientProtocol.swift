// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>AWS Firewall Manager</fullname>
///          <p>This is the <i>AWS Firewall Manager API Reference</i>. This guide is for
///       developers who need detailed information about the AWS Firewall Manager API actions, data
///       types, and errors. For detailed information about AWS Firewall Manager features, see the
///         <a href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-chapter.html">AWS Firewall Manager Developer Guide</a>.</p>
///          <p>Some API actions require explicit resource permissions. For information, see the developer guide topic
///         <a href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall Manager required permissions for API actions</a>.
/// </p>
public protocol FmsClientProtocol {
    /// <p>Sets the AWS Firewall Manager administrator account. AWS Firewall Manager must be
    ///       associated with the master account of your AWS organization or associated with a member
    ///       account that has the appropriate permissions. If the account ID that you submit is not an AWS
    ///       Organizations master account, AWS Firewall Manager will set the appropriate permissions for
    ///       the given member account.</p>
    ///          <p>The account that you associate with AWS Firewall Manager is called the AWS Firewall
    ///       Manager administrator account. </p>
    func associateAdminAccount(input: AssociateAdminAccountInput, completion: @escaping (SdkResult<AssociateAdminAccountOutputResponse, AssociateAdminAccountOutputError>) -> Void)
    /// <p>Permanently deletes an AWS Firewall Manager applications list.</p>
    func deleteAppsList(input: DeleteAppsListInput, completion: @escaping (SdkResult<DeleteAppsListOutputResponse, DeleteAppsListOutputError>) -> Void)
    /// <p>Deletes an AWS Firewall Manager association with the IAM role and the Amazon Simple
    ///       Notification Service (SNS) topic that is used to record AWS Firewall Manager SNS logs.</p>
    func deleteNotificationChannel(input: DeleteNotificationChannelInput, completion: @escaping (SdkResult<DeleteNotificationChannelOutputResponse, DeleteNotificationChannelOutputError>) -> Void)
    /// <p>Permanently deletes an AWS Firewall Manager policy. </p>
    func deletePolicy(input: DeletePolicyInput, completion: @escaping (SdkResult<DeletePolicyOutputResponse, DeletePolicyOutputError>) -> Void)
    /// <p>Permanently deletes an AWS Firewall Manager protocols list.</p>
    func deleteProtocolsList(input: DeleteProtocolsListInput, completion: @escaping (SdkResult<DeleteProtocolsListOutputResponse, DeleteProtocolsListOutputError>) -> Void)
    /// <p>Disassociates the account that has been set as the AWS Firewall Manager administrator
    ///       account. To set a different account as the administrator account, you must submit an
    ///         <code>AssociateAdminAccount</code> request.</p>
    func disassociateAdminAccount(input: DisassociateAdminAccountInput, completion: @escaping (SdkResult<DisassociateAdminAccountOutputResponse, DisassociateAdminAccountOutputError>) -> Void)
    /// <p>Returns the AWS Organizations master account that is associated with AWS Firewall Manager
    ///       as the AWS Firewall Manager administrator.</p>
    func getAdminAccount(input: GetAdminAccountInput, completion: @escaping (SdkResult<GetAdminAccountOutputResponse, GetAdminAccountOutputError>) -> Void)
    /// <p>Returns information about the specified AWS Firewall Manager applications list.</p>
    func getAppsList(input: GetAppsListInput, completion: @escaping (SdkResult<GetAppsListOutputResponse, GetAppsListOutputError>) -> Void)
    /// <p>Returns detailed compliance information about the specified member account. Details
    ///       include resources that are in and out of compliance with the specified policy. Resources are
    ///       considered noncompliant for AWS WAF and Shield Advanced policies if the specified policy has
    ///       not been applied to them. Resources are considered noncompliant for security group policies if
    ///       they are in scope of the policy, they violate one or more of the policy rules, and remediation
    ///         is disabled or not possible. Resources are considered noncompliant for Network Firewall policies
    ///         if a firewall is missing in the VPC, if the firewall endpoint isn't set up in an expected Availability Zone and subnet,
    ///         if a subnet created by the Firewall Manager doesn't have the expected route table,
    ///         and for modifications to a firewall policy that violate the Firewall Manager policy's rules. </p>
    func getComplianceDetail(input: GetComplianceDetailInput, completion: @escaping (SdkResult<GetComplianceDetailOutputResponse, GetComplianceDetailOutputError>) -> Void)
    /// <p>Information
    ///       about the Amazon Simple Notification Service (SNS) topic that is used to
    ///       record AWS Firewall Manager SNS logs.</p>
    func getNotificationChannel(input: GetNotificationChannelInput, completion: @escaping (SdkResult<GetNotificationChannelOutputResponse, GetNotificationChannelOutputError>) -> Void)
    /// <p>Returns information about the specified AWS Firewall Manager policy.</p>
    func getPolicy(input: GetPolicyInput, completion: @escaping (SdkResult<GetPolicyOutputResponse, GetPolicyOutputError>) -> Void)
    /// <p>If you created a Shield Advanced policy, returns policy-level attack summary information
    ///          in the event of a potential DDoS attack. Other policy types are currently unsupported.</p>
    func getProtectionStatus(input: GetProtectionStatusInput, completion: @escaping (SdkResult<GetProtectionStatusOutputResponse, GetProtectionStatusOutputError>) -> Void)
    /// <p>Returns information about the specified AWS Firewall Manager protocols list.</p>
    func getProtocolsList(input: GetProtocolsListInput, completion: @escaping (SdkResult<GetProtocolsListOutputResponse, GetProtocolsListOutputError>) -> Void)
    /// <p>Retrieves violations for a resource based on the specified AWS Firewall Manager policy and AWS account.</p>
    func getViolationDetails(input: GetViolationDetailsInput, completion: @escaping (SdkResult<GetViolationDetailsOutputResponse, GetViolationDetailsOutputError>) -> Void)
    /// <p>Returns an array of <code>AppsListDataSummary</code> objects.</p>
    func listAppsLists(input: ListAppsListsInput, completion: @escaping (SdkResult<ListAppsListsOutputResponse, ListAppsListsOutputError>) -> Void)
    /// <p>Returns an array of <code>PolicyComplianceStatus</code> objects. Use
    ///         <code>PolicyComplianceStatus</code> to get a summary of which member accounts are protected
    ///       by the specified policy. </p>
    func listComplianceStatus(input: ListComplianceStatusInput, completion: @escaping (SdkResult<ListComplianceStatusOutputResponse, ListComplianceStatusOutputError>) -> Void)
    /// <p>Returns a <code>MemberAccounts</code> object that lists the member accounts in the
    ///       administrator's AWS organization.</p>
    ///          <p>The <code>ListMemberAccounts</code> must be submitted by the account that is set as the
    ///       AWS Firewall Manager administrator.</p>
    func listMemberAccounts(input: ListMemberAccountsInput, completion: @escaping (SdkResult<ListMemberAccountsOutputResponse, ListMemberAccountsOutputError>) -> Void)
    /// <p>Returns an array of <code>PolicySummary</code> objects.</p>
    func listPolicies(input: ListPoliciesInput, completion: @escaping (SdkResult<ListPoliciesOutputResponse, ListPoliciesOutputError>) -> Void)
    /// <p>Returns an array of <code>ProtocolsListDataSummary</code> objects.</p>
    func listProtocolsLists(input: ListProtocolsListsInput, completion: @escaping (SdkResult<ListProtocolsListsOutputResponse, ListProtocolsListsOutputError>) -> Void)
    /// <p>Retrieves the list of tags for the specified AWS resource.   </p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Creates an AWS Firewall Manager applications list.</p>
    func putAppsList(input: PutAppsListInput, completion: @escaping (SdkResult<PutAppsListOutputResponse, PutAppsListOutputError>) -> Void)
    /// <p>Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS
    ///       Firewall Manager uses to record SNS logs.</p>
    ///          <p>To perform this action outside of the console, you must configure the SNS topic to allow the Firewall Manager
    ///       role <code>AWSServiceRoleForFMS</code> to publish SNS logs. For more information, see
    ///       <a href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall Manager required permissions for API actions</a> in the <i>AWS Firewall Manager Developer Guide</i>.</p>
    func putNotificationChannel(input: PutNotificationChannelInput, completion: @escaping (SdkResult<PutNotificationChannelOutputResponse, PutNotificationChannelOutputError>) -> Void)
    /// <p>Creates an AWS Firewall Manager policy.</p>
    ///          <p>Firewall Manager provides the following types of policies: </p>
    ///          <ul>
    ///             <li>
    ///                <p>An AWS WAF policy (type WAFV2), which defines rule groups to run first in the
    ///               corresponding AWS WAF web ACL and rule groups to run last in the web ACL.</p>
    ///             </li>
    ///             <li>
    ///                <p>An AWS WAF Classic policy (type WAF), which defines a rule group. </p>
    ///             </li>
    ///             <li>
    ///                <p>A Shield Advanced policy, which applies Shield Advanced protection to specified
    ///           accounts and resources.</p>
    ///             </li>
    ///             <li>
    ///                <p>A security group policy, which manages VPC security groups across your AWS
    ///           organization. </p>
    ///             </li>
    ///             <li>
    ///                <p>An AWS Network Firewall policy, which provides firewall rules to filter network traffic in specified
    ///           Amazon VPCs.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Each policy is specific to one of the types. If you want to enforce more than one
    ///       policy type across accounts, create multiple policies. You can create multiple
    ///       policies for each type.</p>
    ///          <p>You must be subscribed to Shield Advanced to create a Shield Advanced policy. For more
    ///         information about subscribing to Shield Advanced, see
    ///     <a href="https://docs.aws.amazon.com/waf/latest/DDOSAPIReference/API_CreateSubscription.html">CreateSubscription</a>.</p>
    func putPolicy(input: PutPolicyInput, completion: @escaping (SdkResult<PutPolicyOutputResponse, PutPolicyOutputError>) -> Void)
    /// <p>Creates an AWS Firewall Manager protocols list.</p>
    func putProtocolsList(input: PutProtocolsListInput, completion: @escaping (SdkResult<PutProtocolsListOutputResponse, PutProtocolsListOutputError>) -> Void)
    /// <p>Adds one or more tags to an AWS resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes one or more tags from an AWS resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
}
