// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that represents a retry policy. Specify at least one value for at least one of the types of <code>RetryEvents</code>, a value for <code>maxRetries</code>, and a value for <code>perRetryTimeout</code>.</p>
public struct GrpcRetryPolicy: Equatable {
    /// <p>Specify at least one of the valid values.</p>
    public let grpcRetryEvents: [GrpcRetryPolicyEvent]?
    /// <p>Specify at least one of the following values.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>server-error</b> – HTTP status codes 500, 501,
    ///                   502, 503, 504, 505, 506, 507, 508, 510, and 511</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>gateway-error</b> – HTTP status codes 502,
    ///                   503, and 504</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>client-error</b> – HTTP status code 409</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>stream-error</b> – Retry on refused
    ///                   stream</p>
    ///             </li>
    ///          </ul>
    public let httpRetryEvents: [String]?
    /// <p>The maximum number of retry attempts.</p>
    public let maxRetries: Int?
    /// <p>The timeout for each retry attempt.</p>
    public let perRetryTimeout: Duration?
    /// <p>Specify a valid value. The event occurs before any processing of a request has started and is encountered when the upstream is temporarily or permanently unavailable.</p>
    public let tcpRetryEvents: [TcpRetryPolicyEvent]?

    public init (
        grpcRetryEvents: [GrpcRetryPolicyEvent]? = nil,
        httpRetryEvents: [String]? = nil,
        maxRetries: Int? = nil,
        perRetryTimeout: Duration? = nil,
        tcpRetryEvents: [TcpRetryPolicyEvent]? = nil
    )
    {
        self.grpcRetryEvents = grpcRetryEvents
        self.httpRetryEvents = httpRetryEvents
        self.maxRetries = maxRetries
        self.perRetryTimeout = perRetryTimeout
        self.tcpRetryEvents = tcpRetryEvents
    }
}
