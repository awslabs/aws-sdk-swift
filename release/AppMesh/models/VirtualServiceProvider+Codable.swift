// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VirtualServiceProvider: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sdkUnknown
        case virtualNode
        case virtualRouter
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .virtualNode(virtualNode):
                if let virtualNode = virtualNode {
                    try container.encode(virtualNode, forKey: .virtualNode)
                }
            case let .virtualRouter(virtualRouter):
                if let virtualRouter = virtualRouter {
                    try container.encode(virtualRouter, forKey: .virtualRouter)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let virtualNodeDecoded = try values.decodeIfPresent(VirtualNodeServiceProvider.self, forKey: .virtualNode)
        if let virtualNode = virtualNodeDecoded {
            self = .virtualNode(virtualNode)
            return
        }
        let virtualRouterDecoded = try values.decodeIfPresent(VirtualRouterServiceProvider.self, forKey: .virtualRouter)
        if let virtualRouter = virtualRouterDecoded {
            self = .virtualRouter(virtualRouter)
            return
        }
        self = .sdkUnknown("")
    }
}
