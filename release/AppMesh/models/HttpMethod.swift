// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum HttpMethod {
    case connect
    case delete
    case `get`
    case head
    case options
    case patch
    case post
    case put
    case trace
    case sdkUnknown(String)
}

extension HttpMethod : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HttpMethod] {
        return [
            .connect,
            .delete,
            .get,
            .head,
            .options,
            .patch,
            .post,
            .put,
            .trace,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .connect: return "CONNECT"
        case .delete: return "DELETE"
        case .get: return "GET"
        case .head: return "HEAD"
        case .options: return "OPTIONS"
        case .patch: return "PATCH"
        case .post: return "POST"
        case .put: return "PUT"
        case .trace: return "TRACE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HttpMethod(rawValue: rawValue) ?? HttpMethod.sdkUnknown(rawValue)
    }
}
