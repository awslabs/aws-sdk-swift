// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct ListVirtualNodesInput: Equatable {
    /// <p>The maximum number of results returned by <code>ListVirtualNodes</code> in paginated
    ///          output. When you use this parameter, <code>ListVirtualNodes</code> returns only
    ///             <code>limit</code> results in a single page along with a <code>nextToken</code> response
    ///          element. You can see the remaining results of the initial request by sending another
    ///             <code>ListVirtualNodes</code> request with the returned <code>nextToken</code> value.
    ///          This value can be between 1 and 100. If you don't use this
    ///          parameter, <code>ListVirtualNodes</code> returns up to 100 results and a
    ///             <code>nextToken</code> value if applicable.</p>
    public let limit: Int?
    /// <p>The name of the service mesh to list virtual nodes in.</p>
    public let meshName: String?
    /// <p>The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then it's
    ///                the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    public let meshOwner: String?
    /// <p>The <code>nextToken</code> value returned from a previous paginated
    ///             <code>ListVirtualNodes</code> request where <code>limit</code> was used and the results
    ///          exceeded the value of that parameter. Pagination continues from the end of the previous
    ///          results that returned the <code>nextToken</code> value.</p>
    public let nextToken: String?

    public init (
        limit: Int? = nil,
        meshName: String? = nil,
        meshOwner: String? = nil,
        nextToken: String? = nil
    )
    {
        self.limit = limit
        self.meshName = meshName
        self.meshOwner = meshOwner
        self.nextToken = nextToken
    }
}
