// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SubjectAlternativeNameMatchers: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exact
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exact = exact {
            var exactContainer = encodeContainer.nestedUnkeyedContainer(forKey: .exact)
            for subjectalternativenamelist0 in exact {
                try exactContainer.encode(subjectalternativenamelist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exactContainer = try containerValues.decodeIfPresent([String].self, forKey: .exact)
        var exactDecoded0:[String]? = nil
        if let exactContainer = exactContainer {
            exactDecoded0 = [String]()
            for string0 in exactContainer {
                exactDecoded0?.append(string0)
            }
        }
        exact = exactDecoded0
    }
}
