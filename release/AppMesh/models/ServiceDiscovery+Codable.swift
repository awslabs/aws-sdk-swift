// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServiceDiscovery: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case awsCloudMap
        case dns
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .awsCloudMap(awsCloudMap):
                if let awsCloudMap = awsCloudMap {
                    try container.encode(awsCloudMap, forKey: .awsCloudMap)
                }
            case let .dns(dns):
                if let dns = dns {
                    try container.encode(dns, forKey: .dns)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let dnsDecoded = try values.decodeIfPresent(DnsServiceDiscovery.self, forKey: .dns)
        if let dns = dnsDecoded {
            self = .dns(dns)
            return
        }
        let awsCloudMapDecoded = try values.decodeIfPresent(AwsCloudMapServiceDiscovery.self, forKey: .awsCloudMap)
        if let awsCloudMap = awsCloudMapDecoded {
            self = .awsCloudMap(awsCloudMap)
            return
        }
        self = .sdkUnknown("")
    }
}
