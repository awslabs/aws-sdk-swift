// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VirtualRouterSpec: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case listeners
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let listeners = listeners {
            var listenersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .listeners)
            for virtualrouterlisteners0 in listeners {
                try listenersContainer.encode(virtualrouterlisteners0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let listenersContainer = try containerValues.decodeIfPresent([VirtualRouterListener].self, forKey: .listeners)
        var listenersDecoded0:[VirtualRouterListener]? = nil
        if let listenersContainer = listenersContainer {
            listenersDecoded0 = [VirtualRouterListener]()
            for structure0 in listenersContainer {
                listenersDecoded0?.append(structure0)
            }
        }
        listeners = listenersDecoded0
    }
}
