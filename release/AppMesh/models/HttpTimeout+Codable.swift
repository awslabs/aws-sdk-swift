// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HttpTimeout: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case idle
        case perRequest
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let idle = idle {
            try encodeContainer.encode(idle, forKey: .idle)
        }
        if let perRequest = perRequest {
            try encodeContainer.encode(perRequest, forKey: .perRequest)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let perRequestDecoded = try containerValues.decodeIfPresent(Duration.self, forKey: .perRequest)
        perRequest = perRequestDecoded
        let idleDecoded = try containerValues.decodeIfPresent(Duration.self, forKey: .idle)
        idle = idleDecoded
    }
}
