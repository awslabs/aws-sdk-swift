// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Duration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case unit
        case value
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let unit = unit {
            try encodeContainer.encode(unit.rawValue, forKey: .unit)
        }
        if let value = value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let valueDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .value)
        value = valueDecoded
        let unitDecoded = try containerValues.decodeIfPresent(DurationUnit.self, forKey: .unit)
        unit = unitDecoded
    }
}
