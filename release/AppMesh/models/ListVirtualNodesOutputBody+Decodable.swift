// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualNodesOutputBody: Equatable {
    public let virtualNodes: [VirtualNodeRef]?
    public let nextToken: String?
}

extension ListVirtualNodesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case virtualNodes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualNodesContainer = try containerValues.decodeIfPresent([VirtualNodeRef].self, forKey: .virtualNodes)
        var virtualNodesDecoded0:[VirtualNodeRef]? = nil
        if let virtualNodesContainer = virtualNodesContainer {
            virtualNodesDecoded0 = [VirtualNodeRef]()
            for structure0 in virtualNodesContainer {
                virtualNodesDecoded0?.append(structure0)
            }
        }
        virtualNodes = virtualNodesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
