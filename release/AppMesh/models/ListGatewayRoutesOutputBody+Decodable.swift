// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGatewayRoutesOutputBody: Equatable {
    public let gatewayRoutes: [GatewayRouteRef]?
    public let nextToken: String?
}

extension ListGatewayRoutesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gatewayRoutes
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayRoutesContainer = try containerValues.decodeIfPresent([GatewayRouteRef].self, forKey: .gatewayRoutes)
        var gatewayRoutesDecoded0:[GatewayRouteRef]? = nil
        if let gatewayRoutesContainer = gatewayRoutesContainer {
            gatewayRoutesDecoded0 = [GatewayRouteRef]()
            for structure0 in gatewayRoutesContainer {
                gatewayRoutesDecoded0?.append(structure0)
            }
        }
        gatewayRoutes = gatewayRoutesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
