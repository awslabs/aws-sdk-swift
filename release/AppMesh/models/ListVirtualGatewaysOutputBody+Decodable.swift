// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualGatewaysOutputBody: Equatable {
    public let virtualGateways: [VirtualGatewayRef]?
    public let nextToken: String?
}

extension ListVirtualGatewaysOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case virtualGateways
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualGatewaysContainer = try containerValues.decodeIfPresent([VirtualGatewayRef].self, forKey: .virtualGateways)
        var virtualGatewaysDecoded0:[VirtualGatewayRef]? = nil
        if let virtualGatewaysContainer = virtualGatewaysContainer {
            virtualGatewaysDecoded0 = [VirtualGatewayRef]()
            for structure0 in virtualGatewaysContainer {
                virtualGatewaysDecoded0?.append(structure0)
            }
        }
        virtualGateways = virtualGatewaysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
