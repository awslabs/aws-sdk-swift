// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that represents the outlier detection for a virtual node's listener.</p>
public struct OutlierDetection: Equatable {
    /// <p>The base amount of time for which a host is ejected.</p>
    public let baseEjectionDuration: Duration?
    /// <p>The time interval between ejection sweep analysis.</p>
    public let interval: Duration?
    /// <p>Maximum percentage of hosts in load balancing pool for upstream service that can be
    ///          ejected. Will eject at least one host regardless of the value.</p>
    public let maxEjectionPercent: Int?
    /// <p>Number of consecutive <code>5xx</code> errors required for ejection. </p>
    public let maxServerErrors: Int?

    public init (
        baseEjectionDuration: Duration? = nil,
        interval: Duration? = nil,
        maxEjectionPercent: Int? = nil,
        maxServerErrors: Int? = nil
    )
    {
        self.baseEjectionDuration = baseEjectionDuration
        self.interval = interval
        self.maxEjectionPercent = maxEjectionPercent
        self.maxServerErrors = maxServerErrors
    }
}
