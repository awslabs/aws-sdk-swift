// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VirtualNodeRef: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn
        case createdAt
        case lastUpdatedAt
        case meshName
        case meshOwner
        case resourceOwner
        case version
        case virtualNodeName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let lastUpdatedAt = lastUpdatedAt {
            try encodeContainer.encode(lastUpdatedAt.timeIntervalSince1970, forKey: .lastUpdatedAt)
        }
        if let meshName = meshName {
            try encodeContainer.encode(meshName, forKey: .meshName)
        }
        if let meshOwner = meshOwner {
            try encodeContainer.encode(meshOwner, forKey: .meshOwner)
        }
        if let resourceOwner = resourceOwner {
            try encodeContainer.encode(resourceOwner, forKey: .resourceOwner)
        }
        if let version = version {
            try encodeContainer.encode(version, forKey: .version)
        }
        if let virtualNodeName = virtualNodeName {
            try encodeContainer.encode(virtualNodeName, forKey: .virtualNodeName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let meshNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .meshName)
        meshName = meshNameDecoded
        let virtualNodeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .virtualNodeName)
        virtualNodeName = virtualNodeNameDecoded
        let meshOwnerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .meshOwner)
        meshOwner = meshOwnerDecoded
        let resourceOwnerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceOwner)
        resourceOwner = resourceOwnerDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let versionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .version)
        version = versionDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let lastUpdatedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastUpdatedAt)
        lastUpdatedAt = lastUpdatedAtDecoded
    }
}
