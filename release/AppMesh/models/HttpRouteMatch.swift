// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that represents the requirements for a route to match HTTP requests for a
///          virtual router.</p>
public struct HttpRouteMatch: Equatable {
    /// <p>An object that represents the client request headers to match on.</p>
    public let headers: [HttpRouteHeader]?
    /// <p>The client request method to match on. Specify only one.</p>
    public let method: HttpMethod?
    /// <p>Specifies the path to match requests with. This parameter must always start with
    ///             <code>/</code>, which by itself matches all requests to the virtual service name. You
    ///          can also match for path-based routing of requests. For example, if your virtual service
    ///          name is <code>my-service.local</code> and you want the route to match requests to
    ///             <code>my-service.local/metrics</code>, your prefix should be
    ///          <code>/metrics</code>.</p>
    public let prefix: String?
    /// <p>The client request scheme to match on. Specify only one.</p>
    public let scheme: HttpScheme?

    public init (
        headers: [HttpRouteHeader]? = nil,
        method: HttpMethod? = nil,
        prefix: String? = nil,
        scheme: HttpScheme? = nil
    )
    {
        self.headers = headers
        self.method = method
        self.prefix = prefix
        self.scheme = scheme
    }
}
