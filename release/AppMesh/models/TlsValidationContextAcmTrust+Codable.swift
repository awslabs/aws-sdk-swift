// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TlsValidationContextAcmTrust: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case certificateAuthorityArns
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateAuthorityArns = certificateAuthorityArns {
            var certificateAuthorityArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .certificateAuthorityArns)
            for certificateauthorityarns0 in certificateAuthorityArns {
                try certificateAuthorityArnsContainer.encode(certificateauthorityarns0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .certificateAuthorityArns)
        var certificateAuthorityArnsDecoded0:[String]? = nil
        if let certificateAuthorityArnsContainer = certificateAuthorityArnsContainer {
            certificateAuthorityArnsDecoded0 = [String]()
            for string0 in certificateAuthorityArnsContainer {
                certificateAuthorityArnsDecoded0?.append(string0)
            }
        }
        certificateAuthorityArns = certificateAuthorityArnsDecoded0
    }
}
