// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListenerTlsFileCertificate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case certificateChain
        case privateKey
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificateChain = certificateChain {
            try encodeContainer.encode(certificateChain, forKey: .certificateChain)
        }
        if let privateKey = privateKey {
            try encodeContainer.encode(privateKey, forKey: .privateKey)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateChainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateChain)
        certificateChain = certificateChainDecoded
        let privateKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .privateKey)
        privateKey = privateKeyDecoded
    }
}
