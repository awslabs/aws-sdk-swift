// Code generated by smithy-swift-codegen. DO NOT EDIT!



///
public struct CreateMeshInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    /// request. Up to 36 letters, numbers, hyphens, and underscores are allowed.</p>
    public var clientToken: String?
    /// <p>The name to use for the service mesh.</p>
    public let meshName: String?
    /// <p>The service mesh specification to apply.</p>
    public let spec: MeshSpec?
    /// <p>Optional metadata that you can apply to the service mesh to assist with categorization
    ///          and organization. Each tag consists of a key and an optional value, both of which you
    ///          define. Tag keys can have a maximum character length of 128 characters, and tag values can have
    ///             a maximum length of 256 characters.</p>
    public let tags: [TagRef]?

    public init (
        clientToken: String? = nil,
        meshName: String? = nil,
        spec: MeshSpec? = nil,
        tags: [TagRef]? = nil
    )
    {
        self.clientToken = clientToken
        self.meshName = meshName
        self.spec = spec
        self.tags = tags
    }
}
