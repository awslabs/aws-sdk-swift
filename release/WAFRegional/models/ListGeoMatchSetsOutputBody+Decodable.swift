// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGeoMatchSetsOutputBody: Equatable {
    public let nextMarker: String?
    public let geoMatchSets: [GeoMatchSetSummary]?
}

extension ListGeoMatchSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case geoMatchSets = "GeoMatchSets"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let geoMatchSetsContainer = try containerValues.decodeIfPresent([GeoMatchSetSummary].self, forKey: .geoMatchSets)
        var geoMatchSetsDecoded0:[GeoMatchSetSummary]? = nil
        if let geoMatchSetsContainer = geoMatchSetsContainer {
            geoMatchSetsDecoded0 = [GeoMatchSetSummary]()
            for structure0 in geoMatchSetsContainer {
                geoMatchSetsDecoded0?.append(structure0)
            }
        }
        geoMatchSets = geoMatchSetsDecoded0
    }
}
