// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A request to update a <a>SqlInjectionMatchSet</a>.</p>
public struct UpdateSqlInjectionMatchSetInput: Equatable {
    /// <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
    public let changeToken: String?
    /// <p>The <code>SqlInjectionMatchSetId</code> of the <code>SqlInjectionMatchSet</code> that you want to update.
    /// 			<code>SqlInjectionMatchSetId</code> is returned by <a>CreateSqlInjectionMatchSet</a> and by <a>ListSqlInjectionMatchSets</a>.</p>
    public let sqlInjectionMatchSetId: String?
    /// <p>An array of <code>SqlInjectionMatchSetUpdate</code> objects that you want to insert into or delete from a
    /// 			<a>SqlInjectionMatchSet</a>. For more information, see the applicable data types:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <a>SqlInjectionMatchSetUpdate</a>: Contains <code>Action</code> and <code>SqlInjectionMatchTuple</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a>SqlInjectionMatchTuple</a>: Contains <code>FieldToMatch</code> and <code>TextTransformation</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let updates: [SqlInjectionMatchSetUpdate]?

    public init (
        changeToken: String? = nil,
        sqlInjectionMatchSetId: String? = nil,
        updates: [SqlInjectionMatchSetUpdate]? = nil
    )
    {
        self.changeToken = changeToken
        self.sqlInjectionMatchSetId = sqlInjectionMatchSetId
        self.updates = updates
    }
}
