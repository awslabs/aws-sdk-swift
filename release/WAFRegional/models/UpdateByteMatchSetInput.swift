// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateByteMatchSetInput: Equatable {
    /// <p>The <code>ByteMatchSetId</code> of the <a>ByteMatchSet</a> that you want to update. <code>ByteMatchSetId</code> is returned by <a>CreateByteMatchSet</a> and by
    /// 			<a>ListByteMatchSets</a>.</p>
    public let byteMatchSetId: String?
    /// <p>The value returned by the most recent call to <a>GetChangeToken</a>.</p>
    public let changeToken: String?
    /// <p>An array of <code>ByteMatchSetUpdate</code> objects that you want to insert into or delete from a <a>ByteMatchSet</a>.
    /// 			For more information, see the applicable data types:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <a>ByteMatchSetUpdate</a>: Contains <code>Action</code> and <code>ByteMatchTuple</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a>ByteMatchTuple</a>: Contains <code>FieldToMatch</code>, <code>PositionalConstraint</code>, <code>TargetString</code>,
    /// 				and <code>TextTransformation</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <a>FieldToMatch</a>: Contains <code>Data</code> and <code>Type</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let updates: [ByteMatchSetUpdate]?

    public init (
        byteMatchSetId: String? = nil,
        changeToken: String? = nil,
        updates: [ByteMatchSetUpdate]? = nil
    )
    {
        self.byteMatchSetId = byteMatchSetId
        self.changeToken = changeToken
        self.updates = updates
    }
}
