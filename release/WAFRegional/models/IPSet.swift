// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <note>
///             <p>This is <b>AWS WAF Classic</b> documentation. For
///       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
///       WAF Classic</a> in the developer guide.</p>
///             <p>
///                <b>For the latest version of AWS
///       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
///          </note>
/// 	        <p>Contains one or more IP addresses or blocks of IP addresses specified in Classless Inter-Domain Routing (CIDR) notation. AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32.  AWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and /128.</p>
/// 	        <p>To specify an individual IP address, you specify the four-part IP address followed by a
///             <code>/32</code>, for example, 192.0.2.0/32. To block a range of IP addresses, you can
///          specify /8 or any range between /16 through /32 (for IPv4) or /24, /32, /48, /56, /64, or
///          /128 (for IPv6). For more information about CIDR notation, see the Wikipedia entry <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
///             Inter-Domain Routing</a>. </p>
public struct IPSet: Equatable {
    /// <p>The IP address type (<code>IPV4</code> or <code>IPV6</code>) and the IP address range (in CIDR notation) that web requests originate from.
    /// 			If the <code>WebACL</code> is associated with a CloudFront distribution and the viewer did not use an HTTP proxy or a load balancer to send the request, this is the value of the c-ip field in the CloudFront access logs.</p>
    public let iPSetDescriptors: [IPSetDescriptor]?
    /// <p>The <code>IPSetId</code> for an <code>IPSet</code>. You use <code>IPSetId</code> to get information about an
    /// 			<code>IPSet</code> (see <a>GetIPSet</a>), update an <code>IPSet</code> (see <a>UpdateIPSet</a>),
    /// 			insert an <code>IPSet</code> into a <code>Rule</code> or delete one from a <code>Rule</code> (see <a>UpdateRule</a>), and
    /// 			delete an <code>IPSet</code> from AWS WAF (see <a>DeleteIPSet</a>).</p>
    /// 		       <p>
    ///             <code>IPSetId</code> is returned by <a>CreateIPSet</a> and by <a>ListIPSets</a>.</p>
    public let iPSetId: String?
    /// <p>A friendly name or description of the <a>IPSet</a>. You can't change the name of an <code>IPSet</code> after you create it.</p>
    public let name: String?

    public init (
        iPSetDescriptors: [IPSetDescriptor]? = nil,
        iPSetId: String? = nil,
        name: String? = nil
    )
    {
        self.iPSetDescriptors = iPSetDescriptors
        self.iPSetId = iPSetId
        self.name = name
    }
}
