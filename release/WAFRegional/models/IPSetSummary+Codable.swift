// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IPSetSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iPSetId = "IPSetId"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iPSetId = iPSetId {
            try encodeContainer.encode(iPSetId, forKey: .iPSetId)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPSetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .iPSetId)
        iPSetId = iPSetIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
    }
}
