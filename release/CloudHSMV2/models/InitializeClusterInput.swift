// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct InitializeClusterInput: Equatable {
    /// <p>The identifier (ID) of the cluster that you are claiming. To find the cluster ID, use
    ///         <a>DescribeClusters</a>.</p>
    public let clusterId: String?
    /// <p>The cluster certificate issued (signed) by your issuing certificate authority (CA). The
    ///       certificate must be in PEM format and can contain a maximum of 5000 characters.</p>
    public let signedCert: String?
    /// <p>The issuing certificate of the issuing certificate authority (CA) that issued (signed)
    ///       the cluster certificate. You must use a self-signed certificate. The certificate used to sign the HSM CSR must be directly available, and thus must be the
    ///       root certificate. The certificate must be in PEM format and can contain a
    ///       maximum of 5000 characters.</p>
    public let trustAnchor: String?

    public init (
        clusterId: String? = nil,
        signedCert: String? = nil,
        trustAnchor: String? = nil
    )
    {
        self.clusterId = clusterId
        self.signedCert = signedCert
        self.trustAnchor = trustAnchor
    }
}
