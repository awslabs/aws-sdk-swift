// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateClusterInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case backupRetentionPolicy = "BackupRetentionPolicy"
        case hsmType = "HsmType"
        case sourceBackupId = "SourceBackupId"
        case subnetIds = "SubnetIds"
        case tagList = "TagList"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupRetentionPolicy = backupRetentionPolicy {
            try encodeContainer.encode(backupRetentionPolicy, forKey: .backupRetentionPolicy)
        }
        if let hsmType = hsmType {
            try encodeContainer.encode(hsmType, forKey: .hsmType)
        }
        if let sourceBackupId = sourceBackupId {
            try encodeContainer.encode(sourceBackupId, forKey: .sourceBackupId)
        }
        if let subnetIds = subnetIds {
            var subnetIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnetIds)
            for subnetids0 in subnetIds {
                try subnetIdsContainer.encode(subnetids0)
            }
        }
        if let tagList = tagList {
            var tagListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tagList)
            for taglist0 in tagList {
                try tagListContainer.encode(taglist0)
            }
        }
    }
}
