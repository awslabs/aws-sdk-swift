// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeClustersInputBody: Equatable {
    public let filters: [String:[String]?]?
    public let nextToken: String?
    public let maxResults: Int?
}

extension DescribeClustersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filtersContainer = try containerValues.decodeIfPresent([String:[String]?].self, forKey: .filters)
        var filtersDecoded0: [String:[String]?]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [String:[String]?]()
            for (key0, strings0) in filtersContainer {
                var strings0Decoded0 = [String]()
                if let strings0 = strings0 {
                    for string1 in strings0 {
                        strings0Decoded0.append(string1)
                    }
                }
                filtersDecoded0?[key0] = strings0Decoded0
            }
        }
        filters = filtersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
