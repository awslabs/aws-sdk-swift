// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ExtendedKeyUsageName {
    case any
    case codeSigning
    case custom
    case emailProtection
    case ipsecEndSystem
    case ipsecTunnel
    case ipsecUser
    case `none`
    case ocspSigning
    case timeStamping
    case tlsWebClientAuthentication
    case tlsWebServerAuthentication
    case sdkUnknown(String)
}

extension ExtendedKeyUsageName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ExtendedKeyUsageName] {
        return [
            .any,
            .codeSigning,
            .custom,
            .emailProtection,
            .ipsecEndSystem,
            .ipsecTunnel,
            .ipsecUser,
            .none,
            .ocspSigning,
            .timeStamping,
            .tlsWebClientAuthentication,
            .tlsWebServerAuthentication,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .any: return "ANY"
        case .codeSigning: return "CODE_SIGNING"
        case .custom: return "CUSTOM"
        case .emailProtection: return "EMAIL_PROTECTION"
        case .ipsecEndSystem: return "IPSEC_END_SYSTEM"
        case .ipsecTunnel: return "IPSEC_TUNNEL"
        case .ipsecUser: return "IPSEC_USER"
        case .none: return "NONE"
        case .ocspSigning: return "OCSP_SIGNING"
        case .timeStamping: return "TIME_STAMPING"
        case .tlsWebClientAuthentication: return "TLS_WEB_CLIENT_AUTHENTICATION"
        case .tlsWebServerAuthentication: return "TLS_WEB_SERVER_AUTHENTICATION"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ExtendedKeyUsageName(rawValue: rawValue) ?? ExtendedKeyUsageName.sdkUnknown(rawValue)
    }
}
