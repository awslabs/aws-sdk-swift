// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportCertificateInputBody: Equatable {
    public let certificateArn: String?
    public let passphrase: Data?
}

extension ExportCertificateInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateArn = "CertificateArn"
        case passphrase = "Passphrase"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let passphraseDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .passphrase)
        passphrase = passphraseDecoded
    }
}
