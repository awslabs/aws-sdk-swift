// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum CertificateStatus {
    case expired
    case failed
    case inactive
    case issued
    case pendingValidation
    case revoked
    case validationTimedOut
    case sdkUnknown(String)
}

extension CertificateStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CertificateStatus] {
        return [
            .expired,
            .failed,
            .inactive,
            .issued,
            .pendingValidation,
            .revoked,
            .validationTimedOut,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .expired: return "EXPIRED"
        case .failed: return "FAILED"
        case .inactive: return "INACTIVE"
        case .issued: return "ISSUED"
        case .pendingValidation: return "PENDING_VALIDATION"
        case .revoked: return "REVOKED"
        case .validationTimedOut: return "VALIDATION_TIMED_OUT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CertificateStatus(rawValue: rawValue) ?? CertificateStatus.sdkUnknown(rawValue)
    }
}
