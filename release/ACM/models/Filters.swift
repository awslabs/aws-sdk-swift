// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>This structure can be used in the <a>ListCertificates</a> action to filter the
///       output of the certificate list. </p>
public struct Filters: Equatable {
    /// <p>Specify one or more <a>ExtendedKeyUsage</a> extension values.</p>
    public let extendedKeyUsage: [ExtendedKeyUsageName]?
    /// <p>Specify one or more algorithms that can be used to generate key pairs.</p>
    ///          <p>Default filtering returns only <code>RSA_1024</code> and <code>RSA_2048</code>
    ///       certificates that have at least one domain. To return other certificate types, provide the
    ///       desired type signatures in a comma-separated list. For example, <code>"keyTypes":
    ///         ["RSA_2048,RSA_4096"]</code> returns both <code>RSA_2048</code> and <code>RSA_4096</code>
    ///       certificates.</p>
    public let keyTypes: [KeyAlgorithm]?
    /// <p>Specify one or more <a>KeyUsage</a> extension values.</p>
    public let keyUsage: [KeyUsageName]?

    public init (
        extendedKeyUsage: [ExtendedKeyUsageName]? = nil,
        keyTypes: [KeyAlgorithm]? = nil,
        keyUsage: [KeyUsageName]? = nil
    )
    {
        self.extendedKeyUsage = extendedKeyUsage
        self.keyTypes = keyTypes
        self.keyUsage = keyUsage
    }
}
