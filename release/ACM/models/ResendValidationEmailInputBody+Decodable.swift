// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResendValidationEmailInputBody: Equatable {
    public let certificateArn: String?
    public let domain: String?
    public let validationDomain: String?
}

extension ResendValidationEmailInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateArn = "CertificateArn"
        case domain = "Domain"
        case validationDomain = "ValidationDomain"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateArn)
        certificateArn = certificateArnDecoded
        let domainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domain)
        domain = domainDecoded
        let validationDomainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .validationDomain)
        validationDomain = validationDomainDecoded
    }
}
