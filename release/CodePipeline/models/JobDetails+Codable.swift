// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId
        case data
        case id
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let data = data {
            try encodeContainer.encode(data, forKey: .data)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let dataDecoded = try containerValues.decodeIfPresent(JobData.self, forKey: .data)
        data = dataDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
    }
}
