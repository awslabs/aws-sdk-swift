// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents information about an action type.</p>
public struct ActionTypeId: Equatable {
    /// <p>A category defines what kind of action can be taken in the stage, and constrains
    ///             the provider type for the action. Valid categories are limited to one of the following
    ///             values. </p>
    ///         <ul>
    ///             <li>
    ///                 <p>Source</p>
    ///             </li>
    ///             <li>
    ///                 <p>Build</p>
    ///             </li>
    ///             <li>
    ///                 <p>Test</p>
    ///             </li>
    ///             <li>
    ///                 <p>Deploy</p>
    ///             </li>
    ///             <li>
    ///                 <p>Invoke</p>
    ///             </li>
    ///             <li>
    ///                 <p>Approval</p>
    ///             </li>
    ///          </ul>
    public let category: ActionCategory?
    /// <p>The creator of the action being called. There are three valid values for the
    ///                 <code>Owner</code> field in the action category section within your pipeline
    ///             structure: <code>AWS</code>, <code>ThirdParty</code>, and <code>Custom</code>. For more
    ///             information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid Action Types and Providers in CodePipeline</a>.</p>
    public let owner: ActionOwner?
    /// <p>The provider of the service being called by the action. Valid providers are
    ///             determined by the action category. For example, an action in the Deploy category type
    ///             might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For
    ///             more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#actions-valid-providers">Valid Action Types and Providers in CodePipeline</a>.</p>
    public let provider: String?
    /// <p>A string that describes the action version.</p>
    public let version: String?

    public init (
        category: ActionCategory? = nil,
        owner: ActionOwner? = nil,
        provider: String? = nil,
        version: String? = nil
    )
    {
        self.category = category
        self.owner = owner
        self.provider = provider
        self.version = version
    }
}
