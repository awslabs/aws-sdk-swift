// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input of a CreateCustomActionType operation.</p>
public struct CreateCustomActionTypeInput: Equatable {
    /// <p>The category of the custom action, such as a build action or a test
    ///             action.</p>
    public let category: ActionCategory?
    /// <p>The configuration properties for the custom action.</p>
    ///         <note>
    ///             <p>You can refer to a name in the configuration properties of the custom action
    ///                 within the URL templates by following the format of {Config:name}, as long as the
    ///                 configuration property is both required and not secret. For more information, see
    ///                     <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html">Create a
    ///                     Custom Action for a Pipeline</a>.</p>
    ///         </note>
    public let configurationProperties: [ActionConfigurationProperty]?
    /// <p>The details of the input artifact for the action, such as its commit ID.</p>
    public let inputArtifactDetails: ArtifactDetails?
    /// <p>The details of the output artifact of the action, such as its commit ID.</p>
    public let outputArtifactDetails: ArtifactDetails?
    /// <p>The provider of the service used in the custom action, such as AWS
    ///             CodeDeploy.</p>
    public let provider: String?
    /// <p>URLs that provide users information about this custom action.</p>
    public let settings: ActionTypeSettings?
    /// <p>The tags for the custom action.</p>
    public let tags: [Tag]?
    /// <p>The version identifier of the custom action.</p>
    public let version: String?

    public init (
        category: ActionCategory? = nil,
        configurationProperties: [ActionConfigurationProperty]? = nil,
        inputArtifactDetails: ArtifactDetails? = nil,
        outputArtifactDetails: ArtifactDetails? = nil,
        provider: String? = nil,
        settings: ActionTypeSettings? = nil,
        tags: [Tag]? = nil,
        version: String? = nil
    )
    {
        self.category = category
        self.configurationProperties = configurationProperties
        self.inputArtifactDetails = inputArtifactDetails
        self.outputArtifactDetails = outputArtifactDetails
        self.provider = provider
        self.settings = settings
        self.tags = tags
        self.version = version
    }
}
