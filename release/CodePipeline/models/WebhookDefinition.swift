// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents information about a webhook and its definition.</p>
public struct WebhookDefinition: Equatable {
    /// <p>Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>For information about the authentication scheme implemented by GITHUB_HMAC,
    ///                     see <a href="https://developer.github.com/webhooks/securing/">Securing your
    ///                         webhooks</a> on the GitHub Developer website.</p>
    ///             </li>
    ///             <li>
    ///                 <p> IP rejects webhooks trigger requests unless they originate from an IP
    ///                     address in the IP range whitelisted in the authentication
    ///                     configuration.</p>
    ///             </li>
    ///             <li>
    ///                 <p> UNAUTHENTICATED accepts all webhook trigger requests regardless of
    ///                     origin.</p>
    ///             </li>
    ///          </ul>
    public let authentication: WebhookAuthenticationType?
    /// <p>Properties that configure the authentication applied to incoming webhook trigger
    ///             requests. The required properties depend on the authentication type. For GITHUB_HMAC,
    ///             only the <code>SecretToken </code>property must be set. For IP, only the
    ///                 <code>AllowedIPRange </code>property must be set to a valid CIDR range. For
    ///             UNAUTHENTICATED, no properties can be set.</p>
    public let authenticationConfiguration: WebhookAuthConfiguration?
    /// <p>A list of rules applied to the body/payload sent in the POST request to a webhook
    ///             URL. All defined rules must pass for the request to be accepted and the pipeline
    ///             started.</p>
    public let filters: [WebhookFilterRule]?
    /// <p>The name of the webhook.</p>
    public let name: String?
    /// <p>The name of the action in a pipeline you want to connect to the webhook. The action
    ///             must be from the source (first) stage of the pipeline.</p>
    public let targetAction: String?
    /// <p>The name of the pipeline you want to connect to the webhook.</p>
    public let targetPipeline: String?

    public init (
        authentication: WebhookAuthenticationType? = nil,
        authenticationConfiguration: WebhookAuthConfiguration? = nil,
        filters: [WebhookFilterRule]? = nil,
        name: String? = nil,
        targetAction: String? = nil,
        targetPipeline: String? = nil
    )
    {
        self.authentication = authentication
        self.authenticationConfiguration = authenticationConfiguration
        self.filters = filters
        self.name = name
        self.targetAction = targetAction
        self.targetPipeline = targetPipeline
    }
}
