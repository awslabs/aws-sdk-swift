// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPipelineStateOutputBody: Equatable {
    public let pipelineName: String?
    public let pipelineVersion: Int?
    public let stageStates: [StageState]?
    public let created: Date?
    public let updated: Date?
}

extension GetPipelineStateOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case created
        case pipelineName
        case pipelineVersion
        case stageStates
        case updated
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let pipelineVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .pipelineVersion)
        pipelineVersion = pipelineVersionDecoded
        let stageStatesContainer = try containerValues.decodeIfPresent([StageState].self, forKey: .stageStates)
        var stageStatesDecoded0:[StageState]? = nil
        if let stageStatesContainer = stageStatesContainer {
            stageStatesDecoded0 = [StageState]()
            for structure0 in stageStatesContainer {
                stageStatesDecoded0?.append(structure0)
            }
        }
        stageStates = stageStatesDecoded0
        let createdDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .created)
        created = createdDecoded
        let updatedDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .updated)
        updated = updatedDecoded
    }
}
