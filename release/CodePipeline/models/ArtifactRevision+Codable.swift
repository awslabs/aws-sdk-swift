// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ArtifactRevision: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case created
        case name
        case revisionChangeIdentifier
        case revisionId
        case revisionSummary
        case revisionUrl
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let created = created {
            try encodeContainer.encode(created.timeIntervalSince1970, forKey: .created)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let revisionChangeIdentifier = revisionChangeIdentifier {
            try encodeContainer.encode(revisionChangeIdentifier, forKey: .revisionChangeIdentifier)
        }
        if let revisionId = revisionId {
            try encodeContainer.encode(revisionId, forKey: .revisionId)
        }
        if let revisionSummary = revisionSummary {
            try encodeContainer.encode(revisionSummary, forKey: .revisionSummary)
        }
        if let revisionUrl = revisionUrl {
            try encodeContainer.encode(revisionUrl, forKey: .revisionUrl)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let revisionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionId)
        revisionId = revisionIdDecoded
        let revisionChangeIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionChangeIdentifier)
        revisionChangeIdentifier = revisionChangeIdentifierDecoded
        let revisionSummaryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionSummary)
        revisionSummary = revisionSummaryDecoded
        let createdDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .created)
        created = createdDecoded
        let revisionUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionUrl)
        revisionUrl = revisionUrlDecoded
    }
}
