// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum TriggerType {
    case cloudwatchevent
    case createpipeline
    case pollforsourcechanges
    case putactionrevision
    case startpipelineexecution
    case webhook
    case sdkUnknown(String)
}

extension TriggerType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TriggerType] {
        return [
            .cloudwatchevent,
            .createpipeline,
            .pollforsourcechanges,
            .putactionrevision,
            .startpipelineexecution,
            .webhook,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cloudwatchevent: return "CloudWatchEvent"
        case .createpipeline: return "CreatePipeline"
        case .pollforsourcechanges: return "PollForSourceChanges"
        case .putactionrevision: return "PutActionRevision"
        case .startpipelineexecution: return "StartPipelineExecution"
        case .webhook: return "Webhook"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TriggerType(rawValue: rawValue) ?? TriggerType.sdkUnknown(rawValue)
    }
}
