// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FailureType {
    case configurationerror
    case jobfailed
    case permissionerror
    case revisionoutofsync
    case revisionunavailable
    case systemunavailable
    case sdkUnknown(String)
}

extension FailureType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FailureType] {
        return [
            .configurationerror,
            .jobfailed,
            .permissionerror,
            .revisionoutofsync,
            .revisionunavailable,
            .systemunavailable,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .configurationerror: return "ConfigurationError"
        case .jobfailed: return "JobFailed"
        case .permissionerror: return "PermissionError"
        case .revisionoutofsync: return "RevisionOutOfSync"
        case .revisionunavailable: return "RevisionUnavailable"
        case .systemunavailable: return "SystemUnavailable"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FailureType(rawValue: rawValue) ?? FailureType.sdkUnknown(rawValue)
    }
}
