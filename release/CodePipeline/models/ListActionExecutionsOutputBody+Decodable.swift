// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActionExecutionsOutputBody: Equatable {
    public let actionExecutionDetails: [ActionExecutionDetail]?
    public let nextToken: String?
}

extension ListActionExecutionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionExecutionDetails
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionExecutionDetailsContainer = try containerValues.decodeIfPresent([ActionExecutionDetail].self, forKey: .actionExecutionDetails)
        var actionExecutionDetailsDecoded0:[ActionExecutionDetail]? = nil
        if let actionExecutionDetailsContainer = actionExecutionDetailsContainer {
            actionExecutionDetailsDecoded0 = [ActionExecutionDetail]()
            for structure0 in actionExecutionDetailsContainer {
                actionExecutionDetailsDecoded0?.append(structure0)
            }
        }
        actionExecutionDetails = actionExecutionDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
