// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActionTypesInputBody: Equatable {
    public let actionOwnerFilter: ActionOwner?
    public let nextToken: String?
    public let regionFilter: String?
}

extension ListActionTypesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionOwnerFilter
        case nextToken
        case regionFilter
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionOwnerFilterDecoded = try containerValues.decodeIfPresent(ActionOwner.self, forKey: .actionOwnerFilter)
        actionOwnerFilter = actionOwnerFilterDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let regionFilterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .regionFilter)
        regionFilter = regionFilterDecoded
    }
}
