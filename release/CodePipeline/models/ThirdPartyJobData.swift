// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents information about the job data for a partner action.</p>
public struct ThirdPartyJobData: Equatable {
    /// <p>Represents information about an action configuration.</p>
    public let actionConfiguration: ActionConfiguration?
    /// <p>Represents information about an action type.</p>
    public let actionTypeId: ActionTypeId?
    /// <p>Represents an AWS session credentials object. These credentials are temporary
    ///             credentials that are issued by AWS Secure Token Service (STS). They can be used to
    ///             access input and output artifacts in the S3 bucket used to store artifact for the
    ///             pipeline in AWS CodePipeline. </p>
    public let artifactCredentials: AWSSessionCredentials?
    /// <p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job
    ///             requires to continue the job asynchronously.</p>
    public let continuationToken: String?
    /// <p>The encryption key used to encrypt and decrypt data in the artifact store for the
    ///             pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and
    ///             might not be present.</p>
    public let encryptionKey: EncryptionKey?
    /// <p>The name of the artifact that is worked on by the action, if any. This name might
    ///             be system-generated, such as "MyApp", or it might be defined by the user when the action
    ///             is created. The input artifact name must match the name of an output artifact generated
    ///             by an action in an earlier action or stage of the pipeline.</p>
    public let inputArtifacts: [Artifact]?
    /// <p>The name of the artifact that is the result of the action, if any. This name might
    ///             be system-generated, such as "MyBuiltApp", or it might be defined by the user when the
    ///             action is created.</p>
    public let outputArtifacts: [Artifact]?
    /// <p>Represents information about a pipeline to a job worker.</p>
    ///         <note>
    ///             <p>Does not include <code>pipelineArn</code> and <code>pipelineExecutionId</code>
    ///                 for ThirdParty jobs.</p>
    ///         </note>
    public let pipelineContext: PipelineContext?

    public init (
        actionConfiguration: ActionConfiguration? = nil,
        actionTypeId: ActionTypeId? = nil,
        artifactCredentials: AWSSessionCredentials? = nil,
        continuationToken: String? = nil,
        encryptionKey: EncryptionKey? = nil,
        inputArtifacts: [Artifact]? = nil,
        outputArtifacts: [Artifact]? = nil,
        pipelineContext: PipelineContext? = nil
    )
    {
        self.actionConfiguration = actionConfiguration
        self.actionTypeId = actionTypeId
        self.artifactCredentials = artifactCredentials
        self.continuationToken = continuationToken
        self.encryptionKey = encryptionKey
        self.inputArtifacts = inputArtifacts
        self.outputArtifacts = outputArtifacts
        self.pipelineContext = pipelineContext
    }
}
