// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListActionExecutionsInputBody: Equatable {
    public let pipelineName: String?
    public let filter: ActionExecutionFilter?
    public let maxResults: Int?
    public let nextToken: String?
}

extension ListActionExecutionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filter
        case maxResults
        case nextToken
        case pipelineName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let filterDecoded = try containerValues.decodeIfPresent(ActionExecutionFilter.self, forKey: .filter)
        filter = filterDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
