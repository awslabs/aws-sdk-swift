// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActionTypeProperty: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description
        case key
        case name
        case noEcho
        case `optional` = "optional"
        case queryable
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if key != false {
            try encodeContainer.encode(key, forKey: .key)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if noEcho != false {
            try encodeContainer.encode(noEcho, forKey: .noEcho)
        }
        if `optional` != false {
            try encodeContainer.encode(`optional`, forKey: .`optional`)
        }
        if queryable != false {
            try encodeContainer.encode(queryable, forKey: .queryable)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let optionalDecoded = try containerValues.decode(Bool.self, forKey: .optional)
        `optional` = optionalDecoded
        let keyDecoded = try containerValues.decode(Bool.self, forKey: .key)
        key = keyDecoded
        let noEchoDecoded = try containerValues.decode(Bool.self, forKey: .noEcho)
        noEcho = noEchoDecoded
        let queryableDecoded = try containerValues.decode(Bool.self, forKey: .queryable)
        queryable = queryableDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
