// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ActionCategory {
    case approval
    case build
    case deploy
    case invoke
    case source
    case test
    case sdkUnknown(String)
}

extension ActionCategory : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ActionCategory] {
        return [
            .approval,
            .build,
            .deploy,
            .invoke,
            .source,
            .test,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .approval: return "Approval"
        case .build: return "Build"
        case .deploy: return "Deploy"
        case .invoke: return "Invoke"
        case .source: return "Source"
        case .test: return "Test"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ActionCategory(rawValue: rawValue) ?? ActionCategory.sdkUnknown(rawValue)
    }
}
