// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutJobSuccessResultInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case continuationToken
        case currentRevision
        case executionDetails
        case jobId
        case outputVariables
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let continuationToken = continuationToken {
            try encodeContainer.encode(continuationToken, forKey: .continuationToken)
        }
        if let currentRevision = currentRevision {
            try encodeContainer.encode(currentRevision, forKey: .currentRevision)
        }
        if let executionDetails = executionDetails {
            try encodeContainer.encode(executionDetails, forKey: .executionDetails)
        }
        if let jobId = jobId {
            try encodeContainer.encode(jobId, forKey: .jobId)
        }
        if let outputVariables = outputVariables {
            var outputVariablesContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .outputVariables)
            for (dictKey0, outputvariablesmap0) in outputVariables {
                try outputVariablesContainer.encode(outputvariablesmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
