// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActionTypeSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case entityUrlTemplate
        case executionUrlTemplate
        case revisionUrlTemplate
        case thirdPartyConfigurationUrl
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entityUrlTemplate = entityUrlTemplate {
            try encodeContainer.encode(entityUrlTemplate, forKey: .entityUrlTemplate)
        }
        if let executionUrlTemplate = executionUrlTemplate {
            try encodeContainer.encode(executionUrlTemplate, forKey: .executionUrlTemplate)
        }
        if let revisionUrlTemplate = revisionUrlTemplate {
            try encodeContainer.encode(revisionUrlTemplate, forKey: .revisionUrlTemplate)
        }
        if let thirdPartyConfigurationUrl = thirdPartyConfigurationUrl {
            try encodeContainer.encode(thirdPartyConfigurationUrl, forKey: .thirdPartyConfigurationUrl)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thirdPartyConfigurationUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thirdPartyConfigurationUrl)
        thirdPartyConfigurationUrl = thirdPartyConfigurationUrlDecoded
        let entityUrlTemplateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .entityUrlTemplate)
        entityUrlTemplate = entityUrlTemplateDecoded
        let executionUrlTemplateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionUrlTemplate)
        executionUrlTemplate = executionUrlTemplateDecoded
        let revisionUrlTemplateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionUrlTemplate)
        revisionUrlTemplate = revisionUrlTemplateDecoded
    }
}
