// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the structure of actions and stages to be performed in the
///             pipeline.</p>
public struct PipelineDeclaration: Equatable {
    /// <p>Represents information about the S3 bucket where artifacts are stored for the
    ///             pipeline.</p>
    ///         <note>
    ///             <p>You must include either <code>artifactStore</code> or
    ///                     <code>artifactStores</code> in your pipeline, but you cannot use both. If you
    ///                 create a cross-region action in your pipeline, you must use
    ///                     <code>artifactStores</code>.</p>
    ///         </note>
    public let artifactStore: ArtifactStore?
    /// <p>A mapping of <code>artifactStore</code> objects and their corresponding AWS
    ///             Regions. There must be an artifact store for the pipeline Region and for each
    ///             cross-region action in the pipeline.</p>
    ///         <note>
    ///             <p>You must include either <code>artifactStore</code> or
    ///                     <code>artifactStores</code> in your pipeline, but you cannot use both. If you
    ///                 create a cross-region action in your pipeline, you must use
    ///                     <code>artifactStores</code>.</p>
    ///         </note>
    public let artifactStores: [String:ArtifactStore]?
    /// <p>The name of the pipeline.</p>
    public let name: String?
    /// <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform
    ///             actions with no <code>actionRoleArn</code>, or to use to assume roles for actions with
    ///             an <code>actionRoleArn</code>.</p>
    public let roleArn: String?
    /// <p>The stage in which to perform the action.</p>
    public let stages: [StageDeclaration]?
    /// <p>The version number of the pipeline. A new pipeline always has a version number of
    ///             1. This number is incremented when a pipeline is updated.</p>
    public let version: Int?

    public init (
        artifactStore: ArtifactStore? = nil,
        artifactStores: [String:ArtifactStore]? = nil,
        name: String? = nil,
        roleArn: String? = nil,
        stages: [StageDeclaration]? = nil,
        version: Int? = nil
    )
    {
        self.artifactStore = artifactStore
        self.artifactStores = artifactStores
        self.name = name
        self.roleArn = roleArn
        self.stages = stages
        self.version = version
    }
}
