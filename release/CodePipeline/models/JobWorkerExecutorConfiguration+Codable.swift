// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobWorkerExecutorConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pollingAccounts
        case pollingServicePrincipals
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pollingAccounts = pollingAccounts {
            var pollingAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pollingAccounts)
            for pollingaccountlist0 in pollingAccounts {
                try pollingAccountsContainer.encode(pollingaccountlist0)
            }
        }
        if let pollingServicePrincipals = pollingServicePrincipals {
            var pollingServicePrincipalsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pollingServicePrincipals)
            for pollingserviceprincipallist0 in pollingServicePrincipals {
                try pollingServicePrincipalsContainer.encode(pollingserviceprincipallist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pollingAccountsContainer = try containerValues.decodeIfPresent([String].self, forKey: .pollingAccounts)
        var pollingAccountsDecoded0:[String]? = nil
        if let pollingAccountsContainer = pollingAccountsContainer {
            pollingAccountsDecoded0 = [String]()
            for string0 in pollingAccountsContainer {
                pollingAccountsDecoded0?.append(string0)
            }
        }
        pollingAccounts = pollingAccountsDecoded0
        let pollingServicePrincipalsContainer = try containerValues.decodeIfPresent([String].self, forKey: .pollingServicePrincipals)
        var pollingServicePrincipalsDecoded0:[String]? = nil
        if let pollingServicePrincipalsContainer = pollingServicePrincipalsContainer {
            pollingServicePrincipalsDecoded0 = [String]()
            for string0 in pollingServicePrincipalsContainer {
                pollingServicePrincipalsDecoded0?.append(string0)
            }
        }
        pollingServicePrincipals = pollingServicePrincipalsDecoded0
    }
}
