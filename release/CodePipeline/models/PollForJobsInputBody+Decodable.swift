// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PollForJobsInputBody: Equatable {
    public let actionTypeId: ActionTypeId?
    public let maxBatchSize: Int?
    public let queryParam: [String:String]?
}

extension PollForJobsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionTypeId
        case maxBatchSize
        case queryParam
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionTypeIdDecoded = try containerValues.decodeIfPresent(ActionTypeId.self, forKey: .actionTypeId)
        actionTypeId = actionTypeIdDecoded
        let maxBatchSizeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxBatchSize)
        maxBatchSize = maxBatchSizeDecoded
        let queryParamContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .queryParam)
        var queryParamDecoded0: [String:String]? = nil
        if let queryParamContainer = queryParamContainer {
            queryParamDecoded0 = [String:String]()
            for (key0, actionconfigurationqueryablevalue0) in queryParamContainer {
                queryParamDecoded0?[key0] = actionconfigurationqueryablevalue0
            }
        }
        queryParam = queryParamDecoded0
    }
}
