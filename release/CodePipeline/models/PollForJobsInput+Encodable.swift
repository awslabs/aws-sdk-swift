// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PollForJobsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case actionTypeId
        case maxBatchSize
        case queryParam
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionTypeId = actionTypeId {
            try encodeContainer.encode(actionTypeId, forKey: .actionTypeId)
        }
        if let maxBatchSize = maxBatchSize {
            try encodeContainer.encode(maxBatchSize, forKey: .maxBatchSize)
        }
        if let queryParam = queryParam {
            var queryParamContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .queryParam)
            for (dictKey0, queryparammap0) in queryParam {
                try queryParamContainer.encode(queryparammap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
