// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Summary information about a pipeline execution.</p>
public struct PipelineExecutionSummary: Equatable {
    /// <p>The date and time of the last change to the pipeline execution, in timestamp
    ///             format.</p>
    public let lastUpdateTime: Date?
    /// <p>The ID of the pipeline execution.</p>
    public let pipelineExecutionId: String?
    /// <p>A list of the source artifact revisions that initiated a pipeline
    ///             execution.</p>
    public let sourceRevisions: [SourceRevision]?
    /// <p>The date and time when the pipeline execution began, in timestamp format.</p>
    public let startTime: Date?
    /// <p>The status of the pipeline execution.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>InProgress: The pipeline execution is currently running.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Stopped: The pipeline execution was manually stopped. For more information,
    ///                     see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Stopping: The pipeline execution received a request to be manually stopped.
    ///                     Depending on the selected stop mode, the execution is either completing or
    ///                     abandoning in-progress actions. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-executions-stopped">Stopped Executions</a>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Succeeded: The pipeline execution was completed successfully. </p>
    ///             </li>
    ///             <li>
    ///                 <p>Superseded: While this pipeline execution was waiting for the next stage to
    ///                     be completed, a newer pipeline execution advanced and continued through the
    ///                     pipeline instead. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts.html#concepts-superseded">Superseded Executions</a>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Failed: The pipeline execution was not completed successfully.</p>
    ///             </li>
    ///          </ul>
    public let status: PipelineExecutionStatus?
    /// <p>The interaction that stopped a pipeline execution.</p>
    public let stopTrigger: StopExecutionTrigger?
    /// <p>The interaction or event that started a pipeline execution, such as automated change
    ///             detection or a <code>StartPipelineExecution</code> API call.</p>
    public let trigger: ExecutionTrigger?

    public init (
        lastUpdateTime: Date? = nil,
        pipelineExecutionId: String? = nil,
        sourceRevisions: [SourceRevision]? = nil,
        startTime: Date? = nil,
        status: PipelineExecutionStatus? = nil,
        stopTrigger: StopExecutionTrigger? = nil,
        trigger: ExecutionTrigger? = nil
    )
    {
        self.lastUpdateTime = lastUpdateTime
        self.pipelineExecutionId = pipelineExecutionId
        self.sourceRevisions = sourceRevisions
        self.startTime = startTime
        self.status = status
        self.stopTrigger = stopTrigger
        self.trigger = trigger
    }
}
