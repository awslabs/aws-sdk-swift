// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input configuration properties for requesting a batch translation job.</p>
public struct InputDataConfig: Equatable {
    /// <p>Describes the format of the data that you submit to Amazon Translate as input. You can
    ///       specify one of the following multipurpose internet mail extension (MIME) types:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>text/html</code>: The input data consists of one or more HTML files. Amazon
    ///           Translate translates only the text that resides in the <code>html</code> element in each
    ///           file.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>text/plain</code>: The input data consists of one or more unformatted text
    ///           files. Amazon Translate translates every character in this type of input.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code>:
    ///           The input data consists of one or more Word documents (.docx).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>application/vnd.openxmlformats-officedocument.presentationml.presentation</code>:
    ///           The input data consists of one or more PowerPoint Presentation files (.pptx).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</code>: The
    ///           input data consists of one or more Excel Workbook files (.xlsx).</p>
    ///             </li>
    ///          </ul>
    ///          <important>
    ///             <p>If you structure your input data as HTML, ensure that you set this parameter to
    ///           <code>text/html</code>. By doing so, you cut costs by limiting the translation to the
    ///         contents of the <code>html</code> element in each file. Otherwise, if you set this parameter
    ///         to <code>text/plain</code>, your costs will cover the translation of every character.</p>
    ///          </important>
    public let contentType: String?
    /// <p>The URI of the AWS S3 folder that contains the input file. The folder must be in the
    ///       same Region as the API endpoint you are calling.</p>
    public let s3Uri: String?

    public init (
        contentType: String? = nil,
        s3Uri: String? = nil
    )
    {
        self.contentType = contentType
        self.s3Uri = s3Uri
    }
}
