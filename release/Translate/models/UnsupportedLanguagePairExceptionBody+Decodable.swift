// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnsupportedLanguagePairExceptionBody: Equatable {
    public let message: String?
    public let sourceLanguageCode: String?
    public let targetLanguageCode: String?
}

extension UnsupportedLanguagePairExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case message = "Message"
        case sourceLanguageCode = "SourceLanguageCode"
        case targetLanguageCode = "TargetLanguageCode"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let sourceLanguageCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceLanguageCode)
        sourceLanguageCode = sourceLanguageCodeDecoded
        let targetLanguageCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetLanguageCode)
        targetLanguageCode = targetLanguageCodeDecoded
    }
}
