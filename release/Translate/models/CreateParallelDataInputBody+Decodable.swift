// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateParallelDataInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let parallelDataConfig: ParallelDataConfig?
    public let encryptionKey: EncryptionKey?
    public let clientToken: String?
}

extension CreateParallelDataInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken = "ClientToken"
        case description = "Description"
        case encryptionKey = "EncryptionKey"
        case name = "Name"
        case parallelDataConfig = "ParallelDataConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let parallelDataConfigDecoded = try containerValues.decodeIfPresent(ParallelDataConfig.self, forKey: .parallelDataConfig)
        parallelDataConfig = parallelDataConfigDecoded
        let encryptionKeyDecoded = try containerValues.decodeIfPresent(EncryptionKey.self, forKey: .encryptionKey)
        encryptionKey = encryptionKeyDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
