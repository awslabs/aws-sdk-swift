// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTextTranslationJobsOutputBody: Equatable {
    public let textTranslationJobPropertiesList: [TextTranslationJobProperties]?
    public let nextToken: String?
}

extension ListTextTranslationJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case textTranslationJobPropertiesList = "TextTranslationJobPropertiesList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textTranslationJobPropertiesListContainer = try containerValues.decodeIfPresent([TextTranslationJobProperties].self, forKey: .textTranslationJobPropertiesList)
        var textTranslationJobPropertiesListDecoded0:[TextTranslationJobProperties]? = nil
        if let textTranslationJobPropertiesListContainer = textTranslationJobPropertiesListContainer {
            textTranslationJobPropertiesListDecoded0 = [TextTranslationJobProperties]()
            for structure0 in textTranslationJobPropertiesListContainer {
                textTranslationJobPropertiesListDecoded0?.append(structure0)
            }
        }
        textTranslationJobPropertiesList = textTranslationJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
