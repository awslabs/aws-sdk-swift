// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information about a translation job.</p>
public struct TextTranslationJobProperties: Equatable {
    /// <p>The Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role
    ///       that granted Amazon Translate read access to the job's input data.</p>
    public let dataAccessRoleArn: String?
    /// <p>The time at which the translation job ended.</p>
    public let endTime: Date?
    /// <p>The input configuration properties that were specified when the job was requested.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The number of documents successfully and unsuccessfully processed during the translation
    ///       job.</p>
    public let jobDetails: JobDetails?
    /// <p>The ID of the translation job.</p>
    public let jobId: String?
    /// <p>The user-defined name of the translation job.</p>
    public let jobName: String?
    /// <p>The status of the translation job.</p>
    public let jobStatus: JobStatus?
    /// <p>An explanation of any errors that may have occured during the translation job.</p>
    public let message: String?
    /// <p>The output configuration properties that were specified when the job was requested.</p>
    public let outputDataConfig: OutputDataConfig?
    /// <p>A list containing the names of the parallel data resources applied to the translation
    ///       job.</p>
    public let parallelDataNames: [String]?
    /// <p>The language code of the language of the source text. The language must be a language
    ///       supported by Amazon Translate.</p>
    public let sourceLanguageCode: String?
    /// <p>The time at which the translation job was submitted.</p>
    public let submittedTime: Date?
    /// <p>The language code of the language of the target text. The language must be a language
    ///       supported by Amazon Translate.</p>
    public let targetLanguageCodes: [String]?
    /// <p>A list containing the names of the terminologies applied to a translation job. Only one
    ///       terminology can be applied per <a>StartTextTranslationJob</a> request at this
    ///       time.</p>
    public let terminologyNames: [String]?

    public init (
        dataAccessRoleArn: String? = nil,
        endTime: Date? = nil,
        inputDataConfig: InputDataConfig? = nil,
        jobDetails: JobDetails? = nil,
        jobId: String? = nil,
        jobName: String? = nil,
        jobStatus: JobStatus? = nil,
        message: String? = nil,
        outputDataConfig: OutputDataConfig? = nil,
        parallelDataNames: [String]? = nil,
        sourceLanguageCode: String? = nil,
        submittedTime: Date? = nil,
        targetLanguageCodes: [String]? = nil,
        terminologyNames: [String]? = nil
    )
    {
        self.dataAccessRoleArn = dataAccessRoleArn
        self.endTime = endTime
        self.inputDataConfig = inputDataConfig
        self.jobDetails = jobDetails
        self.jobId = jobId
        self.jobName = jobName
        self.jobStatus = jobStatus
        self.message = message
        self.outputDataConfig = outputDataConfig
        self.parallelDataNames = parallelDataNames
        self.sourceLanguageCode = sourceLanguageCode
        self.submittedTime = submittedTime
        self.targetLanguageCodes = targetLanguageCodes
        self.terminologyNames = terminologyNames
    }
}
