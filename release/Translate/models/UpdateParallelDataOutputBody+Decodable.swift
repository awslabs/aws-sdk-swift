// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateParallelDataOutputBody: Equatable {
    public let name: String?
    public let status: ParallelDataStatus?
    public let latestUpdateAttemptStatus: ParallelDataStatus?
    public let latestUpdateAttemptAt: Date?
}

extension UpdateParallelDataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case latestUpdateAttemptAt = "LatestUpdateAttemptAt"
        case latestUpdateAttemptStatus = "LatestUpdateAttemptStatus"
        case name = "Name"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ParallelDataStatus.self, forKey: .status)
        status = statusDecoded
        let latestUpdateAttemptStatusDecoded = try containerValues.decodeIfPresent(ParallelDataStatus.self, forKey: .latestUpdateAttemptStatus)
        latestUpdateAttemptStatus = latestUpdateAttemptStatusDecoded
        let latestUpdateAttemptAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .latestUpdateAttemptAt)
        latestUpdateAttemptAt = latestUpdateAttemptAtDecoded
    }
}
