// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTerminologyInputBody: Equatable {
    public let name: String?
    public let terminologyDataFormat: TerminologyDataFormat?
}

extension GetTerminologyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case terminologyDataFormat = "TerminologyDataFormat"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let terminologyDataFormatDecoded = try containerValues.decodeIfPresent(TerminologyDataFormat.self, forKey: .terminologyDataFormat)
        terminologyDataFormat = terminologyDataFormatDecoded
    }
}
