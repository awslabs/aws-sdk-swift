// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTextTranslationJobInput: Equatable {
    /// <p>A unique identifier for the request. This token is auto-generated when using the Amazon Translate
    ///       SDK.</p>
    public var clientToken: String?
    /// <p>The Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role
    ///       that grants Amazon Translate read access to your input data. For more nformation, see <a>identity-and-access-management</a>.</p>
    public let dataAccessRoleArn: String?
    /// <p>Specifies the format and S3 location of the input documents for the translation
    ///       job.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The name of the batch translation job to be performed.</p>
    public let jobName: String?
    /// <p>Specifies the S3 folder to which your job output will be saved.
    ///       </p>
    public let outputDataConfig: OutputDataConfig?
    /// <p>The names of the parallel data resources to use in the batch translation job. For a list
    ///       of available parallel data resources, use the <a>ListParallelData</a>
    ///       operation.</p>
    public let parallelDataNames: [String]?
    /// <p>The language code of the input language. For a list of language codes, see <a>what-is-languages</a>.</p>
    ///          <p>Amazon Translate does not automatically detect a source language during batch translation
    ///       jobs.</p>
    public let sourceLanguageCode: String?
    /// <p>The language code of the output language.</p>
    public let targetLanguageCodes: [String]?
    /// <p>The name of the terminology to use in the batch translation job. For a list of available
    ///       terminologies, use the <a>ListTerminologies</a> operation.</p>
    public let terminologyNames: [String]?

    public init (
        clientToken: String? = nil,
        dataAccessRoleArn: String? = nil,
        inputDataConfig: InputDataConfig? = nil,
        jobName: String? = nil,
        outputDataConfig: OutputDataConfig? = nil,
        parallelDataNames: [String]? = nil,
        sourceLanguageCode: String? = nil,
        targetLanguageCodes: [String]? = nil,
        terminologyNames: [String]? = nil
    )
    {
        self.clientToken = clientToken
        self.dataAccessRoleArn = dataAccessRoleArn
        self.inputDataConfig = inputDataConfig
        self.jobName = jobName
        self.outputDataConfig = outputDataConfig
        self.parallelDataNames = parallelDataNames
        self.sourceLanguageCode = sourceLanguageCode
        self.targetLanguageCodes = targetLanguageCodes
        self.terminologyNames = terminologyNames
    }
}
