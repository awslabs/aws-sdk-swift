// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A container element for the job configuration and status information returned by a <code>Describe Job</code> request.</p>
public struct JobDescriptor: Equatable {
    /// <p>Indicates whether confirmation is required before Amazon S3 begins running the specified job. Confirmation is required only for jobs created through the Amazon S3 console.</p>
    public let confirmationRequired: Bool
    /// <p>A timestamp indicating when this job was created.</p>
    public let creationTime: Date?
    /// <p>The description for this job, if one was provided in this job's <code>Create Job</code> request.</p>
    public let description: String?
    /// <p>If the specified job failed, this field contains information describing the failure.</p>
    public let failureReasons: [JobFailure]?
    /// <p>The Amazon Resource Name (ARN) for this job.</p>
    public let jobArn: String?
    /// <p>The ID for the specified job.</p>
    public let jobId: String?
    /// <p>The configuration information for the specified job's manifest object.</p>
    public let manifest: JobManifest?
    /// <p>The operation that the specified job is configured to run on the objects listed in the manifest.</p>
    public let operation: JobOperation?
    /// <p>The priority of the specified job.</p>
    public let priority: Int
    /// <p>Describes the total number of tasks that the specified job has run, the number of tasks
    ///          that succeeded, and the number of tasks that failed.</p>
    public let progressSummary: JobProgressSummary?
    /// <p>Contains the configuration information for the job-completion report if you requested one in the <code>Create Job</code> request.</p>
    public let report: JobReport?
    /// <p>The Amazon Resource Name (ARN) for the AWS Identity and Access Management (IAM) role
    ///          assigned to run the tasks for this job.</p>
    public let roleArn: String?
    /// <p>The current status of the specified job.</p>
    public let status: JobStatus?
    /// <p>The reason for updating the job.</p>
    public let statusUpdateReason: String?
    /// <p>The reason why the specified job was suspended. A job is only suspended if you create it through the Amazon S3 console. When you create the job, it enters
    ///             the <code>Suspended</code> state to await confirmation before running. After you confirm the job, it automatically exits the <code>Suspended</code> state.</p>
    public let suspendedCause: String?
    /// <p>The timestamp when this job was suspended, if it has been suspended.</p>
    public let suspendedDate: Date?
    /// <p>A timestamp indicating when this job terminated. A job's termination date is the date and time when it succeeded, failed, or was canceled.</p>
    public let terminationDate: Date?

    public init (
        confirmationRequired: Bool = false,
        creationTime: Date? = nil,
        description: String? = nil,
        failureReasons: [JobFailure]? = nil,
        jobArn: String? = nil,
        jobId: String? = nil,
        manifest: JobManifest? = nil,
        operation: JobOperation? = nil,
        priority: Int = 0,
        progressSummary: JobProgressSummary? = nil,
        report: JobReport? = nil,
        roleArn: String? = nil,
        status: JobStatus? = nil,
        statusUpdateReason: String? = nil,
        suspendedCause: String? = nil,
        suspendedDate: Date? = nil,
        terminationDate: Date? = nil
    )
    {
        self.confirmationRequired = confirmationRequired
        self.creationTime = creationTime
        self.description = description
        self.failureReasons = failureReasons
        self.jobArn = jobArn
        self.jobId = jobId
        self.manifest = manifest
        self.operation = operation
        self.priority = priority
        self.progressSummary = progressSummary
        self.report = report
        self.roleArn = roleArn
        self.status = status
        self.statusUpdateReason = statusUpdateReason
        self.suspendedCause = suspendedCause
        self.suspendedDate = suspendedDate
        self.terminationDate = terminationDate
    }
}
