// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3SetObjectRetentionOperation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bypassGovernanceRetention = "BypassGovernanceRetention"
        case retention = "Retention"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if bypassGovernanceRetention != false {
            try container.encode(bypassGovernanceRetention, forKey: Key("bypassGovernanceRetention"))
        }
        if let retention = retention {
            try container.encode(retention, forKey: Key("retention"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bypassGovernanceRetentionDecoded = try containerValues.decode(Bool.self, forKey: .bypassGovernanceRetention)
        bypassGovernanceRetention = bypassGovernanceRetentionDecoded
        let retentionDecoded = try containerValues.decodeIfPresent(S3Retention.self, forKey: .retention)
        retention = retentionDecoded
    }
}
