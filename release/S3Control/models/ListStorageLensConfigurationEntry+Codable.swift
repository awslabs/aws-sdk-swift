// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListStorageLensConfigurationEntry: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case homeRegion = "HomeRegion"
        case id = "Id"
        case isEnabled = "IsEnabled"
        case storageLensArn = "StorageLensArn"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if let homeRegion = homeRegion {
            try container.encode(homeRegion, forKey: Key("homeRegion"))
        }
        if let id = id {
            try container.encode(id, forKey: Key("id"))
        }
        if isEnabled != false {
            try container.encode(isEnabled, forKey: Key("isEnabled"))
        }
        if let storageLensArn = storageLensArn {
            try container.encode(storageLensArn, forKey: Key("storageLensArn"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let storageLensArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .storageLensArn)
        storageLensArn = storageLensArnDecoded
        let homeRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .homeRegion)
        homeRegion = homeRegionDecoded
        let isEnabledDecoded = try containerValues.decode(Bool.self, forKey: .isEnabled)
        isEnabled = isEnabledDecoded
    }
}
