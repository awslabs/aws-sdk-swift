// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum JobStatus {
    case active
    case cancelled
    case cancelling
    case complete
    case completing
    case failed
    case failing
    case new
    case paused
    case pausing
    case preparing
    case ready
    case suspended
    case sdkUnknown(String)
}

extension JobStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [JobStatus] {
        return [
            .active,
            .cancelled,
            .cancelling,
            .complete,
            .completing,
            .failed,
            .failing,
            .new,
            .paused,
            .pausing,
            .preparing,
            .ready,
            .suspended,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "Active"
        case .cancelled: return "Cancelled"
        case .cancelling: return "Cancelling"
        case .complete: return "Complete"
        case .completing: return "Completing"
        case .failed: return "Failed"
        case .failing: return "Failing"
        case .new: return "New"
        case .paused: return "Paused"
        case .pausing: return "Pausing"
        case .preparing: return "Preparing"
        case .ready: return "Ready"
        case .suspended: return "Suspended"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = JobStatus(rawValue: rawValue) ?? JobStatus.sdkUnknown(rawValue)
    }
}
