// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobManifest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case location = "Location"
        case spec = "Spec"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if let location = location {
            try container.encode(location, forKey: Key("location"))
        }
        if let spec = spec {
            try container.encode(spec, forKey: Key("spec"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let specDecoded = try containerValues.decodeIfPresent(JobManifestSpec.self, forKey: .spec)
        spec = specDecoded
        let locationDecoded = try containerValues.decodeIfPresent(JobManifestLocation.self, forKey: .location)
        location = locationDecoded
    }
}
