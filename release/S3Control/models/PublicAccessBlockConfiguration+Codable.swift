// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PublicAccessBlockConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case blockPublicAcls = "BlockPublicAcls"
        case blockPublicPolicy = "BlockPublicPolicy"
        case ignorePublicAcls = "IgnorePublicAcls"
        case restrictPublicBuckets = "RestrictPublicBuckets"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if blockPublicAcls != false {
            try container.encode(blockPublicAcls, forKey: Key("BlockPublicAcls"))
        }
        if blockPublicPolicy != false {
            try container.encode(blockPublicPolicy, forKey: Key("BlockPublicPolicy"))
        }
        if ignorePublicAcls != false {
            try container.encode(ignorePublicAcls, forKey: Key("IgnorePublicAcls"))
        }
        if restrictPublicBuckets != false {
            try container.encode(restrictPublicBuckets, forKey: Key("RestrictPublicBuckets"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockPublicAclsDecoded = try containerValues.decode(Bool.self, forKey: .blockPublicAcls)
        blockPublicAcls = blockPublicAclsDecoded
        let ignorePublicAclsDecoded = try containerValues.decode(Bool.self, forKey: .ignorePublicAcls)
        ignorePublicAcls = ignorePublicAclsDecoded
        let blockPublicPolicyDecoded = try containerValues.decode(Bool.self, forKey: .blockPublicPolicy)
        blockPublicPolicy = blockPublicPolicyDecoded
        let restrictPublicBucketsDecoded = try containerValues.decode(Bool.self, forKey: .restrictPublicBuckets)
        restrictPublicBuckets = restrictPublicBucketsDecoded
    }
}
