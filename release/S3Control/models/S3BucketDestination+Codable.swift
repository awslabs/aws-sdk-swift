// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3BucketDestination: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case arn = "Arn"
        case encryption = "Encryption"
        case format = "Format"
        case outputSchemaVersion = "OutputSchemaVersion"
        case prefix = "Prefix"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if let accountId = accountId {
            try container.encode(accountId, forKey: Key("accountId"))
        }
        if let arn = arn {
            try container.encode(arn, forKey: Key("arn"))
        }
        if let encryption = encryption {
            try container.encode(encryption, forKey: Key("encryption"))
        }
        if let format = format {
            try container.encode(format, forKey: Key("format"))
        }
        if let outputSchemaVersion = outputSchemaVersion {
            try container.encode(outputSchemaVersion, forKey: Key("outputSchemaVersion"))
        }
        if let prefix = prefix {
            try container.encode(prefix, forKey: Key("prefix"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatDecoded = try containerValues.decodeIfPresent(Format.self, forKey: .format)
        format = formatDecoded
        let outputSchemaVersionDecoded = try containerValues.decodeIfPresent(OutputSchemaVersion.self, forKey: .outputSchemaVersion)
        outputSchemaVersion = outputSchemaVersionDecoded
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let prefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .prefix)
        prefix = prefixDecoded
        let encryptionDecoded = try containerValues.decodeIfPresent(StorageLensDataExportEncryption.self, forKey: .encryption)
        encryption = encryptionDecoded
    }
}
