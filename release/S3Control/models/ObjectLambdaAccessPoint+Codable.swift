// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ObjectLambdaAccessPoint: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case objectLambdaAccessPointArn = "ObjectLambdaAccessPointArn"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if let name = name {
            try container.encode(name, forKey: Key("name"))
        }
        if let objectLambdaAccessPointArn = objectLambdaAccessPointArn {
            try container.encode(objectLambdaAccessPointArn, forKey: Key("objectLambdaAccessPointArn"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let objectLambdaAccessPointArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectLambdaAccessPointArn)
        objectLambdaAccessPointArn = objectLambdaAccessPointArnDecoded
    }
}
