// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The container for the Outposts bucket lifecycle rule.</p>
public struct LifecycleRule: Equatable {
    /// <p>Specifies the days since the initiation of an incomplete multipart upload that Amazon S3
    ///          waits before permanently removing all parts of the upload. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
    ///             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the
    ///             <i>Amazon S3 User Guide</i>.</p>
    public let abortIncompleteMultipartUpload: AbortIncompleteMultipartUpload?
    /// <p>Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object
    ///          has a delete marker.</p>
    public let expiration: LifecycleExpiration?
    /// <p>The container for the filter of lifecycle rule.</p>
    public let filter: LifecycleRuleFilter?
    /// <p>Unique identifier for the rule. The value cannot be longer than 255 characters.</p>
    public let iD: String?
    /// <p>The noncurrent version expiration of the lifecycle rule.</p>
    ///          <note>
    ///             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
    ///          </note>
    public let noncurrentVersionExpiration: NoncurrentVersionExpiration?
    /// <p> Specifies the transition rule for the lifecycle rule that describes when noncurrent
    ///          objects transition to a specific storage class. If your bucket is versioning-enabled (or
    ///          versioning is suspended), you can set this action to request that Amazon S3 transition
    ///          noncurrent object versions to a specific storage class at a set period in the object's
    ///          lifetime. </p>
    ///          <note>
    ///             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
    ///          </note>
    public let noncurrentVersionTransitions: [NoncurrentVersionTransition]?
    /// <p>If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied.</p>
    public let status: ExpirationStatus?
    /// <p>Specifies when an Amazon S3 object transitions to a specified storage class.</p>
    ///          <note>
    ///             <p>This is not supported by Amazon S3 on Outposts buckets.</p>
    ///          </note>
    public let transitions: [Transition]?

    public init (
        abortIncompleteMultipartUpload: AbortIncompleteMultipartUpload? = nil,
        expiration: LifecycleExpiration? = nil,
        filter: LifecycleRuleFilter? = nil,
        iD: String? = nil,
        noncurrentVersionExpiration: NoncurrentVersionExpiration? = nil,
        noncurrentVersionTransitions: [NoncurrentVersionTransition]? = nil,
        status: ExpirationStatus? = nil,
        transitions: [Transition]? = nil
    )
    {
        self.abortIncompleteMultipartUpload = abortIncompleteMultipartUpload
        self.expiration = expiration
        self.filter = filter
        self.iD = iD
        self.noncurrentVersionExpiration = noncurrentVersionExpiration
        self.noncurrentVersionTransitions = noncurrentVersionTransitions
        self.status = status
        self.transitions = transitions
    }
}
