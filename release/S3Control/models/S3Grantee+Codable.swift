// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3Grantee: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case displayName = "DisplayName"
        case identifier = "Identifier"
        case typeIdentifier = "TypeIdentifier"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://awss3control.amazonaws.com/doc/2018-08-20/", forKey: Key("xmlns"))
        }
        if let displayName = displayName {
            try container.encode(displayName, forKey: Key("displayName"))
        }
        if let identifier = identifier {
            try container.encode(identifier, forKey: Key("identifier"))
        }
        if let typeIdentifier = typeIdentifier {
            try container.encode(typeIdentifier, forKey: Key("typeIdentifier"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeIdentifierDecoded = try containerValues.decodeIfPresent(S3GranteeTypeIdentifier.self, forKey: .typeIdentifier)
        typeIdentifier = typeIdentifierDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identifier)
        identifier = identifierDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
    }
}
