// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ObjectLambdaContentTransformation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case awsLambda = "AwsLambda"
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        switch self {
            case let .awsLambda(awsLambda):
                if let awsLambda = awsLambda {
                    try container.encode(awsLambda, forKey: Key("awsLambda"))
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: Key("sdkUnknown"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let awsLambdaDecoded = try containerValues.decodeIfPresent(AwsLambdaTransformation.self, forKey: .awsLambda)
        if let awsLambda = awsLambdaDecoded {
            self = .awsLambda(awsLambda)
            return
        }
        self = .sdkUnknown("")
    }
}
