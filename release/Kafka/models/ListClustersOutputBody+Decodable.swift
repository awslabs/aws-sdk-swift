// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListClustersOutputBody: Equatable {
    public let clusterInfoList: [ClusterInfo]?
    public let nextToken: String?
}

extension ListClustersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterInfoList = "clusterInfoList"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterInfoListContainer = try containerValues.decodeIfPresent([ClusterInfo].self, forKey: .clusterInfoList)
        var clusterInfoListDecoded0:[ClusterInfo]? = nil
        if let clusterInfoListContainer = clusterInfoListContainer {
            clusterInfoListDecoded0 = [ClusterInfo]()
            for structure0 in clusterInfoListContainer {
                clusterInfoListDecoded0?.append(structure0)
            }
        }
        clusterInfoList = clusterInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
