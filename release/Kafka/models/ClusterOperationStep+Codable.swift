// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterOperationStep: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case stepInfo = "stepInfo"
        case stepName = "stepName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let stepInfo = stepInfo {
            try encodeContainer.encode(stepInfo, forKey: .stepInfo)
        }
        if let stepName = stepName {
            try encodeContainer.encode(stepName, forKey: .stepName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stepInfoDecoded = try containerValues.decodeIfPresent(ClusterOperationStepInfo.self, forKey: .stepInfo)
        stepInfo = stepInfoDecoded
        let stepNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stepName)
        stepName = stepNameDecoded
    }
}
