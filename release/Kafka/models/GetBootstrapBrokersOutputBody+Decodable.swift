// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBootstrapBrokersOutputBody: Equatable {
    public let bootstrapBrokerString: String?
    public let bootstrapBrokerStringTls: String?
    public let bootstrapBrokerStringSaslScram: String?
    public let bootstrapBrokerStringSaslIam: String?
}

extension GetBootstrapBrokersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bootstrapBrokerString = "bootstrapBrokerString"
        case bootstrapBrokerStringSaslIam = "bootstrapBrokerStringSaslIam"
        case bootstrapBrokerStringSaslScram = "bootstrapBrokerStringSaslScram"
        case bootstrapBrokerStringTls = "bootstrapBrokerStringTls"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bootstrapBrokerStringDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bootstrapBrokerString)
        bootstrapBrokerString = bootstrapBrokerStringDecoded
        let bootstrapBrokerStringTlsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bootstrapBrokerStringTls)
        bootstrapBrokerStringTls = bootstrapBrokerStringTlsDecoded
        let bootstrapBrokerStringSaslScramDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bootstrapBrokerStringSaslScram)
        bootstrapBrokerStringSaslScram = bootstrapBrokerStringSaslScramDecoded
        let bootstrapBrokerStringSaslIamDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bootstrapBrokerStringSaslIam)
        bootstrapBrokerStringSaslIam = bootstrapBrokerStringSaslIamDecoded
    }
}
