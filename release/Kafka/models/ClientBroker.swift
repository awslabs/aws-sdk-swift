// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Client-broker encryption in transit setting.</p>
public enum ClientBroker {
    case plaintext
    case tls
    case tlsPlaintext
    case sdkUnknown(String)
}

extension ClientBroker : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ClientBroker] {
        return [
            .plaintext,
            .tls,
            .tlsPlaintext,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .plaintext: return "PLAINTEXT"
        case .tls: return "TLS"
        case .tlsPlaintext: return "TLS_PLAINTEXT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ClientBroker(rawValue: rawValue) ?? ClientBroker.sdkUnknown(rawValue)
    }
}
