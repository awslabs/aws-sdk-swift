// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateMonitoringInputBody: Equatable {
    public let currentVersion: String?
    public let enhancedMonitoring: EnhancedMonitoring?
    public let openMonitoring: OpenMonitoringInfo?
    public let loggingInfo: LoggingInfo?
}

extension UpdateMonitoringInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case currentVersion = "currentVersion"
        case enhancedMonitoring = "enhancedMonitoring"
        case loggingInfo = "loggingInfo"
        case openMonitoring = "openMonitoring"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let currentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .currentVersion)
        currentVersion = currentVersionDecoded
        let enhancedMonitoringDecoded = try containerValues.decodeIfPresent(EnhancedMonitoring.self, forKey: .enhancedMonitoring)
        enhancedMonitoring = enhancedMonitoringDecoded
        let openMonitoringDecoded = try containerValues.decodeIfPresent(OpenMonitoringInfo.self, forKey: .openMonitoring)
        openMonitoring = openMonitoringDecoded
        let loggingInfoDecoded = try containerValues.decodeIfPresent(LoggingInfo.self, forKey: .loggingInfo)
        loggingInfo = loggingInfoDecoded
    }
}
