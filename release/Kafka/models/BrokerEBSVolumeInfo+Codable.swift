// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BrokerEBSVolumeInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case kafkaBrokerNodeId = "kafkaBrokerNodeId"
        case volumeSizeGB = "volumeSizeGB"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kafkaBrokerNodeId = kafkaBrokerNodeId {
            try encodeContainer.encode(kafkaBrokerNodeId, forKey: .kafkaBrokerNodeId)
        }
        if volumeSizeGB != 0 {
            try encodeContainer.encode(volumeSizeGB, forKey: .volumeSizeGB)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let kafkaBrokerNodeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kafkaBrokerNodeId)
        kafkaBrokerNodeId = kafkaBrokerNodeIdDecoded
        let volumeSizeGBDecoded = try containerValues.decode(Int.self, forKey: .volumeSizeGB)
        volumeSizeGB = volumeSizeGBDecoded
    }
}
