// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDisassociateScramSecretInputBody: Equatable {
    public let secretArnList: [String]?
}

extension BatchDisassociateScramSecretInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case secretArnList = "secretArnList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretArnListContainer = try containerValues.decodeIfPresent([String].self, forKey: .secretArnList)
        var secretArnListDecoded0:[String]? = nil
        if let secretArnListContainer = secretArnListContainer {
            secretArnListDecoded0 = [String]()
            for string0 in secretArnListContainer {
                secretArnListDecoded0?.append(string0)
            }
        }
        secretArnList = secretArnListDecoded0
    }
}
