// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClientAuthentication: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sasl = "sasl"
        case tls = "tls"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sasl = sasl {
            try encodeContainer.encode(sasl, forKey: .sasl)
        }
        if let tls = tls {
            try encodeContainer.encode(tls, forKey: .tls)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let saslDecoded = try containerValues.decodeIfPresent(Sasl.self, forKey: .sasl)
        sasl = saslDecoded
        let tlsDecoded = try containerValues.decodeIfPresent(Tls.self, forKey: .tls)
        tls = tlsDecoded
    }
}
