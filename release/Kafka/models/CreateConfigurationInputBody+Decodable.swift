// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateConfigurationInputBody: Equatable {
    public let description: String?
    public let kafkaVersions: [String]?
    public let name: String?
    public let serverProperties: Data?
}

extension CreateConfigurationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description = "description"
        case kafkaVersions = "kafkaVersions"
        case name = "name"
        case serverProperties = "serverProperties"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let kafkaVersionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .kafkaVersions)
        var kafkaVersionsDecoded0:[String]? = nil
        if let kafkaVersionsContainer = kafkaVersionsContainer {
            kafkaVersionsDecoded0 = [String]()
            for string0 in kafkaVersionsContainer {
                kafkaVersionsDecoded0?.append(string0)
            }
        }
        kafkaVersions = kafkaVersionsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let serverPropertiesDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .serverProperties)
        serverProperties = serverPropertiesDecoded
    }
}
