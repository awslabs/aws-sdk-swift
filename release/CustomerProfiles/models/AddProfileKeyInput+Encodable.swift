// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddProfileKeyInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case keyName = "KeyName"
        case profileId = "ProfileId"
        case values = "Values"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let keyName = keyName {
            try encodeContainer.encode(keyName, forKey: .keyName)
        }
        if let profileId = profileId {
            try encodeContainer.encode(profileId, forKey: .profileId)
        }
        if let values = values {
            var valuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .values)
            for requestvaluelist0 in values {
                try valuesContainer.encode(requestvaluelist0)
            }
        }
    }
}
