// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct MergeProfilesInputBody: Equatable {
    public let mainProfileId: String?
    public let profileIdsToBeMerged: [String]?
    public let fieldSourceProfileIds: FieldSourceProfileIds?
}

extension MergeProfilesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fieldSourceProfileIds = "FieldSourceProfileIds"
        case mainProfileId = "MainProfileId"
        case profileIdsToBeMerged = "ProfileIdsToBeMerged"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mainProfileIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mainProfileId)
        mainProfileId = mainProfileIdDecoded
        let profileIdsToBeMergedContainer = try containerValues.decodeIfPresent([String].self, forKey: .profileIdsToBeMerged)
        var profileIdsToBeMergedDecoded0:[String]? = nil
        if let profileIdsToBeMergedContainer = profileIdsToBeMergedContainer {
            profileIdsToBeMergedDecoded0 = [String]()
            for string0 in profileIdsToBeMergedContainer {
                profileIdsToBeMergedDecoded0?.append(string0)
            }
        }
        profileIdsToBeMerged = profileIdsToBeMergedDecoded0
        let fieldSourceProfileIdsDecoded = try containerValues.decodeIfPresent(FieldSourceProfileIds.self, forKey: .fieldSourceProfileIds)
        fieldSourceProfileIds = fieldSourceProfileIdsDecoded
    }
}
