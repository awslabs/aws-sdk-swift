// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DomainStats: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case meteringProfileCount = "MeteringProfileCount"
        case objectCount = "ObjectCount"
        case profileCount = "ProfileCount"
        case totalSize = "TotalSize"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if meteringProfileCount != 0 {
            try encodeContainer.encode(meteringProfileCount, forKey: .meteringProfileCount)
        }
        if objectCount != 0 {
            try encodeContainer.encode(objectCount, forKey: .objectCount)
        }
        if profileCount != 0 {
            try encodeContainer.encode(profileCount, forKey: .profileCount)
        }
        if totalSize != 0 {
            try encodeContainer.encode(totalSize, forKey: .totalSize)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profileCountDecoded = try containerValues.decode(Int.self, forKey: .profileCount)
        profileCount = profileCountDecoded
        let meteringProfileCountDecoded = try containerValues.decode(Int.self, forKey: .meteringProfileCount)
        meteringProfileCount = meteringProfileCountDecoded
        let objectCountDecoded = try containerValues.decode(Int.self, forKey: .objectCount)
        objectCount = objectCountDecoded
        let totalSizeDecoded = try containerValues.decode(Int.self, forKey: .totalSize)
        totalSize = totalSizeDecoded
    }
}
