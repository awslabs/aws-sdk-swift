// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListProfileObjectTypeTemplateItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sourceName = "SourceName"
        case sourceObject = "SourceObject"
        case templateId = "TemplateId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sourceName = sourceName {
            try encodeContainer.encode(sourceName, forKey: .sourceName)
        }
        if let sourceObject = sourceObject {
            try encodeContainer.encode(sourceObject, forKey: .sourceObject)
        }
        if let templateId = templateId {
            try encodeContainer.encode(templateId, forKey: .templateId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateId)
        templateId = templateIdDecoded
        let sourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceName)
        sourceName = sourceNameDecoded
        let sourceObjectDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceObject)
        sourceObject = sourceObjectDecoded
    }
}
