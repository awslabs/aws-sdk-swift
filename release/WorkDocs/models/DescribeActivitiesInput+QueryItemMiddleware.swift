// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeActivitiesInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeActivitiesInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeActivitiesInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeActivitiesOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let endTime = input.operationInput.endTime {
            let endTimeQueryItem = URLQueryItem(name: "endTime".urlPercentEncoding(), value: String(endTime.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(endTimeQueryItem)
        }
        if let resourceId = input.operationInput.resourceId {
            let resourceIdQueryItem = URLQueryItem(name: "resourceId".urlPercentEncoding(), value: String(resourceId).urlPercentEncoding())
            input.builder.withQueryItem(resourceIdQueryItem)
        }
        if let userId = input.operationInput.userId {
            let userIdQueryItem = URLQueryItem(name: "userId".urlPercentEncoding(), value: String(userId).urlPercentEncoding())
            input.builder.withQueryItem(userIdQueryItem)
        }
        if let startTime = input.operationInput.startTime {
            let startTimeQueryItem = URLQueryItem(name: "startTime".urlPercentEncoding(), value: String(startTime.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(startTimeQueryItem)
        }
        let includeIndirectActivitiesQueryItem = URLQueryItem(name: "includeIndirectActivities".urlPercentEncoding(), value: String(input.operationInput.includeIndirectActivities).urlPercentEncoding())
        input.builder.withQueryItem(includeIndirectActivitiesQueryItem)
        if let organizationId = input.operationInput.organizationId {
            let organizationIdQueryItem = URLQueryItem(name: "organizationId".urlPercentEncoding(), value: String(organizationId).urlPercentEncoding())
            input.builder.withQueryItem(organizationIdQueryItem)
        }
        if let limit = input.operationInput.limit {
            let limitQueryItem = URLQueryItem(name: "limit".urlPercentEncoding(), value: String(limit).urlPercentEncoding())
            input.builder.withQueryItem(limitQueryItem)
        }
        if let marker = input.operationInput.marker {
            let markerQueryItem = URLQueryItem(name: "marker".urlPercentEncoding(), value: String(marker).urlPercentEncoding())
            input.builder.withQueryItem(markerQueryItem)
        }
        if let activityTypes = input.operationInput.activityTypes {
            let activityTypesQueryItem = URLQueryItem(name: "activityTypes".urlPercentEncoding(), value: String(activityTypes).urlPercentEncoding())
            input.builder.withQueryItem(activityTypesQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeActivitiesInput>
    public typealias MOutput = OperationOutput<DescribeActivitiesOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DescribeActivitiesOutputError>
}
