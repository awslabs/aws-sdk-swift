// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UserType {
    case admin
    case minimaluser
    case poweruser
    case user
    case workspacesuser
    case sdkUnknown(String)
}

extension UserType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UserType] {
        return [
            .admin,
            .minimaluser,
            .poweruser,
            .user,
            .workspacesuser,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .admin: return "ADMIN"
        case .minimaluser: return "MINIMALUSER"
        case .poweruser: return "POWERUSER"
        case .user: return "USER"
        case .workspacesuser: return "WORKSPACESUSER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UserType(rawValue: rawValue) ?? UserType.sdkUnknown(rawValue)
    }
}
