// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddResourcePermissionsInputBody: Equatable {
    public let principals: [SharePrincipal]?
    public let notificationOptions: NotificationOptions?
}

extension AddResourcePermissionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case notificationOptions = "NotificationOptions"
        case principals = "Principals"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalsContainer = try containerValues.decodeIfPresent([SharePrincipal].self, forKey: .principals)
        var principalsDecoded0:[SharePrincipal]? = nil
        if let principalsContainer = principalsContainer {
            principalsDecoded0 = [SharePrincipal]()
            for structure0 in principalsContainer {
                principalsDecoded0?.append(structure0)
            }
        }
        principals = principalsDecoded0
        let notificationOptionsDecoded = try containerValues.decodeIfPresent(NotificationOptions.self, forKey: .notificationOptions)
        notificationOptions = notificationOptionsDecoded
    }
}
