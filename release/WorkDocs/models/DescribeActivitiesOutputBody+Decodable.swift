// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeActivitiesOutputBody: Equatable {
    public let userActivities: [Activity]?
    public let marker: String?
}

extension DescribeActivitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case userActivities = "UserActivities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userActivitiesContainer = try containerValues.decodeIfPresent([Activity].self, forKey: .userActivities)
        var userActivitiesDecoded0:[Activity]? = nil
        if let userActivitiesContainer = userActivitiesContainer {
            userActivitiesDecoded0 = [Activity]()
            for structure0 in userActivitiesContainer {
                userActivitiesDecoded0?.append(structure0)
            }
        }
        userActivities = userActivitiesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
