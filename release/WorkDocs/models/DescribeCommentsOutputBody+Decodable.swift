// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCommentsOutputBody: Equatable {
    public let comments: [Comment]?
    public let marker: String?
}

extension DescribeCommentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case comments = "Comments"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commentsContainer = try containerValues.decodeIfPresent([Comment].self, forKey: .comments)
        var commentsDecoded0:[Comment]? = nil
        if let commentsContainer = commentsContainer {
            commentsDecoded0 = [Comment]()
            for structure0 in commentsContainer {
                commentsDecoded0?.append(structure0)
            }
        }
        comments = commentsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
