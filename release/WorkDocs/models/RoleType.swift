// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RoleType {
    case contributor
    case coowner
    case owner
    case viewer
    case sdkUnknown(String)
}

extension RoleType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RoleType] {
        return [
            .contributor,
            .coowner,
            .owner,
            .viewer,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .contributor: return "CONTRIBUTOR"
        case .coowner: return "COOWNER"
        case .owner: return "OWNER"
        case .viewer: return "VIEWER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RoleType(rawValue: rawValue) ?? RoleType.sdkUnknown(rawValue)
    }
}
