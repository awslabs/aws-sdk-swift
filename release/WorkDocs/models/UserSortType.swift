// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UserSortType {
    case fullName
    case storageLimit
    case storageUsed
    case userName
    case userStatus
    case sdkUnknown(String)
}

extension UserSortType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UserSortType] {
        return [
            .fullName,
            .storageLimit,
            .storageUsed,
            .userName,
            .userStatus,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fullName: return "FULL_NAME"
        case .storageLimit: return "STORAGE_LIMIT"
        case .storageUsed: return "STORAGE_USED"
        case .userName: return "USER_NAME"
        case .userStatus: return "USER_STATUS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UserSortType(rawValue: rawValue) ?? UserSortType.sdkUnknown(rawValue)
    }
}
