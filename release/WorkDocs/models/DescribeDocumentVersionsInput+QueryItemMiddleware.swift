// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDocumentVersionsInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeDocumentVersionsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeDocumentVersionsInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeDocumentVersionsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let fields = input.operationInput.fields {
            let fieldsQueryItem = URLQueryItem(name: "fields".urlPercentEncoding(), value: String(fields).urlPercentEncoding())
            input.builder.withQueryItem(fieldsQueryItem)
        }
        if let include = input.operationInput.include {
            let includeQueryItem = URLQueryItem(name: "include".urlPercentEncoding(), value: String(include).urlPercentEncoding())
            input.builder.withQueryItem(includeQueryItem)
        }
        if let marker = input.operationInput.marker {
            let markerQueryItem = URLQueryItem(name: "marker".urlPercentEncoding(), value: String(marker).urlPercentEncoding())
            input.builder.withQueryItem(markerQueryItem)
        }
        if let limit = input.operationInput.limit {
            let limitQueryItem = URLQueryItem(name: "limit".urlPercentEncoding(), value: String(limit).urlPercentEncoding())
            input.builder.withQueryItem(limitQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeDocumentVersionsInput>
    public typealias MOutput = OperationOutput<DescribeDocumentVersionsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DescribeDocumentVersionsOutputError>
}
