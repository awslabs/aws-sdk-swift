// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EntityNotExistsExceptionBody: Equatable {
    public let message: String?
    public let entityIds: [String]?
}

extension EntityNotExistsExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entityIds = "EntityIds"
        case message = "Message"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let entityIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .entityIds)
        var entityIdsDecoded0:[String]? = nil
        if let entityIdsContainer = entityIdsContainer {
            entityIdsDecoded0 = [String]()
            for string0 in entityIdsContainer {
                entityIdsDecoded0?.append(string0)
            }
        }
        entityIds = entityIdsDecoded0
    }
}
