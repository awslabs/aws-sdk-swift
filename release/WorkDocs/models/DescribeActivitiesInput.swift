// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeActivitiesInput: Equatable {
    /// <p>Specifies which activity types to include in the response. If this field is left
    ///             empty, all activity types are returned.</p>
    public let activityTypes: String?
    /// <p>Amazon WorkDocs authentication token. Not required when using AWS administrator credentials to access the API.</p>
    public let authenticationToken: String?
    /// <p>The timestamp that determines the end time of the activities. The response includes
    ///             the activities performed before the specified timestamp.</p>
    public let endTime: Date?
    /// <p>Includes indirect activities. An indirect activity results from a direct activity
    ///             performed on a parent resource. For example, sharing a parent folder (the direct
    ///             activity) shares all of the subfolders and documents within the parent folder (the
    ///             indirect activity).</p>
    public let includeIndirectActivities: Bool
    /// <p>The maximum number of items to return.</p>
    public let limit: Int?
    /// <p>The marker for the next set of results.</p>
    public let marker: String?
    /// <p>The ID of the organization. This is a mandatory parameter when using administrative
    ///             API (SigV4) requests.</p>
    public let organizationId: String?
    /// <p>The document or folder ID for which to describe activity types.</p>
    public let resourceId: String?
    /// <p>The timestamp that determines the starting time of the activities. The response
    ///             includes the activities performed after the specified timestamp.</p>
    public let startTime: Date?
    /// <p>The ID of the user who performed the action. The response includes activities
    ///             pertaining to this user. This is an optional parameter and is only applicable for
    ///             administrative API (SigV4) requests.</p>
    public let userId: String?

    public init (
        activityTypes: String? = nil,
        authenticationToken: String? = nil,
        endTime: Date? = nil,
        includeIndirectActivities: Bool = false,
        limit: Int? = nil,
        marker: String? = nil,
        organizationId: String? = nil,
        resourceId: String? = nil,
        startTime: Date? = nil,
        userId: String? = nil
    )
    {
        self.activityTypes = activityTypes
        self.authenticationToken = authenticationToken
        self.endTime = endTime
        self.includeIndirectActivities = includeIndirectActivities
        self.limit = limit
        self.marker = marker
        self.organizationId = organizationId
        self.resourceId = resourceId
        self.startTime = startTime
        self.userId = userId
    }
}
