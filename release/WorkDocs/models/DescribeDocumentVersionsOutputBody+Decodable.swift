// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDocumentVersionsOutputBody: Equatable {
    public let documentVersions: [DocumentVersionMetadata]?
    public let marker: String?
}

extension DescribeDocumentVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case documentVersions = "DocumentVersions"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentVersionsContainer = try containerValues.decodeIfPresent([DocumentVersionMetadata].self, forKey: .documentVersions)
        var documentVersionsDecoded0:[DocumentVersionMetadata]? = nil
        if let documentVersionsContainer = documentVersionsContainer {
            documentVersionsDecoded0 = [DocumentVersionMetadata]()
            for structure0 in documentVersionsContainer {
                documentVersionsDecoded0?.append(structure0)
            }
        }
        documentVersions = documentVersionsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
