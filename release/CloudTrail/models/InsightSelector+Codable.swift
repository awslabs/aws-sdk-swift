// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InsightSelector: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case insightType = "InsightType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let insightType = insightType {
            try encodeContainer.encode(insightType.rawValue, forKey: .insightType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightTypeDecoded = try containerValues.decodeIfPresent(InsightType.self, forKey: .insightType)
        insightType = insightTypeDecoded
    }
}
