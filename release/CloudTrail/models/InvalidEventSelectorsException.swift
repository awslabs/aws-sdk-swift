// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>This exception is thrown when the <code>PutEventSelectors</code> operation is called with a number of event
///          selectors, advanced event selectors, or data resources that is not valid. The combination of event selectors or advanced event selectors and
///          data resources is not valid. A trail can have up to 5 event selectors. If a trail uses advanced event selectors, a maximum
///          of 500 total values for all conditions in all advanced event selectors is allowed. A trail is limited to 250 data resources. These data resources can be distributed across event selectors, but the overall total cannot exceed 250.</p>
///          <p>You can:</p>
///          <ul>
///             <li>
///                <p>Specify a valid number of event selectors (1 to 5) for a trail.</p>
///             </li>
///             <li>
///                <p>Specify a valid number of data resources (1 to 250) for an event selector.
///                The limit of number of resources on an individual event selector is configurable up to 250.
///                However, this upper limit is allowed only if the total number of data resources does not
///                exceed 250 across all event selectors for a trail.</p>
///             </li>
///             <li>
///                <p>Specify up to 500 values for all conditions in all advanced event selectors for a trail.</p>
///             </li>
///             <li>
///                <p>Specify a valid value for a parameter. For example, specifying the <code>ReadWriteType</code>
///                parameter with a value of <code>read-only</code> is invalid.</p>
///             </li>
///          </ul>
public struct InvalidEventSelectorsException: ClientRuntime.ServiceError, Equatable {
    public var _headers: Headers?
    public var _statusCode: HttpStatusCode?
    public var _message: String?
    public var _requestID: String?
    public var _retryable: Bool = false
    public var _isThrottling: Bool = false
    public var _type: ErrorType = .client
    /// <p>Brief description of the exception returned by the request.</p>
    public var message: String?

    public init (
        message: String? = nil
    )
    {
        self.message = message
    }
}
