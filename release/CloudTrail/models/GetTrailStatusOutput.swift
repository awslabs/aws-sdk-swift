// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Returns the objects or data listed below if successful. Otherwise, returns an error.</p>
public struct GetTrailStatusOutput: Equatable {
    /// <p>Whether the CloudTrail is currently logging AWS API calls.</p>
    public let isLogging: Bool?
    /// <p>Displays any CloudWatch Logs error that CloudTrail encountered when attempting to deliver logs to CloudWatch Logs.</p>
    public let latestCloudWatchLogsDeliveryError: String?
    /// <p>Displays the most recent date and time when CloudTrail delivered logs to CloudWatch Logs.</p>
    public let latestCloudWatchLogsDeliveryTime: Date?
    /// <p>This field is no longer in use.</p>
    public let latestDeliveryAttemptSucceeded: String?
    /// <p>This field is no longer in use.</p>
    public let latestDeliveryAttemptTime: String?
    /// <p>Displays any Amazon S3 error that CloudTrail encountered when attempting to deliver log files
    ///          to the designated bucket. For more information see the topic <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html">Error
    ///             Responses</a> in the Amazon S3 API Reference. </p>
    ///          <note>
    ///             <p>This error occurs only when there is a problem with the destination S3 bucket and will
    ///          not occur for timeouts. To resolve the issue, create a new bucket and call
    ///             <code>UpdateTrail</code> to specify the new bucket, or fix the existing objects so that
    ///          CloudTrail can again write to the bucket.</p>
    ///          </note>
    public let latestDeliveryError: String?
    /// <p>Specifies the date and time that CloudTrail last delivered log files to an account's Amazon S3 bucket.</p>
    public let latestDeliveryTime: Date?
    /// <p>Displays any Amazon S3 error that CloudTrail encountered when attempting to deliver a digest
    ///          file to the designated bucket. For more information see the topic <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html">Error
    ///             Responses</a> in the Amazon S3 API Reference. </p>
    ///          <note>
    ///             <p>This error occurs only when there is a problem with the destination S3 bucket and will
    ///          not occur for timeouts. To resolve the issue, create a new bucket and call
    ///             <code>UpdateTrail</code> to specify the new bucket, or fix the existing objects so that
    ///          CloudTrail can again write to the bucket.</p>
    ///          </note>
    public let latestDigestDeliveryError: String?
    /// <p>Specifies the date and time that CloudTrail last delivered a digest file to an account's Amazon S3 bucket.</p>
    public let latestDigestDeliveryTime: Date?
    /// <p>This field is no longer in use.</p>
    public let latestNotificationAttemptSucceeded: String?
    /// <p>This field is no longer in use.</p>
    public let latestNotificationAttemptTime: String?
    /// <p>Displays any Amazon SNS error that CloudTrail encountered when attempting to send a
    ///          notification. For more information about Amazon SNS errors, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon SNS Developer Guide</a>.
    ///       </p>
    public let latestNotificationError: String?
    /// <p>Specifies the date and time of the most recent Amazon SNS notification that CloudTrail has written a new log file to an account's Amazon S3 bucket.</p>
    public let latestNotificationTime: Date?
    /// <p>Specifies the most recent date and time when CloudTrail started recording API calls for an AWS account.</p>
    public let startLoggingTime: Date?
    /// <p>Specifies the most recent date and time when CloudTrail stopped recording API calls for an AWS account.</p>
    public let stopLoggingTime: Date?
    /// <p>This field is no longer in use.</p>
    public let timeLoggingStarted: String?
    /// <p>This field is no longer in use.</p>
    public let timeLoggingStopped: String?

    public init (
        isLogging: Bool? = nil,
        latestCloudWatchLogsDeliveryError: String? = nil,
        latestCloudWatchLogsDeliveryTime: Date? = nil,
        latestDeliveryAttemptSucceeded: String? = nil,
        latestDeliveryAttemptTime: String? = nil,
        latestDeliveryError: String? = nil,
        latestDeliveryTime: Date? = nil,
        latestDigestDeliveryError: String? = nil,
        latestDigestDeliveryTime: Date? = nil,
        latestNotificationAttemptSucceeded: String? = nil,
        latestNotificationAttemptTime: String? = nil,
        latestNotificationError: String? = nil,
        latestNotificationTime: Date? = nil,
        startLoggingTime: Date? = nil,
        stopLoggingTime: Date? = nil,
        timeLoggingStarted: String? = nil,
        timeLoggingStopped: String? = nil
    )
    {
        self.isLogging = isLogging
        self.latestCloudWatchLogsDeliveryError = latestCloudWatchLogsDeliveryError
        self.latestCloudWatchLogsDeliveryTime = latestCloudWatchLogsDeliveryTime
        self.latestDeliveryAttemptSucceeded = latestDeliveryAttemptSucceeded
        self.latestDeliveryAttemptTime = latestDeliveryAttemptTime
        self.latestDeliveryError = latestDeliveryError
        self.latestDeliveryTime = latestDeliveryTime
        self.latestDigestDeliveryError = latestDigestDeliveryError
        self.latestDigestDeliveryTime = latestDigestDeliveryTime
        self.latestNotificationAttemptSucceeded = latestNotificationAttemptSucceeded
        self.latestNotificationAttemptTime = latestNotificationAttemptTime
        self.latestNotificationError = latestNotificationError
        self.latestNotificationTime = latestNotificationTime
        self.startLoggingTime = startLoggingTime
        self.stopLoggingTime = stopLoggingTime
        self.timeLoggingStarted = timeLoggingStarted
        self.timeLoggingStopped = timeLoggingStopped
    }
}
