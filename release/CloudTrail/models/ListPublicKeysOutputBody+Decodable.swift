// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPublicKeysOutputBody: Equatable {
    public let publicKeyList: [PublicKey]?
    public let nextToken: String?
}

extension ListPublicKeysOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case publicKeyList = "PublicKeyList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publicKeyListContainer = try containerValues.decodeIfPresent([PublicKey].self, forKey: .publicKeyList)
        var publicKeyListDecoded0:[PublicKey]? = nil
        if let publicKeyListContainer = publicKeyListContainer {
            publicKeyListDecoded0 = [PublicKey]()
            for structure0 in publicKeyListContainer {
                publicKeyListDecoded0?.append(structure0)
            }
        }
        publicKeyList = publicKeyListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
