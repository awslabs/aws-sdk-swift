// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum CRAllocationStrategy {
    case bestFit
    case bestFitProgressive
    case spotCapacityOptimized
    case sdkUnknown(String)
}

extension CRAllocationStrategy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CRAllocationStrategy] {
        return [
            .bestFit,
            .bestFitProgressive,
            .spotCapacityOptimized,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bestFit: return "BEST_FIT"
        case .bestFitProgressive: return "BEST_FIT_PROGRESSIVE"
        case .spotCapacityOptimized: return "SPOT_CAPACITY_OPTIMIZED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CRAllocationStrategy(rawValue: rawValue) ?? CRAllocationStrategy.sdkUnknown(rawValue)
    }
}
