// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateComputeEnvironmentOutputBody: Equatable {
    public let computeEnvironmentName: String?
    public let computeEnvironmentArn: String?
}

extension CreateComputeEnvironmentOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computeEnvironmentArn
        case computeEnvironmentName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let computeEnvironmentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .computeEnvironmentName)
        computeEnvironmentName = computeEnvironmentNameDecoded
        let computeEnvironmentArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .computeEnvironmentArn)
        computeEnvironmentArn = computeEnvironmentArnDecoded
    }
}
