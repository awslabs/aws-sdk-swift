// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NodeDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isMainNode
        case nodeIndex
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if isMainNode != false {
            try encodeContainer.encode(isMainNode, forKey: .isMainNode)
        }
        if nodeIndex != 0 {
            try encodeContainer.encode(nodeIndex, forKey: .nodeIndex)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nodeIndexDecoded = try containerValues.decode(Int.self, forKey: .nodeIndex)
        nodeIndex = nodeIndexDecoded
        let isMainNodeDecoded = try containerValues.decode(Bool.self, forKey: .isMainNode)
        isMainNode = isMainNodeDecoded
    }
}
