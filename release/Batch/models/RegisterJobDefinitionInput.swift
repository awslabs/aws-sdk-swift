// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for <code>RegisterJobDefinition</code>.</p>
public struct RegisterJobDefinitionInput: Equatable {
    /// <p>An object with various properties specific to single-node container-based jobs. If the job definition's
    ///     <code>type</code> parameter is <code>container</code>, then you must specify either <code>containerProperties</code>
    ///    or <code>nodeProperties</code>.</p>
    ///          <note>
    ///             <p>If the job runs on Fargate resources, then you must not specify <code>nodeProperties</code>; use only
    ///      <code>containerProperties</code>.</p>
    ///          </note>
    public let containerProperties: ContainerProperties?
    /// <p>The name of the job definition to register. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and
    ///    underscores are allowed.</p>
    public let jobDefinitionName: String?
    /// <p>An object with various properties specific to multi-node parallel jobs. If you specify node properties for a
    ///    job, it becomes a multi-node parallel job. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-parallel-jobs.html">Multi-node Parallel Jobs</a> in the
    ///     <i>AWS Batch User Guide</i>. If the job definition's <code>type</code> parameter is
    ///    <code>container</code>, then you must specify either <code>containerProperties</code> or
    ///    <code>nodeProperties</code>.</p>
    ///          <note>
    ///             <p>If the job runs on Fargate resources, then you must not specify <code>nodeProperties</code>; use
    ///      <code>containerProperties</code> instead.</p>
    ///          </note>
    public let nodeProperties: NodeProperties?
    /// <p>Default parameter substitution placeholders to set in the job definition. Parameters are specified as a
    ///    key-value pair mapping. Parameters in a <code>SubmitJob</code> request override any corresponding parameter defaults
    ///    from the job definition.</p>
    public let parameters: [String:String]?
    /// <p>The platform capabilities required by the job definition. If no value is specified, it defaults to
    ///     <code>EC2</code>. To run the job on Fargate resources, specify <code>FARGATE</code>.</p>
    public let platformCapabilities: [PlatformCapability]?
    /// <p>Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no
    ///    value is specified, the tags are not propagated. Tags can only be propagated to the tasks during task creation. For
    ///    tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags
    ///    from the job and job definition is over 50, the job is moved to the <code>FAILED</code> state.</p>
    public let propagateTags: Bool
    /// <p>The retry strategy to use for failed jobs that are submitted with this job definition. Any retry strategy that's
    ///    specified during a <a>SubmitJob</a> operation overrides the retry strategy defined here. If a job is
    ///    terminated due to a timeout, it isn't retried.</p>
    public let retryStrategy: RetryStrategy?
    /// <p>The tags that you apply to the job definition to help you categorize and organize your resources. Each tag
    ///    consists of a key and an optional value. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging AWS Resources</a> in <i>AWS Batch User Guide</i>.</p>
    public let tags: [String:String]?
    /// <p>The timeout configuration for jobs that are submitted with this job definition, after which AWS Batch terminates
    ///    your jobs if they have not finished. If a job is terminated due to a timeout, it isn't retried. The minimum value for
    ///    the timeout is 60 seconds. Any timeout configuration that's specified during a <a>SubmitJob</a> operation
    ///    overrides the timeout configuration defined here. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/job_timeouts.html">Job Timeouts</a> in the <i>AWS Batch User Guide</i>.</p>
    public let timeout: JobTimeout?
    /// <p>The type of job definition. For more information about multi-node parallel jobs, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html">Creating a multi-node parallel job definition</a> in the
    ///     <i>AWS Batch User Guide</i>.</p>
    ///          <note>
    ///             <p>If the job is run on Fargate resources, then <code>multinode</code> isn't supported.</p>
    ///          </note>
    public let type: JobDefinitionType?

    public init (
        containerProperties: ContainerProperties? = nil,
        jobDefinitionName: String? = nil,
        nodeProperties: NodeProperties? = nil,
        parameters: [String:String]? = nil,
        platformCapabilities: [PlatformCapability]? = nil,
        propagateTags: Bool = false,
        retryStrategy: RetryStrategy? = nil,
        tags: [String:String]? = nil,
        timeout: JobTimeout? = nil,
        type: JobDefinitionType? = nil
    )
    {
        self.containerProperties = containerProperties
        self.jobDefinitionName = jobDefinitionName
        self.nodeProperties = nodeProperties
        self.parameters = parameters
        self.platformCapabilities = platformCapabilities
        self.propagateTags = propagateTags
        self.retryStrategy = retryStrategy
        self.tags = tags
        self.timeout = timeout
        self.type = type
    }
}
