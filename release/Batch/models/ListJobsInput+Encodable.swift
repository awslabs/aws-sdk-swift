// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListJobsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arrayJobId
        case jobQueue
        case jobStatus
        case maxResults
        case multiNodeJobId
        case nextToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arrayJobId = arrayJobId {
            try encodeContainer.encode(arrayJobId, forKey: .arrayJobId)
        }
        if let jobQueue = jobQueue {
            try encodeContainer.encode(jobQueue, forKey: .jobQueue)
        }
        if let jobStatus = jobStatus {
            try encodeContainer.encode(jobStatus.rawValue, forKey: .jobStatus)
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let multiNodeJobId = multiNodeJobId {
            try encodeContainer.encode(multiNodeJobId, forKey: .multiNodeJobId)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
