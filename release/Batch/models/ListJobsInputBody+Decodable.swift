// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsInputBody: Equatable {
    public let jobQueue: String?
    public let arrayJobId: String?
    public let multiNodeJobId: String?
    public let jobStatus: JobStatus?
    public let maxResults: Int
    public let nextToken: String?
}

extension ListJobsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arrayJobId
        case jobQueue
        case jobStatus
        case maxResults
        case multiNodeJobId
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobQueueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobQueue)
        jobQueue = jobQueueDecoded
        let arrayJobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arrayJobId)
        arrayJobId = arrayJobIdDecoded
        let multiNodeJobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .multiNodeJobId)
        multiNodeJobId = multiNodeJobIdDecoded
        let jobStatusDecoded = try containerValues.decodeIfPresent(JobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
