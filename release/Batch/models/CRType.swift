// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum CRType {
    case ec2
    case fargate
    case fargateSpot
    case spot
    case sdkUnknown(String)
}

extension CRType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CRType] {
        return [
            .ec2,
            .fargate,
            .fargateSpot,
            .spot,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ec2: return "EC2"
        case .fargate: return "FARGATE"
        case .fargateSpot: return "FARGATE_SPOT"
        case .spot: return "SPOT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CRType(rawValue: rawValue) ?? CRType.sdkUnknown(rawValue)
    }
}
