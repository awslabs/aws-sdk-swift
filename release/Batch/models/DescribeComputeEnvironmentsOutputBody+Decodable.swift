// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeComputeEnvironmentsOutputBody: Equatable {
    public let computeEnvironments: [ComputeEnvironmentDetail]?
    public let nextToken: String?
}

extension DescribeComputeEnvironmentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computeEnvironments
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let computeEnvironmentsContainer = try containerValues.decodeIfPresent([ComputeEnvironmentDetail].self, forKey: .computeEnvironments)
        var computeEnvironmentsDecoded0:[ComputeEnvironmentDetail]? = nil
        if let computeEnvironmentsContainer = computeEnvironmentsContainer {
            computeEnvironmentsDecoded0 = [ComputeEnvironmentDetail]()
            for structure0 in computeEnvironmentsContainer {
                computeEnvironmentsDecoded0?.append(structure0)
            }
        }
        computeEnvironments = computeEnvironmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
