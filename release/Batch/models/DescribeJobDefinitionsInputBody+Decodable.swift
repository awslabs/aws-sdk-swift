// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeJobDefinitionsInputBody: Equatable {
    public let jobDefinitions: [String]?
    public let maxResults: Int
    public let jobDefinitionName: String?
    public let status: String?
    public let nextToken: String?
}

extension DescribeJobDefinitionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobDefinitionName
        case jobDefinitions
        case maxResults
        case nextToken
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobDefinitionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .jobDefinitions)
        var jobDefinitionsDecoded0:[String]? = nil
        if let jobDefinitionsContainer = jobDefinitionsContainer {
            jobDefinitionsDecoded0 = [String]()
            for string0 in jobDefinitionsContainer {
                jobDefinitionsDecoded0?.append(string0)
            }
        }
        jobDefinitions = jobDefinitionsDecoded0
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let jobDefinitionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobDefinitionName)
        jobDefinitionName = jobDefinitionNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
