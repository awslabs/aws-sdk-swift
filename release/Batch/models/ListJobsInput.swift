// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for <code>ListJobs</code>.</p>
public struct ListJobsInput: Equatable {
    /// <p>The job ID for an array job. Specifying an array job ID with this parameter lists all child jobs from within the
    ///    specified array.</p>
    public let arrayJobId: String?
    /// <p>The name or full Amazon Resource Name (ARN) of the job queue used to list jobs.</p>
    public let jobQueue: String?
    /// <p>The job status used to filter jobs in the specified queue. If you don't specify a status, only
    ///     <code>RUNNING</code> jobs are returned.</p>
    public let jobStatus: JobStatus?
    /// <p>The maximum number of results returned by <code>ListJobs</code> in paginated output. When this parameter is
    ///    used, <code>ListJobs</code> only returns <code>maxResults</code> results in a single page and a
    ///     <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another
    ///     <code>ListJobs</code> request with the returned <code>nextToken</code> value. This value can be between
    ///    1 and 100. If this parameter isn't used, then <code>ListJobs</code> returns up to
    ///    100 results and a <code>nextToken</code> value if applicable.</p>
    public let maxResults: Int
    /// <p>The job ID for a multi-node parallel job. Specifying a multi-node parallel job ID with this parameter lists all
    ///    nodes that are associated with the specified job.</p>
    public let multiNodeJobId: String?
    /// <p>The <code>nextToken</code> value returned from a previous paginated <code>ListJobs</code> request where
    ///     <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the
    ///    end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when
    ///    there are no more results to return.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that's only used to
    ///  retrieve the next items in a list and not for other programmatic purposes.</p>
    ///          </note>
    public let nextToken: String?

    public init (
        arrayJobId: String? = nil,
        jobQueue: String? = nil,
        jobStatus: JobStatus? = nil,
        maxResults: Int = 0,
        multiNodeJobId: String? = nil,
        nextToken: String? = nil
    )
    {
        self.arrayJobId = arrayJobId
        self.jobQueue = jobQueue
        self.jobStatus = jobStatus
        self.maxResults = maxResults
        self.multiNodeJobId = multiNodeJobId
        self.nextToken = nextToken
    }
}
