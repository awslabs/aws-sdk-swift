// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object representing the details of an AWS Batch job queue.</p>
public struct JobQueueDetail: Equatable {
    /// <p>The compute environments that are attached to the job queue and the order that job placement is preferred.
    ///    Compute environments are selected for job placement in ascending order.</p>
    public let computeEnvironmentOrder: [ComputeEnvironmentOrder]?
    /// <p>The Amazon Resource Name (ARN) of the job queue.</p>
    public let jobQueueArn: String?
    /// <p>The name of the job queue.</p>
    public let jobQueueName: String?
    /// <p>The priority of the job queue. Job queues with a higher priority (or a higher integer value for the
    ///     <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is
    ///    determined in descending order, for example, a job queue with a priority value of <code>10</code> is given scheduling
    ///    preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either
    ///    EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>); EC2 and
    ///    Fargate compute environments can't be mixed.</p>
    public let priority: Int
    /// <p>Describes the ability of the queue to accept new jobs. If the job queue state is <code>ENABLED</code>, it's able
    ///    to accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs
    ///    already in the queue can finish.</p>
    public let state: JQState?
    /// <p>The status of the job queue (for example, <code>CREATING</code> or <code>VALID</code>).</p>
    public let status: JQStatus?
    /// <p>A short, human-readable string to provide additional details about the current status of the job queue.</p>
    public let statusReason: String?
    /// <p>The tags applied to the job queue. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html">Tagging your AWS Batch resources</a> in
    ///    <i>AWS Batch User Guide</i>.</p>
    public let tags: [String:String]?

    public init (
        computeEnvironmentOrder: [ComputeEnvironmentOrder]? = nil,
        jobQueueArn: String? = nil,
        jobQueueName: String? = nil,
        priority: Int = 0,
        state: JQState? = nil,
        status: JQStatus? = nil,
        statusReason: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.computeEnvironmentOrder = computeEnvironmentOrder
        self.jobQueueArn = jobQueueArn
        self.jobQueueName = jobQueueName
        self.priority = priority
        self.state = state
        self.status = status
        self.statusReason = statusReason
        self.tags = tags
    }
}
