// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NodeRangeProperty: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case container
        case targetNodes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let container = container {
            try encodeContainer.encode(container, forKey: .container)
        }
        if let targetNodes = targetNodes {
            try encodeContainer.encode(targetNodes, forKey: .targetNodes)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetNodesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetNodes)
        targetNodes = targetNodesDecoded
        let containerDecoded = try containerValues.decodeIfPresent(ContainerProperties.self, forKey: .container)
        container = containerDecoded
    }
}
