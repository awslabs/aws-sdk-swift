// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for <code>DescribeComputeEnvironments</code>.</p>
public struct DescribeComputeEnvironmentsInput: Equatable {
    /// <p>A list of up to 100 compute environment names or full Amazon Resource Name (ARN) entries.</p>
    public let computeEnvironments: [String]?
    /// <p>The maximum number of cluster results returned by <code>DescribeComputeEnvironments</code> in paginated output.
    ///    When this parameter is used, <code>DescribeComputeEnvironments</code> only returns <code>maxResults</code> results in
    ///    a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can
    ///    be seen by sending another <code>DescribeComputeEnvironments</code> request with the returned <code>nextToken</code>
    ///    value. This value can be between 1 and 100. If this parameter isn't used, then
    ///     <code>DescribeComputeEnvironments</code> returns up to 100 results and a <code>nextToken</code>
    ///    value if applicable.</p>
    public let maxResults: Int
    /// <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeComputeEnvironments</code>
    ///    request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination
    ///    continues from the end of the previous results that returned the <code>nextToken</code> value. This value is
    ///     <code>null</code> when there are no more results to return.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that's only used to
    ///  retrieve the next items in a list and not for other programmatic purposes.</p>
    ///          </note>
    public let nextToken: String?

    public init (
        computeEnvironments: [String]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil
    )
    {
        self.computeEnvironments = computeEnvironments
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
