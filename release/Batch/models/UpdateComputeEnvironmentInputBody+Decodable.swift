// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateComputeEnvironmentInputBody: Equatable {
    public let computeEnvironment: String?
    public let state: CEState?
    public let computeResources: ComputeResourceUpdate?
    public let serviceRole: String?
}

extension UpdateComputeEnvironmentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computeEnvironment
        case computeResources
        case serviceRole
        case state
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let computeEnvironmentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .computeEnvironment)
        computeEnvironment = computeEnvironmentDecoded
        let stateDecoded = try containerValues.decodeIfPresent(CEState.self, forKey: .state)
        state = stateDecoded
        let computeResourcesDecoded = try containerValues.decodeIfPresent(ComputeResourceUpdate.self, forKey: .computeResources)
        computeResources = computeResourcesDecoded
        let serviceRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceRole)
        serviceRole = serviceRoleDecoded
    }
}
