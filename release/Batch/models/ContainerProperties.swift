// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Container properties are used in job definitions to describe the container that's launched as part of a
///    job.</p>
public struct ContainerProperties: Equatable {
    /// <p>The command that's passed to the container. This parameter maps to <code>Cmd</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>COMMAND</code> parameter to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. For more information, see <a href="https://docs.docker.com/engine/reference/builder/#cmd">https://docs.docker.com/engine/reference/builder/#cmd</a>.</p>
    public let command: [String]?
    /// <p>The environment variables to pass to a container. This parameter maps to <code>Env</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--env</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p>
    ///          <important>
    ///             <p>We don't recommend using plaintext environment variables for sensitive information, such as credential
    ///     data.</p>
    ///          </important>
    ///          <note>
    ///             <p>Environment variables must not start with <code>AWS_BATCH</code>; this naming
    ///  convention is reserved for variables that are set by the AWS Batch service.</p>
    ///          </note>
    public let environment: [KeyValuePair]?
    /// <p>The Amazon Resource Name (ARN) of the execution role that AWS Batch can assume. For jobs that run on Fargate resources, you must
    ///    provide an execution role. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html">AWS Batch execution IAM role</a> in the
    ///     <i>AWS Batch User Guide</i>.</p>
    public let executionRoleArn: String?
    /// <p>The platform configuration for jobs running on Fargate resources. Jobs running on EC2 resources must not
    ///    specify this parameter.</p>
    public let fargatePlatformConfiguration: FargatePlatformConfiguration?
    /// <p>The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker
    ///    Hub registry are available by default. Other repositories are specified with
    ///      <code>
    ///                <i>repository-url</i>/<i>image</i>:<i>tag</i>
    ///             </code>.
    ///    Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons,
    ///  periods, forward slashes, and number signs are allowed. This parameter maps to <code>Image</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of
    ///    the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>IMAGE</code> parameter of <a href="https://docs.docker.com/engine/reference/run/">docker
    ///    run</a>.</p>
    ///          <note>
    ///             <p>Docker image architecture must match the processor architecture of the compute resources that they're scheduled
    ///     on. For example, ARM-based Docker images can only run on ARM-based compute resources.</p>
    ///          </note>
    ///          <ul>
    ///             <li>
    ///                <p>Images in Amazon ECR repositories use the full registry and repository URI (for example,
    ///       <code>012345678910.dkr.ecr.<region-name>.amazonaws.com/<repository-name></code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>Images in official repositories on Docker Hub use a single name (for example, <code>ubuntu</code> or
    ///       <code>mongo</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>Images in other repositories on Docker Hub are qualified with an organization name (for example,
    ///       <code>amazon/amazon-ecs-agent</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>Images in other online repositories are qualified further by a domain name (for example,
    ///       <code>quay.io/assemblyline/ubuntu</code>).</p>
    ///             </li>
    ///          </ul>
    public let image: String?
    /// <p>The instance type to use for a multi-node parallel job. All node groups in a multi-node parallel job must use
    ///    the same instance type.</p>
    ///          <note>
    ///             <p>This parameter isn't applicable to single-node container jobs or for jobs that run on Fargate resources and
    ///     shouldn't be provided.</p>
    ///          </note>
    public let instanceType: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM role that the container can assume for AWS permissions. For more information, see
    ///     <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html">IAM Roles for Tasks</a>
    ///    in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    public let jobRoleArn: String?
    /// <p>Linux-specific modifications that are applied to the container, such as details for device mappings.</p>
    public let linuxParameters: LinuxParameters?
    /// <p>The log configuration specification for the container.</p>
    ///          <p>This parameter maps to <code>LogConfig</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.
    ///    By default, containers use the same logging driver that the Docker daemon uses. However the container might use a
    ///    different logging driver than the Docker daemon by specifying a log driver with this parameter in the container
    ///    definition. To use a different logging driver for a container, the log system must be configured properly on the
    ///    container instance (or on a different log server for remote logging options). For more information on the options for
    ///    different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure
    ///     logging drivers</a> in the Docker documentation.</p>
    ///          <note>
    ///             <p>AWS Batch currently supports a subset of the logging drivers available to the Docker daemon (shown in the <a>LogConfiguration</a> data type).</p>
    ///          </note>
    ///          <p>This parameter requires version 1.18 of the Docker Remote API or greater on your
    ///  container instance. To check the Docker Remote API version on your container instance, log into your
    ///  container instance and run the following command: <code>sudo docker version | grep "Server API version"</code>
    ///          </p>
    ///          <note>
    ///             <p>The Amazon ECS container agent running on a container instance must register the logging drivers available on that
    ///     instance with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code> environment variable before containers placed on that
    ///     instance can use these log configuration options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon ECS Container Agent Configuration</a> in the
    ///      <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    ///          </note>
    public let logConfiguration: LogConfiguration?
    /// <p>This parameter indicates the memory hard limit (in MiB) for a container. If your container attempts to exceed
    ///    the specified number, it is terminated. You must specify at least 4 MiB of memory for a job using this parameter. The
    ///    memory hard limit can be specified in several places. It must be specified for each node at least once.</p>
    ///          <p>This parameter maps to <code>Memory</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--memory</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker
    ///    run</a>.</p>
    ///          <p>This parameter is supported on EC2 resources but isn't supported on Fargate resources. For Fargate
    ///    resources, you should specify the memory requirement using <code>resourceRequirement</code>. You can do this for EC2
    ///    resources.</p>
    ///          <note>
    ///             <p>If you're trying to maximize your resource utilization by providing your jobs as much memory as possible for a
    ///     particular instance type, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html">Memory
    ///      Management</a> in the <i>AWS Batch User Guide</i>.</p>
    ///          </note>
    @available(*, deprecated, message: "This field is deprecated, use resourceRequirements instead.")
    public let memory: Int
    /// <p>The mount points for data volumes in your container. This parameter maps to <code>Volumes</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--volume</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p>
    public let mountPoints: [MountPoint]?
    /// <p>The network configuration for jobs running on Fargate resources. Jobs running on EC2 resources must not
    ///    specify this parameter.</p>
    public let networkConfiguration: NetworkConfiguration?
    /// <p>When this parameter is true, the container is given elevated permissions on the host container instance (similar
    ///    to the <code>root</code> user). This parameter maps to <code>Privileged</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--privileged</code> option to
    ///     <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. The default value is false.</p>
    ///          <note>
    ///             <p>This parameter isn't applicable to jobs running on Fargate resources and shouldn't be provided, or specified
    ///     as false.</p>
    ///          </note>
    public let privileged: Bool
    /// <p>When this parameter is true, the container is given read-only access to its root file system. This parameter
    ///    maps to <code>ReadonlyRootfs</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and
    ///    the <code>--read-only</code> option to <code>docker run</code>.</p>
    public let readonlyRootFilesystem: Bool
    /// <p>The type and amount of resources to assign to a container. The supported resources include <code>GPU</code>,
    ///     <code>MEMORY</code>, and <code>VCPU</code>.</p>
    public let resourceRequirements: [ResourceRequirement]?
    /// <p>The secrets for the container. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the
    ///     <i>AWS Batch User Guide</i>.</p>
    public let secrets: [Secret]?
    /// <p>A list of <code>ulimits</code> to set in the container. This parameter maps to <code>Ulimits</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--ulimit</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p>
    ///          <note>
    ///             <p>This parameter isn't applicable to jobs running on Fargate resources and shouldn't be provided.</p>
    ///          </note>
    public let ulimits: [Ulimit]?
    /// <p>The user name to use inside the container. This parameter maps to <code>User</code> in the
    ///    <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the <code>--user</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>.</p>
    public let user: String?
    /// <p>The number of vCPUs reserved for the job. Each vCPU is equivalent to 1,024 CPU shares. This parameter maps to
    ///     <code>CpuShares</code> in the <a href="https://docs.docker.com/engine/api/v1.23/#create-a-container">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.23/">Docker Remote API</a> and the
    ///     <code>--cpu-shares</code> option to <a href="https://docs.docker.com/engine/reference/run/">docker run</a>. The number of vCPUs must
    ///    be specified but can be be specified in several places. You must specify it at least once for each node.</p>
    ///          <p>This parameter is supported on EC2 resources but isn't supported for jobs that run on Fargate resources. For
    ///    these resources, use <code>resourceRequirement</code> instead. You can use this parameter or
    ///     <code>resourceRequirements</code> structure but not both.</p>
    ///          <note>
    ///             <p>This parameter isn't applicable to jobs running on Fargate resources and shouldn't be provided. For jobs that
    ///     run on Fargate resources, you must specify the vCPU requirement for the job using
    ///      <code>resourceRequirements</code>.</p>
    ///          </note>
    @available(*, deprecated, message: "This field is deprecated, use resourceRequirements instead.")
    public let vcpus: Int
    /// <p>A list of data volumes used in a job.</p>
    public let volumes: [Volume]?

    public init (
        command: [String]? = nil,
        environment: [KeyValuePair]? = nil,
        executionRoleArn: String? = nil,
        fargatePlatformConfiguration: FargatePlatformConfiguration? = nil,
        image: String? = nil,
        instanceType: String? = nil,
        jobRoleArn: String? = nil,
        linuxParameters: LinuxParameters? = nil,
        logConfiguration: LogConfiguration? = nil,
        memory: Int = 0,
        mountPoints: [MountPoint]? = nil,
        networkConfiguration: NetworkConfiguration? = nil,
        privileged: Bool = false,
        readonlyRootFilesystem: Bool = false,
        resourceRequirements: [ResourceRequirement]? = nil,
        secrets: [Secret]? = nil,
        ulimits: [Ulimit]? = nil,
        user: String? = nil,
        vcpus: Int = 0,
        volumes: [Volume]? = nil
    )
    {
        self.command = command
        self.environment = environment
        self.executionRoleArn = executionRoleArn
        self.fargatePlatformConfiguration = fargatePlatformConfiguration
        self.image = image
        self.instanceType = instanceType
        self.jobRoleArn = jobRoleArn
        self.linuxParameters = linuxParameters
        self.logConfiguration = logConfiguration
        self.memory = memory
        self.mountPoints = mountPoints
        self.networkConfiguration = networkConfiguration
        self.privileged = privileged
        self.readonlyRootFilesystem = readonlyRootFilesystem
        self.resourceRequirements = resourceRequirements
        self.secrets = secrets
        self.ulimits = ulimits
        self.user = user
        self.vcpus = vcpus
        self.volumes = volumes
    }
}
