// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateJobQueueInputBody: Equatable {
    public let jobQueueName: String?
    public let state: JQState?
    public let priority: Int
    public let computeEnvironmentOrder: [ComputeEnvironmentOrder]?
    public let tags: [String:String]?
}

extension CreateJobQueueInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computeEnvironmentOrder
        case jobQueueName
        case priority
        case state
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobQueueNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobQueueName)
        jobQueueName = jobQueueNameDecoded
        let stateDecoded = try containerValues.decodeIfPresent(JQState.self, forKey: .state)
        state = stateDecoded
        let priorityDecoded = try containerValues.decode(Int.self, forKey: .priority)
        priority = priorityDecoded
        let computeEnvironmentOrderContainer = try containerValues.decodeIfPresent([ComputeEnvironmentOrder].self, forKey: .computeEnvironmentOrder)
        var computeEnvironmentOrderDecoded0:[ComputeEnvironmentOrder]? = nil
        if let computeEnvironmentOrderContainer = computeEnvironmentOrderContainer {
            computeEnvironmentOrderDecoded0 = [ComputeEnvironmentOrder]()
            for structure0 in computeEnvironmentOrderContainer {
                computeEnvironmentOrderDecoded0?.append(structure0)
            }
        }
        computeEnvironmentOrder = computeEnvironmentOrderDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
    }
}
