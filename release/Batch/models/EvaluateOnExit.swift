// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies a set of conditions to be met, and an action to take (<code>RETRY</code> or <code>EXIT</code>) if all
///    conditions are met.</p>
public struct EvaluateOnExit: Equatable {
    /// <p>Specifies the action to take if all of the specified conditions (<code>onStatusReason</code>,
    ///     <code>onReason</code>, and <code>onExitCode</code>) are met. The values aren't case sensitive.</p>
    public let action: RetryAction?
    /// <p>Contains a glob pattern to match against the decimal representation of the <code>ExitCode</code> returned for a
    ///    job. The pattern can be up to 512 characters long, can contain only numbers, and can optionally end with an asterisk
    ///    (*) so that only the start of the string needs to be an exact match.</p>
    public let onExitCode: String?
    /// <p>Contains a glob pattern to match against the <code>Reason</code> returned for a job. The pattern can be up to
    ///    512 characters long, and can contain letters, numbers, periods (.), colons (:), and white space (including spaces and
    ///    tabs). It can optionally end with an asterisk (*) so that only the start of the string needs to be an exact
    ///    match.</p>
    public let onReason: String?
    /// <p>Contains a glob pattern to match against the <code>StatusReason</code> returned for a job. The pattern can be up
    ///    to 512 characters long, and can contain letters, numbers, periods (.), colons (:), and white space (including spaces
    ///    or tabs).
    ///    It can optionally end with an
    ///    asterisk (*) so that only the start of the string needs to be an exact match.</p>
    public let onStatusReason: String?

    public init (
        action: RetryAction? = nil,
        onExitCode: String? = nil,
        onReason: String? = nil,
        onStatusReason: String? = nil
    )
    {
        self.action = action
        self.onExitCode = onExitCode
        self.onReason = onReason
        self.onStatusReason = onStatusReason
    }
}
