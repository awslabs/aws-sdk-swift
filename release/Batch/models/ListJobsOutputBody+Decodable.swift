// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputBody: Equatable {
    public let jobSummaryList: [JobSummary]?
    public let nextToken: String?
}

extension ListJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobSummaryList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobSummaryListContainer = try containerValues.decodeIfPresent([JobSummary].self, forKey: .jobSummaryList)
        var jobSummaryListDecoded0:[JobSummary]? = nil
        if let jobSummaryListContainer = jobSummaryListContainer {
            jobSummaryListDecoded0 = [JobSummary]()
            for structure0 in jobSummaryListContainer {
                jobSummaryListDecoded0?.append(structure0)
            }
        }
        jobSummaryList = jobSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
