// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum LogDriver {
    case awslogs
    case fluentd
    case gelf
    case journald
    case jsonFile
    case splunk
    case syslog
    case sdkUnknown(String)
}

extension LogDriver : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [LogDriver] {
        return [
            .awslogs,
            .fluentd,
            .gelf,
            .journald,
            .jsonFile,
            .splunk,
            .syslog,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awslogs: return "awslogs"
        case .fluentd: return "fluentd"
        case .gelf: return "gelf"
        case .journald: return "journald"
        case .jsonFile: return "json-file"
        case .splunk: return "splunk"
        case .syslog: return "syslog"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = LogDriver(rawValue: rawValue) ?? LogDriver.sdkUnknown(rawValue)
    }
}
