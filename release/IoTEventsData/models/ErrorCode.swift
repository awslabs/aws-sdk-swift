// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ErrorCode {
    case internalfailureexception
    case invalidrequestexception
    case resourcenotfoundexception
    case serviceunavailableexception
    case throttlingexception
    case sdkUnknown(String)
}

extension ErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ErrorCode] {
        return [
            .internalfailureexception,
            .invalidrequestexception,
            .resourcenotfoundexception,
            .serviceunavailableexception,
            .throttlingexception,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .internalfailureexception: return "InternalFailureException"
        case .invalidrequestexception: return "InvalidRequestException"
        case .resourcenotfoundexception: return "ResourceNotFoundException"
        case .serviceunavailableexception: return "ServiceUnavailableException"
        case .throttlingexception: return "ThrottlingException"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ErrorCode(rawValue: rawValue) ?? ErrorCode.sdkUnknown(rawValue)
    }
}
