// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListDetectorsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListDetectorsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListDetectorsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListDetectorsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let stateName = input.operationInput.stateName {
            let stateNameQueryItem = URLQueryItem(name: "stateName".urlPercentEncoding(), value: String(stateName).urlPercentEncoding())
            input.builder.withQueryItem(stateNameQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListDetectorsInput>
    public typealias MOutput = OperationOutput<ListDetectorsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListDetectorsOutputError>
}
