// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmsOutputBody: Equatable {
    public let alarmSummaries: [AlarmSummary]?
    public let nextToken: String?
}

extension ListAlarmsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarmSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmSummariesContainer = try containerValues.decodeIfPresent([AlarmSummary].self, forKey: .alarmSummaries)
        var alarmSummariesDecoded0:[AlarmSummary]? = nil
        if let alarmSummariesContainer = alarmSummariesContainer {
            alarmSummariesDecoded0 = [AlarmSummary]()
            for structure0 in alarmSummariesContainer {
                alarmSummariesDecoded0?.append(structure0)
            }
        }
        alarmSummaries = alarmSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
