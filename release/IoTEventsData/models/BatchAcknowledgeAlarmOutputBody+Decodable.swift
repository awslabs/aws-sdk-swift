// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAcknowledgeAlarmOutputBody: Equatable {
    public let errorEntries: [BatchAlarmActionErrorEntry]?
}

extension BatchAcknowledgeAlarmOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case errorEntries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let errorEntriesContainer = try containerValues.decodeIfPresent([BatchAlarmActionErrorEntry].self, forKey: .errorEntries)
        var errorEntriesDecoded0:[BatchAlarmActionErrorEntry]? = nil
        if let errorEntriesContainer = errorEntriesContainer {
            errorEntriesDecoded0 = [BatchAlarmActionErrorEntry]()
            for structure0 in errorEntriesContainer {
                errorEntriesDecoded0?.append(structure0)
            }
        }
        errorEntries = errorEntriesDecoded0
    }
}
