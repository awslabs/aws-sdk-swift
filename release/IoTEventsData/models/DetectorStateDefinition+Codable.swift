// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DetectorStateDefinition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case stateName
        case timers
        case variables
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let stateName = stateName {
            try encodeContainer.encode(stateName, forKey: .stateName)
        }
        if let timers = timers {
            var timersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .timers)
            for timerdefinitions0 in timers {
                try timersContainer.encode(timerdefinitions0)
            }
        }
        if let variables = variables {
            var variablesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .variables)
            for variabledefinitions0 in variables {
                try variablesContainer.encode(variabledefinitions0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateName)
        stateName = stateNameDecoded
        let variablesContainer = try containerValues.decodeIfPresent([VariableDefinition].self, forKey: .variables)
        var variablesDecoded0:[VariableDefinition]? = nil
        if let variablesContainer = variablesContainer {
            variablesDecoded0 = [VariableDefinition]()
            for structure0 in variablesContainer {
                variablesDecoded0?.append(structure0)
            }
        }
        variables = variablesDecoded0
        let timersContainer = try containerValues.decodeIfPresent([TimerDefinition].self, forKey: .timers)
        var timersDecoded0:[TimerDefinition]? = nil
        if let timersContainer = timersContainer {
            timersDecoded0 = [TimerDefinition]()
            for structure0 in timersContainer {
                timersDecoded0?.append(structure0)
            }
        }
        timers = timersDecoded0
    }
}
