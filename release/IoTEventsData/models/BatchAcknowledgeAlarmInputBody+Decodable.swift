// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAcknowledgeAlarmInputBody: Equatable {
    public let acknowledgeActionRequests: [AcknowledgeAlarmActionRequest]?
}

extension BatchAcknowledgeAlarmInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acknowledgeActionRequests
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acknowledgeActionRequestsContainer = try containerValues.decodeIfPresent([AcknowledgeAlarmActionRequest].self, forKey: .acknowledgeActionRequests)
        var acknowledgeActionRequestsDecoded0:[AcknowledgeAlarmActionRequest]? = nil
        if let acknowledgeActionRequestsContainer = acknowledgeActionRequestsContainer {
            acknowledgeActionRequestsDecoded0 = [AcknowledgeAlarmActionRequest]()
            for structure0 in acknowledgeActionRequestsContainer {
                acknowledgeActionRequestsDecoded0?.append(structure0)
            }
        }
        acknowledgeActionRequests = acknowledgeActionRequestsDecoded0
    }
}
