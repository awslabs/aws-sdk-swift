// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the settings for the health check that AWS App Runner performs to monitor the health of a service.</p>
public struct HealthCheckConfiguration: Equatable {
    /// <p>The IP protocol that App Runner uses to perform health checks for your service.</p>
    ///          <p>If you set <code>Protocol</code> to <code>HTTP</code>, App Runner sends health check requests to the HTTP path specified by <code>Path</code>.</p>
    ///          <p>Default: <code>TCP</code>
    ///          </p>
    public let `protocol`: HealthCheckProtocol?
    /// <p>The number of consecutive checks that must succeed before App Runner decides that the service is healthy.</p>
    ///          <p>Default: <code>3</code>
    ///          </p>
    public let healthyThreshold: Int?
    /// <p>The time interval, in seconds, between health checks.</p>
    ///          <p>Default: <code>5</code>
    ///          </p>
    public let interval: Int?
    /// <p>The URL that health check requests are sent to.</p>
    ///          <p>
    ///             <code>Path</code> is only applicable when you set <code>Protocol</code> to <code>HTTP</code>.</p>
    ///          <p>Default: <code>"/"</code>
    ///          </p>
    public let path: String?
    /// <p>The time, in seconds, to wait for a health check response before deciding it failed.</p>
    ///          <p>Default: <code>2</code>
    ///          </p>
    public let timeout: Int?
    /// <p>The number of consecutive checks that must fail before App Runner decides that the service is unhealthy.</p>
    ///          <p>Default: <code>3</code>
    ///          </p>
    public let unhealthyThreshold: Int?

    public init (
        `protocol`: HealthCheckProtocol? = nil,
        healthyThreshold: Int? = nil,
        interval: Int? = nil,
        path: String? = nil,
        timeout: Int? = nil,
        unhealthyThreshold: Int? = nil
    )
    {
        self.`protocol` = `protocol`
        self.healthyThreshold = healthyThreshold
        self.interval = interval
        self.path = path
        self.timeout = timeout
        self.unhealthyThreshold = unhealthyThreshold
    }
}
