// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAutoScalingConfigurationInput: Equatable {
    /// <p>A name for the auto scaling configuration. When you use it for the first time in an AWS Region, App Runner creates revision number <code>1</code> of this
    ///       name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p>
    public let autoScalingConfigurationName: String?
    /// <p>The maximum number of concurrent requests that you want an instance to process. If the number of concurrent requests exceeds this limit, App Runner scales
    ///       up your service.</p>
    ///          <p>Default: <code>100</code>
    ///          </p>
    public let maxConcurrency: Int?
    /// <p>The maximum number of instances that your service scales up to. At most <code>MaxSize</code> instances actively serve traffic for your service.</p>
    ///          <p>Default: <code>25</code>
    ///          </p>
    public let maxSize: Int?
    /// <p>The minimum number of instances that App Runner provisions for your service. The service always has at least <code>MinSize</code> provisioned instances.
    ///       Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to
    ///       be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.</p>
    ///          <p>App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.</p>
    ///          <p>Default: <code>1</code>
    ///          </p>
    public let minSize: Int?
    /// <p>A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.</p>
    public let tags: [Tag]?

    public init (
        autoScalingConfigurationName: String? = nil,
        maxConcurrency: Int? = nil,
        maxSize: Int? = nil,
        minSize: Int? = nil,
        tags: [Tag]? = nil
    )
    {
        self.autoScalingConfigurationName = autoScalingConfigurationName
        self.maxConcurrency = maxConcurrency
        self.maxSize = maxSize
        self.minSize = minSize
        self.tags = tags
    }
}
