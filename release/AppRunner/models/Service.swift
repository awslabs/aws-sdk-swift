// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an AWS App Runner service. It can describe a service in any state, including deleted services.</p>
///          <p>This type contains the full information about a service, including configuration details. It's returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>, <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>, and <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a> actions. A subset of this
///       information is returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a> action using the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html">ServiceSummary</a> type.</p>
public struct Service: Equatable {
    /// <p>Summary information for the App Runner automatic scaling configuration resource that's associated with this service.</p>
    public let autoScalingConfigurationSummary: AutoScalingConfigurationSummary?
    /// <p>The time when the App Runner service was created. It's in the Unix time stamp format.</p>
    public let createdAt: Date?
    /// <p>The time when the App Runner service was deleted. It's in the Unix time stamp format.</p>
    public let deletedAt: Date?
    /// <p>The encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be
    ///       either a customer-provided encryption key or an AWS managed CMK.</p>
    public let encryptionConfiguration: EncryptionConfiguration?
    /// <p>The settings for the health check that App Runner performs to monitor the health of this service.</p>
    public let healthCheckConfiguration: HealthCheckConfiguration?
    /// <p>The runtime configuration of instances (scaling units) of this service.</p>
    public let instanceConfiguration: InstanceConfiguration?
    /// <p>The Amazon Resource Name (ARN) of this service.</p>
    public let serviceArn: String?
    /// <p>An ID that App Runner generated for this service. It's unique within the AWS Region.</p>
    public let serviceId: String?
    /// <p>The customer-provided service name.</p>
    public let serviceName: String?
    /// <p>A subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.</p>
    public let serviceUrl: String?
    /// <p>The source deployed to the App Runner service. It can be a code or an image repository.</p>
    public let sourceConfiguration: SourceConfiguration?
    /// <p>The current state of the App Runner service. These particular values mean the following.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_FAILED</code> – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any
    ///           parameters that need to be fixed, and retry the call to create the service.</p>
    ///                <p>The failed service isn't usable, and still counts towards your service quota. When you're done analyzing the failure, delete the service.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETE_FAILED</code> – The service failed to delete and can't be successfully recovered. Retry the service deletion call to ensure
    ///           that all related resources are removed.</p>
    ///             </li>
    ///          </ul>
    public let status: ServiceStatus?
    /// <p>The time when the App Runner service was last updated at. It's in the Unix time stamp format.</p>
    public let updatedAt: Date?

    public init (
        autoScalingConfigurationSummary: AutoScalingConfigurationSummary? = nil,
        createdAt: Date? = nil,
        deletedAt: Date? = nil,
        encryptionConfiguration: EncryptionConfiguration? = nil,
        healthCheckConfiguration: HealthCheckConfiguration? = nil,
        instanceConfiguration: InstanceConfiguration? = nil,
        serviceArn: String? = nil,
        serviceId: String? = nil,
        serviceName: String? = nil,
        serviceUrl: String? = nil,
        sourceConfiguration: SourceConfiguration? = nil,
        status: ServiceStatus? = nil,
        updatedAt: Date? = nil
    )
    {
        self.autoScalingConfigurationSummary = autoScalingConfigurationSummary
        self.createdAt = createdAt
        self.deletedAt = deletedAt
        self.encryptionConfiguration = encryptionConfiguration
        self.healthCheckConfiguration = healthCheckConfiguration
        self.instanceConfiguration = instanceConfiguration
        self.serviceArn = serviceArn
        self.serviceId = serviceId
        self.serviceName = serviceName
        self.serviceUrl = serviceUrl
        self.sourceConfiguration = sourceConfiguration
        self.status = status
        self.updatedAt = updatedAt
    }
}
