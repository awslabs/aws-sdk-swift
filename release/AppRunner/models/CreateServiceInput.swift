// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateServiceInput: Equatable {
    /// <p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner
    ///       associates the latest revision of a default auto scaling configuration.</p>
    public let autoScalingConfigurationArn: String?
    /// <p>An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default,
    ///       App Runner uses an AWS managed CMK.</p>
    public let encryptionConfiguration: EncryptionConfiguration?
    /// <p>The settings for the health check that AWS App Runner performs to monitor the health of your service.</p>
    public let healthCheckConfiguration: HealthCheckConfiguration?
    /// <p>The runtime configuration of instances (scaling units) of the App Runner service.</p>
    public let instanceConfiguration: InstanceConfiguration?
    /// <p>A name for the new service. It must be unique across all the running App Runner services in your AWS account in the AWS Region.</p>
    public let serviceName: String?
    /// <p>The source to deploy to the App Runner service. It can be a code or an image repository.</p>
    public let sourceConfiguration: SourceConfiguration?
    /// <p>An optional list of metadata items that you can associate with your service resource. A tag is a key-value pair.</p>
    public let tags: [Tag]?

    public init (
        autoScalingConfigurationArn: String? = nil,
        encryptionConfiguration: EncryptionConfiguration? = nil,
        healthCheckConfiguration: HealthCheckConfiguration? = nil,
        instanceConfiguration: InstanceConfiguration? = nil,
        serviceName: String? = nil,
        sourceConfiguration: SourceConfiguration? = nil,
        tags: [Tag]? = nil
    )
    {
        self.autoScalingConfigurationArn = autoScalingConfigurationArn
        self.encryptionConfiguration = encryptionConfiguration
        self.healthCheckConfiguration = healthCheckConfiguration
        self.instanceConfiguration = instanceConfiguration
        self.serviceName = serviceName
        self.sourceConfiguration = sourceConfiguration
        self.tags = tags
    }
}
