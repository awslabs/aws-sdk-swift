// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DissociateEntityFromThingInputBody: Equatable {
    public let thingName: String?
    public let entityType: EntityType?
}

extension DissociateEntityFromThingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entityType
        case thingName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let entityTypeDecoded = try containerValues.decodeIfPresent(EntityType.self, forKey: .entityType)
        entityType = entityTypeDecoded
    }
}
