// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeNamespaceOutputBody: Equatable {
    public let namespaceArn: String?
    public let namespaceName: String?
    public let trackingNamespaceName: String?
    public let trackingNamespaceVersion: Int?
    public let namespaceVersion: Int?
}

extension DescribeNamespaceOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case namespaceArn
        case namespaceName
        case namespaceVersion
        case trackingNamespaceName
        case trackingNamespaceVersion
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namespaceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .namespaceArn)
        namespaceArn = namespaceArnDecoded
        let namespaceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .namespaceName)
        namespaceName = namespaceNameDecoded
        let trackingNamespaceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trackingNamespaceName)
        trackingNamespaceName = trackingNamespaceNameDecoded
        let trackingNamespaceVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .trackingNamespaceVersion)
        trackingNamespaceVersion = trackingNamespaceVersionDecoded
        let namespaceVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .namespaceVersion)
        namespaceVersion = namespaceVersionDecoded
    }
}
