// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSystemInstanceInputBody: Equatable {
    public let tags: [Tag]?
    public let definition: DefinitionDocument?
    public let target: DeploymentTarget?
    public let greengrassGroupName: String?
    public let s3BucketName: String?
    public let metricsConfiguration: MetricsConfiguration?
    public let flowActionsRoleArn: String?
}

extension CreateSystemInstanceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case definition
        case flowActionsRoleArn
        case greengrassGroupName
        case metricsConfiguration
        case s3BucketName
        case tags
        case target
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let definitionDecoded = try containerValues.decodeIfPresent(DefinitionDocument.self, forKey: .definition)
        definition = definitionDecoded
        let targetDecoded = try containerValues.decodeIfPresent(DeploymentTarget.self, forKey: .target)
        target = targetDecoded
        let greengrassGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .greengrassGroupName)
        greengrassGroupName = greengrassGroupNameDecoded
        let s3BucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3BucketName)
        s3BucketName = s3BucketNameDecoded
        let metricsConfigurationDecoded = try containerValues.decodeIfPresent(MetricsConfiguration.self, forKey: .metricsConfiguration)
        metricsConfiguration = metricsConfigurationDecoded
        let flowActionsRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .flowActionsRoleArn)
        flowActionsRoleArn = flowActionsRoleArnDecoded
    }
}
