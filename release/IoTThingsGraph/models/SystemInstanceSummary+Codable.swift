// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SystemInstanceSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn
        case createdAt
        case greengrassGroupId
        case greengrassGroupName
        case greengrassGroupVersionId
        case id
        case status
        case target
        case updatedAt
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let greengrassGroupId = greengrassGroupId {
            try encodeContainer.encode(greengrassGroupId, forKey: .greengrassGroupId)
        }
        if let greengrassGroupName = greengrassGroupName {
            try encodeContainer.encode(greengrassGroupName, forKey: .greengrassGroupName)
        }
        if let greengrassGroupVersionId = greengrassGroupVersionId {
            try encodeContainer.encode(greengrassGroupVersionId, forKey: .greengrassGroupVersionId)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let target = target {
            try encodeContainer.encode(target.rawValue, forKey: .target)
        }
        if let updatedAt = updatedAt {
            try encodeContainer.encode(updatedAt.timeIntervalSince1970, forKey: .updatedAt)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SystemInstanceDeploymentStatus.self, forKey: .status)
        status = statusDecoded
        let targetDecoded = try containerValues.decodeIfPresent(DeploymentTarget.self, forKey: .target)
        target = targetDecoded
        let greengrassGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .greengrassGroupName)
        greengrassGroupName = greengrassGroupNameDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
        let greengrassGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .greengrassGroupId)
        greengrassGroupId = greengrassGroupIdDecoded
        let greengrassGroupVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .greengrassGroupVersionId)
        greengrassGroupVersionId = greengrassGroupVersionIdDecoded
    }
}
