// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateEntityToThingInputBody: Equatable {
    public let thingName: String?
    public let entityId: String?
    public let namespaceVersion: Int?
}

extension AssociateEntityToThingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entityId
        case namespaceVersion
        case thingName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let thingNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .thingName)
        thingName = thingNameDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .entityId)
        entityId = entityIdDecoded
        let namespaceVersionDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .namespaceVersion)
        namespaceVersion = namespaceVersionDecoded
    }
}
