// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DefinitionDocument: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case language
        case text
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let language = language {
            try encodeContainer.encode(language.rawValue, forKey: .language)
        }
        if let text = text {
            try encodeContainer.encode(text, forKey: .text)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languageDecoded = try containerValues.decodeIfPresent(DefinitionLanguage.self, forKey: .language)
        language = languageDecoded
        let textDecoded = try containerValues.decodeIfPresent(String.self, forKey: .text)
        text = textDecoded
    }
}
