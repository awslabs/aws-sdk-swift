// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFindingsInputBody: Equatable {
    public let findingArns: [String]?
    public let locale: Locale?
}

extension DescribeFindingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case findingArns
        case locale
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .findingArns)
        var findingArnsDecoded0:[String]? = nil
        if let findingArnsContainer = findingArnsContainer {
            findingArnsDecoded0 = [String]()
            for string0 in findingArnsContainer {
                findingArnsDecoded0?.append(string0)
            }
        }
        findingArns = findingArnsDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
