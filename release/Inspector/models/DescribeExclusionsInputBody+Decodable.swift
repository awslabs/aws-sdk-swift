// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExclusionsInputBody: Equatable {
    public let exclusionArns: [String]?
    public let locale: Locale?
}

extension DescribeExclusionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusionArns
        case locale
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusionArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .exclusionArns)
        var exclusionArnsDecoded0:[String]? = nil
        if let exclusionArnsContainer = exclusionArnsContainer {
            exclusionArnsDecoded0 = [String]()
            for string0 in exclusionArnsContainer {
                exclusionArnsDecoded0?.append(string0)
            }
        }
        exclusionArns = exclusionArnsDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
