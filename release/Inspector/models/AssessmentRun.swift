// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the
///          assessment run .</p>
///          <p>Used as the response element in the <a>DescribeAssessmentRuns</a>
///          action.</p>
public struct AssessmentRun: Equatable {
    /// <p>The ARN of the assessment run.</p>
    public let arn: String?
    /// <p>The ARN of the assessment template that is associated with the assessment
    ///          run.</p>
    public let assessmentTemplateArn: String?
    /// <p>The assessment run completion time that corresponds to the rules packages evaluation
    ///          completion time or failure.</p>
    public let completedAt: Date?
    /// <p>The time when <a>StartAssessmentRun</a> was called.</p>
    public let createdAt: Date?
    /// <p>A Boolean value (true or false) that specifies whether the process of collecting data
    ///          from the agents is completed.</p>
    public let dataCollected: Bool?
    /// <p>The duration of the assessment run.</p>
    public let durationInSeconds: Int
    /// <p>Provides a total count of generated findings per severity.</p>
    public let findingCounts: [String:Int]?
    /// <p>The auto-generated name for the assessment run.</p>
    public let name: String?
    /// <p>A list of notifications for the event subscriptions. A notification about a
    ///          particular generated finding is added to this list only once.</p>
    public let notifications: [AssessmentRunNotification]?
    /// <p>The rules packages selected for the assessment run.</p>
    public let rulesPackageArns: [String]?
    /// <p>The time when <a>StartAssessmentRun</a> was called.</p>
    public let startedAt: Date?
    /// <p>The state of the assessment run.</p>
    public let state: AssessmentRunState?
    /// <p>The last time when the assessment run's state changed.</p>
    public let stateChangedAt: Date?
    /// <p>A list of the assessment run state changes.</p>
    public let stateChanges: [AssessmentRunStateChange]?
    /// <p>The user-defined attributes that are assigned to every generated finding.</p>
    public let userAttributesForFindings: [Attribute]?

    public init (
        arn: String? = nil,
        assessmentTemplateArn: String? = nil,
        completedAt: Date? = nil,
        createdAt: Date? = nil,
        dataCollected: Bool? = nil,
        durationInSeconds: Int = 0,
        findingCounts: [String:Int]? = nil,
        name: String? = nil,
        notifications: [AssessmentRunNotification]? = nil,
        rulesPackageArns: [String]? = nil,
        startedAt: Date? = nil,
        state: AssessmentRunState? = nil,
        stateChangedAt: Date? = nil,
        stateChanges: [AssessmentRunStateChange]? = nil,
        userAttributesForFindings: [Attribute]? = nil
    )
    {
        self.arn = arn
        self.assessmentTemplateArn = assessmentTemplateArn
        self.completedAt = completedAt
        self.createdAt = createdAt
        self.dataCollected = dataCollected
        self.durationInSeconds = durationInSeconds
        self.findingCounts = findingCounts
        self.name = name
        self.notifications = notifications
        self.rulesPackageArns = rulesPackageArns
        self.startedAt = startedAt
        self.state = state
        self.stateChangedAt = stateChangedAt
        self.stateChanges = stateChanges
        self.userAttributesForFindings = userAttributesForFindings
    }
}
