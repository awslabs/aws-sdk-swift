// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FailedItemErrorCode {
    case accessDenied
    case duplicateArn
    case internalError
    case invalidArn
    case itemDoesNotExist
    case limitExceeded
    case sdkUnknown(String)
}

extension FailedItemErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FailedItemErrorCode] {
        return [
            .accessDenied,
            .duplicateArn,
            .internalError,
            .invalidArn,
            .itemDoesNotExist,
            .limitExceeded,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessDenied: return "ACCESS_DENIED"
        case .duplicateArn: return "DUPLICATE_ARN"
        case .internalError: return "INTERNAL_ERROR"
        case .invalidArn: return "INVALID_ARN"
        case .itemDoesNotExist: return "ITEM_DOES_NOT_EXIST"
        case .limitExceeded: return "LIMIT_EXCEEDED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FailedItemErrorCode(rawValue: rawValue) ?? FailedItemErrorCode.sdkUnknown(rawValue)
    }
}
