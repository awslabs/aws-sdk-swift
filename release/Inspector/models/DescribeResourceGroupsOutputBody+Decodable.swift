// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeResourceGroupsOutputBody: Equatable {
    public let resourceGroups: [ResourceGroup]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeResourceGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedItems
        case resourceGroups
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceGroupsContainer = try containerValues.decodeIfPresent([ResourceGroup].self, forKey: .resourceGroups)
        var resourceGroupsDecoded0:[ResourceGroup]? = nil
        if let resourceGroupsContainer = resourceGroupsContainer {
            resourceGroupsDecoded0 = [ResourceGroup]()
            for structure0 in resourceGroupsContainer {
                resourceGroupsDecoded0?.append(structure0)
            }
        }
        resourceGroups = resourceGroupsDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
