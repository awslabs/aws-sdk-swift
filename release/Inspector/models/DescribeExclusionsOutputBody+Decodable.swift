// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExclusionsOutputBody: Equatable {
    public let exclusions: [String:Exclusion]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeExclusionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusions
        case failedItems
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusionsContainer = try containerValues.decodeIfPresent([String:Exclusion].self, forKey: .exclusions)
        var exclusionsDecoded0: [String:Exclusion]? = nil
        if let exclusionsContainer = exclusionsContainer {
            exclusionsDecoded0 = [String:Exclusion]()
            for (key0, exclusion0) in exclusionsContainer {
                exclusionsDecoded0?[key0] = exclusion0
            }
        }
        exclusions = exclusionsDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
