// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAssessmentRunsOutputBody: Equatable {
    public let assessmentRuns: [AssessmentRun]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeAssessmentRunsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assessmentRuns
        case failedItems
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentRunsContainer = try containerValues.decodeIfPresent([AssessmentRun].self, forKey: .assessmentRuns)
        var assessmentRunsDecoded0:[AssessmentRun]? = nil
        if let assessmentRunsContainer = assessmentRunsContainer {
            assessmentRunsDecoded0 = [AssessmentRun]()
            for structure0 in assessmentRunsContainer {
                assessmentRunsDecoded0?.append(structure0)
            }
        }
        assessmentRuns = assessmentRunsDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
