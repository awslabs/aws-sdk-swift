// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeFindingsOutputBody: Equatable {
    public let findings: [Finding]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeFindingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedItems
        case findings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let findingsContainer = try containerValues.decodeIfPresent([Finding].self, forKey: .findings)
        var findingsDecoded0:[Finding]? = nil
        if let findingsContainer = findingsContainer {
            findingsDecoded0 = [Finding]()
            for structure0 in findingsContainer {
                findingsDecoded0?.append(structure0)
            }
        }
        findings = findingsDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
