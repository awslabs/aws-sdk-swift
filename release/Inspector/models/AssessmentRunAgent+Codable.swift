// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssessmentRunAgent: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case agentHealth
        case agentHealthCode
        case agentHealthDetails
        case agentId
        case assessmentRunArn
        case autoScalingGroup
        case telemetryMetadata
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let agentHealth = agentHealth {
            try encodeContainer.encode(agentHealth.rawValue, forKey: .agentHealth)
        }
        if let agentHealthCode = agentHealthCode {
            try encodeContainer.encode(agentHealthCode.rawValue, forKey: .agentHealthCode)
        }
        if let agentHealthDetails = agentHealthDetails {
            try encodeContainer.encode(agentHealthDetails, forKey: .agentHealthDetails)
        }
        if let agentId = agentId {
            try encodeContainer.encode(agentId, forKey: .agentId)
        }
        if let assessmentRunArn = assessmentRunArn {
            try encodeContainer.encode(assessmentRunArn, forKey: .assessmentRunArn)
        }
        if let autoScalingGroup = autoScalingGroup {
            try encodeContainer.encode(autoScalingGroup, forKey: .autoScalingGroup)
        }
        if let telemetryMetadata = telemetryMetadata {
            var telemetryMetadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .telemetryMetadata)
            for telemetrymetadatalist0 in telemetryMetadata {
                try telemetryMetadataContainer.encode(telemetrymetadatalist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentId)
        agentId = agentIdDecoded
        let assessmentRunArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .assessmentRunArn)
        assessmentRunArn = assessmentRunArnDecoded
        let agentHealthDecoded = try containerValues.decodeIfPresent(AgentHealth.self, forKey: .agentHealth)
        agentHealth = agentHealthDecoded
        let agentHealthCodeDecoded = try containerValues.decodeIfPresent(AgentHealthCode.self, forKey: .agentHealthCode)
        agentHealthCode = agentHealthCodeDecoded
        let agentHealthDetailsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentHealthDetails)
        agentHealthDetails = agentHealthDetailsDecoded
        let autoScalingGroupDecoded = try containerValues.decodeIfPresent(String.self, forKey: .autoScalingGroup)
        autoScalingGroup = autoScalingGroupDecoded
        let telemetryMetadataContainer = try containerValues.decodeIfPresent([TelemetryMetadata].self, forKey: .telemetryMetadata)
        var telemetryMetadataDecoded0:[TelemetryMetadata]? = nil
        if let telemetryMetadataContainer = telemetryMetadataContainer {
            telemetryMetadataDecoded0 = [TelemetryMetadata]()
            for structure0 in telemetryMetadataContainer {
                telemetryMetadataDecoded0?.append(structure0)
            }
        }
        telemetryMetadata = telemetryMetadataDecoded0
    }
}
