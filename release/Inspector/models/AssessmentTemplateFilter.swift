// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Used as the request parameter in the <a>ListAssessmentTemplates</a>
///          action.</p>
public struct AssessmentTemplateFilter: Equatable {
    /// <p>For a record to match a filter, the value specified for this data type property must
    ///          inclusively match any value between the specified minimum and maximum values of the
    ///             <b>durationInSeconds</b> property of the <a>AssessmentTemplate</a> data type.</p>
    public let durationRange: DurationRange?
    /// <p>For a record to match a filter, an explicit value or a string that contains a
    ///          wildcard that is specified for this data type property must match the value of the
    ///             <b>assessmentTemplateName</b> property of the <a>AssessmentTemplate</a> data type.</p>
    public let namePattern: String?
    /// <p>For a record to match a filter, the values that are specified for this data type
    ///          property must be contained in the list of values of the <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data
    ///          type.</p>
    public let rulesPackageArns: [String]?

    public init (
        durationRange: DurationRange? = nil,
        namePattern: String? = nil,
        rulesPackageArns: [String]? = nil
    )
    {
        self.durationRange = durationRange
        self.namePattern = namePattern
        self.rulesPackageArns = rulesPackageArns
    }
}
