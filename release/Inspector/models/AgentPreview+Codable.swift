// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AgentPreview: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case agentHealth
        case agentId
        case agentVersion
        case autoScalingGroup
        case hostname
        case ipv4Address
        case kernelVersion
        case operatingSystem
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let agentHealth = agentHealth {
            try encodeContainer.encode(agentHealth.rawValue, forKey: .agentHealth)
        }
        if let agentId = agentId {
            try encodeContainer.encode(agentId, forKey: .agentId)
        }
        if let agentVersion = agentVersion {
            try encodeContainer.encode(agentVersion, forKey: .agentVersion)
        }
        if let autoScalingGroup = autoScalingGroup {
            try encodeContainer.encode(autoScalingGroup, forKey: .autoScalingGroup)
        }
        if let hostname = hostname {
            try encodeContainer.encode(hostname, forKey: .hostname)
        }
        if let ipv4Address = ipv4Address {
            try encodeContainer.encode(ipv4Address, forKey: .ipv4Address)
        }
        if let kernelVersion = kernelVersion {
            try encodeContainer.encode(kernelVersion, forKey: .kernelVersion)
        }
        if let operatingSystem = operatingSystem {
            try encodeContainer.encode(operatingSystem, forKey: .operatingSystem)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostnameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hostname)
        hostname = hostnameDecoded
        let agentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentId)
        agentId = agentIdDecoded
        let autoScalingGroupDecoded = try containerValues.decodeIfPresent(String.self, forKey: .autoScalingGroup)
        autoScalingGroup = autoScalingGroupDecoded
        let agentHealthDecoded = try containerValues.decodeIfPresent(AgentHealth.self, forKey: .agentHealth)
        agentHealth = agentHealthDecoded
        let agentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentVersion)
        agentVersion = agentVersionDecoded
        let operatingSystemDecoded = try containerValues.decodeIfPresent(String.self, forKey: .operatingSystem)
        operatingSystem = operatingSystemDecoded
        let kernelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kernelVersion)
        kernelVersion = kernelVersionDecoded
        let ipv4AddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ipv4Address)
        ipv4Address = ipv4AddressDecoded
    }
}
