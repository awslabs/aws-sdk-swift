// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about an Amazon Inspector finding. This data type is used as the
///          response element in the <a>DescribeFindings</a> action.</p>
public struct Finding: Equatable {
    /// <p>The ARN that specifies the finding.</p>
    public let arn: String?
    /// <p>A collection of attributes of the host from which the finding is generated.</p>
    public let assetAttributes: AssetAttributes?
    /// <p>The type of the host from which the finding is generated.</p>
    public let assetType: AssetType?
    /// <p>The system-defined attributes for the finding.</p>
    public let attributes: [Attribute]?
    /// <p>This data element is currently not used.</p>
    public let confidence: Int
    /// <p>The time when the finding was generated.</p>
    public let createdAt: Date?
    /// <p>The description of the finding.</p>
    public let description: String?
    /// <p>The ID of the finding.</p>
    public let id: String?
    /// <p>This data element is currently not used.</p>
    public let indicatorOfCompromise: Bool?
    /// <p>The numeric value of the finding severity.</p>
    public let numericSeverity: Double
    /// <p>The recommendation for the finding.</p>
    public let recommendation: String?
    /// <p>The schema version of this data type.</p>
    public let schemaVersion: Int
    /// <p>The data element is set to "Inspector".</p>
    public let service: String?
    /// <p>This data type is used in the <a>Finding</a> data type.</p>
    public let serviceAttributes: InspectorServiceAttributes?
    /// <p>The finding severity. Values can be set to High, Medium, Low, and
    ///          Informational.</p>
    public let severity: Severity?
    /// <p>The name of the finding.</p>
    public let title: String?
    /// <p>The time when <a>AddAttributesToFindings</a> is called.</p>
    public let updatedAt: Date?
    /// <p>The user-defined attributes that are assigned to the finding.</p>
    public let userAttributes: [Attribute]?

    public init (
        arn: String? = nil,
        assetAttributes: AssetAttributes? = nil,
        assetType: AssetType? = nil,
        attributes: [Attribute]? = nil,
        confidence: Int = 0,
        createdAt: Date? = nil,
        description: String? = nil,
        id: String? = nil,
        indicatorOfCompromise: Bool? = nil,
        numericSeverity: Double = 0.0,
        recommendation: String? = nil,
        schemaVersion: Int = 0,
        service: String? = nil,
        serviceAttributes: InspectorServiceAttributes? = nil,
        severity: Severity? = nil,
        title: String? = nil,
        updatedAt: Date? = nil,
        userAttributes: [Attribute]? = nil
    )
    {
        self.arn = arn
        self.assetAttributes = assetAttributes
        self.assetType = assetType
        self.attributes = attributes
        self.confidence = confidence
        self.createdAt = createdAt
        self.description = description
        self.id = id
        self.indicatorOfCompromise = indicatorOfCompromise
        self.numericSeverity = numericSeverity
        self.recommendation = recommendation
        self.schemaVersion = schemaVersion
        self.service = service
        self.serviceAttributes = serviceAttributes
        self.severity = severity
        self.title = title
        self.updatedAt = updatedAt
        self.userAttributes = userAttributes
    }
}
