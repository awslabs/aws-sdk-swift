// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAssessmentTemplatesOutputBody: Equatable {
    public let assessmentTemplates: [AssessmentTemplate]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeAssessmentTemplatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assessmentTemplates
        case failedItems
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentTemplatesContainer = try containerValues.decodeIfPresent([AssessmentTemplate].self, forKey: .assessmentTemplates)
        var assessmentTemplatesDecoded0:[AssessmentTemplate]? = nil
        if let assessmentTemplatesContainer = assessmentTemplatesContainer {
            assessmentTemplatesDecoded0 = [AssessmentTemplate]()
            for structure0 in assessmentTemplatesContainer {
                assessmentTemplatesDecoded0?.append(structure0)
            }
        }
        assessmentTemplates = assessmentTemplatesDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
