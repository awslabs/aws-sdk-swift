// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentRunsOutputBody: Equatable {
    public let assessmentRunArns: [String]?
    public let nextToken: String?
}

extension ListAssessmentRunsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assessmentRunArns
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentRunArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .assessmentRunArns)
        var assessmentRunArnsDecoded0:[String]? = nil
        if let assessmentRunArnsContainer = assessmentRunArnsContainer {
            assessmentRunArnsDecoded0 = [String]()
            for string0 in assessmentRunArnsContainer {
                assessmentRunArnsDecoded0?.append(string0)
            }
        }
        assessmentRunArns = assessmentRunArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
