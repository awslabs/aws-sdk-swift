// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Used as the request parameter in the <a>ListAssessmentRuns</a>
///          action.</p>
public struct AssessmentRunFilter: Equatable {
    /// <p>For a record to match a filter, the value that is specified for this data type
    ///          property must inclusively match any value between the specified minimum and maximum values
    ///          of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type.</p>
    public let completionTimeRange: TimestampRange?
    /// <p>For a record to match a filter, the value that is specified for this data type
    ///          property must inclusively match any value between the specified minimum and maximum values
    ///          of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type.</p>
    public let durationRange: DurationRange?
    /// <p>For a record to match a filter, an explicit value or a string containing a wildcard
    ///          that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a>
    ///          data type.</p>
    public let namePattern: String?
    /// <p>For a record to match a filter, the value that is specified for this data type
    ///          property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data
    ///          type.</p>
    public let rulesPackageArns: [String]?
    /// <p>For a record to match a filter, the value that is specified for this data type
    ///          property must inclusively match any value between the specified minimum and maximum values
    ///          of the <b>startTime</b> property of the <a>AssessmentRun</a> data type.</p>
    public let startTimeRange: TimestampRange?
    /// <p>For a record to match a filter, the value that is specified for this data type
    ///          property must match the <b>stateChangedAt</b> property of the
    ///             <a>AssessmentRun</a> data type.</p>
    public let stateChangeTimeRange: TimestampRange?
    /// <p>For a record to match a filter, one of the values specified for this data type
    ///          property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data
    ///          type.</p>
    public let states: [AssessmentRunState]?

    public init (
        completionTimeRange: TimestampRange? = nil,
        durationRange: DurationRange? = nil,
        namePattern: String? = nil,
        rulesPackageArns: [String]? = nil,
        startTimeRange: TimestampRange? = nil,
        stateChangeTimeRange: TimestampRange? = nil,
        states: [AssessmentRunState]? = nil
    )
    {
        self.completionTimeRange = completionTimeRange
        self.durationRange = durationRange
        self.namePattern = namePattern
        self.rulesPackageArns = rulesPackageArns
        self.startTimeRange = startTimeRange
        self.stateChangeTimeRange = stateChangeTimeRange
        self.states = states
    }
}
