// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRulesPackagesOutputBody: Equatable {
    public let rulesPackages: [RulesPackage]?
    public let failedItems: [String:FailedItemDetails]?
}

extension DescribeRulesPackagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedItems
        case rulesPackages
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesPackagesContainer = try containerValues.decodeIfPresent([RulesPackage].self, forKey: .rulesPackages)
        var rulesPackagesDecoded0:[RulesPackage]? = nil
        if let rulesPackagesContainer = rulesPackagesContainer {
            rulesPackagesDecoded0 = [RulesPackage]()
            for structure0 in rulesPackagesContainer {
                rulesPackagesDecoded0?.append(structure0)
            }
        }
        rulesPackages = rulesPackagesDecoded0
        let failedItemsContainer = try containerValues.decodeIfPresent([String:FailedItemDetails].self, forKey: .failedItems)
        var failedItemsDecoded0: [String:FailedItemDetails]? = nil
        if let failedItemsContainer = failedItemsContainer {
            failedItemsDecoded0 = [String:FailedItemDetails]()
            for (key0, faileditemdetails0) in failedItemsContainer {
                failedItemsDecoded0?[key0] = faileditemdetails0
            }
        }
        failedItems = failedItemsDecoded0
    }
}
