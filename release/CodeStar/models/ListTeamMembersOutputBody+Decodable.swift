// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTeamMembersOutputBody: Equatable {
    public let teamMembers: [TeamMember]?
    public let nextToken: String?
}

extension ListTeamMembersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case teamMembers
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let teamMembersContainer = try containerValues.decodeIfPresent([TeamMember].self, forKey: .teamMembers)
        var teamMembersDecoded0:[TeamMember]? = nil
        if let teamMembersContainer = teamMembersContainer {
            teamMembersDecoded0 = [TeamMember]()
            for structure0 in teamMembersContainer {
                teamMembersDecoded0?.append(structure0)
            }
        }
        teamMembers = teamMembersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
