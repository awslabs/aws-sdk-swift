// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>AWS CodeStar</fullname>
///          <p>This is the API reference for AWS CodeStar. This reference provides descriptions of the
///       operations and data types for the AWS CodeStar API along with usage examples.</p>
///          <p>You can use the AWS CodeStar API to work with:</p>
///          <p>Projects and their resources, by calling the following:</p>
///          <ul>
///             <li>
///                <p>
///                   <code>DeleteProject</code>, which deletes a project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>DescribeProject</code>, which lists the attributes of a project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>ListProjects</code>, which lists all projects associated with your AWS
///           account.</p>
///             </li>
///             <li>
///                <p>
///                   <code>ListResources</code>, which lists the resources associated with a
///           project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>ListTagsForProject</code>, which lists the tags associated with a
///           project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>TagProject</code>, which adds tags to a project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>UntagProject</code>, which removes tags from a project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>UpdateProject</code>, which updates the attributes of a project.</p>
///             </li>
///          </ul>
///          <p>Teams and team members, by calling the following:</p>
///          <ul>
///             <li>
///                <p>
///                   <code>AssociateTeamMember</code>, which adds an IAM user to the team for a
///           project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>DisassociateTeamMember</code>, which removes an IAM user from the team for a
///           project.</p>
///             </li>
///             <li>
///                <p>
///                   <code>ListTeamMembers</code>, which lists all the IAM users in the team for a
///           project, including their roles and attributes.</p>
///             </li>
///             <li>
///                <p>
///                   <code>UpdateTeamMember</code>, which updates a team member's attributes in a
///           project.</p>
///             </li>
///          </ul>
///          <p>Users, by calling the following:</p>
///          <ul>
///             <li>
///                <p>
///                   <code>CreateUserProfile</code>, which creates a user profile that contains data
///           associated with the user across all projects.</p>
///             </li>
///             <li>
///                <p>
///                   <code>DeleteUserProfile</code>, which deletes all user profile information across
///           all projects.</p>
///             </li>
///             <li>
///                <p>
///                   <code>DescribeUserProfile</code>, which describes the profile of a user.</p>
///             </li>
///             <li>
///                <p>
///                   <code>ListUserProfiles</code>, which lists all user profiles.</p>
///             </li>
///             <li>
///                <p>
///                   <code>UpdateUserProfile</code>, which updates the profile for a user.</p>
///             </li>
///          </ul>
public protocol CodeStarClientProtocol {
    /// <p>Adds an IAM user to the team for an AWS CodeStar project.</p>
    func associateTeamMember(input: AssociateTeamMemberInput, completion: @escaping (SdkResult<AssociateTeamMemberOutputResponse, AssociateTeamMemberOutputError>) -> Void)
    /// <p>Creates a project, including project resources. This action creates a project based on
    ///       a submitted project request. A set of source code files and a toolchain template file
    ///       can be included with the project request. If these are not provided, an empty project is created.</p>
    func createProject(input: CreateProjectInput, completion: @escaping (SdkResult<CreateProjectOutputResponse, CreateProjectOutputError>) -> Void)
    /// <p>Creates a profile for a user that includes user preferences, such as the display name
    ///       and email address assocciated with the user, in AWS CodeStar. The user profile is not
    ///       project-specific. Information in the user profile is displayed wherever the user's information
    ///       appears to other users in AWS CodeStar.</p>
    func createUserProfile(input: CreateUserProfileInput, completion: @escaping (SdkResult<CreateUserProfileOutputResponse, CreateUserProfileOutputError>) -> Void)
    /// <p>Deletes a project, including project resources. Does not delete users associated with
    ///       the project, but does delete the IAM roles that allowed access to the project.</p>
    func deleteProject(input: DeleteProjectInput, completion: @escaping (SdkResult<DeleteProjectOutputResponse, DeleteProjectOutputError>) -> Void)
    /// <p>Deletes a user profile in AWS CodeStar, including all personal preference data associated with
    ///       that profile, such as display name and email address. It does not delete the history of that
    ///       user, for example the history of commits made by that user.</p>
    func deleteUserProfile(input: DeleteUserProfileInput, completion: @escaping (SdkResult<DeleteUserProfileOutputResponse, DeleteUserProfileOutputError>) -> Void)
    /// <p>Describes a project and its resources.</p>
    func describeProject(input: DescribeProjectInput, completion: @escaping (SdkResult<DescribeProjectOutputResponse, DescribeProjectOutputError>) -> Void)
    /// <p>Describes a user in AWS CodeStar and the user attributes across all projects.</p>
    func describeUserProfile(input: DescribeUserProfileInput, completion: @escaping (SdkResult<DescribeUserProfileOutputResponse, DescribeUserProfileOutputError>) -> Void)
    /// <p>Removes a user from a project. Removing a user from a project also removes the IAM
    ///       policies from that user that allowed access to the project and its resources. Disassociating a
    ///       team member does not remove that user's profile from AWS CodeStar. It does not remove the user from
    ///       IAM.</p>
    func disassociateTeamMember(input: DisassociateTeamMemberInput, completion: @escaping (SdkResult<DisassociateTeamMemberOutputResponse, DisassociateTeamMemberOutputError>) -> Void)
    /// <p>Lists all projects in AWS CodeStar associated with your AWS account.</p>
    func listProjects(input: ListProjectsInput, completion: @escaping (SdkResult<ListProjectsOutputResponse, ListProjectsOutputError>) -> Void)
    /// <p>Lists resources associated with a project in AWS CodeStar.</p>
    func listResources(input: ListResourcesInput, completion: @escaping (SdkResult<ListResourcesOutputResponse, ListResourcesOutputError>) -> Void)
    /// <p>Gets the tags for a project.</p>
    func listTagsForProject(input: ListTagsForProjectInput, completion: @escaping (SdkResult<ListTagsForProjectOutputResponse, ListTagsForProjectOutputError>) -> Void)
    /// <p>Lists all team members associated with a project.</p>
    func listTeamMembers(input: ListTeamMembersInput, completion: @escaping (SdkResult<ListTeamMembersOutputResponse, ListTeamMembersOutputError>) -> Void)
    /// <p>Lists all the user profiles configured for your AWS account in AWS CodeStar.</p>
    func listUserProfiles(input: ListUserProfilesInput, completion: @escaping (SdkResult<ListUserProfilesOutputResponse, ListUserProfilesOutputError>) -> Void)
    /// <p>Adds tags to a project.</p>
    func tagProject(input: TagProjectInput, completion: @escaping (SdkResult<TagProjectOutputResponse, TagProjectOutputError>) -> Void)
    /// <p>Removes tags from a project.</p>
    func untagProject(input: UntagProjectInput, completion: @escaping (SdkResult<UntagProjectOutputResponse, UntagProjectOutputError>) -> Void)
    /// <p>Updates a project in AWS CodeStar.</p>
    func updateProject(input: UpdateProjectInput, completion: @escaping (SdkResult<UpdateProjectOutputResponse, UpdateProjectOutputError>) -> Void)
    /// <p>Updates a team member's attributes in an AWS CodeStar project. For example, you can change a
    ///       team member's role in the project, or change whether they have remote access to project
    ///       resources.</p>
    func updateTeamMember(input: UpdateTeamMemberInput, completion: @escaping (SdkResult<UpdateTeamMemberOutputResponse, UpdateTeamMemberOutputError>) -> Void)
    /// <p>Updates a user's profile in AWS CodeStar. The user profile is not project-specific.
    ///       Information in the user profile is displayed wherever the user's information appears to other
    ///       users in AWS CodeStar. </p>
    func updateUserProfile(input: UpdateUserProfileInput, completion: @escaping (SdkResult<UpdateUserProfileOutputResponse, UpdateUserProfileOutputError>) -> Void)
}
