// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInstancesHealthStatusInputBody: Equatable {
    public let serviceId: String?
    public let instances: [String]?
    public let maxResults: Int?
    public let nextToken: String?
}

extension GetInstancesHealthStatusInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instances = "Instances"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case serviceId = "ServiceId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serviceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceId)
        serviceId = serviceIdDecoded
        let instancesContainer = try containerValues.decodeIfPresent([String].self, forKey: .instances)
        var instancesDecoded0:[String]? = nil
        if let instancesContainer = instancesContainer {
            instancesDecoded0 = [String]()
            for string0 in instancesContainer {
                instancesDecoded0?.append(string0)
            }
        }
        instances = instancesDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
