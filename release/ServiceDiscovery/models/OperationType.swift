// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum OperationType {
    case createNamespace
    case deleteNamespace
    case deregisterInstance
    case registerInstance
    case updateService
    case sdkUnknown(String)
}

extension OperationType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OperationType] {
        return [
            .createNamespace,
            .deleteNamespace,
            .deregisterInstance,
            .registerInstance,
            .updateService,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createNamespace: return "CREATE_NAMESPACE"
        case .deleteNamespace: return "DELETE_NAMESPACE"
        case .deregisterInstance: return "DEREGISTER_INSTANCE"
        case .registerInstance: return "REGISTER_INSTANCE"
        case .updateService: return "UPDATE_SERVICE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OperationType(rawValue: rawValue) ?? OperationType.sdkUnknown(rawValue)
    }
}
