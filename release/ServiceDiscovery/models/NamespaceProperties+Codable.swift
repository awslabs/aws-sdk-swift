// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NamespaceProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dnsProperties = "DnsProperties"
        case httpProperties = "HttpProperties"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsProperties = dnsProperties {
            try encodeContainer.encode(dnsProperties, forKey: .dnsProperties)
        }
        if let httpProperties = httpProperties {
            try encodeContainer.encode(httpProperties, forKey: .httpProperties)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dnsPropertiesDecoded = try containerValues.decodeIfPresent(DnsProperties.self, forKey: .dnsProperties)
        dnsProperties = dnsPropertiesDecoded
        let httpPropertiesDecoded = try containerValues.decodeIfPresent(HttpProperties.self, forKey: .httpProperties)
        httpProperties = httpPropertiesDecoded
    }
}
