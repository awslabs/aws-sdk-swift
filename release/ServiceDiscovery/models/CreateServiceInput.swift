// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateServiceInput: Equatable {
    /// <p>A unique string that identifies the request and that allows failed <code>CreateService</code> requests to be
    ///    retried without the risk of running the operation twice. <code>CreatorRequestId</code> can be any unique string (for
    ///    example, a date/timestamp).</p>
    public var creatorRequestId: String?
    /// <p>A description for the service.</p>
    public let description: String?
    /// <p>A complex type that contains information about the Amazon Route 53 records that you want AWS Cloud Map to create when you
    ///    register an instance. </p>
    public let dnsConfig: DnsConfig?
    /// <p>
    ///             <i>Public DNS and HTTP namespaces only.</i> A complex type that contains settings for an optional
    ///    Route 53 health check. If you specify settings for a health check, AWS Cloud Map associates the health check with all the
    ///    Route 53 DNS records that you specify in <code>DnsConfig</code>.</p>
    ///          <important>
    ///             <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code> or
    ///      <code>HealthCheckConfig</code> but not both.</p>
    ///          </important>
    ///          <p>For information about the charges for health checks, see <a href="http://aws.amazon.com/cloud-map/pricing/">AWS Cloud Map Pricing</a>.</p>
    public let healthCheckConfig: HealthCheckConfig?
    /// <p>A complex type that contains information about an optional custom health check.</p>
    ///          <important>
    ///             <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code> or
    ///      <code>HealthCheckConfig</code> but not both.</p>
    ///          </important>
    ///          <p>You can't add, update, or delete a <code>HealthCheckCustomConfig</code> configuration from an existing
    ///    service.</p>
    public let healthCheckCustomConfig: HealthCheckCustomConfig?
    /// <p>The name that you want to assign to the service.</p>
    ///          <p>If you want AWS Cloud Map to create an <code>SRV</code> record when you register an instance and you're using a
    ///    system that requires a specific <code>SRV</code> format, such as <a href="http://www.haproxy.org/">HAProxy</a>, specify the following for <code>Name</code>:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Start the name with an underscore (_), such as <code>_exampleservice</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>End the name with <i>._protocol</i>, such as <code>._tcp</code>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>When you register an instance, AWS Cloud Map creates an <code>SRV</code> record and assigns a name to the record by
    ///    concatenating the service name and the namespace name (for example,</p>
    ///          <p>
    ///             <code>_exampleservice._tcp.example.com</code>).</p>
    ///          <note>
    ///             <p>For services that are accessible by DNS queries, you can't create multiple services with names that differ only
    ///     by case (such as EXAMPLE and example). Otherwise, these services have the same DNS name and can't be distinguished.
    ///     However, if you use a namespace that's only accessible by API calls, then you can create services that with names
    ///     that differ only by case.</p>
    ///          </note>
    public let name: String?
    /// <p>The ID of the namespace that you want to use to create the service. The namespace ID must be specified, but it
    ///    can be specified either here or in the <code>DnsConfig</code> object.</p>
    public let namespaceId: String?
    /// <p>The tags to add to the service. Each tag consists of a key and an optional value that you define.
    ///    Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in
    ///                      length.</p>
    public let tags: [Tag]?
    /// <p>If present, specifies that the service instances are only discoverable using the <code>DiscoverInstances</code>
    ///    API operation. No DNS records is registered for the service instances. The only valid value is
    ///    <code>HTTP</code>.</p>
    public let type: ServiceTypeOption?

    public init (
        creatorRequestId: String? = nil,
        description: String? = nil,
        dnsConfig: DnsConfig? = nil,
        healthCheckConfig: HealthCheckConfig? = nil,
        healthCheckCustomConfig: HealthCheckCustomConfig? = nil,
        name: String? = nil,
        namespaceId: String? = nil,
        tags: [Tag]? = nil,
        type: ServiceTypeOption? = nil
    )
    {
        self.creatorRequestId = creatorRequestId
        self.description = description
        self.dnsConfig = dnsConfig
        self.healthCheckConfig = healthCheckConfig
        self.healthCheckCustomConfig = healthCheckCustomConfig
        self.name = name
        self.namespaceId = namespaceId
        self.tags = tags
        self.type = type
    }
}
