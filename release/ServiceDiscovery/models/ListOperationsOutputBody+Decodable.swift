// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOperationsOutputBody: Equatable {
    public let operations: [OperationSummary]?
    public let nextToken: String?
}

extension ListOperationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case operations = "Operations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let operationsContainer = try containerValues.decodeIfPresent([OperationSummary].self, forKey: .operations)
        var operationsDecoded0:[OperationSummary]? = nil
        if let operationsContainer = operationsContainer {
            operationsDecoded0 = [OperationSummary]()
            for structure0 in operationsContainer {
                operationsDecoded0?.append(structure0)
            }
        }
        operations = operationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
