// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A complex type that contains information about a specified service.</p>
public struct ServiceSummary: Equatable {
    /// <p>The Amazon Resource Name (ARN) that AWS Cloud Map assigns to the service when you create it.</p>
    public let arn: String?
    /// <p>The date and time that the service was created.</p>
    public let createDate: Date?
    /// <p>The description that you specify when you create the service.</p>
    public let description: String?
    /// <p>Information about the RouteÂ 53 DNS records that you want AWS Cloud Map to create when you register an instance.</p>
    public let dnsConfig: DnsConfig?
    /// <p>
    ///             <i>Public DNS and HTTP namespaces only.</i> Settings for an optional health check. If you specify
    ///    settings for a health check, AWS Cloud Map associates the health check with the records that you specify in
    ///     <code>DnsConfig</code>.</p>
    public let healthCheckConfig: HealthCheckConfig?
    /// <p>Information about an optional custom health check. A custom health check, which requires that you use a
    ///    third-party health checker to evaluate the health of your resources, is useful in the following circumstances:</p>
    ///          <ul>
    ///             <li>
    ///                <p>You can't use a health check that's defined by <code>HealthCheckConfig</code> because the resource isn't
    ///      available over the internet. For example, you can use a custom health check when the instance is in an Amazon VPC.
    ///      (To check the health of resources in a VPC, the health checker must also be in the VPC.)</p>
    ///             </li>
    ///             <li>
    ///                <p>You want to use a third-party health checker regardless of where your resources are located.</p>
    ///             </li>
    ///          </ul>
    ///          <important>
    ///             <p>If you specify a health check configuration, you can specify either <code>HealthCheckCustomConfig</code> or
    ///      <code>HealthCheckConfig</code> but not both.</p>
    ///          </important>
    public let healthCheckCustomConfig: HealthCheckCustomConfig?
    /// <p>The ID that AWS Cloud Map assigned to the service when you created it.</p>
    public let id: String?
    /// <p>The number of instances that are currently associated with the service. Instances that were previously
    ///    associated with the service but that are deleted aren't included in the count. The count might not reflect pending
    ///    registrations and deregistrations.</p>
    public let instanceCount: Int?
    /// <p>The name of the service.</p>
    public let name: String?
    /// <p>Describes the systems that can be used to discover the service instances.</p>
    ///          <dl>
    ///             <dt>DNS_HTTP</dt>
    ///             <dd>
    ///                <p>The service instances can be discovered using either DNS queries or the <code>DiscoverInstances</code> API
    ///       operation.</p>
    ///             </dd>
    ///             <dt>HTTP</dt>
    ///             <dd>
    ///                <p>The service instances can only be discovered using the <code>DiscoverInstances</code> API operation.</p>
    ///             </dd>
    ///             <dt>DNS</dt>
    ///             <dd>
    ///                <p>Reserved.</p>
    ///             </dd>
    ///          </dl>
    public let type: ServiceType?

    public init (
        arn: String? = nil,
        createDate: Date? = nil,
        description: String? = nil,
        dnsConfig: DnsConfig? = nil,
        healthCheckConfig: HealthCheckConfig? = nil,
        healthCheckCustomConfig: HealthCheckCustomConfig? = nil,
        id: String? = nil,
        instanceCount: Int? = nil,
        name: String? = nil,
        type: ServiceType? = nil
    )
    {
        self.arn = arn
        self.createDate = createDate
        self.description = description
        self.dnsConfig = dnsConfig
        self.healthCheckConfig = healthCheckConfig
        self.healthCheckCustomConfig = healthCheckCustomConfig
        self.id = id
        self.instanceCount = instanceCount
        self.name = name
        self.type = type
    }
}
