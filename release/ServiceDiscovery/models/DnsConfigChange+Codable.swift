// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DnsConfigChange: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dnsRecords = "DnsRecords"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsRecords = dnsRecords {
            var dnsRecordsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dnsRecords)
            for dnsrecordlist0 in dnsRecords {
                try dnsRecordsContainer.encode(dnsrecordlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dnsRecordsContainer = try containerValues.decodeIfPresent([DnsRecord].self, forKey: .dnsRecords)
        var dnsRecordsDecoded0:[DnsRecord]? = nil
        if let dnsRecordsContainer = dnsRecordsContainer {
            dnsRecordsDecoded0 = [DnsRecord]()
            for structure0 in dnsRecordsContainer {
                dnsRecordsDecoded0?.append(structure0)
            }
        }
        dnsRecords = dnsRecordsDecoded0
    }
}
