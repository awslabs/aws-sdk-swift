// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes information used to start an instance refresh. </p>
///         <p>All properties are optional. However, if you specify a value for
///                 <code>CheckpointDelay</code>, you must also provide a value for
///                 <code>CheckpointPercentages</code>. </p>
public struct RefreshPreferences: Equatable {
    /// <p>The amount of time, in seconds, to wait after a checkpoint before continuing. This
    ///             property is optional, but if you specify a value for it, you must also specify a value
    ///             for <code>CheckpointPercentages</code>. If you specify a value for
    ///                 <code>CheckpointPercentages</code> and not for <code>CheckpointDelay</code>, the
    ///                 <code>CheckpointDelay</code> defaults to <code>3600</code> (1 hour). </p>
    public let checkpointDelay: Int?
    /// <p>Threshold values for each checkpoint in ascending order. Each number must be unique.
    ///             To replace all instances in the Auto Scaling group, the last number in the array must be
    ///                 <code>100</code>.</p>
    ///         <p>For usage examples, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-adding-checkpoints-instance-refresh.html">Adding
    ///                 checkpoints to an instance refresh</a> in the
    ///             <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    public let checkpointPercentages: [Int]?
    /// <p>The number of seconds until a newly launched instance is configured and ready to use.
    ///             During this time, Amazon EC2 Auto Scaling does not immediately move on to the next replacement. The
    ///             default is to use the value for the health check grace period defined for the
    ///             group.</p>
    public let instanceWarmup: Int?
    /// <p>The amount of capacity in the Auto Scaling group that must remain healthy during an instance
    ///             refresh to allow the operation to continue, as a percentage of the desired capacity of
    ///             the Auto Scaling group (rounded up to the nearest integer). The default is <code>90</code>.
    ///         </p>
    public let minHealthyPercentage: Int?

    public init (
        checkpointDelay: Int? = nil,
        checkpointPercentages: [Int]? = nil,
        instanceWarmup: Int? = nil,
        minHealthyPercentage: Int? = nil
    )
    {
        self.checkpointDelay = checkpointDelay
        self.checkpointPercentages = checkpointPercentages
        self.instanceWarmup = instanceWarmup
        self.minHealthyPercentage = minHealthyPercentage
    }
}
