// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PredefinedLoadMetricType {
    case albtargetgrouprequestcount
    case asgtotalcpuutilization
    case asgtotalnetworkin
    case asgtotalnetworkout
    case sdkUnknown(String)
}

extension PredefinedLoadMetricType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PredefinedLoadMetricType] {
        return [
            .albtargetgrouprequestcount,
            .asgtotalcpuutilization,
            .asgtotalnetworkin,
            .asgtotalnetworkout,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .albtargetgrouprequestcount: return "ALBTargetGroupRequestCount"
        case .asgtotalcpuutilization: return "ASGTotalCPUUtilization"
        case .asgtotalnetworkin: return "ASGTotalNetworkIn"
        case .asgtotalnetworkout: return "ASGTotalNetworkOut"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PredefinedLoadMetricType(rawValue: rawValue) ?? PredefinedLoadMetricType.sdkUnknown(rawValue)
    }
}
