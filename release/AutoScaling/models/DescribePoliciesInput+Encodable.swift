// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribePoliciesInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let autoScalingGroupName = autoScalingGroupName {
            try container.encode(autoScalingGroupName, forKey: Key("AutoScalingGroupName"))
        }
        if let maxRecords = maxRecords {
            try container.encode(maxRecords, forKey: Key("MaxRecords"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: Key("NextToken"))
        }
        if let policyNames = policyNames {
            var policyNamesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("PolicyNames"))
            for (index0, resourcename0) in policyNames.enumerated() {
                try policyNamesContainer.encode(resourcename0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let policyTypes = policyTypes {
            var policyTypesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("PolicyTypes"))
            for (index0, xmlstringmaxlen640) in policyTypes.enumerated() {
                try policyTypesContainer.encode(xmlstringmaxlen640, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("DescribePolicies", forKey:Key("Action"))
        try container.encode("2011-01-01", forKey:Key("Version"))
    }
}
