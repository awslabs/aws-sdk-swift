// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutLifecycleHookInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let autoScalingGroupName = autoScalingGroupName {
            try container.encode(autoScalingGroupName, forKey: Key("AutoScalingGroupName"))
        }
        if let defaultResult = defaultResult {
            try container.encode(defaultResult, forKey: Key("DefaultResult"))
        }
        if let heartbeatTimeout = heartbeatTimeout {
            try container.encode(heartbeatTimeout, forKey: Key("HeartbeatTimeout"))
        }
        if let lifecycleHookName = lifecycleHookName {
            try container.encode(lifecycleHookName, forKey: Key("LifecycleHookName"))
        }
        if let lifecycleTransition = lifecycleTransition {
            try container.encode(lifecycleTransition, forKey: Key("LifecycleTransition"))
        }
        if let notificationMetadata = notificationMetadata {
            try container.encode(notificationMetadata, forKey: Key("NotificationMetadata"))
        }
        if let notificationTargetARN = notificationTargetARN {
            try container.encode(notificationTargetARN, forKey: Key("NotificationTargetARN"))
        }
        if let roleARN = roleARN {
            try container.encode(roleARN, forKey: Key("RoleARN"))
        }
        try container.encode("PutLifecycleHook", forKey:Key("Action"))
        try container.encode("2011-01-01", forKey:Key("Version"))
    }
}
