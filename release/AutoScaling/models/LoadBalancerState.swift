// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the state of a Classic Load Balancer.</p>
public struct LoadBalancerState: Equatable {
    /// <p>The name of the load balancer.</p>
    public let loadBalancerName: String?
    /// <p>One of the following load balancer states:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>Adding</code> - The Auto Scaling instances are being registered with the load
    ///                     balancer.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>Added</code> - All Auto Scaling instances are registered with the load
    ///                     balancer.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>InService</code> - At least one Auto Scaling instance passed an <code>ELB</code>
    ///                     health check.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Removing</code> - The Auto Scaling instances are being deregistered from the
    ///                     load balancer. If connection draining is enabled, Elastic Load Balancing waits for in-flight
    ///                     requests to complete before deregistering the instances.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Removed</code> - All Auto Scaling instances are deregistered from the load
    ///                     balancer.</p>
    ///             </li>
    ///          </ul>
    public let state: String?

    public init (
        loadBalancerName: String? = nil,
        state: String? = nil
    )
    {
        self.loadBalancerName = loadBalancerName
        self.state = state
    }
}
