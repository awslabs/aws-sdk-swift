// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LaunchTemplateOverrides: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case instanceType = "InstanceType"
        case launchTemplateSpecification = "LaunchTemplateSpecification"
        case weightedCapacity = "WeightedCapacity"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let instanceType = instanceType {
            try container.encode(instanceType, forKey: Key("InstanceType"))
        }
        if let launchTemplateSpecification = launchTemplateSpecification {
            try container.encode(launchTemplateSpecification, forKey: Key("LaunchTemplateSpecification"))
        }
        if let weightedCapacity = weightedCapacity {
            try container.encode(weightedCapacity, forKey: Key("WeightedCapacity"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let weightedCapacityDecoded = try containerValues.decodeIfPresent(String.self, forKey: .weightedCapacity)
        weightedCapacity = weightedCapacityDecoded
        let launchTemplateSpecificationDecoded = try containerValues.decodeIfPresent(LaunchTemplateSpecification.self, forKey: .launchTemplateSpecification)
        launchTemplateSpecification = launchTemplateSpecificationDecoded
    }
}
