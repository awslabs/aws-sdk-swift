// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWarmPoolOutputBody: Equatable {
    public let warmPoolConfiguration: WarmPoolConfiguration?
    public let instances: [Instance]?
    public let nextToken: String?
}

extension DescribeWarmPoolOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instances = "Instances"
        case nextToken = "NextToken"
        case warmPoolConfiguration = "WarmPoolConfiguration"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DescribeWarmPoolResult"))
        let warmPoolConfigurationDecoded = try containerValues.decodeIfPresent(WarmPoolConfiguration.self, forKey: .warmPoolConfiguration)
        warmPoolConfiguration = warmPoolConfigurationDecoded
        if containerValues.contains(.instances) {
            struct KeyVal0{struct member{}}
            let instancesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .instances)
            if let instancesWrappedContainer = instancesWrappedContainer {
                let instancesContainer = try instancesWrappedContainer.decodeIfPresent([Instance].self, forKey: .member)
                var instancesBuffer:[Instance]? = nil
                if let instancesContainer = instancesContainer {
                    instancesBuffer = [Instance]()
                    for structureContainer0 in instancesContainer {
                        instancesBuffer?.append(structureContainer0)
                    }
                }
                instances = instancesBuffer
            } else {
                instances = []
            }
        } else {
            instances = nil
        }
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
