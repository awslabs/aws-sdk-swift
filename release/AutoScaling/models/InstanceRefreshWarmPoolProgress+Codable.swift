// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceRefreshWarmPoolProgress: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case instancesToUpdate = "InstancesToUpdate"
        case percentageComplete = "PercentageComplete"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let instancesToUpdate = instancesToUpdate {
            try container.encode(instancesToUpdate, forKey: Key("InstancesToUpdate"))
        }
        if let percentageComplete = percentageComplete {
            try container.encode(percentageComplete, forKey: Key("PercentageComplete"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let percentageCompleteDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .percentageComplete)
        percentageComplete = percentageCompleteDecoded
        let instancesToUpdateDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .instancesToUpdate)
        instancesToUpdate = instancesToUpdateDecoded
    }
}
