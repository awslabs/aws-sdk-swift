// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an instance refresh for an Auto Scaling group. </p>
public struct InstanceRefresh: Equatable {
    /// <p>The name of the Auto Scaling group.</p>
    public let autoScalingGroupName: String?
    /// <p>The date and time at which the instance refresh ended.</p>
    public let endTime: Date?
    /// <p>The instance refresh ID.</p>
    public let instanceRefreshId: String?
    /// <p>The number of instances remaining to update before the instance refresh is
    ///             complete.</p>
    public let instancesToUpdate: Int?
    /// <p>The percentage of the instance refresh that is complete. For each instance
    ///             replacement, Amazon EC2 Auto Scaling tracks the instance's health status and warm-up time. When the
    ///             instance's health status changes to healthy and the specified warm-up time passes, the
    ///             instance is considered updated and is added to the percentage complete.</p>
    public let percentageComplete: Int?
    /// <p>Additional progress details for an Auto Scaling group that has a warm pool.</p>
    public let progressDetails: InstanceRefreshProgressDetails?
    /// <p>The date and time at which the instance refresh began.</p>
    public let startTime: Date?
    /// <p>The current status for the instance refresh operation:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>Pending</code> - The request was created, but the operation has not
    ///                     started.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>InProgress</code> - The operation is in progress.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Successful</code> - The operation completed successfully.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Failed</code> - The operation failed to complete. You can troubleshoot
    ///                     using the status reason and the scaling activities. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Cancelling</code> - An ongoing operation is being cancelled.
    ///                     Cancellation does not roll back any replacements that have already been
    ///                     completed, but it prevents new replacements from being started. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Cancelled</code> - The operation is cancelled. </p>
    ///             </li>
    ///          </ul>
    public let status: InstanceRefreshStatus?
    /// <p>Provides more details about the current status of the instance refresh. </p>
    public let statusReason: String?

    public init (
        autoScalingGroupName: String? = nil,
        endTime: Date? = nil,
        instanceRefreshId: String? = nil,
        instancesToUpdate: Int? = nil,
        percentageComplete: Int? = nil,
        progressDetails: InstanceRefreshProgressDetails? = nil,
        startTime: Date? = nil,
        status: InstanceRefreshStatus? = nil,
        statusReason: String? = nil
    )
    {
        self.autoScalingGroupName = autoScalingGroupName
        self.endTime = endTime
        self.instanceRefreshId = instanceRefreshId
        self.instancesToUpdate = instancesToUpdate
        self.percentageComplete = percentageComplete
        self.progressDetails = progressDetails
        self.startTime = startTime
        self.status = status
        self.statusReason = statusReason
    }
}
