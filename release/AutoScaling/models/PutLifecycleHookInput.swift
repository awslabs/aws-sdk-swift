// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutLifecycleHookInput: Equatable {
    /// <p>The name of the Auto Scaling group.</p>
    public let autoScalingGroupName: String?
    /// <p>Defines the action the Auto Scaling group should take when the lifecycle hook timeout elapses
    ///             or if an unexpected failure occurs. This parameter can be either <code>CONTINUE</code>
    ///             or <code>ABANDON</code>. The default value is <code>ABANDON</code>.</p>
    public let defaultResult: String?
    /// <p>The maximum time, in seconds, that can elapse before the lifecycle hook times out. The
    ///             range is from <code>30</code> to <code>7200</code> seconds. The default value is
    ///                 <code>3600</code> seconds (1 hour).</p>
    ///         <p>If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in
    ///             the <code>DefaultResult</code> parameter. You can prevent the lifecycle hook from timing
    ///             out by calling the <a>RecordLifecycleActionHeartbeat</a> API.</p>
    public let heartbeatTimeout: Int?
    /// <p>The name of the lifecycle hook.</p>
    public let lifecycleHookName: String?
    /// <p>The instance state to which you want to attach the lifecycle hook. The valid values
    ///             are:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>autoscaling:EC2_INSTANCE_LAUNCHING</p>
    ///             </li>
    ///             <li>
    ///                 <p>autoscaling:EC2_INSTANCE_TERMINATING</p>
    ///             </li>
    ///          </ul>
    ///         <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>
    public let lifecycleTransition: String?
    /// <p>Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to
    ///             the notification target.</p>
    public let notificationMetadata: String?
    /// <p>The ARN of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance
    ///             is in the transition state for the lifecycle hook. This target can be either an SQS
    ///             queue or an SNS topic.</p>
    ///         <p>If you specify an empty string, this overrides the current ARN.</p>
    ///         <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue,
    ///             and an email key-value pair format when sending notifications to an Amazon SNS
    ///             topic.</p>
    ///         <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test
    ///             messages contain the following additional key-value pair: <code>"Event":
    ///                 "autoscaling:TEST_NOTIFICATION"</code>.</p>
    public let notificationTargetARN: String?
    /// <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified
    ///             notification target, for example, an Amazon SNS topic or an Amazon SQS queue.</p>
    ///         <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>
    public let roleARN: String?

    public init (
        autoScalingGroupName: String? = nil,
        defaultResult: String? = nil,
        heartbeatTimeout: Int? = nil,
        lifecycleHookName: String? = nil,
        lifecycleTransition: String? = nil,
        notificationMetadata: String? = nil,
        notificationTargetARN: String? = nil,
        roleARN: String? = nil
    )
    {
        self.autoScalingGroupName = autoScalingGroupName
        self.defaultResult = defaultResult
        self.heartbeatTimeout = heartbeatTimeout
        self.lifecycleHookName = lifecycleHookName
        self.lifecycleTransition = lifecycleTransition
        self.notificationMetadata = notificationMetadata
        self.notificationTargetARN = notificationTargetARN
        self.roleARN = roleARN
    }
}
