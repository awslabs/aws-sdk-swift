// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteScheduledActionOutputBody: Equatable {
    public let failedScheduledActions: [FailedScheduledUpdateGroupActionRequest]?
}

extension BatchDeleteScheduledActionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedScheduledActions = "FailedScheduledActions"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("BatchDeleteScheduledActionResult"))
        if containerValues.contains(.failedScheduledActions) {
            struct KeyVal0{struct member{}}
            let failedScheduledActionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .failedScheduledActions)
            if let failedScheduledActionsWrappedContainer = failedScheduledActionsWrappedContainer {
                let failedScheduledActionsContainer = try failedScheduledActionsWrappedContainer.decodeIfPresent([FailedScheduledUpdateGroupActionRequest].self, forKey: .member)
                var failedScheduledActionsBuffer:[FailedScheduledUpdateGroupActionRequest]? = nil
                if let failedScheduledActionsContainer = failedScheduledActionsContainer {
                    failedScheduledActionsBuffer = [FailedScheduledUpdateGroupActionRequest]()
                    for structureContainer0 in failedScheduledActionsContainer {
                        failedScheduledActionsBuffer?.append(structureContainer0)
                    }
                }
                failedScheduledActions = failedScheduledActionsBuffer
            } else {
                failedScheduledActions = []
            }
        } else {
            failedScheduledActions = nil
        }
    }
}
