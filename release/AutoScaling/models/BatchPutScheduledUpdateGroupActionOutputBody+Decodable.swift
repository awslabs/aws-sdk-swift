// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchPutScheduledUpdateGroupActionOutputBody: Equatable {
    public let failedScheduledUpdateGroupActions: [FailedScheduledUpdateGroupActionRequest]?
}

extension BatchPutScheduledUpdateGroupActionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failedScheduledUpdateGroupActions = "FailedScheduledUpdateGroupActions"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("BatchPutScheduledUpdateGroupActionResult"))
        if containerValues.contains(.failedScheduledUpdateGroupActions) {
            struct KeyVal0{struct member{}}
            let failedScheduledUpdateGroupActionsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.member>.CodingKeys.self, forKey: .failedScheduledUpdateGroupActions)
            if let failedScheduledUpdateGroupActionsWrappedContainer = failedScheduledUpdateGroupActionsWrappedContainer {
                let failedScheduledUpdateGroupActionsContainer = try failedScheduledUpdateGroupActionsWrappedContainer.decodeIfPresent([FailedScheduledUpdateGroupActionRequest].self, forKey: .member)
                var failedScheduledUpdateGroupActionsBuffer:[FailedScheduledUpdateGroupActionRequest]? = nil
                if let failedScheduledUpdateGroupActionsContainer = failedScheduledUpdateGroupActionsContainer {
                    failedScheduledUpdateGroupActionsBuffer = [FailedScheduledUpdateGroupActionRequest]()
                    for structureContainer0 in failedScheduledUpdateGroupActionsContainer {
                        failedScheduledUpdateGroupActionsBuffer?.append(structureContainer0)
                    }
                }
                failedScheduledUpdateGroupActions = failedScheduledUpdateGroupActionsBuffer
            } else {
                failedScheduledUpdateGroupActions = []
            }
        } else {
            failedScheduledUpdateGroupActions = nil
        }
    }
}
