// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PredefinedMetricPairType {
    case albrequestcount
    case asgcpuutilization
    case asgnetworkin
    case asgnetworkout
    case sdkUnknown(String)
}

extension PredefinedMetricPairType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PredefinedMetricPairType] {
        return [
            .albrequestcount,
            .asgcpuutilization,
            .asgnetworkin,
            .asgnetworkout,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .albrequestcount: return "ALBRequestCount"
        case .asgcpuutilization: return "ASGCPUUtilization"
        case .asgnetworkin: return "ASGNetworkIn"
        case .asgnetworkout: return "ASGNetworkOut"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PredefinedMetricPairType(rawValue: rawValue) ?? PredefinedMetricPairType.sdkUnknown(rawValue)
    }
}
