// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>AWS IoT Wireless API documentation</p>
public protocol IotWirelessClientProtocol {
    /// <p>Associates a partner account with your AWS account.</p>
    func associateAwsAccountWithPartnerAccount(input: AssociateAwsAccountWithPartnerAccountInput, completion: @escaping (SdkResult<AssociateAwsAccountWithPartnerAccountOutputResponse, AssociateAwsAccountWithPartnerAccountOutputError>) -> Void)
    /// <p>Associates a wireless device with a thing.</p>
    func associateWirelessDeviceWithThing(input: AssociateWirelessDeviceWithThingInput, completion: @escaping (SdkResult<AssociateWirelessDeviceWithThingOutputResponse, AssociateWirelessDeviceWithThingOutputError>) -> Void)
    /// <p>Associates a wireless gateway with a certificate.</p>
    func associateWirelessGatewayWithCertificate(input: AssociateWirelessGatewayWithCertificateInput, completion: @escaping (SdkResult<AssociateWirelessGatewayWithCertificateOutputResponse, AssociateWirelessGatewayWithCertificateOutputError>) -> Void)
    /// <p>Associates a wireless gateway with a thing.</p>
    func associateWirelessGatewayWithThing(input: AssociateWirelessGatewayWithThingInput, completion: @escaping (SdkResult<AssociateWirelessGatewayWithThingOutputResponse, AssociateWirelessGatewayWithThingOutputError>) -> Void)
    /// <p>Creates a new destination that maps a device message to an AWS IoT rule.</p>
    func createDestination(input: CreateDestinationInput, completion: @escaping (SdkResult<CreateDestinationOutputResponse, CreateDestinationOutputError>) -> Void)
    /// <p>Creates a new device profile.</p>
    func createDeviceProfile(input: CreateDeviceProfileInput, completion: @escaping (SdkResult<CreateDeviceProfileOutputResponse, CreateDeviceProfileOutputError>) -> Void)
    /// <p>Creates a new service profile.</p>
    func createServiceProfile(input: CreateServiceProfileInput, completion: @escaping (SdkResult<CreateServiceProfileOutputResponse, CreateServiceProfileOutputError>) -> Void)
    /// <p>Provisions a wireless device.</p>
    func createWirelessDevice(input: CreateWirelessDeviceInput, completion: @escaping (SdkResult<CreateWirelessDeviceOutputResponse, CreateWirelessDeviceOutputError>) -> Void)
    /// <p>Provisions a wireless gateway.</p>
    func createWirelessGateway(input: CreateWirelessGatewayInput, completion: @escaping (SdkResult<CreateWirelessGatewayOutputResponse, CreateWirelessGatewayOutputError>) -> Void)
    /// <p>Creates a task for a wireless gateway.</p>
    func createWirelessGatewayTask(input: CreateWirelessGatewayTaskInput, completion: @escaping (SdkResult<CreateWirelessGatewayTaskOutputResponse, CreateWirelessGatewayTaskOutputError>) -> Void)
    /// <p>Creates a gateway task definition.</p>
    func createWirelessGatewayTaskDefinition(input: CreateWirelessGatewayTaskDefinitionInput, completion: @escaping (SdkResult<CreateWirelessGatewayTaskDefinitionOutputResponse, CreateWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// <p>Deletes a destination.</p>
    func deleteDestination(input: DeleteDestinationInput, completion: @escaping (SdkResult<DeleteDestinationOutputResponse, DeleteDestinationOutputError>) -> Void)
    /// <p>Deletes a device profile.</p>
    func deleteDeviceProfile(input: DeleteDeviceProfileInput, completion: @escaping (SdkResult<DeleteDeviceProfileOutputResponse, DeleteDeviceProfileOutputError>) -> Void)
    /// <p>Deletes a service profile.</p>
    func deleteServiceProfile(input: DeleteServiceProfileInput, completion: @escaping (SdkResult<DeleteServiceProfileOutputResponse, DeleteServiceProfileOutputError>) -> Void)
    /// <p>Deletes a wireless device.</p>
    func deleteWirelessDevice(input: DeleteWirelessDeviceInput, completion: @escaping (SdkResult<DeleteWirelessDeviceOutputResponse, DeleteWirelessDeviceOutputError>) -> Void)
    /// <p>Deletes a wireless gateway.</p>
    func deleteWirelessGateway(input: DeleteWirelessGatewayInput, completion: @escaping (SdkResult<DeleteWirelessGatewayOutputResponse, DeleteWirelessGatewayOutputError>) -> Void)
    /// <p>Deletes a wireless gateway task.</p>
    func deleteWirelessGatewayTask(input: DeleteWirelessGatewayTaskInput, completion: @escaping (SdkResult<DeleteWirelessGatewayTaskOutputResponse, DeleteWirelessGatewayTaskOutputError>) -> Void)
    /// <p>Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.</p>
    func deleteWirelessGatewayTaskDefinition(input: DeleteWirelessGatewayTaskDefinitionInput, completion: @escaping (SdkResult<DeleteWirelessGatewayTaskDefinitionOutputResponse, DeleteWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// <p>Disassociates your AWS account from a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, disassociates your AWS account from all partner accounts.</p>
    func disassociateAwsAccountFromPartnerAccount(input: DisassociateAwsAccountFromPartnerAccountInput, completion: @escaping (SdkResult<DisassociateAwsAccountFromPartnerAccountOutputResponse, DisassociateAwsAccountFromPartnerAccountOutputError>) -> Void)
    /// <p>Disassociates a wireless device from its currently associated thing.</p>
    func disassociateWirelessDeviceFromThing(input: DisassociateWirelessDeviceFromThingInput, completion: @escaping (SdkResult<DisassociateWirelessDeviceFromThingOutputResponse, DisassociateWirelessDeviceFromThingOutputError>) -> Void)
    /// <p>Disassociates a wireless gateway from its currently associated certificate.</p>
    func disassociateWirelessGatewayFromCertificate(input: DisassociateWirelessGatewayFromCertificateInput, completion: @escaping (SdkResult<DisassociateWirelessGatewayFromCertificateOutputResponse, DisassociateWirelessGatewayFromCertificateOutputError>) -> Void)
    /// <p>Disassociates a wireless gateway from its currently associated thing.</p>
    func disassociateWirelessGatewayFromThing(input: DisassociateWirelessGatewayFromThingInput, completion: @escaping (SdkResult<DisassociateWirelessGatewayFromThingOutputResponse, DisassociateWirelessGatewayFromThingOutputError>) -> Void)
    /// <p>Gets information about a destination.</p>
    func getDestination(input: GetDestinationInput, completion: @escaping (SdkResult<GetDestinationOutputResponse, GetDestinationOutputError>) -> Void)
    /// <p>Gets information about a device profile.</p>
    func getDeviceProfile(input: GetDeviceProfileInput, completion: @escaping (SdkResult<GetDeviceProfileOutputResponse, GetDeviceProfileOutputError>) -> Void)
    /// <p>Returns current default log-levels, or log levels by resource types, could be for wireless device log options or wireless gateway log options.</p>
    func getLogLevelsByResourceTypes(input: GetLogLevelsByResourceTypesInput, completion: @escaping (SdkResult<GetLogLevelsByResourceTypesOutputResponse, GetLogLevelsByResourceTypesOutputError>) -> Void)
    /// <p>Gets information about a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, returns all partner accounts.</p>
    func getPartnerAccount(input: GetPartnerAccountInput, completion: @escaping (SdkResult<GetPartnerAccountOutputResponse, GetPartnerAccountOutputError>) -> Void)
    /// <p>Fetches the log-level override if any for a given resource-ID and resource-type, coulde be a wireless device or a wireless gateway.</p>
    func getResourceLogLevel(input: GetResourceLogLevelInput, completion: @escaping (SdkResult<GetResourceLogLevelOutputResponse, GetResourceLogLevelOutputError>) -> Void)
    /// <p>Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.</p>
    func getServiceEndpoint(input: GetServiceEndpointInput, completion: @escaping (SdkResult<GetServiceEndpointOutputResponse, GetServiceEndpointOutputError>) -> Void)
    /// <p>Gets information about a service profile.</p>
    func getServiceProfile(input: GetServiceProfileInput, completion: @escaping (SdkResult<GetServiceProfileOutputResponse, GetServiceProfileOutputError>) -> Void)
    /// <p>Gets information about a wireless device.</p>
    func getWirelessDevice(input: GetWirelessDeviceInput, completion: @escaping (SdkResult<GetWirelessDeviceOutputResponse, GetWirelessDeviceOutputError>) -> Void)
    /// <p>Gets operating information about a wireless device.</p>
    func getWirelessDeviceStatistics(input: GetWirelessDeviceStatisticsInput, completion: @escaping (SdkResult<GetWirelessDeviceStatisticsOutputResponse, GetWirelessDeviceStatisticsOutputError>) -> Void)
    /// <p>Gets information about a wireless gateway.</p>
    func getWirelessGateway(input: GetWirelessGatewayInput, completion: @escaping (SdkResult<GetWirelessGatewayOutputResponse, GetWirelessGatewayOutputError>) -> Void)
    /// <p>Gets the ID of the certificate that is currently associated with a wireless gateway.</p>
    func getWirelessGatewayCertificate(input: GetWirelessGatewayCertificateInput, completion: @escaping (SdkResult<GetWirelessGatewayCertificateOutputResponse, GetWirelessGatewayCertificateOutputError>) -> Void)
    /// <p>Gets the firmware version and other information about a wireless gateway.</p>
    func getWirelessGatewayFirmwareInformation(input: GetWirelessGatewayFirmwareInformationInput, completion: @escaping (SdkResult<GetWirelessGatewayFirmwareInformationOutputResponse, GetWirelessGatewayFirmwareInformationOutputError>) -> Void)
    /// <p>Gets operating information about a wireless gateway.</p>
    func getWirelessGatewayStatistics(input: GetWirelessGatewayStatisticsInput, completion: @escaping (SdkResult<GetWirelessGatewayStatisticsOutputResponse, GetWirelessGatewayStatisticsOutputError>) -> Void)
    /// <p>Gets information about a wireless gateway task.</p>
    func getWirelessGatewayTask(input: GetWirelessGatewayTaskInput, completion: @escaping (SdkResult<GetWirelessGatewayTaskOutputResponse, GetWirelessGatewayTaskOutputError>) -> Void)
    /// <p>Gets information about a wireless gateway task definition.</p>
    func getWirelessGatewayTaskDefinition(input: GetWirelessGatewayTaskDefinitionInput, completion: @escaping (SdkResult<GetWirelessGatewayTaskDefinitionOutputResponse, GetWirelessGatewayTaskDefinitionOutputError>) -> Void)
    /// <p>Lists the destinations registered to your AWS account.</p>
    func listDestinations(input: ListDestinationsInput, completion: @escaping (SdkResult<ListDestinationsOutputResponse, ListDestinationsOutputError>) -> Void)
    /// <p>Lists the device profiles registered to your AWS account.</p>
    func listDeviceProfiles(input: ListDeviceProfilesInput, completion: @escaping (SdkResult<ListDeviceProfilesOutputResponse, ListDeviceProfilesOutputError>) -> Void)
    /// <p>Lists the partner accounts associated with your AWS account.</p>
    func listPartnerAccounts(input: ListPartnerAccountsInput, completion: @escaping (SdkResult<ListPartnerAccountsOutputResponse, ListPartnerAccountsOutputError>) -> Void)
    /// <p>Lists the service profiles registered to your AWS account.</p>
    func listServiceProfiles(input: ListServiceProfilesInput, completion: @escaping (SdkResult<ListServiceProfilesOutputResponse, ListServiceProfilesOutputError>) -> Void)
    /// <p>Lists the tags (metadata) you have assigned to the resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Lists the wireless devices registered to your AWS account.</p>
    func listWirelessDevices(input: ListWirelessDevicesInput, completion: @escaping (SdkResult<ListWirelessDevicesOutputResponse, ListWirelessDevicesOutputError>) -> Void)
    /// <p>Lists the wireless gateways registered to your AWS account.</p>
    func listWirelessGateways(input: ListWirelessGatewaysInput, completion: @escaping (SdkResult<ListWirelessGatewaysOutputResponse, ListWirelessGatewaysOutputError>) -> Void)
    /// <p>List the wireless gateway tasks definitions registered to your AWS account.</p>
    func listWirelessGatewayTaskDefinitions(input: ListWirelessGatewayTaskDefinitionsInput, completion: @escaping (SdkResult<ListWirelessGatewayTaskDefinitionsOutputResponse, ListWirelessGatewayTaskDefinitionsOutputError>) -> Void)
    /// <p>Sets the log-level override for a resource-ID and resource-type, could be a wireless gateway or a wireless device.</p>
    func putResourceLogLevel(input: PutResourceLogLevelInput, completion: @escaping (SdkResult<PutResourceLogLevelOutputResponse, PutResourceLogLevelOutputError>) -> Void)
    /// <p>Remove log-level overrides if any for all resources (both wireless devices and wireless gateways).</p>
    func resetAllResourceLogLevels(input: ResetAllResourceLogLevelsInput, completion: @escaping (SdkResult<ResetAllResourceLogLevelsOutputResponse, ResetAllResourceLogLevelsOutputError>) -> Void)
    /// <p>Remove log-level override if any for a specific resource-ID and resource-type, could be a wireless device or a wireless gateway.</p>
    func resetResourceLogLevel(input: ResetResourceLogLevelInput, completion: @escaping (SdkResult<ResetResourceLogLevelOutputResponse, ResetResourceLogLevelOutputError>) -> Void)
    /// <p>Sends a decrypted application data frame to a device.</p>
    func sendDataToWirelessDevice(input: SendDataToWirelessDeviceInput, completion: @escaping (SdkResult<SendDataToWirelessDeviceOutputResponse, SendDataToWirelessDeviceOutputError>) -> Void)
    /// <p>Adds a tag to a resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Simulates a provisioned device by sending an uplink data payload of <code>Hello</code>.</p>
    func testWirelessDevice(input: TestWirelessDeviceInput, completion: @escaping (SdkResult<TestWirelessDeviceOutputResponse, TestWirelessDeviceOutputError>) -> Void)
    /// <p>Removes one or more tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates properties of a destination.</p>
    func updateDestination(input: UpdateDestinationInput, completion: @escaping (SdkResult<UpdateDestinationOutputResponse, UpdateDestinationOutputError>) -> Void)
    /// <p>Set default log level, or log levels by resource types, could be for wireless device log options or wireless gateways log options. This is to control the log messages that will be displayed in CloudWatch.</p>
    func updateLogLevelsByResourceTypes(input: UpdateLogLevelsByResourceTypesInput, completion: @escaping (SdkResult<UpdateLogLevelsByResourceTypesOutputResponse, UpdateLogLevelsByResourceTypesOutputError>) -> Void)
    /// <p>Updates properties of a partner account.</p>
    func updatePartnerAccount(input: UpdatePartnerAccountInput, completion: @escaping (SdkResult<UpdatePartnerAccountOutputResponse, UpdatePartnerAccountOutputError>) -> Void)
    /// <p>Updates properties of a wireless device.</p>
    func updateWirelessDevice(input: UpdateWirelessDeviceInput, completion: @escaping (SdkResult<UpdateWirelessDeviceOutputResponse, UpdateWirelessDeviceOutputError>) -> Void)
    /// <p>Updates properties of a wireless gateway.</p>
    func updateWirelessGateway(input: UpdateWirelessGatewayInput, completion: @escaping (SdkResult<UpdateWirelessGatewayOutputResponse, UpdateWirelessGatewayOutputError>) -> Void)
}
