// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Sidewalk device status notification.</p>
public enum Event {
    case ack
    case discovered
    case lost
    case nack
    case passthrough
    case sdkUnknown(String)
}

extension Event : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Event] {
        return [
            .ack,
            .discovered,
            .lost,
            .nack,
            .passthrough,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ack: return "ack"
        case .discovered: return "discovered"
        case .lost: return "lost"
        case .nack: return "nack"
        case .passthrough: return "passthrough"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Event(rawValue: rawValue) ?? Event.sdkUnknown(rawValue)
    }
}
