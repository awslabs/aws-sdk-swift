// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendDataToWirelessDeviceInputBody: Equatable {
    public let transmitMode: Int?
    public let payloadData: String?
    public let wirelessMetadata: WirelessMetadata?
}

extension SendDataToWirelessDeviceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case payloadData = "PayloadData"
        case transmitMode = "TransmitMode"
        case wirelessMetadata = "WirelessMetadata"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transmitModeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .transmitMode)
        transmitMode = transmitModeDecoded
        let payloadDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .payloadData)
        payloadData = payloadDataDecoded
        let wirelessMetadataDecoded = try containerValues.decodeIfPresent(WirelessMetadata.self, forKey: .wirelessMetadata)
        wirelessMetadata = wirelessMetadataDecoded
    }
}
