// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLogLevelsByResourceTypesInputBody: Equatable {
    public let defaultLogLevel: LogLevel?
    public let wirelessDeviceLogOptions: [WirelessDeviceLogOption]?
    public let wirelessGatewayLogOptions: [WirelessGatewayLogOption]?
}

extension UpdateLogLevelsByResourceTypesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case defaultLogLevel = "DefaultLogLevel"
        case wirelessDeviceLogOptions = "WirelessDeviceLogOptions"
        case wirelessGatewayLogOptions = "WirelessGatewayLogOptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultLogLevelDecoded = try containerValues.decodeIfPresent(LogLevel.self, forKey: .defaultLogLevel)
        defaultLogLevel = defaultLogLevelDecoded
        let wirelessDeviceLogOptionsContainer = try containerValues.decodeIfPresent([WirelessDeviceLogOption].self, forKey: .wirelessDeviceLogOptions)
        var wirelessDeviceLogOptionsDecoded0:[WirelessDeviceLogOption]? = nil
        if let wirelessDeviceLogOptionsContainer = wirelessDeviceLogOptionsContainer {
            wirelessDeviceLogOptionsDecoded0 = [WirelessDeviceLogOption]()
            for structure0 in wirelessDeviceLogOptionsContainer {
                wirelessDeviceLogOptionsDecoded0?.append(structure0)
            }
        }
        wirelessDeviceLogOptions = wirelessDeviceLogOptionsDecoded0
        let wirelessGatewayLogOptionsContainer = try containerValues.decodeIfPresent([WirelessGatewayLogOption].self, forKey: .wirelessGatewayLogOptions)
        var wirelessGatewayLogOptionsDecoded0:[WirelessGatewayLogOption]? = nil
        if let wirelessGatewayLogOptionsContainer = wirelessGatewayLogOptionsContainer {
            wirelessGatewayLogOptionsDecoded0 = [WirelessGatewayLogOption]()
            for structure0 in wirelessGatewayLogOptionsContainer {
                wirelessGatewayLogOptionsDecoded0?.append(structure0)
            }
        }
        wirelessGatewayLogOptions = wirelessGatewayLogOptionsDecoded0
    }
}
