// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AbpV1_0_x: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case devAddr = "DevAddr"
        case sessionKeys = "SessionKeys"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let devAddr = devAddr {
            try encodeContainer.encode(devAddr, forKey: .devAddr)
        }
        if let sessionKeys = sessionKeys {
            try encodeContainer.encode(sessionKeys, forKey: .sessionKeys)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devAddrDecoded = try containerValues.decodeIfPresent(String.self, forKey: .devAddr)
        devAddr = devAddrDecoded
        let sessionKeysDecoded = try containerValues.decodeIfPresent(SessionKeysAbpV1_0_x.self, forKey: .sessionKeys)
        sessionKeys = sessionKeysDecoded
    }
}
