// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LoRaWANGatewayMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case gatewayEui = "GatewayEui"
        case rssi = "Rssi"
        case snr = "Snr"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let gatewayEui = gatewayEui {
            try encodeContainer.encode(gatewayEui, forKey: .gatewayEui)
        }
        if let rssi = rssi {
            try encodeContainer.encode(rssi, forKey: .rssi)
        }
        if let snr = snr {
            try encodeContainer.encode(snr, forKey: .snr)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayEuiDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayEui)
        gatewayEui = gatewayEuiDecoded
        let snrDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .snr)
        snr = snrDecoded
        let rssiDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .rssi)
        rssi = rssiDecoded
    }
}
