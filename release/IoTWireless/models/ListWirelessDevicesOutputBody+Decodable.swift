// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWirelessDevicesOutputBody: Equatable {
    public let nextToken: String?
    public let wirelessDeviceList: [WirelessDeviceStatistics]?
}

extension ListWirelessDevicesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case wirelessDeviceList = "WirelessDeviceList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let wirelessDeviceListContainer = try containerValues.decodeIfPresent([WirelessDeviceStatistics].self, forKey: .wirelessDeviceList)
        var wirelessDeviceListDecoded0:[WirelessDeviceStatistics]? = nil
        if let wirelessDeviceListContainer = wirelessDeviceListContainer {
            wirelessDeviceListDecoded0 = [WirelessDeviceStatistics]()
            for structure0 in wirelessDeviceListContainer {
                wirelessDeviceListDecoded0?.append(structure0)
            }
        }
        wirelessDeviceList = wirelessDeviceListDecoded0
    }
}
