// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerAccountsOutputBody: Equatable {
    public let nextToken: String?
    public let sidewalk: [SidewalkAccountInfoWithFingerprint]?
}

extension ListPartnerAccountsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case sidewalk = "Sidewalk"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sidewalkContainer = try containerValues.decodeIfPresent([SidewalkAccountInfoWithFingerprint].self, forKey: .sidewalk)
        var sidewalkDecoded0:[SidewalkAccountInfoWithFingerprint]? = nil
        if let sidewalkContainer = sidewalkContainer {
            sidewalkDecoded0 = [SidewalkAccountInfoWithFingerprint]()
            for structure0 in sidewalkContainer {
                sidewalkDecoded0?.append(structure0)
            }
        }
        sidewalk = sidewalkDecoded0
    }
}
