// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeviceProfilesOutputBody: Equatable {
    public let nextToken: String?
    public let deviceProfileList: [DeviceProfile]?
}

extension ListDeviceProfilesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceProfileList = "DeviceProfileList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let deviceProfileListContainer = try containerValues.decodeIfPresent([DeviceProfile].self, forKey: .deviceProfileList)
        var deviceProfileListDecoded0:[DeviceProfile]? = nil
        if let deviceProfileListContainer = deviceProfileListContainer {
            deviceProfileListDecoded0 = [DeviceProfile]()
            for structure0 in deviceProfileListContainer {
                deviceProfileListDecoded0?.append(structure0)
            }
        }
        deviceProfileList = deviceProfileListDecoded0
    }
}
