// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetServiceEndpointInputQueryItemMiddleware: Middleware {
    public let id: String = "GetServiceEndpointInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetServiceEndpointInput>,
                  next: H) -> Swift.Result<OperationOutput<GetServiceEndpointOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let serviceType = input.operationInput.serviceType {
            let serviceTypeQueryItem = URLQueryItem(name: "serviceType".urlPercentEncoding(), value: String(serviceType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(serviceTypeQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetServiceEndpointInput>
    public typealias MOutput = OperationOutput<GetServiceEndpointOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetServiceEndpointOutputError>
}
