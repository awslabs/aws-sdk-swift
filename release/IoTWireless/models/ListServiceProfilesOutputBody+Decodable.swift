// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServiceProfilesOutputBody: Equatable {
    public let nextToken: String?
    public let serviceProfileList: [ServiceProfile]?
}

extension ListServiceProfilesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case serviceProfileList = "ServiceProfileList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let serviceProfileListContainer = try containerValues.decodeIfPresent([ServiceProfile].self, forKey: .serviceProfileList)
        var serviceProfileListDecoded0:[ServiceProfile]? = nil
        if let serviceProfileListContainer = serviceProfileListContainer {
            serviceProfileListDecoded0 = [ServiceProfile]()
            for structure0 in serviceProfileListContainer {
                serviceProfileListDecoded0?.append(structure0)
            }
        }
        serviceProfileList = serviceProfileListDecoded0
    }
}
