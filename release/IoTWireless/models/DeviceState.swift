// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Device state defines the device status of sidewalk device.</p>
public enum DeviceState {
    case provisioned
    case registerednotseen
    case registeredreachable
    case registeredunreachable
    case sdkUnknown(String)
}

extension DeviceState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeviceState] {
        return [
            .provisioned,
            .registerednotseen,
            .registeredreachable,
            .registeredunreachable,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .provisioned: return "Provisioned"
        case .registerednotseen: return "RegisteredNotSeen"
        case .registeredreachable: return "RegisteredReachable"
        case .registeredunreachable: return "RegisteredUnreachable"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeviceState(rawValue: rawValue) ?? DeviceState.sdkUnknown(rawValue)
    }
}
