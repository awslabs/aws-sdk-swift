// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LoRaWANGatewayVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case model = "Model"
        case packageVersion = "PackageVersion"
        case station = "Station"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let model = model {
            try encodeContainer.encode(model, forKey: .model)
        }
        if let packageVersion = packageVersion {
            try encodeContainer.encode(packageVersion, forKey: .packageVersion)
        }
        if let station = station {
            try encodeContainer.encode(station, forKey: .station)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packageVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .packageVersion)
        packageVersion = packageVersionDecoded
        let modelDecoded = try containerValues.decodeIfPresent(String.self, forKey: .model)
        model = modelDecoded
        let stationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .station)
        station = stationDecoded
    }
}
