// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MxfSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case afdSignaling = "afdSignaling"
        case profile = "profile"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afdSignaling = afdSignaling {
            try encodeContainer.encode(afdSignaling.rawValue, forKey: .afdSignaling)
        }
        if let profile = profile {
            try encodeContainer.encode(profile.rawValue, forKey: .profile)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let afdSignalingDecoded = try containerValues.decodeIfPresent(MxfAfdSignaling.self, forKey: .afdSignaling)
        afdSignaling = afdSignalingDecoded
        let profileDecoded = try containerValues.decodeIfPresent(MxfProfile.self, forKey: .profile)
        profile = profileDecoded
    }
}
