// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// When set to SINGLE_FILE, emits program as a single media resource (.ts) file, uses #EXT-X-BYTERANGE tags to index segment for playback.
public enum HlsSegmentControl {
    case segmentedFiles
    case singleFile
    case sdkUnknown(String)
}

extension HlsSegmentControl : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HlsSegmentControl] {
        return [
            .segmentedFiles,
            .singleFile,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .segmentedFiles: return "SEGMENTED_FILES"
        case .singleFile: return "SINGLE_FILE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HlsSegmentControl(rawValue: rawValue) ?? HlsSegmentControl.sdkUnknown(rawValue)
    }
}
