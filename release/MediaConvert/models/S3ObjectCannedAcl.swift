// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Choose an Amazon S3 canned ACL for MediaConvert to apply to this output.
public enum S3ObjectCannedAcl {
    case authenticatedRead
    case bucketOwnerFullControl
    case bucketOwnerRead
    case publicRead
    case sdkUnknown(String)
}

extension S3ObjectCannedAcl : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [S3ObjectCannedAcl] {
        return [
            .authenticatedRead,
            .bucketOwnerFullControl,
            .bucketOwnerRead,
            .publicRead,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .authenticatedRead: return "AUTHENTICATED_READ"
        case .bucketOwnerFullControl: return "BUCKET_OWNER_FULL_CONTROL"
        case .bucketOwnerRead: return "BUCKET_OWNER_READ"
        case .publicRead: return "PUBLIC_READ"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = S3ObjectCannedAcl(rawValue: rawValue) ?? S3ObjectCannedAcl.sdkUnknown(rawValue)
    }
}
