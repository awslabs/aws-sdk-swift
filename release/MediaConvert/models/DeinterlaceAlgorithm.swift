// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Only applies when you set Deinterlacer (DeinterlaceMode) to Deinterlace (DEINTERLACE) or Adaptive (ADAPTIVE). Motion adaptive interpolate (INTERPOLATE) produces sharper pictures, while blend (BLEND) produces smoother motion. Use (INTERPOLATE_TICKER) OR (BLEND_TICKER) if your source file includes a ticker, such as a scrolling headline at the bottom of the frame.
public enum DeinterlaceAlgorithm {
    case blend
    case blendTicker
    case interpolate
    case interpolateTicker
    case sdkUnknown(String)
}

extension DeinterlaceAlgorithm : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeinterlaceAlgorithm] {
        return [
            .blend,
            .blendTicker,
            .interpolate,
            .interpolateTicker,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .blend: return "BLEND"
        case .blendTicker: return "BLEND_TICKER"
        case .interpolate: return "INTERPOLATE"
        case .interpolateTicker: return "INTERPOLATE_TICKER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeinterlaceAlgorithm(rawValue: rawValue) ?? DeinterlaceAlgorithm.sdkUnknown(rawValue)
    }
}
