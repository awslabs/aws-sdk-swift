// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FileGroupSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destination = "destination"
        case destinationSettings = "destinationSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let destinationSettings = destinationSettings {
            try encodeContainer.encode(destinationSettings, forKey: .destinationSettings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destination)
        destination = destinationDecoded
        let destinationSettingsDecoded = try containerValues.decodeIfPresent(DestinationSettings.self, forKey: .destinationSettings)
        destinationSettings = destinationSettingsDecoded
    }
}
