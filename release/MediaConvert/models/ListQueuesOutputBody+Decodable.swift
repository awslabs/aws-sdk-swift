// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQueuesOutputBody: Equatable {
    public let nextToken: String?
    public let queues: [Queue]?
}

extension ListQueuesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case queues = "queues"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let queuesContainer = try containerValues.decodeIfPresent([Queue].self, forKey: .queues)
        var queuesDecoded0:[Queue]? = nil
        if let queuesContainer = queuesContainer {
            queuesDecoded0 = [Queue]()
            for structure0 in queuesContainer {
                queuesDecoded0?.append(structure0)
            }
        }
        queues = queuesDecoded0
    }
}
