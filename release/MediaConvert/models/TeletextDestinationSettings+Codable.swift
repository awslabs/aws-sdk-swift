// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TeletextDestinationSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pageNumber = "pageNumber"
        case pageTypes = "pageTypes"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pageNumber = pageNumber {
            try encodeContainer.encode(pageNumber, forKey: .pageNumber)
        }
        if let pageTypes = pageTypes {
            var pageTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pageTypes)
            for __listofteletextpagetype0 in pageTypes {
                try pageTypesContainer.encode(__listofteletextpagetype0.rawValue)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pageNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pageNumber)
        pageNumber = pageNumberDecoded
        let pageTypesContainer = try containerValues.decodeIfPresent([TeletextPageType].self, forKey: .pageTypes)
        var pageTypesDecoded0:[TeletextPageType]? = nil
        if let pageTypesContainer = pageTypesContainer {
            pageTypesDecoded0 = [TeletextPageType]()
            for string0 in pageTypesContainer {
                pageTypesDecoded0?.append(string0)
            }
        }
        pageTypes = pageTypesDecoded0
    }
}
