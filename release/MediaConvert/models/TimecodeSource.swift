// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Use Source (TimecodeSource) to set how timecodes are handled within this job. To make sure that your video, audio, captions, and markers are synchronized and that time-based features, such as image inserter, work correctly, choose the Timecode source option that matches your assets. All timecodes are in a 24-hour format with frame number (HH:MM:SS:FF). * Embedded (EMBEDDED) - Use the timecode that is in the input video. If no embedded timecode is in the source, the service will use Start at 0 (ZEROBASED) instead. * Start at 0 (ZEROBASED) - Set the timecode of the initial frame to 00:00:00:00. * Specified Start (SPECIFIEDSTART) - Set the timecode of the initial frame to a value other than zero. You use Start timecode (Start) to provide this value.
public enum TimecodeSource {
    case embedded
    case specifiedstart
    case zerobased
    case sdkUnknown(String)
}

extension TimecodeSource : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TimecodeSource] {
        return [
            .embedded,
            .specifiedstart,
            .zerobased,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .embedded: return "EMBEDDED"
        case .specifiedstart: return "SPECIFIEDSTART"
        case .zerobased: return "ZEROBASED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TimecodeSource(rawValue: rawValue) ?? TimecodeSource.sdkUnknown(rawValue)
    }
}
