// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Use Noise reducer filter (NoiseReducerFilter) to select one of the following spatial image filtering functions. To use this setting, you must also enable Noise reducer (NoiseReducer). * Bilateral preserves edges while reducing noise. * Mean (softest), Gaussian, Lanczos, and Sharpen (sharpest) do convolution filtering. * Conserve does min/max noise reduction. * Spatial does frequency-domain filtering based on JND principles. * Temporal optimizes video quality for complex motion.
public enum NoiseReducerFilter {
    case bilateral
    case conserve
    case gaussian
    case lanczos
    case mean
    case sharpen
    case spatial
    case temporal
    case sdkUnknown(String)
}

extension NoiseReducerFilter : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NoiseReducerFilter] {
        return [
            .bilateral,
            .conserve,
            .gaussian,
            .lanczos,
            .mean,
            .sharpen,
            .spatial,
            .temporal,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bilateral: return "BILATERAL"
        case .conserve: return "CONSERVE"
        case .gaussian: return "GAUSSIAN"
        case .lanczos: return "LANCZOS"
        case .mean: return "MEAN"
        case .sharpen: return "SHARPEN"
        case .spatial: return "SPATIAL"
        case .temporal: return "TEMPORAL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NoiseReducerFilter(rawValue: rawValue) ?? NoiseReducerFilter.sdkUnknown(rawValue)
    }
}
