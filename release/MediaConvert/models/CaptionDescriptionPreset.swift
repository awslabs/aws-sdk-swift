// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Caption Description for preset
public struct CaptionDescriptionPreset: Equatable {
    /// Specify the language for this captions output track. For most captions output formats, the encoder puts this language information in the output captions metadata. If your output captions format is DVB-Sub or Burn in, the encoder uses this language information when automatically selecting the font script for rendering the captions text. For all outputs, you can use an ISO 639-2 or ISO 639-3 code. For streaming outputs, you can also use any other code in the full RFC-5646 specification. Streaming outputs are those that are in one of the following output groups: CMAF, DASH ISO, Apple HLS, or Microsoft Smooth Streaming.
    public let customLanguageCode: String?
    /// Settings related to one captions tab on the MediaConvert console. In your job JSON, an instance of captions DestinationSettings is equivalent to one captions tab in the console. Usually, one captions tab corresponds to one output captions track. Depending on your output captions format, one tab might correspond to a set of output captions tracks. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/including-captions.html.
    public let destinationSettings: CaptionDestinationSettings?
    /// Specify the language of this captions output track. For most captions output formats, the encoder puts this language information in the output captions metadata. If your output captions format is DVB-Sub or Burn in, the encoder uses this language information to choose the font language for rendering the captions text.
    public let languageCode: LanguageCode?
    /// Specify a label for this set of output captions. For example, "English", "Director commentary", or "track_2". For streaming outputs, MediaConvert passes this information into destination manifests for display on the end-viewer's player device. For outputs in other output groups, the service ignores this setting.
    public let languageDescription: String?

    public init (
        customLanguageCode: String? = nil,
        destinationSettings: CaptionDestinationSettings? = nil,
        languageCode: LanguageCode? = nil,
        languageDescription: String? = nil
    )
    {
        self.customLanguageCode = customLanguageCode
        self.destinationSettings = destinationSettings
        self.languageCode = languageCode
        self.languageDescription = languageDescription
    }
}
