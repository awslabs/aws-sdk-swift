// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateJobTemplateInput: Equatable {
    /// Accelerated transcoding can significantly speed up jobs with long, visually complex content. Outputs that use this feature incur pro-tier pricing. For information about feature limitations, see the AWS Elemental MediaConvert User Guide.
    public let accelerationSettings: AccelerationSettings?
    /// The new category for the job template, if you are changing it.
    public let category: String?
    /// The new description for the job template, if you are changing it.
    public let description: String?
    /// Optional list of hop destinations.
    public let hopDestinations: [HopDestination]?
    /// The name of the job template you are modifying
    public let name: String?
    /// Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0.
    public let priority: Int
    /// The new queue for the job template, if you are changing it.
    public let queue: String?
    /// JobTemplateSettings contains all the transcode settings saved in the template that will be applied to jobs created from it.
    public let settings: JobTemplateSettings?
    /// Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.
    public let statusUpdateInterval: StatusUpdateInterval?

    public init (
        accelerationSettings: AccelerationSettings? = nil,
        category: String? = nil,
        description: String? = nil,
        hopDestinations: [HopDestination]? = nil,
        name: String? = nil,
        priority: Int = 0,
        queue: String? = nil,
        settings: JobTemplateSettings? = nil,
        statusUpdateInterval: StatusUpdateInterval? = nil
    )
    {
        self.accelerationSettings = accelerationSettings
        self.category = category
        self.description = description
        self.hopDestinations = hopDestinations
        self.name = name
        self.priority = priority
        self.queue = queue
        self.settings = settings
        self.statusUpdateInterval = statusUpdateInterval
    }
}
