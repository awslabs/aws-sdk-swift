// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DvbNitSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case networkId = "networkId"
        case networkName = "networkName"
        case nitInterval = "nitInterval"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if networkId != 0 {
            try encodeContainer.encode(networkId, forKey: .networkId)
        }
        if let networkName = networkName {
            try encodeContainer.encode(networkName, forKey: .networkName)
        }
        if nitInterval != 0 {
            try encodeContainer.encode(nitInterval, forKey: .nitInterval)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let networkIdDecoded = try containerValues.decode(Int.self, forKey: .networkId)
        networkId = networkIdDecoded
        let networkNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .networkName)
        networkName = networkNameDecoded
        let nitIntervalDecoded = try containerValues.decode(Int.self, forKey: .nitInterval)
        nitInterval = nitIntervalDecoded
    }
}
