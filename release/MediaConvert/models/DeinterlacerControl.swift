// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// - When set to NORMAL (default), the deinterlacer does not convert frames that are tagged  in metadata as progressive. It will only convert those that are tagged as some other type. - When set to FORCE_ALL_FRAMES, the deinterlacer converts every frame to progressive - even those that are already tagged as progressive. Turn Force mode on only if there is  a good chance that the metadata has tagged frames as progressive when they are not  progressive. Do not turn on otherwise; processing frames that are already progressive  into progressive will probably result in lower quality video.
public enum DeinterlacerControl {
    case forceAllFrames
    case normal
    case sdkUnknown(String)
}

extension DeinterlacerControl : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeinterlacerControl] {
        return [
            .forceAllFrames,
            .normal,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .forceAllFrames: return "FORCE_ALL_FRAMES"
        case .normal: return "NORMAL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeinterlacerControl(rawValue: rawValue) ?? DeinterlacerControl.sdkUnknown(rawValue)
    }
}
