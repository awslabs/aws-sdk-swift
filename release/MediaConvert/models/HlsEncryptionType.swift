// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Encrypts the segments with the given encryption scheme. Leave blank to disable. Selecting 'Disabled' in the web interface also disables encryption.
public enum HlsEncryptionType {
    case aes128
    case sampleAes
    case sdkUnknown(String)
}

extension HlsEncryptionType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HlsEncryptionType] {
        return [
            .aes128,
            .sampleAes,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .aes128: return "AES128"
        case .sampleAes: return "SAMPLE_AES"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HlsEncryptionType(rawValue: rawValue) ?? HlsEncryptionType.sdkUnknown(rawValue)
    }
}
