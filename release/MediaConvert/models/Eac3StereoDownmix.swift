// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Choose how the service does stereo downmixing. This setting only applies if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Stereo downmix (Eac3StereoDownmix).
public enum Eac3StereoDownmix {
    case dpl2
    case loRo
    case ltRt
    case notIndicated
    case sdkUnknown(String)
}

extension Eac3StereoDownmix : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Eac3StereoDownmix] {
        return [
            .dpl2,
            .loRo,
            .ltRt,
            .notIndicated,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dpl2: return "DPL2"
        case .loRo: return "LO_RO"
        case .ltRt: return "LT_RT"
        case .notIndicated: return "NOT_INDICATED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Eac3StereoDownmix(rawValue: rawValue) ?? Eac3StereoDownmix.sdkUnknown(rawValue)
    }
}
