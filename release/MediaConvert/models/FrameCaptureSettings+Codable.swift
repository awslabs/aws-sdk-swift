// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FrameCaptureSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case framerateDenominator = "framerateDenominator"
        case framerateNumerator = "framerateNumerator"
        case maxCaptures = "maxCaptures"
        case quality = "quality"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if framerateDenominator != 0 {
            try encodeContainer.encode(framerateDenominator, forKey: .framerateDenominator)
        }
        if framerateNumerator != 0 {
            try encodeContainer.encode(framerateNumerator, forKey: .framerateNumerator)
        }
        if maxCaptures != 0 {
            try encodeContainer.encode(maxCaptures, forKey: .maxCaptures)
        }
        if quality != 0 {
            try encodeContainer.encode(quality, forKey: .quality)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let framerateDenominatorDecoded = try containerValues.decode(Int.self, forKey: .framerateDenominator)
        framerateDenominator = framerateDenominatorDecoded
        let framerateNumeratorDecoded = try containerValues.decode(Int.self, forKey: .framerateNumerator)
        framerateNumerator = framerateNumeratorDecoded
        let maxCapturesDecoded = try containerValues.decode(Int.self, forKey: .maxCaptures)
        maxCaptures = maxCapturesDecoded
        let qualityDecoded = try containerValues.decode(Int.self, forKey: .quality)
        quality = qualityDecoded
    }
}
