// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Selects method of inserting SDT information into output stream.  "Follow input SDT" copies SDT information from input stream to  output stream. "Follow input SDT if present" copies SDT information from  input stream to output stream if SDT information is present in the input, otherwise it will fall back on the user-defined values. Enter "SDT  Manually" means user will enter the SDT information. "No SDT" means output  stream will not contain SDT information.
public enum OutputSdt {
    case sdtFollow
    case sdtFollowIfPresent
    case sdtManual
    case sdtNone
    case sdkUnknown(String)
}

extension OutputSdt : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OutputSdt] {
        return [
            .sdtFollow,
            .sdtFollowIfPresent,
            .sdtManual,
            .sdtNone,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .sdtFollow: return "SDT_FOLLOW"
        case .sdtFollowIfPresent: return "SDT_FOLLOW_IF_PRESENT"
        case .sdtManual: return "SDT_MANUAL"
        case .sdtNone: return "SDT_NONE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OutputSdt(rawValue: rawValue) ?? OutputSdt.sdkUnknown(rawValue)
    }
}
