// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Use Position (Position) under under Timecode burn-in (TimecodeBurnIn) to specify the location the burned-in timecode on output video.
public enum TimecodeBurninPosition {
    case bottomCenter
    case bottomLeft
    case bottomRight
    case middleCenter
    case middleLeft
    case middleRight
    case topCenter
    case topLeft
    case topRight
    case sdkUnknown(String)
}

extension TimecodeBurninPosition : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TimecodeBurninPosition] {
        return [
            .bottomCenter,
            .bottomLeft,
            .bottomRight,
            .middleCenter,
            .middleLeft,
            .middleRight,
            .topCenter,
            .topLeft,
            .topRight,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bottomCenter: return "BOTTOM_CENTER"
        case .bottomLeft: return "BOTTOM_LEFT"
        case .bottomRight: return "BOTTOM_RIGHT"
        case .middleCenter: return "MIDDLE_CENTER"
        case .middleLeft: return "MIDDLE_LEFT"
        case .middleRight: return "MIDDLE_RIGHT"
        case .topCenter: return "TOP_CENTER"
        case .topLeft: return "TOP_LEFT"
        case .topRight: return "TOP_RIGHT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TimecodeBurninPosition(rawValue: rawValue) ?? TimecodeBurninPosition.sdkUnknown(rawValue)
    }
}
