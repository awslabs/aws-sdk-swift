// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Av1QvbrSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case qvbrQualityLevel = "qvbrQualityLevel"
        case qvbrQualityLevelFineTune = "qvbrQualityLevelFineTune"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if qvbrQualityLevel != 0 {
            try encodeContainer.encode(qvbrQualityLevel, forKey: .qvbrQualityLevel)
        }
        if qvbrQualityLevelFineTune != 0.0 {
            try encodeContainer.encode(qvbrQualityLevelFineTune, forKey: .qvbrQualityLevelFineTune)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let qvbrQualityLevelDecoded = try containerValues.decode(Int.self, forKey: .qvbrQualityLevel)
        qvbrQualityLevel = qvbrQualityLevelDecoded
        let qvbrQualityLevelFineTuneDecoded = try containerValues.decode(Double.self, forKey: .qvbrQualityLevelFineTune)
        qvbrQualityLevelFineTune = qvbrQualityLevelFineTuneDecoded
    }
}
