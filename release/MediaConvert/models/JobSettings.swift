// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// JobSettings contains all the transcode settings for a job.
public struct JobSettings: Equatable {
    /// When specified, this offset (in milliseconds) is added to the input Ad Avail PTS time.
    public let adAvailOffset: Int
    /// Settings for ad avail blanking.  Video can be blanked or overlaid with an image, and audio muted during SCTE-35 triggered ad avails.
    public let availBlanking: AvailBlanking?
    /// Settings for Event Signaling And Messaging (ESAM). If you don't do ad insertion, you can ignore these settings.
    public let esam: EsamSettings?
    /// Use Inputs (inputs) to define source file used in the transcode job. There can be multiple inputs add in a job. These inputs will be concantenated together to create the output.
    public let inputs: [Input]?
    /// Use these settings only when you use Kantar watermarking. Specify the values that MediaConvert uses to generate and place Kantar watermarks in your output audio. These settings apply to every output in your job. In addition to specifying these values, you also need to store your Kantar credentials in AWS Secrets Manager. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/kantar-watermarking.html.
    public let kantarWatermark: KantarWatermarkSettings?
    /// Overlay motion graphics on top of your video. The motion graphics that you specify here appear on all outputs in all output groups. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/motion-graphic-overlay.html.
    public let motionImageInserter: MotionImageInserter?
    /// Settings for your Nielsen configuration. If you don't do Nielsen measurement and analytics, ignore these settings. When you enable Nielsen configuration (nielsenConfiguration), MediaConvert enables PCM to ID3 tagging for all outputs in the job. To enable Nielsen configuration programmatically, include an instance of nielsenConfiguration in your JSON job specification. Even if you don't include any children of nielsenConfiguration, you still enable the setting.
    public let nielsenConfiguration: NielsenConfiguration?
    /// Ignore these settings unless you are using Nielsen non-linear watermarking. Specify the values that  MediaConvert uses to generate and place Nielsen watermarks in your output audio. In addition to  specifying these values, you also need to set up your cloud TIC server. These settings apply to  every output in your job. The MediaConvert implementation is currently with the following Nielsen versions: Nielsen Watermark SDK Version 5.2.1 Nielsen NLM Watermark Engine Version 1.2.7 Nielsen Watermark Authenticator [SID_TIC] Version [5.0.0]
    public let nielsenNonLinearWatermark: NielsenNonLinearWatermarkSettings?
    /// (OutputGroups) contains one group of settings for each set of outputs that share a common package type. All unpackaged files (MPEG-4, MPEG-2 TS, Quicktime, MXF, and no container) are grouped in a single output group as well. Required in (OutputGroups) is a group of settings that apply to the whole group. This required object depends on the value you set for (Type) under (OutputGroups)>(OutputGroupSettings). Type, settings object pairs are as follows. * FILE_GROUP_SETTINGS, FileGroupSettings * HLS_GROUP_SETTINGS, HlsGroupSettings * DASH_ISO_GROUP_SETTINGS, DashIsoGroupSettings * MS_SMOOTH_GROUP_SETTINGS, MsSmoothGroupSettings * CMAF_GROUP_SETTINGS, CmafGroupSettings
    public let outputGroups: [OutputGroup]?
    /// These settings control how the service handles timecodes throughout the job. These settings don't affect input clipping.
    public let timecodeConfig: TimecodeConfig?
    /// Enable Timed metadata insertion (TimedMetadataInsertion) to include ID3 tags in any HLS outputs. To include timed metadata, you must enable it here, enable it in each output container, and specify tags and timecodes in ID3 insertion (Id3Insertion) objects.
    public let timedMetadataInsertion: TimedMetadataInsertion?

    public init (
        adAvailOffset: Int = 0,
        availBlanking: AvailBlanking? = nil,
        esam: EsamSettings? = nil,
        inputs: [Input]? = nil,
        kantarWatermark: KantarWatermarkSettings? = nil,
        motionImageInserter: MotionImageInserter? = nil,
        nielsenConfiguration: NielsenConfiguration? = nil,
        nielsenNonLinearWatermark: NielsenNonLinearWatermarkSettings? = nil,
        outputGroups: [OutputGroup]? = nil,
        timecodeConfig: TimecodeConfig? = nil,
        timedMetadataInsertion: TimedMetadataInsertion? = nil
    )
    {
        self.adAvailOffset = adAvailOffset
        self.availBlanking = availBlanking
        self.esam = esam
        self.inputs = inputs
        self.kantarWatermark = kantarWatermark
        self.motionImageInserter = motionImageInserter
        self.nielsenConfiguration = nielsenConfiguration
        self.nielsenNonLinearWatermark = nielsenNonLinearWatermark
        self.outputGroups = outputGroups
        self.timecodeConfig = timecodeConfig
        self.timedMetadataInsertion = timedMetadataInsertion
    }
}
