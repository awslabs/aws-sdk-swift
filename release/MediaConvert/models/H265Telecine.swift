// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// This field applies only if the Streams > Advanced > Framerate (framerate) field  is set to 29.970. This field works with the Streams > Advanced > Preprocessors > Deinterlacer  field (deinterlace_mode) and the Streams > Advanced > Interlaced Mode field (interlace_mode)  to identify the scan type for the output: Progressive, Interlaced, Hard Telecine or Soft Telecine. - Hard: produces 29.97i output from 23.976 input. - Soft: produces 23.976; the player converts this output to 29.97i.
public enum H265Telecine {
    case hard
    case `none`
    case soft
    case sdkUnknown(String)
}

extension H265Telecine : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H265Telecine] {
        return [
            .hard,
            .none,
            .soft,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .hard: return "HARD"
        case .none: return "NONE"
        case .soft: return "SOFT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H265Telecine(rawValue: rawValue) ?? H265Telecine.sdkUnknown(rawValue)
    }
}
