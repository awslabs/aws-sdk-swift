// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Find additional transcoding features under Preprocessors (VideoPreprocessors). Enable the features at each output individually. These features are disabled by default.
public struct VideoPreprocessor: Equatable {
    /// Use these settings to convert the color space or to modify properties such as hue and contrast for this output. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/converting-the-color-space.html.
    public let colorCorrector: ColorCorrector?
    /// Use the deinterlacer to produce smoother motion and a clearer picture. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/working-with-scan-type.html.
    public let deinterlacer: Deinterlacer?
    /// Enable Dolby Vision feature to produce Dolby Vision compatible video output.
    public let dolbyVision: DolbyVision?
    /// Enable the Image inserter (ImageInserter) feature to include a graphic overlay on your video. Enable or disable this feature for each output individually. This setting is disabled by default.
    public let imageInserter: ImageInserter?
    /// Enable the Noise reducer (NoiseReducer) feature to remove noise from your video output if necessary. Enable or disable this feature for each output individually. This setting is disabled by default.
    public let noiseReducer: NoiseReducer?
    /// If you work with a third party video watermarking partner, use the group of settings that correspond with your watermarking partner to include watermarks in your output.
    public let partnerWatermarking: PartnerWatermarking?
    /// Settings for burning the output timecode and specified prefix into the output.
    public let timecodeBurnin: TimecodeBurnin?

    public init (
        colorCorrector: ColorCorrector? = nil,
        deinterlacer: Deinterlacer? = nil,
        dolbyVision: DolbyVision? = nil,
        imageInserter: ImageInserter? = nil,
        noiseReducer: NoiseReducer? = nil,
        partnerWatermarking: PartnerWatermarking? = nil,
        timecodeBurnin: TimecodeBurnin? = nil
    )
    {
        self.colorCorrector = colorCorrector
        self.deinterlacer = deinterlacer
        self.dolbyVision = dolbyVision
        self.imageInserter = imageInserter
        self.noiseReducer = noiseReducer
        self.partnerWatermarking = partnerWatermarking
        self.timecodeBurnin = timecodeBurnin
    }
}
