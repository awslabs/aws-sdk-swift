// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.
public struct ReservationPlan: Equatable {
    /// The length of the term of your reserved queue pricing plan commitment.
    public let commitment: Commitment?
    /// The timestamp in epoch seconds for when the current pricing plan term for this reserved queue expires.
    public let expiresAt: Date?
    /// The timestamp in epoch seconds for when you set up the current pricing plan for this reserved queue.
    public let purchasedAt: Date?
    /// Specifies whether the term of your reserved queue pricing plan is automatically extended (AUTO_RENEW) or expires (EXPIRE) at the end of the term.
    public let renewalType: RenewalType?
    /// Specifies the number of reserved transcode slots (RTS) for this queue. The number of RTS determines how many jobs the queue can process in parallel; each RTS can process one job at a time. When you increase this number, you extend your existing commitment with a new 12-month commitment for a larger number of RTS. The new commitment begins when you purchase the additional capacity. You can't decrease the number of RTS in your reserved queue.
    public let reservedSlots: Int
    /// Specifies whether the pricing plan for your reserved queue is ACTIVE or EXPIRED.
    public let status: ReservationPlanStatus?

    public init (
        commitment: Commitment? = nil,
        expiresAt: Date? = nil,
        purchasedAt: Date? = nil,
        renewalType: RenewalType? = nil,
        reservedSlots: Int = 0,
        status: ReservationPlanStatus? = nil
    )
    {
        self.commitment = commitment
        self.expiresAt = expiresAt
        self.purchasedAt = purchasedAt
        self.renewalType = renewalType
        self.reservedSlots = reservedSlots
        self.status = status
    }
}
