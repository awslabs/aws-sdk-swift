// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// H.265 Level.
public enum H265CodecLevel {
    case auto
    case level1
    case level2
    case level21
    case level3
    case level31
    case level4
    case level41
    case level5
    case level51
    case level52
    case level6
    case level61
    case level62
    case sdkUnknown(String)
}

extension H265CodecLevel : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H265CodecLevel] {
        return [
            .auto,
            .level1,
            .level2,
            .level21,
            .level3,
            .level31,
            .level4,
            .level41,
            .level5,
            .level51,
            .level52,
            .level6,
            .level61,
            .level62,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .auto: return "AUTO"
        case .level1: return "LEVEL_1"
        case .level2: return "LEVEL_2"
        case .level21: return "LEVEL_2_1"
        case .level3: return "LEVEL_3"
        case .level31: return "LEVEL_3_1"
        case .level4: return "LEVEL_4"
        case .level41: return "LEVEL_4_1"
        case .level5: return "LEVEL_5"
        case .level51: return "LEVEL_5_1"
        case .level52: return "LEVEL_5_2"
        case .level6: return "LEVEL_6"
        case .level61: return "LEVEL_6_1"
        case .level62: return "LEVEL_6_2"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H265CodecLevel(rawValue: rawValue) ?? H265CodecLevel.sdkUnknown(rawValue)
    }
}
