// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreatePresetInputBody: Equatable {
    public let category: String?
    public let description: String?
    public let name: String?
    public let settings: PresetSettings?
    public let tags: [String:String]?
}

extension CreatePresetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case category = "category"
        case description = "description"
        case name = "name"
        case settings = "settings"
        case tags = "tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .category)
        category = categoryDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let settingsDecoded = try containerValues.decodeIfPresent(PresetSettings.self, forKey: .settings)
        settings = settingsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, __string0) in tagsContainer {
                tagsDecoded0?[key0] = __string0
            }
        }
        tags = tagsDecoded0
    }
}
