// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NoiseReducer: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filter = "filter"
        case filterSettings = "filterSettings"
        case spatialFilterSettings = "spatialFilterSettings"
        case temporalFilterSettings = "temporalFilterSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filter = filter {
            try encodeContainer.encode(filter.rawValue, forKey: .filter)
        }
        if let filterSettings = filterSettings {
            try encodeContainer.encode(filterSettings, forKey: .filterSettings)
        }
        if let spatialFilterSettings = spatialFilterSettings {
            try encodeContainer.encode(spatialFilterSettings, forKey: .spatialFilterSettings)
        }
        if let temporalFilterSettings = temporalFilterSettings {
            try encodeContainer.encode(temporalFilterSettings, forKey: .temporalFilterSettings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterDecoded = try containerValues.decodeIfPresent(NoiseReducerFilter.self, forKey: .filter)
        filter = filterDecoded
        let filterSettingsDecoded = try containerValues.decodeIfPresent(NoiseReducerFilterSettings.self, forKey: .filterSettings)
        filterSettings = filterSettingsDecoded
        let spatialFilterSettingsDecoded = try containerValues.decodeIfPresent(NoiseReducerSpatialFilterSettings.self, forKey: .spatialFilterSettings)
        spatialFilterSettings = spatialFilterSettingsDecoded
        let temporalFilterSettingsDecoded = try containerValues.decodeIfPresent(NoiseReducerTemporalFilterSettings.self, forKey: .temporalFilterSettings)
        temporalFilterSettings = temporalFilterSettingsDecoded
    }
}
