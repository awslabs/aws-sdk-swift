// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TimedMetadataInsertion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case id3Insertions = "id3Insertions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let id3Insertions = id3Insertions {
            var id3InsertionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .id3Insertions)
            for __listofid3insertion0 in id3Insertions {
                try id3InsertionsContainer.encode(__listofid3insertion0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let id3InsertionsContainer = try containerValues.decodeIfPresent([Id3Insertion].self, forKey: .id3Insertions)
        var id3InsertionsDecoded0:[Id3Insertion]? = nil
        if let id3InsertionsContainer = id3InsertionsContainer {
            id3InsertionsDecoded0 = [Id3Insertion]()
            for structure0 in id3InsertionsContainer {
                id3InsertionsDecoded0?.append(structure0)
            }
        }
        id3Insertions = id3InsertionsDecoded0
    }
}
