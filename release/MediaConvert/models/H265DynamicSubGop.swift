// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Choose Adaptive to improve subjective video quality for high-motion content. This will cause the service to use fewer B-frames (which infer information based on other frames) for high-motion portions of the video and more B-frames for low-motion portions. The maximum number of B-frames is limited by the value you provide for the setting B frames between reference frames (numberBFramesBetweenReferenceFrames).
public enum H265DynamicSubGop {
    case adaptive
    case `static`
    case sdkUnknown(String)
}

extension H265DynamicSubGop : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H265DynamicSubGop] {
        return [
            .adaptive,
            .static,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .adaptive: return "ADAPTIVE"
        case .static: return "STATIC"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H265DynamicSubGop(rawValue: rawValue) ?? H265DynamicSubGop.sdkUnknown(rawValue)
    }
}
