// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CaptionSelector: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customLanguageCode = "customLanguageCode"
        case languageCode = "languageCode"
        case sourceSettings = "sourceSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customLanguageCode = customLanguageCode {
            try encodeContainer.encode(customLanguageCode, forKey: .customLanguageCode)
        }
        if let languageCode = languageCode {
            try encodeContainer.encode(languageCode.rawValue, forKey: .languageCode)
        }
        if let sourceSettings = sourceSettings {
            try encodeContainer.encode(sourceSettings, forKey: .sourceSettings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customLanguageCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customLanguageCode)
        customLanguageCode = customLanguageCodeDecoded
        let languageCodeDecoded = try containerValues.decodeIfPresent(LanguageCode.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let sourceSettingsDecoded = try containerValues.decodeIfPresent(CaptionSourceSettings.self, forKey: .sourceSettings)
        sourceSettings = sourceSettingsDecoded
    }
}
