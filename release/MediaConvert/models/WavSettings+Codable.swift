// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WavSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bitDepth = "bitDepth"
        case channels = "channels"
        case format = "format"
        case sampleRate = "sampleRate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if bitDepth != 0 {
            try encodeContainer.encode(bitDepth, forKey: .bitDepth)
        }
        if channels != 0 {
            try encodeContainer.encode(channels, forKey: .channels)
        }
        if let format = format {
            try encodeContainer.encode(format.rawValue, forKey: .format)
        }
        if sampleRate != 0 {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bitDepthDecoded = try containerValues.decode(Int.self, forKey: .bitDepth)
        bitDepth = bitDepthDecoded
        let channelsDecoded = try containerValues.decode(Int.self, forKey: .channels)
        channels = channelsDecoded
        let formatDecoded = try containerValues.decodeIfPresent(WavFormat.self, forKey: .format)
        format = formatDecoded
        let sampleRateDecoded = try containerValues.decode(Int.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
    }
}
