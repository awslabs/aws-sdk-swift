// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ReservationPlanSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case commitment = "commitment"
        case renewalType = "renewalType"
        case reservedSlots = "reservedSlots"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commitment = commitment {
            try encodeContainer.encode(commitment.rawValue, forKey: .commitment)
        }
        if let renewalType = renewalType {
            try encodeContainer.encode(renewalType.rawValue, forKey: .renewalType)
        }
        if reservedSlots != 0 {
            try encodeContainer.encode(reservedSlots, forKey: .reservedSlots)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitmentDecoded = try containerValues.decodeIfPresent(Commitment.self, forKey: .commitment)
        commitment = commitmentDecoded
        let renewalTypeDecoded = try containerValues.decodeIfPresent(RenewalType.self, forKey: .renewalType)
        renewalType = renewalTypeDecoded
        let reservedSlotsDecoded = try containerValues.decode(Int.self, forKey: .reservedSlots)
        reservedSlots = reservedSlotsDecoded
    }
}
