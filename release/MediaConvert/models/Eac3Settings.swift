// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value EAC3.
public struct Eac3Settings: Equatable {
    /// If set to ATTENUATE_3_DB, applies a 3 dB attenuation to the surround channels. Only used for 3/2 coding mode.
    public let attenuationControl: Eac3AttenuationControl?
    /// Specify the average bitrate in bits per second. Valid bitrates depend on the coding mode.
    public let bitrate: Int
    /// Specify the bitstream mode for the E-AC-3 stream that the encoder emits. For more information about the EAC3 bitstream mode, see ATSC A/52-2012 (Annex E).
    public let bitstreamMode: Eac3BitstreamMode?
    /// Dolby Digital Plus coding mode. Determines number of channels.
    public let codingMode: Eac3CodingMode?
    /// Activates a DC highpass filter for all input channels.
    public let dcFilter: Eac3DcFilter?
    /// Sets the dialnorm for the output. If blank and input audio is Dolby Digital Plus, dialnorm will be passed through.
    public let dialnorm: Int
    /// Choose the Dolby Digital dynamic range control (DRC) profile that MediaConvert uses when encoding the metadata in the Dolby Digital stream for the line operating mode. Related setting: When you use this setting, MediaConvert ignores any value you provide for Dynamic range compression profile (DynamicRangeCompressionProfile). For information about the Dolby Digital DRC operating modes and profiles, see the Dynamic Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.
    public let dynamicRangeCompressionLine: Eac3DynamicRangeCompressionLine?
    /// Choose the Dolby Digital dynamic range control (DRC) profile that MediaConvert uses when encoding the metadata in the Dolby Digital stream for the RF operating mode. Related setting: When you use this setting, MediaConvert ignores any value you provide for Dynamic range compression profile (DynamicRangeCompressionProfile). For information about the Dolby Digital DRC operating modes and profiles, see the Dynamic Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.
    public let dynamicRangeCompressionRf: Eac3DynamicRangeCompressionRf?
    /// When encoding 3/2 audio, controls whether the LFE channel is enabled
    public let lfeControl: Eac3LfeControl?
    /// Applies a 120Hz lowpass filter to the LFE channel prior to encoding. Only valid with 3_2_LFE coding mode.
    public let lfeFilter: Eac3LfeFilter?
    /// Specify a value for the following Dolby Digital Plus setting: Left only/Right only center mix (Lo/Ro center). MediaConvert uses this value for downmixing. How the service uses this value depends on the value that you choose for Stereo downmix (Eac3StereoDownmix). Valid values: 3.0, 1.5, 0.0, -1.5, -3.0, -4.5, -6.0, and -60. The value -60 mutes the channel. This setting applies only if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Left only/Right only center (loRoCenterMixLevel).
    public let loRoCenterMixLevel: Double
    /// Specify a value for the following Dolby Digital Plus setting: Left only/Right only (Lo/Ro surround). MediaConvert uses this value for downmixing. How the service uses this value depends on the value that you choose for Stereo downmix (Eac3StereoDownmix). Valid values: -1.5, -3.0, -4.5, -6.0, and -60. The value -60 mutes the channel. This setting applies only if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Left only/Right only surround (loRoSurroundMixLevel).
    public let loRoSurroundMixLevel: Double
    /// Specify a value for the following Dolby Digital Plus setting: Left total/Right total center mix (Lt/Rt center). MediaConvert uses this value for downmixing. How the service uses this value depends on the value that you choose for Stereo downmix (Eac3StereoDownmix). Valid values: 3.0, 1.5, 0.0, -1.5, -3.0, -4.5, -6.0, and -60. The value -60 mutes the channel. This setting applies only if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Left total/Right total center (ltRtCenterMixLevel).
    public let ltRtCenterMixLevel: Double
    /// Specify a value for the following Dolby Digital Plus setting: Left total/Right total surround mix (Lt/Rt surround). MediaConvert uses this value for downmixing. How the service uses this value depends on the value that you choose for Stereo downmix (Eac3StereoDownmix). Valid values: -1.5, -3.0, -4.5, -6.0, and -60. The value -60 mutes the channel. This setting applies only if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Left total/Right total surround (ltRtSurroundMixLevel).
    public let ltRtSurroundMixLevel: Double
    /// When set to FOLLOW_INPUT, encoder metadata will be sourced from the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was not supplied from one of these streams, then the static metadata settings will be used.
    public let metadataControl: Eac3MetadataControl?
    /// When set to WHEN_POSSIBLE, input DD+ audio will be passed through if it is present on the input. this detection is dynamic over the life of the transcode. Inputs that alternate between DD+ and non-DD+ content will have a consistent DD+ output as the system alternates between passthrough and encoding.
    public let passthroughControl: Eac3PassthroughControl?
    /// Controls the amount of phase-shift applied to the surround channels. Only used for 3/2 coding mode.
    public let phaseControl: Eac3PhaseControl?
    /// This value is always 48000. It represents the sample rate in Hz.
    public let sampleRate: Int
    /// Choose how the service does stereo downmixing. This setting only applies if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Stereo downmix (Eac3StereoDownmix).
    public let stereoDownmix: Eac3StereoDownmix?
    /// When encoding 3/2 audio, sets whether an extra center back surround channel is matrix encoded into the left and right surround channels.
    public let surroundExMode: Eac3SurroundExMode?
    /// When encoding 2/0 audio, sets whether Dolby Surround is matrix encoded into the two channels.
    public let surroundMode: Eac3SurroundMode?

    public init (
        attenuationControl: Eac3AttenuationControl? = nil,
        bitrate: Int = 0,
        bitstreamMode: Eac3BitstreamMode? = nil,
        codingMode: Eac3CodingMode? = nil,
        dcFilter: Eac3DcFilter? = nil,
        dialnorm: Int = 0,
        dynamicRangeCompressionLine: Eac3DynamicRangeCompressionLine? = nil,
        dynamicRangeCompressionRf: Eac3DynamicRangeCompressionRf? = nil,
        lfeControl: Eac3LfeControl? = nil,
        lfeFilter: Eac3LfeFilter? = nil,
        loRoCenterMixLevel: Double = 0.0,
        loRoSurroundMixLevel: Double = 0.0,
        ltRtCenterMixLevel: Double = 0.0,
        ltRtSurroundMixLevel: Double = 0.0,
        metadataControl: Eac3MetadataControl? = nil,
        passthroughControl: Eac3PassthroughControl? = nil,
        phaseControl: Eac3PhaseControl? = nil,
        sampleRate: Int = 0,
        stereoDownmix: Eac3StereoDownmix? = nil,
        surroundExMode: Eac3SurroundExMode? = nil,
        surroundMode: Eac3SurroundMode? = nil
    )
    {
        self.attenuationControl = attenuationControl
        self.bitrate = bitrate
        self.bitstreamMode = bitstreamMode
        self.codingMode = codingMode
        self.dcFilter = dcFilter
        self.dialnorm = dialnorm
        self.dynamicRangeCompressionLine = dynamicRangeCompressionLine
        self.dynamicRangeCompressionRf = dynamicRangeCompressionRf
        self.lfeControl = lfeControl
        self.lfeFilter = lfeFilter
        self.loRoCenterMixLevel = loRoCenterMixLevel
        self.loRoSurroundMixLevel = loRoSurroundMixLevel
        self.ltRtCenterMixLevel = ltRtCenterMixLevel
        self.ltRtSurroundMixLevel = ltRtSurroundMixLevel
        self.metadataControl = metadataControl
        self.passthroughControl = passthroughControl
        self.phaseControl = phaseControl
        self.sampleRate = sampleRate
        self.stereoDownmix = stereoDownmix
        self.surroundExMode = surroundExMode
        self.surroundMode = surroundMode
    }
}
