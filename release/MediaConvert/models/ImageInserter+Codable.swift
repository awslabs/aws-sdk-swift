// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImageInserter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case insertableImages = "insertableImages"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let insertableImages = insertableImages {
            var insertableImagesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .insertableImages)
            for __listofinsertableimage0 in insertableImages {
                try insertableImagesContainer.encode(__listofinsertableimage0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insertableImagesContainer = try containerValues.decodeIfPresent([InsertableImage].self, forKey: .insertableImages)
        var insertableImagesDecoded0:[InsertableImage]? = nil
        if let insertableImagesContainer = insertableImagesContainer {
            insertableImagesDecoded0 = [InsertableImage]()
            for structure0 in insertableImagesContainer {
                insertableImagesDecoded0?.append(structure0)
            }
        }
        insertableImages = insertableImagesDecoded0
    }
}
