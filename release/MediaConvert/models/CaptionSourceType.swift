// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Use Source (SourceType) to identify the format of your input captions.  The service cannot auto-detect caption format.
public enum CaptionSourceType {
    case ancillary
    case dvbSub
    case embedded
    case imsc
    case nullSource
    case scc
    case scte20
    case smi
    case smpteTt
    case srt
    case stl
    case teletext
    case ttml
    case webvtt
    case sdkUnknown(String)
}

extension CaptionSourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CaptionSourceType] {
        return [
            .ancillary,
            .dvbSub,
            .embedded,
            .imsc,
            .nullSource,
            .scc,
            .scte20,
            .smi,
            .smpteTt,
            .srt,
            .stl,
            .teletext,
            .ttml,
            .webvtt,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ancillary: return "ANCILLARY"
        case .dvbSub: return "DVB_SUB"
        case .embedded: return "EMBEDDED"
        case .imsc: return "IMSC"
        case .nullSource: return "NULL_SOURCE"
        case .scc: return "SCC"
        case .scte20: return "SCTE20"
        case .smi: return "SMI"
        case .smpteTt: return "SMPTE_TT"
        case .srt: return "SRT"
        case .stl: return "STL"
        case .teletext: return "TELETEXT"
        case .ttml: return "TTML"
        case .webvtt: return "WEBVTT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CaptionSourceType(rawValue: rawValue) ?? CaptionSourceType.sdkUnknown(rawValue)
    }
}
