// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CaptionDescriptionPreset: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customLanguageCode = "customLanguageCode"
        case destinationSettings = "destinationSettings"
        case languageCode = "languageCode"
        case languageDescription = "languageDescription"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customLanguageCode = customLanguageCode {
            try encodeContainer.encode(customLanguageCode, forKey: .customLanguageCode)
        }
        if let destinationSettings = destinationSettings {
            try encodeContainer.encode(destinationSettings, forKey: .destinationSettings)
        }
        if let languageCode = languageCode {
            try encodeContainer.encode(languageCode.rawValue, forKey: .languageCode)
        }
        if let languageDescription = languageDescription {
            try encodeContainer.encode(languageDescription, forKey: .languageDescription)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customLanguageCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customLanguageCode)
        customLanguageCode = customLanguageCodeDecoded
        let destinationSettingsDecoded = try containerValues.decodeIfPresent(CaptionDestinationSettings.self, forKey: .destinationSettings)
        destinationSettings = destinationSettingsDecoded
        let languageCodeDecoded = try containerValues.decodeIfPresent(LanguageCode.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let languageDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .languageDescription)
        languageDescription = languageDescriptionDecoded
    }
}
