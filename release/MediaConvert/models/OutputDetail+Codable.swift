// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutputDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case durationInMs = "durationInMs"
        case videoDetails = "videoDetails"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if durationInMs != 0 {
            try encodeContainer.encode(durationInMs, forKey: .durationInMs)
        }
        if let videoDetails = videoDetails {
            try encodeContainer.encode(videoDetails, forKey: .videoDetails)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let durationInMsDecoded = try containerValues.decode(Int.self, forKey: .durationInMs)
        durationInMs = durationInMsDecoded
        let videoDetailsDecoded = try containerValues.decodeIfPresent(VideoDetail.self, forKey: .videoDetails)
        videoDetails = videoDetailsDecoded
    }
}
