// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Specify how the transcoding service applies the denoise and deblock filters. You must also enable the filters separately, with Denoise (InputDenoiseFilter) and Deblock (InputDeblockFilter). * Auto - The transcoding service determines whether to apply filtering, depending on input type and quality. * Disable - The input is not filtered. This is true even if you use the API to enable them in (InputDeblockFilter) and (InputDeblockFilter). * Force - The input is filtered regardless of input type.
public enum InputFilterEnable {
    case auto
    case disable
    case force
    case sdkUnknown(String)
}

extension InputFilterEnable : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [InputFilterEnable] {
        return [
            .auto,
            .disable,
            .force,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .auto: return "AUTO"
        case .disable: return "DISABLE"
        case .force: return "FORCE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = InputFilterEnable(rawValue: rawValue) ?? InputFilterEnable.sdkUnknown(rawValue)
    }
}
