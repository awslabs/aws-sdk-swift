// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Describes whether the current job is running with accelerated transcoding. For jobs that have Acceleration (AccelerationMode) set to DISABLED, AccelerationStatus is always NOT_APPLICABLE. For jobs that have Acceleration (AccelerationMode) set to ENABLED or PREFERRED, AccelerationStatus is one of the other states. AccelerationStatus is IN_PROGRESS initially, while the service determines whether the input files and job settings are compatible with accelerated transcoding. If they are, AcclerationStatus is ACCELERATED. If your input files and job settings aren't compatible with accelerated transcoding, the service either fails your job or runs it without accelerated transcoding, depending on how you set Acceleration (AccelerationMode). When the service runs your job without accelerated transcoding, AccelerationStatus is NOT_ACCELERATED.
public enum AccelerationStatus {
    case accelerated
    case inProgress
    case notAccelerated
    case notApplicable
    case sdkUnknown(String)
}

extension AccelerationStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AccelerationStatus] {
        return [
            .accelerated,
            .inProgress,
            .notAccelerated,
            .notApplicable,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accelerated: return "ACCELERATED"
        case .inProgress: return "IN_PROGRESS"
        case .notAccelerated: return "NOT_ACCELERATED"
        case .notApplicable: return "NOT_APPLICABLE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AccelerationStatus(rawValue: rawValue) ?? AccelerationStatus.sdkUnknown(rawValue)
    }
}
