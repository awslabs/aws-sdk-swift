// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPresetsOutputBody: Equatable {
    public let nextToken: String?
    public let presets: [Preset]?
}

extension ListPresetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case presets = "presets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let presetsContainer = try containerValues.decodeIfPresent([Preset].self, forKey: .presets)
        var presetsDecoded0:[Preset]? = nil
        if let presetsContainer = presetsContainer {
            presetsDecoded0 = [Preset]()
            for structure0 in presetsContainer {
                presetsDecoded0?.append(structure0)
            }
        }
        presets = presetsDecoded0
    }
}
