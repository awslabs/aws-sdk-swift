// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateJobInput: Equatable {
    /// Optional. Accelerated transcoding can significantly speed up jobs with long, visually complex content. Outputs that use this feature incur pro-tier pricing. For information about feature limitations, see the AWS Elemental MediaConvert User Guide.
    public let accelerationSettings: AccelerationSettings?
    /// Optional. Choose a tag type that AWS Billing and Cost Management will use to sort your AWS Elemental MediaConvert costs on any billing report that you set up. Any transcoding outputs that don't have an associated tag will appear in your billing report unsorted. If you don't choose a valid value for this field, your job outputs will appear on the billing report unsorted.
    public let billingTagsSource: BillingTagsSource?
    /// Optional. Idempotency token for CreateJob operation.
    public var clientRequestToken: String?
    /// Optional. Use queue hopping to avoid overly long waits in the backlog of the queue that you submit your job to. Specify an alternate queue and the maximum time that your job will wait in the initial queue before hopping. For more information about this feature, see the AWS Elemental MediaConvert User Guide.
    public let hopDestinations: [HopDestination]?
    /// Optional. When you create a job, you can either specify a job template or specify the transcoding settings individually.
    public let jobTemplate: String?
    /// Optional. Specify the relative priority for this job. In any given queue, the service begins processing the job with the highest value first. When more than one job has the same priority, the service begins processing the job that you submitted first. If you don't specify a priority, the service uses the default value 0.
    public let priority: Int
    /// Optional. When you create a job, you can specify a queue to send it to. If you don't specify, the job will go to the default queue. For more about queues, see the User Guide topic at https://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html.
    public let queue: String?
    /// Required. The IAM role you use for creating this job. For details about permissions, see the User Guide topic at the User Guide at https://docs.aws.amazon.com/mediaconvert/latest/ug/iam-role.html.
    public let role: String?
    /// JobSettings contains all the transcode settings for a job.
    public let settings: JobSettings?
    /// Optional. Enable this setting when you run a test job to estimate how many reserved transcoding slots (RTS) you need. When this is enabled, MediaConvert runs your job from an on-demand queue with similar performance to what you will see with one RTS in a reserved queue. This setting is disabled by default.
    public let simulateReservedQueue: SimulateReservedQueue?
    /// Optional. Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.
    public let statusUpdateInterval: StatusUpdateInterval?
    /// Optional. The tags that you want to add to the resource. You can tag resources with a key-value pair or with only a key.  Use standard AWS tags on your job for automatic integration with AWS services and for custom integrations and workflows.
    public let tags: [String:String]?
    /// Optional. User-defined metadata that you want to associate with an MediaConvert job. You specify metadata in key/value pairs.  Use only for existing integrations or workflows that rely on job metadata tags. Otherwise, we recommend that you use standard AWS tags.
    public let userMetadata: [String:String]?

    public init (
        accelerationSettings: AccelerationSettings? = nil,
        billingTagsSource: BillingTagsSource? = nil,
        clientRequestToken: String? = nil,
        hopDestinations: [HopDestination]? = nil,
        jobTemplate: String? = nil,
        priority: Int = 0,
        queue: String? = nil,
        role: String? = nil,
        settings: JobSettings? = nil,
        simulateReservedQueue: SimulateReservedQueue? = nil,
        statusUpdateInterval: StatusUpdateInterval? = nil,
        tags: [String:String]? = nil,
        userMetadata: [String:String]? = nil
    )
    {
        self.accelerationSettings = accelerationSettings
        self.billingTagsSource = billingTagsSource
        self.clientRequestToken = clientRequestToken
        self.hopDestinations = hopDestinations
        self.jobTemplate = jobTemplate
        self.priority = priority
        self.queue = queue
        self.role = role
        self.settings = settings
        self.simulateReservedQueue = simulateReservedQueue
        self.statusUpdateInterval = statusUpdateInterval
        self.tags = tags
        self.userMetadata = userMetadata
    }
}
