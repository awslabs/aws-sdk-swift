// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Specifies whether the pricing plan for the queue is on-demand or reserved. For on-demand, you pay per minute, billed in increments of .01 minute. For reserved, you pay for the transcoding capacity of the entire queue, regardless of how much or how little you use it. Reserved pricing requires a 12-month commitment.
public enum PricingPlan {
    case onDemand
    case reserved
    case sdkUnknown(String)
}

extension PricingPlan : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PricingPlan] {
        return [
            .onDemand,
            .reserved,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .onDemand: return "ON_DEMAND"
        case .reserved: return "RESERVED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PricingPlan(rawValue: rawValue) ?? PricingPlan.sdkUnknown(rawValue)
    }
}
