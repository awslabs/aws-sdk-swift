// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchUpsertTableRowsInputBody: Equatable {
    public let rowsToUpsert: [UpsertRowData]?
    public let clientRequestToken: String?
}

extension BatchUpsertTableRowsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken
        case rowsToUpsert
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rowsToUpsertContainer = try containerValues.decodeIfPresent([UpsertRowData].self, forKey: .rowsToUpsert)
        var rowsToUpsertDecoded0:[UpsertRowData]? = nil
        if let rowsToUpsertContainer = rowsToUpsertContainer {
            rowsToUpsertDecoded0 = [UpsertRowData]()
            for structure0 in rowsToUpsertContainer {
                rowsToUpsertDecoded0?.append(structure0)
            }
        }
        rowsToUpsert = rowsToUpsertDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
