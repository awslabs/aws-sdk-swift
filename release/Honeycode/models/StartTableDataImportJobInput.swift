// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTableDataImportJobInput: Equatable {
    /// <p>
    ///             The request token for performing the update action.
    ///             Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error
    ///             like a failed network connection, you can retry the call with the same request token. The service ensures
    ///             that if the first call using that request token is successfully performed, the second call will not perform
    ///             the action again.
    ///         </p>
    ///         <p>
    ///             Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests
    ///             spanning hours or days.
    ///         </p>
    public let clientRequestToken: String?
    /// <p>
    ///             The format of the data that is being imported. Currently the only option supported is "DELIMITED_TEXT".
    ///         </p>
    public let dataFormat: ImportSourceDataFormat?
    /// <p>
    ///             The source of the data that is being imported. The size of source must be no larger than 100 MB.
    ///             Source must have no more than 100,000 cells and no more than 1,000 rows.
    ///         </p>
    public let dataSource: ImportDataSource?
    /// <p>The ID of the table where the rows are being imported.</p>
    ///         <p>
    ///             If a table with the specified id could not be found, this API throws ResourceNotFoundException.
    ///         </p>
    public let destinationTableId: String?
    /// <p>
    ///             The options for customizing this import request.
    ///         </p>
    public let importOptions: ImportOptions?
    /// <p>The ID of the workbook where the rows are being imported.</p>
    ///         <p>
    ///             If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
    ///         </p>
    public let workbookId: String?

    public init (
        clientRequestToken: String? = nil,
        dataFormat: ImportSourceDataFormat? = nil,
        dataSource: ImportDataSource? = nil,
        destinationTableId: String? = nil,
        importOptions: ImportOptions? = nil,
        workbookId: String? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.dataFormat = dataFormat
        self.dataSource = dataSource
        self.destinationTableId = destinationTableId
        self.importOptions = importOptions
        self.workbookId = workbookId
    }
}
