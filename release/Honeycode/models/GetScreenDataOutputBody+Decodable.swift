// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetScreenDataOutputBody: Equatable {
    public let results: [String:ResultSet]?
    public let workbookCursor: Int
    public let nextToken: String?
}

extension GetScreenDataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case results
        case workbookCursor
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([String:ResultSet].self, forKey: .results)
        var resultsDecoded0: [String:ResultSet]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [String:ResultSet]()
            for (key0, resultset0) in resultsContainer {
                resultsDecoded0?[key0] = resultset0
            }
        }
        results = resultsDecoded0
        let workbookCursorDecoded = try containerValues.decode(Int.self, forKey: .workbookCursor)
        workbookCursor = workbookCursorDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
