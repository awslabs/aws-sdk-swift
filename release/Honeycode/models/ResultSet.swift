// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///             ResultSet contains the results of the request for a single block or list defined on the screen.
///         </p>
public struct ResultSet: Equatable {
    /// <p>
    ///             List of headers for all the data cells in the block. The header identifies the name and default format of
    ///             the data cell. Data cells appear in the same order in all rows as defined in the header. The names and
    ///             formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank
    ///             value is used.
    ///         </p>
    ///         <p>
    ///             For example, a task list that displays the task name, due date and assigned person might have headers
    ///             [ { "name": "Task Name"}, {"name": "Due Date", "format": "DATE"}, {"name": "Assigned", "format": "CONTACT"} ].
    ///             Every row in the result will have the task name as the first item, due date as the second item and assigned
    ///             person as the third item. If a particular task does not have a due date, that row will still have a blank
    ///             value in the second element and the assigned person will still be in the third element.
    ///         </p>
    public let headers: [ColumnMetadata]?
    /// <p>
    ///             List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data
    ///             cells will be present in the same order as they are defined in the header.
    ///         </p>
    public let rows: [ResultRow]?

    public init (
        headers: [ColumnMetadata]? = nil,
        rows: [ResultRow]? = nil
    )
    {
        self.headers = headers
        self.rows = rows
    }
}
