// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetScreenDataInput: Equatable {
    /// <p>The ID of the app that contains the screem.</p>
    public let appId: String?
    /// <p>
    ///             The number of results to be returned on a single page.
    ///             Specify a number between 1 and 100. The maximum value is 100.
    ///         </p>
    ///         <p>
    ///             This parameter is optional. If you don't specify this parameter, the default page size is 100.
    ///         </p>
    public let maxResults: Int?
    /// <p>
    ///             This parameter is optional. If a nextToken is not specified, the API returns the first page of data.
    ///         </p>
    ///         <p>
    ///             Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API
    ///             will throw ValidationException.
    ///         </p>
    public let nextToken: String?
    /// <p>The ID of the screen.</p>
    public let screenId: String?
    /// <p>
    ///             Variables are optional and are needed only if the screen requires them to render correctly. Variables are
    ///             specified as a map where the key is the name of the variable as defined on the screen. The value is an
    ///             object which currently has only one property, rawValue, which holds the value of the variable to be passed
    ///             to the screen.
    ///         </p>
    public let variables: [String:VariableValue]?
    /// <p>The ID of the workbook that contains the screen.</p>
    public let workbookId: String?

    public init (
        appId: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        screenId: String? = nil,
        variables: [String:VariableValue]? = nil,
        workbookId: String? = nil
    )
    {
        self.appId = appId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.screenId = screenId
        self.variables = variables
        self.workbookId = workbookId
    }
}
