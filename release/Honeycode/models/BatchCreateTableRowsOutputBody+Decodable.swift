// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchCreateTableRowsOutputBody: Equatable {
    public let workbookCursor: Int
    public let createdRows: [String:String]?
    public let failedBatchItems: [FailedBatchItem]?
}

extension BatchCreateTableRowsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdRows
        case failedBatchItems
        case workbookCursor
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workbookCursorDecoded = try containerValues.decode(Int.self, forKey: .workbookCursor)
        workbookCursor = workbookCursorDecoded
        let createdRowsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .createdRows)
        var createdRowsDecoded0: [String:String]? = nil
        if let createdRowsContainer = createdRowsContainer {
            createdRowsDecoded0 = [String:String]()
            for (key0, rowid0) in createdRowsContainer {
                createdRowsDecoded0?[key0] = rowid0
            }
        }
        createdRows = createdRowsDecoded0
        let failedBatchItemsContainer = try containerValues.decodeIfPresent([FailedBatchItem].self, forKey: .failedBatchItems)
        var failedBatchItemsDecoded0:[FailedBatchItem]? = nil
        if let failedBatchItemsContainer = failedBatchItemsContainer {
            failedBatchItemsDecoded0 = [FailedBatchItem]()
            for structure0 in failedBatchItemsContainer {
                failedBatchItemsDecoded0?.append(structure0)
            }
        }
        failedBatchItems = failedBatchItemsDecoded0
    }
}
