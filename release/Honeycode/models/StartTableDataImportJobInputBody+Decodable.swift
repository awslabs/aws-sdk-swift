// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartTableDataImportJobInputBody: Equatable {
    public let dataSource: ImportDataSource?
    public let dataFormat: ImportSourceDataFormat?
    public let importOptions: ImportOptions?
    public let clientRequestToken: String?
}

extension StartTableDataImportJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken
        case dataFormat
        case dataSource
        case importOptions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceDecoded = try containerValues.decodeIfPresent(ImportDataSource.self, forKey: .dataSource)
        dataSource = dataSourceDecoded
        let dataFormatDecoded = try containerValues.decodeIfPresent(ImportSourceDataFormat.self, forKey: .dataFormat)
        dataFormat = dataFormatDecoded
        let importOptionsDecoded = try containerValues.decodeIfPresent(ImportOptions.self, forKey: .importOptions)
        importOptions = importOptionsDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
