// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct QueryForecastInput: Equatable {
    /// <p>The end date for the forecast. Specify the date using this format: yyyy-MM-dd'T'HH:mm:ss
    ///       (ISO 8601 format). For example, 2015-01-01T20:00:00. </p>
    public let endDate: String?
    /// <p>The filtering criteria to apply when retrieving the forecast. For example, to get the
    ///       forecast for <code>client_21</code> in the electricity usage dataset, specify the
    ///       following:</p>
    ///          <p>
    ///             <code>{"item_id" : "client_21"}</code>
    ///          </p>
    ///
    ///
    ///          <p>To get the full forecast, use the <a href="https://docs.aws.amazon.com/en_us/forecast/latest/dg/API_CreateForecastExportJob.html">CreateForecastExportJob</a> operation.</p>
    public let filters: [String:String]?
    /// <p>The Amazon Resource Name (ARN) of the forecast to query.</p>
    public let forecastArn: String?
    /// <p>If the result of the previous request was truncated, the response includes a
    ///         <code>NextToken</code>. To retrieve the next set of results, use the token in the next
    ///       request. Tokens expire after 24 hours.</p>
    public let nextToken: String?
    /// <p>The start date for the forecast. Specify the date using this format: yyyy-MM-dd'T'HH:mm:ss
    ///       (ISO 8601 format). For example, 2015-01-01T08:00:00.</p>
    public let startDate: String?

    public init (
        endDate: String? = nil,
        filters: [String:String]? = nil,
        forecastArn: String? = nil,
        nextToken: String? = nil,
        startDate: String? = nil
    )
    {
        self.endDate = endDate
        self.filters = filters
        self.forecastArn = forecastArn
        self.nextToken = nextToken
        self.startDate = startDate
    }
}
