// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code>
/// 			structures. Each of these structures includes the data points for that metric, along
/// 			with the timestamps of those data points and other identifying information.</p>
public struct MetricDataResult: Equatable {
    /// <p>The short name you specified to represent this metric.</p>
    public let id: String?
    /// <p>The human-readable label associated with the data.</p>
    public let label: String?
    /// <p>A list of messages with additional information about the data returned.</p>
    public let messages: [MessageData]?
    /// <p>The status of the returned data. <code>Complete</code> indicates that all data points in the requested time range were returned.
    /// 			<code>PartialData</code> means that an incomplete set of data points were returned.
    /// 					You can use the <code>NextToken</code> value that was returned and repeat your request to get more data points.
    /// 			<code>NextToken</code> is not returned if you are performing a math expression. <code>InternalError</code>
    /// 			indicates that an error occurred. Retry your request using <code>NextToken</code>, if present.</p>
    public let statusCode: StatusCode?
    /// <p>The timestamps for the data points, formatted in Unix timestamp format. The number of
    /// 			timestamps always matches the number of values and the value for Timestamps[x] is
    /// 			Values[x].</p>
    public let timestamps: [Date]?
    /// <p>The data points for the metric corresponding to <code>Timestamps</code>. The number of
    /// 			values always matches the number of timestamps and the timestamp for Values[x] is
    /// 			Timestamps[x].</p>
    public let values: [Double]?

    public init (
        id: String? = nil,
        label: String? = nil,
        messages: [MessageData]? = nil,
        statusCode: StatusCode? = nil,
        timestamps: [Date]? = nil,
        values: [Double]? = nil
    )
    {
        self.id = id
        self.label = label
        self.messages = messages
        self.statusCode = statusCode
        self.timestamps = timestamps
        self.values = values
    }
}
