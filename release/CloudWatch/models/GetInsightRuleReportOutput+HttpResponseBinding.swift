// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetInsightRuleReportOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: GetInsightRuleReportOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.aggregateValue = output.aggregateValue
            self.aggregationStatistic = output.aggregationStatistic
            self.approximateUniqueCount = output.approximateUniqueCount
            self.contributors = output.contributors
            self.keyLabels = output.keyLabels
            self.metricDatapoints = output.metricDatapoints
        } else {
            self.aggregateValue = nil
            self.aggregationStatistic = nil
            self.approximateUniqueCount = nil
            self.contributors = nil
            self.keyLabels = nil
            self.metricDatapoints = nil
        }
    }
}
