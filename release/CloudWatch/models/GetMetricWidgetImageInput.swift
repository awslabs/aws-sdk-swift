// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetMetricWidgetImageInput: Equatable {
    /// <p>A JSON string that defines the bitmap graph to be retrieved. The string includes the
    /// 			metrics to include in the graph, statistics, annotations, title, axis limits, and so on.
    /// 			You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p>
    /// 		       <p>For more information about the syntax of <code>MetricWidget</code> see
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Metric-Widget-Structure.html">GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.</p>
    /// 		
    /// 		       <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation
    /// 			point appears next to the graph legend.</p>
    public let metricWidget: String?
    /// <p>The format of the resulting image. Only PNG images are supported.</p>
    ///
    /// 		       <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the
    /// 			content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code>
    /// 			field. For example:</p>
    /// 		
    /// 		       <p>
    ///             <code>
    /// 			<GetMetricWidgetImageResponse xmlns=<URLstring>></code>
    ///          </p>
    /// 		       <p>
    ///             <code>  <GetMetricWidgetImageResult></code>
    ///          </p>
    /// 		       <p>
    ///             <code>    <MetricWidgetImage></code>
    ///          </p>
    /// 		       <p>
    ///             <code>       iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code>
    ///          </p>
    /// 		       <p>
    ///             <code>    </MetricWidgetImage></code>
    ///          </p>
    /// 		       <p>
    ///             <code>  </GetMetricWidgetImageResult></code>
    ///          </p>
    /// 		       <p>
    ///             <code>  <ResponseMetadata></code>
    ///          </p>
    /// 		       <p>
    ///             <code>    <RequestId>6f0d4192-4d42-11e8-82c1-f539a07e0e3b</RequestId></code>
    ///          </p>
    /// 		       <p>
    ///             <code>  </ResponseMetadata></code>
    ///          </p>
    /// 		       <p>
    ///             <code></GetMetricWidgetImageResponse></code>
    ///          </p>
    /// 		
    /// 		       <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most
    /// 			use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify
    /// 			<code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>,
    /// 			and the body of the response is a PNG image. </p>
    public let outputFormat: String?

    public init (
        metricWidget: String? = nil,
        outputFormat: String? = nil
    )
    {
        self.metricWidget = metricWidget
        self.outputFormat = outputFormat
    }
}
