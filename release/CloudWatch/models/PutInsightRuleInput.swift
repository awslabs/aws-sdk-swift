// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutInsightRuleInput: Equatable {
    /// <p>The definition of the rule, as a JSON object. For details on the valid syntax, see
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor Insights
    /// 			Rule Syntax</a>.</p>
    public let ruleDefinition: String?
    /// <p>A unique name for the rule.</p>
    public let ruleName: String?
    /// <p>The state of the rule. Valid values are ENABLED and DISABLED.</p>
    public let ruleState: String?
    /// <p>A list of key-value pairs to associate with the Contributor Insights rule.
    /// 			You can associate as many as 50 tags with a rule.</p>
    /// 		       <p>Tags can help you organize and categorize your
    /// 			resources. You can also use them to scope user permissions, by
    /// 			granting a user permission to access or change only the resources that have
    /// 			certain tag values.</p>
    /// 		       <p>To be able to associate tags with a rule, you must have the <code>cloudwatch:TagResource</code>
    /// 		permission in addition to the <code>cloudwatch:PutInsightRule</code> permission.</p>
    /// 		       <p>If you are using this operation to update an existing Contributor Insights rule, any tags
    /// 		you specify in this parameter are ignored. To change the tags of an existing rule, use
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">TagResource</a>.</p>
    public let tags: [Tag]?

    public init (
        ruleDefinition: String? = nil,
        ruleName: String? = nil,
        ruleState: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.ruleDefinition = ruleDefinition
        self.ruleName = ruleName
        self.ruleState = ruleState
        self.tags = tags
    }
}
