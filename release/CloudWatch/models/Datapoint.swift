// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Encapsulates the statistical data that CloudWatch computes from metric data.</p>
public struct Datapoint: Equatable {
    /// <p>The average of the metric values that correspond to the data point.</p>
    public let average: Double?
    /// <p>The percentile statistic for the data point.</p>
    public let extendedStatistics: [String:Double]?
    /// <p>The maximum metric value for the data point.</p>
    public let maximum: Double?
    /// <p>The minimum metric value for the data point.</p>
    public let minimum: Double?
    /// <p>The number of metric values that contributed to the aggregate value of this
    /// 			data point.</p>
    public let sampleCount: Double?
    /// <p>The sum of the metric values for the data point.</p>
    public let sum: Double?
    /// <p>The time stamp used for the data point.</p>
    public let timestamp: Date?
    /// <p>The standard unit for the data point.</p>
    public let unit: StandardUnit?

    public init (
        average: Double? = nil,
        extendedStatistics: [String:Double]? = nil,
        maximum: Double? = nil,
        minimum: Double? = nil,
        sampleCount: Double? = nil,
        sum: Double? = nil,
        timestamp: Date? = nil,
        unit: StandardUnit? = nil
    )
    {
        self.average = average
        self.extendedStatistics = extendedStatistics
        self.maximum = maximum
        self.minimum = minimum
        self.sampleCount = sampleCount
        self.sum = sum
        self.timestamp = timestamp
        self.unit = unit
    }
}
