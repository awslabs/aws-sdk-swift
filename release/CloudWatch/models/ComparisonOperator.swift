// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ComparisonOperator {
    case greaterthanorequaltothreshold
    case greaterthanthreshold
    case greaterthanupperthreshold
    case lessthanlowerorgreaterthanupperthreshold
    case lessthanlowerthreshold
    case lessthanorequaltothreshold
    case lessthanthreshold
    case sdkUnknown(String)
}

extension ComparisonOperator : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ComparisonOperator] {
        return [
            .greaterthanorequaltothreshold,
            .greaterthanthreshold,
            .greaterthanupperthreshold,
            .lessthanlowerorgreaterthanupperthreshold,
            .lessthanlowerthreshold,
            .lessthanorequaltothreshold,
            .lessthanthreshold,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .greaterthanorequaltothreshold: return "GreaterThanOrEqualToThreshold"
        case .greaterthanthreshold: return "GreaterThanThreshold"
        case .greaterthanupperthreshold: return "GreaterThanUpperThreshold"
        case .lessthanlowerorgreaterthanupperthreshold: return "LessThanLowerOrGreaterThanUpperThreshold"
        case .lessthanlowerthreshold: return "LessThanLowerThreshold"
        case .lessthanorequaltothreshold: return "LessThanOrEqualToThreshold"
        case .lessthanthreshold: return "LessThanThreshold"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ComparisonOperator(rawValue: rawValue) ?? ComparisonOperator.sdkUnknown(rawValue)
    }
}
