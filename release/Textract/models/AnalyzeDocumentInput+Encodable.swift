// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnalyzeDocumentInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case document = "Document"
        case featureTypes = "FeatureTypes"
        case humanLoopConfig = "HumanLoopConfig"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let document = document {
            try encodeContainer.encode(document, forKey: .document)
        }
        if let featureTypes = featureTypes {
            var featureTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .featureTypes)
            for featuretypes0 in featureTypes {
                try featureTypesContainer.encode(featuretypes0.rawValue)
            }
        }
        if let humanLoopConfig = humanLoopConfig {
            try encodeContainer.encode(humanLoopConfig, forKey: .humanLoopConfig)
        }
    }
}
