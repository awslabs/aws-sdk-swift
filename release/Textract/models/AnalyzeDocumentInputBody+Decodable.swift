// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AnalyzeDocumentInputBody: Equatable {
    public let document: Document?
    public let featureTypes: [FeatureType]?
    public let humanLoopConfig: HumanLoopConfig?
}

extension AnalyzeDocumentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case document = "Document"
        case featureTypes = "FeatureTypes"
        case humanLoopConfig = "HumanLoopConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentDecoded = try containerValues.decodeIfPresent(Document.self, forKey: .document)
        document = documentDecoded
        let featureTypesContainer = try containerValues.decodeIfPresent([FeatureType].self, forKey: .featureTypes)
        var featureTypesDecoded0:[FeatureType]? = nil
        if let featureTypesContainer = featureTypesContainer {
            featureTypesDecoded0 = [FeatureType]()
            for string0 in featureTypesContainer {
                featureTypesDecoded0?.append(string0)
            }
        }
        featureTypes = featureTypesDecoded0
        let humanLoopConfigDecoded = try containerValues.decodeIfPresent(HumanLoopConfig.self, forKey: .humanLoopConfig)
        humanLoopConfig = humanLoopConfigDecoded
    }
}
