// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDocumentTextDetectionInputBody: Equatable {
    public let documentLocation: DocumentLocation?
    public let clientRequestToken: String?
    public let jobTag: String?
    public let notificationChannel: NotificationChannel?
    public let outputConfig: OutputConfig?
    public let kMSKeyId: String?
}

extension StartDocumentTextDetectionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case documentLocation = "DocumentLocation"
        case jobTag = "JobTag"
        case kMSKeyId = "KMSKeyId"
        case notificationChannel = "NotificationChannel"
        case outputConfig = "OutputConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentLocationDecoded = try containerValues.decodeIfPresent(DocumentLocation.self, forKey: .documentLocation)
        documentLocation = documentLocationDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let jobTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobTag)
        jobTag = jobTagDecoded
        let notificationChannelDecoded = try containerValues.decodeIfPresent(NotificationChannel.self, forKey: .notificationChannel)
        notificationChannel = notificationChannelDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(OutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let kMSKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kMSKeyId)
        kMSKeyId = kMSKeyIdDecoded
    }
}
