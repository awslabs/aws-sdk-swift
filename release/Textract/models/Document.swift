// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The input document, either as bytes or as an S3 object.</p>
///          <p>You pass image bytes to an Amazon Textract API operation by using the <code>Bytes</code>
///          property. For example, you would use the <code>Bytes</code> property to pass a document
///          loaded from a local file system. Image bytes passed by using the <code>Bytes</code>
///          property must be base64 encoded. Your code might not need to encode document file bytes if
///          you're using an AWS SDK to call Amazon Textract API operations. </p>
///          <p>You pass images stored in an S3 bucket to an Amazon Textract API operation by using the
///             <code>S3Object</code> property. Documents stored in an S3 bucket don't need to be base64
///          encoded.</p>
///          <p>The AWS Region for the S3 bucket that contains the S3 object must match the AWS
///          Region that you use for Amazon Textract operations.</p>
///          <p>If you use the AWS CLI to call Amazon Textract operations, passing image bytes using
///          the Bytes property isn't supported. You must first upload the document to an Amazon S3
///          bucket, and then call the operation using the S3Object property.</p>
///
///          <p>For Amazon Textract to process an S3 object, the user must have permission
///          to access the S3 object. </p>
public struct Document: Equatable {
    /// <p>A blob of base64-encoded document bytes. The maximum size of a document that's provided
    ///          in a blob of bytes is 5 MB. The document bytes must be in PNG or JPEG format.</p>
    ///          <p>If you're using an AWS SDK to call Amazon Textract, you might not need to base64-encode
    ///          image bytes passed using the <code>Bytes</code> field. </p>
    public let bytes: Data?
    /// <p>Identifies an S3 object as the document source. The maximum size of a document that's
    ///          stored in an S3 bucket is 5 MB.</p>
    public let s3Object: S3Object?

    public init (
        bytes: Data? = nil,
        s3Object: S3Object? = nil
    )
    {
        self.bytes = bytes
        self.s3Object = s3Object
    }
}
