// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDocumentAnalysisOutputBody: Equatable {
    public let documentMetadata: DocumentMetadata?
    public let jobStatus: JobStatus?
    public let nextToken: String?
    public let blocks: [Block]?
    public let warnings: [Warning]?
    public let statusMessage: String?
    public let analyzeDocumentModelVersion: String?
}

extension GetDocumentAnalysisOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyzeDocumentModelVersion = "AnalyzeDocumentModelVersion"
        case blocks = "Blocks"
        case documentMetadata = "DocumentMetadata"
        case jobStatus = "JobStatus"
        case nextToken = "NextToken"
        case statusMessage = "StatusMessage"
        case warnings = "Warnings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentMetadataDecoded = try containerValues.decodeIfPresent(DocumentMetadata.self, forKey: .documentMetadata)
        documentMetadata = documentMetadataDecoded
        let jobStatusDecoded = try containerValues.decodeIfPresent(JobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let blocksContainer = try containerValues.decodeIfPresent([Block].self, forKey: .blocks)
        var blocksDecoded0:[Block]? = nil
        if let blocksContainer = blocksContainer {
            blocksDecoded0 = [Block]()
            for structure0 in blocksContainer {
                blocksDecoded0?.append(structure0)
            }
        }
        blocks = blocksDecoded0
        let warningsContainer = try containerValues.decodeIfPresent([Warning].self, forKey: .warnings)
        var warningsDecoded0:[Warning]? = nil
        if let warningsContainer = warningsContainer {
            warningsDecoded0 = [Warning]()
            for structure0 in warningsContainer {
                warningsDecoded0?.append(structure0)
            }
        }
        warnings = warningsDecoded0
        let statusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusMessage)
        statusMessage = statusMessageDecoded
        let analyzeDocumentModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .analyzeDocumentModelVersion)
        analyzeDocumentModelVersion = analyzeDocumentModelVersionDecoded
    }
}
