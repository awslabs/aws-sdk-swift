// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartDocumentAnalysisInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case documentLocation = "DocumentLocation"
        case featureTypes = "FeatureTypes"
        case jobTag = "JobTag"
        case kMSKeyId = "KMSKeyId"
        case notificationChannel = "NotificationChannel"
        case outputConfig = "OutputConfig"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let documentLocation = documentLocation {
            try encodeContainer.encode(documentLocation, forKey: .documentLocation)
        }
        if let featureTypes = featureTypes {
            var featureTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .featureTypes)
            for featuretypes0 in featureTypes {
                try featureTypesContainer.encode(featuretypes0.rawValue)
            }
        }
        if let jobTag = jobTag {
            try encodeContainer.encode(jobTag, forKey: .jobTag)
        }
        if let kMSKeyId = kMSKeyId {
            try encodeContainer.encode(kMSKeyId, forKey: .kMSKeyId)
        }
        if let notificationChannel = notificationChannel {
            try encodeContainer.encode(notificationChannel, forKey: .notificationChannel)
        }
        if let outputConfig = outputConfig {
            try encodeContainer.encode(outputConfig, forKey: .outputConfig)
        }
    }
}
