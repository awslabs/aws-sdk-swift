// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateContactChannelInput: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the contact channel.</p>
    public let contactId: String?
    /// <p>If you want to activate the channel at a later time, you can choose to defer activation.
    ///          Incident Manager can't engage your contact channel until it has been activated.</p>
    public let deferActivation: Bool?
    /// <p>The details that Incident Manager uses when trying to engage the contact channel. The format
    ///          is dependent on the type of the contact channel. The following are the expected
    ///          formats:</p>
    ///          <ul>
    ///             <li>
    ///                <p>SMS - '+' followed by the country code and phone number</p>
    ///             </li>
    ///             <li>
    ///                <p>VOICE - '+' followed by the country code and phone number</p>
    ///             </li>
    ///             <li>
    ///                <p>EMAIL - any standard email format</p>
    ///             </li>
    ///          </ul>
    public let deliveryAddress: ContactChannelAddress?
    /// <p>A token ensuring that the action is called only once with the specified details.</p>
    public var idempotencyToken: String?
    /// <p>The name of the contact channel.</p>
    public let name: String?
    /// <p>Incident Manager supports three types of contact channels:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>SMS</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VOICE</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>EMAIL</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let type: ChannelType?

    public init (
        contactId: String? = nil,
        deferActivation: Bool? = nil,
        deliveryAddress: ContactChannelAddress? = nil,
        idempotencyToken: String? = nil,
        name: String? = nil,
        type: ChannelType? = nil
    )
    {
        self.contactId = contactId
        self.deferActivation = deferActivation
        self.deliveryAddress = deliveryAddress
        self.idempotencyToken = idempotencyToken
        self.name = name
        self.type = type
    }
}
