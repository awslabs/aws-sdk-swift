// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactChannelsOutputBody: Equatable {
    public let nextToken: String?
    public let contactChannels: [ContactChannel]?
}

extension ListContactChannelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactChannels = "ContactChannels"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let contactChannelsContainer = try containerValues.decodeIfPresent([ContactChannel].self, forKey: .contactChannels)
        var contactChannelsDecoded0:[ContactChannel]? = nil
        if let contactChannelsContainer = contactChannelsContainer {
            contactChannelsDecoded0 = [ContactChannel]()
            for structure0 in contactChannelsContainer {
                contactChannelsDecoded0?.append(structure0)
            }
        }
        contactChannels = contactChannelsDecoded0
    }
}
