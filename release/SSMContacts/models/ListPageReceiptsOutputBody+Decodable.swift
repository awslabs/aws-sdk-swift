// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPageReceiptsOutputBody: Equatable {
    public let nextToken: String?
    public let receipts: [Receipt]?
}

extension ListPageReceiptsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case receipts = "Receipts"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let receiptsContainer = try containerValues.decodeIfPresent([Receipt].self, forKey: .receipts)
        var receiptsDecoded0:[Receipt]? = nil
        if let receiptsContainer = receiptsContainer {
            receiptsDecoded0 = [Receipt]()
            for structure0 in receiptsContainer {
                receiptsDecoded0?.append(structure0)
            }
        }
        receipts = receiptsDecoded0
    }
}
