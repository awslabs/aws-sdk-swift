// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptPageInputBody: Equatable {
    public let pageId: String?
    public let contactChannelId: String?
    public let acceptType: AcceptType?
    public let note: String?
    public let acceptCode: String?
}

extension AcceptPageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceptCode = "AcceptCode"
        case acceptType = "AcceptType"
        case contactChannelId = "ContactChannelId"
        case note = "Note"
        case pageId = "PageId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pageId)
        pageId = pageIdDecoded
        let contactChannelIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactChannelId)
        contactChannelId = contactChannelIdDecoded
        let acceptTypeDecoded = try containerValues.decodeIfPresent(AcceptType.self, forKey: .acceptType)
        acceptType = acceptTypeDecoded
        let noteDecoded = try containerValues.decodeIfPresent(String.self, forKey: .note)
        note = noteDecoded
        let acceptCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .acceptCode)
        acceptCode = acceptCodeDecoded
    }
}
