// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPagesByContactOutputBody: Equatable {
    public let nextToken: String?
    public let pages: [Page]?
}

extension ListPagesByContactOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pages = "Pages"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let pagesContainer = try containerValues.decodeIfPresent([Page].self, forKey: .pages)
        var pagesDecoded0:[Page]? = nil
        if let pagesContainer = pagesContainer {
            pagesDecoded0 = [Page]()
            for structure0 in pagesContainer {
                pagesDecoded0?.append(structure0)
            }
        }
        pages = pagesDecoded0
    }
}
