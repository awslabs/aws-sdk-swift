// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEngagementsOutputBody: Equatable {
    public let nextToken: String?
    public let engagements: [Engagement]?
}

extension ListEngagementsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case engagements = "Engagements"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let engagementsContainer = try containerValues.decodeIfPresent([Engagement].self, forKey: .engagements)
        var engagementsDecoded0:[Engagement]? = nil
        if let engagementsContainer = engagementsContainer {
            engagementsDecoded0 = [Engagement]()
            for structure0 in engagementsContainer {
                engagementsDecoded0?.append(structure0)
            }
        }
        engagements = engagementsDecoded0
    }
}
