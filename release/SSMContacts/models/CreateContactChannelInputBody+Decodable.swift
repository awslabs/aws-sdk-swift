// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateContactChannelInputBody: Equatable {
    public let contactId: String?
    public let name: String?
    public let type: ChannelType?
    public let deliveryAddress: ContactChannelAddress?
    public let deferActivation: Bool?
    public let idempotencyToken: String?
}

extension CreateContactChannelInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactId = "ContactId"
        case deferActivation = "DeferActivation"
        case deliveryAddress = "DeliveryAddress"
        case idempotencyToken = "IdempotencyToken"
        case name = "Name"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactId)
        contactId = contactIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let typeDecoded = try containerValues.decodeIfPresent(ChannelType.self, forKey: .type)
        type = typeDecoded
        let deliveryAddressDecoded = try containerValues.decodeIfPresent(ContactChannelAddress.self, forKey: .deliveryAddress)
        deliveryAddress = deliveryAddressDecoded
        let deferActivationDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .deferActivation)
        deferActivation = deferActivationDecoded
        let idempotencyTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .idempotencyToken)
        idempotencyToken = idempotencyTokenDecoded
    }
}
