// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AcceptPageInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case acceptCode = "AcceptCode"
        case acceptType = "AcceptType"
        case contactChannelId = "ContactChannelId"
        case note = "Note"
        case pageId = "PageId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let acceptCode = acceptCode {
            try encodeContainer.encode(acceptCode, forKey: .acceptCode)
        }
        if let acceptType = acceptType {
            try encodeContainer.encode(acceptType.rawValue, forKey: .acceptType)
        }
        if let contactChannelId = contactChannelId {
            try encodeContainer.encode(contactChannelId, forKey: .contactChannelId)
        }
        if let note = note {
            try encodeContainer.encode(note, forKey: .note)
        }
        if let pageId = pageId {
            try encodeContainer.encode(pageId, forKey: .pageId)
        }
    }
}
