// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TemplateVersionResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case creationDate = "CreationDate"
        case defaultSubstitutions = "DefaultSubstitutions"
        case lastModifiedDate = "LastModifiedDate"
        case templateDescription = "TemplateDescription"
        case templateName = "TemplateName"
        case templateType = "TemplateType"
        case version = "Version"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationDate = creationDate {
            try encodeContainer.encode(creationDate, forKey: .creationDate)
        }
        if let defaultSubstitutions = defaultSubstitutions {
            try encodeContainer.encode(defaultSubstitutions, forKey: .defaultSubstitutions)
        }
        if let lastModifiedDate = lastModifiedDate {
            try encodeContainer.encode(lastModifiedDate, forKey: .lastModifiedDate)
        }
        if let templateDescription = templateDescription {
            try encodeContainer.encode(templateDescription, forKey: .templateDescription)
        }
        if let templateName = templateName {
            try encodeContainer.encode(templateName, forKey: .templateName)
        }
        if let templateType = templateType {
            try encodeContainer.encode(templateType, forKey: .templateType)
        }
        if let version = version {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let defaultSubstitutionsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultSubstitutions)
        defaultSubstitutions = defaultSubstitutionsDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
        let templateDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateDescription)
        templateDescription = templateDescriptionDecoded
        let templateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let templateTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateType)
        templateType = templateTypeDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
    }
}
