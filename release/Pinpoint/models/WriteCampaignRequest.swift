// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the configuration and other settings for a campaign.</p>
public struct WriteCampaignRequest: Equatable {
    /// <p>An array of requests that defines additional treatments for the campaign, in addition to the default treatment for the campaign.</p>
    public let additionalTreatments: [WriteTreatmentResource]?
    /// <p>The delivery configuration settings for sending the campaign through a custom channel. This object is required if the MessageConfiguration object for the campaign specifies a CustomMessage object.</p>
    public let customDeliveryConfiguration: CustomDeliveryConfiguration?
    /// <p>A custom description of the campaign.</p>
    public let description: String?
    /// <p>The allocated percentage of users (segment members) who shouldn't receive messages from the campaign.</p>
    public let holdoutPercent: Int
    /// <p>The settings for the AWS Lambda function to invoke as a code hook for the campaign. You can use this hook to customize the segment that's used by the campaign.</p>
    public let hook: CampaignHook?
    /// <p>Specifies whether to pause the campaign. A paused campaign doesn't run unless you resume it by changing this value to false.</p>
    public let isPaused: Bool
    /// <p>The messaging limits for the campaign.</p>
    public let limits: CampaignLimits?
    /// <p>The message configuration settings for the campaign.</p>
    public let messageConfiguration: MessageConfiguration?
    /// <p>A custom name for the campaign.</p>
    public let name: String?
    /// <p>The schedule settings for the campaign.</p>
    public let schedule: Schedule?
    /// <p>The unique identifier for the segment to associate with the campaign.</p>
    public let segmentId: String?
    /// <p>The version of the segment to associate with the campaign.</p>
    public let segmentVersion: Int
    /// <p>A string-to-string map of key-value pairs that defines the tags to associate with the campaign. Each tag consists of a required tag key and an associated tag value.</p>
    public let tags: [String:String]?
    /// <p>The message template to use for the campaign.</p>
    public let templateConfiguration: TemplateConfiguration?
    /// <p>A custom description of the default treatment for the campaign.</p>
    public let treatmentDescription: String?
    /// <p>A custom name of the default treatment for the campaign, if the campaign has multiple treatments. A <i>treatment</i> is a variation of a campaign that's used for A/B testing.</p>
    public let treatmentName: String?

    public init (
        additionalTreatments: [WriteTreatmentResource]? = nil,
        customDeliveryConfiguration: CustomDeliveryConfiguration? = nil,
        description: String? = nil,
        holdoutPercent: Int = 0,
        hook: CampaignHook? = nil,
        isPaused: Bool = false,
        limits: CampaignLimits? = nil,
        messageConfiguration: MessageConfiguration? = nil,
        name: String? = nil,
        schedule: Schedule? = nil,
        segmentId: String? = nil,
        segmentVersion: Int = 0,
        tags: [String:String]? = nil,
        templateConfiguration: TemplateConfiguration? = nil,
        treatmentDescription: String? = nil,
        treatmentName: String? = nil
    )
    {
        self.additionalTreatments = additionalTreatments
        self.customDeliveryConfiguration = customDeliveryConfiguration
        self.description = description
        self.holdoutPercent = holdoutPercent
        self.hook = hook
        self.isPaused = isPaused
        self.limits = limits
        self.messageConfiguration = messageConfiguration
        self.name = name
        self.schedule = schedule
        self.segmentId = segmentId
        self.segmentVersion = segmentVersion
        self.tags = tags
        self.templateConfiguration = templateConfiguration
        self.treatmentDescription = treatmentDescription
        self.treatmentName = treatmentName
    }
}
