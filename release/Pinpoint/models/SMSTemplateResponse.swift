// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.</p>
public struct SMSTemplateResponse: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the message template.</p>
    public let arn: String?
    /// <p>The message body that's used in text messages that are based on the message template.</p>
    public let body: String?
    /// <p>The date, in ISO 8601 format, when the message template was created.</p>
    public let creationDate: String?
    /// <p>The JSON object that specifies the default values that are used for message variables in the message template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the default value for that variable.</p>
    public let defaultSubstitutions: String?
    /// <p>The date, in ISO 8601 format, when the message template was last modified.</p>
    public let lastModifiedDate: String?
    /// <p>The unique identifier for the recommender model that's used by the message template.</p>
    public let recommenderId: String?
    /// <p>A string-to-string map of key-value pairs that identifies the tags that are associated with the message template. Each tag consists of a required tag key and an associated tag value.</p>
    public let tags: [String:String]?
    /// <p>The custom description of the message template.</p>
    public let templateDescription: String?
    /// <p>The name of the message template.</p>
    public let templateName: String?
    /// <p>The type of channel that the message template is designed for. For an SMS template, this value is SMS.</p>
    public let templateType: TemplateType?
    /// <p>The unique identifier, as an integer, for the active version of the message template, or the version of the template that you specified by using the version parameter in your request.</p>
    public let version: String?

    public init (
        arn: String? = nil,
        body: String? = nil,
        creationDate: String? = nil,
        defaultSubstitutions: String? = nil,
        lastModifiedDate: String? = nil,
        recommenderId: String? = nil,
        tags: [String:String]? = nil,
        templateDescription: String? = nil,
        templateName: String? = nil,
        templateType: TemplateType? = nil,
        version: String? = nil
    )
    {
        self.arn = arn
        self.body = body
        self.creationDate = creationDate
        self.defaultSubstitutions = defaultSubstitutions
        self.lastModifiedDate = lastModifiedDate
        self.recommenderId = recommenderId
        self.tags = tags
        self.templateDescription = templateDescription
        self.templateName = templateName
        self.templateType = templateType
        self.version = version
    }
}
