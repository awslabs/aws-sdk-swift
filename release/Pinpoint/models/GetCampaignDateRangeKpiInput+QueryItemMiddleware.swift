// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetCampaignDateRangeKpiInputQueryItemMiddleware: Middleware {
    public let id: String = "GetCampaignDateRangeKpiInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetCampaignDateRangeKpiInput>,
                  next: H) -> Swift.Result<OperationOutput<GetCampaignDateRangeKpiOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let endTime = input.operationInput.endTime {
            let endTimeQueryItem = URLQueryItem(name: "end-time".urlPercentEncoding(), value: String(endTime.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(endTimeQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "next-token".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let pageSize = input.operationInput.pageSize {
            let pageSizeQueryItem = URLQueryItem(name: "page-size".urlPercentEncoding(), value: String(pageSize).urlPercentEncoding())
            input.builder.withQueryItem(pageSizeQueryItem)
        }
        if let startTime = input.operationInput.startTime {
            let startTimeQueryItem = URLQueryItem(name: "start-time".urlPercentEncoding(), value: String(startTime.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(startTimeQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetCampaignDateRangeKpiInput>
    public typealias MOutput = OperationOutput<GetCampaignDateRangeKpiOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetCampaignDateRangeKpiOutputError>
}
