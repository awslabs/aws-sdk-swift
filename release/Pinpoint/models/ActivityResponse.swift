// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about an activity that was performed by a campaign.</p>
public struct ActivityResponse: Equatable {
    /// <p>The unique identifier for the application that the campaign applies to.</p>
    public let applicationId: String?
    /// <p>The unique identifier for the campaign that the activity applies to.</p>
    public let campaignId: String?
    /// <p>The actual time, in ISO 8601 format, when the activity was marked CANCELLED or COMPLETED.</p>
    public let end: String?
    /// <p>The unique identifier for the activity.</p>
    public let id: String?
    /// <p>Specifies whether the activity succeeded. Possible values are SUCCESS and FAIL.</p>
    public let result: String?
    /// <p>The scheduled start time, in ISO 8601 format, for the activity.</p>
    public let scheduledStart: String?
    /// <p>The actual start time, in ISO 8601 format, of the activity.</p>
    public let start: String?
    /// <p>The current status of the activity. Possible values are: PENDING, INITIALIZING, RUNNING, PAUSED, CANCELLED, and COMPLETED.</p>
    public let state: String?
    /// <p>The total number of endpoints that the campaign successfully delivered messages to.</p>
    public let successfulEndpointCount: Int
    /// <p>The total number of time zones that were completed.</p>
    public let timezonesCompletedCount: Int
    /// <p>The total number of unique time zones that are in the segment for the campaign.</p>
    public let timezonesTotalCount: Int
    /// <p>The total number of endpoints that the campaign attempted to deliver messages to.</p>
    public let totalEndpointCount: Int
    /// <p>The unique identifier for the campaign treatment that the activity applies to. A treatment is a variation of a campaign that's used for A/B testing of a campaign.</p>
    public let treatmentId: String?

    public init (
        applicationId: String? = nil,
        campaignId: String? = nil,
        end: String? = nil,
        id: String? = nil,
        result: String? = nil,
        scheduledStart: String? = nil,
        start: String? = nil,
        state: String? = nil,
        successfulEndpointCount: Int = 0,
        timezonesCompletedCount: Int = 0,
        timezonesTotalCount: Int = 0,
        totalEndpointCount: Int = 0,
        treatmentId: String? = nil
    )
    {
        self.applicationId = applicationId
        self.campaignId = campaignId
        self.end = end
        self.id = id
        self.result = result
        self.scheduledStart = scheduledStart
        self.start = start
        self.state = state
        self.successfulEndpointCount = successfulEndpointCount
        self.timezonesCompletedCount = timezonesCompletedCount
        self.timezonesTotalCount = timezonesTotalCount
        self.totalEndpointCount = totalEndpointCount
        self.treatmentId = treatmentId
    }
}
