// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the sender ID and message type for an SMS message that's sent to participants in a journey.</p>
public struct JourneySMSMessage: Equatable {
    /// <p>The entity ID or Principal Entity (PE) id received from the regulatory body for sending SMS in your country.</p>
    public let entityId: String?
    /// <p>The SMS message type. Valid values are TRANSACTIONAL (for messages that are critical or time-sensitive, such as a one-time passwords) and PROMOTIONAL (for messsages that aren't critical or time-sensitive, such as marketing messages).</p>
    public let messageType: MessageType?
    /// <p>The long code to send the SMS message from. This value should be one of the dedicated long codes that's assigned to your AWS account. Although it isn't required, we recommend that you specify the long code using an E.164 format to ensure prompt and accurate delivery of the message. For example, +12065550100.</p>
    public let originationNumber: String?
    /// <p>The sender ID to display as the sender of the message on a recipient's device. Support for sender IDs varies by country or region. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-countries.html">Supported Countries and Regions</a> in the Amazon Pinpoint User Guide.</p>
    public let senderId: String?
    /// <p>The template ID received from the regulatory body for sending SMS in your country.</p>
    public let templateId: String?

    public init (
        entityId: String? = nil,
        messageType: MessageType? = nil,
        originationNumber: String? = nil,
        senderId: String? = nil,
        templateId: String? = nil
    )
    {
        self.entityId = entityId
        self.messageType = messageType
        self.originationNumber = originationNumber
        self.senderId = senderId
        self.templateId = templateId
    }
}
