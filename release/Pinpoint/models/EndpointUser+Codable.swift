// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EndpointUser: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case userAttributes = "UserAttributes"
        case userId = "UserId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let userAttributes = userAttributes {
            var userAttributesContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .userAttributes)
            for (dictKey0, mapoflistof__string0) in userAttributes {
                try userAttributesContainer.encode(mapoflistof__string0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let userId = userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userAttributesContainer = try containerValues.decodeIfPresent([String:[String]?].self, forKey: .userAttributes)
        var userAttributesDecoded0: [String:[String]?]? = nil
        if let userAttributesContainer = userAttributesContainer {
            userAttributesDecoded0 = [String:[String]?]()
            for (key0, listof__string0) in userAttributesContainer {
                var listof__string0Decoded0 = [String]()
                if let listof__string0 = listof__string0 {
                    for string1 in listof__string0 {
                        listof__string0Decoded0.append(string1)
                    }
                }
                userAttributesDecoded0?[key0] = listof__string0Decoded0
            }
        }
        userAttributes = userAttributesDecoded0
        let userIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userId)
        userId = userIdDecoded
    }
}
