// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.</p>
public struct RecommenderConfigurationResponse: Equatable {
    /// <p>A map that defines 1-10 custom endpoint or user attributes, depending on the value for the RecommendationProviderIdType property. Each of these attributes temporarily stores a recommended item that's retrieved from the recommender model and sent to an AWS Lambda function for additional processing. Each attribute can be used as a message variable in a message template.</p> <p>This value is null if the configuration doesn't invoke an AWS Lambda function (RecommendationTransformerUri) to perform additional processing of recommendation data.</p>
    public let attributes: [String:String]?
    /// <p>The date, in extended ISO 8601 format, when the configuration was created for the recommender model.</p>
    public let creationDate: String?
    /// <p>The custom description of the configuration for the recommender model.</p>
    public let description: String?
    /// <p>The unique identifier for the recommender model configuration.</p>
    public let id: String?
    /// <p>The date, in extended ISO 8601 format, when the configuration for the recommender model was last modified.</p>
    public let lastModifiedDate: String?
    /// <p>The custom name of the configuration for the recommender model.</p>
    public let name: String?
    /// <p>The type of Amazon Pinpoint ID that's associated with unique user IDs in the recommender model. This value enables the model to use attribute and event data that’s specific to a particular endpoint or user in an Amazon Pinpoint application. Possible values are:</p> <ul><li><p>PINPOINT_ENDPOINT_ID - Each user in the model is associated with a particular endpoint in Amazon Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint. This is the default value.</p></li> <li><p>PINPOINT_USER_ID - Each user in the model is associated with a particular user and endpoint in Amazon Pinpoint. The data is correlated based on user IDs in Amazon Pinpoint. If this value is specified, an endpoint definition in Amazon Pinpoint has to specify both a user ID (UserId) and an endpoint ID. Otherwise, messages won’t be sent to the user's endpoint.</p></li></ul>
    public let recommendationProviderIdType: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation data from the recommender model.</p>
    public let recommendationProviderRoleArn: String?
    /// <p>The Amazon Resource Name (ARN) of the recommender model that Amazon Pinpoint retrieves the recommendation data from. This value is the ARN of an Amazon Personalize campaign.</p>
    public let recommendationProviderUri: String?
    /// <p>The name or Amazon Resource Name (ARN) of the AWS Lambda function that Amazon Pinpoint invokes to perform additional processing of recommendation data that it retrieves from the recommender model.</p>
    public let recommendationTransformerUri: String?
    /// <p>The custom display name for the standard endpoint or user attribute (RecommendationItems) that temporarily stores recommended items for each endpoint or user, depending on the value for the RecommendationProviderIdType property. This name appears in the <b>Attribute finder</b> of the template editor on the Amazon Pinpoint console.</p> <p>This value is null if the configuration doesn't invoke an AWS Lambda function (RecommendationTransformerUri) to perform additional processing of recommendation data.</p>
    public let recommendationsDisplayName: String?
    /// <p>The number of recommended items that are retrieved from the model for each endpoint or user, depending on the value for the RecommendationProviderIdType property. This number determines how many recommended items are available for use in message variables.</p>
    public let recommendationsPerMessage: Int

    public init (
        attributes: [String:String]? = nil,
        creationDate: String? = nil,
        description: String? = nil,
        id: String? = nil,
        lastModifiedDate: String? = nil,
        name: String? = nil,
        recommendationProviderIdType: String? = nil,
        recommendationProviderRoleArn: String? = nil,
        recommendationProviderUri: String? = nil,
        recommendationTransformerUri: String? = nil,
        recommendationsDisplayName: String? = nil,
        recommendationsPerMessage: Int = 0
    )
    {
        self.attributes = attributes
        self.creationDate = creationDate
        self.description = description
        self.id = id
        self.lastModifiedDate = lastModifiedDate
        self.name = name
        self.recommendationProviderIdType = recommendationProviderIdType
        self.recommendationProviderRoleArn = recommendationProviderRoleArn
        self.recommendationProviderUri = recommendationProviderUri
        self.recommendationTransformerUri = recommendationTransformerUri
        self.recommendationsDisplayName = recommendationsDisplayName
        self.recommendationsPerMessage = recommendationsPerMessage
    }
}
