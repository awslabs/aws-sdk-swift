// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CampaignLimits: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case daily = "Daily"
        case maximumDuration = "MaximumDuration"
        case messagesPerSecond = "MessagesPerSecond"
        case total = "Total"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if daily != 0 {
            try encodeContainer.encode(daily, forKey: .daily)
        }
        if maximumDuration != 0 {
            try encodeContainer.encode(maximumDuration, forKey: .maximumDuration)
        }
        if messagesPerSecond != 0 {
            try encodeContainer.encode(messagesPerSecond, forKey: .messagesPerSecond)
        }
        if total != 0 {
            try encodeContainer.encode(total, forKey: .total)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dailyDecoded = try containerValues.decode(Int.self, forKey: .daily)
        daily = dailyDecoded
        let maximumDurationDecoded = try containerValues.decode(Int.self, forKey: .maximumDuration)
        maximumDuration = maximumDurationDecoded
        let messagesPerSecondDecoded = try containerValues.decode(Int.self, forKey: .messagesPerSecond)
        messagesPerSecond = messagesPerSecondDecoded
        let totalDecoded = try containerValues.decode(Int.self, forKey: .total)
        total = totalDecoded
    }
}
