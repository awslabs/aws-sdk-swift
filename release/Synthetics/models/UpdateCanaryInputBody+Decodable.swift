// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateCanaryInputBody: Equatable {
    public let code: CanaryCodeInput?
    public let executionRoleArn: String?
    public let runtimeVersion: String?
    public let schedule: CanaryScheduleInput?
    public let runConfig: CanaryRunConfigInput?
    public let successRetentionPeriodInDays: Int?
    public let failureRetentionPeriodInDays: Int?
    public let vpcConfig: VpcConfigInput?
}

extension UpdateCanaryInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case code = "Code"
        case executionRoleArn = "ExecutionRoleArn"
        case failureRetentionPeriodInDays = "FailureRetentionPeriodInDays"
        case runConfig = "RunConfig"
        case runtimeVersion = "RuntimeVersion"
        case schedule = "Schedule"
        case successRetentionPeriodInDays = "SuccessRetentionPeriodInDays"
        case vpcConfig = "VpcConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeDecoded = try containerValues.decodeIfPresent(CanaryCodeInput.self, forKey: .code)
        code = codeDecoded
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let runtimeVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .runtimeVersion)
        runtimeVersion = runtimeVersionDecoded
        let scheduleDecoded = try containerValues.decodeIfPresent(CanaryScheduleInput.self, forKey: .schedule)
        schedule = scheduleDecoded
        let runConfigDecoded = try containerValues.decodeIfPresent(CanaryRunConfigInput.self, forKey: .runConfig)
        runConfig = runConfigDecoded
        let successRetentionPeriodInDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .successRetentionPeriodInDays)
        successRetentionPeriodInDays = successRetentionPeriodInDaysDecoded
        let failureRetentionPeriodInDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .failureRetentionPeriodInDays)
        failureRetentionPeriodInDays = failureRetentionPeriodInDaysDecoded
        let vpcConfigDecoded = try containerValues.decodeIfPresent(VpcConfigInput.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
    }
}
