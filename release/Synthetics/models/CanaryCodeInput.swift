// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Use this structure to input your script code for the canary. This structure contains the
///          Lambda handler with the location where the canary should start running the script. If the
///          script is stored in an S3 bucket, the bucket name, key, and version are also included. If
///          the script was passed into the canary directly, the script code is contained in the value
///          of <code>Zipfile</code>. </p>
public struct CanaryCodeInput: Equatable {
    /// <p>The entry point to use for the source code when running the canary. This value must end
    ///          with the string <code>.handler</code>.</p>
    public let handler: String?
    /// <p>If your canary script is located in S3, specify the full bucket name here. The bucket
    ///          must already exist. Specify the full bucket name, including <code>s3://</code> as the
    ///          start of the bucket name.</p>
    public let s3Bucket: String?
    /// <p>The S3 key of your script. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html">Working with Amazon S3 Objects</a>.</p>
    public let s3Key: String?
    /// <p>The S3 version ID of your script.</p>
    public let s3Version: String?
    /// <p>If you input your canary script directly into the canary instead of referring to an S3
    ///          location, the value of this parameter is the .zip file that contains the script. It can be
    ///          up to 5 MB.</p>
    public let zipFile: Data?

    public init (
        handler: String? = nil,
        s3Bucket: String? = nil,
        s3Key: String? = nil,
        s3Version: String? = nil,
        zipFile: Data? = nil
    )
    {
        self.handler = handler
        self.s3Bucket = s3Bucket
        self.s3Key = s3Key
        self.s3Version = s3Version
        self.zipFile = zipFile
    }
}
