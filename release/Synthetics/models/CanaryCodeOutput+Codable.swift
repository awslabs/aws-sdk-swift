// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CanaryCodeOutput: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case handler = "Handler"
        case sourceLocationArn = "SourceLocationArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let handler = handler {
            try encodeContainer.encode(handler, forKey: .handler)
        }
        if let sourceLocationArn = sourceLocationArn {
            try encodeContainer.encode(sourceLocationArn, forKey: .sourceLocationArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceLocationArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceLocationArn)
        sourceLocationArn = sourceLocationArnDecoded
        let handlerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .handler)
        handler = handlerDecoded
    }
}
