// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRuntimeVersionsOutputBody: Equatable {
    public let runtimeVersions: [RuntimeVersion]?
    public let nextToken: String?
}

extension DescribeRuntimeVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case runtimeVersions = "RuntimeVersions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let runtimeVersionsContainer = try containerValues.decodeIfPresent([RuntimeVersion].self, forKey: .runtimeVersions)
        var runtimeVersionsDecoded0:[RuntimeVersion]? = nil
        if let runtimeVersionsContainer = runtimeVersionsContainer {
            runtimeVersionsDecoded0 = [RuntimeVersion]()
            for structure0 in runtimeVersionsContainer {
                runtimeVersionsDecoded0?.append(structure0)
            }
        }
        runtimeVersions = runtimeVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
