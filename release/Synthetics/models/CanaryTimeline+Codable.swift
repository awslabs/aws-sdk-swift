// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CanaryTimeline: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case created = "Created"
        case lastModified = "LastModified"
        case lastStarted = "LastStarted"
        case lastStopped = "LastStopped"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let created = created {
            try encodeContainer.encode(created.timeIntervalSince1970, forKey: .created)
        }
        if let lastModified = lastModified {
            try encodeContainer.encode(lastModified.timeIntervalSince1970, forKey: .lastModified)
        }
        if let lastStarted = lastStarted {
            try encodeContainer.encode(lastStarted.timeIntervalSince1970, forKey: .lastStarted)
        }
        if let lastStopped = lastStopped {
            try encodeContainer.encode(lastStopped.timeIntervalSince1970, forKey: .lastStopped)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let createdDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .created)
        created = createdDecoded
        let lastModifiedDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModified)
        lastModified = lastModifiedDecoded
        let lastStartedDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastStarted)
        lastStarted = lastStartedDecoded
        let lastStoppedDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastStopped)
        lastStopped = lastStoppedDecoded
    }
}
