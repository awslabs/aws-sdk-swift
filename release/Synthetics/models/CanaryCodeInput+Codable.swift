// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CanaryCodeInput: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case handler = "Handler"
        case s3Bucket = "S3Bucket"
        case s3Key = "S3Key"
        case s3Version = "S3Version"
        case zipFile = "ZipFile"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let handler = handler {
            try encodeContainer.encode(handler, forKey: .handler)
        }
        if let s3Bucket = s3Bucket {
            try encodeContainer.encode(s3Bucket, forKey: .s3Bucket)
        }
        if let s3Key = s3Key {
            try encodeContainer.encode(s3Key, forKey: .s3Key)
        }
        if let s3Version = s3Version {
            try encodeContainer.encode(s3Version, forKey: .s3Version)
        }
        if let zipFile = zipFile {
            try encodeContainer.encode(zipFile.base64EncodedString(), forKey: .zipFile)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3BucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let s3KeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Key)
        s3Key = s3KeyDecoded
        let s3VersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Version)
        s3Version = s3VersionDecoded
        let zipFileDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .zipFile)
        zipFile = zipFileDecoded
        let handlerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .handler)
        handler = handlerDecoded
    }
}
