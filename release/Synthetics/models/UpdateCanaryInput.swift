// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateCanaryInput: Equatable {
    /// <p>A structure that includes the entry point from which the canary should start
    ///          running your script. If the script is stored in
    ///          an S3 bucket, the bucket name, key, and version are also included.
    ///       </p>
    public let code: CanaryCodeInput?
    /// <p>The ARN of the IAM role to be used to run the canary. This role must already exist,
    ///          and must include <code>lambda.amazonaws.com</code> as a principal in the trust
    ///          policy. The role must also have the following permissions:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>s3:PutObject</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>s3:GetBucketLocation</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>s3:ListAllMyBuckets</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>cloudwatch:PutMetricData</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>logs:CreateLogGroup</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>logs:CreateLogStream</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>logs:CreateLogStream</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let executionRoleArn: String?
    /// <p>The number of days to retain data about failed runs of this canary.</p>
    public let failureRetentionPeriodInDays: Int?
    /// <p>The name of the canary that you want to update. To find the names of your
    ///          canaries, use <a href="https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html">DescribeCanaries</a>.</p>
    ///          <p>You cannot change the name of a canary that has already been created.</p>
    public let name: String?
    /// <p>A structure that contains the timeout value that is used for each individual run of the
    ///          canary.</p>
    public let runConfig: CanaryRunConfigInput?
    /// <p>Specifies the runtime version to use for the canary.
    ///          For a list of valid runtime versions and for more information about
    ///          runtime versions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html">
    ///             Canary Runtime Versions</a>.</p>
    public let runtimeVersion: String?
    /// <p>A structure that contains information about how often the canary is to run, and when
    ///          these runs are to stop.</p>
    public let schedule: CanaryScheduleInput?
    /// <p>The number of days to retain data about successful runs of this canary.</p>
    public let successRetentionPeriodInDays: Int?
    /// <p>If this canary is to test an endpoint in a VPC, this structure contains
    ///          information about the subnet and security groups of the VPC endpoint.
    ///          For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html">
    ///             Running a Canary in a VPC</a>.</p>
    public let vpcConfig: VpcConfigInput?

    public init (
        code: CanaryCodeInput? = nil,
        executionRoleArn: String? = nil,
        failureRetentionPeriodInDays: Int? = nil,
        name: String? = nil,
        runConfig: CanaryRunConfigInput? = nil,
        runtimeVersion: String? = nil,
        schedule: CanaryScheduleInput? = nil,
        successRetentionPeriodInDays: Int? = nil,
        vpcConfig: VpcConfigInput? = nil
    )
    {
        self.code = code
        self.executionRoleArn = executionRoleArn
        self.failureRetentionPeriodInDays = failureRetentionPeriodInDays
        self.name = name
        self.runConfig = runConfig
        self.runtimeVersion = runtimeVersion
        self.schedule = schedule
        self.successRetentionPeriodInDays = successRetentionPeriodInDays
        self.vpcConfig = vpcConfig
    }
}
