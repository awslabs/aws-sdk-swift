// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJournalS3ExportsOutputBody: Equatable {
    public let journalS3Exports: [JournalS3ExportDescription]?
    public let nextToken: String?
}

extension ListJournalS3ExportsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case journalS3Exports = "JournalS3Exports"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let journalS3ExportsContainer = try containerValues.decodeIfPresent([JournalS3ExportDescription].self, forKey: .journalS3Exports)
        var journalS3ExportsDecoded0:[JournalS3ExportDescription]? = nil
        if let journalS3ExportsContainer = journalS3ExportsContainer {
            journalS3ExportsDecoded0 = [JournalS3ExportDescription]()
            for structure0 in journalS3ExportsContainer {
                journalS3ExportsDecoded0?.append(structure0)
            }
        }
        journalS3Exports = journalS3ExportsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
