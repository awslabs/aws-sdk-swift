// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDigestOutputBody: Equatable {
    public let digest: Data?
    public let digestTipAddress: ValueHolder?
}

extension GetDigestOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case digest = "Digest"
        case digestTipAddress = "DigestTipAddress"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let digestDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .digest)
        digest = digestDecoded
        let digestTipAddressDecoded = try containerValues.decodeIfPresent(ValueHolder.self, forKey: .digestTipAddress)
        digestTipAddress = digestTipAddressDecoded
    }
}
