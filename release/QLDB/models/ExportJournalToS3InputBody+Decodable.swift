// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportJournalToS3InputBody: Equatable {
    public let inclusiveStartTime: Date?
    public let exclusiveEndTime: Date?
    public let s3ExportConfiguration: S3ExportConfiguration?
    public let roleArn: String?
}

extension ExportJournalToS3InputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveEndTime = "ExclusiveEndTime"
        case inclusiveStartTime = "InclusiveStartTime"
        case roleArn = "RoleArn"
        case s3ExportConfiguration = "S3ExportConfiguration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inclusiveStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .inclusiveStartTime)
        inclusiveStartTime = inclusiveStartTimeDecoded
        let exclusiveEndTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .exclusiveEndTime)
        exclusiveEndTime = exclusiveEndTimeDecoded
        let s3ExportConfigurationDecoded = try containerValues.decodeIfPresent(S3ExportConfiguration.self, forKey: .s3ExportConfiguration)
        s3ExportConfiguration = s3ExportConfigurationDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
