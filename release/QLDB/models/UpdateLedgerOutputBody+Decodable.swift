// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateLedgerOutputBody: Equatable {
    public let name: String?
    public let arn: String?
    public let state: LedgerState?
    public let creationDateTime: Date?
    public let deletionProtection: Bool?
}

extension UpdateLedgerOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn = "Arn"
        case creationDateTime = "CreationDateTime"
        case deletionProtection = "DeletionProtection"
        case name = "Name"
        case state = "State"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let stateDecoded = try containerValues.decodeIfPresent(LedgerState.self, forKey: .state)
        state = stateDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
        let deletionProtectionDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .deletionProtection)
        deletionProtection = deletionProtectionDecoded
    }
}
