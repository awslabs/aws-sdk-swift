// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3EncryptionConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case kmsKeyArn = "KmsKeyArn"
        case objectEncryptionType = "ObjectEncryptionType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let kmsKeyArn = kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
        if let objectEncryptionType = objectEncryptionType {
            try encodeContainer.encode(objectEncryptionType.rawValue, forKey: .objectEncryptionType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectEncryptionTypeDecoded = try containerValues.decodeIfPresent(S3ObjectEncryptionType.self, forKey: .objectEncryptionType)
        objectEncryptionType = objectEncryptionTypeDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
