// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBlockOutputBody: Equatable {
    public let block: ValueHolder?
    public let proof: ValueHolder?
}

extension GetBlockOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case block = "Block"
        case proof = "Proof"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blockDecoded = try containerValues.decodeIfPresent(ValueHolder.self, forKey: .block)
        block = blockDecoded
        let proofDecoded = try containerValues.decodeIfPresent(ValueHolder.self, forKey: .proof)
        proof = proofDecoded
    }
}
