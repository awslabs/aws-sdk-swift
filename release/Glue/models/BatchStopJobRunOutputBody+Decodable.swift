// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchStopJobRunOutputBody: Equatable {
    public let successfulSubmissions: [BatchStopJobRunSuccessfulSubmission]?
    public let errors: [BatchStopJobRunError]?
}

extension BatchStopJobRunOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case errors = "Errors"
        case successfulSubmissions = "SuccessfulSubmissions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let successfulSubmissionsContainer = try containerValues.decodeIfPresent([BatchStopJobRunSuccessfulSubmission].self, forKey: .successfulSubmissions)
        var successfulSubmissionsDecoded0:[BatchStopJobRunSuccessfulSubmission]? = nil
        if let successfulSubmissionsContainer = successfulSubmissionsContainer {
            successfulSubmissionsDecoded0 = [BatchStopJobRunSuccessfulSubmission]()
            for structure0 in successfulSubmissionsContainer {
                successfulSubmissionsDecoded0?.append(structure0)
            }
        }
        successfulSubmissions = successfulSubmissionsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([BatchStopJobRunError].self, forKey: .errors)
        var errorsDecoded0:[BatchStopJobRunError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [BatchStopJobRunError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
