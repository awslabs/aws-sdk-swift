// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMappingOutputBody: Equatable {
    public let mapping: [MappingEntry]?
}

extension GetMappingOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case mapping = "Mapping"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mappingContainer = try containerValues.decodeIfPresent([MappingEntry].self, forKey: .mapping)
        var mappingDecoded0:[MappingEntry]? = nil
        if let mappingContainer = mappingContainer {
            mappingDecoded0 = [MappingEntry]()
            for structure0 in mappingContainer {
                mappingDecoded0?.append(structure0)
            }
        }
        mapping = mappingDecoded0
    }
}
