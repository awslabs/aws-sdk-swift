// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPartitionIndexesOutputBody: Equatable {
    public let partitionIndexDescriptorList: [PartitionIndexDescriptor]?
    public let nextToken: String?
}

extension GetPartitionIndexesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case partitionIndexDescriptorList = "PartitionIndexDescriptorList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionIndexDescriptorListContainer = try containerValues.decodeIfPresent([PartitionIndexDescriptor].self, forKey: .partitionIndexDescriptorList)
        var partitionIndexDescriptorListDecoded0:[PartitionIndexDescriptor]? = nil
        if let partitionIndexDescriptorListContainer = partitionIndexDescriptorListContainer {
            partitionIndexDescriptorListDecoded0 = [PartitionIndexDescriptor]()
            for structure0 in partitionIndexDescriptorListContainer {
                partitionIndexDescriptorListDecoded0?.append(structure0)
            }
        }
        partitionIndexDescriptorList = partitionIndexDescriptorListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
