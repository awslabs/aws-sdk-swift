// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TaskRunSortCriteria: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case column = "Column"
        case sortDirection = "SortDirection"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let column = column {
            try encodeContainer.encode(column.rawValue, forKey: .column)
        }
        if let sortDirection = sortDirection {
            try encodeContainer.encode(sortDirection.rawValue, forKey: .sortDirection)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnDecoded = try containerValues.decodeIfPresent(TaskRunSortColumnType.self, forKey: .column)
        column = columnDecoded
        let sortDirectionDecoded = try containerValues.decodeIfPresent(SortDirectionType.self, forKey: .sortDirection)
        sortDirection = sortDirectionDecoded
    }
}
