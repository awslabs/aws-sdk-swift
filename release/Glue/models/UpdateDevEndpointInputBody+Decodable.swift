// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDevEndpointInputBody: Equatable {
    public let endpointName: String?
    public let publicKey: String?
    public let addPublicKeys: [String]?
    public let deletePublicKeys: [String]?
    public let customLibraries: DevEndpointCustomLibraries?
    public let updateEtlLibraries: Bool
    public let deleteArguments: [String]?
    public let addArguments: [String:String]?
}

extension UpdateDevEndpointInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addArguments = "AddArguments"
        case addPublicKeys = "AddPublicKeys"
        case customLibraries = "CustomLibraries"
        case deleteArguments = "DeleteArguments"
        case deletePublicKeys = "DeletePublicKeys"
        case endpointName = "EndpointName"
        case publicKey = "PublicKey"
        case updateEtlLibraries = "UpdateEtlLibraries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let publicKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .publicKey)
        publicKey = publicKeyDecoded
        let addPublicKeysContainer = try containerValues.decodeIfPresent([String].self, forKey: .addPublicKeys)
        var addPublicKeysDecoded0:[String]? = nil
        if let addPublicKeysContainer = addPublicKeysContainer {
            addPublicKeysDecoded0 = [String]()
            for string0 in addPublicKeysContainer {
                addPublicKeysDecoded0?.append(string0)
            }
        }
        addPublicKeys = addPublicKeysDecoded0
        let deletePublicKeysContainer = try containerValues.decodeIfPresent([String].self, forKey: .deletePublicKeys)
        var deletePublicKeysDecoded0:[String]? = nil
        if let deletePublicKeysContainer = deletePublicKeysContainer {
            deletePublicKeysDecoded0 = [String]()
            for string0 in deletePublicKeysContainer {
                deletePublicKeysDecoded0?.append(string0)
            }
        }
        deletePublicKeys = deletePublicKeysDecoded0
        let customLibrariesDecoded = try containerValues.decodeIfPresent(DevEndpointCustomLibraries.self, forKey: .customLibraries)
        customLibraries = customLibrariesDecoded
        let updateEtlLibrariesDecoded = try containerValues.decode(Bool.self, forKey: .updateEtlLibraries)
        updateEtlLibraries = updateEtlLibrariesDecoded
        let deleteArgumentsContainer = try containerValues.decodeIfPresent([String].self, forKey: .deleteArguments)
        var deleteArgumentsDecoded0:[String]? = nil
        if let deleteArgumentsContainer = deleteArgumentsContainer {
            deleteArgumentsDecoded0 = [String]()
            for string0 in deleteArgumentsContainer {
                deleteArgumentsDecoded0?.append(string0)
            }
        }
        deleteArguments = deleteArgumentsDecoded0
        let addArgumentsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .addArguments)
        var addArgumentsDecoded0: [String:String]? = nil
        if let addArgumentsContainer = addArgumentsContainer {
            addArgumentsDecoded0 = [String:String]()
            for (key0, genericstring0) in addArgumentsContainer {
                addArgumentsDecoded0?[key0] = genericstring0
            }
        }
        addArguments = addArgumentsDecoded0
    }
}
