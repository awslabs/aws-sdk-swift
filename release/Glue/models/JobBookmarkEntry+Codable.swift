// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobBookmarkEntry: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attempt = "Attempt"
        case jobBookmark = "JobBookmark"
        case jobName = "JobName"
        case previousRunId = "PreviousRunId"
        case run = "Run"
        case runId = "RunId"
        case version = "Version"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if attempt != 0 {
            try encodeContainer.encode(attempt, forKey: .attempt)
        }
        if let jobBookmark = jobBookmark {
            try encodeContainer.encode(jobBookmark, forKey: .jobBookmark)
        }
        if let jobName = jobName {
            try encodeContainer.encode(jobName, forKey: .jobName)
        }
        if let previousRunId = previousRunId {
            try encodeContainer.encode(previousRunId, forKey: .previousRunId)
        }
        if run != 0 {
            try encodeContainer.encode(run, forKey: .run)
        }
        if let runId = runId {
            try encodeContainer.encode(runId, forKey: .runId)
        }
        if version != 0 {
            try encodeContainer.encode(version, forKey: .version)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let versionDecoded = try containerValues.decode(Int.self, forKey: .version)
        version = versionDecoded
        let runDecoded = try containerValues.decode(Int.self, forKey: .run)
        run = runDecoded
        let attemptDecoded = try containerValues.decode(Int.self, forKey: .attempt)
        attempt = attemptDecoded
        let previousRunIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .previousRunId)
        previousRunId = previousRunIdDecoded
        let runIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .runId)
        runId = runIdDecoded
        let jobBookmarkDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobBookmark)
        jobBookmark = jobBookmarkDecoded
    }
}
