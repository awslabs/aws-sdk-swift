// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A workflow represents a flow in which AWS Glue components should be executed to complete a logical
///       task.</p>
public struct Workflow: Equatable {
    /// <p>The date and time when the workflow was created.</p>
    public let createdOn: Date?
    /// <p>A collection of properties to be used as part of each execution of the workflow.</p>
    public let defaultRunProperties: [String:String]?
    /// <p>A description of the workflow.</p>
    public let description: String?
    /// <p>The graph representing all the AWS Glue components that belong to the workflow as nodes and directed
    ///       connections between them as edges.</p>
    public let graph: WorkflowGraph?
    /// <p>The date and time when the workflow was last modified.</p>
    public let lastModifiedOn: Date?
    /// <p>The information about the last execution of the workflow.</p>
    public let lastRun: WorkflowRun?
    /// <p>You can use this parameter to prevent unwanted multiple updates to data, to control costs, or in some cases, to prevent exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.</p>
    public let maxConcurrentRuns: Int?
    /// <p>The name of the workflow representing the flow.</p>
    public let name: String?

    public init (
        createdOn: Date? = nil,
        defaultRunProperties: [String:String]? = nil,
        description: String? = nil,
        graph: WorkflowGraph? = nil,
        lastModifiedOn: Date? = nil,
        lastRun: WorkflowRun? = nil,
        maxConcurrentRuns: Int? = nil,
        name: String? = nil
    )
    {
        self.createdOn = createdOn
        self.defaultRunProperties = defaultRunProperties
        self.description = description
        self.graph = graph
        self.lastModifiedOn = lastModifiedOn
        self.lastRun = lastRun
        self.maxConcurrentRuns = maxConcurrentRuns
        self.name = name
    }
}
