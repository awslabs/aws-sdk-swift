// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTableInputBody: Equatable {
    public let catalogId: String?
    public let databaseName: String?
    public let tableInput: TableInput?
    public let skipArchive: Bool?
}

extension UpdateTableInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case skipArchive = "SkipArchive"
        case tableInput = "TableInput"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tableInputDecoded = try containerValues.decodeIfPresent(TableInput.self, forKey: .tableInput)
        tableInput = tableInputDecoded
        let skipArchiveDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .skipArchive)
        skipArchive = skipArchiveDecoded
    }
}
