// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateDevEndpointOutput: Equatable {
    /// <p>The map of arguments used to configure this <code>DevEndpoint</code>.</p>
    /// 	
    /// 	        <p>Valid arguments are:</p>
    /// 	        <ul>
    ///             <li>
    ///                <p>
    ///                   <code>"--enable-glue-datacatalog": ""</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"GLUE_PYTHON_VERSION": "3"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>"GLUE_PYTHON_VERSION": "2"</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    /// 	
    ///          <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>
    public let arguments: [String:String]?
    /// <p>The AWS Availability Zone where this <code>DevEndpoint</code> is located.</p>
    public let availabilityZone: String?
    /// <p>The point in time at which this <code>DevEndpoint</code> was created.</p>
    public let createdTimestamp: Date?
    /// <p>The name assigned to the new <code>DevEndpoint</code>.</p>
    public let endpointName: String?
    /// <p>Path to one or more Java <code>.jar</code> files in an S3 bucket that will be loaded in
    ///       your <code>DevEndpoint</code>.</p>
    public let extraJarsS3Path: String?
    /// <p>The paths to one or more Python libraries in an S3 bucket that will be loaded in your
    ///         <code>DevEndpoint</code>.</p>
    public let extraPythonLibsS3Path: String?
    /// <p>The reason for a current failure in this <code>DevEndpoint</code>.</p>
    public let failureReason: String?
    /// <p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p>
    public let glueVersion: String?
    /// <p>The number of AWS Glue Data Processing Units (DPUs) allocated to this DevEndpoint.</p>
    public let numberOfNodes: Int
    /// <p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p>
    public let numberOfWorkers: Int?
    /// <p>The Amazon Resource Name (ARN) of the role assigned to the new
    ///       <code>DevEndpoint</code>.</p>
    public let roleArn: String?
    /// <p>The name of the <code>SecurityConfiguration</code> structure being used with this
    ///         <code>DevEndpoint</code>.</p>
    public let securityConfiguration: String?
    /// <p>The security groups assigned to the new <code>DevEndpoint</code>.</p>
    public let securityGroupIds: [String]?
    /// <p>The current status of the new <code>DevEndpoint</code>.</p>
    public let status: String?
    /// <p>The subnet ID assigned to the new <code>DevEndpoint</code>.</p>
    public let subnetId: String?
    /// <p>The ID of the virtual private cloud (VPC) used by this <code>DevEndpoint</code>.</p>
    public let vpcId: String?
    /// <p>The type of predefined worker that is allocated to the development endpoint. May be a value of Standard, G.1X, or G.2X.</p>
    public let workerType: WorkerType?
    /// <p>The address of the YARN endpoint used by this <code>DevEndpoint</code>.</p>
    public let yarnEndpointAddress: String?
    /// <p>The Apache Zeppelin port for the remote Apache Spark interpreter.</p>
    public let zeppelinRemoteSparkInterpreterPort: Int

    public init (
        arguments: [String:String]? = nil,
        availabilityZone: String? = nil,
        createdTimestamp: Date? = nil,
        endpointName: String? = nil,
        extraJarsS3Path: String? = nil,
        extraPythonLibsS3Path: String? = nil,
        failureReason: String? = nil,
        glueVersion: String? = nil,
        numberOfNodes: Int = 0,
        numberOfWorkers: Int? = nil,
        roleArn: String? = nil,
        securityConfiguration: String? = nil,
        securityGroupIds: [String]? = nil,
        status: String? = nil,
        subnetId: String? = nil,
        vpcId: String? = nil,
        workerType: WorkerType? = nil,
        yarnEndpointAddress: String? = nil,
        zeppelinRemoteSparkInterpreterPort: Int = 0
    )
    {
        self.arguments = arguments
        self.availabilityZone = availabilityZone
        self.createdTimestamp = createdTimestamp
        self.endpointName = endpointName
        self.extraJarsS3Path = extraJarsS3Path
        self.extraPythonLibsS3Path = extraPythonLibsS3Path
        self.failureReason = failureReason
        self.glueVersion = glueVersion
        self.numberOfNodes = numberOfNodes
        self.numberOfWorkers = numberOfWorkers
        self.roleArn = roleArn
        self.securityConfiguration = securityConfiguration
        self.securityGroupIds = securityGroupIds
        self.status = status
        self.subnetId = subnetId
        self.vpcId = vpcId
        self.workerType = workerType
        self.yarnEndpointAddress = yarnEndpointAddress
        self.zeppelinRemoteSparkInterpreterPort = zeppelinRemoteSparkInterpreterPort
    }
}
