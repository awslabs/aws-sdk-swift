// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ResumeWorkflowRunInputBody: Equatable {
    public let name: String?
    public let runId: String?
    public let nodeIds: [String]?
}

extension ResumeWorkflowRunInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case nodeIds = "NodeIds"
        case runId = "RunId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let runIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .runId)
        runId = runIdDecoded
        let nodeIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .nodeIds)
        var nodeIdsDecoded0:[String]? = nil
        if let nodeIdsContainer = nodeIdsContainer {
            nodeIdsDecoded0 = [String]()
            for string0 in nodeIdsContainer {
                nodeIdsDecoded0?.append(string0)
            }
        }
        nodeIds = nodeIdsDecoded0
    }
}
