// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The criteria used to filter the machine learning transforms.</p>
public struct TransformFilterCriteria: Equatable {
    /// <p>The time and date after which the transforms were created.</p>
    public let createdAfter: Date?
    /// <p>The time and date before which the transforms were created.</p>
    public let createdBefore: Date?
    /// <p>This value determines which version of AWS Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9.  For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">AWS Glue Versions</a> in the developer guide.</p>
    public let glueVersion: String?
    /// <p>Filter on transforms last modified after this date.</p>
    public let lastModifiedAfter: Date?
    /// <p>Filter on transforms last modified before this date.</p>
    public let lastModifiedBefore: Date?
    /// <p>A unique transform name that is used to filter the machine learning transforms.</p>
    public let name: String?
    /// <p>Filters on datasets with a specific schema. The <code>Map<Column, Type></code>
    ///       object is an array of key-value pairs representing the schema this transform accepts, where
    ///         <code>Column</code> is the name of a column, and <code>Type</code> is the type of the data
    ///       such as an integer or string. Has an upper bound of 100 columns.</p>
    public let schema: [SchemaColumn]?
    /// <p>Filters the list of machine learning transforms by the last known status of the transforms (to indicate whether a transform can be used or not). One of "NOT_READY", "READY", or "DELETING".</p>
    public let status: TransformStatusType?
    /// <p>The type of machine learning transform that is used to filter the machine learning
    ///       transforms.</p>
    public let transformType: TransformType?

    public init (
        createdAfter: Date? = nil,
        createdBefore: Date? = nil,
        glueVersion: String? = nil,
        lastModifiedAfter: Date? = nil,
        lastModifiedBefore: Date? = nil,
        name: String? = nil,
        schema: [SchemaColumn]? = nil,
        status: TransformStatusType? = nil,
        transformType: TransformType? = nil
    )
    {
        self.createdAfter = createdAfter
        self.createdBefore = createdBefore
        self.glueVersion = glueVersion
        self.lastModifiedAfter = lastModifiedAfter
        self.lastModifiedBefore = lastModifiedBefore
        self.name = name
        self.schema = schema
        self.status = status
        self.transformType = transformType
    }
}
