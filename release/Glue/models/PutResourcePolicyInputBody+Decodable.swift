// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutResourcePolicyInputBody: Equatable {
    public let policyInJson: String?
    public let resourceArn: String?
    public let policyHashCondition: String?
    public let policyExistsCondition: ExistCondition?
    public let enableHybrid: EnableHybridValues?
}

extension PutResourcePolicyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case enableHybrid = "EnableHybrid"
        case policyExistsCondition = "PolicyExistsCondition"
        case policyHashCondition = "PolicyHashCondition"
        case policyInJson = "PolicyInJson"
        case resourceArn = "ResourceArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyInJsonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyInJson)
        policyInJson = policyInJsonDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let policyHashConditionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyHashCondition)
        policyHashCondition = policyHashConditionDecoded
        let policyExistsConditionDecoded = try containerValues.decodeIfPresent(ExistCondition.self, forKey: .policyExistsCondition)
        policyExistsCondition = policyExistsConditionDecoded
        let enableHybridDecoded = try containerValues.decodeIfPresent(EnableHybridValues.self, forKey: .enableHybrid)
        enableHybrid = enableHybridDecoded
    }
}
