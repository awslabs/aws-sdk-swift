// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A descriptor for a partition index in a table.</p>
public struct PartitionIndexDescriptor: Equatable {
    /// <p>A list of errors that can occur when registering partition indexes for an existing table.</p>
    public let backfillErrors: [BackfillError]?
    /// <p>The name of the partition index.</p>
    public let indexName: String?
    /// <p>The status of the partition index. </p>
    /// 	
    /// 	        <p>The possible statuses are:</p>
    /// 	        <ul>
    ///             <li>
    ///                <p>CREATING: The index is being created. When an index is in a CREATING state, the index or its table cannot be deleted.</p>
    ///             </li>
    ///             <li>
    ///                <p>ACTIVE: The index creation succeeds.</p>
    ///             </li>
    ///             <li>
    ///                <p>FAILED: The index creation fails. </p>
    ///             </li>
    ///             <li>
    ///                <p>DELETING: The index is deleted from the list of indexes.</p>
    ///             </li>
    ///          </ul>
    public let indexStatus: PartitionIndexStatus?
    /// <p>A list of one or more keys, as <code>KeySchemaElement</code> structures, for the partition index.</p>
    public let keys: [KeySchemaElement]?

    public init (
        backfillErrors: [BackfillError]? = nil,
        indexName: String? = nil,
        indexStatus: PartitionIndexStatus? = nil,
        keys: [KeySchemaElement]? = nil
    )
    {
        self.backfillErrors = backfillErrors
        self.indexName = indexName
        self.indexStatus = indexStatus
        self.keys = keys
    }
}
