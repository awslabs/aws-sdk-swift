// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateWorkflowInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let defaultRunProperties: [String:String]?
    public let tags: [String:String]?
    public let maxConcurrentRuns: Int?
}

extension CreateWorkflowInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case defaultRunProperties = "DefaultRunProperties"
        case description = "Description"
        case maxConcurrentRuns = "MaxConcurrentRuns"
        case name = "Name"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let defaultRunPropertiesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .defaultRunProperties)
        var defaultRunPropertiesDecoded0: [String:String]? = nil
        if let defaultRunPropertiesContainer = defaultRunPropertiesContainer {
            defaultRunPropertiesDecoded0 = [String:String]()
            for (key0, genericstring0) in defaultRunPropertiesContainer {
                defaultRunPropertiesDecoded0?[key0] = genericstring0
            }
        }
        defaultRunProperties = defaultRunPropertiesDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let maxConcurrentRunsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxConcurrentRuns)
        maxConcurrentRuns = maxConcurrentRunsDecoded
    }
}
