// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateMLTransformInput: Equatable {
    /// <p>A description of the machine learning transform that is being defined. The default is an
    ///       empty string.</p>
    public let description: String?
    /// <p>This value determines which version of AWS Glue this machine learning transform is compatible with. Glue 1.0 is recommended for most customers. If the value is not set, the Glue compatibility defaults to Glue 0.9.  For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/release-notes.html#release-notes-versions">AWS Glue Versions</a> in the developer guide.</p>
    public let glueVersion: String?
    /// <p>A list of AWS Glue table definitions used by the transform.</p>
    public let inputRecordTables: [GlueTable]?
    /// <p>The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from 2 to 100 DPUs; the default is 10. A DPU is a relative measure of
    ///       processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory. For more
    ///       information, see the <a href="https://aws.amazon.com/glue/pricing/">AWS Glue pricing
    ///         page</a>. </p>
    /// 		
    /// 			      <p>
    ///             <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p>
    ///         <ul>
    ///             <li>
    ///                <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p>
    ///             </li>
    ///             <li>
    ///                <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p>
    ///             </li>
    ///             <li>
    ///                <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p>
    ///             </li>
    ///          </ul>
    /// 		
    /// 	        <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>	
    ///
    /// 		
    ///          <p>When the <code>WorkerType</code> field is set to a value other than <code>Standard</code>, the <code>MaxCapacity</code> field is set automatically and becomes read-only.</p>
    public let maxCapacity: Double?
    /// <p>The maximum number of times to retry a task for this transform after a task run fails.</p>
    public let maxRetries: Int?
    /// <p>The unique name that you give the transform when you create it.</p>
    public let name: String?
    /// <p>The number of workers of a defined <code>workerType</code> that are allocated when this task runs.</p>
    /// 	
    /// 		       <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>
    public let numberOfWorkers: Int?
    /// <p>The algorithmic parameters that are specific to the transform type used. Conditionally
    ///       dependent on the transform type.</p>
    public let parameters: TransformParameters?
    /// <p>The name or Amazon Resource Name (ARN) of the IAM role with the required permissions. The required permissions include both AWS Glue service role permissions to AWS Glue resources, and Amazon S3 permissions required by the transform. </p>
    ///
    /// 		       <ul>
    ///             <li>
    ///                <p>This role needs AWS Glue service role permissions to allow access to resources in AWS Glue. See <a href="https://docs.aws.amazon.com/glue/latest/dg/attach-policy-iam-user.html">Attach a Policy to IAM Users That Access AWS Glue</a>.</p>
    ///             </li>
    ///             <li>
    ///                <p>This role needs permission to your Amazon Simple Storage Service (Amazon S3) sources, targets, temporary directory, scripts, and any libraries used by the task run for this transform.</p>
    ///             </li>
    ///          </ul>
    public let role: String?
    /// <p>The tags to use with this machine learning transform. You may use tags to limit access to the machine learning transform. For more information about tags in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a> in the developer guide.</p>
    public let tags: [String:String]?
    /// <p>The timeout of the task run for this transform in minutes. This is the maximum time that a task run for this transform can consume resources before it is terminated and enters <code>TIMEOUT</code> status. The default is 2,880 minutes (48 hours).</p>
    public let timeout: Int?
    /// <p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p>
    public let transformEncryption: TransformEncryption?
    /// <p>The type of predefined worker that is allocated when this task runs. Accepts a value of Standard, G.1X, or G.2X.</p>
    /// 	        <ul>
    ///             <li>
    ///                <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p>
    ///             </li>
    ///             <li>
    ///                <p>For the <code>G.1X</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 64GB disk, and 1 executor per worker.</p>
    ///             </li>
    ///             <li>
    ///                <p>For the <code>G.2X</code> worker type, each worker provides 8 vCPU, 32 GB of memory and a 128GB disk, and 1 executor per worker.</p>
    ///             </li>
    ///          </ul>
    /// 	
    /// 	        <p>
    ///             <code>MaxCapacity</code> is a mutually exclusive option with <code>NumberOfWorkers</code> and <code>WorkerType</code>.</p>
    ///         <ul>
    ///             <li>
    ///                <p>If either <code>NumberOfWorkers</code> or <code>WorkerType</code> is set, then <code>MaxCapacity</code> cannot be set.</p>
    ///             </li>
    ///             <li>
    ///                <p>If <code>MaxCapacity</code> is set then neither <code>NumberOfWorkers</code> or <code>WorkerType</code> can be set.</p>
    ///             </li>
    ///             <li>
    ///                <p>If <code>WorkerType</code> is set, then <code>NumberOfWorkers</code> is required (and vice versa).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>MaxCapacity</code> and <code>NumberOfWorkers</code> must both be at least 1.</p>
    ///             </li>
    ///          </ul>
    public let workerType: WorkerType?

    public init (
        description: String? = nil,
        glueVersion: String? = nil,
        inputRecordTables: [GlueTable]? = nil,
        maxCapacity: Double? = nil,
        maxRetries: Int? = nil,
        name: String? = nil,
        numberOfWorkers: Int? = nil,
        parameters: TransformParameters? = nil,
        role: String? = nil,
        tags: [String:String]? = nil,
        timeout: Int? = nil,
        transformEncryption: TransformEncryption? = nil,
        workerType: WorkerType? = nil
    )
    {
        self.description = description
        self.glueVersion = glueVersion
        self.inputRecordTables = inputRecordTables
        self.maxCapacity = maxCapacity
        self.maxRetries = maxRetries
        self.name = name
        self.numberOfWorkers = numberOfWorkers
        self.parameters = parameters
        self.role = role
        self.tags = tags
        self.timeout = timeout
        self.transformEncryption = transformEncryption
        self.workerType = workerType
    }
}
