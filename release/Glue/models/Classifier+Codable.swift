// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Classifier: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case csvClassifier = "CsvClassifier"
        case grokClassifier = "GrokClassifier"
        case jsonClassifier = "JsonClassifier"
        case xMLClassifier = "XMLClassifier"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let csvClassifier = csvClassifier {
            try encodeContainer.encode(csvClassifier, forKey: .csvClassifier)
        }
        if let grokClassifier = grokClassifier {
            try encodeContainer.encode(grokClassifier, forKey: .grokClassifier)
        }
        if let jsonClassifier = jsonClassifier {
            try encodeContainer.encode(jsonClassifier, forKey: .jsonClassifier)
        }
        if let xMLClassifier = xMLClassifier {
            try encodeContainer.encode(xMLClassifier, forKey: .xMLClassifier)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let grokClassifierDecoded = try containerValues.decodeIfPresent(GrokClassifier.self, forKey: .grokClassifier)
        grokClassifier = grokClassifierDecoded
        let xMLClassifierDecoded = try containerValues.decodeIfPresent(XMLClassifier.self, forKey: .xMLClassifier)
        xMLClassifier = xMLClassifierDecoded
        let jsonClassifierDecoded = try containerValues.decodeIfPresent(JsonClassifier.self, forKey: .jsonClassifier)
        jsonClassifier = jsonClassifierDecoded
        let csvClassifierDecoded = try containerValues.decodeIfPresent(CsvClassifier.self, forKey: .csvClassifier)
        csvClassifier = csvClassifierDecoded
    }
}
