// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TagResourceInputBody: Equatable {
    public let resourceArn: String?
    public let tagsToAdd: [String:String]?
}

extension TagResourceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case resourceArn = "ResourceArn"
        case tagsToAdd = "TagsToAdd"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let tagsToAddContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tagsToAdd)
        var tagsToAddDecoded0: [String:String]? = nil
        if let tagsToAddContainer = tagsToAddContainer {
            tagsToAddDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsToAddContainer {
                tagsToAddDecoded0?[key0] = tagvalue0
            }
        }
        tagsToAdd = tagsToAddDecoded0
    }
}
