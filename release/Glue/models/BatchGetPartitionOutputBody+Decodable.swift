// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetPartitionOutputBody: Equatable {
    public let partitions: [Partition]?
    public let unprocessedKeys: [PartitionValueList]?
}

extension BatchGetPartitionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case partitions = "Partitions"
        case unprocessedKeys = "UnprocessedKeys"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partitionsContainer = try containerValues.decodeIfPresent([Partition].self, forKey: .partitions)
        var partitionsDecoded0:[Partition]? = nil
        if let partitionsContainer = partitionsContainer {
            partitionsDecoded0 = [Partition]()
            for structure0 in partitionsContainer {
                partitionsDecoded0?.append(structure0)
            }
        }
        partitions = partitionsDecoded0
        let unprocessedKeysContainer = try containerValues.decodeIfPresent([PartitionValueList].self, forKey: .unprocessedKeys)
        var unprocessedKeysDecoded0:[PartitionValueList]? = nil
        if let unprocessedKeysContainer = unprocessedKeysContainer {
            unprocessedKeysDecoded0 = [PartitionValueList]()
            for structure0 in unprocessedKeysContainer {
                unprocessedKeysDecoded0?.append(structure0)
            }
        }
        unprocessedKeys = unprocessedKeysDecoded0
    }
}
