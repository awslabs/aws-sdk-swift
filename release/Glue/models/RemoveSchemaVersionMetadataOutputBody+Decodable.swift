// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RemoveSchemaVersionMetadataOutputBody: Equatable {
    public let schemaArn: String?
    public let schemaName: String?
    public let registryName: String?
    public let latestVersion: Bool
    public let versionNumber: Int
    public let schemaVersionId: String?
    public let metadataKey: String?
    public let metadataValue: String?
}

extension RemoveSchemaVersionMetadataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case latestVersion = "LatestVersion"
        case metadataKey = "MetadataKey"
        case metadataValue = "MetadataValue"
        case registryName = "RegistryName"
        case schemaArn = "SchemaArn"
        case schemaName = "SchemaName"
        case schemaVersionId = "SchemaVersionId"
        case versionNumber = "VersionNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaArn)
        schemaArn = schemaArnDecoded
        let schemaNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaName)
        schemaName = schemaNameDecoded
        let registryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .registryName)
        registryName = registryNameDecoded
        let latestVersionDecoded = try containerValues.decode(Bool.self, forKey: .latestVersion)
        latestVersion = latestVersionDecoded
        let versionNumberDecoded = try containerValues.decode(Int.self, forKey: .versionNumber)
        versionNumber = versionNumberDecoded
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let metadataKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metadataKey)
        metadataKey = metadataKeyDecoded
        let metadataValueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metadataValue)
        metadataValue = metadataValueDecoded
    }
}
