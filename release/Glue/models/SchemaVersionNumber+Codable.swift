// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SchemaVersionNumber: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case latestVersion = "LatestVersion"
        case versionNumber = "VersionNumber"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if latestVersion != false {
            try encodeContainer.encode(latestVersion, forKey: .latestVersion)
        }
        if versionNumber != 0 {
            try encodeContainer.encode(versionNumber, forKey: .versionNumber)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let latestVersionDecoded = try containerValues.decode(Bool.self, forKey: .latestVersion)
        latestVersion = latestVersionDecoded
        let versionNumberDecoded = try containerValues.decode(Int.self, forKey: .versionNumber)
        versionNumber = versionNumberDecoded
    }
}
