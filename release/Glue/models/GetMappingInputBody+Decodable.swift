// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMappingInputBody: Equatable {
    public let source: CatalogEntry?
    public let sinks: [CatalogEntry]?
    public let location: Location?
}

extension GetMappingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case location = "Location"
        case sinks = "Sinks"
        case source = "Source"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDecoded = try containerValues.decodeIfPresent(CatalogEntry.self, forKey: .source)
        source = sourceDecoded
        let sinksContainer = try containerValues.decodeIfPresent([CatalogEntry].self, forKey: .sinks)
        var sinksDecoded0:[CatalogEntry]? = nil
        if let sinksContainer = sinksContainer {
            sinksDecoded0 = [CatalogEntry]()
            for structure0 in sinksContainer {
                sinksDecoded0?.append(structure0)
            }
        }
        sinks = sinksDecoded0
        let locationDecoded = try containerValues.decodeIfPresent(Location.self, forKey: .location)
        location = locationDecoded
    }
}
