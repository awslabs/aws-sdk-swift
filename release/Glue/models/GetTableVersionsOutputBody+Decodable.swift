// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTableVersionsOutputBody: Equatable {
    public let tableVersions: [TableVersion]?
    public let nextToken: String?
}

extension GetTableVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case tableVersions = "TableVersions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableVersionsContainer = try containerValues.decodeIfPresent([TableVersion].self, forKey: .tableVersions)
        var tableVersionsDecoded0:[TableVersion]? = nil
        if let tableVersionsContainer = tableVersionsContainer {
            tableVersionsDecoded0 = [TableVersion]()
            for structure0 in tableVersionsContainer {
                tableVersionsDecoded0?.append(structure0)
            }
        }
        tableVersions = tableVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
