// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ColumnError: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case columnName = "ColumnName"
        case error = "Error"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columnName = columnName {
            try encodeContainer.encode(columnName, forKey: .columnName)
        }
        if let error = error {
            try encodeContainer.encode(error, forKey: .error)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .columnName)
        columnName = columnNameDecoded
        let errorDecoded = try containerValues.decodeIfPresent(ErrorDetail.self, forKey: .error)
        error = errorDecoded
    }
}
