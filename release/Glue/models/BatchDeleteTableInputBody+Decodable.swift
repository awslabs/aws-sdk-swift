// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteTableInputBody: Equatable {
    public let catalogId: String?
    public let databaseName: String?
    public let tablesToDelete: [String]?
}

extension BatchDeleteTableInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case tablesToDelete = "TablesToDelete"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tablesToDeleteContainer = try containerValues.decodeIfPresent([String].self, forKey: .tablesToDelete)
        var tablesToDeleteDecoded0:[String]? = nil
        if let tablesToDeleteContainer = tablesToDeleteContainer {
            tablesToDeleteDecoded0 = [String]()
            for string0 in tablesToDeleteContainer {
                tablesToDeleteDecoded0?.append(string0)
            }
        }
        tablesToDelete = tablesToDeleteDecoded0
    }
}
