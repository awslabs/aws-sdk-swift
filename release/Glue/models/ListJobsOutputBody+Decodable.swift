// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputBody: Equatable {
    public let jobNames: [String]?
    public let nextToken: String?
}

extension ListJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobNames = "JobNames"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .jobNames)
        var jobNamesDecoded0:[String]? = nil
        if let jobNamesContainer = jobNamesContainer {
            jobNamesDecoded0 = [String]()
            for string0 in jobNamesContainer {
                jobNamesDecoded0?.append(string0)
            }
        }
        jobNames = jobNamesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
