// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Specifies a crawler program that examines a data source and uses classifiers to try to
///       determine its schema. If successful, the crawler records metadata concerning the data source
///       in the AWS Glue Data Catalog.</p>
public struct Crawler: Equatable {
    /// <p>A list of UTF-8 strings that specify the custom classifiers that are associated
    ///      with the crawler.</p>
    public let classifiers: [String]?
    /// <p>Crawler configuration information. This versioned JSON string allows users
    ///         to specify aspects of a crawler's behavior.
    ///         For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html">Configuring a Crawler</a>.</p>
    public let configuration: String?
    /// <p>If the crawler is running, contains the total time elapsed since the last crawl
    ///       began.</p>
    public let crawlElapsedTime: Int
    /// <p>The name of the <code>SecurityConfiguration</code> structure to be used by this
    ///       crawler.</p>
    public let crawlerSecurityConfiguration: String?
    /// <p>The time that the crawler was created.</p>
    public let creationTime: Date?
    /// <p>The name of the database in which the crawler's output is stored.</p>
    public let databaseName: String?
    /// <p>A description of the crawler.</p>
    public let description: String?
    /// <p>The status of the last crawl, and potentially error information if
    ///       an error occurred.</p>
    public let lastCrawl: LastCrawlInfo?
    /// <p>The time that the crawler was last updated.</p>
    public let lastUpdated: Date?
    /// <p>A configuration that specifies whether data lineage is enabled for the crawler.</p>
    public let lineageConfiguration: LineageConfiguration?
    /// <p>The name of the crawler.</p>
    public let name: String?
    /// <p>A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.</p>
    public let recrawlPolicy: RecrawlPolicy?
    /// <p>The Amazon Resource Name (ARN) of an IAM role that's used to access customer resources,
    ///       such as Amazon Simple Storage Service (Amazon S3) data.</p>
    public let role: String?
    /// <p>For scheduled crawlers, the schedule when the crawler runs.</p>
    public let schedule: Schedule?
    /// <p>The policy that specifies update and delete behaviors for the crawler.</p>
    public let schemaChangePolicy: SchemaChangePolicy?
    /// <p>Indicates whether the crawler is running, or whether a run is pending.</p>
    public let state: CrawlerState?
    /// <p>The prefix added to the names of tables that are created.</p>
    public let tablePrefix: String?
    /// <p>A collection of targets to crawl.</p>
    public let targets: CrawlerTargets?
    /// <p>The version of the crawler.</p>
    public let version: Int

    public init (
        classifiers: [String]? = nil,
        configuration: String? = nil,
        crawlElapsedTime: Int = 0,
        crawlerSecurityConfiguration: String? = nil,
        creationTime: Date? = nil,
        databaseName: String? = nil,
        description: String? = nil,
        lastCrawl: LastCrawlInfo? = nil,
        lastUpdated: Date? = nil,
        lineageConfiguration: LineageConfiguration? = nil,
        name: String? = nil,
        recrawlPolicy: RecrawlPolicy? = nil,
        role: String? = nil,
        schedule: Schedule? = nil,
        schemaChangePolicy: SchemaChangePolicy? = nil,
        state: CrawlerState? = nil,
        tablePrefix: String? = nil,
        targets: CrawlerTargets? = nil,
        version: Int = 0
    )
    {
        self.classifiers = classifiers
        self.configuration = configuration
        self.crawlElapsedTime = crawlElapsedTime
        self.crawlerSecurityConfiguration = crawlerSecurityConfiguration
        self.creationTime = creationTime
        self.databaseName = databaseName
        self.description = description
        self.lastCrawl = lastCrawl
        self.lastUpdated = lastUpdated
        self.lineageConfiguration = lineageConfiguration
        self.name = name
        self.recrawlPolicy = recrawlPolicy
        self.role = role
        self.schedule = schedule
        self.schemaChangePolicy = schemaChangePolicy
        self.state = state
        self.tablePrefix = tablePrefix
        self.targets = targets
        self.version = version
    }
}
