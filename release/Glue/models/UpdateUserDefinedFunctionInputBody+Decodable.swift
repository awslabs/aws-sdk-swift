// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateUserDefinedFunctionInputBody: Equatable {
    public let catalogId: String?
    public let databaseName: String?
    public let functionName: String?
    public let functionInput: UserDefinedFunctionInput?
}

extension UpdateUserDefinedFunctionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case functionInput = "FunctionInput"
        case functionName = "FunctionName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let functionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .functionName)
        functionName = functionNameDecoded
        let functionInputDecoded = try containerValues.decodeIfPresent(UserDefinedFunctionInput.self, forKey: .functionInput)
        functionInput = functionInputDecoded
    }
}
