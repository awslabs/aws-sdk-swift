// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSchemaByDefinitionOutputBody: Equatable {
    public let schemaVersionId: String?
    public let schemaArn: String?
    public let dataFormat: DataFormat?
    public let status: SchemaVersionStatus?
    public let createdTime: String?
}

extension GetSchemaByDefinitionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdTime = "CreatedTime"
        case dataFormat = "DataFormat"
        case schemaArn = "SchemaArn"
        case schemaVersionId = "SchemaVersionId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let schemaArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaArn)
        schemaArn = schemaArnDecoded
        let dataFormatDecoded = try containerValues.decodeIfPresent(DataFormat.self, forKey: .dataFormat)
        dataFormat = dataFormatDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SchemaVersionStatus.self, forKey: .status)
        status = statusDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
    }
}
