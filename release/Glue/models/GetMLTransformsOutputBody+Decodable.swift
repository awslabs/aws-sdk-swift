// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMLTransformsOutputBody: Equatable {
    public let transforms: [MLTransform]?
    public let nextToken: String?
}

extension GetMLTransformsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case transforms = "Transforms"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transformsContainer = try containerValues.decodeIfPresent([MLTransform].self, forKey: .transforms)
        var transformsDecoded0:[MLTransform]? = nil
        if let transformsContainer = transformsContainer {
            transformsDecoded0 = [MLTransform]()
            for structure0 in transformsContainer {
                transformsDecoded0?.append(structure0)
            }
        }
        transforms = transformsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
