// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobCommand: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case pythonVersion = "PythonVersion"
        case scriptLocation = "ScriptLocation"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let pythonVersion = pythonVersion {
            try encodeContainer.encode(pythonVersion, forKey: .pythonVersion)
        }
        if let scriptLocation = scriptLocation {
            try encodeContainer.encode(scriptLocation, forKey: .scriptLocation)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let scriptLocationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .scriptLocation)
        scriptLocation = scriptLocationDecoded
        let pythonVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pythonVersion)
        pythonVersion = pythonVersionDecoded
    }
}
