// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetSchemaOutput: Equatable {
    /// <p>The compatibility mode of the schema.</p>
    public let compatibility: Compatibility?
    /// <p>The date and time the schema was created.</p>
    public let createdTime: String?
    /// <p>The data format of the schema definition. Currently only <code>AVRO</code> is supported.</p>
    public let dataFormat: DataFormat?
    /// <p>A description of schema if specified when created</p>
    public let description: String?
    /// <p>The latest version of the schema associated with the returned schema definition.</p>
    public let latestSchemaVersion: Int
    /// <p>The next version of the schema associated with the returned schema definition.</p>
    public let nextSchemaVersion: Int
    /// <p>The Amazon Resource Name (ARN) of the registry.</p>
    public let registryArn: String?
    /// <p>The name of the registry.</p>
    public let registryName: String?
    /// <p>The Amazon Resource Name (ARN) of the schema.</p>
    public let schemaArn: String?
    /// <p>The version number of the checkpoint (the last time the compatibility mode was changed).</p>
    public let schemaCheckpoint: Int
    /// <p>The name of the schema.</p>
    public let schemaName: String?
    /// <p>The status of the schema.</p>
    public let schemaStatus: SchemaStatus?
    /// <p>The date and time the schema was updated.</p>
    public let updatedTime: String?

    public init (
        compatibility: Compatibility? = nil,
        createdTime: String? = nil,
        dataFormat: DataFormat? = nil,
        description: String? = nil,
        latestSchemaVersion: Int = 0,
        nextSchemaVersion: Int = 0,
        registryArn: String? = nil,
        registryName: String? = nil,
        schemaArn: String? = nil,
        schemaCheckpoint: Int = 0,
        schemaName: String? = nil,
        schemaStatus: SchemaStatus? = nil,
        updatedTime: String? = nil
    )
    {
        self.compatibility = compatibility
        self.createdTime = createdTime
        self.dataFormat = dataFormat
        self.description = description
        self.latestSchemaVersion = latestSchemaVersion
        self.nextSchemaVersion = nextSchemaVersion
        self.registryArn = registryArn
        self.registryName = registryName
        self.schemaArn = schemaArn
        self.schemaCheckpoint = schemaCheckpoint
        self.schemaName = schemaName
        self.schemaStatus = schemaStatus
        self.updatedTime = updatedTime
    }
}
