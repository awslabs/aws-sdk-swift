// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SchemaChangePolicy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deleteBehavior = "DeleteBehavior"
        case updateBehavior = "UpdateBehavior"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deleteBehavior = deleteBehavior {
            try encodeContainer.encode(deleteBehavior.rawValue, forKey: .deleteBehavior)
        }
        if let updateBehavior = updateBehavior {
            try encodeContainer.encode(updateBehavior.rawValue, forKey: .updateBehavior)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let updateBehaviorDecoded = try containerValues.decodeIfPresent(UpdateBehavior.self, forKey: .updateBehavior)
        updateBehavior = updateBehaviorDecoded
        let deleteBehaviorDecoded = try containerValues.decodeIfPresent(DeleteBehavior.self, forKey: .deleteBehavior)
        deleteBehavior = deleteBehaviorDecoded
    }
}
