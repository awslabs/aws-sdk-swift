// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetPartitionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case partitionValues = "PartitionValues"
        case tableName = "TableName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let catalogId = catalogId {
            try encodeContainer.encode(catalogId, forKey: .catalogId)
        }
        if let databaseName = databaseName {
            try encodeContainer.encode(databaseName, forKey: .databaseName)
        }
        if let partitionValues = partitionValues {
            var partitionValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .partitionValues)
            for valuestringlist0 in partitionValues {
                try partitionValuesContainer.encode(valuestringlist0)
            }
        }
        if let tableName = tableName {
            try encodeContainer.encode(tableName, forKey: .tableName)
        }
    }
}
