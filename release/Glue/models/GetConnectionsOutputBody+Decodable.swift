// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConnectionsOutputBody: Equatable {
    public let connectionList: [Connection]?
    public let nextToken: String?
}

extension GetConnectionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectionList = "ConnectionList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionListContainer = try containerValues.decodeIfPresent([Connection].self, forKey: .connectionList)
        var connectionListDecoded0:[Connection]? = nil
        if let connectionListContainer = connectionListContainer {
            connectionListDecoded0 = [Connection]()
            for structure0 in connectionListContainer {
                connectionListDecoded0?.append(structure0)
            }
        }
        connectionList = connectionListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
