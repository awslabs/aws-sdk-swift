// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateTableInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case partitionIndexes = "PartitionIndexes"
        case tableInput = "TableInput"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let catalogId = catalogId {
            try encodeContainer.encode(catalogId, forKey: .catalogId)
        }
        if let databaseName = databaseName {
            try encodeContainer.encode(databaseName, forKey: .databaseName)
        }
        if let partitionIndexes = partitionIndexes {
            var partitionIndexesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .partitionIndexes)
            for partitionindexlist0 in partitionIndexes {
                try partitionIndexesContainer.encode(partitionindexlist0)
            }
        }
        if let tableInput = tableInput {
            try encodeContainer.encode(tableInput, forKey: .tableInput)
        }
    }
}
