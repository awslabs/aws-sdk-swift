// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterSchemaVersionOutputBody: Equatable {
    public let schemaVersionId: String?
    public let versionNumber: Int
    public let status: SchemaVersionStatus?
}

extension RegisterSchemaVersionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case schemaVersionId = "SchemaVersionId"
        case status = "Status"
        case versionNumber = "VersionNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let versionNumberDecoded = try containerValues.decode(Int.self, forKey: .versionNumber)
        versionNumber = versionNumberDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SchemaVersionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
