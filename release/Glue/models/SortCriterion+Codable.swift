// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SortCriterion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fieldName = "FieldName"
        case sort = "Sort"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fieldName = fieldName {
            try encodeContainer.encode(fieldName, forKey: .fieldName)
        }
        if let sort = sort {
            try encodeContainer.encode(sort.rawValue, forKey: .sort)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fieldNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fieldName)
        fieldName = fieldNameDecoded
        let sortDecoded = try containerValues.decodeIfPresent(Sort.self, forKey: .sort)
        sort = sortDecoded
    }
}
