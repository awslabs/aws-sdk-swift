// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSchemaVersionMetadataInputBody: Equatable {
    public let schemaId: SchemaId?
    public let schemaVersionNumber: SchemaVersionNumber?
    public let schemaVersionId: String?
    public let metadataKeyValue: MetadataKeyValuePair?
}

extension PutSchemaVersionMetadataInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metadataKeyValue = "MetadataKeyValue"
        case schemaId = "SchemaId"
        case schemaVersionId = "SchemaVersionId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let schemaVersionNumberDecoded = try containerValues.decodeIfPresent(SchemaVersionNumber.self, forKey: .schemaVersionNumber)
        schemaVersionNumber = schemaVersionNumberDecoded
        let schemaVersionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaVersionId)
        schemaVersionId = schemaVersionIdDecoded
        let metadataKeyValueDecoded = try containerValues.decodeIfPresent(MetadataKeyValuePair.self, forKey: .metadataKeyValue)
        metadataKeyValue = metadataKeyValueDecoded
    }
}
