// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TableVersionError: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case errorDetail = "ErrorDetail"
        case tableName = "TableName"
        case versionId = "VersionId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorDetail = errorDetail {
            try encodeContainer.encode(errorDetail, forKey: .errorDetail)
        }
        if let tableName = tableName {
            try encodeContainer.encode(tableName, forKey: .tableName)
        }
        if let versionId = versionId {
            try encodeContainer.encode(versionId, forKey: .versionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionId)
        versionId = versionIdDecoded
        let errorDetailDecoded = try containerValues.decodeIfPresent(ErrorDetail.self, forKey: .errorDetail)
        errorDetail = errorDetailDecoded
    }
}
