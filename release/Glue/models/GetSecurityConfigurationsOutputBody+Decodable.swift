// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSecurityConfigurationsOutputBody: Equatable {
    public let securityConfigurations: [SecurityConfiguration]?
    public let nextToken: String?
}

extension GetSecurityConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case securityConfigurations = "SecurityConfigurations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityConfigurationsContainer = try containerValues.decodeIfPresent([SecurityConfiguration].self, forKey: .securityConfigurations)
        var securityConfigurationsDecoded0:[SecurityConfiguration]? = nil
        if let securityConfigurationsContainer = securityConfigurationsContainer {
            securityConfigurationsDecoded0 = [SecurityConfiguration]()
            for structure0 in securityConfigurationsContainer {
                securityConfigurationsDecoded0?.append(structure0)
            }
        }
        securityConfigurations = securityConfigurationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
