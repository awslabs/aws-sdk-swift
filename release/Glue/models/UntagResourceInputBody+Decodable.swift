// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UntagResourceInputBody: Equatable {
    public let resourceArn: String?
    public let tagsToRemove: [String]?
}

extension UntagResourceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case resourceArn = "ResourceArn"
        case tagsToRemove = "TagsToRemove"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let tagsToRemoveContainer = try containerValues.decodeIfPresent([String].self, forKey: .tagsToRemove)
        var tagsToRemoveDecoded0:[String]? = nil
        if let tagsToRemoveContainer = tagsToRemoveContainer {
            tagsToRemoveDecoded0 = [String]()
            for string0 in tagsToRemoveContainer {
                tagsToRemoveDecoded0?.append(string0)
            }
        }
        tagsToRemove = tagsToRemoveDecoded0
    }
}
