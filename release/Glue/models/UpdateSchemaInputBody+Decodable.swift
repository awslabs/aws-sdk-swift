// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSchemaInputBody: Equatable {
    public let schemaId: SchemaId?
    public let schemaVersionNumber: SchemaVersionNumber?
    public let compatibility: Compatibility?
    public let description: String?
}

extension UpdateSchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case compatibility = "Compatibility"
        case description = "Description"
        case schemaId = "SchemaId"
        case schemaVersionNumber = "SchemaVersionNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let schemaVersionNumberDecoded = try containerValues.decodeIfPresent(SchemaVersionNumber.self, forKey: .schemaVersionNumber)
        schemaVersionNumber = schemaVersionNumberDecoded
        let compatibilityDecoded = try containerValues.decodeIfPresent(Compatibility.self, forKey: .compatibility)
        compatibility = compatibilityDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
