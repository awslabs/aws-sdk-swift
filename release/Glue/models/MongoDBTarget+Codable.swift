// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MongoDBTarget: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectionName = "ConnectionName"
        case path = "Path"
        case scanAll = "ScanAll"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionName = connectionName {
            try encodeContainer.encode(connectionName, forKey: .connectionName)
        }
        if let path = path {
            try encodeContainer.encode(path, forKey: .path)
        }
        if let scanAll = scanAll {
            try encodeContainer.encode(scanAll, forKey: .scanAll)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .connectionName)
        connectionName = connectionNameDecoded
        let pathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .path)
        path = pathDecoded
        let scanAllDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .scanAll)
        scanAll = scanAllDecoded
    }
}
