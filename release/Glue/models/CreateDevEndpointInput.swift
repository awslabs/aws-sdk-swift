// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDevEndpointInput: Equatable {
    /// <p>A map of arguments used to configure the <code>DevEndpoint</code>.</p>
    public let arguments: [String:String]?
    /// <p>The name to be assigned to the new <code>DevEndpoint</code>.</p>
    public let endpointName: String?
    /// <p>The path to one or more Java <code>.jar</code> files in an S3 bucket that should be loaded
    ///       in your <code>DevEndpoint</code>.</p>
    public let extraJarsS3Path: String?
    /// <p>The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in
    ///       your <code>DevEndpoint</code>. Multiple values must be complete paths separated by a
    ///       comma.</p>
    ///          <note>
    ///             <p>You can only use pure Python libraries with a <code>DevEndpoint</code>. Libraries that rely on
    ///         C extensions, such as the <a href="http://pandas.pydata.org/">pandas</a> Python data
    ///         analysis library, are not yet supported.</p>
    ///          </note>
    public let extraPythonLibsS3Path: String?
    /// <p>Glue version determines the versions of Apache Spark and Python that AWS Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints. </p>
    ///
    ///          <p>For more information about the available AWS Glue versions and corresponding Spark and Python versions, see <a href="https://docs.aws.amazon.com/glue/latest/dg/add-job.html">Glue version</a> in the developer guide.</p>
    /// 	
    /// 	        <p>Development endpoints that are created without specifying a Glue version default to Glue 0.9.</p>
    /// 	
    /// 	        <p>You can specify a version of Python support for development endpoints by using the <code>Arguments</code> parameter in the <code>CreateDevEndpoint</code> or <code>UpdateDevEndpoint</code> APIs. If no arguments are provided, the version defaults to Python 2.</p>
    public let glueVersion: String?
    /// <p>The number of AWS Glue Data Processing Units (DPUs) to allocate to this
    ///         <code>DevEndpoint</code>.</p>
    public let numberOfNodes: Int
    /// <p>The number of workers of a defined <code>workerType</code> that are allocated to the development endpoint.</p>
    /// 	
    /// 	        <p>The maximum number of workers you can define are 299 for <code>G.1X</code>, and 149 for <code>G.2X</code>. </p>
    public let numberOfWorkers: Int?
    /// <p>The public key to be used by this <code>DevEndpoint</code> for authentication. This
    ///       attribute is provided for backward compatibility because the recommended attribute to use is
    ///       public keys.</p>
    public let publicKey: String?
    /// <p>A list of public keys to be used by the development endpoints for authentication. The use
    ///       of this attribute is preferred over a single public key because the public keys allow you to
    ///       have a different private key per client.</p>
    ///
    ///          <note>
    ///             <p>If you previously created an endpoint with a public key, you must remove that key to be able
    ///         to set a list of public keys. Call the <code>UpdateDevEndpoint</code> API with the public
    ///         key content in the <code>deletePublicKeys</code> attribute, and the list of new keys in the
    ///           <code>addPublicKeys</code> attribute.</p>
    ///          </note>
    public let publicKeys: [String]?
    /// <p>The IAM role for the <code>DevEndpoint</code>.</p>
    public let roleArn: String?
    /// <p>The name of the <code>SecurityConfiguration</code> structure to be used with this
    ///         <code>DevEndpoint</code>.</p>
    public let securityConfiguration: String?
    /// <p>Security group IDs for the security groups to be used by the new
    ///       <code>DevEndpoint</code>.</p>
    public let securityGroupIds: [String]?
    /// <p>The subnet ID for the new <code>DevEndpoint</code> to use.</p>
    public let subnetId: String?
    /// <p>The tags to use with this DevEndpoint. You may use tags to limit access to the DevEndpoint. For more information about tags in AWS Glue, see <a href="https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html">AWS Tags in AWS Glue</a> in the developer guide.</p>
    public let tags: [String:String]?
    /// <p>The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.</p>
    /// 	        <ul>
    ///             <li>
    ///                <p>For the <code>Standard</code> worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.</p>
    ///             </li>
    ///             <li>
    ///                <p>For the <code>G.1X</code> worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p>
    ///             </li>
    ///             <li>
    ///                <p>For the <code>G.2X</code> worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.</p>
    ///             </li>
    ///          </ul>
    /// 	        <p>Known issue: when a development endpoint is created with the <code>G.2X</code>
    ///             <code>WorkerType</code> configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk. </p>
    public let workerType: WorkerType?

    public init (
        arguments: [String:String]? = nil,
        endpointName: String? = nil,
        extraJarsS3Path: String? = nil,
        extraPythonLibsS3Path: String? = nil,
        glueVersion: String? = nil,
        numberOfNodes: Int = 0,
        numberOfWorkers: Int? = nil,
        publicKey: String? = nil,
        publicKeys: [String]? = nil,
        roleArn: String? = nil,
        securityConfiguration: String? = nil,
        securityGroupIds: [String]? = nil,
        subnetId: String? = nil,
        tags: [String:String]? = nil,
        workerType: WorkerType? = nil
    )
    {
        self.arguments = arguments
        self.endpointName = endpointName
        self.extraJarsS3Path = extraJarsS3Path
        self.extraPythonLibsS3Path = extraPythonLibsS3Path
        self.glueVersion = glueVersion
        self.numberOfNodes = numberOfNodes
        self.numberOfWorkers = numberOfWorkers
        self.publicKey = publicKey
        self.publicKeys = publicKeys
        self.roleArn = roleArn
        self.securityConfiguration = securityConfiguration
        self.securityGroupIds = securityGroupIds
        self.subnetId = subnetId
        self.tags = tags
        self.workerType = workerType
    }
}
