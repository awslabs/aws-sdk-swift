// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchUpdatePartitionInputBody: Equatable {
    public let catalogId: String?
    public let databaseName: String?
    public let tableName: String?
    public let entries: [BatchUpdatePartitionRequestEntry]?
}

extension BatchUpdatePartitionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case databaseName = "DatabaseName"
        case entries = "Entries"
        case tableName = "TableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let databaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .databaseName)
        databaseName = databaseNameDecoded
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let entriesContainer = try containerValues.decodeIfPresent([BatchUpdatePartitionRequestEntry].self, forKey: .entries)
        var entriesDecoded0:[BatchUpdatePartitionRequestEntry]? = nil
        if let entriesContainer = entriesContainer {
            entriesDecoded0 = [BatchUpdatePartitionRequestEntry]()
            for structure0 in entriesContainer {
                entriesDecoded0?.append(structure0)
            }
        }
        entries = entriesDecoded0
    }
}
