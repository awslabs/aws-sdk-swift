// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Defines a connection to a data source.</p>
public struct Connection: Equatable {
    /// <p>These key-value pairs define parameters for the connection:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>HOST</code> - The host URI: either the
    ///         fully qualified domain name (FQDN) or the IPv4 address of
    ///         the database host.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PORT</code> - The port number, between
    ///         1024 and 65535, of the port on which the database host is
    ///         listening for database connections.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>USER_NAME</code> -  The name under which
    ///         to log in to the database. The value string for <code>USER_NAME</code> is "<code>USERNAME</code>".</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PASSWORD</code> - A password,
    ///         if one is used, for the user name.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ENCRYPTED_PASSWORD</code> - When you enable connection password protection by setting <code>ConnectionPasswordEncryption</code> in the Data Catalog encryption settings, this field stores the encrypted password.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_DRIVER_JAR_URI</code> - The Amazon Simple Storage Service (Amazon S3) path of the
    ///           JAR file that contains the JDBC driver to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_DRIVER_CLASS_NAME</code> - The class name of the JDBC driver to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_ENGINE</code> - The name of the JDBC engine to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_ENGINE_VERSION</code> - The version of the JDBC engine to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CONFIG_FILES</code> - (Reserved for future use.)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>INSTANCE_ID</code> - The instance ID to use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_CONNECTION_URL</code> - The URL for connecting to a JDBC data source.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>JDBC_ENFORCE_SSL</code> - A Boolean string (true, false) specifying whether Secure
    ///           Sockets Layer (SSL) with hostname matching is enforced for the JDBC connection on the
    ///           client. The default is false.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CUSTOM_JDBC_CERT</code> - An Amazon S3 location specifying the customer's root certificate. AWS Glue uses this root certificate to validate the customer’s certificate when connecting to the customer database. AWS Glue only handles X.509 certificates. The certificate provided must be DER-encoded and supplied in Base64 encoding PEM format.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SKIP_CUSTOM_JDBC_CERT_VALIDATION</code> - By default, this is <code>false</code>. AWS Glue validates the Signature algorithm and Subject Public Key Algorithm for the customer certificate. The only permitted algorithms for the Signature algorithm are SHA256withRSA, SHA384withRSA or SHA512withRSA. For the Subject Public Key Algorithm, the key length must be at least 2048. You can set the value of this property to <code>true</code> to skip AWS Glue’s validation of the customer certificate.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CUSTOM_JDBC_CERT_STRING</code> - A custom JDBC certificate string which is used for domain match or distinguished name match to prevent a man-in-the-middle attack. In Oracle database, this is used as the <code>SSL_SERVER_CERT_DN</code>; in Microsoft SQL Server, this is used as the <code>hostNameInCertificate</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CONNECTION_URL</code> - The URL for connecting to a general (non-JDBC) data source.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_BOOTSTRAP_SERVERS</code> - A comma-separated list of host and port pairs that are the addresses of the Apache Kafka brokers in a Kafka cluster to which a Kafka client will connect to and bootstrap itself.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_SSL_ENABLED</code> - Whether to enable or disable SSL on an Apache Kafka connection. Default value is "true".</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_CUSTOM_CERT</code> - The Amazon S3 URL for the private CA cert file (.pem format). The default is an empty string.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_SKIP_CUSTOM_CERT_VALIDATION</code> - Whether to skip the validation of the CA cert file or not. AWS Glue validates for three algorithms: SHA256withRSA, SHA384withRSA and SHA512withRSA. Default value is "false".</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SECRET_ID</code> - The secret ID used for the secret manager of credentials.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CONNECTOR_URL</code> - The connector URL for a MARKETPLACE or CUSTOM connection.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CONNECTOR_TYPE</code> - The connector type for a MARKETPLACE or CUSTOM connection.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CONNECTOR_CLASS_NAME</code> - The connector class name for a MARKETPLACE or CUSTOM connection.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_CLIENT_KEYSTORE</code> - The Amazon S3 location of the client keystore file for Kafka client side authentication (Optional).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_CLIENT_KEYSTORE_PASSWORD</code> - The password to access the provided keystore (Optional).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>KAFKA_CLIENT_KEY_PASSWORD</code> - A keystore can consist of multiple keys, so this is the password to access the client key to be used with the Kafka server side key (Optional).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD</code> - The encrypted version of the Kafka client keystore password (if the user has the AWS Glue encrypt passwords setting selected).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD</code> - The encrypted version of the Kafka client key password (if the user has the AWS Glue encrypt passwords setting selected).</p>
    ///             </li>
    ///          </ul>
    public let connectionProperties: [String:String]?
    /// <p>The type of the connection. Currently, SFTP is not supported.</p>
    public let connectionType: ConnectionType?
    /// <p>The time that this connection definition was created.</p>
    public let creationTime: Date?
    /// <p>The description of the connection.</p>
    public let description: String?
    /// <p>The user, group, or role that last updated this connection definition.</p>
    public let lastUpdatedBy: String?
    /// <p>The last time that this connection definition was updated.</p>
    public let lastUpdatedTime: Date?
    /// <p>A list of criteria that can be used in selecting this connection.</p>
    public let matchCriteria: [String]?
    /// <p>The name of the connection definition.</p>
    public let name: String?
    /// <p>A map of physical connection requirements, such as virtual private cloud (VPC) and
    ///         <code>SecurityGroup</code>, that are needed to make this connection successfully.</p>
    public let physicalConnectionRequirements: PhysicalConnectionRequirements?

    public init (
        connectionProperties: [String:String]? = nil,
        connectionType: ConnectionType? = nil,
        creationTime: Date? = nil,
        description: String? = nil,
        lastUpdatedBy: String? = nil,
        lastUpdatedTime: Date? = nil,
        matchCriteria: [String]? = nil,
        name: String? = nil,
        physicalConnectionRequirements: PhysicalConnectionRequirements? = nil
    )
    {
        self.connectionProperties = connectionProperties
        self.connectionType = connectionType
        self.creationTime = creationTime
        self.description = description
        self.lastUpdatedBy = lastUpdatedBy
        self.lastUpdatedTime = lastUpdatedTime
        self.matchCriteria = matchCriteria
        self.name = name
        self.physicalConnectionRequirements = physicalConnectionRequirements
    }
}
