// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMLTaskRunsInputBody: Equatable {
    public let transformId: String?
    public let nextToken: String?
    public let maxResults: Int?
    public let filter: TaskRunFilterCriteria?
    public let sort: TaskRunSortCriteria?
}

extension GetMLTaskRunsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filter = "Filter"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sort = "Sort"
        case transformId = "TransformId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transformIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transformId)
        transformId = transformIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let filterDecoded = try containerValues.decodeIfPresent(TaskRunFilterCriteria.self, forKey: .filter)
        filter = filterDecoded
        let sortDecoded = try containerValues.decodeIfPresent(TaskRunSortCriteria.self, forKey: .sort)
        sort = sortDecoded
    }
}
