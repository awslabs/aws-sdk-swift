// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetWorkflowsOutputBody: Equatable {
    public let workflows: [Workflow]?
    public let missingWorkflows: [String]?
}

extension BatchGetWorkflowsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case missingWorkflows = "MissingWorkflows"
        case workflows = "Workflows"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workflowsContainer = try containerValues.decodeIfPresent([Workflow].self, forKey: .workflows)
        var workflowsDecoded0:[Workflow]? = nil
        if let workflowsContainer = workflowsContainer {
            workflowsDecoded0 = [Workflow]()
            for structure0 in workflowsContainer {
                workflowsDecoded0?.append(structure0)
            }
        }
        workflows = workflowsDecoded0
        let missingWorkflowsContainer = try containerValues.decodeIfPresent([String].self, forKey: .missingWorkflows)
        var missingWorkflowsDecoded0:[String]? = nil
        if let missingWorkflowsContainer = missingWorkflowsContainer {
            missingWorkflowsDecoded0 = [String]()
            for string0 in missingWorkflowsContainer {
                missingWorkflowsDecoded0?.append(string0)
            }
        }
        missingWorkflows = missingWorkflowsDecoded0
    }
}
