// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TaskRunProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exportLabelsTaskRunProperties = "ExportLabelsTaskRunProperties"
        case findMatchesTaskRunProperties = "FindMatchesTaskRunProperties"
        case importLabelsTaskRunProperties = "ImportLabelsTaskRunProperties"
        case labelingSetGenerationTaskRunProperties = "LabelingSetGenerationTaskRunProperties"
        case taskType = "TaskType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exportLabelsTaskRunProperties = exportLabelsTaskRunProperties {
            try encodeContainer.encode(exportLabelsTaskRunProperties, forKey: .exportLabelsTaskRunProperties)
        }
        if let findMatchesTaskRunProperties = findMatchesTaskRunProperties {
            try encodeContainer.encode(findMatchesTaskRunProperties, forKey: .findMatchesTaskRunProperties)
        }
        if let importLabelsTaskRunProperties = importLabelsTaskRunProperties {
            try encodeContainer.encode(importLabelsTaskRunProperties, forKey: .importLabelsTaskRunProperties)
        }
        if let labelingSetGenerationTaskRunProperties = labelingSetGenerationTaskRunProperties {
            try encodeContainer.encode(labelingSetGenerationTaskRunProperties, forKey: .labelingSetGenerationTaskRunProperties)
        }
        if let taskType = taskType {
            try encodeContainer.encode(taskType.rawValue, forKey: .taskType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTypeDecoded = try containerValues.decodeIfPresent(TaskType.self, forKey: .taskType)
        taskType = taskTypeDecoded
        let importLabelsTaskRunPropertiesDecoded = try containerValues.decodeIfPresent(ImportLabelsTaskRunProperties.self, forKey: .importLabelsTaskRunProperties)
        importLabelsTaskRunProperties = importLabelsTaskRunPropertiesDecoded
        let exportLabelsTaskRunPropertiesDecoded = try containerValues.decodeIfPresent(ExportLabelsTaskRunProperties.self, forKey: .exportLabelsTaskRunProperties)
        exportLabelsTaskRunProperties = exportLabelsTaskRunPropertiesDecoded
        let labelingSetGenerationTaskRunPropertiesDecoded = try containerValues.decodeIfPresent(LabelingSetGenerationTaskRunProperties.self, forKey: .labelingSetGenerationTaskRunProperties)
        labelingSetGenerationTaskRunProperties = labelingSetGenerationTaskRunPropertiesDecoded
        let findMatchesTaskRunPropertiesDecoded = try containerValues.decodeIfPresent(FindMatchesTaskRunProperties.self, forKey: .findMatchesTaskRunProperties)
        findMatchesTaskRunProperties = findMatchesTaskRunPropertiesDecoded
    }
}
