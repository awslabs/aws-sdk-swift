// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EncryptionAtRest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case catalogEncryptionMode = "CatalogEncryptionMode"
        case sseAwsKmsKeyId = "SseAwsKmsKeyId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let catalogEncryptionMode = catalogEncryptionMode {
            try encodeContainer.encode(catalogEncryptionMode.rawValue, forKey: .catalogEncryptionMode)
        }
        if let sseAwsKmsKeyId = sseAwsKmsKeyId {
            try encodeContainer.encode(sseAwsKmsKeyId, forKey: .sseAwsKmsKeyId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogEncryptionModeDecoded = try containerValues.decodeIfPresent(CatalogEncryptionMode.self, forKey: .catalogEncryptionMode)
        catalogEncryptionMode = catalogEncryptionModeDecoded
        let sseAwsKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sseAwsKmsKeyId)
        sseAwsKmsKeyId = sseAwsKmsKeyIdDecoded
    }
}
