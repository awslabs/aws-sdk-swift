// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetClassifiersOutputBody: Equatable {
    public let classifiers: [Classifier]?
    public let nextToken: String?
}

extension GetClassifiersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case classifiers = "Classifiers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let classifiersContainer = try containerValues.decodeIfPresent([Classifier].self, forKey: .classifiers)
        var classifiersDecoded0:[Classifier]? = nil
        if let classifiersContainer = classifiersContainer {
            classifiersDecoded0 = [Classifier]()
            for structure0 in classifiersContainer {
                classifiersDecoded0?.append(structure0)
            }
        }
        classifiers = classifiersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
