// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSchemaVersionsDiffInputBody: Equatable {
    public let schemaId: SchemaId?
    public let firstSchemaVersionNumber: SchemaVersionNumber?
    public let secondSchemaVersionNumber: SchemaVersionNumber?
    public let schemaDiffType: SchemaDiffType?
}

extension GetSchemaVersionsDiffInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case firstSchemaVersionNumber = "FirstSchemaVersionNumber"
        case schemaDiffType = "SchemaDiffType"
        case schemaId = "SchemaId"
        case secondSchemaVersionNumber = "SecondSchemaVersionNumber"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schemaIdDecoded = try containerValues.decodeIfPresent(SchemaId.self, forKey: .schemaId)
        schemaId = schemaIdDecoded
        let firstSchemaVersionNumberDecoded = try containerValues.decodeIfPresent(SchemaVersionNumber.self, forKey: .firstSchemaVersionNumber)
        firstSchemaVersionNumber = firstSchemaVersionNumberDecoded
        let secondSchemaVersionNumberDecoded = try containerValues.decodeIfPresent(SchemaVersionNumber.self, forKey: .secondSchemaVersionNumber)
        secondSchemaVersionNumber = secondSchemaVersionNumberDecoded
        let schemaDiffTypeDecoded = try containerValues.decodeIfPresent(SchemaDiffType.self, forKey: .schemaDiffType)
        schemaDiffType = schemaDiffTypeDecoded
    }
}
