// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetTriggersOutputBody: Equatable {
    public let triggers: [Trigger]?
    public let triggersNotFound: [String]?
}

extension BatchGetTriggersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case triggers = "Triggers"
        case triggersNotFound = "TriggersNotFound"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let triggersContainer = try containerValues.decodeIfPresent([Trigger].self, forKey: .triggers)
        var triggersDecoded0:[Trigger]? = nil
        if let triggersContainer = triggersContainer {
            triggersDecoded0 = [Trigger]()
            for structure0 in triggersContainer {
                triggersDecoded0?.append(structure0)
            }
        }
        triggers = triggersDecoded0
        let triggersNotFoundContainer = try containerValues.decodeIfPresent([String].self, forKey: .triggersNotFound)
        var triggersNotFoundDecoded0:[String]? = nil
        if let triggersNotFoundContainer = triggersNotFoundContainer {
            triggersNotFoundDecoded0 = [String]()
            for string0 in triggersNotFoundContainer {
                triggersNotFoundDecoded0?.append(string0)
            }
        }
        triggersNotFound = triggersNotFoundDecoded0
    }
}
