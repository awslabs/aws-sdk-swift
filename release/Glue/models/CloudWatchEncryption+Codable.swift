// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchEncryption: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchEncryptionMode = "CloudWatchEncryptionMode"
        case kmsKeyArn = "KmsKeyArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchEncryptionMode = cloudWatchEncryptionMode {
            try encodeContainer.encode(cloudWatchEncryptionMode.rawValue, forKey: .cloudWatchEncryptionMode)
        }
        if let kmsKeyArn = kmsKeyArn {
            try encodeContainer.encode(kmsKeyArn, forKey: .kmsKeyArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudWatchEncryptionModeDecoded = try containerValues.decodeIfPresent(CloudWatchEncryptionMode.self, forKey: .cloudWatchEncryptionMode)
        cloudWatchEncryptionMode = cloudWatchEncryptionModeDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
    }
}
