// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMLTaskRunsOutputBody: Equatable {
    public let taskRuns: [TaskRun]?
    public let nextToken: String?
}

extension GetMLTaskRunsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case taskRuns = "TaskRuns"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskRunsContainer = try containerValues.decodeIfPresent([TaskRun].self, forKey: .taskRuns)
        var taskRunsDecoded0:[TaskRun]? = nil
        if let taskRunsContainer = taskRunsContainer {
            taskRunsDecoded0 = [TaskRun]()
            for structure0 in taskRunsContainer {
                taskRunsDecoded0?.append(structure0)
            }
        }
        taskRuns = taskRunsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
