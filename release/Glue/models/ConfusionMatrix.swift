// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p>
/// 	
/// 	        <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>
public struct ConfusionMatrix: Equatable {
    /// <p>The number of matches in the data that the transform didn't find, in the confusion matrix for your transform.</p>
    public let numFalseNegatives: Int?
    /// <p>The number of nonmatches in the data that the transform incorrectly classified as a match,
    ///       in the confusion matrix for your transform.</p>
    public let numFalsePositives: Int?
    /// <p>The number of nonmatches in the data that the transform correctly rejected, in the
    ///       confusion matrix for your transform.</p>
    public let numTrueNegatives: Int?
    /// <p>The number of matches in the data that the transform correctly found, in the confusion matrix for your transform.</p>
    public let numTruePositives: Int?

    public init (
        numFalseNegatives: Int? = nil,
        numFalsePositives: Int? = nil,
        numTrueNegatives: Int? = nil,
        numTruePositives: Int? = nil
    )
    {
        self.numFalseNegatives = numFalseNegatives
        self.numFalsePositives = numFalsePositives
        self.numTrueNegatives = numTrueNegatives
        self.numTruePositives = numTruePositives
    }
}
