// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRecommendationsOutputBody: Equatable {
    public let itemList: [PredictedItem]?
    public let recommendationId: String?
}

extension GetRecommendationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case itemList
        case recommendationId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemListContainer = try containerValues.decodeIfPresent([PredictedItem].self, forKey: .itemList)
        var itemListDecoded0:[PredictedItem]? = nil
        if let itemListContainer = itemListContainer {
            itemListDecoded0 = [PredictedItem]()
            for structure0 in itemListContainer {
                itemListDecoded0?.append(structure0)
            }
        }
        itemList = itemListDecoded0
        let recommendationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recommendationId)
        recommendationId = recommendationIdDecoded
    }
}
