// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PredictedItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case itemId
        case score
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let itemId = itemId {
            try encodeContainer.encode(itemId, forKey: .itemId)
        }
        if let score = score {
            try encodeContainer.encode(score, forKey: .score)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .itemId)
        itemId = itemIdDecoded
        let scoreDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .score)
        score = scoreDecoded
    }
}
