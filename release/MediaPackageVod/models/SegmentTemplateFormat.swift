// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SegmentTemplateFormat {
    case numberWithDuration
    case numberWithTimeline
    case timeWithTimeline
    case sdkUnknown(String)
}

extension SegmentTemplateFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SegmentTemplateFormat] {
        return [
            .numberWithDuration,
            .numberWithTimeline,
            .timeWithTimeline,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .numberWithDuration: return "NUMBER_WITH_DURATION"
        case .numberWithTimeline: return "NUMBER_WITH_TIMELINE"
        case .timeWithTimeline: return "TIME_WITH_TIMELINE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SegmentTemplateFormat(rawValue: rawValue) ?? SegmentTemplateFormat.sdkUnknown(rawValue)
    }
}
