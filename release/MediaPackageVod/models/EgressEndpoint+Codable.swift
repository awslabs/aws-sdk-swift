// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EgressEndpoint: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case packagingConfigurationId = "packagingConfigurationId"
        case url = "url"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let packagingConfigurationId = packagingConfigurationId {
            try encodeContainer.encode(packagingConfigurationId, forKey: .packagingConfigurationId)
        }
        if let url = url {
            try encodeContainer.encode(url, forKey: .url)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packagingConfigurationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .packagingConfigurationId)
        packagingConfigurationId = packagingConfigurationIdDecoded
        let urlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .url)
        url = urlDecoded
    }
}
