// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MssManifest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case manifestName = "manifestName"
        case streamSelection = "streamSelection"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let manifestName = manifestName {
            try encodeContainer.encode(manifestName, forKey: .manifestName)
        }
        if let streamSelection = streamSelection {
            try encodeContainer.encode(streamSelection, forKey: .streamSelection)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let manifestNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .manifestName)
        manifestName = manifestNameDecoded
        let streamSelectionDecoded = try containerValues.decodeIfPresent(StreamSelection.self, forKey: .streamSelection)
        streamSelection = streamSelectionDecoded
    }
}
