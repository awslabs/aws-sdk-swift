// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInstalledComponentsOutputBody: Equatable {
    public let installedComponents: [InstalledComponent]?
    public let nextToken: String?
}

extension ListInstalledComponentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case installedComponents
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let installedComponentsContainer = try containerValues.decodeIfPresent([InstalledComponent].self, forKey: .installedComponents)
        var installedComponentsDecoded0:[InstalledComponent]? = nil
        if let installedComponentsContainer = installedComponentsContainer {
            installedComponentsDecoded0 = [InstalledComponent]()
            for structure0 in installedComponentsContainer {
                installedComponentsDecoded0?.append(structure0)
            }
        }
        installedComponents = installedComponentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
