// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetCoreDeviceOutput: Equatable {
    /// <p>The computer architecture of the core device.</p>
    public let architecture: String?
    /// <p>The name of the core device. This is also the name of the AWS IoT thing.</p>
    public let coreDeviceThingName: String?
    /// <p>The version of the AWS IoT Greengrass Core software that the core device runs. This version is equivalent to
    ///       the version of the AWS IoT Greengrass nucleus component that runs on the core device. For more information,
    ///       see the <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/greengrass-nucleus-component.html">AWS IoT Greengrass nucleus
    ///         component</a> in the <i>AWS IoT Greengrass V2 Developer Guide</i>.</p>
    public let coreVersion: String?
    /// <p>The time at which the core device's status last updated, expressed in ISO 8601
    ///       format.</p>
    public let lastStatusUpdateTimestamp: Date?
    /// <p>The operating system platform that the core device runs.</p>
    public let platform: String?
    /// <p>The status of the core device. The core device status can be:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>HEALTHY</code> – The AWS IoT Greengrass Core software and all components run on the core device without issue.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>UNHEALTHY</code> – The AWS IoT Greengrass Core software or a component is in a failed state
    ///           on the core device.</p>
    ///             </li>
    ///          </ul>
    public let status: CoreDeviceStatus?
    /// <p>A list of key-value pairs that contain metadata for the resource. For more
    ///       information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag your
    ///         resources</a> in the <i>AWS IoT Greengrass V2 Developer Guide</i>.</p>
    public let tags: [String:String]?

    public init (
        architecture: String? = nil,
        coreDeviceThingName: String? = nil,
        coreVersion: String? = nil,
        lastStatusUpdateTimestamp: Date? = nil,
        platform: String? = nil,
        status: CoreDeviceStatus? = nil,
        tags: [String:String]? = nil
    )
    {
        self.architecture = architecture
        self.coreDeviceThingName = coreDeviceThingName
        self.coreVersion = coreVersion
        self.lastStatusUpdateTimestamp = lastStatusUpdateTimestamp
        self.platform = platform
        self.status = status
        self.tags = tags
    }
}
