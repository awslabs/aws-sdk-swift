// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about an AWS Lambda function to import to create a component.</p>
public struct LambdaFunctionRecipeSource: Equatable {
    /// <p>The component versions on which this Lambda function component depends.</p>
    public let componentDependencies: [String:ComponentDependencyRequirement]?
    /// <p>The system and runtime parameters for the Lambda function as it runs on the AWS IoT Greengrass core
    ///       device.</p>
    public let componentLambdaParameters: LambdaExecutionParameters?
    /// <p>The name of the component.</p>
    ///          <p>Defaults to the name of the Lambda function.</p>
    public let componentName: String?
    /// <p>The platforms that the component version supports.</p>
    public let componentPlatforms: [ComponentPlatform]?
    /// <p>The version of the component.</p>
    ///          <p>Defaults to the version of the Lambda function as a semantic version. For example, if your
    ///       function version is <code>3</code>, the component version becomes <code>3.0.0</code>.</p>
    public let componentVersion: String?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the Lambda function. The ARN must include the version of the function to
    ///       import. You can't use version aliases like <code>$LATEST</code>.</p>
    public let lambdaArn: String?

    public init (
        componentDependencies: [String:ComponentDependencyRequirement]? = nil,
        componentLambdaParameters: LambdaExecutionParameters? = nil,
        componentName: String? = nil,
        componentPlatforms: [ComponentPlatform]? = nil,
        componentVersion: String? = nil,
        lambdaArn: String? = nil
    )
    {
        self.componentDependencies = componentDependencies
        self.componentLambdaParameters = componentLambdaParameters
        self.componentName = componentName
        self.componentPlatforms = componentPlatforms
        self.componentVersion = componentVersion
        self.lambdaArn = lambdaArn
    }
}
