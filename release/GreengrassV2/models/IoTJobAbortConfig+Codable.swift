// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTJobAbortConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case criteriaList
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let criteriaList = criteriaList {
            var criteriaListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .criteriaList)
            for iotjobabortcriterialist0 in criteriaList {
                try criteriaListContainer.encode(iotjobabortcriterialist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let criteriaListContainer = try containerValues.decodeIfPresent([IoTJobAbortCriteria].self, forKey: .criteriaList)
        var criteriaListDecoded0:[IoTJobAbortCriteria]? = nil
        if let criteriaListContainer = criteriaListContainer {
            criteriaListDecoded0 = [IoTJobAbortCriteria]()
            for structure0 in criteriaListContainer {
                criteriaListDecoded0?.append(structure0)
            }
        }
        criteriaList = criteriaListDecoded0
    }
}
