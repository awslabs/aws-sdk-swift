// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComponentDeploymentSpecification: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case componentVersion
        case configurationUpdate
        case runWith
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let componentVersion = componentVersion {
            try encodeContainer.encode(componentVersion, forKey: .componentVersion)
        }
        if let configurationUpdate = configurationUpdate {
            try encodeContainer.encode(configurationUpdate, forKey: .configurationUpdate)
        }
        if let runWith = runWith {
            try encodeContainer.encode(runWith, forKey: .runWith)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let componentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .componentVersion)
        componentVersion = componentVersionDecoded
        let configurationUpdateDecoded = try containerValues.decodeIfPresent(ComponentConfigurationUpdate.self, forKey: .configurationUpdate)
        configurationUpdate = configurationUpdateDecoded
        let runWithDecoded = try containerValues.decodeIfPresent(ComponentRunWith.self, forKey: .runWith)
        runWith = runWithDecoded
    }
}
