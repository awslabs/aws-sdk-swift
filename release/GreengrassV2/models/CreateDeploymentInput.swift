// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDeploymentInput: Equatable {
    /// <p>The components to deploy. This is a dictionary, where each key is the name of a component,
    ///         and each key's value is the version and configuration to deploy for that component.</p>
    public let components: [String:ComponentDeploymentSpecification]?
    /// <p>The name of the deployment.</p>
    ///          <p>You can create deployments without names. If you create a deployment without a name, the
    ///       AWS IoT Greengrass V2 console shows the deployment name as <code><targetType>:<targetName></code>,
    ///       where <code>targetType</code> and <code>targetName</code> are the type and name of the
    ///       deployment target.</p>
    public let deploymentName: String?
    /// <p>The deployment policies for the deployment. These policies define how the deployment
    ///       updates components and handles failure.</p>
    public let deploymentPolicies: DeploymentPolicies?
    /// <p>The job configuration for the deployment configuration. The job configuration specifies
    ///       the rollout, timeout, and stop configurations for the deployment configuration.</p>
    public let iotJobConfiguration: DeploymentIoTJobConfiguration?
    /// <p>A list of key-value pairs that contain metadata for the resource. For more
    ///       information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag your
    ///         resources</a> in the <i>AWS IoT Greengrass V2 Developer Guide</i>.</p>
    public let tags: [String:String]?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the target AWS IoT thing or thing group.</p>
    public let targetArn: String?

    public init (
        components: [String:ComponentDeploymentSpecification]? = nil,
        deploymentName: String? = nil,
        deploymentPolicies: DeploymentPolicies? = nil,
        iotJobConfiguration: DeploymentIoTJobConfiguration? = nil,
        tags: [String:String]? = nil,
        targetArn: String? = nil
    )
    {
        self.components = components
        self.deploymentName = deploymentName
        self.deploymentPolicies = deploymentPolicies
        self.iotJobConfiguration = iotJobConfiguration
        self.tags = tags
        self.targetArn = targetArn
    }
}
