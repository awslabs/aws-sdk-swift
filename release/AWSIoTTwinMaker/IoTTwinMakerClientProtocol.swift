// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// IoT TwinMaker is a service that enables you to build operational digital twins of physical systems. IoT TwinMaker overlays measurements and analysis from real-world sensors, cameras, and enterprise applications so you can create data visualizations to monitor your physical factory, building, or industrial plant. You can use this real-world data to monitor operations and diagnose and repair errors.
public protocol IoTTwinMakerClientProtocol {
    /// Sets values for multiple time series properties.
    func batchPutPropertyValues(input: BatchPutPropertyValuesInput) async throws -> BatchPutPropertyValuesOutputResponse
    /// Creates a component type.
    func createComponentType(input: CreateComponentTypeInput) async throws -> CreateComponentTypeOutputResponse
    /// Creates an entity.
    func createEntity(input: CreateEntityInput) async throws -> CreateEntityOutputResponse
    /// Creates a scene.
    func createScene(input: CreateSceneInput) async throws -> CreateSceneOutputResponse
    /// Creates a workplace.
    func createWorkspace(input: CreateWorkspaceInput) async throws -> CreateWorkspaceOutputResponse
    /// Deletes a component type.
    func deleteComponentType(input: DeleteComponentTypeInput) async throws -> DeleteComponentTypeOutputResponse
    /// Deletes an entity.
    func deleteEntity(input: DeleteEntityInput) async throws -> DeleteEntityOutputResponse
    /// Deletes a scene.
    func deleteScene(input: DeleteSceneInput) async throws -> DeleteSceneOutputResponse
    /// Deletes a workspace.
    func deleteWorkspace(input: DeleteWorkspaceInput) async throws -> DeleteWorkspaceOutputResponse
    /// Retrieves information about a component type.
    func getComponentType(input: GetComponentTypeInput) async throws -> GetComponentTypeOutputResponse
    /// Retrieves information about an entity.
    func getEntity(input: GetEntityInput) async throws -> GetEntityOutputResponse
    /// Gets the property values for a component, component type, entity, or workspace. You must specify a value for either componentName, componentTypeId, entityId, or workspaceId.
    func getPropertyValue(input: GetPropertyValueInput) async throws -> GetPropertyValueOutputResponse
    /// Retrieves information about the history of a time series property value for a component, component type, entity, or workspace. You must specify a value for workspaceId. For entity-specific queries, specify values for componentName and entityId. For cross-entity quries, specify a value for componentTypeId.
    func getPropertyValueHistory(input: GetPropertyValueHistoryInput) async throws -> GetPropertyValueHistoryOutputResponse
    /// Retrieves information about a scene.
    func getScene(input: GetSceneInput) async throws -> GetSceneOutputResponse
    /// Retrieves information about a workspace.
    func getWorkspace(input: GetWorkspaceInput) async throws -> GetWorkspaceOutputResponse
    /// Lists all component types in a workspace.
    func listComponentTypes(input: ListComponentTypesInput) async throws -> ListComponentTypesOutputResponse
    /// Lists all entities in a workspace.
    func listEntities(input: ListEntitiesInput) async throws -> ListEntitiesOutputResponse
    /// Lists all scenes in a workspace.
    func listScenes(input: ListScenesInput) async throws -> ListScenesOutputResponse
    /// Lists all tags associated with a resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Retrieves information about workspaces in the current account.
    func listWorkspaces(input: ListWorkspacesInput) async throws -> ListWorkspacesOutputResponse
    /// Adds tags to a resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes tags from a resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates information in a component type.
    func updateComponentType(input: UpdateComponentTypeInput) async throws -> UpdateComponentTypeOutputResponse
    /// Updates an entity.
    func updateEntity(input: UpdateEntityInput) async throws -> UpdateEntityOutputResponse
    /// Updates a scene.
    func updateScene(input: UpdateSceneInput) async throws -> UpdateSceneOutputResponse
    /// Updates a workspace.
    func updateWorkspace(input: UpdateWorkspaceInput) async throws -> UpdateWorkspaceOutputResponse
}

public protocol IoTTwinMakerClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum IoTTwinMakerClientTypes {}
