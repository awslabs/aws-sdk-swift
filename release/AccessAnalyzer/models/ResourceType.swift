// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceType {
    case awsIamRole
    case awsKmsKey
    case awsLambdaFunction
    case awsLambdaLayerversion
    case awsS3Bucket
    case awsSecretsmanagerSecret
    case awsSqsQueue
    case sdkUnknown(String)
}

extension ResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceType] {
        return [
            .awsIamRole,
            .awsKmsKey,
            .awsLambdaFunction,
            .awsLambdaLayerversion,
            .awsS3Bucket,
            .awsSecretsmanagerSecret,
            .awsSqsQueue,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awsIamRole: return "AWS::IAM::Role"
        case .awsKmsKey: return "AWS::KMS::Key"
        case .awsLambdaFunction: return "AWS::Lambda::Function"
        case .awsLambdaLayerversion: return "AWS::Lambda::LayerVersion"
        case .awsS3Bucket: return "AWS::S3::Bucket"
        case .awsSecretsmanagerSecret: return "AWS::SecretsManager::Secret"
        case .awsSqsQueue: return "AWS::SQS::Queue"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
    }
}
