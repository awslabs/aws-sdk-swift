// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AclGrantee: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case id
        case sdkUnknown
        case uri
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .id(id):
                if let id = id {
                    try container.encode(id, forKey: .id)
                }
            case let .uri(uri):
                if let uri = uri {
                    try container.encode(uri, forKey: .uri)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try values.decodeIfPresent(String.self, forKey: .id)
        if let id = idDecoded {
            self = .id(id)
            return
        }
        let uriDecoded = try values.decodeIfPresent(String.self, forKey: .uri)
        if let uri = uriDecoded {
            self = .uri(uri)
            return
        }
        self = .sdkUnknown("")
    }
}
