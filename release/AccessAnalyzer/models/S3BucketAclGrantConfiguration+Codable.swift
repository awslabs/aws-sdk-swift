// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3BucketAclGrantConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case grantee
        case permission
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let grantee = grantee {
            try encodeContainer.encode(grantee, forKey: .grantee)
        }
        if let permission = permission {
            try encodeContainer.encode(permission.rawValue, forKey: .permission)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionDecoded = try containerValues.decodeIfPresent(AclPermission.self, forKey: .permission)
        permission = permissionDecoded
        let granteeDecoded = try containerValues.decodeIfPresent(AclGrantee.self, forKey: .grantee)
        grantee = granteeDecoded
    }
}
