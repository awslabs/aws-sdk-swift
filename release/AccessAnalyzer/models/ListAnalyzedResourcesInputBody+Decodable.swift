// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnalyzedResourcesInputBody: Equatable {
    public let analyzerArn: String?
    public let resourceType: ResourceType?
    public let nextToken: String?
    public let maxResults: Int?
}

extension ListAnalyzedResourcesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyzerArn
        case maxResults
        case nextToken
        case resourceType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzerArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .analyzerArn)
        analyzerArn = analyzerArnDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
