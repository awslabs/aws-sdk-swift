// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAccessPreviewsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListAccessPreviewsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListAccessPreviewsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListAccessPreviewsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let analyzerArn = input.operationInput.analyzerArn {
            let analyzerArnQueryItem = URLQueryItem(name: "analyzerArn".urlPercentEncoding(), value: String(analyzerArn).urlPercentEncoding())
            input.builder.withQueryItem(analyzerArnQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListAccessPreviewsInput>
    public typealias MOutput = OperationOutput<ListAccessPreviewsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListAccessPreviewsOutputError>
}
