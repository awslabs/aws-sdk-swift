// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateArchiveRuleInputBody: Equatable {
    public let ruleName: String?
    public let filter: [String:Criterion]?
    public let clientToken: String?
}

extension CreateArchiveRuleInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case filter
        case ruleName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ruleName)
        ruleName = ruleNameDecoded
        let filterContainer = try containerValues.decodeIfPresent([String:Criterion].self, forKey: .filter)
        var filterDecoded0: [String:Criterion]? = nil
        if let filterContainer = filterContainer {
            filterDecoded0 = [String:Criterion]()
            for (key0, criterion0) in filterContainer {
                filterDecoded0?[key0] = criterion0
            }
        }
        filter = filterDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
