// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudTrailProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case endTime
        case startTime
        case trailProperties
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endTime = endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let startTime = startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let trailProperties = trailProperties {
            var trailPropertiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .trailProperties)
            for trailpropertieslist0 in trailProperties {
                try trailPropertiesContainer.encode(trailpropertieslist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trailPropertiesContainer = try containerValues.decodeIfPresent([TrailProperties].self, forKey: .trailProperties)
        var trailPropertiesDecoded0:[TrailProperties]? = nil
        if let trailPropertiesContainer = trailPropertiesContainer {
            trailPropertiesDecoded0 = [TrailProperties]()
            for structure0 in trailPropertiesContainer {
                trailPropertiesDecoded0?.append(structure0)
            }
        }
        trailProperties = trailPropertiesDecoded0
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
