// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateAccessPreviewInputBody: Equatable {
    public let analyzerArn: String?
    public let configurations: [String:Configuration]?
    public let clientToken: String?
}

extension CreateAccessPreviewInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyzerArn
        case clientToken
        case configurations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analyzerArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .analyzerArn)
        analyzerArn = analyzerArnDecoded
        let configurationsContainer = try containerValues.decodeIfPresent([String:Configuration].self, forKey: .configurations)
        var configurationsDecoded0: [String:Configuration]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [String:Configuration]()
            for (key0, configuration0) in configurationsContainer {
                configurationsDecoded0?[key0] = configuration0
            }
        }
        configurations = configurationsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
