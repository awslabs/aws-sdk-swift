// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about a finding.</p>
public struct Finding: Equatable {
    /// <p>The action in the analyzed policy statement that an external principal has permission to
    ///          use.</p>
    public let action: [String]?
    /// <p>The time at which the resource was analyzed.</p>
    public let analyzedAt: Date?
    /// <p>The condition in the analyzed policy statement that resulted in a finding.</p>
    public let condition: [String:String]?
    /// <p>The time at which the finding was generated.</p>
    public let createdAt: Date?
    /// <p>An error.</p>
    public let error: String?
    /// <p>The ID of the finding.</p>
    public let id: String?
    /// <p>Indicates whether the policy that generated the finding allows public access to the
    ///          resource.</p>
    public let isPublic: Bool?
    /// <p>The external principal that access to a resource within the zone of trust.</p>
    public let principal: [String:String]?
    /// <p>The resource that an external principal has access to.</p>
    public let resource: String?
    /// <p>The AWS account ID that owns the resource.</p>
    public let resourceOwnerAccount: String?
    /// <p>The type of the resource identified in the finding.</p>
    public let resourceType: ResourceType?
    /// <p>The sources of the finding. This indicates how the access that generated the finding is
    ///          granted. It is populated for Amazon S3 bucket findings.</p>
    public let sources: [FindingSource]?
    /// <p>The current status of the finding.</p>
    public let status: FindingStatus?
    /// <p>The time at which the finding was updated.</p>
    public let updatedAt: Date?

    public init (
        action: [String]? = nil,
        analyzedAt: Date? = nil,
        condition: [String:String]? = nil,
        createdAt: Date? = nil,
        error: String? = nil,
        id: String? = nil,
        isPublic: Bool? = nil,
        principal: [String:String]? = nil,
        resource: String? = nil,
        resourceOwnerAccount: String? = nil,
        resourceType: ResourceType? = nil,
        sources: [FindingSource]? = nil,
        status: FindingStatus? = nil,
        updatedAt: Date? = nil
    )
    {
        self.action = action
        self.analyzedAt = analyzedAt
        self.condition = condition
        self.createdAt = createdAt
        self.error = error
        self.id = id
        self.isPublic = isPublic
        self.principal = principal
        self.resource = resource
        self.resourceOwnerAccount = resourceOwnerAccount
        self.resourceType = resourceType
        self.sources = sources
        self.status = status
        self.updatedAt = updatedAt
    }
}
