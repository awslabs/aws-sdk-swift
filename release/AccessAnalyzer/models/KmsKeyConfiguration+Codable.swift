// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KmsKeyConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case grants
        case keyPolicies
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let grants = grants {
            var grantsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .grants)
            for kmsgrantconfigurationslist0 in grants {
                try grantsContainer.encode(kmsgrantconfigurationslist0)
            }
        }
        if let keyPolicies = keyPolicies {
            var keyPoliciesContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .keyPolicies)
            for (dictKey0, kmskeypoliciesmap0) in keyPolicies {
                try keyPoliciesContainer.encode(kmskeypoliciesmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyPoliciesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .keyPolicies)
        var keyPoliciesDecoded0: [String:String]? = nil
        if let keyPoliciesContainer = keyPoliciesContainer {
            keyPoliciesDecoded0 = [String:String]()
            for (key0, kmskeypolicy0) in keyPoliciesContainer {
                keyPoliciesDecoded0?[key0] = kmskeypolicy0
            }
        }
        keyPolicies = keyPoliciesDecoded0
        let grantsContainer = try containerValues.decodeIfPresent([KmsGrantConfiguration].self, forKey: .grants)
        var grantsDecoded0:[KmsGrantConfiguration]? = nil
        if let grantsContainer = grantsContainer {
            grantsDecoded0 = [KmsGrantConfiguration]()
            for structure0 in grantsContainer {
                grantsDecoded0?.append(structure0)
            }
        }
        grants = grantsDecoded0
    }
}
