// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The criteria to use in the filter that defines the archive rule.</p>
public struct Criterion: Equatable {
    /// <p>A "contains" operator to match for the filter used to create the rule.</p>
    public let contains: [String]?
    /// <p>An "equals" operator to match for the filter used to create the rule.</p>
    public let eq: [String]?
    /// <p>An "exists" operator to match for the filter used to create the rule. </p>
    public let exists: Bool?
    /// <p>A "not equals" operator to match for the filter used to create the rule.</p>
    public let neq: [String]?

    public init (
        contains: [String]? = nil,
        eq: [String]? = nil,
        exists: Bool? = nil,
        neq: [String]? = nil
    )
    {
        self.contains = contains
        self.eq = eq
        self.exists = exists
        self.neq = neq
    }
}
