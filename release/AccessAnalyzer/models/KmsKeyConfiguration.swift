// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Proposed access control configuration for a KMS key. You can propose a configuration for
///          a new KMS key or an existing KMS key that you own by specifying the key policy and KMS
///          grant configuration. If the configuration is for an existing key and you do not specify the
///          key policy, the access preview uses the existing policy for the key. If the access preview
///          is for a new resource and you do not specify the key policy, then the access preview uses
///          the default key policy. The proposed key policy cannot be an empty string. For more
///          information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default key
///             policy</a>. For more information about key policy limits, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/resource-limits.html">Resource
///             quotas</a>.</p>
///          <p/>
public struct KmsKeyConfiguration: Equatable {
    /// <p>A list of proposed grant configurations for the KMS key. If the proposed grant
    ///          configuration is for an existing key, the access preview uses the proposed list of grant
    ///          configurations in place of the existing grants. Otherwise, the access preview uses the
    ///          existing grants for the key.</p>
    public let grants: [KmsGrantConfiguration]?
    /// <p>Resource policy configuration for the KMS key. The only valid value for the name of the
    ///          key policy is <code>default</code>. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default key
    ///             policy</a>.</p>
    public let keyPolicies: [String:String]?

    public init (
        grants: [KmsGrantConfiguration]? = nil,
        keyPolicies: [String:String]? = nil
    )
    {
        self.grants = grants
        self.keyPolicies = keyPolicies
    }
}
