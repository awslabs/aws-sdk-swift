// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArchiveRulesOutputBody: Equatable {
    public let archiveRules: [ArchiveRuleSummary]?
    public let nextToken: String?
}

extension ListArchiveRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case archiveRules
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archiveRulesContainer = try containerValues.decodeIfPresent([ArchiveRuleSummary].self, forKey: .archiveRules)
        var archiveRulesDecoded0:[ArchiveRuleSummary]? = nil
        if let archiveRulesContainer = archiveRulesContainer {
            archiveRulesDecoded0 = [ArchiveRuleSummary]()
            for structure0 in archiveRulesContainer {
                archiveRulesDecoded0?.append(structure0)
            }
        }
        archiveRules = archiveRulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
