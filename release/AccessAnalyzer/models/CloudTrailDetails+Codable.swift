// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudTrailDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accessRole
        case endTime
        case startTime
        case trails
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessRole = accessRole {
            try encodeContainer.encode(accessRole, forKey: .accessRole)
        }
        if let endTime = endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let startTime = startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let trails = trails {
            var trailsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .trails)
            for traillist0 in trails {
                try trailsContainer.encode(traillist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trailsContainer = try containerValues.decodeIfPresent([Trail].self, forKey: .trails)
        var trailsDecoded0:[Trail]? = nil
        if let trailsContainer = trailsContainer {
            trailsDecoded0 = [Trail]()
            for structure0 in trailsContainer {
                trailsDecoded0?.append(structure0)
            }
        }
        trails = trailsDecoded0
        let accessRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessRole)
        accessRole = accessRoleDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
    }
}
