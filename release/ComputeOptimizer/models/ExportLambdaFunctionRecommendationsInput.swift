// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ExportLambdaFunctionRecommendationsInput: Equatable {
    /// <p>The IDs of the AWS accounts for which to export Lambda function
    ///             recommendations.</p>
    ///
    ///
    ///
    ///         <p>If your account is the management account of an organization, use this parameter to
    ///             specify the member account for which you want to export recommendations.</p>
    ///         <p>This parameter cannot be specified together with the include member accounts
    ///             parameter. The parameters are mutually exclusive.</p>
    ///         <p>Recommendations for member accounts are not included in the export if this parameter,
    ///             or the include member accounts parameter, is omitted.</p>
    ///         <p>You can specify multiple account IDs per request.</p>
    public let accountIds: [String]?
    /// <p>The recommendations data to include in the export file. For more information about the
    ///             fields that can be exported, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html#exported-files">Exported files</a> in the <i>Compute Optimizer User Guide</i>.</p>
    public let fieldsToExport: [ExportableLambdaFunctionField]?
    /// <p>The format of the export file.</p>
    ///         <p>The only export file format currently supported is <code>Csv</code>.</p>
    public let fileFormat: FileFormat?
    /// <p>An array of objects that describe a filter to export a more specific set of Lambda
    ///             function recommendations.</p>
    public let filters: [LambdaFunctionRecommendationFilter]?
    /// <p>Indicates whether to include recommendations for resources in all member accounts of
    ///             the organization if your account is the management account of an organization.</p>
    ///
    ///         <p>The member accounts must also be opted in to Compute Optimizer, and trusted access for
    ///             Compute Optimizer must be enabled in the organization account. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/security-iam.html#trusted-service-access">Compute Optimizer and
    ///                 AWS Organizations trusted access</a> in the <i>AWS Compute Optimizer User
    ///                 Guide</i>.</p>
    ///
    ///
    ///
    ///         <p>Recommendations for member accounts of the organization are not included in the export
    ///             file if this parameter is omitted.</p>
    ///         <p>This parameter cannot be specified together with the account IDs parameter. The
    ///             parameters are mutually exclusive.</p>
    ///         <p>Recommendations for member accounts are not included in the export if this parameter,
    ///             or the account IDs parameter, is omitted.</p>
    public let includeMemberAccounts: Bool
    /// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a
    ///             recommendations export job.</p>
    ///         <p>You must create the destination Amazon S3 bucket for your recommendations export before you
    ///             create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the
    ///             S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the
    ///             export file to it. If you plan to specify an object prefix when you create the export
    ///             job, you must include the object prefix in the policy that you add to the S3 bucket. For
    ///             more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer user
    ///             guide</i>.</p>
    public let s3DestinationConfig: S3DestinationConfig?

    public init (
        accountIds: [String]? = nil,
        fieldsToExport: [ExportableLambdaFunctionField]? = nil,
        fileFormat: FileFormat? = nil,
        filters: [LambdaFunctionRecommendationFilter]? = nil,
        includeMemberAccounts: Bool = false,
        s3DestinationConfig: S3DestinationConfig? = nil
    )
    {
        self.accountIds = accountIds
        self.fieldsToExport = fieldsToExport
        self.fileFormat = fileFormat
        self.filters = filters
        self.includeMemberAccounts = includeMemberAccounts
        self.s3DestinationConfig = s3DestinationConfig
    }
}
