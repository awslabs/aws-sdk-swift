// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LambdaFunctionMemoryRecommendationOption: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case memorySize
        case projectedUtilizationMetrics
        case rank
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if memorySize != 0 {
            try encodeContainer.encode(memorySize, forKey: .memorySize)
        }
        if let projectedUtilizationMetrics = projectedUtilizationMetrics {
            var projectedUtilizationMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .projectedUtilizationMetrics)
            for lambdafunctionmemoryprojectedmetrics0 in projectedUtilizationMetrics {
                try projectedUtilizationMetricsContainer.encode(lambdafunctionmemoryprojectedmetrics0)
            }
        }
        if rank != 0 {
            try encodeContainer.encode(rank, forKey: .rank)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rankDecoded = try containerValues.decode(Int.self, forKey: .rank)
        rank = rankDecoded
        let memorySizeDecoded = try containerValues.decode(Int.self, forKey: .memorySize)
        memorySize = memorySizeDecoded
        let projectedUtilizationMetricsContainer = try containerValues.decodeIfPresent([LambdaFunctionMemoryProjectedMetric].self, forKey: .projectedUtilizationMetrics)
        var projectedUtilizationMetricsDecoded0:[LambdaFunctionMemoryProjectedMetric]? = nil
        if let projectedUtilizationMetricsContainer = projectedUtilizationMetricsContainer {
            projectedUtilizationMetricsDecoded0 = [LambdaFunctionMemoryProjectedMetric]()
            for structure0 in projectedUtilizationMetricsContainer {
                projectedUtilizationMetricsDecoded0?.append(structure0)
            }
        }
        projectedUtilizationMetrics = projectedUtilizationMetricsDecoded0
    }
}
