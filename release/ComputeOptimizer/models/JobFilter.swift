// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a filter that returns a more specific list of recommendation export jobs.
///             Use this filter with the <code>DescribeRecommendationExportJobs</code> action.</p>
///
///         <p>You can use <code>EBSFilter</code> with the <code>GetEBSVolumeRecommendations</code>
///             action, <code>LambdaFunctionRecommendationFilter</code> with the
///                 <code>GetLambdaFunctionRecommendations</code> action, and <code>Filter</code> with
///             the <code>GetAutoScalingGroupRecommendations</code> and
///                 <code>GetEC2InstanceRecommendations</code> actions.</p>
public struct JobFilter: Equatable {
    /// <p>The name of the filter.</p>
    ///
    ///         <p>Specify <code>ResourceType</code> to return export jobs of a specific resource type
    ///             (e.g., <code>Ec2Instance</code>).</p>
    ///
    ///         <p>Specify <code>JobStatus</code> to return export jobs with a specific status (e.g,
    ///                 <code>Complete</code>).</p>
    public let name: JobFilterName?
    /// <p>The value of the filter.</p>
    ///
    ///         <p>The valid values for this parameter are as follows, depending on what you specify for
    ///             the <code>name</code> parameter:</p>
    ///
    ///         <ul>
    ///             <li>
    ///                 <p>Specify <code>Ec2Instance</code> or <code>AutoScalingGroup</code> if you
    ///                     specify the <code>name</code> parameter as <code>ResourceType</code>. There is
    ///                     no filter for EBS volumes because volume recommendations cannot be exported at
    ///                     this time.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Specify <code>Queued</code>, <code>InProgress</code>, <code>Complete</code>,
    ///                     or <code>Failed</code> if you specify the <code>name</code> parameter as
    ///                         <code>JobStatus</code>.</p>
    ///             </li>
    ///          </ul>
    public let values: [String]?

    public init (
        name: JobFilterName? = nil,
        values: [String]? = nil
    )
    {
        self.name = name
        self.values = values
    }
}
