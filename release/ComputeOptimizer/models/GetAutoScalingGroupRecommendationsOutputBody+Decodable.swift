// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAutoScalingGroupRecommendationsOutputBody: Equatable {
    public let nextToken: String?
    public let autoScalingGroupRecommendations: [AutoScalingGroupRecommendation]?
    public let errors: [GetRecommendationError]?
}

extension GetAutoScalingGroupRecommendationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case autoScalingGroupRecommendations
        case errors
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let autoScalingGroupRecommendationsContainer = try containerValues.decodeIfPresent([AutoScalingGroupRecommendation].self, forKey: .autoScalingGroupRecommendations)
        var autoScalingGroupRecommendationsDecoded0:[AutoScalingGroupRecommendation]? = nil
        if let autoScalingGroupRecommendationsContainer = autoScalingGroupRecommendationsContainer {
            autoScalingGroupRecommendationsDecoded0 = [AutoScalingGroupRecommendation]()
            for structure0 in autoScalingGroupRecommendationsContainer {
                autoScalingGroupRecommendationsDecoded0?.append(structure0)
            }
        }
        autoScalingGroupRecommendations = autoScalingGroupRecommendationsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([GetRecommendationError].self, forKey: .errors)
        var errorsDecoded0:[GetRecommendationError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [GetRecommendationError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
