// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEC2InstanceRecommendationsOutputBody: Equatable {
    public let nextToken: String?
    public let instanceRecommendations: [InstanceRecommendation]?
    public let errors: [GetRecommendationError]?
}

extension GetEC2InstanceRecommendationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case errors
        case instanceRecommendations
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let instanceRecommendationsContainer = try containerValues.decodeIfPresent([InstanceRecommendation].self, forKey: .instanceRecommendations)
        var instanceRecommendationsDecoded0:[InstanceRecommendation]? = nil
        if let instanceRecommendationsContainer = instanceRecommendationsContainer {
            instanceRecommendationsDecoded0 = [InstanceRecommendation]()
            for structure0 in instanceRecommendationsContainer {
                instanceRecommendationsDecoded0?.append(structure0)
            }
        }
        instanceRecommendations = instanceRecommendationsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([GetRecommendationError].self, forKey: .errors)
        var errorsDecoded0:[GetRecommendationError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [GetRecommendationError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
