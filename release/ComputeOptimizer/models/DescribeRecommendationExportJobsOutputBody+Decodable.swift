// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRecommendationExportJobsOutputBody: Equatable {
    public let recommendationExportJobs: [RecommendationExportJob]?
    public let nextToken: String?
}

extension DescribeRecommendationExportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case recommendationExportJobs
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationExportJobsContainer = try containerValues.decodeIfPresent([RecommendationExportJob].self, forKey: .recommendationExportJobs)
        var recommendationExportJobsDecoded0:[RecommendationExportJob]? = nil
        if let recommendationExportJobsContainer = recommendationExportJobsContainer {
            recommendationExportJobsDecoded0 = [RecommendationExportJob]()
            for structure0 in recommendationExportJobsContainer {
                recommendationExportJobsDecoded0?.append(structure0)
            }
        }
        recommendationExportJobs = recommendationExportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
