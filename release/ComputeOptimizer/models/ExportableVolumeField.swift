// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ExportableVolumeField {
    case accountId
    case currentConfigurationVolumeBaselineIops
    case currentConfigurationVolumeBaselineThroughput
    case currentConfigurationVolumeBurstIops
    case currentConfigurationVolumeBurstThroughput
    case currentConfigurationVolumeSize
    case currentConfigurationVolumeType
    case currentMonthlyPrice
    case finding
    case lastRefreshTimestamp
    case lookbackPeriodInDays
    case recommendationOptionsConfigurationVolumeBaselineIops
    case recommendationOptionsConfigurationVolumeBaselineThroughput
    case recommendationOptionsConfigurationVolumeBurstIops
    case recommendationOptionsConfigurationVolumeBurstThroughput
    case recommendationOptionsConfigurationVolumeSize
    case recommendationOptionsConfigurationVolumeType
    case recommendationOptionsMonthlyPrice
    case recommendationOptionsPerformanceRisk
    case utilizationMetricsVolumeReadBytesPerSecondMaximum
    case utilizationMetricsVolumeReadOpsPerSecondMaximum
    case utilizationMetricsVolumeWriteBytesPerSecondMaximum
    case utilizationMetricsVolumeWriteOpsPerSecondMaximum
    case volumeArn
    case sdkUnknown(String)
}

extension ExportableVolumeField : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ExportableVolumeField] {
        return [
            .accountId,
            .currentConfigurationVolumeBaselineIops,
            .currentConfigurationVolumeBaselineThroughput,
            .currentConfigurationVolumeBurstIops,
            .currentConfigurationVolumeBurstThroughput,
            .currentConfigurationVolumeSize,
            .currentConfigurationVolumeType,
            .currentMonthlyPrice,
            .finding,
            .lastRefreshTimestamp,
            .lookbackPeriodInDays,
            .recommendationOptionsConfigurationVolumeBaselineIops,
            .recommendationOptionsConfigurationVolumeBaselineThroughput,
            .recommendationOptionsConfigurationVolumeBurstIops,
            .recommendationOptionsConfigurationVolumeBurstThroughput,
            .recommendationOptionsConfigurationVolumeSize,
            .recommendationOptionsConfigurationVolumeType,
            .recommendationOptionsMonthlyPrice,
            .recommendationOptionsPerformanceRisk,
            .utilizationMetricsVolumeReadBytesPerSecondMaximum,
            .utilizationMetricsVolumeReadOpsPerSecondMaximum,
            .utilizationMetricsVolumeWriteBytesPerSecondMaximum,
            .utilizationMetricsVolumeWriteOpsPerSecondMaximum,
            .volumeArn,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accountId: return "AccountId"
        case .currentConfigurationVolumeBaselineIops: return "CurrentConfigurationVolumeBaselineIOPS"
        case .currentConfigurationVolumeBaselineThroughput: return "CurrentConfigurationVolumeBaselineThroughput"
        case .currentConfigurationVolumeBurstIops: return "CurrentConfigurationVolumeBurstIOPS"
        case .currentConfigurationVolumeBurstThroughput: return "CurrentConfigurationVolumeBurstThroughput"
        case .currentConfigurationVolumeSize: return "CurrentConfigurationVolumeSize"
        case .currentConfigurationVolumeType: return "CurrentConfigurationVolumeType"
        case .currentMonthlyPrice: return "CurrentMonthlyPrice"
        case .finding: return "Finding"
        case .lastRefreshTimestamp: return "LastRefreshTimestamp"
        case .lookbackPeriodInDays: return "LookbackPeriodInDays"
        case .recommendationOptionsConfigurationVolumeBaselineIops: return "RecommendationOptionsConfigurationVolumeBaselineIOPS"
        case .recommendationOptionsConfigurationVolumeBaselineThroughput: return "RecommendationOptionsConfigurationVolumeBaselineThroughput"
        case .recommendationOptionsConfigurationVolumeBurstIops: return "RecommendationOptionsConfigurationVolumeBurstIOPS"
        case .recommendationOptionsConfigurationVolumeBurstThroughput: return "RecommendationOptionsConfigurationVolumeBurstThroughput"
        case .recommendationOptionsConfigurationVolumeSize: return "RecommendationOptionsConfigurationVolumeSize"
        case .recommendationOptionsConfigurationVolumeType: return "RecommendationOptionsConfigurationVolumeType"
        case .recommendationOptionsMonthlyPrice: return "RecommendationOptionsMonthlyPrice"
        case .recommendationOptionsPerformanceRisk: return "RecommendationOptionsPerformanceRisk"
        case .utilizationMetricsVolumeReadBytesPerSecondMaximum: return "UtilizationMetricsVolumeReadBytesPerSecondMaximum"
        case .utilizationMetricsVolumeReadOpsPerSecondMaximum: return "UtilizationMetricsVolumeReadOpsPerSecondMaximum"
        case .utilizationMetricsVolumeWriteBytesPerSecondMaximum: return "UtilizationMetricsVolumeWriteBytesPerSecondMaximum"
        case .utilizationMetricsVolumeWriteOpsPerSecondMaximum: return "UtilizationMetricsVolumeWriteOpsPerSecondMaximum"
        case .volumeArn: return "VolumeArn"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ExportableVolumeField(rawValue: rawValue) ?? ExportableVolumeField.sdkUnknown(rawValue)
    }
}
