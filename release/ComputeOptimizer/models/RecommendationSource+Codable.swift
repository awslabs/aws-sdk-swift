// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RecommendationSource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case recommendationSourceArn
        case recommendationSourceType
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let recommendationSourceArn = recommendationSourceArn {
            try encodeContainer.encode(recommendationSourceArn, forKey: .recommendationSourceArn)
        }
        if let recommendationSourceType = recommendationSourceType {
            try encodeContainer.encode(recommendationSourceType.rawValue, forKey: .recommendationSourceType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationSourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recommendationSourceArn)
        recommendationSourceArn = recommendationSourceArnDecoded
        let recommendationSourceTypeDecoded = try containerValues.decodeIfPresent(RecommendationSourceType.self, forKey: .recommendationSourceType)
        recommendationSourceType = recommendationSourceTypeDecoded
    }
}
