// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EBSMetricName {
    case volumeReadBytesPerSecond
    case volumeReadOpsPerSecond
    case volumeWriteBytesPerSecond
    case volumeWriteOpsPerSecond
    case sdkUnknown(String)
}

extension EBSMetricName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EBSMetricName] {
        return [
            .volumeReadBytesPerSecond,
            .volumeReadOpsPerSecond,
            .volumeWriteBytesPerSecond,
            .volumeWriteOpsPerSecond,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .volumeReadBytesPerSecond: return "VolumeReadBytesPerSecond"
        case .volumeReadOpsPerSecond: return "VolumeReadOpsPerSecond"
        case .volumeWriteBytesPerSecond: return "VolumeWriteBytesPerSecond"
        case .volumeWriteOpsPerSecond: return "VolumeWriteOpsPerSecond"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EBSMetricName(rawValue: rawValue) ?? EBSMetricName.sdkUnknown(rawValue)
    }
}
