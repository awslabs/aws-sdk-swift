// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeRecommendationExportJobsInputBody: Equatable {
    public let jobIds: [String]?
    public let filters: [JobFilter]?
    public let nextToken: String?
    public let maxResults: Int?
}

extension DescribeRecommendationExportJobsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters
        case jobIds
        case maxResults
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .jobIds)
        var jobIdsDecoded0:[String]? = nil
        if let jobIdsContainer = jobIdsContainer {
            jobIdsDecoded0 = [String]()
            for string0 in jobIdsContainer {
                jobIdsDecoded0?.append(string0)
            }
        }
        jobIds = jobIdsDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([JobFilter].self, forKey: .filters)
        var filtersDecoded0:[JobFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [JobFilter]()
            for structure0 in filtersContainer {
                filtersDecoded0?.append(structure0)
            }
        }
        filters = filtersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
