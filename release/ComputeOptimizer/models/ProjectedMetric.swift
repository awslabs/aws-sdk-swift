// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a projected utilization metric of a recommendation option, such as an Amazon EC2
///             instance. This represents the projected utilization of a recommendation option had you
///             used that resource during the analyzed period.</p>
///
///         <p>Compare the utilization metric data of your resource against its projected utilization
///             metric data to determine the performance difference between your current resource and
///             the recommended option.</p>
///
///         <note>
///             <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected
///                 utilization metrics returned when you run the
///                     <code>GetEC2RecommendationProjectedMetrics</code> action. Additionally, the
///                     <code>Memory</code> metric is returned only for resources that have the unified
///                 CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory
///                     Utilization with the CloudWatch Agent</a>.</p>
///         </note>
public struct ProjectedMetric: Equatable {
    /// <p>The name of the projected utilization metric.</p>
    ///         <p>The following projected utilization metrics are returned:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>Cpu</code> - The projected percentage of allocated EC2 compute units
    ///                     that would be in use on the recommendation option had you used that resource
    ///                     during the analyzed period. This metric identifies the processing power required
    ///                     to run an application on the recommendation option.</p>
    ///                 <p>Depending on the instance type, tools in your operating system can show a
    ///                     lower percentage than CloudWatch when the instance is not allocated a full
    ///                     processor core.</p>
    ///                 <p>Units: Percent</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Memory</code> - The percentage of memory that would be in use on the
    ///                     recommendation option had you used that resource during the analyzed period.
    ///                     This metric identifies the amount of memory required to run an application on
    ///                     the recommendation option.</p>
    ///                 <p>Units: Percent</p>
    ///                 <note>
    ///                     <p>The <code>Memory</code> metric is returned only for resources that have
    ///                         the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory
    ///                             Utilization with the CloudWatch Agent</a>.</p>
    ///                 </note>
    ///             </li>
    ///          </ul>
    public let name: MetricName?
    /// <p>The time stamps of the projected utilization metric.</p>
    public let timestamps: [Date]?
    /// <p>The values of the projected utilization metrics.</p>
    public let values: [Double]?

    public init (
        name: MetricName? = nil,
        timestamps: [Date]? = nil,
        values: [Double]? = nil
    )
    {
        self.name = name
        self.timestamps = timestamps
        self.values = values
    }
}
