// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an Amazon EC2 instance recommendation.</p>
public struct InstanceRecommendation: Equatable {
    /// <p>The AWS account ID of the instance.</p>
    public let accountId: String?
    /// <p>The instance type of the current instance.</p>
    public let currentInstanceType: String?
    /// <p>The finding classification of the instance.</p>
    ///         <p>Findings for instances include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>Underprovisioned</code>
    ///                   </b>—An instance is
    ///                     considered under-provisioned when at least one specification of your instance,
    ///                     such as CPU, memory, or network, does not meet the performance requirements of
    ///                     your workload. Under-provisioned instances may lead to poor application
    ///                     performance.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>Overprovisioned</code>
    ///                   </b>—An instance is
    ///                     considered over-provisioned when at least one specification of your instance,
    ///                     such as CPU, memory, or network, can be sized down while still meeting the
    ///                     performance requirements of your workload, and no specification is
    ///                     under-provisioned. Over-provisioned instances may lead to unnecessary
    ///                     infrastructure cost.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>Optimized</code>
    ///                   </b>—An instance
    ///                     is considered optimized when all specifications of your instance, such as CPU,
    ///                     memory, and network, meet the performance requirements of your workload and is
    ///                     not over provisioned. For optimized resources, AWS Compute Optimizer might recommend a new
    ///                     generation instance type.</p>
    ///
    ///
    ///             </li>
    ///          </ul>
    public let finding: Finding?
    /// <p>The reason for the finding classification of the instance.</p>
    ///         <p>Finding reason codes for instances include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>CPUOverprovisioned</code>
    ///                   </b> — The
    ///                     instance’s CPU configuration can be sized down while still meeting the
    ///                     performance requirements of your workload. This is identified by analyzing the
    ///                         <code>CPUUtilization</code> metric of the current instance during the
    ///                     look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>CPUUnderprovisioned</code>
    ///                   </b> — The
    ///                     instance’s CPU configuration doesn't meet the performance requirements of your
    ///                     workload and there is an alternative instance type that provides better CPU
    ///                     performance. This is identified by analyzing the <code>CPUUtilization</code>
    ///                     metric of the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>MemoryOverprovisioned</code>
    ///                   </b> — The
    ///                     instance’s memory configuration can be sized down while still meeting the
    ///                     performance requirements of your workload. This is identified by analyzing the
    ///                     memory utilization metric of the current instance during the look-back
    ///                     period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>MemoryUnderprovisioned</code>
    ///                   </b> — The
    ///                     instance’s memory configuration doesn't meet the performance requirements of
    ///                     your workload and there is an alternative instance type that provides better
    ///                     memory performance. This is identified by analyzing the memory utilization
    ///                     metric of the current instance during the look-back period.</p>
    ///                 <note>
    ///                     <p>Memory utilization is analyzed only for resources that have the
    ///                         unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling memory
    ///                             utilization with the Amazon CloudWatch Agent</a> in the <i>AWS Compute Optimizer
    ///                             User Guide</i>. On Linux instances, Compute Optimizer analyses the
    ///                             <code>mem_used_percent</code> metric in the <code>CWAgent</code>
    ///                         namespace, or the legacy <code>MemoryUtilization</code> metric in the
    ///                             <code>System/Linux</code> namespace. On Windows instances, Compute Optimizer analyses
    ///                         the <code>Memory % Committed Bytes In Use</code> metric in the
    ///                             <code>CWAgent</code> namespace.</p>
    ///
    ///
    ///                 </note>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>EBSThroughputOverprovisioned</code>
    ///                   </b> —
    ///                     The instance’s EBS throughput configuration can be sized down while still
    ///                     meeting the performance requirements of your workload. This is identified by
    ///                     analyzing the <code>VolumeReadOps</code> and <code>VolumeWriteOps</code> metrics
    ///                     of EBS volumes attached to the current instance during the look-back
    ///                     period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>EBSThroughputUnderprovisioned</code>
    ///                   </b> —
    ///                     The instance’s EBS throughput configuration doesn't meet the performance
    ///                     requirements of your workload and there is an alternative instance type that
    ///                     provides better EBS throughput performance. This is identified by analyzing the
    ///                         <code>VolumeReadOps</code> and <code>VolumeWriteOps</code> metrics of EBS
    ///                     volumes attached to the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>EBSIOPSOverprovisioned</code>
    ///                   </b> — The
    ///                     instance’s EBS IOPS configuration can be sized down while still meeting the
    ///                     performance requirements of your workload. This is identified by analyzing the
    ///                         <code>VolumeReadBytes</code> and <code>VolumeWriteBytes</code> metric of EBS
    ///                     volumes attached to the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>EBSIOPSUnderprovisioned</code>
    ///                   </b> — The
    ///                     instance’s EBS IOPS configuration doesn't meet the performance requirements of
    ///                     your workload and there is an alternative instance type that provides better EBS
    ///                     IOPS performance. This is identified by analyzing the
    ///                         <code>VolumeReadBytes</code> and <code>VolumeWriteBytes</code> metric of EBS
    ///                     volumes attached to the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>NetworkBandwidthOverprovisioned</code>
    ///                   </b>
    ///                     — The instance’s network bandwidth configuration can be sized down while still
    ///                     meeting the performance requirements of your workload. This is identified by
    ///                     analyzing the <code>NetworkIn</code> and <code>NetworkOut</code> metrics of the
    ///                     current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>NetworkBandwidthUnderprovisioned</code>
    ///                   </b>
    ///                     — The instance’s network bandwidth configuration doesn't meet the performance
    ///                     requirements of your workload and there is an alternative instance type that
    ///                     provides better network bandwidth performance. This is identified by analyzing
    ///                     the <code>NetworkIn</code> and <code>NetworkOut</code> metrics of the current
    ///                     instance during the look-back period. This finding reason happens when the
    ///                         <code>NetworkIn</code> or <code>NetworkOut</code> performance of an instance
    ///                     is impacted.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>NetworkPPSOverprovisioned</code>
    ///                   </b> — The
    ///                     instance’s network PPS (packets per second) configuration can be sized down
    ///                     while still meeting the performance requirements of your workload. This is
    ///                     identified by analyzing the <code>NetworkPacketsIn</code> and
    ///                         <code>NetworkPacketsIn</code> metrics of the current instance during the
    ///                     look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>NetworkPPSUnderprovisioned</code>
    ///                   </b> — The
    ///                     instance’s network PPS (packets per second) configuration doesn't meet the
    ///                     performance requirements of your workload and there is an alternative instance
    ///                     type that provides better network PPS performance. This is identified by
    ///                     analyzing the <code>NetworkPacketsIn</code> and <code>NetworkPacketsIn</code>
    ///                     metrics of the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>DiskIOPSOverprovisioned</code>
    ///                   </b> — The
    ///                     instance’s disk IOPS configuration can be sized down while still meeting the
    ///                     performance requirements of your workload. This is identified by analyzing the
    ///                         <code>DiskReadOps</code> and <code>DiskWriteOps</code> metrics of the
    ///                     current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>DiskIOPSUnderprovisioned</code>
    ///                   </b> — The
    ///                     instance’s disk IOPS configuration doesn't meet the performance requirements of
    ///                     your workload and there is an alternative instance type that provides better
    ///                     disk IOPS performance. This is identified by analyzing the
    ///                         <code>DiskReadOps</code> and <code>DiskWriteOps</code> metrics of the
    ///                     current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>DiskThroughputOverprovisioned</code>
    ///                   </b> —
    ///                     The instance’s disk throughput configuration can be sized down while still
    ///                     meeting the performance requirements of your workload. This is identified by
    ///                     analyzing the <code>DiskReadBytes</code> and <code>DiskWriteBytes</code> metrics
    ///                     of the current instance during the look-back period.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>
    ///                      <code>DiskThroughputUnderprovisioned</code>
    ///                   </b> —
    ///                     The instance’s disk throughput configuration doesn't meet the performance
    ///                     requirements of your workload and there is an alternative instance type that
    ///                     provides better disk throughput performance. This is identified by analyzing the
    ///                         <code>DiskReadBytes</code> and <code>DiskWriteBytes</code> metrics of the
    ///                     current instance during the look-back period.</p>
    ///             </li>
    ///          </ul>
    ///         <note>
    ///             <p>For more information about instance metrics, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html">List the
    ///                     available CloudWatch metrics for your instances</a> in the <i>Amazon Elastic Compute Cloud
    ///                     User Guide</i>. For more information about EBS volume metrics, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cloudwatch_ebs.html">Amazon CloudWatch metrics for Amazon EBS</a> in the <i>Amazon Elastic Compute Cloud User
    ///                     Guide</i>.</p>
    ///         </note>
    public let findingReasonCodes: [InstanceRecommendationFindingReasonCode]?
    /// <p>The Amazon Resource Name (ARN) of the current instance.</p>
    public let instanceArn: String?
    /// <p>The name of the current instance.</p>
    public let instanceName: String?
    /// <p>The time stamp of when the instance recommendation was last refreshed.</p>
    public let lastRefreshTimestamp: Date?
    /// <p>The number of days for which utilization metrics were analyzed for the
    ///             instance.</p>
    public let lookBackPeriodInDays: Double
    /// <p>An array of objects that describe the recommendation options for the instance.</p>
    public let recommendationOptions: [InstanceRecommendationOption]?
    /// <p>An array of objects that describe the source resource of the recommendation.</p>
    public let recommendationSources: [RecommendationSource]?
    /// <p>An array of objects that describe the utilization metrics of the instance.</p>
    public let utilizationMetrics: [UtilizationMetric]?

    public init (
        accountId: String? = nil,
        currentInstanceType: String? = nil,
        finding: Finding? = nil,
        findingReasonCodes: [InstanceRecommendationFindingReasonCode]? = nil,
        instanceArn: String? = nil,
        instanceName: String? = nil,
        lastRefreshTimestamp: Date? = nil,
        lookBackPeriodInDays: Double = 0.0,
        recommendationOptions: [InstanceRecommendationOption]? = nil,
        recommendationSources: [RecommendationSource]? = nil,
        utilizationMetrics: [UtilizationMetric]? = nil
    )
    {
        self.accountId = accountId
        self.currentInstanceType = currentInstanceType
        self.finding = finding
        self.findingReasonCodes = findingReasonCodes
        self.instanceArn = instanceArn
        self.instanceName = instanceName
        self.lastRefreshTimestamp = lastRefreshTimestamp
        self.lookBackPeriodInDays = lookBackPeriodInDays
        self.recommendationOptions = recommendationOptions
        self.recommendationSources = recommendationSources
        self.utilizationMetrics = utilizationMetrics
    }
}
