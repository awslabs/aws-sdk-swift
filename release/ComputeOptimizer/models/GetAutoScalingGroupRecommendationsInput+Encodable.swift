// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAutoScalingGroupRecommendationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountIds
        case autoScalingGroupArns
        case filters
        case maxResults
        case nextToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountIds = accountIds {
            var accountIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .accountIds)
            for accountids0 in accountIds {
                try accountIdsContainer.encode(accountids0)
            }
        }
        if let autoScalingGroupArns = autoScalingGroupArns {
            var autoScalingGroupArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .autoScalingGroupArns)
            for autoscalinggrouparns0 in autoScalingGroupArns {
                try autoScalingGroupArnsContainer.encode(autoscalinggrouparns0)
            }
        }
        if let filters = filters {
            var filtersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .filters)
            for filters0 in filters {
                try filtersContainer.encode(filters0)
            }
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
