// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime


/// Paginate over `[ListAppInstanceAdminsOutputResponse]` results.
///
/// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
/// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
/// until then. If there are errors in your request, you will see the failures only after you start iterating.
/// - Parameters:
///     - input: A `[ListAppInstanceAdminsInput]` to start pagination
/// - Returns: An `AsyncSequence` that can iterate over `ListAppInstanceAdminsOutputResponse`
extension ChimeSdkIdentityClient {
    public func listAppInstanceAdminsPaginated(input: ListAppInstanceAdminsInput) -> ClientRuntime.PaginatorSequence<ListAppInstanceAdminsInput, ListAppInstanceAdminsOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListAppInstanceAdminsInput, ListAppInstanceAdminsOutputResponse>(input: input, inputKey: \ListAppInstanceAdminsInput.nextToken, outputKey: \ListAppInstanceAdminsOutputResponse.nextToken, paginationFunction: self.listAppInstanceAdmins(input:))
    }
}

extension ListAppInstanceAdminsInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListAppInstanceAdminsInput {
        return ListAppInstanceAdminsInput(
            appInstanceArn: self.appInstanceArn,
            maxResults: self.maxResults,
            nextToken: token
        )}
}

/// Paginate over `[ListAppInstancesOutputResponse]` results.
///
/// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
/// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
/// until then. If there are errors in your request, you will see the failures only after you start iterating.
/// - Parameters:
///     - input: A `[ListAppInstancesInput]` to start pagination
/// - Returns: An `AsyncSequence` that can iterate over `ListAppInstancesOutputResponse`
extension ChimeSdkIdentityClient {
    public func listAppInstancesPaginated(input: ListAppInstancesInput) -> ClientRuntime.PaginatorSequence<ListAppInstancesInput, ListAppInstancesOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListAppInstancesInput, ListAppInstancesOutputResponse>(input: input, inputKey: \ListAppInstancesInput.nextToken, outputKey: \ListAppInstancesOutputResponse.nextToken, paginationFunction: self.listAppInstances(input:))
    }
}

extension ListAppInstancesInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListAppInstancesInput {
        return ListAppInstancesInput(
            maxResults: self.maxResults,
            nextToken: token
        )}
}

/// Paginate over `[ListAppInstanceUserEndpointsOutputResponse]` results.
///
/// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
/// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
/// until then. If there are errors in your request, you will see the failures only after you start iterating.
/// - Parameters:
///     - input: A `[ListAppInstanceUserEndpointsInput]` to start pagination
/// - Returns: An `AsyncSequence` that can iterate over `ListAppInstanceUserEndpointsOutputResponse`
extension ChimeSdkIdentityClient {
    public func listAppInstanceUserEndpointsPaginated(input: ListAppInstanceUserEndpointsInput) -> ClientRuntime.PaginatorSequence<ListAppInstanceUserEndpointsInput, ListAppInstanceUserEndpointsOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListAppInstanceUserEndpointsInput, ListAppInstanceUserEndpointsOutputResponse>(input: input, inputKey: \ListAppInstanceUserEndpointsInput.nextToken, outputKey: \ListAppInstanceUserEndpointsOutputResponse.nextToken, paginationFunction: self.listAppInstanceUserEndpoints(input:))
    }
}

extension ListAppInstanceUserEndpointsInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListAppInstanceUserEndpointsInput {
        return ListAppInstanceUserEndpointsInput(
            appInstanceUserArn: self.appInstanceUserArn,
            maxResults: self.maxResults,
            nextToken: token
        )}
}

/// Paginate over `[ListAppInstanceUsersOutputResponse]` results.
///
/// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
/// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
/// until then. If there are errors in your request, you will see the failures only after you start iterating.
/// - Parameters:
///     - input: A `[ListAppInstanceUsersInput]` to start pagination
/// - Returns: An `AsyncSequence` that can iterate over `ListAppInstanceUsersOutputResponse`
extension ChimeSdkIdentityClient {
    public func listAppInstanceUsersPaginated(input: ListAppInstanceUsersInput) -> ClientRuntime.PaginatorSequence<ListAppInstanceUsersInput, ListAppInstanceUsersOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListAppInstanceUsersInput, ListAppInstanceUsersOutputResponse>(input: input, inputKey: \ListAppInstanceUsersInput.nextToken, outputKey: \ListAppInstanceUsersOutputResponse.nextToken, paginationFunction: self.listAppInstanceUsers(input:))
    }
}

extension ListAppInstanceUsersInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListAppInstanceUsersInput {
        return ListAppInstanceUsersInput(
            appInstanceArn: self.appInstanceArn,
            maxResults: self.maxResults,
            nextToken: token
        )}
}
