// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListVirtualClustersInputQueryItemMiddleware: Middleware {
    public let id: String = "ListVirtualClustersInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListVirtualClustersInput>,
                  next: H) -> Swift.Result<OperationOutput<ListVirtualClustersOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let containerProviderId = input.operationInput.containerProviderId {
            let containerProviderIdQueryItem = URLQueryItem(name: "containerProviderId".urlPercentEncoding(), value: String(containerProviderId).urlPercentEncoding())
            input.builder.withQueryItem(containerProviderIdQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let containerProviderType = input.operationInput.containerProviderType {
            let containerProviderTypeQueryItem = URLQueryItem(name: "containerProviderType".urlPercentEncoding(), value: String(containerProviderType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(containerProviderTypeQueryItem)
        }
        if let createdBefore = input.operationInput.createdBefore {
            let createdBeforeQueryItem = URLQueryItem(name: "createdBefore".urlPercentEncoding(), value: String(createdBefore.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(createdBeforeQueryItem)
        }
        if let createdAfter = input.operationInput.createdAfter {
            let createdAfterQueryItem = URLQueryItem(name: "createdAfter".urlPercentEncoding(), value: String(createdAfter.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(createdAfterQueryItem)
        }
        if let states = input.operationInput.states {
            states.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "states".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListVirtualClustersInput>
    public typealias MOutput = OperationOutput<ListVirtualClustersOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListVirtualClustersOutputError>
}
