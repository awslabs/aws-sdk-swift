// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ContainerInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case eksInfo
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .eksInfo(eksInfo):
                if let eksInfo = eksInfo {
                    try container.encode(eksInfo, forKey: .eksInfo)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let eksInfoDecoded = try values.decodeIfPresent(EksInfo.self, forKey: .eksInfo)
        if let eksInfo = eksInfoDecoded {
            self = .eksInfo(eksInfo)
            return
        }
        self = .sdkUnknown("")
    }
}
