// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>This entity represents the endpoint that is managed by Amazon EMR on EKS.</p>
public struct Endpoint: Equatable {
    /// <p>The ARN of the endpoint.</p>
    public let arn: String?
    /// <p>The certificate ARN of the endpoint.</p>
    public let certificateArn: String?
    /// <p>The configuration settings that are used to override existing configurations for endpoints.</p>
    public let configurationOverrides: ConfigurationOverrides?
    /// <p>The date and time when the endpoint was created.</p>
    public let createdAt: Date?
    /// <p>The execution role ARN of the endpoint.</p>
    public let executionRoleArn: String?
    /// <p>The ID of the endpoint.</p>
    public let id: String?
    /// <p>The name of the endpoint.</p>
    public let name: String?
    /// <p>The EMR release version to be used for the endpoint.</p>
    public let releaseLabel: String?
    /// <p>The security group configuration of the endpoint.
    ///       </p>
    public let securityGroup: String?
    /// <p>The server URL of the endpoint.</p>
    public let serverUrl: String?
    /// <p>The state of the endpoint.</p>
    public let state: EndpointState?
    /// <p>The subnet IDs of the endpoint.
    ///       </p>
    public let subnetIds: [String]?
    /// <p>The tags of the endpoint.
    ///       </p>
    public let tags: [String:String]?
    /// <p>The type of the endpoint.</p>
    public let type: String?
    /// <p>The ID of the endpoint's virtual cluster.</p>
    public let virtualClusterId: String?

    public init (
        arn: String? = nil,
        certificateArn: String? = nil,
        configurationOverrides: ConfigurationOverrides? = nil,
        createdAt: Date? = nil,
        executionRoleArn: String? = nil,
        id: String? = nil,
        name: String? = nil,
        releaseLabel: String? = nil,
        securityGroup: String? = nil,
        serverUrl: String? = nil,
        state: EndpointState? = nil,
        subnetIds: [String]? = nil,
        tags: [String:String]? = nil,
        type: String? = nil,
        virtualClusterId: String? = nil
    )
    {
        self.arn = arn
        self.certificateArn = certificateArn
        self.configurationOverrides = configurationOverrides
        self.createdAt = createdAt
        self.executionRoleArn = executionRoleArn
        self.id = id
        self.name = name
        self.releaseLabel = releaseLabel
        self.securityGroup = securityGroup
        self.serverUrl = serverUrl
        self.state = state
        self.subnetIds = subnetIds
        self.tags = tags
        self.type = type
        self.virtualClusterId = virtualClusterId
    }
}
