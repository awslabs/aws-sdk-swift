// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigurationOverrides: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationConfiguration
        case monitoringConfiguration
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationConfiguration = applicationConfiguration {
            var applicationConfigurationContainer = encodeContainer.nestedUnkeyedContainer(forKey: .applicationConfiguration)
            for configurationlist0 in applicationConfiguration {
                try applicationConfigurationContainer.encode(configurationlist0)
            }
        }
        if let monitoringConfiguration = monitoringConfiguration {
            try encodeContainer.encode(monitoringConfiguration, forKey: .monitoringConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationConfigurationContainer = try containerValues.decodeIfPresent([Configuration].self, forKey: .applicationConfiguration)
        var applicationConfigurationDecoded0:[Configuration]? = nil
        if let applicationConfigurationContainer = applicationConfigurationContainer {
            applicationConfigurationDecoded0 = [Configuration]()
            for structure0 in applicationConfigurationContainer {
                applicationConfigurationDecoded0?.append(structure0)
            }
        }
        applicationConfiguration = applicationConfigurationDecoded0
        let monitoringConfigurationDecoded = try containerValues.decodeIfPresent(MonitoringConfiguration.self, forKey: .monitoringConfiguration)
        monitoringConfiguration = monitoringConfigurationDecoded
    }
}
