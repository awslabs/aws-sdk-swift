// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVirtualClustersOutputBody: Equatable {
    public let virtualClusters: [VirtualCluster]?
    public let nextToken: String?
}

extension ListVirtualClustersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case virtualClusters
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualClustersContainer = try containerValues.decodeIfPresent([VirtualCluster].self, forKey: .virtualClusters)
        var virtualClustersDecoded0:[VirtualCluster]? = nil
        if let virtualClustersContainer = virtualClustersContainer {
            virtualClustersDecoded0 = [VirtualCluster]()
            for structure0 in virtualClustersContainer {
                virtualClustersDecoded0?.append(structure0)
            }
        }
        virtualClusters = virtualClustersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
