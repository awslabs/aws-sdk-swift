// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLunaClientOutputBody: Equatable {
    public let clientArn: String?
    public let certificate: String?
    public let certificateFingerprint: String?
    public let lastModifiedTimestamp: String?
    public let label: String?
}

extension DescribeLunaClientOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificate = "Certificate"
        case certificateFingerprint = "CertificateFingerprint"
        case clientArn = "ClientArn"
        case label = "Label"
        case lastModifiedTimestamp = "LastModifiedTimestamp"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientArn)
        clientArn = clientArnDecoded
        let certificateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificate)
        certificate = certificateDecoded
        let certificateFingerprintDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateFingerprint)
        certificateFingerprint = certificateFingerprintDecoded
        let lastModifiedTimestampDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastModifiedTimestamp)
        lastModifiedTimestamp = lastModifiedTimestampDecoded
        let labelDecoded = try containerValues.decodeIfPresent(String.self, forKey: .label)
        label = labelDecoded
    }
}
