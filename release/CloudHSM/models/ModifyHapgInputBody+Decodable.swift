// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModifyHapgInputBody: Equatable {
    public let hapgArn: String?
    public let label: String?
    public let partitionSerialList: [String]?
}

extension ModifyHapgInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hapgArn = "HapgArn"
        case label = "Label"
        case partitionSerialList = "PartitionSerialList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hapgArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hapgArn)
        hapgArn = hapgArnDecoded
        let labelDecoded = try containerValues.decodeIfPresent(String.self, forKey: .label)
        label = labelDecoded
        let partitionSerialListContainer = try containerValues.decodeIfPresent([String].self, forKey: .partitionSerialList)
        var partitionSerialListDecoded0:[String]? = nil
        if let partitionSerialListContainer = partitionSerialListContainer {
            partitionSerialListDecoded0 = [String]()
            for string0 in partitionSerialListContainer {
                partitionSerialListDecoded0?.append(string0)
            }
        }
        partitionSerialList = partitionSerialListDecoded0
    }
}
