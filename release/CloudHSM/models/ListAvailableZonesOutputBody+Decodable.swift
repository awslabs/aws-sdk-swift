// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAvailableZonesOutputBody: Equatable {
    public let aZList: [String]?
}

extension ListAvailableZonesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aZList = "AZList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aZListContainer = try containerValues.decodeIfPresent([String].self, forKey: .aZList)
        var aZListDecoded0:[String]? = nil
        if let aZListContainer = aZListContainer {
            aZListDecoded0 = [String]()
            for string0 in aZListContainer {
                aZListDecoded0?.append(string0)
            }
        }
        aZList = aZListDecoded0
    }
}
