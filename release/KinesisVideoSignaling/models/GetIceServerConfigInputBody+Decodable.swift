// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIceServerConfigInputBody: Equatable {
    public let channelARN: String?
    public let clientId: String?
    public let service: Service?
    public let username: String?
}

extension GetIceServerConfigInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelARN = "ChannelARN"
        case clientId = "ClientId"
        case service = "Service"
        case username = "Username"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelARN)
        channelARN = channelARNDecoded
        let clientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientId)
        clientId = clientIdDecoded
        let serviceDecoded = try containerValues.decodeIfPresent(Service.self, forKey: .service)
        service = serviceDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .username)
        username = usernameDecoded
    }
}
