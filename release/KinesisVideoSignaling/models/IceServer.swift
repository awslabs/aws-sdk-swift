// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A structure for the ICE server connection data.</p>
public struct IceServer: Equatable {
    /// <p>A password to login to the ICE server.</p>
    public let password: String?
    /// <p>The period of time, in seconds, during which the username and password are
    ///             valid.</p>
    public let ttl: Int
    /// <p>An array of URIs, in the form specified in the <a href="https://tools.ietf.org/html/draft-petithuguenin-behave-turn-uris-03">I-D.petithuguenin-behave-turn-uris</a> spec. These URIs provide the different
    ///             addresses and/or protocols that can be used to reach the TURN server.</p>
    public let uris: [String]?
    /// <p>A username to login to the ICE server.</p>
    public let username: String?

    public init (
        password: String? = nil,
        ttl: Int = 0,
        uris: [String]? = nil,
        username: String? = nil
    )
    {
        self.password = password
        self.ttl = ttl
        self.uris = uris
        self.username = username
    }
}
