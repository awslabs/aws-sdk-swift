// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendAlexaOfferToMasterInputBody: Equatable {
    public let channelARN: String?
    public let senderClientId: String?
    public let messagePayload: String?
}

extension SendAlexaOfferToMasterInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelARN = "ChannelARN"
        case messagePayload = "MessagePayload"
        case senderClientId = "SenderClientId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelARN)
        channelARN = channelARNDecoded
        let senderClientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .senderClientId)
        senderClientId = senderClientIdDecoded
        let messagePayloadDecoded = try containerValues.decodeIfPresent(String.self, forKey: .messagePayload)
        messagePayload = messagePayloadDecoded
    }
}
