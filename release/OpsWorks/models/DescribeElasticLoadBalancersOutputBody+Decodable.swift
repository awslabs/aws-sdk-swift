// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeElasticLoadBalancersOutputBody: Equatable {
    public let elasticLoadBalancers: [ElasticLoadBalancer]?
}

extension DescribeElasticLoadBalancersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case elasticLoadBalancers = "ElasticLoadBalancers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let elasticLoadBalancersContainer = try containerValues.decodeIfPresent([ElasticLoadBalancer].self, forKey: .elasticLoadBalancers)
        var elasticLoadBalancersDecoded0:[ElasticLoadBalancer]? = nil
        if let elasticLoadBalancersContainer = elasticLoadBalancersContainer {
            elasticLoadBalancersDecoded0 = [ElasticLoadBalancer]()
            for structure0 in elasticLoadBalancersContainer {
                elasticLoadBalancersDecoded0?.append(structure0)
            }
        }
        elasticLoadBalancers = elasticLoadBalancersDecoded0
    }
}
