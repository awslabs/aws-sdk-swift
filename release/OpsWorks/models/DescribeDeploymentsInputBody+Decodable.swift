// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDeploymentsInputBody: Equatable {
    public let stackId: String?
    public let appId: String?
    public let deploymentIds: [String]?
}

extension DescribeDeploymentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appId = "AppId"
        case deploymentIds = "DeploymentIds"
        case stackId = "StackId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let appIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appId)
        appId = appIdDecoded
        let deploymentIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .deploymentIds)
        var deploymentIdsDecoded0:[String]? = nil
        if let deploymentIdsContainer = deploymentIdsContainer {
            deploymentIdsDecoded0 = [String]()
            for string0 in deploymentIdsContainer {
                deploymentIdsDecoded0?.append(string0)
            }
        }
        deploymentIds = deploymentIdsDecoded0
    }
}
