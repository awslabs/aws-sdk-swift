// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCommandsOutputBody: Equatable {
    public let commands: [Command]?
}

extension DescribeCommandsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case commands = "Commands"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commandsContainer = try containerValues.decodeIfPresent([Command].self, forKey: .commands)
        var commandsDecoded0:[Command]? = nil
        if let commandsContainer = commandsContainer {
            commandsDecoded0 = [Command]()
            for structure0 in commandsContainer {
                commandsDecoded0?.append(structure0)
            }
        }
        commands = commandsDecoded0
    }
}
