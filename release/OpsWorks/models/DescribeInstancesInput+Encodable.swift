// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeInstancesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case instanceIds = "InstanceIds"
        case layerId = "LayerId"
        case stackId = "StackId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let instanceIds = instanceIds {
            var instanceIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .instanceIds)
            for strings0 in instanceIds {
                try instanceIdsContainer.encode(strings0)
            }
        }
        if let layerId = layerId {
            try encodeContainer.encode(layerId, forKey: .layerId)
        }
        if let stackId = stackId {
            try encodeContainer.encode(stackId, forKey: .stackId)
        }
    }
}
