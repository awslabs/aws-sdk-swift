// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTimeBasedAutoScalingOutputBody: Equatable {
    public let timeBasedAutoScalingConfigurations: [TimeBasedAutoScalingConfiguration]?
}

extension DescribeTimeBasedAutoScalingOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case timeBasedAutoScalingConfigurations = "TimeBasedAutoScalingConfigurations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeBasedAutoScalingConfigurationsContainer = try containerValues.decodeIfPresent([TimeBasedAutoScalingConfiguration].self, forKey: .timeBasedAutoScalingConfigurations)
        var timeBasedAutoScalingConfigurationsDecoded0:[TimeBasedAutoScalingConfiguration]? = nil
        if let timeBasedAutoScalingConfigurationsContainer = timeBasedAutoScalingConfigurationsContainer {
            timeBasedAutoScalingConfigurationsDecoded0 = [TimeBasedAutoScalingConfiguration]()
            for structure0 in timeBasedAutoScalingConfigurationsContainer {
                timeBasedAutoScalingConfigurationsDecoded0?.append(structure0)
            }
        }
        timeBasedAutoScalingConfigurations = timeBasedAutoScalingConfigurationsDecoded0
    }
}
