// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEcsClustersOutputBody: Equatable {
    public let ecsClusters: [EcsCluster]?
    public let nextToken: String?
}

extension DescribeEcsClustersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case ecsClusters = "EcsClusters"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ecsClustersContainer = try containerValues.decodeIfPresent([EcsCluster].self, forKey: .ecsClusters)
        var ecsClustersDecoded0:[EcsCluster]? = nil
        if let ecsClustersContainer = ecsClustersContainer {
            ecsClustersDecoded0 = [EcsCluster]()
            for structure0 in ecsClustersContainer {
                ecsClustersDecoded0?.append(structure0)
            }
        }
        ecsClusters = ecsClustersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
