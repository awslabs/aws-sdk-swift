// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a layer.</p>
public struct Layer: Equatable {
    /// <p>The Amazon Resource Number (ARN) of a layer.</p>
    public let arn: String?
    /// <p>The layer attributes.</p>
    ///          <p>For the <code>HaproxyStatsPassword</code>, <code>MysqlRootPassword</code>, and
    ///         <code>GangliaPassword</code> attributes, AWS OpsWorks Stacks returns <code>*****FILTERED*****</code>
    ///       instead of the actual value</p>
    ///          <p>For an ECS Cluster layer, AWS OpsWorks Stacks the <code>EcsClusterArn</code> attribute is set to the cluster's ARN.</p>
    public let attributes: [String:String]?
    /// <p>Whether to automatically assign an <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP
    ///         address</a> to the layer's instances. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html">How to Edit
    ///         a Layer</a>.</p>
    public let autoAssignElasticIps: Bool?
    /// <p>For stacks that are running in a VPC, whether to automatically assign a public IP address to
    ///       the layer's instances. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-edit.html">How to Edit
    ///         a Layer</a>.</p>
    public let autoAssignPublicIps: Bool?
    /// <p>The Amazon CloudWatch Logs configuration settings for the layer.</p>
    public let cloudWatchLogsConfiguration: CloudWatchLogsConfiguration?
    /// <p>Date when the layer was created.</p>
    public let createdAt: String?
    /// <p>The ARN of the default IAM profile to be used for the layer's EC2 instances. For more
    ///       information about IAM ARNs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">Using
    ///       Identifiers</a>.</p>
    public let customInstanceProfileArn: String?
    /// <p>A JSON formatted string containing the layer's custom stack configuration and deployment attributes.</p>
    public let customJson: String?
    /// <p>A <code>LayerCustomRecipes</code> object that specifies the layer's custom recipes.</p>
    public let customRecipes: Recipes?
    /// <p>An array containing the layer's custom security group IDs.</p>
    public let customSecurityGroupIds: [String]?
    /// <p>AWS OpsWorks Stacks supports five lifecycle events: <b>setup</b>, <b>configuration</b>,
    ///             <b>deploy</b>, <b>undeploy</b>, and <b>shutdown</b>.
    ///             For each layer, AWS OpsWorks Stacks runs a set of standard recipes for each event. You can also provide
    ///             custom recipes for any or all layers and events. AWS OpsWorks Stacks runs custom event recipes after the standard
    ///             recipes. <code>LayerCustomRecipes</code> specifies the custom recipes for a particular layer to be run in response to each of
    ///             the five events.</p>
    ///         <p>To specify a recipe, use the cookbook's directory name in the repository followed by two colons and the recipe
    ///             name, which is the recipe's file name without the <code>.rb</code> extension. For example: <code>phpapp2::dbsetup</code> specifies the
    ///             <code>dbsetup.rb</code> recipe in the repository's <code>phpapp2</code> folder.</p>
    public let defaultRecipes: Recipes?
    /// <p>An array containing the layer's security group names.</p>
    public let defaultSecurityGroupNames: [String]?
    /// <p>Whether auto healing is disabled for the layer.</p>
    public let enableAutoHealing: Bool?
    /// <p>Whether to install operating system and package updates when the instance boots. The default
    ///       value is <code>true</code>. If this value is set to <code>false</code>, you must then update
    ///       your instances manually by using <a>CreateDeployment</a> to run the
    ///         <code>update_dependencies</code> stack command or manually running <code>yum</code> (Amazon
    ///       Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p>
    ///          <note>
    ///             <p>We strongly recommend using the default value of <code>true</code>, to ensure that your
    ///         instances have the latest security updates.</p>
    ///          </note>
    public let installUpdatesOnBoot: Bool?
    /// <p>The layer ID.</p>
    public let layerId: String?
    /// <p>A <code>LifeCycleEventConfiguration</code> object that specifies the Shutdown event
    ///       configuration.</p>
    public let lifecycleEventConfiguration: LifecycleEventConfiguration?
    /// <p>The layer name.</p>
    public let name: String?
    /// <p>An array of <code>Package</code> objects that describe the layer's packages.</p>
    public let packages: [String]?
    /// <p>The layer short name.</p>
    public let shortname: String?
    /// <p>The layer stack ID.</p>
    public let stackId: String?
    /// <p>The layer type.</p>
    public let type: LayerType?
    /// <p>Whether the layer uses Amazon EBS-optimized instances.</p>
    public let useEbsOptimizedInstances: Bool?
    /// <p>A <code>VolumeConfigurations</code> object that describes the layer's Amazon EBS volumes.</p>
    public let volumeConfigurations: [VolumeConfiguration]?

    public init (
        arn: String? = nil,
        attributes: [String:String]? = nil,
        autoAssignElasticIps: Bool? = nil,
        autoAssignPublicIps: Bool? = nil,
        cloudWatchLogsConfiguration: CloudWatchLogsConfiguration? = nil,
        createdAt: String? = nil,
        customInstanceProfileArn: String? = nil,
        customJson: String? = nil,
        customRecipes: Recipes? = nil,
        customSecurityGroupIds: [String]? = nil,
        defaultRecipes: Recipes? = nil,
        defaultSecurityGroupNames: [String]? = nil,
        enableAutoHealing: Bool? = nil,
        installUpdatesOnBoot: Bool? = nil,
        layerId: String? = nil,
        lifecycleEventConfiguration: LifecycleEventConfiguration? = nil,
        name: String? = nil,
        packages: [String]? = nil,
        shortname: String? = nil,
        stackId: String? = nil,
        type: LayerType? = nil,
        useEbsOptimizedInstances: Bool? = nil,
        volumeConfigurations: [VolumeConfiguration]? = nil
    )
    {
        self.arn = arn
        self.attributes = attributes
        self.autoAssignElasticIps = autoAssignElasticIps
        self.autoAssignPublicIps = autoAssignPublicIps
        self.cloudWatchLogsConfiguration = cloudWatchLogsConfiguration
        self.createdAt = createdAt
        self.customInstanceProfileArn = customInstanceProfileArn
        self.customJson = customJson
        self.customRecipes = customRecipes
        self.customSecurityGroupIds = customSecurityGroupIds
        self.defaultRecipes = defaultRecipes
        self.defaultSecurityGroupNames = defaultSecurityGroupNames
        self.enableAutoHealing = enableAutoHealing
        self.installUpdatesOnBoot = installUpdatesOnBoot
        self.layerId = layerId
        self.lifecycleEventConfiguration = lifecycleEventConfiguration
        self.name = name
        self.packages = packages
        self.shortname = shortname
        self.stackId = stackId
        self.type = type
        self.useEbsOptimizedInstances = useEbsOptimizedInstances
        self.volumeConfigurations = volumeConfigurations
    }
}
