// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssignInstanceInputBody: Equatable {
    public let instanceId: String?
    public let layerIds: [String]?
}

extension AssignInstanceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceId = "InstanceId"
        case layerIds = "LayerIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let layerIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .layerIds)
        var layerIdsDecoded0:[String]? = nil
        if let layerIdsContainer = layerIdsContainer {
            layerIdsDecoded0 = [String]()
            for string0 in layerIdsContainer {
                layerIdsDecoded0?.append(string0)
            }
        }
        layerIds = layerIdsDecoded0
    }
}
