// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVolumeInputBody: Equatable {
    public let volumeId: String?
    public let name: String?
    public let mountPoint: String?
}

extension UpdateVolumeInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case mountPoint = "MountPoint"
        case name = "Name"
        case volumeId = "VolumeId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .volumeId)
        volumeId = volumeIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let mountPointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mountPoint)
        mountPoint = mountPointDecoded
    }
}
