// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SetPermissionInput: Equatable {
    /// <p>The user is allowed to use SSH to communicate with the instance.</p>
    public let allowSsh: Bool?
    /// <p>The user is allowed to use <b>sudo</b> to elevate privileges.</p>
    public let allowSudo: Bool?
    /// <p>The user's IAM ARN. This can also be a federated user's ARN.</p>
    public let iamUserArn: String?
    /// <p>The user's permission level, which must be set to one of the following strings. You cannot set your own permissions level.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>deny</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>show</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>deploy</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>manage</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>iam_only</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>For more information about the permissions associated with these levels, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
    public let level: String?
    /// <p>The stack ID.</p>
    public let stackId: String?

    public init (
        allowSsh: Bool? = nil,
        allowSudo: Bool? = nil,
        iamUserArn: String? = nil,
        level: String? = nil,
        stackId: String? = nil
    )
    {
        self.allowSsh = allowSsh
        self.allowSudo = allowSudo
        self.iamUserArn = iamUserArn
        self.level = level
        self.stackId = stackId
    }
}
