// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetPermissionInputBody: Equatable {
    public let stackId: String?
    public let iamUserArn: String?
    public let allowSsh: Bool?
    public let allowSudo: Bool?
    public let level: String?
}

extension SetPermissionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case allowSsh = "AllowSsh"
        case allowSudo = "AllowSudo"
        case iamUserArn = "IamUserArn"
        case level = "Level"
        case stackId = "StackId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let iamUserArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .iamUserArn)
        iamUserArn = iamUserArnDecoded
        let allowSshDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .allowSsh)
        allowSsh = allowSshDecoded
        let allowSudoDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .allowSudo)
        allowSudo = allowSudoDecoded
        let levelDecoded = try containerValues.decodeIfPresent(String.self, forKey: .level)
        level = levelDecoded
    }
}
