// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCommandsInputBody: Equatable {
    public let deploymentId: String?
    public let instanceId: String?
    public let commandIds: [String]?
}

extension DescribeCommandsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case commandIds = "CommandIds"
        case deploymentId = "DeploymentId"
        case instanceId = "InstanceId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentId)
        deploymentId = deploymentIdDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let commandIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .commandIds)
        var commandIdsDecoded0:[String]? = nil
        if let commandIdsContainer = commandIdsContainer {
            commandIdsDecoded0 = [String]()
            for string0 in commandIdsContainer {
                commandIdsDecoded0?.append(string0)
            }
        }
        commandIds = commandIdsDecoded0
    }
}
