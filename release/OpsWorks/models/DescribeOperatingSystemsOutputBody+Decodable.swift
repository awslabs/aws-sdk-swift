// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeOperatingSystemsOutputBody: Equatable {
    public let operatingSystems: [OperatingSystem]?
}

extension DescribeOperatingSystemsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case operatingSystems = "OperatingSystems"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let operatingSystemsContainer = try containerValues.decodeIfPresent([OperatingSystem].self, forKey: .operatingSystems)
        var operatingSystemsDecoded0:[OperatingSystem]? = nil
        if let operatingSystemsContainer = operatingSystemsContainer {
            operatingSystemsDecoded0 = [OperatingSystem]()
            for structure0 in operatingSystemsContainer {
                operatingSystemsDecoded0?.append(structure0)
            }
        }
        operatingSystems = operatingSystemsDecoded0
    }
}
