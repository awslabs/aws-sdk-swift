// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeServiceErrorsInputBody: Equatable {
    public let stackId: String?
    public let instanceId: String?
    public let serviceErrorIds: [String]?
}

extension DescribeServiceErrorsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceId = "InstanceId"
        case serviceErrorIds = "ServiceErrorIds"
        case stackId = "StackId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let serviceErrorIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .serviceErrorIds)
        var serviceErrorIdsDecoded0:[String]? = nil
        if let serviceErrorIdsContainer = serviceErrorIdsContainer {
            serviceErrorIdsDecoded0 = [String]()
            for string0 in serviceErrorIdsContainer {
                serviceErrorIdsDecoded0?.append(string0)
            }
        }
        serviceErrorIds = serviceErrorIdsDecoded0
    }
}
