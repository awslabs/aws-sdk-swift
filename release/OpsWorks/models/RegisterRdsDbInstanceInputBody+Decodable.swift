// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterRdsDbInstanceInputBody: Equatable {
    public let stackId: String?
    public let rdsDbInstanceArn: String?
    public let dbUser: String?
    public let dbPassword: String?
}

extension RegisterRdsDbInstanceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dbPassword = "DbPassword"
        case dbUser = "DbUser"
        case rdsDbInstanceArn = "RdsDbInstanceArn"
        case stackId = "StackId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackId)
        stackId = stackIdDecoded
        let rdsDbInstanceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .rdsDbInstanceArn)
        rdsDbInstanceArn = rdsDbInstanceArnDecoded
        let dbUserDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbUser)
        dbUser = dbUserDecoded
        let dbPasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbPassword)
        dbPassword = dbPasswordDecoded
    }
}
