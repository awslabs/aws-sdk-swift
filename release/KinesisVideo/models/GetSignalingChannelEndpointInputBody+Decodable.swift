// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSignalingChannelEndpointInputBody: Equatable {
    public let channelARN: String?
    public let singleMasterChannelEndpointConfiguration: SingleMasterChannelEndpointConfiguration?
}

extension GetSignalingChannelEndpointInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelARN = "ChannelARN"
        case singleMasterChannelEndpointConfiguration = "SingleMasterChannelEndpointConfiguration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelARN)
        channelARN = channelARNDecoded
        let singleMasterChannelEndpointConfigurationDecoded = try containerValues.decodeIfPresent(SingleMasterChannelEndpointConfiguration.self, forKey: .singleMasterChannelEndpointConfiguration)
        singleMasterChannelEndpointConfiguration = singleMasterChannelEndpointConfigurationDecoded
    }
}
