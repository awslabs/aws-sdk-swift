// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TagStreamInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case streamARN = "StreamARN"
        case streamName = "StreamName"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let streamARN = streamARN {
            try encodeContainer.encode(streamARN, forKey: .streamARN)
        }
        if let streamName = streamName {
            try encodeContainer.encode(streamName, forKey: .streamName)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .tags)
            for (dictKey0, resourcetags0) in tags {
                try tagsContainer.encode(resourcetags0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
