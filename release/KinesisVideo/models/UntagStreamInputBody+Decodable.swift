// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UntagStreamInputBody: Equatable {
    public let streamARN: String?
    public let streamName: String?
    public let tagKeyList: [String]?
}

extension UntagStreamInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case streamARN = "StreamARN"
        case streamName = "StreamName"
        case tagKeyList = "TagKeyList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let tagKeyListContainer = try containerValues.decodeIfPresent([String].self, forKey: .tagKeyList)
        var tagKeyListDecoded0:[String]? = nil
        if let tagKeyListContainer = tagKeyListContainer {
            tagKeyListDecoded0 = [String]()
            for string0 in tagKeyListContainer {
                tagKeyListDecoded0?.append(string0)
            }
        }
        tagKeyList = tagKeyListDecoded0
    }
}
