// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateStreamInput: Equatable {
    /// <p>The version of the stream whose metadata you want to update.</p>
    public let currentVersion: String?
    /// <p>The name of the device that is writing to the stream. </p>
    ///         <note>
    ///             <p> In the current implementation, Kinesis Video Streams does not use this name.
    ///             </p>
    ///         </note>
    public let deviceName: String?
    /// <p>The stream's media type. Use <code>MediaType</code> to specify the type of content
    ///             that the stream contains to the consumers of the stream. For more information about
    ///             media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
    ///                 Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
    ///             Requirements</a>.</p>
    ///         <p>To play video on the console, you must specify the correct video type. For example,
    ///             if the video in the stream is H.264, specify <code>video/h264</code> as the
    ///                 <code>MediaType</code>.</p>
    public let mediaType: String?
    /// <p>The ARN of the stream whose metadata you want to update.</p>
    public let streamARN: String?
    /// <p>The name of the stream whose metadata you want to update.</p>
    ///         <p>The stream name is an identifier for the stream, and must be unique for each
    ///             account and region.</p>
    public let streamName: String?

    public init (
        currentVersion: String? = nil,
        deviceName: String? = nil,
        mediaType: String? = nil,
        streamARN: String? = nil,
        streamName: String? = nil
    )
    {
        self.currentVersion = currentVersion
        self.deviceName = deviceName
        self.mediaType = mediaType
        self.streamARN = streamARN
        self.streamName = streamName
    }
}
