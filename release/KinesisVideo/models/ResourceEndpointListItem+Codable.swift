// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceEndpointListItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case `protocol` = "Protocol"
        case resourceEndpoint = "ResourceEndpoint"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let `protocol` = `protocol` {
            try encodeContainer.encode(`protocol`.rawValue, forKey: .`protocol`)
        }
        if let resourceEndpoint = resourceEndpoint {
            try encodeContainer.encode(resourceEndpoint, forKey: .resourceEndpoint)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolDecoded = try containerValues.decodeIfPresent(ChannelProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let resourceEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceEndpoint)
        resourceEndpoint = resourceEndpointDecoded
    }
}
