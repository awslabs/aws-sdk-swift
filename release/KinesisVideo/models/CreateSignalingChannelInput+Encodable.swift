// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateSignalingChannelInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case channelName = "ChannelName"
        case channelType = "ChannelType"
        case singleMasterConfiguration = "SingleMasterConfiguration"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let channelName = channelName {
            try encodeContainer.encode(channelName, forKey: .channelName)
        }
        if let channelType = channelType {
            try encodeContainer.encode(channelType.rawValue, forKey: .channelType)
        }
        if let singleMasterConfiguration = singleMasterConfiguration {
            try encodeContainer.encode(singleMasterConfiguration, forKey: .singleMasterConfiguration)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tagoncreatelist0 in tags {
                try tagsContainer.encode(tagoncreatelist0)
            }
        }
    }
}
