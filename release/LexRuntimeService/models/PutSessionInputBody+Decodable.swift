// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSessionInputBody: Equatable {
    public let sessionAttributes: [String:String]?
    public let dialogAction: DialogAction?
    public let recentIntentSummaryView: [IntentSummary]?
    public let activeContexts: [ActiveContext]?
}

extension PutSessionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activeContexts
        case dialogAction
        case recentIntentSummaryView
        case sessionAttributes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionAttributesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .sessionAttributes)
        var sessionAttributesDecoded0: [String:String]? = nil
        if let sessionAttributesContainer = sessionAttributesContainer {
            sessionAttributesDecoded0 = [String:String]()
            for (key0, string0) in sessionAttributesContainer {
                sessionAttributesDecoded0?[key0] = string0
            }
        }
        sessionAttributes = sessionAttributesDecoded0
        let dialogActionDecoded = try containerValues.decodeIfPresent(DialogAction.self, forKey: .dialogAction)
        dialogAction = dialogActionDecoded
        let recentIntentSummaryViewContainer = try containerValues.decodeIfPresent([IntentSummary].self, forKey: .recentIntentSummaryView)
        var recentIntentSummaryViewDecoded0:[IntentSummary]? = nil
        if let recentIntentSummaryViewContainer = recentIntentSummaryViewContainer {
            recentIntentSummaryViewDecoded0 = [IntentSummary]()
            for structure0 in recentIntentSummaryViewContainer {
                recentIntentSummaryViewDecoded0?.append(structure0)
            }
        }
        recentIntentSummaryView = recentIntentSummaryViewDecoded0
        let activeContextsContainer = try containerValues.decodeIfPresent([ActiveContext].self, forKey: .activeContexts)
        var activeContextsDecoded0:[ActiveContext]? = nil
        if let activeContextsContainer = activeContextsContainer {
            activeContextsDecoded0 = [ActiveContext]()
            for structure0 in activeContextsContainer {
                activeContextsDecoded0?.append(structure0)
            }
        }
        activeContexts = activeContextsDecoded0
    }
}
