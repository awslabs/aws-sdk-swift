// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PostTextInput: Equatable {
    /// <p>A list of contexts active for the request. A context can be activated
    ///       when a previous intent is fulfilled, or by including the context in the
    ///       request,</p>
    ///          <p>If you don't specify a list of contexts, Amazon Lex will use the current
    ///       list of contexts for the session. If you specify an empty list, all
    ///       contexts for the session are cleared.</p>
    public let activeContexts: [ActiveContext]?
    /// <p>The alias of the Amazon Lex bot.</p>
    public let botAlias: String?
    /// <p>The name of the Amazon Lex bot.</p>
    public let botName: String?
    /// <p>The text that the user entered (Amazon Lex interprets this text).</p>
    public let inputText: String?
    /// <p>Request-specific information passed between Amazon Lex and a client
    ///       application.</p>
    ///          <p>The namespace <code>x-amz-lex:</code> is reserved for special
    ///       attributes. Don't create any request attributes with the prefix
    ///         <code>x-amz-lex:</code>.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-request-attribs">Setting Request Attributes</a>.</p>
    public let requestAttributes: [String:String]?
    /// <p>Application-specific information passed between Amazon Lex and a client
    ///       application.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/lex/latest/dg/context-mgmt.html#context-mgmt-session-attribs">Setting Session Attributes</a>.</p>
    public let sessionAttributes: [String:String]?
    /// <p>The ID of the client application user. Amazon Lex uses this to identify a
    ///       user's conversation with your bot. At runtime, each request must contain
    ///       the <code>userID</code> field.</p>
    ///          <p>To decide the user ID to use for your application, consider the
    ///       following factors.</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>userID</code> field must not contain any personally
    ///           identifiable information of the user, for example, name, personal
    ///           identification numbers, or other end user personal information.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you want a user to start a conversation on one device and
    ///           continue on another device, use a user-specific identifier.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you want the same user to be able to have two independent
    ///           conversations on two different devices, choose a device-specific
    ///           identifier.</p>
    ///             </li>
    ///             <li>
    ///                <p>A user can't have two independent conversations with two different
    ///           versions of the same bot. For example, a user can't have a
    ///           conversation with the PROD and BETA versions of the same bot. If you
    ///           anticipate that a user will need to have conversation with two
    ///           different versions, for example, while testing, include the bot alias
    ///           in the user ID to separate the two conversations.</p>
    ///             </li>
    ///          </ul>
    public let userId: String?

    public init (
        activeContexts: [ActiveContext]? = nil,
        botAlias: String? = nil,
        botName: String? = nil,
        inputText: String? = nil,
        requestAttributes: [String:String]? = nil,
        sessionAttributes: [String:String]? = nil,
        userId: String? = nil
    )
    {
        self.activeContexts = activeContexts
        self.botAlias = botAlias
        self.botName = botName
        self.inputText = inputText
        self.requestAttributes = requestAttributes
        self.sessionAttributes = sessionAttributes
        self.userId = userId
    }
}
