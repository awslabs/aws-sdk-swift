// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SentimentResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sentimentLabel
        case sentimentScore
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sentimentLabel = sentimentLabel {
            try encodeContainer.encode(sentimentLabel, forKey: .sentimentLabel)
        }
        if let sentimentScore = sentimentScore {
            try encodeContainer.encode(sentimentScore, forKey: .sentimentScore)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sentimentLabelDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sentimentLabel)
        sentimentLabel = sentimentLabelDecoded
        let sentimentScoreDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sentimentScore)
        sentimentScore = sentimentScoreDecoded
    }
}
