// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutSessionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case activeContexts
        case dialogAction
        case recentIntentSummaryView
        case sessionAttributes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activeContexts = activeContexts {
            var activeContextsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .activeContexts)
            for activecontextslist0 in activeContexts {
                try activeContextsContainer.encode(activecontextslist0)
            }
        }
        if let dialogAction = dialogAction {
            try encodeContainer.encode(dialogAction, forKey: .dialogAction)
        }
        if let recentIntentSummaryView = recentIntentSummaryView {
            var recentIntentSummaryViewContainer = encodeContainer.nestedUnkeyedContainer(forKey: .recentIntentSummaryView)
            for intentsummarylist0 in recentIntentSummaryView {
                try recentIntentSummaryViewContainer.encode(intentsummarylist0)
            }
        }
        if let sessionAttributes = sessionAttributes {
            var sessionAttributesContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .sessionAttributes)
            for (dictKey0, stringmap0) in sessionAttributes {
                try sessionAttributesContainer.encode(stringmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
