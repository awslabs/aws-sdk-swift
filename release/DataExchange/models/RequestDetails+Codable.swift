// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RequestDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exportAssetToSignedUrl = "ExportAssetToSignedUrl"
        case exportAssetsToS3 = "ExportAssetsToS3"
        case exportRevisionsToS3 = "ExportRevisionsToS3"
        case importAssetFromSignedUrl = "ImportAssetFromSignedUrl"
        case importAssetsFromS3 = "ImportAssetsFromS3"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exportAssetToSignedUrl = exportAssetToSignedUrl {
            try encodeContainer.encode(exportAssetToSignedUrl, forKey: .exportAssetToSignedUrl)
        }
        if let exportAssetsToS3 = exportAssetsToS3 {
            try encodeContainer.encode(exportAssetsToS3, forKey: .exportAssetsToS3)
        }
        if let exportRevisionsToS3 = exportRevisionsToS3 {
            try encodeContainer.encode(exportRevisionsToS3, forKey: .exportRevisionsToS3)
        }
        if let importAssetFromSignedUrl = importAssetFromSignedUrl {
            try encodeContainer.encode(importAssetFromSignedUrl, forKey: .importAssetFromSignedUrl)
        }
        if let importAssetsFromS3 = importAssetsFromS3 {
            try encodeContainer.encode(importAssetsFromS3, forKey: .importAssetsFromS3)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportAssetToSignedUrlDecoded = try containerValues.decodeIfPresent(ExportAssetToSignedUrlRequestDetails.self, forKey: .exportAssetToSignedUrl)
        exportAssetToSignedUrl = exportAssetToSignedUrlDecoded
        let exportAssetsToS3Decoded = try containerValues.decodeIfPresent(ExportAssetsToS3RequestDetails.self, forKey: .exportAssetsToS3)
        exportAssetsToS3 = exportAssetsToS3Decoded
        let exportRevisionsToS3Decoded = try containerValues.decodeIfPresent(ExportRevisionsToS3RequestDetails.self, forKey: .exportRevisionsToS3)
        exportRevisionsToS3 = exportRevisionsToS3Decoded
        let importAssetFromSignedUrlDecoded = try containerValues.decodeIfPresent(ImportAssetFromSignedUrlRequestDetails.self, forKey: .importAssetFromSignedUrl)
        importAssetFromSignedUrl = importAssetFromSignedUrlDecoded
        let importAssetsFromS3Decoded = try containerValues.decodeIfPresent(ImportAssetsFromS3RequestDetails.self, forKey: .importAssetsFromS3)
        importAssetsFromS3 = importAssetsFromS3Decoded
    }
}
