// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum LimitName {
    case assetPerExportJobFromAmazonS3
    case assetSizeInGb
    case assetsPerImportJobFromAmazonS3
    case assetsPerRevision
    case concurrentInProgressJobsToExportAssetsToAmazonS3
    case concurrentInProgressJobsToExportAssetsToASignedUrl
    case concurrentInProgressJobsToImportAssetsFromAmazonS3
    case concurrentInProgressJobsToImportAssetsFromASignedUrl
    case dataSetsPerAccount
    case dataSetsPerProduct
    case productsPerAccount
    case revisionsPerDataSet
    case sdkUnknown(String)
}

extension LimitName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [LimitName] {
        return [
            .assetPerExportJobFromAmazonS3,
            .assetSizeInGb,
            .assetsPerImportJobFromAmazonS3,
            .assetsPerRevision,
            .concurrentInProgressJobsToExportAssetsToAmazonS3,
            .concurrentInProgressJobsToExportAssetsToASignedUrl,
            .concurrentInProgressJobsToImportAssetsFromAmazonS3,
            .concurrentInProgressJobsToImportAssetsFromASignedUrl,
            .dataSetsPerAccount,
            .dataSetsPerProduct,
            .productsPerAccount,
            .revisionsPerDataSet,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .assetPerExportJobFromAmazonS3: return "Asset per export job from Amazon S3"
        case .assetSizeInGb: return "Asset size in GB"
        case .assetsPerImportJobFromAmazonS3: return "Assets per import job from Amazon S3"
        case .assetsPerRevision: return "Assets per revision"
        case .concurrentInProgressJobsToExportAssetsToAmazonS3: return "Concurrent in progress jobs to export assets to Amazon S3"
        case .concurrentInProgressJobsToExportAssetsToASignedUrl: return "Concurrent in progress jobs to export assets to a signed URL"
        case .concurrentInProgressJobsToImportAssetsFromAmazonS3: return "Concurrent in progress jobs to import assets from Amazon S3"
        case .concurrentInProgressJobsToImportAssetsFromASignedUrl: return "Concurrent in progress jobs to import assets from a signed URL"
        case .dataSetsPerAccount: return "Data sets per account"
        case .dataSetsPerProduct: return "Data sets per product"
        case .productsPerAccount: return "Products per account"
        case .revisionsPerDataSet: return "Revisions per data set"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = LimitName(rawValue: rawValue) ?? LimitName.sdkUnknown(rawValue)
    }
}
