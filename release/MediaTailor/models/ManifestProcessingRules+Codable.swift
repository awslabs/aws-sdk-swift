// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ManifestProcessingRules: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case adMarkerPassthrough = "AdMarkerPassthrough"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let adMarkerPassthrough = adMarkerPassthrough {
            try encodeContainer.encode(adMarkerPassthrough, forKey: .adMarkerPassthrough)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adMarkerPassthroughDecoded = try containerValues.decodeIfPresent(AdMarkerPassthrough.self, forKey: .adMarkerPassthrough)
        adMarkerPassthrough = adMarkerPassthroughDecoded
    }
}
