// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ScheduleEntry: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approximateDurationSeconds = "ApproximateDurationSeconds"
        case approximateStartTime = "ApproximateStartTime"
        case arn = "Arn"
        case channelName = "ChannelName"
        case programName = "ProgramName"
        case sourceLocationName = "SourceLocationName"
        case vodSourceName = "VodSourceName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if approximateDurationSeconds != 0 {
            try encodeContainer.encode(approximateDurationSeconds, forKey: .approximateDurationSeconds)
        }
        if let approximateStartTime = approximateStartTime {
            try encodeContainer.encode(approximateStartTime.timeIntervalSince1970, forKey: .approximateStartTime)
        }
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let channelName = channelName {
            try encodeContainer.encode(channelName, forKey: .channelName)
        }
        if let programName = programName {
            try encodeContainer.encode(programName, forKey: .programName)
        }
        if let sourceLocationName = sourceLocationName {
            try encodeContainer.encode(sourceLocationName, forKey: .sourceLocationName)
        }
        if let vodSourceName = vodSourceName {
            try encodeContainer.encode(vodSourceName, forKey: .vodSourceName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let approximateDurationSecondsDecoded = try containerValues.decode(Int.self, forKey: .approximateDurationSeconds)
        approximateDurationSeconds = approximateDurationSecondsDecoded
        let approximateStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .approximateStartTime)
        approximateStartTime = approximateStartTimeDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let channelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelName)
        channelName = channelNameDecoded
        let programNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .programName)
        programName = programNameDecoded
        let sourceLocationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceLocationName)
        sourceLocationName = sourceLocationNameDecoded
        let vodSourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vodSourceName)
        vodSourceName = vodSourceNameDecoded
    }
}
