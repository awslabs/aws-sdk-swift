// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Bumper: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case endUrl = "EndUrl"
        case startUrl = "StartUrl"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endUrl = endUrl {
            try encodeContainer.encode(endUrl, forKey: .endUrl)
        }
        if let startUrl = startUrl {
            try encodeContainer.encode(startUrl, forKey: .startUrl)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endUrl)
        endUrl = endUrlDecoded
        let startUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .startUrl)
        startUrl = startUrlDecoded
    }
}
