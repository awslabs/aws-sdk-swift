// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateProgramInputBody: Equatable {
    public let adBreaks: [AdBreak]?
    public let scheduleConfiguration: ScheduleConfiguration?
    public let sourceLocationName: String?
    public let vodSourceName: String?
}

extension CreateProgramInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case adBreaks = "AdBreaks"
        case scheduleConfiguration = "ScheduleConfiguration"
        case sourceLocationName = "SourceLocationName"
        case vodSourceName = "VodSourceName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adBreaksContainer = try containerValues.decodeIfPresent([AdBreak].self, forKey: .adBreaks)
        var adBreaksDecoded0:[AdBreak]? = nil
        if let adBreaksContainer = adBreaksContainer {
            adBreaksDecoded0 = [AdBreak]()
            for structure0 in adBreaksContainer {
                adBreaksDecoded0?.append(structure0)
            }
        }
        adBreaks = adBreaksDecoded0
        let scheduleConfigurationDecoded = try containerValues.decodeIfPresent(ScheduleConfiguration.self, forKey: .scheduleConfiguration)
        scheduleConfiguration = scheduleConfigurationDecoded
        let sourceLocationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceLocationName)
        sourceLocationName = sourceLocationNameDecoded
        let vodSourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vodSourceName)
        vodSourceName = vodSourceNameDecoded
    }
}
