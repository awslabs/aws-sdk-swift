// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProgramOutputBody: Equatable {
    public let adBreaks: [AdBreak]?
    public let arn: String?
    public let channelName: String?
    public let creationTime: Date?
    public let programName: String?
    public let sourceLocationName: String?
    public let vodSourceName: String?
}

extension DescribeProgramOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case adBreaks = "AdBreaks"
        case arn = "Arn"
        case channelName = "ChannelName"
        case creationTime = "CreationTime"
        case programName = "ProgramName"
        case sourceLocationName = "SourceLocationName"
        case vodSourceName = "VodSourceName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let adBreaksContainer = try containerValues.decodeIfPresent([AdBreak].self, forKey: .adBreaks)
        var adBreaksDecoded0:[AdBreak]? = nil
        if let adBreaksContainer = adBreaksContainer {
            adBreaksDecoded0 = [AdBreak]()
            for structure0 in adBreaksContainer {
                adBreaksDecoded0?.append(structure0)
            }
        }
        adBreaks = adBreaksDecoded0
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let channelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelName)
        channelName = channelNameDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let programNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .programName)
        programName = programNameDecoded
        let sourceLocationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceLocationName)
        sourceLocationName = sourceLocationNameDecoded
        let vodSourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vodSourceName)
        vodSourceName = vodSourceNameDecoded
    }
}
