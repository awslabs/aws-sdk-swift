// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartTaskExecutionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case includes = "Includes"
        case overrideOptions = "OverrideOptions"
        case taskArn = "TaskArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let includes = includes {
            var includesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .includes)
            for filterlist0 in includes {
                try includesContainer.encode(filterlist0)
            }
        }
        if let overrideOptions = overrideOptions {
            try encodeContainer.encode(overrideOptions, forKey: .overrideOptions)
        }
        if let taskArn = taskArn {
            try encodeContainer.encode(taskArn, forKey: .taskArn)
        }
    }
}
