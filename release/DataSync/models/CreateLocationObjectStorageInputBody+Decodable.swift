// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLocationObjectStorageInputBody: Equatable {
    public let serverHostname: String?
    public let serverPort: Int?
    public let serverProtocol: ObjectStorageServerProtocol?
    public let subdirectory: String?
    public let bucketName: String?
    public let accessKey: String?
    public let secretKey: String?
    public let agentArns: [String]?
    public let tags: [TagListEntry]?
}

extension CreateLocationObjectStorageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessKey = "AccessKey"
        case agentArns = "AgentArns"
        case bucketName = "BucketName"
        case secretKey = "SecretKey"
        case serverHostname = "ServerHostname"
        case serverPort = "ServerPort"
        case serverProtocol = "ServerProtocol"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverHostnameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serverHostname)
        serverHostname = serverHostnameDecoded
        let serverPortDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .serverPort)
        serverPort = serverPortDecoded
        let serverProtocolDecoded = try containerValues.decodeIfPresent(ObjectStorageServerProtocol.self, forKey: .serverProtocol)
        serverProtocol = serverProtocolDecoded
        let subdirectoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let bucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketName)
        bucketName = bucketNameDecoded
        let accessKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessKey)
        accessKey = accessKeyDecoded
        let secretKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .secretKey)
        secretKey = secretKeyDecoded
        let agentArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .agentArns)
        var agentArnsDecoded0:[String]? = nil
        if let agentArnsContainer = agentArnsContainer {
            agentArnsDecoded0 = [String]()
            for string0 in agentArnsContainer {
                agentArnsDecoded0?.append(string0)
            }
        }
        agentArns = agentArnsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([TagListEntry].self, forKey: .tags)
        var tagsDecoded0:[TagListEntry]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [TagListEntry]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
