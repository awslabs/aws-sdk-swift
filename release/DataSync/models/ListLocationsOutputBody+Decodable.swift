// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLocationsOutputBody: Equatable {
    public let locations: [LocationListEntry]?
    public let nextToken: String?
}

extension ListLocationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case locations = "Locations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationsContainer = try containerValues.decodeIfPresent([LocationListEntry].self, forKey: .locations)
        var locationsDecoded0:[LocationListEntry]? = nil
        if let locationsContainer = locationsContainer {
            locationsDecoded0 = [LocationListEntry]()
            for structure0 in locationsContainer {
                locationsDecoded0?.append(structure0)
            }
        }
        locations = locationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
