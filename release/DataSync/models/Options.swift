// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the options that are available to control the behavior of a
///       <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>
///       operation. Behavior includes preserving metadata such as user
///       ID (UID), group ID (GID), and file permissions, and also overwriting files in the destination,
///       data integrity verification, and so on.</p>
///          <p>A task has a set of default options associated with it. If you don't specify an option
///       in <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>,
///       the default value is used. You can override the
///       defaults options on each task execution by specifying an overriding <code>Options</code> value
///       to <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_StartTaskExecution.html">StartTaskExecution</a>.</p>
public struct Options: Equatable {
    /// <p>A file metadata value that shows the last time a file was accessed (that is, when the
    ///       file was read or written to). If you set <code>Atime</code> to BEST_EFFORT, DataSync
    ///       attempts to preserve the original <code>Atime</code> attribute on all source files (that is,
    ///       the version before the PREPARING phase). However, <code>Atime</code>'s behavior is not
    ///       fully standard across platforms, so AWS DataSync can only do this on a best-effort basis. </p>
    ///          <p>Default value: BEST_EFFORT.</p>
    ///          <p>BEST_EFFORT: Attempt to preserve the per-file <code>Atime</code> value
    ///       (recommended).</p>
    ///          <p>NONE: Ignore <code>Atime</code>.</p>
    ///          <note>
    ///             <p>If <code>Atime</code> is set to BEST_EFFORT, <code>Mtime</code> must be set to PRESERVE. </p>
    ///             <p>If <code>Atime</code> is set to NONE, <code>Mtime</code> must also be NONE. </p>
    ///          </note>
    public let atime: Atime?
    /// <p>A value that limits the bandwidth used by AWS DataSync. For example, if you want
    ///       AWS DataSync to use a maximum of 1 MB, set this value to <code>1048576</code>
    ///         (<code>=1024*1024</code>).</p>
    public let bytesPerSecond: Int?
    /// <p>The POSIX group ID (GID) of the file's owners. This option should only be set for
    ///       NFS, EFS, and S3 locations. For more information about what metadata is copied by DataSync,
    ///       see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata Copied by DataSync</a>. </p>
    ///          <p>Default value: INT_VALUE. This preserves the integer value of the ID.</p>
    ///          <p>INT_VALUE: Preserve the integer value of user ID (UID) and GID (recommended).</p>
    ///          <p>NONE: Ignore UID and GID. </p>
    public let gid: Gid?
    /// <p>A value that determines the type of logs that DataSync publishes to a log stream in the
    ///       Amazon CloudWatch log group that you provide. For more information about providing a log group
    ///       for DataSync, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_CreateTask.html#DataSync-CreateTask-request-CloudWatchLogGroupArn">CloudWatchLogGroupArn</a>. If set to <code>OFF</code>, no logs are published.
    ///         <code>BASIC</code> publishes logs on errors for individual files transferred, and
    ///         <code>TRANSFER</code> publishes logs for every file or object that is transferred and
    ///       integrity checked.</p>
    public let logLevel: LogLevel?
    /// <p>A value that indicates the last time that a file was modified (that is, a file was
    ///       written to) before the PREPARING phase. This option is required for cases when you need to run
    ///       the same task more than one time. </p>
    ///          <p>Default value: PRESERVE. </p>
    ///          <p>PRESERVE: Preserve original <code>Mtime</code> (recommended)</p>
    ///          <p> NONE: Ignore <code>Mtime</code>. </p>
    ///          <note>
    ///             <p>If <code>Mtime</code> is set to PRESERVE, <code>Atime</code> must be set to
    ///         BEST_EFFORT.</p>
    ///             <p>If <code>Mtime</code> is set to NONE, <code>Atime</code> must also be set to NONE.
    ///       </p>
    ///          </note>
    public let mtime: Mtime?
    /// <p>A value that determines whether files at the destination should be overwritten or
    ///       preserved when copying files. If set to <code>NEVER</code> a destination file will not be
    ///       replaced by a source file, even if the destination file differs from the source file. If you modify files in the destination and you sync the files, you can use this value to
    ///       protect against overwriting those changes. </p>
    ///          <p>Some storage classes have specific behaviors that can affect your S3 storage cost. For detailed information, see
    ///       <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations when working with Amazon S3 storage classes in DataSync </a>
    ///       in the <i>AWS DataSync
    ///         User Guide</i>.</p>
    public let overwriteMode: OverwriteMode?
    /// <p>A value that determines which users or groups can access a file for a specific purpose
    ///       such as reading, writing, or execution of the file. This option should only be set for NFS,
    ///       EFS, and S3 locations. For more information about what metadata is copied by DataSync, see
    ///         <a href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata Copied by DataSync</a>. </p>
    ///          <p>Default value: PRESERVE.</p>
    ///          <p>PRESERVE: Preserve POSIX-style permissions (recommended).</p>
    ///          <p>NONE: Ignore permissions. </p>
    ///          <note>
    ///             <p>AWS DataSync can preserve extant permissions of a source location.</p>
    ///          </note>
    public let posixPermissions: PosixPermissions?
    /// <p>A value that specifies whether files in the destination that don't exist in the source
    ///       file system should be preserved. This option can affect your storage cost.
    ///       If your task deletes objects, you might incur minimum storage duration charges for certain storage classes. For detailed
    ///       information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes">Considerations when working with Amazon S3 storage classes in DataSync </a> in the <i>AWS DataSync User
    ///         Guide</i>.</p>
    ///          <p>Default value: PRESERVE.</p>
    ///          <p>PRESERVE: Ignore such destination files (recommended). </p>
    ///          <p>REMOVE: Delete destination files that arenâ€™t present in the source.</p>
    public let preserveDeletedFiles: PreserveDeletedFiles?
    /// <p>A value that determines whether AWS DataSync should preserve the metadata of block
    ///       and character devices in the source file system, and re-create the files with that device name
    ///       and metadata on the destination. DataSync does not copy the contents of such devices, only the
    ///       name and metadata. </p>
    ///          <note>
    ///             <p>AWS DataSync can't sync the actual contents of such devices, because they are
    ///         nonterminal and don't return an end-of-file (EOF) marker.</p>
    ///          </note>
    ///          <p>Default value: NONE.</p>
    ///          <p>NONE: Ignore special devices (recommended). </p>
    ///          <p>PRESERVE: Preserve character and block device metadata. This option isn't currently
    ///       supported for Amazon EFS. </p>
    public let preserveDevices: PreserveDevices?
    /// <p>A value that determines which components of the SMB security descriptor are copied from source
    ///       to destination objects.
    ///       </p>
    ///          <p>This value is only used for transfers
    ///       between SMB and Amazon FSx for Windows File Server locations, or between two Amazon FSx for Windows File
    ///       Server locations. For more information about how
    ///       DataSync handles metadata, see
    ///       <a href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html">How DataSync Handles Metadata and Special Files</a>.
    ///     </p>
    ///          <p>Default value: OWNER_DACL.</p>
    ///
    ///          <p>
    ///             <b>OWNER_DACL</b>: For each copied object, DataSync copies the following metadata:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Object owner.</p>
    ///             </li>
    ///             <li>
    ///                <p>NTFS discretionary access control lists (DACLs), which determine whether to
    ///         grant access to an object.</p>
    ///             </li>
    ///          </ul>
    ///          <p>When choosing this option, DataSync does NOT copy the NTFS system access control lists
    ///       (SACLs), which are used by administrators to log attempts to access a secured object.</p>
    ///
    ///          <p>
    ///             <b>OWNER_DACL_SACL</b>: For each copied object, DataSync copies the following metadata:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Object owner.</p>
    ///             </li>
    ///             <li>
    ///                <p>NTFS discretionary access control lists (DACLs), which determine whether to
    ///           grant access to an object.</p>
    ///             </li>
    ///             <li>
    ///                <p>NTFS system access control lists (SACLs), which are used by administrators
    ///           to log attempts to access a secured object.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Copying SACLs requires granting additional permissions to the Windows user that DataSync
    ///       uses to access your SMB location. For information about choosing a user that ensures
    ///       sufficient permissions to files, folders, and metadata, see <a href="create-smb-location.html#SMBuser">user</a>.</p>
    ///
    ///          <p>
    ///             <b>NONE</b>: None of the SMB security descriptor components
    ///       are copied. Destination objects are owned by the user that was provided for accessing the
    ///       destination location. DACLs and SACLs are set based on the destination serverâ€™s configuration.
    ///     </p>
    public let securityDescriptorCopyFlags: SmbSecurityDescriptorCopyFlags?
    /// <p>A value that determines whether tasks should be queued before executing the tasks. If set
    ///       to <code>ENABLED</code>, the tasks will be queued. The default is <code>ENABLED</code>.</p>
    ///          <p>If you use the same agent to run multiple tasks, you can enable the tasks to run in
    ///       series. For more information, see
    ///       <a href="https://docs.aws.amazon.com/datasync/latest/userguide/run-task.html#queue-task-execution">Queueing task executions</a>.</p>
    public let taskQueueing: TaskQueueing?
    /// <p>A value that determines whether DataSync transfers only the data and metadata that differ between the source
    ///       and the destination location, or whether DataSync transfers all the content from the source, without comparing to
    ///       the destination location. </p>
    ///          <p>CHANGED: DataSync copies only data or metadata that is new or different content from the source location to the
    ///       destination location.</p>
    ///          <p>ALL: DataSync copies all source location content to the destination, without comparing to existing content on
    ///       the destination.</p>
    public let transferMode: TransferMode?
    /// <p>The POSIX user ID (UID) of the file's owner. This option should only be set for NFS,
    ///       EFS, and S3 locations. To learn more about what metadata is copied by DataSync, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/special-files.html#metadata-copied">Metadata Copied by DataSync</a>.</p>
    ///          <p>Default value: INT_VALUE. This preserves the integer value of the ID.</p>
    ///          <p>INT_VALUE: Preserve the integer value of UID and group ID (GID)
    ///       (recommended).</p>
    ///          <p>NONE: Ignore UID and GID. </p>
    public let uid: Uid?
    /// <p>A value that determines whether a data integrity verification should be performed at
    ///       the end of a task execution after all data and metadata have been transferred.
    ///       For more information, see
    ///       <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html">Configure task settings</a>.
    ///     </p>
    ///          <p>Default value: POINT_IN_TIME_CONSISTENT.</p>
    ///          <p>ONLY_FILES_TRANSFERRED (recommended): Perform verification only on files that were transferred.
    ///     </p>
    ///
    ///          <p>POINT_IN_TIME_CONSISTENT: Scan the entire source and entire destination
    ///       at the end of the transfer
    ///       to verify that source and destination are fully
    ///       synchronized. This option isn't supported when transferring to S3 Glacier or S3 Glacier
    ///       Deep Archive storage classes.</p>
    ///          <p>NONE: No additional verification is done at the end of the
    ///       transfer, but all data transmissions are integrity-checked with
    ///       checksum verification during the transfer.</p>
    public let verifyMode: VerifyMode?

    public init (
        atime: Atime? = nil,
        bytesPerSecond: Int? = nil,
        gid: Gid? = nil,
        logLevel: LogLevel? = nil,
        mtime: Mtime? = nil,
        overwriteMode: OverwriteMode? = nil,
        posixPermissions: PosixPermissions? = nil,
        preserveDeletedFiles: PreserveDeletedFiles? = nil,
        preserveDevices: PreserveDevices? = nil,
        securityDescriptorCopyFlags: SmbSecurityDescriptorCopyFlags? = nil,
        taskQueueing: TaskQueueing? = nil,
        transferMode: TransferMode? = nil,
        uid: Uid? = nil,
        verifyMode: VerifyMode? = nil
    )
    {
        self.atime = atime
        self.bytesPerSecond = bytesPerSecond
        self.gid = gid
        self.logLevel = logLevel
        self.mtime = mtime
        self.overwriteMode = overwriteMode
        self.posixPermissions = posixPermissions
        self.preserveDeletedFiles = preserveDeletedFiles
        self.preserveDevices = preserveDevices
        self.securityDescriptorCopyFlags = securityDescriptorCopyFlags
        self.taskQueueing = taskQueueing
        self.transferMode = transferMode
        self.uid = uid
        self.verifyMode = verifyMode
    }
}
