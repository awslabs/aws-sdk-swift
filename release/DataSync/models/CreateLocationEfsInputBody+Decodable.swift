// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLocationEfsInputBody: Equatable {
    public let subdirectory: String?
    public let efsFilesystemArn: String?
    public let ec2Config: Ec2Config?
    public let tags: [TagListEntry]?
}

extension CreateLocationEfsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case ec2Config = "Ec2Config"
        case efsFilesystemArn = "EfsFilesystemArn"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subdirectoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let efsFilesystemArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .efsFilesystemArn)
        efsFilesystemArn = efsFilesystemArnDecoded
        let ec2ConfigDecoded = try containerValues.decodeIfPresent(Ec2Config.self, forKey: .ec2Config)
        ec2Config = ec2ConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([TagListEntry].self, forKey: .tags)
        var tagsDecoded0:[TagListEntry]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [TagListEntry]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
