// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateLocationS3Input: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case agentArns = "AgentArns"
        case s3BucketArn = "S3BucketArn"
        case s3Config = "S3Config"
        case s3StorageClass = "S3StorageClass"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let agentArns = agentArns {
            var agentArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .agentArns)
            for agentarnlist0 in agentArns {
                try agentArnsContainer.encode(agentarnlist0)
            }
        }
        if let s3BucketArn = s3BucketArn {
            try encodeContainer.encode(s3BucketArn, forKey: .s3BucketArn)
        }
        if let s3Config = s3Config {
            try encodeContainer.encode(s3Config, forKey: .s3Config)
        }
        if let s3StorageClass = s3StorageClass {
            try encodeContainer.encode(s3StorageClass.rawValue, forKey: .s3StorageClass)
        }
        if let subdirectory = subdirectory {
            try encodeContainer.encode(subdirectory, forKey: .subdirectory)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for inputtaglist0 in tags {
                try tagsContainer.encode(inputtaglist0)
            }
        }
    }
}
