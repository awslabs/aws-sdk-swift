// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLocationNfsInputBody: Equatable {
    public let subdirectory: String?
    public let serverHostname: String?
    public let onPremConfig: OnPremConfig?
    public let mountOptions: NfsMountOptions?
    public let tags: [TagListEntry]?
}

extension CreateLocationNfsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case mountOptions = "MountOptions"
        case onPremConfig = "OnPremConfig"
        case serverHostname = "ServerHostname"
        case subdirectory = "Subdirectory"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subdirectoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subdirectory)
        subdirectory = subdirectoryDecoded
        let serverHostnameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serverHostname)
        serverHostname = serverHostnameDecoded
        let onPremConfigDecoded = try containerValues.decodeIfPresent(OnPremConfig.self, forKey: .onPremConfig)
        onPremConfig = onPremConfigDecoded
        let mountOptionsDecoded = try containerValues.decodeIfPresent(NfsMountOptions.self, forKey: .mountOptions)
        mountOptions = mountOptionsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([TagListEntry].self, forKey: .tags)
        var tagsDecoded0:[TagListEntry]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [TagListEntry]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
