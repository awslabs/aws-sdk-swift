// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateTaskInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchLogGroupArn = "CloudWatchLogGroupArn"
        case excludes = "Excludes"
        case name = "Name"
        case options = "Options"
        case schedule = "Schedule"
        case taskArn = "TaskArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchLogGroupArn = cloudWatchLogGroupArn {
            try encodeContainer.encode(cloudWatchLogGroupArn, forKey: .cloudWatchLogGroupArn)
        }
        if let excludes = excludes {
            var excludesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludes)
            for filterlist0 in excludes {
                try excludesContainer.encode(filterlist0)
            }
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let options = options {
            try encodeContainer.encode(options, forKey: .options)
        }
        if let schedule = schedule {
            try encodeContainer.encode(schedule, forKey: .schedule)
        }
        if let taskArn = taskArn {
            try encodeContainer.encode(taskArn, forKey: .taskArn)
        }
    }
}
