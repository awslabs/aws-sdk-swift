// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartTaskExecutionInputBody: Equatable {
    public let taskArn: String?
    public let overrideOptions: Options?
    public let includes: [FilterRule]?
}

extension StartTaskExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case includes = "Includes"
        case overrideOptions = "OverrideOptions"
        case taskArn = "TaskArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskArn)
        taskArn = taskArnDecoded
        let overrideOptionsDecoded = try containerValues.decodeIfPresent(Options.self, forKey: .overrideOptions)
        overrideOptions = overrideOptionsDecoded
        let includesContainer = try containerValues.decodeIfPresent([FilterRule].self, forKey: .includes)
        var includesDecoded0:[FilterRule]? = nil
        if let includesContainer = includesContainer {
            includesDecoded0 = [FilterRule]()
            for structure0 in includesContainer {
                includesDecoded0?.append(structure0)
            }
        }
        includes = includesDecoded0
    }
}
