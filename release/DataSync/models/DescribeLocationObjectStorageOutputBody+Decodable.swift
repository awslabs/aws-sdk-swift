// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLocationObjectStorageOutputBody: Equatable {
    public let locationArn: String?
    public let locationUri: String?
    public let accessKey: String?
    public let serverPort: Int?
    public let serverProtocol: ObjectStorageServerProtocol?
    public let agentArns: [String]?
    public let creationTime: Date?
}

extension DescribeLocationObjectStorageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessKey = "AccessKey"
        case agentArns = "AgentArns"
        case creationTime = "CreationTime"
        case locationArn = "LocationArn"
        case locationUri = "LocationUri"
        case serverPort = "ServerPort"
        case serverProtocol = "ServerProtocol"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .locationArn)
        locationArn = locationArnDecoded
        let locationUriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .locationUri)
        locationUri = locationUriDecoded
        let accessKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessKey)
        accessKey = accessKeyDecoded
        let serverPortDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .serverPort)
        serverPort = serverPortDecoded
        let serverProtocolDecoded = try containerValues.decodeIfPresent(ObjectStorageServerProtocol.self, forKey: .serverProtocol)
        serverProtocol = serverProtocolDecoded
        let agentArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .agentArns)
        var agentArnsDecoded0:[String]? = nil
        if let agentArnsContainer = agentArnsContainer {
            agentArnsDecoded0 = [String]()
            for string0 in agentArnsContainer {
                agentArnsDecoded0?.append(string0)
            }
        }
        agentArns = agentArnsDecoded0
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
