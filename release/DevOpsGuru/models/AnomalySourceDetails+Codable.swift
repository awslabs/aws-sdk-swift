// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnomalySourceDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchMetrics = "CloudWatchMetrics"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchMetrics = cloudWatchMetrics {
            var cloudWatchMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .cloudWatchMetrics)
            for cloudwatchmetricsdetails0 in cloudWatchMetrics {
                try cloudWatchMetricsContainer.encode(cloudwatchmetricsdetails0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudWatchMetricsContainer = try containerValues.decodeIfPresent([CloudWatchMetricsDetail].self, forKey: .cloudWatchMetrics)
        var cloudWatchMetricsDecoded0:[CloudWatchMetricsDetail]? = nil
        if let cloudWatchMetricsContainer = cloudWatchMetricsContainer {
            cloudWatchMetricsDecoded0 = [CloudWatchMetricsDetail]()
            for structure0 in cloudWatchMetricsContainer {
                cloudWatchMetricsDecoded0?.append(structure0)
            }
        }
        cloudWatchMetrics = cloudWatchMetricsDecoded0
    }
}
