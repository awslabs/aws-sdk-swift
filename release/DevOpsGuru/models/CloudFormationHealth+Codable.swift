// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationHealth: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case insight = "Insight"
        case stackName = "StackName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let insight = insight {
            try encodeContainer.encode(insight, forKey: .insight)
        }
        if let stackName = stackName {
            try encodeContainer.encode(stackName, forKey: .stackName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackName)
        stackName = stackNameDecoded
        let insightDecoded = try containerValues.decodeIfPresent(InsightHealth.self, forKey: .insight)
        insight = insightDecoded
    }
}
