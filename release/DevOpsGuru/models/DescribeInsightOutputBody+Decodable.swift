// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeInsightOutputBody: Equatable {
    public let proactiveInsight: ProactiveInsight?
    public let reactiveInsight: ReactiveInsight?
}

extension DescribeInsightOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case proactiveInsight = "ProactiveInsight"
        case reactiveInsight = "ReactiveInsight"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proactiveInsightDecoded = try containerValues.decodeIfPresent(ProactiveInsight.self, forKey: .proactiveInsight)
        proactiveInsight = proactiveInsightDecoded
        let reactiveInsightDecoded = try containerValues.decodeIfPresent(ReactiveInsight.self, forKey: .reactiveInsight)
        reactiveInsight = reactiveInsightDecoded
    }
}
