// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnomalyOutputBody: Equatable {
    public let proactiveAnomaly: ProactiveAnomaly?
    public let reactiveAnomaly: ReactiveAnomaly?
}

extension DescribeAnomalyOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case proactiveAnomaly = "ProactiveAnomaly"
        case reactiveAnomaly = "ReactiveAnomaly"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let proactiveAnomalyDecoded = try containerValues.decodeIfPresent(ProactiveAnomaly.self, forKey: .proactiveAnomaly)
        proactiveAnomaly = proactiveAnomalyDecoded
        let reactiveAnomalyDecoded = try containerValues.decodeIfPresent(ReactiveAnomaly.self, forKey: .reactiveAnomaly)
        reactiveAnomaly = reactiveAnomalyDecoded
    }
}
