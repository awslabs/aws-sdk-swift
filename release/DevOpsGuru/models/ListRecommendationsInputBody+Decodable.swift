// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRecommendationsInputBody: Equatable {
    public let insightId: String?
    public let nextToken: String?
    public let locale: Locale?
}

extension ListRecommendationsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case insightId = "InsightId"
        case locale = "Locale"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .insightId)
        insightId = insightIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let localeDecoded = try containerValues.decodeIfPresent(Locale.self, forKey: .locale)
        locale = localeDecoded
    }
}
