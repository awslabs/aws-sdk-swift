// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Details about a reactive anomaly.  This object is returned by <code>ListAnomalies</code>.</p>
public struct ReactiveAnomaly: Equatable {
    /// <p>
    /// 			A time range that specifies when the observed unusual behavior in an anomaly started and ended.
    /// 		</p>
    public let anomalyTimeRange: AnomalyTimeRange?
    /// <p>
    /// 			The ID of the insight that contains this anomaly. An insight is composed of related anomalies.
    /// 		</p>
    public let associatedInsightId: String?
    /// <p>The ID of the reactive anomaly. </p>
    public let id: String?
    /// <p>
    /// 			A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze
    ///       	only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks.
    /// 		</p>
    public let resourceCollection: ResourceCollection?
    /// <p>The severity of the anomaly. </p>
    public let severity: AnomalySeverity?
    /// <p>
    /// 			Details about the source of the analyzed operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
    /// 		</p>
    public let sourceDetails: AnomalySourceDetails?
    /// <p>
    /// 			The status of the anomaly.
    /// 		</p>
    public let status: AnomalyStatus?

    public init (
        anomalyTimeRange: AnomalyTimeRange? = nil,
        associatedInsightId: String? = nil,
        id: String? = nil,
        resourceCollection: ResourceCollection? = nil,
        severity: AnomalySeverity? = nil,
        sourceDetails: AnomalySourceDetails? = nil,
        status: AnomalyStatus? = nil
    )
    {
        self.anomalyTimeRange = anomalyTimeRange
        self.associatedInsightId = associatedInsightId
        self.id = id
        self.resourceCollection = resourceCollection
        self.severity = severity
        self.sourceDetails = sourceDetails
        self.status = status
    }
}
