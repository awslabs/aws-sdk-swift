// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudFormationCostEstimationResourceCollectionFilter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case stackNames = "StackNames"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let stackNames = stackNames {
            var stackNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .stackNames)
            for costestimationstacknames0 in stackNames {
                try stackNamesContainer.encode(costestimationstacknames0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stackNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .stackNames)
        var stackNamesDecoded0:[String]? = nil
        if let stackNamesContainer = stackNamesContainer {
            stackNamesDecoded0 = [String]()
            for string0 in stackNamesContainer {
                stackNamesDecoded0?.append(string0)
            }
        }
        stackNames = stackNamesDecoded0
    }
}
