// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchInsightsInputBody: Equatable {
    public let startTimeRange: StartTimeRange?
    public let filters: SearchInsightsFilters?
    public let maxResults: Int?
    public let nextToken: String?
    public let type: InsightType?
}

extension SearchInsightsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters = "Filters"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case startTimeRange = "StartTimeRange"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startTimeRangeDecoded = try containerValues.decodeIfPresent(StartTimeRange.self, forKey: .startTimeRange)
        startTimeRange = startTimeRangeDecoded
        let filtersDecoded = try containerValues.decodeIfPresent(SearchInsightsFilters.self, forKey: .filters)
        filters = filtersDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let typeDecoded = try containerValues.decodeIfPresent(InsightType.self, forKey: .type)
        type = typeDecoded
    }
}
