// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>
/// 			An AWS resource event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and
/// 			provide recommendations to improve your operational solutions.
/// 		</p>
public struct Event: Equatable {
    /// <p>
    /// 			The source, <code>AWS_CLOUD_TRAIL</code> or <code>AWS_CODE_DEPLOY</code>, where DevOps Guru analysis found the event.
    /// 		</p>
    public let dataSource: EventDataSource?
    /// <p>
    /// 			The class of the event. The class specifies what the event is related to, such as an infrastructure change, a deployment, or a schema change.
    /// 		</p>
    public let eventClass: EventClass?
    /// <p>
    /// 			The AWS source that emitted the event.
    /// 		</p>
    public let eventSource: String?
    /// <p>
    /// 			The ID of the event.
    /// 		</p>
    public let id: String?
    /// <p>
    /// 			The name of the event.
    /// 		</p>
    public let name: String?
    /// <p>
    /// 			A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze
    ///       	only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks.
    /// 		</p>
    public let resourceCollection: ResourceCollection?
    /// <p>
    /// 			An <code>EventResource</code> object that contains information about the resource that emitted the event.
    /// 		</p>
    public let resources: [EventResource]?
    /// <p> A <code>Timestamp</code> that specifies the time the event occurred. </p>
    public let time: Date?

    public init (
        dataSource: EventDataSource? = nil,
        eventClass: EventClass? = nil,
        eventSource: String? = nil,
        id: String? = nil,
        name: String? = nil,
        resourceCollection: ResourceCollection? = nil,
        resources: [EventResource]? = nil,
        time: Date? = nil
    )
    {
        self.dataSource = dataSource
        self.eventClass = eventClass
        self.eventSource = eventSource
        self.id = id
        self.name = name
        self.resourceCollection = resourceCollection
        self.resources = resources
        self.time = time
    }
}
