// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that contains information about the estimated monthly cost to
/// 			analyze an AWS resource. For more information,
/// 			see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your
/// 			Amazon DevOps Guru costs</a> and
/// 			<a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.</p>
public struct ServiceResourceCost: Equatable {
    /// <p>The total estimated monthly cost to analyze the active resources for this resource.</p>
    public let cost: Double
    /// <p>The number of active resources analyzed for this service to create a monthly cost
    /// 			estimate.</p>
    public let count: Int
    /// <p>The state of the resource. The resource is <code>ACTIVE</code> if it produces metrics,
    /// 			events, or logs within an hour, otherwise it is <code>INACTIVE</code>. You pay for
    /// 			the number of active AWS resource hours analyzed for each resource. Inactive resources are
    /// 			not charged.
    /// 		</p>
    public let state: CostEstimationServiceResourceState?
    /// <p>The type of the AWS resource.</p>
    public let type: String?
    /// <p>The price per hour to analyze the resources in the service.
    /// 			For more information,
    /// 			see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your
    /// 			Amazon DevOps Guru costs</a> and
    /// 			<a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.</p>
    public let unitCost: Double

    public init (
        cost: Double = 0.0,
        count: Int = 0,
        state: CostEstimationServiceResourceState? = nil,
        type: String? = nil,
        unitCost: Double = 0.0
    )
    {
        self.cost = cost
        self.count = count
        self.state = state
        self.type = type
        self.unitCost = unitCost
    }
}
