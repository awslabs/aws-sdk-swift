// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InsightFeedback: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case feedback = "Feedback"
        case id = "Id"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let feedback = feedback {
            try encodeContainer.encode(feedback.rawValue, forKey: .feedback)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let feedbackDecoded = try containerValues.decodeIfPresent(InsightFeedbackOption.self, forKey: .feedback)
        feedback = feedbackDecoded
    }
}
