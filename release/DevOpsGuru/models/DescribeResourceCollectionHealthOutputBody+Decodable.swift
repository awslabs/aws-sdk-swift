// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeResourceCollectionHealthOutputBody: Equatable {
    public let cloudFormation: [CloudFormationHealth]?
    public let service: [ServiceHealth]?
    public let nextToken: String?
}

extension DescribeResourceCollectionHealthOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cloudFormation = "CloudFormation"
        case nextToken = "NextToken"
        case service = "Service"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudFormationContainer = try containerValues.decodeIfPresent([CloudFormationHealth].self, forKey: .cloudFormation)
        var cloudFormationDecoded0:[CloudFormationHealth]? = nil
        if let cloudFormationContainer = cloudFormationContainer {
            cloudFormationDecoded0 = [CloudFormationHealth]()
            for structure0 in cloudFormationContainer {
                cloudFormationDecoded0?.append(structure0)
            }
        }
        cloudFormation = cloudFormationDecoded0
        let serviceContainer = try containerValues.decodeIfPresent([ServiceHealth].self, forKey: .service)
        var serviceDecoded0:[ServiceHealth]? = nil
        if let serviceContainer = serviceContainer {
            serviceDecoded0 = [ServiceHealth]()
            for structure0 in serviceContainer {
                serviceDecoded0?.append(structure0)
            }
        }
        service = serviceDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
