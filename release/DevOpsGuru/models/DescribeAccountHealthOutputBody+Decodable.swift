// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAccountHealthOutputBody: Equatable {
    public let openReactiveInsights: Int
    public let openProactiveInsights: Int
    public let metricsAnalyzed: Int
    public let resourceHours: Int?
}

extension DescribeAccountHealthOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metricsAnalyzed = "MetricsAnalyzed"
        case openProactiveInsights = "OpenProactiveInsights"
        case openReactiveInsights = "OpenReactiveInsights"
        case resourceHours = "ResourceHours"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let openReactiveInsightsDecoded = try containerValues.decode(Int.self, forKey: .openReactiveInsights)
        openReactiveInsights = openReactiveInsightsDecoded
        let openProactiveInsightsDecoded = try containerValues.decode(Int.self, forKey: .openProactiveInsights)
        openProactiveInsights = openProactiveInsightsDecoded
        let metricsAnalyzedDecoded = try containerValues.decode(Int.self, forKey: .metricsAnalyzed)
        metricsAnalyzed = metricsAnalyzedDecoded
        let resourceHoursDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .resourceHours)
        resourceHours = resourceHoursDecoded
    }
}
