// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrustedAdvisorCheckSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case categorySpecificSummary
        case checkId
        case hasFlaggedResources
        case resourcesSummary
        case status
        case timestamp
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let categorySpecificSummary = categorySpecificSummary {
            try encodeContainer.encode(categorySpecificSummary, forKey: .categorySpecificSummary)
        }
        if let checkId = checkId {
            try encodeContainer.encode(checkId, forKey: .checkId)
        }
        if hasFlaggedResources != false {
            try encodeContainer.encode(hasFlaggedResources, forKey: .hasFlaggedResources)
        }
        if let resourcesSummary = resourcesSummary {
            try encodeContainer.encode(resourcesSummary, forKey: .resourcesSummary)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let timestamp = timestamp {
            try encodeContainer.encode(timestamp, forKey: .timestamp)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let checkIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .checkId)
        checkId = checkIdDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(String.self, forKey: .timestamp)
        timestamp = timestampDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let hasFlaggedResourcesDecoded = try containerValues.decode(Bool.self, forKey: .hasFlaggedResources)
        hasFlaggedResources = hasFlaggedResourcesDecoded
        let resourcesSummaryDecoded = try containerValues.decodeIfPresent(TrustedAdvisorResourcesSummary.self, forKey: .resourcesSummary)
        resourcesSummary = resourcesSummaryDecoded
        let categorySpecificSummaryDecoded = try containerValues.decodeIfPresent(TrustedAdvisorCategorySpecificSummary.self, forKey: .categorySpecificSummary)
        categorySpecificSummary = categorySpecificSummaryDecoded
    }
}
