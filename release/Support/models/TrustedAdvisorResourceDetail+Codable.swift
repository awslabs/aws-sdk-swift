// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrustedAdvisorResourceDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isSuppressed
        case metadata
        case region
        case resourceId
        case status
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if isSuppressed != false {
            try encodeContainer.encode(isSuppressed, forKey: .isSuppressed)
        }
        if let metadata = metadata {
            var metadataContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metadata)
            for stringlist0 in metadata {
                try metadataContainer.encode(stringlist0)
            }
        }
        if let region = region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if let resourceId = resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let regionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .region)
        region = regionDecoded
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let isSuppressedDecoded = try containerValues.decode(Bool.self, forKey: .isSuppressed)
        isSuppressed = isSuppressedDecoded
        let metadataContainer = try containerValues.decodeIfPresent([String].self, forKey: .metadata)
        var metadataDecoded0:[String]? = nil
        if let metadataContainer = metadataContainer {
            metadataDecoded0 = [String]()
            for string0 in metadataContainer {
                metadataDecoded0?.append(string0)
            }
        }
        metadata = metadataDecoded0
    }
}
