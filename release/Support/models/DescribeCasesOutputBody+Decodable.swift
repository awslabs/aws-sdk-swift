// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCasesOutputBody: Equatable {
    public let cases: [CaseDetails]?
    public let nextToken: String?
}

extension DescribeCasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cases
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let casesContainer = try containerValues.decodeIfPresent([CaseDetails].self, forKey: .cases)
        var casesDecoded0:[CaseDetails]? = nil
        if let casesContainer = casesContainer {
            casesDecoded0 = [CaseDetails]()
            for structure0 in casesContainer {
                casesDecoded0?.append(structure0)
            }
        }
        cases = casesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
