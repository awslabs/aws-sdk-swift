// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrustedAdvisorResourcesSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resourcesFlagged
        case resourcesIgnored
        case resourcesProcessed
        case resourcesSuppressed
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if resourcesFlagged != 0 {
            try encodeContainer.encode(resourcesFlagged, forKey: .resourcesFlagged)
        }
        if resourcesIgnored != 0 {
            try encodeContainer.encode(resourcesIgnored, forKey: .resourcesIgnored)
        }
        if resourcesProcessed != 0 {
            try encodeContainer.encode(resourcesProcessed, forKey: .resourcesProcessed)
        }
        if resourcesSuppressed != 0 {
            try encodeContainer.encode(resourcesSuppressed, forKey: .resourcesSuppressed)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourcesProcessedDecoded = try containerValues.decode(Int.self, forKey: .resourcesProcessed)
        resourcesProcessed = resourcesProcessedDecoded
        let resourcesFlaggedDecoded = try containerValues.decode(Int.self, forKey: .resourcesFlagged)
        resourcesFlagged = resourcesFlaggedDecoded
        let resourcesIgnoredDecoded = try containerValues.decode(Int.self, forKey: .resourcesIgnored)
        resourcesIgnored = resourcesIgnoredDecoded
        let resourcesSuppressedDecoded = try containerValues.decode(Int.self, forKey: .resourcesSuppressed)
        resourcesSuppressed = resourcesSuppressedDecoded
    }
}
