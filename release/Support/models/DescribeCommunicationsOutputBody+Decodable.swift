// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCommunicationsOutputBody: Equatable {
    public let communications: [Communication]?
    public let nextToken: String?
}

extension DescribeCommunicationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case communications
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let communicationsContainer = try containerValues.decodeIfPresent([Communication].self, forKey: .communications)
        var communicationsDecoded0:[Communication]? = nil
        if let communicationsContainer = communicationsContainer {
            communicationsDecoded0 = [Communication]()
            for structure0 in communicationsContainer {
                communicationsDecoded0?.append(structure0)
            }
        }
        communications = communicationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
