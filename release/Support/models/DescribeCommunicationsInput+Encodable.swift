// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeCommunicationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case afterTime
        case beforeTime
        case caseId
        case maxResults
        case nextToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afterTime = afterTime {
            try encodeContainer.encode(afterTime, forKey: .afterTime)
        }
        if let beforeTime = beforeTime {
            try encodeContainer.encode(beforeTime, forKey: .beforeTime)
        }
        if let caseId = caseId {
            try encodeContainer.encode(caseId, forKey: .caseId)
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
