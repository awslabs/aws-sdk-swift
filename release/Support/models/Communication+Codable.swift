// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Communication: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attachmentSet
        case body
        case caseId
        case submittedBy
        case timeCreated
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attachmentSet = attachmentSet {
            var attachmentSetContainer = encodeContainer.nestedUnkeyedContainer(forKey: .attachmentSet)
            for attachmentset0 in attachmentSet {
                try attachmentSetContainer.encode(attachmentset0)
            }
        }
        if let body = body {
            try encodeContainer.encode(body, forKey: .body)
        }
        if let caseId = caseId {
            try encodeContainer.encode(caseId, forKey: .caseId)
        }
        if let submittedBy = submittedBy {
            try encodeContainer.encode(submittedBy, forKey: .submittedBy)
        }
        if let timeCreated = timeCreated {
            try encodeContainer.encode(timeCreated, forKey: .timeCreated)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let caseIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .caseId)
        caseId = caseIdDecoded
        let bodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .body)
        body = bodyDecoded
        let submittedByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .submittedBy)
        submittedBy = submittedByDecoded
        let timeCreatedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .timeCreated)
        timeCreated = timeCreatedDecoded
        let attachmentSetContainer = try containerValues.decodeIfPresent([AttachmentDetails].self, forKey: .attachmentSet)
        var attachmentSetDecoded0:[AttachmentDetails]? = nil
        if let attachmentSetContainer = attachmentSetContainer {
            attachmentSetDecoded0 = [AttachmentDetails]()
            for structure0 in attachmentSetContainer {
                attachmentSetDecoded0?.append(structure0)
            }
        }
        attachmentSet = attachmentSetDecoded0
    }
}
