// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrustedAdvisorCostOptimizingSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case estimatedMonthlySavings
        case estimatedPercentMonthlySavings
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if estimatedMonthlySavings != 0.0 {
            try encodeContainer.encode(estimatedMonthlySavings, forKey: .estimatedMonthlySavings)
        }
        if estimatedPercentMonthlySavings != 0.0 {
            try encodeContainer.encode(estimatedPercentMonthlySavings, forKey: .estimatedPercentMonthlySavings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let estimatedMonthlySavingsDecoded = try containerValues.decode(Double.self, forKey: .estimatedMonthlySavings)
        estimatedMonthlySavings = estimatedMonthlySavingsDecoded
        let estimatedPercentMonthlySavingsDecoded = try containerValues.decode(Double.self, forKey: .estimatedPercentMonthlySavings)
        estimatedPercentMonthlySavings = estimatedPercentMonthlySavingsDecoded
    }
}
