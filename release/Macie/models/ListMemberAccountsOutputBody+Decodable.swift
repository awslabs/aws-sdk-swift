// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMemberAccountsOutputBody: Equatable {
    public let memberAccounts: [MemberAccount]?
    public let nextToken: String?
}

extension ListMemberAccountsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case memberAccounts
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memberAccountsContainer = try containerValues.decodeIfPresent([MemberAccount].self, forKey: .memberAccounts)
        var memberAccountsDecoded0:[MemberAccount]? = nil
        if let memberAccountsContainer = memberAccountsContainer {
            memberAccountsDecoded0 = [MemberAccount]()
            for structure0 in memberAccountsContainer {
                memberAccountsDecoded0?.append(structure0)
            }
        }
        memberAccounts = memberAccountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
