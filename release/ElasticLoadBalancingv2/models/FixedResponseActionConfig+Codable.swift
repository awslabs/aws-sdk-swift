// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FixedResponseActionConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case contentType = "ContentType"
        case messageBody = "MessageBody"
        case statusCode = "StatusCode"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let contentType = contentType {
            try container.encode(contentType, forKey: Key("ContentType"))
        }
        if let messageBody = messageBody {
            try container.encode(messageBody, forKey: Key("MessageBody"))
        }
        if let statusCode = statusCode {
            try container.encode(statusCode, forKey: Key("StatusCode"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageBodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .messageBody)
        messageBody = messageBodyDecoded
        let statusCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statusCode)
        statusCode = statusCodeDecoded
        let contentTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contentType)
        contentType = contentTypeDecoded
    }
}
