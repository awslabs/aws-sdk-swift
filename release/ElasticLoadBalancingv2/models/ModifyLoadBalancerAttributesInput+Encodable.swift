// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyLoadBalancerAttributesInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let attributes = attributes {
            var attributesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Attributes"))
            for (index0, loadbalancerattribute0) in attributes.enumerated() {
                try attributesContainer.encode(loadbalancerattribute0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let loadBalancerArn = loadBalancerArn {
            try container.encode(loadBalancerArn, forKey: Key("LoadBalancerArn"))
        }
        try container.encode("ModifyLoadBalancerAttributes", forKey:Key("Action"))
        try container.encode("2015-12-01", forKey:Key("Version"))
    }
}
