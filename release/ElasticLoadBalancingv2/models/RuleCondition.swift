// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a condition for a rule.</p>
///          <p>Each rule can optionally include up to one of each of the following conditions:
///         <code>http-request-method</code>, <code>host-header</code>, <code>path-pattern</code>, and
///         <code>source-ip</code>. Each rule can also optionally include one or more of each of the
///       following conditions: <code>http-header</code> and <code>query-string</code>.</p>
public struct RuleCondition: Equatable {
    /// <p>The field in the HTTP request. The following are the possible values:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>http-header</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>http-request-method</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>host-header</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>path-pattern</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>query-string</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>source-ip</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let field: String?
    /// <p>Information for a host header condition. Specify only when <code>Field</code> is
    ///         <code>host-header</code>.</p>
    public let hostHeaderConfig: HostHeaderConditionConfig?
    /// <p>Information for an HTTP header condition. Specify only when <code>Field</code> is
    ///         <code>http-header</code>.</p>
    public let httpHeaderConfig: HttpHeaderConditionConfig?
    /// <p>Information for an HTTP method condition. Specify only when <code>Field</code> is
    ///         <code>http-request-method</code>.</p>
    public let httpRequestMethodConfig: HttpRequestMethodConditionConfig?
    /// <p>Information for a path pattern condition. Specify only when <code>Field</code> is
    ///         <code>path-pattern</code>.</p>
    public let pathPatternConfig: PathPatternConditionConfig?
    /// <p>Information for a query string condition. Specify only when <code>Field</code> is
    ///         <code>query-string</code>.</p>
    public let queryStringConfig: QueryStringConditionConfig?
    /// <p>Information for a source IP condition. Specify only when <code>Field</code> is
    ///         <code>source-ip</code>.</p>
    public let sourceIpConfig: SourceIpConditionConfig?
    /// <p>The condition value. Specify only when <code>Field</code> is <code>host-header</code> or
    ///         <code>path-pattern</code>. Alternatively, to specify multiple host names or multiple path
    ///       patterns, use <code>HostHeaderConfig</code> or <code>PathPatternConfig</code>.</p>
    ///          <p>If <code>Field</code> is <code>host-header</code> and you are not using
    ///         <code>HostHeaderConfig</code>, you can specify a single host name (for example,
    ///       my.example.com) in <code>Values</code>. A host name is case insensitive, can be up to 128
    ///       characters in length, and can contain any of the following characters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>A-Z, a-z, 0-9</p>
    ///             </li>
    ///             <li>
    ///                <p>- .</p>
    ///             </li>
    ///             <li>
    ///                <p>* (matches 0 or more characters)</p>
    ///             </li>
    ///             <li>
    ///                <p>? (matches exactly 1 character)</p>
    ///             </li>
    ///          </ul>
    ///          <p>If <code>Field</code> is <code>path-pattern</code> and you are not using
    ///         <code>PathPatternConfig</code>, you can specify a single path pattern (for example, /img/*)
    ///       in <code>Values</code>. A path pattern is case-sensitive, can be up to 128 characters in
    ///       length, and can contain any of the following characters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>A-Z, a-z, 0-9</p>
    ///             </li>
    ///             <li>
    ///                <p>_ - . $ / ~ " ' @ : +</p>
    ///             </li>
    ///             <li>
    ///                <p>& (using &amp;)</p>
    ///             </li>
    ///             <li>
    ///                <p>* (matches 0 or more characters)</p>
    ///             </li>
    ///             <li>
    ///                <p>? (matches exactly 1 character)</p>
    ///             </li>
    ///          </ul>
    public let values: [String]?

    public init (
        field: String? = nil,
        hostHeaderConfig: HostHeaderConditionConfig? = nil,
        httpHeaderConfig: HttpHeaderConditionConfig? = nil,
        httpRequestMethodConfig: HttpRequestMethodConditionConfig? = nil,
        pathPatternConfig: PathPatternConditionConfig? = nil,
        queryStringConfig: QueryStringConditionConfig? = nil,
        sourceIpConfig: SourceIpConditionConfig? = nil,
        values: [String]? = nil
    )
    {
        self.field = field
        self.hostHeaderConfig = hostHeaderConfig
        self.httpHeaderConfig = httpHeaderConfig
        self.httpRequestMethodConfig = httpRequestMethodConfig
        self.pathPatternConfig = pathPatternConfig
        self.queryStringConfig = queryStringConfig
        self.sourceIpConfig = sourceIpConfig
        self.values = values
    }
}
