// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Information about a load balancer.</p>
public struct LoadBalancer: Equatable {
    /// <p>The subnets for the load balancer.</p>
    public let availabilityZones: [AvailabilityZone]?
    /// <p>The ID of the Amazon Route 53 hosted zone associated with the load balancer.</p>
    public let canonicalHostedZoneId: String?
    /// <p>The date and time the load balancer was created.</p>
    public let createdTime: Date?
    /// <p>[Application Load Balancers on Outposts] The ID of the customer-owned address pool.</p>
    public let customerOwnedIpv4Pool: String?
    /// <p>The public DNS name of the load balancer.</p>
    public let dNSName: String?
    /// <p>The type of IP addresses used by the subnets for your load balancer. The possible values
    ///       are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6
    ///       addresses).</p>
    public let ipAddressType: IpAddressType?
    /// <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    public let loadBalancerArn: String?
    /// <p>The name of the load balancer.</p>
    public let loadBalancerName: String?
    /// <p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an
    ///       Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes.
    ///       Therefore, Internet-facing load balancers can route requests from clients over the
    ///       internet.</p>
    ///          <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an
    ///       internal load balancer is publicly resolvable to the private IP addresses of the nodes.
    ///       Therefore, internal load balancers can route requests only from clients with access to the VPC
    ///       for the load balancer.</p>
    public let scheme: LoadBalancerSchemeEnum?
    /// <p>The IDs of the security groups for the load balancer.</p>
    public let securityGroups: [String]?
    /// <p>The state of the load balancer.</p>
    public let state: LoadBalancerState?
    /// <p>The type of load balancer.</p>
    public let type: LoadBalancerTypeEnum?
    /// <p>The ID of the VPC for the load balancer.</p>
    public let vpcId: String?

    public init (
        availabilityZones: [AvailabilityZone]? = nil,
        canonicalHostedZoneId: String? = nil,
        createdTime: Date? = nil,
        customerOwnedIpv4Pool: String? = nil,
        dNSName: String? = nil,
        ipAddressType: IpAddressType? = nil,
        loadBalancerArn: String? = nil,
        loadBalancerName: String? = nil,
        scheme: LoadBalancerSchemeEnum? = nil,
        securityGroups: [String]? = nil,
        state: LoadBalancerState? = nil,
        type: LoadBalancerTypeEnum? = nil,
        vpcId: String? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.canonicalHostedZoneId = canonicalHostedZoneId
        self.createdTime = createdTime
        self.customerOwnedIpv4Pool = customerOwnedIpv4Pool
        self.dNSName = dNSName
        self.ipAddressType = ipAddressType
        self.loadBalancerArn = loadBalancerArn
        self.loadBalancerName = loadBalancerName
        self.scheme = scheme
        self.securityGroups = securityGroups
        self.state = state
        self.type = type
        self.vpcId = vpcId
    }
}
