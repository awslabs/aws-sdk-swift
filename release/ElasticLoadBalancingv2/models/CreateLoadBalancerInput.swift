// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateLoadBalancerInput: Equatable {
    /// <p>[Application Load Balancers on Outposts] The ID of the customer-owned address pool (CoIP
    ///       pool).</p>
    public let customerOwnedIpv4Pool: String?
    /// <p>The type of IP addresses used by the subnets for your load balancer. The possible values
    ///       are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6
    ///       addresses). Internal load balancers must use <code>ipv4</code>.</p>
    public let ipAddressType: IpAddressType?
    /// <p>The name of the load balancer.</p>
    ///          <p>This name must be unique per region per account, can have a maximum of 32 characters, must
    ///       contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must
    ///       not begin with "internal-".</p>
    public let name: String?
    /// <p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an
    ///       Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes.
    ///       Therefore, Internet-facing load balancers can route requests from clients over the
    ///       internet.</p>
    ///          <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an
    ///       internal load balancer is publicly resolvable to the private IP addresses of the nodes.
    ///       Therefore, internal load balancers can route requests only from clients with access to the VPC
    ///       for the load balancer.</p>
    ///          <p>The default is an Internet-facing load balancer.</p>
    ///          <p>You cannot specify a scheme for a Gateway Load Balancer.</p>
    public let scheme: LoadBalancerSchemeEnum?
    /// <p>[Application Load Balancers] The IDs of the security groups for the load balancer.</p>
    public let securityGroups: [String]?
    /// <p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You
    ///       must specify either subnets or subnet mappings.</p>
    ///          <p>[Application Load Balancers] You must specify subnets from at least two Availability
    ///       Zones. You cannot specify Elastic IP addresses for your subnets.</p>
    ///          <p>[Application Load Balancers on Outposts] You must specify one Outpost subnet.</p>
    ///          <p>[Application Load Balancers on Local Zones] You can specify subnets from one or more Local
    ///       Zones.</p>
    ///          <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You
    ///       can specify one Elastic IP address per subnet if you need static IP addresses for your
    ///       internet-facing load balancer. For internal load balancers, you can specify one private IP
    ///       address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you
    ///       can specify one IPv6 address per subnet.</p>
    ///          <p>[Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You
    ///       cannot specify Elastic IP addresses for your subnets.</p>
    public let subnetMappings: [SubnetMapping]?
    /// <p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You
    ///       must specify either subnets or subnet mappings.</p>
    ///          <p>[Application Load Balancers] You must specify subnets from at least two Availability
    ///       Zones.</p>
    ///          <p>[Application Load Balancers on Outposts] You must specify one Outpost subnet.</p>
    ///          <p>[Application Load Balancers on Local Zones] You can specify subnets from one or more Local
    ///       Zones.</p>
    ///          <p>[Network Load Balancers] You can specify subnets from one or more Availability
    ///       Zones.</p>
    ///          <p>[Gateway Load Balancers] You can specify subnets from one or more Availability
    ///       Zones.</p>
    public let subnets: [String]?
    /// <p>The tags to assign to the load balancer.</p>
    public let tags: [Tag]?
    /// <p>The type of load balancer. The default is <code>application</code>.</p>
    public let type: LoadBalancerTypeEnum?

    public init (
        customerOwnedIpv4Pool: String? = nil,
        ipAddressType: IpAddressType? = nil,
        name: String? = nil,
        scheme: LoadBalancerSchemeEnum? = nil,
        securityGroups: [String]? = nil,
        subnetMappings: [SubnetMapping]? = nil,
        subnets: [String]? = nil,
        tags: [Tag]? = nil,
        type: LoadBalancerTypeEnum? = nil
    )
    {
        self.customerOwnedIpv4Pool = customerOwnedIpv4Pool
        self.ipAddressType = ipAddressType
        self.name = name
        self.scheme = scheme
        self.securityGroups = securityGroups
        self.subnetMappings = subnetMappings
        self.subnets = subnets
        self.tags = tags
        self.type = type
    }
}
