// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ActionTypeEnum {
    case authenticateCognito
    case authenticateOidc
    case fixedResponse
    case forward
    case redirect
    case sdkUnknown(String)
}

extension ActionTypeEnum : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ActionTypeEnum] {
        return [
            .authenticateCognito,
            .authenticateOidc,
            .fixedResponse,
            .forward,
            .redirect,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .authenticateCognito: return "authenticate-cognito"
        case .authenticateOidc: return "authenticate-oidc"
        case .fixedResponse: return "fixed-response"
        case .forward: return "forward"
        case .redirect: return "redirect"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ActionTypeEnum(rawValue: rawValue) ?? ActionTypeEnum.sdkUnknown(rawValue)
    }
}
