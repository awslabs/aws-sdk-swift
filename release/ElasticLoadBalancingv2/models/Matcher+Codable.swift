// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Matcher: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case grpcCode = "GrpcCode"
        case httpCode = "HttpCode"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let grpcCode = grpcCode {
            try container.encode(grpcCode, forKey: Key("GrpcCode"))
        }
        if let httpCode = httpCode {
            try container.encode(httpCode, forKey: Key("HttpCode"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let httpCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .httpCode)
        httpCode = httpCodeDecoded
        let grpcCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .grpcCode)
        grpcCode = grpcCodeDecoded
    }
}
