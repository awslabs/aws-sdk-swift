// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the Auto-Tune state for the Elasticsearch domain. For valid states see the <a href="https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/auto-tune.html" target="_blank">Developer Guide</a>.</p>
public enum AutoTuneState {
    case disabled
    case disabledAndRollbackComplete
    case disabledAndRollbackError
    case disabledAndRollbackInProgress
    case disabledAndRollbackScheduled
    case disableInProgress
    case enabled
    case enableInProgress
    case error
    case sdkUnknown(String)
}

extension AutoTuneState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AutoTuneState] {
        return [
            .disabled,
            .disabledAndRollbackComplete,
            .disabledAndRollbackError,
            .disabledAndRollbackInProgress,
            .disabledAndRollbackScheduled,
            .disableInProgress,
            .enabled,
            .enableInProgress,
            .error,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .disabled: return "DISABLED"
        case .disabledAndRollbackComplete: return "DISABLED_AND_ROLLBACK_COMPLETE"
        case .disabledAndRollbackError: return "DISABLED_AND_ROLLBACK_ERROR"
        case .disabledAndRollbackInProgress: return "DISABLED_AND_ROLLBACK_IN_PROGRESS"
        case .disabledAndRollbackScheduled: return "DISABLED_AND_ROLLBACK_SCHEDULED"
        case .disableInProgress: return "DISABLE_IN_PROGRESS"
        case .enabled: return "ENABLED"
        case .enableInProgress: return "ENABLE_IN_PROGRESS"
        case .error: return "ERROR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AutoTuneState(rawValue: rawValue) ?? AutoTuneState.sdkUnknown(rawValue)
    }
}
