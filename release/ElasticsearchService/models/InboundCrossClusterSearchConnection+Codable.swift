// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InboundCrossClusterSearchConnection: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectionStatus = "ConnectionStatus"
        case crossClusterSearchConnectionId = "CrossClusterSearchConnectionId"
        case destinationDomainInfo = "DestinationDomainInfo"
        case sourceDomainInfo = "SourceDomainInfo"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionStatus = connectionStatus {
            try encodeContainer.encode(connectionStatus, forKey: .connectionStatus)
        }
        if let crossClusterSearchConnectionId = crossClusterSearchConnectionId {
            try encodeContainer.encode(crossClusterSearchConnectionId, forKey: .crossClusterSearchConnectionId)
        }
        if let destinationDomainInfo = destinationDomainInfo {
            try encodeContainer.encode(destinationDomainInfo, forKey: .destinationDomainInfo)
        }
        if let sourceDomainInfo = sourceDomainInfo {
            try encodeContainer.encode(sourceDomainInfo, forKey: .sourceDomainInfo)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceDomainInfoDecoded = try containerValues.decodeIfPresent(DomainInformation.self, forKey: .sourceDomainInfo)
        sourceDomainInfo = sourceDomainInfoDecoded
        let destinationDomainInfoDecoded = try containerValues.decodeIfPresent(DomainInformation.self, forKey: .destinationDomainInfo)
        destinationDomainInfo = destinationDomainInfoDecoded
        let crossClusterSearchConnectionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .crossClusterSearchConnectionId)
        crossClusterSearchConnectionId = crossClusterSearchConnectionIdDecoded
        let connectionStatusDecoded = try containerValues.decodeIfPresent(InboundCrossClusterSearchConnectionStatus.self, forKey: .connectionStatus)
        connectionStatus = connectionStatusDecoded
    }
}
