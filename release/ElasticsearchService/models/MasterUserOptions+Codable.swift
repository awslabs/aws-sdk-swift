// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MasterUserOptions: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case masterUserARN = "MasterUserARN"
        case masterUserName = "MasterUserName"
        case masterUserPassword = "MasterUserPassword"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let masterUserARN = masterUserARN {
            try encodeContainer.encode(masterUserARN, forKey: .masterUserARN)
        }
        if let masterUserName = masterUserName {
            try encodeContainer.encode(masterUserName, forKey: .masterUserName)
        }
        if let masterUserPassword = masterUserPassword {
            try encodeContainer.encode(masterUserPassword, forKey: .masterUserPassword)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let masterUserARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .masterUserARN)
        masterUserARN = masterUserARNDecoded
        let masterUserNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .masterUserName)
        masterUserName = masterUserNameDecoded
        let masterUserPasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .masterUserPassword)
        masterUserPassword = masterUserPasswordDecoded
    }
}
