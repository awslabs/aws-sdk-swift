// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PurchaseReservedElasticsearchInstanceOfferingInputBody: Equatable {
    public let reservedElasticsearchInstanceOfferingId: String?
    public let reservationName: String?
    public let instanceCount: Int
}

extension PurchaseReservedElasticsearchInstanceOfferingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceCount = "InstanceCount"
        case reservationName = "ReservationName"
        case reservedElasticsearchInstanceOfferingId = "ReservedElasticsearchInstanceOfferingId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reservedElasticsearchInstanceOfferingIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reservedElasticsearchInstanceOfferingId)
        reservedElasticsearchInstanceOfferingId = reservedElasticsearchInstanceOfferingIdDecoded
        let reservationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reservationName)
        reservationName = reservationNameDecoded
        let instanceCountDecoded = try containerValues.decode(Int.self, forKey: .instanceCount)
        instanceCount = instanceCountDecoded
    }
}
