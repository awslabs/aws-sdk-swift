// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StorageType: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case storageSubTypeName = "StorageSubTypeName"
        case storageTypeLimits = "StorageTypeLimits"
        case storageTypeName = "StorageTypeName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let storageSubTypeName = storageSubTypeName {
            try encodeContainer.encode(storageSubTypeName, forKey: .storageSubTypeName)
        }
        if let storageTypeLimits = storageTypeLimits {
            var storageTypeLimitsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .storageTypeLimits)
            for storagetypelimitlist0 in storageTypeLimits {
                try storageTypeLimitsContainer.encode(storagetypelimitlist0)
            }
        }
        if let storageTypeName = storageTypeName {
            try encodeContainer.encode(storageTypeName, forKey: .storageTypeName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let storageTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .storageTypeName)
        storageTypeName = storageTypeNameDecoded
        let storageSubTypeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .storageSubTypeName)
        storageSubTypeName = storageSubTypeNameDecoded
        let storageTypeLimitsContainer = try containerValues.decodeIfPresent([StorageTypeLimit].self, forKey: .storageTypeLimits)
        var storageTypeLimitsDecoded0:[StorageTypeLimit]? = nil
        if let storageTypeLimitsContainer = storageTypeLimitsContainer {
            storageTypeLimitsDecoded0 = [StorageTypeLimit]()
            for structure0 in storageTypeLimitsContainer {
                storageTypeLimitsDecoded0?.append(structure0)
            }
        }
        storageTypeLimits = storageTypeLimitsDecoded0
    }
}
