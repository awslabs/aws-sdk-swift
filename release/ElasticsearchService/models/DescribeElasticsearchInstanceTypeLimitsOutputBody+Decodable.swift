// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeElasticsearchInstanceTypeLimitsOutputBody: Equatable {
    public let limitsByRole: [String:Limits]?
}

extension DescribeElasticsearchInstanceTypeLimitsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case limitsByRole = "LimitsByRole"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitsByRoleContainer = try containerValues.decodeIfPresent([String:Limits].self, forKey: .limitsByRole)
        var limitsByRoleDecoded0: [String:Limits]? = nil
        if let limitsByRoleContainer = limitsByRoleContainer {
            limitsByRoleDecoded0 = [String:Limits]()
            for (key0, limits0) in limitsByRoleContainer {
                limitsByRoleDecoded0?[key0] = limits0
            }
        }
        limitsByRole = limitsByRoleDecoded0
    }
}
