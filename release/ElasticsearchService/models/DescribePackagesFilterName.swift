// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DescribePackagesFilterName {
    case packageid
    case packagename
    case packagestatus
    case sdkUnknown(String)
}

extension DescribePackagesFilterName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DescribePackagesFilterName] {
        return [
            .packageid,
            .packagename,
            .packagestatus,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .packageid: return "PackageID"
        case .packagename: return "PackageName"
        case .packagestatus: return "PackageStatus"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DescribePackagesFilterName(rawValue: rawValue) ?? DescribePackagesFilterName.sdkUnknown(rawValue)
    }
}
