// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetUpgradeHistoryOutputBody: Equatable {
    public let upgradeHistories: [UpgradeHistory]?
    public let nextToken: String?
}

extension GetUpgradeHistoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case upgradeHistories = "UpgradeHistories"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let upgradeHistoriesContainer = try containerValues.decodeIfPresent([UpgradeHistory].self, forKey: .upgradeHistories)
        var upgradeHistoriesDecoded0:[UpgradeHistory]? = nil
        if let upgradeHistoriesContainer = upgradeHistoriesContainer {
            upgradeHistoriesDecoded0 = [UpgradeHistory]()
            for structure0 in upgradeHistoriesContainer {
                upgradeHistoriesDecoded0?.append(structure0)
            }
        }
        upgradeHistories = upgradeHistoriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
