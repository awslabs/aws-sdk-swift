// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The configuration of an Elasticsearch domain.</p>
public struct ElasticsearchDomainConfig: Equatable {
    /// <p>IAM access policy as a JSON-formatted string.</p>
    public let accessPolicies: AccessPoliciesStatus?
    /// <p>Specifies the <code>AdvancedOptions</code> for the domain.  See <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomain-configure-advanced-options" target="_blank">Configuring Advanced Options</a> for more information.</p>
    public let advancedOptions: AdvancedOptionsStatus?
    /// <p>Specifies <code>AdvancedSecurityOptions</code> for the domain. </p>
    public let advancedSecurityOptions: AdvancedSecurityOptionsStatus?
    /// <p>Specifies <code>AutoTuneOptions</code> for the domain. </p>
    public let autoTuneOptions: AutoTuneOptionsStatus?
    /// <p>The <code>CognitoOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-cognito-auth.html" target="_blank">Amazon Cognito Authentication for Kibana</a>.</p>
    public let cognitoOptions: CognitoOptionsStatus?
    /// <p>Specifies the <code>DomainEndpointOptions</code> for the Elasticsearch domain.</p>
    public let domainEndpointOptions: DomainEndpointOptionsStatus?
    /// <p>Specifies the <code>EBSOptions</code> for the Elasticsearch domain.</p>
    public let eBSOptions: EBSOptionsStatus?
    /// <p>Specifies the <code>ElasticsearchClusterConfig</code> for the Elasticsearch domain.</p>
    public let elasticsearchClusterConfig: ElasticsearchClusterConfigStatus?
    /// <p>String of format X.Y to specify version for the Elasticsearch domain.</p>
    public let elasticsearchVersion: ElasticsearchVersionStatus?
    /// <p>Specifies the <code>EncryptionAtRestOptions</code> for the Elasticsearch domain.</p>
    public let encryptionAtRestOptions: EncryptionAtRestOptionsStatus?
    /// <p>Log publishing options for the given domain.</p>
    public let logPublishingOptions: LogPublishingOptionsStatus?
    /// <p>Specifies the <code>NodeToNodeEncryptionOptions</code> for the Elasticsearch domain.</p>
    public let nodeToNodeEncryptionOptions: NodeToNodeEncryptionOptionsStatus?
    /// <p>Specifies the <code>SnapshotOptions</code> for the Elasticsearch domain.</p>
    public let snapshotOptions: SnapshotOptionsStatus?
    /// <p>The <code>VPCOptions</code> for the specified domain. For more information, see <a href="http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html" target="_blank">VPC Endpoints for Amazon Elasticsearch Service Domains</a>.</p>
    public let vPCOptions: VPCDerivedInfoStatus?

    public init (
        accessPolicies: AccessPoliciesStatus? = nil,
        advancedOptions: AdvancedOptionsStatus? = nil,
        advancedSecurityOptions: AdvancedSecurityOptionsStatus? = nil,
        autoTuneOptions: AutoTuneOptionsStatus? = nil,
        cognitoOptions: CognitoOptionsStatus? = nil,
        domainEndpointOptions: DomainEndpointOptionsStatus? = nil,
        eBSOptions: EBSOptionsStatus? = nil,
        elasticsearchClusterConfig: ElasticsearchClusterConfigStatus? = nil,
        elasticsearchVersion: ElasticsearchVersionStatus? = nil,
        encryptionAtRestOptions: EncryptionAtRestOptionsStatus? = nil,
        logPublishingOptions: LogPublishingOptionsStatus? = nil,
        nodeToNodeEncryptionOptions: NodeToNodeEncryptionOptionsStatus? = nil,
        snapshotOptions: SnapshotOptionsStatus? = nil,
        vPCOptions: VPCDerivedInfoStatus? = nil
    )
    {
        self.accessPolicies = accessPolicies
        self.advancedOptions = advancedOptions
        self.advancedSecurityOptions = advancedSecurityOptions
        self.autoTuneOptions = autoTuneOptions
        self.cognitoOptions = cognitoOptions
        self.domainEndpointOptions = domainEndpointOptions
        self.eBSOptions = eBSOptions
        self.elasticsearchClusterConfig = elasticsearchClusterConfig
        self.elasticsearchVersion = elasticsearchVersion
        self.encryptionAtRestOptions = encryptionAtRestOptions
        self.logPublishingOptions = logPublishingOptions
        self.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions
        self.snapshotOptions = snapshotOptions
        self.vPCOptions = vPCOptions
    }
}
