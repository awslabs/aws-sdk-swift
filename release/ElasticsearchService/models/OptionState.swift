// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The state of a requested change. One of the following:</p>
///     <ul>
///       <li>Processing: The request change is still in-process.</li>
///       <li>Active: The request change is processed and deployed to the Elasticsearch domain.</li>
///     </ul>
public enum OptionState {
    case active
    case processing
    case requiresindexdocuments
    case sdkUnknown(String)
}

extension OptionState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OptionState] {
        return [
            .active,
            .processing,
            .requiresindexdocuments,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "Active"
        case .processing: return "Processing"
        case .requiresindexdocuments: return "RequiresIndexDocuments"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OptionState(rawValue: rawValue) ?? OptionState.sdkUnknown(rawValue)
    }
}
