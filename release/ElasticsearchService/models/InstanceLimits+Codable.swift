// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceLimits: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case instanceCountLimits = "InstanceCountLimits"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let instanceCountLimits = instanceCountLimits {
            try encodeContainer.encode(instanceCountLimits, forKey: .instanceCountLimits)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceCountLimitsDecoded = try containerValues.decodeIfPresent(InstanceCountLimits.self, forKey: .instanceCountLimits)
        instanceCountLimits = instanceCountLimitsDecoded
    }
}
