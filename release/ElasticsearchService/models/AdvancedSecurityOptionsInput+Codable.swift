// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AdvancedSecurityOptionsInput: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case enabled = "Enabled"
        case internalUserDatabaseEnabled = "InternalUserDatabaseEnabled"
        case masterUserOptions = "MasterUserOptions"
        case sAMLOptions = "SAMLOptions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let enabled = enabled {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let internalUserDatabaseEnabled = internalUserDatabaseEnabled {
            try encodeContainer.encode(internalUserDatabaseEnabled, forKey: .internalUserDatabaseEnabled)
        }
        if let masterUserOptions = masterUserOptions {
            try encodeContainer.encode(masterUserOptions, forKey: .masterUserOptions)
        }
        if let sAMLOptions = sAMLOptions {
            try encodeContainer.encode(sAMLOptions, forKey: .sAMLOptions)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let internalUserDatabaseEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .internalUserDatabaseEnabled)
        internalUserDatabaseEnabled = internalUserDatabaseEnabledDecoded
        let masterUserOptionsDecoded = try containerValues.decodeIfPresent(MasterUserOptions.self, forKey: .masterUserOptions)
        masterUserOptions = masterUserOptionsDecoded
        let sAMLOptionsDecoded = try containerValues.decodeIfPresent(SAMLOptionsInput.self, forKey: .sAMLOptions)
        sAMLOptions = sAMLOptionsDecoded
    }
}
