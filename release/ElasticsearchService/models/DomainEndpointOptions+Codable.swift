// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DomainEndpointOptions: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customEndpoint = "CustomEndpoint"
        case customEndpointCertificateArn = "CustomEndpointCertificateArn"
        case customEndpointEnabled = "CustomEndpointEnabled"
        case enforceHTTPS = "EnforceHTTPS"
        case tLSSecurityPolicy = "TLSSecurityPolicy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customEndpoint = customEndpoint {
            try encodeContainer.encode(customEndpoint, forKey: .customEndpoint)
        }
        if let customEndpointCertificateArn = customEndpointCertificateArn {
            try encodeContainer.encode(customEndpointCertificateArn, forKey: .customEndpointCertificateArn)
        }
        if let customEndpointEnabled = customEndpointEnabled {
            try encodeContainer.encode(customEndpointEnabled, forKey: .customEndpointEnabled)
        }
        if let enforceHTTPS = enforceHTTPS {
            try encodeContainer.encode(enforceHTTPS, forKey: .enforceHTTPS)
        }
        if let tLSSecurityPolicy = tLSSecurityPolicy {
            try encodeContainer.encode(tLSSecurityPolicy.rawValue, forKey: .tLSSecurityPolicy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enforceHTTPSDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enforceHTTPS)
        enforceHTTPS = enforceHTTPSDecoded
        let tLSSecurityPolicyDecoded = try containerValues.decodeIfPresent(TLSSecurityPolicy.self, forKey: .tLSSecurityPolicy)
        tLSSecurityPolicy = tLSSecurityPolicyDecoded
        let customEndpointEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .customEndpointEnabled)
        customEndpointEnabled = customEndpointEnabledDecoded
        let customEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customEndpoint)
        customEndpoint = customEndpointDecoded
        let customEndpointCertificateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customEndpointCertificateArn)
        customEndpointCertificateArn = customEndpointCertificateArnDecoded
    }
}
