// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCompatibleElasticsearchVersionsOutputBody: Equatable {
    public let compatibleElasticsearchVersions: [CompatibleVersionsMap]?
}

extension GetCompatibleElasticsearchVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case compatibleElasticsearchVersions = "CompatibleElasticsearchVersions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compatibleElasticsearchVersionsContainer = try containerValues.decodeIfPresent([CompatibleVersionsMap].self, forKey: .compatibleElasticsearchVersions)
        var compatibleElasticsearchVersionsDecoded0:[CompatibleVersionsMap]? = nil
        if let compatibleElasticsearchVersionsContainer = compatibleElasticsearchVersionsContainer {
            compatibleElasticsearchVersionsDecoded0 = [CompatibleVersionsMap]()
            for structure0 in compatibleElasticsearchVersionsContainer {
                compatibleElasticsearchVersionsDecoded0?.append(structure0)
            }
        }
        compatibleElasticsearchVersions = compatibleElasticsearchVersionsDecoded0
    }
}
