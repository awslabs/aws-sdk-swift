// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePackagesOutputBody: Equatable {
    public let packageDetailsList: [PackageDetails]?
    public let nextToken: String?
}

extension DescribePackagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case packageDetailsList = "PackageDetailsList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let packageDetailsListContainer = try containerValues.decodeIfPresent([PackageDetails].self, forKey: .packageDetailsList)
        var packageDetailsListDecoded0:[PackageDetails]? = nil
        if let packageDetailsListContainer = packageDetailsListContainer {
            packageDetailsListDecoded0 = [PackageDetails]()
            for structure0 in packageDetailsListContainer {
                packageDetailsListDecoded0?.append(structure0)
            }
        }
        packageDetailsList = packageDetailsListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
