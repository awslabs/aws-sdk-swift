// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SAMLIdp: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case entityId = "EntityId"
        case metadataContent = "MetadataContent"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entityId = entityId {
            try encodeContainer.encode(entityId, forKey: .entityId)
        }
        if let metadataContent = metadataContent {
            try encodeContainer.encode(metadataContent, forKey: .metadataContent)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metadataContentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metadataContent)
        metadataContent = metadataContentDecoded
        let entityIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .entityId)
        entityId = entityIdDecoded
    }
}
