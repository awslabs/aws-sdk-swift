// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeReservedElasticsearchInstancesOutputBody: Equatable {
    public let nextToken: String?
    public let reservedElasticsearchInstances: [ReservedElasticsearchInstance]?
}

extension DescribeReservedElasticsearchInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case reservedElasticsearchInstances = "ReservedElasticsearchInstances"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reservedElasticsearchInstancesContainer = try containerValues.decodeIfPresent([ReservedElasticsearchInstance].self, forKey: .reservedElasticsearchInstances)
        var reservedElasticsearchInstancesDecoded0:[ReservedElasticsearchInstance]? = nil
        if let reservedElasticsearchInstancesContainer = reservedElasticsearchInstancesContainer {
            reservedElasticsearchInstancesDecoded0 = [ReservedElasticsearchInstance]()
            for structure0 in reservedElasticsearchInstancesContainer {
                reservedElasticsearchInstancesDecoded0?.append(structure0)
            }
        }
        reservedElasticsearchInstances = reservedElasticsearchInstancesDecoded0
    }
}
