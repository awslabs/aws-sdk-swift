// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>Amazon QuickSight API Reference</fullname>
///         <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the
///             AWS Cloud that makes it easy to extend data and insights to every user in your
///             organization. This API reference contains documentation for a programming interface that
///             you can use to manage Amazon QuickSight. </p>
public protocol QuickSightClientProtocol {
    /// <p>Cancels an ongoing ingestion of data into SPICE.</p>
    func cancelIngestion(input: CancelIngestionInput, completion: @escaping (SdkResult<CancelIngestionOutputResponse, CancelIngestionOutputError>) -> Void)
    /// <p>Creates Amazon QuickSight customizations the current AWS Region. Currently, you can
    ///             add a custom default theme by using the <code>CreateAccountCustomization</code> or
    ///                 <code>UpdateAccountCustomization</code> API operation. To further customize
    ///             QuickSight by removing QuickSight sample assets and videos for all new users, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html">Customizing QuickSight</a> in the <i>Amazon QuickSight User
    ///                 Guide.</i>
    ///          </p>
    ///         <p>You can create customizations for your AWS account or, if you specify a namespace, for
    ///             a QuickSight namespace instead. Customizations that apply to a namespace always override
    ///             customizations that apply to an AWS account. To find out which customizations apply, use
    ///             the <code>DescribeAccountCustomization</code> API operation.</p>
    ///         <p>Before you use the <code>CreateAccountCustomization</code> API operation to add a theme
    ///             as the namespace default, make sure that you first share the theme with the namespace.
    ///             If you don't share it with the namespace, the theme isn't visible to your users
    ///             even if you make it the default theme.
    ///             To check if the theme is shared, view the current permissions by using the
    ///             <code>
    ///                <a>DescribeThemePermissions</a>
    ///             </code> API operation.
    ///             To share the theme, grant permissions by using the
    ///             <code>
    ///                <a>UpdateThemePermissions</a>
    ///             </code> API operation. </p>
    func createAccountCustomization(input: CreateAccountCustomizationInput, completion: @escaping (SdkResult<CreateAccountCustomizationOutputResponse, CreateAccountCustomizationOutputError>) -> Void)
    /// <p>Creates an analysis in Amazon QuickSight.</p>
    func createAnalysis(input: CreateAnalysisInput, completion: @escaping (SdkResult<CreateAnalysisOutputResponse, CreateAnalysisOutputError>) -> Void)
    /// <p>Creates a dashboard from a template. To first create a template, see the <code>
    ///                <a>CreateTemplate</a>
    ///             </code> API operation.</p>
    ///         <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created
    ///             from analyses. You can share QuickSight dashboards. With the right permissions, you can
    ///             create scheduled email reports from them. If you have the correct permissions, you can
    ///             create a dashboard from a template that exists in a different AWS account.</p>
    func createDashboard(input: CreateDashboardInput, completion: @escaping (SdkResult<CreateDashboardOutputResponse, CreateDashboardOutputError>) -> Void)
    /// <p>Creates a dataset.</p>
    func createDataSet(input: CreateDataSetInput, completion: @escaping (SdkResult<CreateDataSetOutputResponse, CreateDataSetOutputError>) -> Void)
    /// <p>Creates a data source.</p>
    func createDataSource(input: CreateDataSourceInput, completion: @escaping (SdkResult<CreateDataSourceOutputResponse, CreateDataSourceOutputError>) -> Void)
    /// <p>Creates an Amazon QuickSight group.</p>
    /// 		       <p>The permissions resource is
    /// 					<code>arn:aws:quicksight:us-east-1:<i><relevant-aws-account-id></i>:group/default/<i><group-name></i>
    ///             </code>.</p>
    /// 		       <p>The response is a group object.</p>
    func createGroup(input: CreateGroupInput, completion: @escaping (SdkResult<CreateGroupOutputResponse, CreateGroupOutputError>) -> Void)
    /// <p>Adds an Amazon QuickSight user to an Amazon QuickSight group. </p>
    func createGroupMembership(input: CreateGroupMembershipInput, completion: @escaping (SdkResult<CreateGroupMembershipOutputResponse, CreateGroupMembershipOutputError>) -> Void)
    /// <p>Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name
    /// 			(ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight.
    /// 			Assignment names are unique per AWS account. To avoid overwriting rules in other namespaces,
    /// 			use assignment names that are unique.</p>
    func createIAMPolicyAssignment(input: CreateIAMPolicyAssignmentInput, completion: @escaping (SdkResult<CreateIAMPolicyAssignmentOutputResponse, CreateIAMPolicyAssignmentOutputError>) -> Void)
    /// <p>Creates and starts a new SPICE ingestion on a dataset</p>
    /// 		
    /// 		       <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in
    /// 			access control. For an example, see <a href="http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using
    /// 				tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
    func createIngestion(input: CreateIngestionInput, completion: @escaping (SdkResult<CreateIngestionOutputResponse, CreateIngestionOutputError>) -> Void)
    /// <p>(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.</p>
    ///         <p>A namespace allows you to isolate the QuickSight users and groups that are registered
    ///             for that namespace. Users that access the namespace can share assets only with other
    ///             users or groups in the same namespace. They can't see users and groups in other
    ///             namespaces. You can create a namespace after your AWS account is subscribed to
    ///             QuickSight. The namespace must be unique within the AWS account. By default, there is a
    ///             limit of 100 namespaces per AWS account. To increase your limit, create a ticket with
    ///             AWS Support. </p>
    func createNamespace(input: CreateNamespaceInput, completion: @escaping (SdkResult<CreateNamespaceOutputResponse, CreateNamespaceOutputError>) -> Void)
    /// <p>Creates a template from an existing QuickSight analysis or template. You can use the resulting
    /// 			template to create a dashboard.</p>
    /// 		       <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata
    /// 			required to create an analysis and that you can use to create s dashboard. A template adds
    /// 			a layer of abstraction by using placeholders to replace the dataset associated with the
    /// 			analysis. You can use templates to create dashboards by replacing dataset placeholders
    /// 			with datasets that follow the same schema that was used to create the source analysis
    /// 			and template.</p>
    func createTemplate(input: CreateTemplateInput, completion: @escaping (SdkResult<CreateTemplateOutputResponse, CreateTemplateOutputError>) -> Void)
    /// <p>Creates a template alias for a template.</p>
    func createTemplateAlias(input: CreateTemplateAliasInput, completion: @escaping (SdkResult<CreateTemplateAliasOutputResponse, CreateTemplateAliasOutputError>) -> Void)
    /// <p>Creates a theme.</p>
    /// 		       <p>A <i>theme</i> is set of configuration options for color and layout.
    /// 			Themes apply to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using
    /// 			Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    func createTheme(input: CreateThemeInput, completion: @escaping (SdkResult<CreateThemeOutputResponse, CreateThemeOutputError>) -> Void)
    /// <p>Creates a theme alias for a theme.</p>
    func createThemeAlias(input: CreateThemeAliasInput, completion: @escaping (SdkResult<CreateThemeAliasOutputResponse, CreateThemeAliasOutputError>) -> Void)
    /// <p>Deletes all Amazon QuickSight customizations in this AWS Region for the specified AWS
    ///             account and QuickSight namespace.</p>
    func deleteAccountCustomization(input: DeleteAccountCustomizationInput, completion: @escaping (SdkResult<DeleteAccountCustomizationOutputResponse, DeleteAccountCustomizationOutputError>) -> Void)
    /// <p>Deletes an analysis from Amazon QuickSight. You can optionally include a recovery window during
    ///             which you can restore the analysis. If you don't specify a recovery window value, the
    ///             operation defaults to 30 days. QuickSight attaches a <code>DeletionTime</code> stamp to
    ///             the response that specifies the end of the recovery window. At the end of the recovery
    ///             window, QuickSight deletes the analysis permanently.</p>
    ///         <p>At any time before recovery window ends, you can use the <code>RestoreAnalysis</code>
    ///             API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion of
    ///             the analysis. The analysis remains visible in the API until it's deleted, so you can
    ///             describe it but you can't make a template from it.</p>
    ///         <p>An analysis that's scheduled for deletion isn't accessible in the QuickSight console.
    ///             To access it in the console, restore it. Deleting an analysis doesn't delete the
    ///             dashboards that you publish from it.</p>
    func deleteAnalysis(input: DeleteAnalysisInput, completion: @escaping (SdkResult<DeleteAnalysisOutputResponse, DeleteAnalysisOutputError>) -> Void)
    /// <p>Deletes a dashboard.</p>
    func deleteDashboard(input: DeleteDashboardInput, completion: @escaping (SdkResult<DeleteDashboardOutputResponse, DeleteDashboardOutputError>) -> Void)
    /// <p>Deletes a dataset.</p>
    func deleteDataSet(input: DeleteDataSetInput, completion: @escaping (SdkResult<DeleteDataSetOutputResponse, DeleteDataSetOutputError>) -> Void)
    /// <p>Deletes the data source permanently. This operation breaks
    /// 			all the datasets that reference the deleted data source.</p>
    func deleteDataSource(input: DeleteDataSourceInput, completion: @escaping (SdkResult<DeleteDataSourceOutputResponse, DeleteDataSourceOutputError>) -> Void)
    /// <p>Removes a user group from Amazon QuickSight. </p>
    func deleteGroup(input: DeleteGroupInput, completion: @escaping (SdkResult<DeleteGroupOutputResponse, DeleteGroupOutputError>) -> Void)
    /// <p>Removes a user from a group so that the user is no longer a member of the group.</p>
    func deleteGroupMembership(input: DeleteGroupMembershipInput, completion: @escaping (SdkResult<DeleteGroupMembershipOutputResponse, DeleteGroupMembershipOutputError>) -> Void)
    /// <p>Deletes an existing IAM policy assignment.</p>
    func deleteIAMPolicyAssignment(input: DeleteIAMPolicyAssignmentInput, completion: @escaping (SdkResult<DeleteIAMPolicyAssignmentOutputResponse, DeleteIAMPolicyAssignmentOutputError>) -> Void)
    /// <p>Deletes a namespace and the users and groups that are associated with the namespace.
    ///         This is an asynchronous process. Assets including dashboards, analyses, datasets and data sources are not
    ///         deleted. To delete these assets, you use the API operations for the relevant asset. </p>
    func deleteNamespace(input: DeleteNamespaceInput, completion: @escaping (SdkResult<DeleteNamespaceOutputResponse, DeleteNamespaceOutputError>) -> Void)
    /// <p>Deletes a template.</p>
    func deleteTemplate(input: DeleteTemplateInput, completion: @escaping (SdkResult<DeleteTemplateOutputResponse, DeleteTemplateOutputError>) -> Void)
    /// <p>Deletes the item that the specified template alias points to. If you provide a specific
    /// 			alias, you delete the version of the template that the alias points to.</p>
    func deleteTemplateAlias(input: DeleteTemplateAliasInput, completion: @escaping (SdkResult<DeleteTemplateAliasOutputResponse, DeleteTemplateAliasOutputError>) -> Void)
    /// <p>Deletes a theme.</p>
    func deleteTheme(input: DeleteThemeInput, completion: @escaping (SdkResult<DeleteThemeOutputResponse, DeleteThemeOutputError>) -> Void)
    /// <p>Deletes the version of the theme that the specified theme alias points to.
    /// 			If you provide a specific alias, you delete the version of the theme
    /// 			that the alias points to.</p>
    func deleteThemeAlias(input: DeleteThemeAliasInput, completion: @escaping (SdkResult<DeleteThemeAliasOutputResponse, DeleteThemeAliasOutputError>) -> Void)
    /// <p>Deletes the Amazon QuickSight user that is associated with the identity of the AWS
    /// 			Identity and Access Management (IAM) user or role that's making the call. The IAM user
    /// 			isn't deleted as a result of this call. </p>
    func deleteUser(input: DeleteUserInput, completion: @escaping (SdkResult<DeleteUserOutputResponse, DeleteUserOutputError>) -> Void)
    /// <p>Deletes a user identified by its principal ID. </p>
    func deleteUserByPrincipalId(input: DeleteUserByPrincipalIdInput, completion: @escaping (SdkResult<DeleteUserByPrincipalIdOutputResponse, DeleteUserByPrincipalIdOutputError>) -> Void)
    /// <p>Describes the customizations associated with the provided AWS account and Amazon
    ///             QuickSight namespace in an AWS Region. The QuickSight console evaluates which
    ///             customizations to apply by running this API operation with the <code>Resolved</code> flag
    ///             included. </p>
    ///         <p>To determine what customizations display when you run this command, it can help to
    ///             visualize the relationship of the entities involved. </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>AWS Account</code> - The AWS account exists at the top of the hierarchy.
    ///                     It has the potential to use all of the AWS Regions and AWS Services. When you
    ///                     subscribe to QuickSight, you choose one AWS Region to use as your home Region.
    ///                     That's where your free SPICE capacity is located. You can use QuickSight in any
    ///                     supported AWS Region. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>AWS Region</code> - In each AWS Region where you sign in to QuickSight
    ///                     at least once, QuickSight acts as a separate instance of the same service. If
    ///                     you have a user directory, it resides in us-east-1, which is the US East (N.
    ///                     Virginia). Generally speaking, these users have access to QuickSight in any AWS
    ///                     Region, unless they are constrained to a namespace. </p>
    ///                 <p>To run the command in a different AWS Region, you change your Region settings.
    ///                     If you're using the AWS CLI, you can use one of the following options:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html">command line options</a>. </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html">named profiles</a>. </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>Run <code>aws configure</code> to change your default AWS Region. Use
    ///                             Enter to key the same settings for your keys. For more information, see
    ///                             <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">Configuring the AWS CLI</a>.</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Namespace</code> - A QuickSight namespace is a partition that contains
    ///                     users and assets (data sources, datasets, dashboards, and so on). To access
    ///                     assets that are in a specific namespace, users and groups must also be part of
    ///                     the same namespace. People who share a namespace are completely isolated from
    ///                     users and assets in other namespaces, even if they are in the same AWS account
    ///                     and AWS Region.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>Applied customizations</code> -  Within an AWS Region, a set of
    ///                     QuickSight customizations can apply to an AWS account or to a namespace.
    ///                     Settings that you apply to a namespace override settings that you apply to an
    ///                     AWS account. All settings are isolated to a single AWS Region. To apply them in
    ///                     other AWS Regions, run the <code>CreateAccountCustomization</code> command in
    ///                     each AWS Region where you want to apply the same customizations. </p>
    ///             </li>
    ///          </ul>
    func describeAccountCustomization(input: DescribeAccountCustomizationInput, completion: @escaping (SdkResult<DescribeAccountCustomizationOutputResponse, DescribeAccountCustomizationOutputError>) -> Void)
    /// <p>Describes the settings that were used when your QuickSight subscription was first
    ///             created in this AWS account.</p>
    func describeAccountSettings(input: DescribeAccountSettingsInput, completion: @escaping (SdkResult<DescribeAccountSettingsOutputResponse, DescribeAccountSettingsOutputError>) -> Void)
    /// <p>Provides a summary of the metadata for an analysis.</p>
    func describeAnalysis(input: DescribeAnalysisInput, completion: @escaping (SdkResult<DescribeAnalysisOutputResponse, DescribeAnalysisOutputError>) -> Void)
    /// <p>Provides the read and write permissions for an analysis.</p>
    func describeAnalysisPermissions(input: DescribeAnalysisPermissionsInput, completion: @escaping (SdkResult<DescribeAnalysisPermissionsOutputResponse, DescribeAnalysisPermissionsOutputError>) -> Void)
    /// <p>Provides a summary for a dashboard.</p>
    func describeDashboard(input: DescribeDashboardInput, completion: @escaping (SdkResult<DescribeDashboardOutputResponse, DescribeDashboardOutputError>) -> Void)
    /// <p>Describes read and write permissions for a dashboard.</p>
    func describeDashboardPermissions(input: DescribeDashboardPermissionsInput, completion: @escaping (SdkResult<DescribeDashboardPermissionsOutputResponse, DescribeDashboardPermissionsOutputError>) -> Void)
    /// <p>Describes a dataset. </p>
    func describeDataSet(input: DescribeDataSetInput, completion: @escaping (SdkResult<DescribeDataSetOutputResponse, DescribeDataSetOutputError>) -> Void)
    /// <p>Describes the permissions on a dataset.</p>
    /// 		       <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
    func describeDataSetPermissions(input: DescribeDataSetPermissionsInput, completion: @escaping (SdkResult<DescribeDataSetPermissionsOutputResponse, DescribeDataSetPermissionsOutputError>) -> Void)
    /// <p>Describes a data source.</p>
    func describeDataSource(input: DescribeDataSourceInput, completion: @escaping (SdkResult<DescribeDataSourceOutputResponse, DescribeDataSourceOutputError>) -> Void)
    /// <p>Describes the resource permissions for a data source.</p>
    func describeDataSourcePermissions(input: DescribeDataSourcePermissionsInput, completion: @escaping (SdkResult<DescribeDataSourcePermissionsOutputResponse, DescribeDataSourcePermissionsOutputError>) -> Void)
    /// <p>Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). </p>
    func describeGroup(input: DescribeGroupInput, completion: @escaping (SdkResult<DescribeGroupOutputResponse, DescribeGroupOutputError>) -> Void)
    /// <p>Describes an existing IAM policy assignment, as specified by the assignment name.</p>
    func describeIAMPolicyAssignment(input: DescribeIAMPolicyAssignmentInput, completion: @escaping (SdkResult<DescribeIAMPolicyAssignmentOutputResponse, DescribeIAMPolicyAssignmentOutputError>) -> Void)
    /// <p>Describes a SPICE ingestion.</p>
    func describeIngestion(input: DescribeIngestionInput, completion: @escaping (SdkResult<DescribeIngestionOutputResponse, DescribeIngestionOutputError>) -> Void)
    /// <p>Describes the current namespace.</p>
    func describeNamespace(input: DescribeNamespaceInput, completion: @escaping (SdkResult<DescribeNamespaceOutputResponse, DescribeNamespaceOutputError>) -> Void)
    /// <p>Describes a template's metadata.</p>
    func describeTemplate(input: DescribeTemplateInput, completion: @escaping (SdkResult<DescribeTemplateOutputResponse, DescribeTemplateOutputError>) -> Void)
    /// <p>Describes the template alias for a template.</p>
    func describeTemplateAlias(input: DescribeTemplateAliasInput, completion: @escaping (SdkResult<DescribeTemplateAliasOutputResponse, DescribeTemplateAliasOutputError>) -> Void)
    /// <p>Describes read and write permissions on a template.</p>
    func describeTemplatePermissions(input: DescribeTemplatePermissionsInput, completion: @escaping (SdkResult<DescribeTemplatePermissionsOutputResponse, DescribeTemplatePermissionsOutputError>) -> Void)
    /// <p>Describes a theme.</p>
    func describeTheme(input: DescribeThemeInput, completion: @escaping (SdkResult<DescribeThemeOutputResponse, DescribeThemeOutputError>) -> Void)
    /// <p>Describes the alias for a theme.</p>
    func describeThemeAlias(input: DescribeThemeAliasInput, completion: @escaping (SdkResult<DescribeThemeAliasOutputResponse, DescribeThemeAliasOutputError>) -> Void)
    /// <p>Describes the read and write permissions for a theme.</p>
    func describeThemePermissions(input: DescribeThemePermissionsInput, completion: @escaping (SdkResult<DescribeThemePermissionsOutputResponse, DescribeThemePermissionsOutputError>) -> Void)
    /// <p>Returns information about a user, given the user name. </p>
    func describeUser(input: DescribeUserInput, completion: @escaping (SdkResult<DescribeUserOutputResponse, DescribeUserOutputError>) -> Void)
    /// <p>Generates a session URL and authorization code that you can use to embed an Amazon
    ///             QuickSight read-only dashboard in your web server code. Before you use this command,
    ///             make sure that you have configured the dashboards and permissions. </p>
    ///         <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not
    ///             from the user's browser. The following rules apply to the combination of URL and
    ///             authorization code:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>They must be used together.</p>
    ///             </li>
    ///             <li>
    ///                 <p>They can be used one time only.</p>
    ///             </li>
    ///             <li>
    ///                 <p>They are valid for 5 minutes after you run this command.</p>
    ///             </li>
    ///             <li>
    ///                 <p>The resulting user session is valid for 10 hours.</p>
    ///             </li>
    ///          </ul>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User
    ///             Guide</i>.</p>
    func getDashboardEmbedUrl(input: GetDashboardEmbedUrlInput, completion: @escaping (SdkResult<GetDashboardEmbedUrlOutputResponse, GetDashboardEmbedUrlOutputError>) -> Void)
    /// <p>Generates a session URL and authorization code that you can use to embed the Amazon
    ///             QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code> where
    ///             you want to provide an authoring portal that allows users to create data sources,
    ///             datasets, analyses, and dashboards. The users who access an embedded QuickSight console
    ///             need belong to the author or admin security cohort. If you want to restrict permissions
    ///             to some of these features, add a custom permissions profile to the user with the
    ///             <code>
    ///                <a>UpdateUser</a>
    ///             </code> API operation. Use <code>
    ///                <a>RegisterUser</a>
    ///             </code> API operation to add a new user with a custom permission profile attached. For more
    ///             information, see the following sections in the <i>Amazon QuickSight User
    ///             Guide</i>:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-the-quicksight-console.html">Embedding the Amazon QuickSight Console</a>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a>
    ///                </p>
    ///             </li>
    ///          </ul>
    func getSessionEmbedUrl(input: GetSessionEmbedUrlInput, completion: @escaping (SdkResult<GetSessionEmbedUrlOutputResponse, GetSessionEmbedUrlOutputError>) -> Void)
    /// <p>Lists Amazon QuickSight analyses that exist in the specified AWS account.</p>
    func listAnalyses(input: ListAnalysesInput, completion: @escaping (SdkResult<ListAnalysesOutputResponse, ListAnalysesOutputError>) -> Void)
    /// <p>Lists dashboards in an AWS account.</p>
    func listDashboards(input: ListDashboardsInput, completion: @escaping (SdkResult<ListDashboardsOutputResponse, ListDashboardsOutputError>) -> Void)
    /// <p>Lists all the versions of the dashboards in the QuickSight subscription.</p>
    func listDashboardVersions(input: ListDashboardVersionsInput, completion: @escaping (SdkResult<ListDashboardVersionsOutputResponse, ListDashboardVersionsOutputError>) -> Void)
    /// <p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p>
    /// 		       <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
    func listDataSets(input: ListDataSetsInput, completion: @escaping (SdkResult<ListDataSetsOutputResponse, ListDataSetsOutputError>) -> Void)
    /// <p>Lists data sources in current AWS Region that belong to this AWS account.</p>
    func listDataSources(input: ListDataSourcesInput, completion: @escaping (SdkResult<ListDataSourcesOutputResponse, ListDataSourcesOutputError>) -> Void)
    /// <p>Lists member users in a group.</p>
    func listGroupMemberships(input: ListGroupMembershipsInput, completion: @escaping (SdkResult<ListGroupMembershipsOutputResponse, ListGroupMembershipsOutputError>) -> Void)
    /// <p>Lists all user groups in Amazon QuickSight. </p>
    func listGroups(input: ListGroupsInput, completion: @escaping (SdkResult<ListGroupsOutputResponse, ListGroupsOutputError>) -> Void)
    /// <p>Lists IAM policy assignments in the current Amazon QuickSight account.</p>
    func listIAMPolicyAssignments(input: ListIAMPolicyAssignmentsInput, completion: @escaping (SdkResult<ListIAMPolicyAssignmentsOutputResponse, ListIAMPolicyAssignmentsOutputError>) -> Void)
    /// <p>Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM
    /// 			policies assigned to the specified user and group or groups that the user belongs
    /// 			to.</p>
    func listIAMPolicyAssignmentsForUser(input: ListIAMPolicyAssignmentsForUserInput, completion: @escaping (SdkResult<ListIAMPolicyAssignmentsForUserOutputResponse, ListIAMPolicyAssignmentsForUserOutputError>) -> Void)
    /// <p>Lists the history of SPICE ingestions for a dataset.</p>
    func listIngestions(input: ListIngestionsInput, completion: @escaping (SdkResult<ListIngestionsOutputResponse, ListIngestionsOutputError>) -> Void)
    /// <p>Lists the namespaces for the specified AWS account.</p>
    func listNamespaces(input: ListNamespacesInput, completion: @escaping (SdkResult<ListNamespacesOutputResponse, ListNamespacesOutputError>) -> Void)
    /// <p>Lists the tags assigned to a resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Lists all the aliases of a template.</p>
    func listTemplateAliases(input: ListTemplateAliasesInput, completion: @escaping (SdkResult<ListTemplateAliasesOutputResponse, ListTemplateAliasesOutputError>) -> Void)
    /// <p>Lists all the templates in the current Amazon QuickSight account.</p>
    func listTemplates(input: ListTemplatesInput, completion: @escaping (SdkResult<ListTemplatesOutputResponse, ListTemplatesOutputError>) -> Void)
    /// <p>Lists all the versions of the templates in the current Amazon QuickSight account.</p>
    func listTemplateVersions(input: ListTemplateVersionsInput, completion: @escaping (SdkResult<ListTemplateVersionsOutputResponse, ListTemplateVersionsOutputError>) -> Void)
    /// <p>Lists all the aliases of a theme.</p>
    func listThemeAliases(input: ListThemeAliasesInput, completion: @escaping (SdkResult<ListThemeAliasesOutputResponse, ListThemeAliasesOutputError>) -> Void)
    /// <p>Lists all the themes in the current AWS account.</p>
    func listThemes(input: ListThemesInput, completion: @escaping (SdkResult<ListThemesOutputResponse, ListThemesOutputError>) -> Void)
    /// <p>Lists all the versions of the themes in the current AWS account.</p>
    func listThemeVersions(input: ListThemeVersionsInput, completion: @escaping (SdkResult<ListThemeVersionsOutputResponse, ListThemeVersionsOutputError>) -> Void)
    /// <p>Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.</p>
    func listUserGroups(input: ListUserGroupsInput, completion: @escaping (SdkResult<ListUserGroupsOutputResponse, ListUserGroupsOutputError>) -> Void)
    /// <p>Returns a list of all of the Amazon QuickSight users belonging to this account. </p>
    func listUsers(input: ListUsersInput, completion: @escaping (SdkResult<ListUsersOutputResponse, ListUsersOutputError>) -> Void)
    /// <p>Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity
    /// 			and Access Management (IAM) identity or role specified in the request. </p>
    func registerUser(input: RegisterUserInput, completion: @escaping (SdkResult<RegisterUserOutputResponse, RegisterUserOutputError>) -> Void)
    /// <p>Restores an analysis.</p>
    func restoreAnalysis(input: RestoreAnalysisInput, completion: @escaping (SdkResult<RestoreAnalysisOutputResponse, RestoreAnalysisOutputError>) -> Void)
    /// <p>Searches for analyses that belong to the user specified in the filter.</p>
    func searchAnalyses(input: SearchAnalysesInput, completion: @escaping (SdkResult<SearchAnalysesOutputResponse, SearchAnalysesOutputError>) -> Void)
    /// <p>Searches for dashboards that belong to a user. </p>
    func searchDashboards(input: SearchDashboardsInput, completion: @escaping (SdkResult<SearchDashboardsOutputResponse, SearchDashboardsOutputError>) -> Void)
    /// <p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p>
    /// 		       <p>Tags can help you organize and categorize your resources. You can also use them to
    /// 			scope user permissions, by granting a user permission to access or change only resources
    /// 			with certain tag values. You can use the <code>TagResource</code> operation with a
    /// 			resource that already has tags. If you specify a new tag key for the resource, this tag
    /// 			is appended to the list of tags associated with the resource. If you specify a tag key
    /// 			that is already associated with the resource, the new tag value that you specify
    /// 			replaces the previous value for that tag.</p>
    /// 		       <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data
    /// 			set, data source, dashboard, and template. </p>
    /// 		       <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for
    /// 			the following:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>You can't use tags to track AWS costs for QuickSight. This restriction is because QuickSight
    /// 					costs are based on users and SPICE capacity, which aren't taggable
    /// 					resources.</p>
    ///             </li>
    ///             <li>
    ///                <p>QuickSight doesn't currently support the Tag Editor for AWS Resource Groups.</p>
    ///             </li>
    ///          </ul>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes a tag or tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates Amazon QuickSight customizations the current AWS Region. Currently, the only
    ///             customization you can use is a theme.</p>
    ///         <p>You can use customizations for your AWS account or, if you specify a namespace, for a
    ///             QuickSight namespace instead. Customizations that apply to a namespace override
    ///             customizations that apply to an AWS account. To find out which customizations apply, use
    ///             the <code>DescribeAccountCustomization</code> API operation. </p>
    func updateAccountCustomization(input: UpdateAccountCustomizationInput, completion: @escaping (SdkResult<UpdateAccountCustomizationOutputResponse, UpdateAccountCustomizationOutputError>) -> Void)
    /// <p>Updates the Amazon QuickSight settings in your AWS account.</p>
    func updateAccountSettings(input: UpdateAccountSettingsInput, completion: @escaping (SdkResult<UpdateAccountSettingsOutputResponse, UpdateAccountSettingsOutputError>) -> Void)
    /// <p>Updates an analysis in Amazon QuickSight</p>
    func updateAnalysis(input: UpdateAnalysisInput, completion: @escaping (SdkResult<UpdateAnalysisOutputResponse, UpdateAnalysisOutputError>) -> Void)
    /// <p>Updates the read and write permissions for an analysis.</p>
    func updateAnalysisPermissions(input: UpdateAnalysisPermissionsInput, completion: @escaping (SdkResult<UpdateAnalysisPermissionsOutputResponse, UpdateAnalysisPermissionsOutputError>) -> Void)
    /// <p>Updates a dashboard in an AWS account.</p>
    func updateDashboard(input: UpdateDashboardInput, completion: @escaping (SdkResult<UpdateDashboardOutputResponse, UpdateDashboardOutputError>) -> Void)
    /// <p>Updates read and write permissions on a dashboard.</p>
    func updateDashboardPermissions(input: UpdateDashboardPermissionsInput, completion: @escaping (SdkResult<UpdateDashboardPermissionsOutputResponse, UpdateDashboardPermissionsOutputError>) -> Void)
    /// <p>Updates the published version of a dashboard.</p>
    func updateDashboardPublishedVersion(input: UpdateDashboardPublishedVersionInput, completion: @escaping (SdkResult<UpdateDashboardPublishedVersionOutputResponse, UpdateDashboardPublishedVersionOutputError>) -> Void)
    /// <p>Updates a dataset.</p>
    func updateDataSet(input: UpdateDataSetInput, completion: @escaping (SdkResult<UpdateDataSetOutputResponse, UpdateDataSetOutputError>) -> Void)
    /// <p>Updates the permissions on a dataset.</p>
    /// 		       <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
    func updateDataSetPermissions(input: UpdateDataSetPermissionsInput, completion: @escaping (SdkResult<UpdateDataSetPermissionsOutputResponse, UpdateDataSetPermissionsOutputError>) -> Void)
    /// <p>Updates a data source.</p>
    func updateDataSource(input: UpdateDataSourceInput, completion: @escaping (SdkResult<UpdateDataSourceOutputResponse, UpdateDataSourceOutputError>) -> Void)
    /// <p>Updates the permissions to a data source.</p>
    func updateDataSourcePermissions(input: UpdateDataSourcePermissionsInput, completion: @escaping (SdkResult<UpdateDataSourcePermissionsOutputResponse, UpdateDataSourcePermissionsOutputError>) -> Void)
    /// <p>Changes a group description. </p>
    func updateGroup(input: UpdateGroupInput, completion: @escaping (SdkResult<UpdateGroupOutputResponse, UpdateGroupOutputError>) -> Void)
    /// <p>Updates an existing IAM policy assignment. This operation updates only the optional
    /// 			parameter or parameters that are specified in the request.
    /// 		    This overwrites all of the users included in <code>Identities</code>.
    /// 		</p>
    func updateIAMPolicyAssignment(input: UpdateIAMPolicyAssignmentInput, completion: @escaping (SdkResult<UpdateIAMPolicyAssignmentOutputResponse, UpdateIAMPolicyAssignmentOutputError>) -> Void)
    /// <p>Updates a template from an existing Amazon QuickSight analysis or another template.</p>
    func updateTemplate(input: UpdateTemplateInput, completion: @escaping (SdkResult<UpdateTemplateOutputResponse, UpdateTemplateOutputError>) -> Void)
    /// <p>Updates the template alias of a template.</p>
    func updateTemplateAlias(input: UpdateTemplateAliasInput, completion: @escaping (SdkResult<UpdateTemplateAliasOutputResponse, UpdateTemplateAliasOutputError>) -> Void)
    /// <p>Updates the resource permissions for a template.</p>
    func updateTemplatePermissions(input: UpdateTemplatePermissionsInput, completion: @escaping (SdkResult<UpdateTemplatePermissionsOutputResponse, UpdateTemplatePermissionsOutputError>) -> Void)
    /// <p>Updates a theme.</p>
    func updateTheme(input: UpdateThemeInput, completion: @escaping (SdkResult<UpdateThemeOutputResponse, UpdateThemeOutputError>) -> Void)
    /// <p>Updates an alias of a theme.</p>
    func updateThemeAlias(input: UpdateThemeAliasInput, completion: @escaping (SdkResult<UpdateThemeAliasOutputResponse, UpdateThemeAliasOutputError>) -> Void)
    /// <p>Updates the resource permissions for a theme. Permissions apply to the action to grant or
    /// 			revoke permissions on, for example <code>"quicksight:DescribeTheme"</code>.</p>
    /// 		       <p>Theme permissions apply in groupings. Valid groupings include the following for the three
    /// 			levels of permissions, which are user, owner, or no permissions: </p>
    /// 			      <ul>
    ///             <li>
    ///                <p>User</p>
    /// 					          <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DescribeTheme"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DescribeThemeAlias"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:ListThemeAliases"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:ListThemeVersions"</code>
    ///                      </p>
    ///                   </li>
    ///                </ul>
    /// 				        </li>
    ///             <li>
    ///                <p>Owner</p>
    /// 					          <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DescribeTheme"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DescribeThemeAlias"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:ListThemeAliases"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:ListThemeVersions"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DeleteTheme"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:UpdateTheme"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:CreateThemeAlias"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DeleteThemeAlias"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:UpdateThemeAlias"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:UpdateThemePermissions"</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>"quicksight:DescribeThemePermissions"</code>
    ///                      </p>
    ///                   </li>
    ///                </ul>
    /// 				        </li>
    ///             <li>
    ///                <p>To specify no permissions, omit the permissions list.</p>
    ///             </li>
    ///          </ul>
    func updateThemePermissions(input: UpdateThemePermissionsInput, completion: @escaping (SdkResult<UpdateThemePermissionsOutputResponse, UpdateThemePermissionsOutputError>) -> Void)
    /// <p>Updates an Amazon QuickSight user.</p>
    func updateUser(input: UpdateUserInput, completion: @escaping (SdkResult<UpdateUserOutputResponse, UpdateUserOutputError>) -> Void)
}
