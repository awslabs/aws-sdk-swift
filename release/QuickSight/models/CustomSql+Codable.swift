// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomSql: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case columns = "Columns"
        case dataSourceArn = "DataSourceArn"
        case name = "Name"
        case sqlQuery = "SqlQuery"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columns = columns {
            var columnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .columns)
            for inputcolumnlist0 in columns {
                try columnsContainer.encode(inputcolumnlist0)
            }
        }
        if let dataSourceArn = dataSourceArn {
            try encodeContainer.encode(dataSourceArn, forKey: .dataSourceArn)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let sqlQuery = sqlQuery {
            try encodeContainer.encode(sqlQuery, forKey: .sqlQuery)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataSourceArn)
        dataSourceArn = dataSourceArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let sqlQueryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sqlQuery)
        sqlQuery = sqlQueryDecoded
        let columnsContainer = try containerValues.decodeIfPresent([InputColumn].self, forKey: .columns)
        var columnsDecoded0:[InputColumn]? = nil
        if let columnsContainer = columnsContainer {
            columnsDecoded0 = [InputColumn]()
            for structure0 in columnsContainer {
                columnsDecoded0?.append(structure0)
            }
        }
        columns = columnsDecoded0
    }
}
