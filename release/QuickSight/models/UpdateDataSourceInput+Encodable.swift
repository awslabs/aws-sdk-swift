// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateDataSourceInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case credentials = "Credentials"
        case dataSourceParameters = "DataSourceParameters"
        case name = "Name"
        case sslProperties = "SslProperties"
        case vpcConnectionProperties = "VpcConnectionProperties"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let credentials = credentials {
            try encodeContainer.encode(credentials, forKey: .credentials)
        }
        if let dataSourceParameters = dataSourceParameters {
            try encodeContainer.encode(dataSourceParameters, forKey: .dataSourceParameters)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let sslProperties = sslProperties {
            try encodeContainer.encode(sslProperties, forKey: .sslProperties)
        }
        if let vpcConnectionProperties = vpcConnectionProperties {
            try encodeContainer.encode(vpcConnectionProperties, forKey: .vpcConnectionProperties)
        }
    }
}
