// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RowInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case rowsDropped = "RowsDropped"
        case rowsIngested = "RowsIngested"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if rowsDropped != 0 {
            try encodeContainer.encode(rowsDropped, forKey: .rowsDropped)
        }
        if rowsIngested != 0 {
            try encodeContainer.encode(rowsIngested, forKey: .rowsIngested)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rowsIngestedDecoded = try containerValues.decode(Int.self, forKey: .rowsIngested)
        rowsIngested = rowsIngestedDecoded
        let rowsDroppedDecoded = try containerValues.decode(Int.self, forKey: .rowsDropped)
        rowsDropped = rowsDroppedDecoded
    }
}
