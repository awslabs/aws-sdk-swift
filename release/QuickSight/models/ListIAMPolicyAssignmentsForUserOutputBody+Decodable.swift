// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIAMPolicyAssignmentsForUserOutputBody: Equatable {
    public let activeAssignments: [ActiveIAMPolicyAssignment]?
    public let requestId: String?
    public let nextToken: String?
    public let status: Int
}

extension ListIAMPolicyAssignmentsForUserOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activeAssignments = "ActiveAssignments"
        case nextToken = "NextToken"
        case requestId = "RequestId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeAssignmentsContainer = try containerValues.decodeIfPresent([ActiveIAMPolicyAssignment].self, forKey: .activeAssignments)
        var activeAssignmentsDecoded0:[ActiveIAMPolicyAssignment]? = nil
        if let activeAssignmentsContainer = activeAssignmentsContainer {
            activeAssignmentsDecoded0 = [ActiveIAMPolicyAssignment]()
            for structure0 in activeAssignmentsContainer {
                activeAssignmentsDecoded0?.append(structure0)
            }
        }
        activeAssignments = activeAssignmentsDecoded0
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let statusDecoded = try containerValues.decode(Int.self, forKey: .status)
        status = statusDecoded
    }
}
