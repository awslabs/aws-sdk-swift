// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnalysisPermissionsOutputBody: Equatable {
    public let analysisId: String?
    public let analysisArn: String?
    public let permissions: [ResourcePermission]?
    public let status: Int
    public let requestId: String?
}

extension DescribeAnalysisPermissionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analysisArn = "AnalysisArn"
        case analysisId = "AnalysisId"
        case permissions = "Permissions"
        case requestId = "RequestId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analysisIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .analysisId)
        analysisId = analysisIdDecoded
        let analysisArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .analysisArn)
        analysisArn = analysisArnDecoded
        let permissionsContainer = try containerValues.decodeIfPresent([ResourcePermission].self, forKey: .permissions)
        var permissionsDecoded0:[ResourcePermission]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [ResourcePermission]()
            for structure0 in permissionsContainer {
                permissionsDecoded0?.append(structure0)
            }
        }
        permissions = permissionsDecoded0
        let statusDecoded = try containerValues.decode(Int.self, forKey: .status)
        status = statusDecoded
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
    }
}
