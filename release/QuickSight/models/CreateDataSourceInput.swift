// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDataSourceInput: Equatable {
    /// <p>The AWS account ID.</p>
    public let awsAccountId: String?
    /// <p>The credentials QuickSight that uses to connect to your underlying source. Currently, only
    /// 			credentials based on user name and password are supported.</p>
    public let credentials: DataSourceCredentials?
    /// <p>An ID for the data source. This ID is unique per AWS Region for each AWS account. </p>
    public let dataSourceId: String?
    /// <p>The parameters that QuickSight uses to connect to your underlying source.</p>
    public let dataSourceParameters: DataSourceParameters?
    /// <p>A display name for the data source.</p>
    public let name: String?
    /// <p>A list of resource permissions on the data source.</p>
    public let permissions: [ResourcePermission]?
    /// <p>Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.</p>
    public let sslProperties: SslProperties?
    /// <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>
    public let tags: [Tag]?
    /// <p>The type of the data source. Currently, the supported types for this operation are:
    /// 			<code>ATHENA, AURORA, AURORA_POSTGRESQL, AMAZON_ELASTICSEARCH, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3,
    /// 			SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>.
    /// 			Use <code>ListDataSources</code> to return a
    /// 			list of all data sources.</p>
    /// 		       <p>
    ///             <code>AMAZON_ELASTICSEARCH</code> is for Amazon managed Elasticsearch Service.</p>
    public let type: DataSourceType?
    /// <p>Use this parameter only when you want QuickSight to use a VPC connection when connecting to
    /// 			your underlying source.</p>
    public let vpcConnectionProperties: VpcConnectionProperties?

    public init (
        awsAccountId: String? = nil,
        credentials: DataSourceCredentials? = nil,
        dataSourceId: String? = nil,
        dataSourceParameters: DataSourceParameters? = nil,
        name: String? = nil,
        permissions: [ResourcePermission]? = nil,
        sslProperties: SslProperties? = nil,
        tags: [Tag]? = nil,
        type: DataSourceType? = nil,
        vpcConnectionProperties: VpcConnectionProperties? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.credentials = credentials
        self.dataSourceId = dataSourceId
        self.dataSourceParameters = dataSourceParameters
        self.name = name
        self.permissions = permissions
        self.sslProperties = sslProperties
        self.tags = tags
        self.type = type
        self.vpcConnectionProperties = vpcConnectionProperties
    }
}
