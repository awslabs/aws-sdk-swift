// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateTemplateInput: Equatable {
    /// <p>The ID of the AWS account that contains the template that you're updating.</p>
    public let awsAccountId: String?
    /// <p>The name for the template.</p>
    public let name: String?
    /// <p>The entity that you are using as a source when you update the template. In
    /// 			<code>SourceEntity</code>, you specify the type of object you're using as source:
    /// 			<code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an
    /// 			analysis. Both of these require an Amazon Resource Name (ARN). For
    /// 			<code>SourceTemplate</code>, specify the ARN of the source template. For
    /// 			<code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code>
    /// 			ARN can contain any AWS Account and any QuickSight-supported AWS Region. </p>
    /// 		       <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or
    /// 			<code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed
    /// 			in the original. The schema in each dataset must match its placeholder. </p>
    public let sourceEntity: TemplateSourceEntity?
    /// <p>The ID for the template.</p>
    public let templateId: String?
    /// <p>A description of the current template version that is being updated. Every time you call
    /// 				<code>UpdateTemplate</code>, you create a new version of the template. Each version
    /// 			of the template maintains a description of the version in the
    /// 				<code>VersionDescription</code> field.</p>
    public let versionDescription: String?

    public init (
        awsAccountId: String? = nil,
        name: String? = nil,
        sourceEntity: TemplateSourceEntity? = nil,
        templateId: String? = nil,
        versionDescription: String? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.name = name
        self.sourceEntity = sourceEntity
        self.templateId = templateId
        self.versionDescription = versionDescription
    }
}
