// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetDashboardEmbedUrlInput: Equatable {
    /// <p>A list of one or more dashboard IDs that you want to add to a session that includes
    ///             anonymous users. The <code>IdentityType</code> parameter must be set to
    ///                 <code>ANONYMOUS</code> for this to work, because other identity types authenticate
    ///             as QuickSight or IAM users. For example, if you set "<code>--dashboard-id dash_id1
    ///                 --dashboard-id dash_id2 dash_id3 identity-type ANONYMOUS</code>", the session
    ///             can access all three dashboards. </p>
    public let additionalDashboardIds: [String]?
    /// <p>The ID for the AWS account that contains the dashboard that you're embedding.</p>
    public let awsAccountId: String?
    /// <p>The ID for the dashboard, also added to the AWS Identity and Access Management (IAM)
    ///             policy.</p>
    public let dashboardId: String?
    /// <p>The authentication method that the user uses to sign in.</p>
    public let identityType: EmbeddingIdentityType?
    /// <p>The QuickSight namespace that contains the dashboard IDs in this request.
    ///     	   If you're not using a custom namespace, set this to
    ///     	    "<code>default</code>".</p>
    public let namespace: String?
    /// <p>Remove the reset button on the embedded dashboard. The default is FALSE, which enables the
    /// 			reset button.</p>
    public let resetDisabled: Bool
    /// <p>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</p>
    public let sessionLifetimeInMinutes: Int?
    /// <p>Adds persistence of state for the user session in an embedded dashboard. Persistence
    ///             applies to the sheet and the parameter settings. These are control settings that the
    ///             dashboard subscriber (QuickSight reader) chooses while viewing the dashboard. If this is
    ///             set to <code>TRUE</code>, the settings are the same when the subscriber reopens the same
    ///             dashboard URL. The state is stored in QuickSight, not in a browser cookie. If this is
    ///             set to FALSE, the state of the user session is not persisted. The default is
    ///                 <code>FALSE</code>.</p>
    public let statePersistenceEnabled: Bool
    /// <p>Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables
    /// 			the undo/redo button.</p>
    public let undoRedoDisabled: Bool
    /// <p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type.
    /// 			You can use this for any Amazon QuickSight users in your account (readers, authors, or
    /// 			admins) authenticated as one of the following:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>Active Directory (AD) users or group members</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>Invited nonfederated users</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using
    /// 					SAML, OpenID Connect, or IAM federation.</p>
    /// 			         </li>
    ///          </ul>
    ///          <p>Omit this parameter for users in the third group â€“ IAM users and IAM
    ///             role-based sessions.</p>
    public let userArn: String?

    public init (
        additionalDashboardIds: [String]? = nil,
        awsAccountId: String? = nil,
        dashboardId: String? = nil,
        identityType: EmbeddingIdentityType? = nil,
        namespace: String? = nil,
        resetDisabled: Bool = false,
        sessionLifetimeInMinutes: Int? = nil,
        statePersistenceEnabled: Bool = false,
        undoRedoDisabled: Bool = false,
        userArn: String? = nil
    )
    {
        self.additionalDashboardIds = additionalDashboardIds
        self.awsAccountId = awsAccountId
        self.dashboardId = dashboardId
        self.identityType = identityType
        self.namespace = namespace
        self.resetDisabled = resetDisabled
        self.sessionLifetimeInMinutes = sessionLifetimeInMinutes
        self.statePersistenceEnabled = statePersistenceEnabled
        self.undoRedoDisabled = undoRedoDisabled
        self.userArn = userArn
    }
}
