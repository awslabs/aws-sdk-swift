// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListThemeAliasesOutputBody: Equatable {
    public let themeAliasList: [ThemeAlias]?
    public let status: Int
    public let requestId: String?
    public let nextToken: String?
}

extension ListThemeAliasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case requestId = "RequestId"
        case status = "Status"
        case themeAliasList = "ThemeAliasList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let themeAliasListContainer = try containerValues.decodeIfPresent([ThemeAlias].self, forKey: .themeAliasList)
        var themeAliasListDecoded0:[ThemeAlias]? = nil
        if let themeAliasListContainer = themeAliasListContainer {
            themeAliasListDecoded0 = [ThemeAlias]()
            for structure0 in themeAliasListContainer {
                themeAliasListDecoded0?.append(structure0)
            }
        }
        themeAliasList = themeAliasListDecoded0
        let statusDecoded = try containerValues.decode(Int.self, forKey: .status)
        status = statusDecoded
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
