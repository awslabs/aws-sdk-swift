// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteAnalysisInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteAnalysisInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteAnalysisInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteAnalysisOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let recoveryWindowInDays = input.operationInput.recoveryWindowInDays {
            let recoveryWindowInDaysQueryItem = URLQueryItem(name: "recovery-window-in-days".urlPercentEncoding(), value: String(recoveryWindowInDays).urlPercentEncoding())
            input.builder.withQueryItem(recoveryWindowInDaysQueryItem)
        }
        let forceDeleteWithoutRecoveryQueryItem = URLQueryItem(name: "force-delete-without-recovery".urlPercentEncoding(), value: String(input.operationInput.forceDeleteWithoutRecovery).urlPercentEncoding())
        input.builder.withQueryItem(forceDeleteWithoutRecoveryQueryItem)
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteAnalysisInput>
    public typealias MOutput = OperationOutput<DeleteAnalysisOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DeleteAnalysisOutputError>
}
