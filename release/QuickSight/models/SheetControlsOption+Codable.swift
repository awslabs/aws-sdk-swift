// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SheetControlsOption: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case visibilityState = "VisibilityState"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let visibilityState = visibilityState {
            try encodeContainer.encode(visibilityState.rawValue, forKey: .visibilityState)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let visibilityStateDecoded = try containerValues.decodeIfPresent(DashboardUIState.self, forKey: .visibilityState)
        visibilityState = visibilityStateDecoded
    }
}
