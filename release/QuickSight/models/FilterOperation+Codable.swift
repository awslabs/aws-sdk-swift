// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FilterOperation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case conditionExpression = "ConditionExpression"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let conditionExpression = conditionExpression {
            try encodeContainer.encode(conditionExpression, forKey: .conditionExpression)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conditionExpressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .conditionExpression)
        conditionExpression = conditionExpressionDecoded
    }
}
