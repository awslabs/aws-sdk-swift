// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSetConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case columnGroupSchemaList = "ColumnGroupSchemaList"
        case dataSetSchema = "DataSetSchema"
        case placeholder = "Placeholder"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columnGroupSchemaList = columnGroupSchemaList {
            var columnGroupSchemaListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .columnGroupSchemaList)
            for columngroupschemalist0 in columnGroupSchemaList {
                try columnGroupSchemaListContainer.encode(columngroupschemalist0)
            }
        }
        if let dataSetSchema = dataSetSchema {
            try encodeContainer.encode(dataSetSchema, forKey: .dataSetSchema)
        }
        if let placeholder = placeholder {
            try encodeContainer.encode(placeholder, forKey: .placeholder)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let placeholderDecoded = try containerValues.decodeIfPresent(String.self, forKey: .placeholder)
        placeholder = placeholderDecoded
        let dataSetSchemaDecoded = try containerValues.decodeIfPresent(DataSetSchema.self, forKey: .dataSetSchema)
        dataSetSchema = dataSetSchemaDecoded
        let columnGroupSchemaListContainer = try containerValues.decodeIfPresent([ColumnGroupSchema].self, forKey: .columnGroupSchemaList)
        var columnGroupSchemaListDecoded0:[ColumnGroupSchema]? = nil
        if let columnGroupSchemaListContainer = columnGroupSchemaListContainer {
            columnGroupSchemaListDecoded0 = [ColumnGroupSchema]()
            for structure0 in columnGroupSchemaListContainer {
                columnGroupSchemaListDecoded0?.append(structure0)
            }
        }
        columnGroupSchemaList = columnGroupSchemaListDecoded0
    }
}
