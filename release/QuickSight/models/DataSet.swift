// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Dataset.</p>
public struct DataSet: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    public let arn: String?
    /// <p>Groupings of columns that work together in certain Amazon QuickSight features.
    ///             Currently, only geospatial hierarchy is supported.</p>
    public let columnGroups: [ColumnGroup]?
    /// <p>A set of one or more definitions of a <code>
    ///                <a>ColumnLevelPermissionRule</a>
    ///             </code>.</p>
    public let columnLevelPermissionRules: [ColumnLevelPermissionRule]?
    /// <p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't
    ///             imported into SPICE.</p>
    public let consumedSpiceCapacityInBytes: Int
    /// <p>The time that this dataset was created.</p>
    public let createdTime: Date?
    /// <p>The ID of the dataset.</p>
    public let dataSetId: String?
    /// <p>The folder that contains fields and nested subfolders for your dataset.</p>
    public let fieldFolders: [String:FieldFolder]?
    /// <p>A value that indicates whether you want to import the data into SPICE.</p>
    public let importMode: DataSetImportMode?
    /// <p>The last time that this dataset was updated.</p>
    public let lastUpdatedTime: Date?
    /// <p>Configures the combination and transformation of the data from the physical
    ///             tables.</p>
    public let logicalTableMap: [String:LogicalTable]?
    /// <p>A display name for the dataset.</p>
    public let name: String?
    /// <p>The list of columns after all transforms. These columns are available in templates,
    ///             analyses, and dashboards.</p>
    public let outputColumns: [OutputColumn]?
    /// <p>Declares the physical tables that are available in the underlying data sources.</p>
    public let physicalTableMap: [String:PhysicalTable]?
    /// <p>The row-level security configuration for the dataset.</p>
    public let rowLevelPermissionDataSet: RowLevelPermissionDataSet?

    public init (
        arn: String? = nil,
        columnGroups: [ColumnGroup]? = nil,
        columnLevelPermissionRules: [ColumnLevelPermissionRule]? = nil,
        consumedSpiceCapacityInBytes: Int = 0,
        createdTime: Date? = nil,
        dataSetId: String? = nil,
        fieldFolders: [String:FieldFolder]? = nil,
        importMode: DataSetImportMode? = nil,
        lastUpdatedTime: Date? = nil,
        logicalTableMap: [String:LogicalTable]? = nil,
        name: String? = nil,
        outputColumns: [OutputColumn]? = nil,
        physicalTableMap: [String:PhysicalTable]? = nil,
        rowLevelPermissionDataSet: RowLevelPermissionDataSet? = nil
    )
    {
        self.arn = arn
        self.columnGroups = columnGroups
        self.columnLevelPermissionRules = columnLevelPermissionRules
        self.consumedSpiceCapacityInBytes = consumedSpiceCapacityInBytes
        self.createdTime = createdTime
        self.dataSetId = dataSetId
        self.fieldFolders = fieldFolders
        self.importMode = importMode
        self.lastUpdatedTime = lastUpdatedTime
        self.logicalTableMap = logicalTableMap
        self.name = name
        self.outputColumns = outputColumns
        self.physicalTableMap = physicalTableMap
        self.rowLevelPermissionDataSet = rowLevelPermissionDataSet
    }
}
