// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDataSourceInputBody: Equatable {
    public let name: String?
    public let dataSourceParameters: DataSourceParameters?
    public let credentials: DataSourceCredentials?
    public let vpcConnectionProperties: VpcConnectionProperties?
    public let sslProperties: SslProperties?
}

extension UpdateDataSourceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case credentials = "Credentials"
        case dataSourceParameters = "DataSourceParameters"
        case name = "Name"
        case sslProperties = "SslProperties"
        case vpcConnectionProperties = "VpcConnectionProperties"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let dataSourceParametersDecoded = try containerValues.decodeIfPresent(DataSourceParameters.self, forKey: .dataSourceParameters)
        dataSourceParameters = dataSourceParametersDecoded
        let credentialsDecoded = try containerValues.decodeIfPresent(DataSourceCredentials.self, forKey: .credentials)
        credentials = credentialsDecoded
        let vpcConnectionPropertiesDecoded = try containerValues.decodeIfPresent(VpcConnectionProperties.self, forKey: .vpcConnectionProperties)
        vpcConnectionProperties = vpcConnectionPropertiesDecoded
        let sslPropertiesDecoded = try containerValues.decodeIfPresent(SslProperties.self, forKey: .sslProperties)
        sslProperties = sslPropertiesDecoded
    }
}
