// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetSessionEmbedUrlInputQueryItemMiddleware: Middleware {
    public let id: String = "GetSessionEmbedUrlInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetSessionEmbedUrlInput>,
                  next: H) -> Swift.Result<OperationOutput<GetSessionEmbedUrlOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let userArn = input.operationInput.userArn {
            let userArnQueryItem = URLQueryItem(name: "user-arn".urlPercentEncoding(), value: String(userArn).urlPercentEncoding())
            input.builder.withQueryItem(userArnQueryItem)
        }
        if let entryPoint = input.operationInput.entryPoint {
            let entryPointQueryItem = URLQueryItem(name: "entry-point".urlPercentEncoding(), value: String(entryPoint).urlPercentEncoding())
            input.builder.withQueryItem(entryPointQueryItem)
        }
        if let sessionLifetimeInMinutes = input.operationInput.sessionLifetimeInMinutes {
            let sessionLifetimeInMinutesQueryItem = URLQueryItem(name: "session-lifetime".urlPercentEncoding(), value: String(sessionLifetimeInMinutes).urlPercentEncoding())
            input.builder.withQueryItem(sessionLifetimeInMinutesQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetSessionEmbedUrlInput>
    public typealias MOutput = OperationOutput<GetSessionEmbedUrlOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetSessionEmbedUrlOutputError>
}
