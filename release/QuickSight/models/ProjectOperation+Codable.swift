// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProjectOperation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case projectedColumns = "ProjectedColumns"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let projectedColumns = projectedColumns {
            var projectedColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .projectedColumns)
            for projectedcolumnlist0 in projectedColumns {
                try projectedColumnsContainer.encode(projectedcolumnlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectedColumnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .projectedColumns)
        var projectedColumnsDecoded0:[String]? = nil
        if let projectedColumnsContainer = projectedColumnsContainer {
            projectedColumnsDecoded0 = [String]()
            for string0 in projectedColumnsContainer {
                projectedColumnsDecoded0?.append(string0)
            }
        }
        projectedColumns = projectedColumnsDecoded0
    }
}
