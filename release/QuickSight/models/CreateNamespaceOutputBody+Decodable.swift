// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateNamespaceOutputBody: Equatable {
    public let arn: String?
    public let name: String?
    public let capacityRegion: String?
    public let creationStatus: NamespaceStatus?
    public let identityStore: IdentityStore?
    public let requestId: String?
    public let status: Int
}

extension CreateNamespaceOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn = "Arn"
        case capacityRegion = "CapacityRegion"
        case creationStatus = "CreationStatus"
        case identityStore = "IdentityStore"
        case name = "Name"
        case requestId = "RequestId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let capacityRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .capacityRegion)
        capacityRegion = capacityRegionDecoded
        let creationStatusDecoded = try containerValues.decodeIfPresent(NamespaceStatus.self, forKey: .creationStatus)
        creationStatus = creationStatusDecoded
        let identityStoreDecoded = try containerValues.decodeIfPresent(IdentityStore.self, forKey: .identityStore)
        identityStore = identityStoreDecoded
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
        let statusDecoded = try containerValues.decode(Int.self, forKey: .status)
        status = statusDecoded
    }
}
