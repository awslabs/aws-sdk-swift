// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The theme colors that apply to UI and to charts, excluding data colors. The colors
///             description is a hexadecimal color code that consists of six alphanumerical characters,
///             prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User
///                 Guide.</i>
///         </p>
public struct UIColorPalette: Equatable {
    /// <p>This color is that applies to selected states and buttons.</p>
    public let accent: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             accent color.</p>
    public let accentForeground: String?
    /// <p>The color that applies to error messages.</p>
    public let danger: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             error color.</p>
    public let dangerForeground: String?
    /// <p>The color that applies to the names of fields that are identified as
    ///             dimensions.</p>
    public let dimension: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             dimension color.</p>
    public let dimensionForeground: String?
    /// <p>The color that applies to the names of fields that are identified as measures.</p>
    public let measure: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             measure color.</p>
    public let measureForeground: String?
    /// <p>The background color that applies to visuals and other high emphasis UI.</p>
    public let primaryBackground: String?
    /// <p>The color of text and other foreground elements that appear over the primary
    ///             background regions, such as grid lines, borders, table banding, icons, and so on.</p>
    public let primaryForeground: String?
    /// <p>The background color that applies to the sheet background and sheet controls.</p>
    public let secondaryBackground: String?
    /// <p>The foreground color that applies to any sheet title, sheet control text, or UI that
    ///             appears over the secondary background.</p>
    public let secondaryForeground: String?
    /// <p>The color that applies to success messages, for example the check mark for a
    ///             successful download.</p>
    public let success: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             success color.</p>
    public let successForeground: String?
    /// <p>This color that applies to warning and informational messages.</p>
    public let warning: String?
    /// <p>The foreground color that applies to any text or other elements that appear over the
    ///             warning color.</p>
    public let warningForeground: String?

    public init (
        accent: String? = nil,
        accentForeground: String? = nil,
        danger: String? = nil,
        dangerForeground: String? = nil,
        dimension: String? = nil,
        dimensionForeground: String? = nil,
        measure: String? = nil,
        measureForeground: String? = nil,
        primaryBackground: String? = nil,
        primaryForeground: String? = nil,
        secondaryBackground: String? = nil,
        secondaryForeground: String? = nil,
        success: String? = nil,
        successForeground: String? = nil,
        warning: String? = nil,
        warningForeground: String? = nil
    )
    {
        self.accent = accent
        self.accentForeground = accentForeground
        self.danger = danger
        self.dangerForeground = dangerForeground
        self.dimension = dimension
        self.dimensionForeground = dimensionForeground
        self.measure = measure
        self.measureForeground = measureForeground
        self.primaryBackground = primaryBackground
        self.primaryForeground = primaryForeground
        self.secondaryBackground = secondaryBackground
        self.secondaryForeground = secondaryForeground
        self.success = success
        self.successForeground = successForeground
        self.warning = warning
        self.warningForeground = warningForeground
    }
}
