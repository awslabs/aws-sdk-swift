// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAnalysisInput: Equatable {
    /// <p>The ID for the analysis that you're creating. This ID displays in the URL of the
    ///             analysis.</p>
    public let analysisId: String?
    /// <p>The ID of the AWS account where you are creating an analysis.</p>
    public let awsAccountId: String?
    /// <p>A descriptive name for the analysis that you're creating. This name displays for the
    ///             analysis in the QuickSight console. </p>
    public let name: String?
    /// <p>The parameter names and override values that you want to use. An analysis can have
    ///             any parameter type, and some parameters might accept multiple values. </p>
    public let parameters: Parameters?
    /// <p>A structure that describes the principals and the resource-level permissions on an
    ///             analysis. You can use the <code>Permissions</code> structure to grant permissions by
    ///             providing a list of AWS Identity and Access Management (IAM) action information for each
    ///             principal listed by Amazon Resource Name (ARN). </p>
    ///
    ///         <p>To specify no permissions, omit <code>Permissions</code>.</p>
    public let permissions: [ResourcePermission]?
    /// <p>A source entity to use for the analysis that you're creating. This metadata structure
    ///             contains details that describe a source template and one or more datasets.</p>
    public let sourceEntity: AnalysisSourceEntity?
    /// <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the
    ///             analysis.</p>
    public let tags: [Tag]?
    /// <p>The ARN for the theme to apply to the analysis that you're creating. To see the theme
    ///             in the QuickSight console, make sure that you have access to it.</p>
    public let themeArn: String?

    public init (
        analysisId: String? = nil,
        awsAccountId: String? = nil,
        name: String? = nil,
        parameters: Parameters? = nil,
        permissions: [ResourcePermission]? = nil,
        sourceEntity: AnalysisSourceEntity? = nil,
        tags: [Tag]? = nil,
        themeArn: String? = nil
    )
    {
        self.analysisId = analysisId
        self.awsAccountId = awsAccountId
        self.name = name
        self.parameters = parameters
        self.permissions = permissions
        self.sourceEntity = sourceEntity
        self.tags = tags
        self.themeArn = themeArn
    }
}
