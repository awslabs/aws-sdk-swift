// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UserRole {
    case admin
    case author
    case reader
    case restrictedAuthor
    case restrictedReader
    case sdkUnknown(String)
}

extension UserRole : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UserRole] {
        return [
            .admin,
            .author,
            .reader,
            .restrictedAuthor,
            .restrictedReader,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .admin: return "ADMIN"
        case .author: return "AUTHOR"
        case .reader: return "READER"
        case .restrictedAuthor: return "RESTRICTED_AUTHOR"
        case .restrictedReader: return "RESTRICTED_READER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UserRole(rawValue: rawValue) ?? UserRole.sdkUnknown(rawValue)
    }
}
