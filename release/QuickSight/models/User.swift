// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A registered user of Amazon QuickSight. </p>
public struct User: Equatable {
    /// <p>The active status of user. When you create an Amazon QuickSight user thatâ€™s not an IAM
    ///             user or an Active Directory user, that user is inactive until they sign in and provide a
    ///             password.</p>
    public let active: Bool
    /// <p>The Amazon Resource Name (ARN) for the user.</p>
    public let arn: String?
    /// <p>The custom permissions profile associated with this user.</p>
    public let customPermissionsName: String?
    /// <p>The user's email address.</p>
    public let email: String?
    /// <p>The type of supported external login provider that provides identity to let the user
    ///             federate into Amazon QuickSight with an associated IAM role. The type can be one of the following.</p>
    ///         <ul>
    ///             <li>
    ///                     <p>
    ///                   <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.</p>
    ///                 </li>
    ///             <li>
    ///                     <p>
    ///                   <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider.</p>
    ///                 </li>
    ///          </ul>
    public let externalLoginFederationProviderType: String?
    /// <p>The URL of the external login provider.</p>
    public let externalLoginFederationProviderUrl: String?
    /// <p>The identity ID for the user in the external login provider.</p>
    public let externalLoginId: String?
    /// <p>The type of identity authentication used by the user.</p>
    public let identityType: IdentityType?
    /// <p>The principal ID of the user.</p>
    public let principalId: String?
    /// <p>The Amazon QuickSight role for the user. The user role can be one of the
    ///             following:.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>READER</code>: A user who has read-only access to dashboards.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>AUTHOR</code>: A user who can create data sources, datasets, analyses,
    ///                     and dashboards.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ADMIN</code>: A user who is an author, who can also manage Amazon
    ///                     QuickSight settings.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>RESTRICTED_READER</code>: This role isn't currently available for
    ///                     use.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for
    ///                     use.</p>
    ///             </li>
    ///          </ul>
    public let role: UserRole?
    /// <p>The user's user name.</p>
    public let userName: String?

    public init (
        active: Bool = false,
        arn: String? = nil,
        customPermissionsName: String? = nil,
        email: String? = nil,
        externalLoginFederationProviderType: String? = nil,
        externalLoginFederationProviderUrl: String? = nil,
        externalLoginId: String? = nil,
        identityType: IdentityType? = nil,
        principalId: String? = nil,
        role: UserRole? = nil,
        userName: String? = nil
    )
    {
        self.active = active
        self.arn = arn
        self.customPermissionsName = customPermissionsName
        self.email = email
        self.externalLoginFederationProviderType = externalLoginFederationProviderType
        self.externalLoginFederationProviderUrl = externalLoginFederationProviderUrl
        self.externalLoginId = externalLoginId
        self.identityType = identityType
        self.principalId = principalId
        self.role = role
        self.userName = userName
    }
}
