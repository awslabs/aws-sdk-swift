// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RegisterUserInput: Equatable {
    /// <p>The ID for the AWS account that the user is in. Currently, you use the ID for the AWS
    /// 			account that contains your Amazon QuickSight account.</p>
    public let awsAccountId: String?
    /// <p>The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate
    ///          into QuickSight with an associated AWS Identity and Access Management (IAM) role. This parameter should
    ///          only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.</p>
    public let customFederationProviderUrl: String?
    /// <p>(Enterprise edition only) The name of the custom permissions profile that you want to
    ///             assign to this user. Customized permissions allows you to control a user's access by
    ///             restricting access the following operations:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Create and update data sources</p>
    ///             </li>
    ///             <li>
    ///                 <p>Create and update datasets</p>
    ///             </li>
    ///             <li>
    ///                 <p>Create and update email reports</p>
    ///             </li>
    ///             <li>
    ///                 <p>Subscribe to email reports</p>
    ///             </li>
    ///          </ul>
    ///         <p>To add custom permissions to an existing user, use <code>
    ///                <a>UpdateUser</a>
    ///             </code> instead.</p>
    ///         <p>A set of custom permissions includes any combination of these restrictions. Currently,
    ///             you need to create the profile names for custom permission sets by using the QuickSight
    ///             console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of
    ///             permissions to a QuickSight user. </p>
    ///         <p>QuickSight custom permissions are applied through IAM policies. Therefore, they
    ///             override the permissions typically granted by assigning QuickSight users to one of the
    ///             default security cohorts in QuickSight (admin, author, reader).</p>
    ///         <p>This feature is available only to QuickSight Enterprise edition subscriptions that use
    ///             SAML 2.0-Based Federation for Single Sign-On (SSO).</p>
    public let customPermissionsName: String?
    /// <p>The email address of the user that you want to register.</p>
    public let email: String?
    /// <p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated AWS Identity and Access Management (IAM) role. The type of supported external login provider can be one of the following.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, donâ€™t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p>
    ///             </li>
    ///          </ul>
    public let externalLoginFederationProviderType: String?
    /// <p>The identity ID for a user in the external login provider.</p>
    public let externalLoginId: String?
    /// <p>The ARN of the IAM user or role that you are registering with Amazon QuickSight. </p>
    public let iamArn: String?
    /// <p>Amazon QuickSight supports several ways of managing the identity of users. This
    /// 			parameter accepts two values:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>IAM</code>: A user whose identity maps to an existing IAM user or role.
    /// 				</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by
    /// 					Amazon QuickSight. </p>
    /// 			         </li>
    ///          </ul>
    public let identityType: IdentityType?
    /// <p>The namespace. Currently, you should set this to <code>default</code>.</p>
    public let namespace: String?
    /// <p>You need to use this parameter only when you register one or more users using an assumed
    /// 			IAM role. You don't need to provide the session name for other scenarios, for example when
    /// 			you are registering an IAM user or an Amazon QuickSight user. You can register multiple
    /// 			users using the same IAM role if each user has a different session name. For more
    /// 			information on assuming IAM roles, see <a href="https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html">
    ///                <code>assume-role</code>
    ///             </a> in the <i>AWS CLI Reference.</i>
    ///          </p>
    public let sessionName: String?
    /// <p>The Amazon QuickSight user name that you want to create for the user you are
    /// 			registering.</p>
    public let userName: String?
    /// <p>The Amazon QuickSight role for the user. The user role can be one of the
    /// 			following:</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>READER</code>: A user who has read-only access to dashboards.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and
    /// 					dashboards.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight
    /// 					settings.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>RESTRICTED_READER</code>: This role isn't currently available for
    /// 					use.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for
    /// 					use.</p>
    /// 			         </li>
    ///          </ul>
    public let userRole: UserRole?

    public init (
        awsAccountId: String? = nil,
        customFederationProviderUrl: String? = nil,
        customPermissionsName: String? = nil,
        email: String? = nil,
        externalLoginFederationProviderType: String? = nil,
        externalLoginId: String? = nil,
        iamArn: String? = nil,
        identityType: IdentityType? = nil,
        namespace: String? = nil,
        sessionName: String? = nil,
        userName: String? = nil,
        userRole: UserRole? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.customFederationProviderUrl = customFederationProviderUrl
        self.customPermissionsName = customPermissionsName
        self.email = email
        self.externalLoginFederationProviderType = externalLoginFederationProviderType
        self.externalLoginId = externalLoginId
        self.iamArn = iamArn
        self.identityType = identityType
        self.namespace = namespace
        self.sessionName = sessionName
        self.userName = userName
        self.userRole = userRole
    }
}
