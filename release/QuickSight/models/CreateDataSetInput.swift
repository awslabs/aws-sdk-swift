// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDataSetInput: Equatable {
    /// <p>The AWS account ID.</p>
    public let awsAccountId: String?
    /// <p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>
    public let columnGroups: [ColumnGroup]?
    /// <p>A set of one or more definitions of a <code>
    ///                <a>ColumnLevelPermissionRule</a>
    ///             </code>.</p>
    public let columnLevelPermissionRules: [ColumnLevelPermissionRule]?
    /// <p>An ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.</p>
    public let dataSetId: String?
    /// <p>The folder that contains fields and nested subfolders for your dataset.</p>
    public let fieldFolders: [String:FieldFolder]?
    /// <p>Indicates whether you want to import the data into SPICE.</p>
    public let importMode: DataSetImportMode?
    /// <p>Configures the combination and transformation of the data from the physical tables.</p>
    public let logicalTableMap: [String:LogicalTable]?
    /// <p>The display name for the dataset.</p>
    public let name: String?
    /// <p>A list of resource permissions on the dataset.</p>
    public let permissions: [ResourcePermission]?
    /// <p>Declares the physical tables that are available in the underlying data sources.</p>
    public let physicalTableMap: [String:PhysicalTable]?
    /// <p>The row-level security configuration for the data that you want to create.</p>
    public let rowLevelPermissionDataSet: RowLevelPermissionDataSet?
    /// <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
    public let tags: [Tag]?

    public init (
        awsAccountId: String? = nil,
        columnGroups: [ColumnGroup]? = nil,
        columnLevelPermissionRules: [ColumnLevelPermissionRule]? = nil,
        dataSetId: String? = nil,
        fieldFolders: [String:FieldFolder]? = nil,
        importMode: DataSetImportMode? = nil,
        logicalTableMap: [String:LogicalTable]? = nil,
        name: String? = nil,
        permissions: [ResourcePermission]? = nil,
        physicalTableMap: [String:PhysicalTable]? = nil,
        rowLevelPermissionDataSet: RowLevelPermissionDataSet? = nil,
        tags: [Tag]? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.columnGroups = columnGroups
        self.columnLevelPermissionRules = columnLevelPermissionRules
        self.dataSetId = dataSetId
        self.fieldFolders = fieldFolders
        self.importMode = importMode
        self.logicalTableMap = logicalTableMap
        self.name = name
        self.permissions = permissions
        self.physicalTableMap = physicalTableMap
        self.rowLevelPermissionDataSet = rowLevelPermissionDataSet
        self.tags = tags
    }
}
