// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ColumnSchema: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataType = "DataType"
        case geographicRole = "GeographicRole"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataType = dataType {
            try encodeContainer.encode(dataType, forKey: .dataType)
        }
        if let geographicRole = geographicRole {
            try encodeContainer.encode(geographicRole, forKey: .geographicRole)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let dataTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataType)
        dataType = dataTypeDecoded
        let geographicRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .geographicRole)
        geographicRole = geographicRoleDecoded
    }
}
