// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DataSourceCredentials: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case copySourceArn = "CopySourceArn"
        case credentialPair = "CredentialPair"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let copySourceArn = copySourceArn {
            try encodeContainer.encode(copySourceArn, forKey: .copySourceArn)
        }
        if let credentialPair = credentialPair {
            try encodeContainer.encode(credentialPair, forKey: .credentialPair)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let credentialPairDecoded = try containerValues.decodeIfPresent(CredentialPair.self, forKey: .credentialPair)
        credentialPair = credentialPairDecoded
        let copySourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .copySourceArn)
        copySourceArn = copySourceArnDecoded
    }
}
