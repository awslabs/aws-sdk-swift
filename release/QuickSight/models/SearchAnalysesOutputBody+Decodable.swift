// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchAnalysesOutputBody: Equatable {
    public let analysisSummaryList: [AnalysisSummary]?
    public let nextToken: String?
    public let status: Int
    public let requestId: String?
}

extension SearchAnalysesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analysisSummaryList = "AnalysisSummaryList"
        case nextToken = "NextToken"
        case requestId = "RequestId"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let analysisSummaryListContainer = try containerValues.decodeIfPresent([AnalysisSummary].self, forKey: .analysisSummaryList)
        var analysisSummaryListDecoded0:[AnalysisSummary]? = nil
        if let analysisSummaryListContainer = analysisSummaryListContainer {
            analysisSummaryListDecoded0 = [AnalysisSummary]()
            for structure0 in analysisSummaryListContainer {
                analysisSummaryListDecoded0?.append(structure0)
            }
        }
        analysisSummaryList = analysisSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let statusDecoded = try containerValues.decode(Int.self, forKey: .status)
        status = statusDecoded
        let requestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .requestId)
        requestId = requestIdDecoded
    }
}
