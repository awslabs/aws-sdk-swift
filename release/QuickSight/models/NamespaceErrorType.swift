// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum NamespaceErrorType {
    case internalServiceError
    case permissionDenied
    case sdkUnknown(String)
}

extension NamespaceErrorType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NamespaceErrorType] {
        return [
            .internalServiceError,
            .permissionDenied,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .internalServiceError: return "INTERNAL_SERVICE_ERROR"
        case .permissionDenied: return "PERMISSION_DENIED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NamespaceErrorType(rawValue: rawValue) ?? NamespaceErrorType.sdkUnknown(rawValue)
    }
}
