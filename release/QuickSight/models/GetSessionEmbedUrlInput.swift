// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetSessionEmbedUrlInput: Equatable {
    /// <p>The ID for the AWS account associated with your QuickSight subscription.</p>
    public let awsAccountId: String?
    /// <p>The URL you use to access the embedded session. The entry point URL is constrained to
    ///           the following paths:</p>
    ///          <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>/start</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>/start/analyses</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>/start/dashboards</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>/start/favorites</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>/dashboards/<i>DashboardId</i>
    ///                   </code> - where <code>DashboardId</code> is the actual ID key from the QuickSight console URL of the dashboard</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>/analyses/<i>AnalysisId</i>
    ///                   </code> - where <code>AnalysisId</code> is the actual ID key from the QuickSight console URL of the analysis</p>
    ///             </li>
    ///          </ul>
    public let entryPoint: String?
    /// <p>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</p>
    public let sessionLifetimeInMinutes: Int?
    /// <p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type.
    /// 			You can use this for any type of Amazon QuickSight users in your account (readers, authors, or
    /// 			admins). They need to be authenticated as one of the following:</p>
    /// 		       <ol>
    ///             <li>
    /// 				           <p>Active Directory (AD) users or group members</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>Invited nonfederated users</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>AWS Identity and Access Management (IAM) users and IAM role-based sessions authenticated
    ///                     through Federated Single Sign-On using SAML, OpenID Connect, or IAM
    ///                     federation</p>
    /// 			         </li>
    ///          </ol>
    ///          <p>Omit this parameter for users in the third group, IAM users and IAM role-based
    ///             sessions.</p>
    public let userArn: String?

    public init (
        awsAccountId: String? = nil,
        entryPoint: String? = nil,
        sessionLifetimeInMinutes: Int? = nil,
        userArn: String? = nil
    )
    {
        self.awsAccountId = awsAccountId
        self.entryPoint = entryPoint
        self.sessionLifetimeInMinutes = sessionLifetimeInMinutes
        self.userArn = userArn
    }
}
