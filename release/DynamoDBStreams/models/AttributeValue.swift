// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the data for an attribute.</p>
///          <p>Each attribute value is described as a name-value pair.  The name is the data type, and the value is the data itself.</p>
///          <p>For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes">Data Types</a> in the
///                              <i>Amazon DynamoDB Developer Guide</i>.</p>
public enum AttributeValue: Equatable {
    /// <p>An attribute of type  String. For example:</p>
    ///          <p>
    ///             <code>"S": "Hello"</code>
    ///          </p>
    case s(String?)
    /// <p>An attribute of type Number. For example:</p>
    ///          <p>
    ///             <code>"N": "123.45"</code>
    ///          </p>
    ///          <p>Numbers are sent across the network to DynamoDB as strings, to maximize compatibility across languages and libraries. However, DynamoDB treats them as number type attributes for mathematical operations.</p>
    case n(String?)
    /// <p>An attribute of type Binary.  For example:</p>
    ///          <p>
    ///             <code>"B": "dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk"</code>
    ///          </p>
    case b(Data?)
    /// <p>An attribute of type String Set.  For example:</p>
    ///          <p>
    ///             <code>"SS": ["Giraffe", "Hippo" ,"Zebra"]</code>
    ///          </p>
    case sS([String]?)
    /// <p>An attribute of type Number Set.  For example:</p>
    ///          <p>
    ///             <code>"NS": ["42.2", "-19", "7.5", "3.14"]</code>
    ///          </p>
    ///          <p>Numbers are sent across the network to DynamoDB as strings, to maximize compatibility across languages and libraries. However, DynamoDB treats them as number type attributes for mathematical operations.</p>
    case nS([String]?)
    /// <p>An attribute of type Binary Set.  For example:</p>
    ///          <p>
    ///             <code>"BS": ["U3Vubnk=", "UmFpbnk=", "U25vd3k="]</code>
    ///          </p>
    case bS([Data]?)
    /// <p>An attribute of type Map.  For example:</p>
    ///          <p>
    ///             <code>"M": {"Name": {"S": "Joe"}, "Age": {"N": "35"}}</code>
    ///          </p>
    case m([String:AttributeValue]?)
    /// <p>An attribute of type List.  For example:</p>
    ///          <p>
    ///             <code>"L": [ {"S": "Cookies"} , {"S": "Coffee"}, {"N", "3.14159"}]</code>
    ///          </p>
    case l([AttributeValue]?)
    /// <p>An attribute of type Null.  For example:</p>
    ///          <p>
    ///             <code>"NULL": true</code>
    ///          </p>
    case nULL(Bool?)
    /// <p>An attribute of type Boolean.  For example:</p>
    ///          <p>
    ///             <code>"BOOL": true</code>
    ///          </p>
    case bOOL(Bool?)
    case sdkUnknown(String?)
}
