// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A description of a unique event within a stream.</p>
public struct Record: Equatable {
    /// <p>The region in which the <code>GetRecords</code> request was received.</p>
    public let awsRegion: String?
    /// <p>The main body of the stream record, containing all of the DynamoDB-specific fields.</p>
    public let dynamodb: StreamRecord?
    /// <p>A globally unique identifier for the event that was recorded in this stream record.</p>
    public let eventID: String?
    /// <p>The type of data modification that was performed on the DynamoDB table:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>INSERT</code> - a new item was added to the table.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>MODIFY</code> - one or more of an existing item's attributes were modified.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>REMOVE</code> - the item was deleted from the table</p>
    ///             </li>
    ///          </ul>
    public let eventName: OperationType?
    /// <p>The AWS service from which the stream record originated.  For DynamoDB Streams, this is <code>aws:dynamodb</code>.</p>
    public let eventSource: String?
    /// <p>The version number of the stream record format.  This number is updated whenever the structure of <code>Record</code> is modified.</p>
    ///          <p>Client applications must not assume that <code>eventVersion</code> will remain at a particular
    ///       value, as this number is subject to change at any time. In general, <code>eventVersion</code> will
    ///       only increase as the low-level DynamoDB Streams API evolves.</p>
    public let eventVersion: String?
    /// <p>Items that are deleted by the Time to Live process after expiration have the following fields: </p>
    ///          <ul>
    ///             <li>
    ///                <p>Records[].userIdentity.type</p>
    ///                <p>"Service"</p>
    ///             </li>
    ///             <li>
    ///                <p>Records[].userIdentity.principalId</p>
    ///                <p>"dynamodb.amazonaws.com"</p>
    ///             </li>
    ///          </ul>
    public let userIdentity: Identity?

    public init (
        awsRegion: String? = nil,
        dynamodb: StreamRecord? = nil,
        eventID: String? = nil,
        eventName: OperationType? = nil,
        eventSource: String? = nil,
        eventVersion: String? = nil,
        userIdentity: Identity? = nil
    )
    {
        self.awsRegion = awsRegion
        self.dynamodb = dynamodb
        self.eventID = eventID
        self.eventName = eventName
        self.eventSource = eventSource
        self.eventVersion = eventVersion
        self.userIdentity = userIdentity
    }
}
