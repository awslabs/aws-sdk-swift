// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetShardIteratorInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sequenceNumber = "SequenceNumber"
        case shardId = "ShardId"
        case shardIteratorType = "ShardIteratorType"
        case streamArn = "StreamArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sequenceNumber = sequenceNumber {
            try encodeContainer.encode(sequenceNumber, forKey: .sequenceNumber)
        }
        if let shardId = shardId {
            try encodeContainer.encode(shardId, forKey: .shardId)
        }
        if let shardIteratorType = shardIteratorType {
            try encodeContainer.encode(shardIteratorType.rawValue, forKey: .shardIteratorType)
        }
        if let streamArn = streamArn {
            try encodeContainer.encode(streamArn, forKey: .streamArn)
        }
    }
}
