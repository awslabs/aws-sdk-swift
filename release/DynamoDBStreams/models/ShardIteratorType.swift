// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ShardIteratorType {
    case afterSequenceNumber
    case atSequenceNumber
    case latest
    case trimHorizon
    case sdkUnknown(String)
}

extension ShardIteratorType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ShardIteratorType] {
        return [
            .afterSequenceNumber,
            .atSequenceNumber,
            .latest,
            .trimHorizon,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .afterSequenceNumber: return "AFTER_SEQUENCE_NUMBER"
        case .atSequenceNumber: return "AT_SEQUENCE_NUMBER"
        case .latest: return "LATEST"
        case .trimHorizon: return "TRIM_HORIZON"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ShardIteratorType(rawValue: rawValue) ?? ShardIteratorType.sdkUnknown(rawValue)
    }
}
