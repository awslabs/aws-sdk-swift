// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsInputBody: Equatable {
    public let tableName: String?
    public let limit: Int?
    public let exclusiveStartStreamArn: String?
}

extension ListStreamsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveStartStreamArn = "ExclusiveStartStreamArn"
        case limit = "Limit"
        case tableName = "TableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartStreamArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartStreamArn)
        exclusiveStartStreamArn = exclusiveStartStreamArnDecoded
    }
}
