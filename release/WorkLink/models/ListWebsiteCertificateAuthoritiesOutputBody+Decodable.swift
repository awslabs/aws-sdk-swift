// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWebsiteCertificateAuthoritiesOutputBody: Equatable {
    public let websiteCertificateAuthorities: [WebsiteCaSummary]?
    public let nextToken: String?
}

extension ListWebsiteCertificateAuthoritiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case websiteCertificateAuthorities = "WebsiteCertificateAuthorities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let websiteCertificateAuthoritiesContainer = try containerValues.decodeIfPresent([WebsiteCaSummary].self, forKey: .websiteCertificateAuthorities)
        var websiteCertificateAuthoritiesDecoded0:[WebsiteCaSummary]? = nil
        if let websiteCertificateAuthoritiesContainer = websiteCertificateAuthoritiesContainer {
            websiteCertificateAuthoritiesDecoded0 = [WebsiteCaSummary]()
            for structure0 in websiteCertificateAuthoritiesContainer {
                websiteCertificateAuthoritiesDecoded0?.append(structure0)
            }
        }
        websiteCertificateAuthorities = websiteCertificateAuthoritiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
