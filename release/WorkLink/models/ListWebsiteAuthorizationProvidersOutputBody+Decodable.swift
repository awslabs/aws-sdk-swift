// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWebsiteAuthorizationProvidersOutputBody: Equatable {
    public let websiteAuthorizationProviders: [WebsiteAuthorizationProviderSummary]?
    public let nextToken: String?
}

extension ListWebsiteAuthorizationProvidersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case websiteAuthorizationProviders = "WebsiteAuthorizationProviders"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let websiteAuthorizationProvidersContainer = try containerValues.decodeIfPresent([WebsiteAuthorizationProviderSummary].self, forKey: .websiteAuthorizationProviders)
        var websiteAuthorizationProvidersDecoded0:[WebsiteAuthorizationProviderSummary]? = nil
        if let websiteAuthorizationProvidersContainer = websiteAuthorizationProvidersContainer {
            websiteAuthorizationProvidersDecoded0 = [WebsiteAuthorizationProviderSummary]()
            for structure0 in websiteAuthorizationProvidersContainer {
                websiteAuthorizationProvidersDecoded0?.append(structure0)
            }
        }
        websiteAuthorizationProviders = websiteAuthorizationProvidersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
