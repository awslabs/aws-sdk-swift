// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDomainOutputBody: Equatable {
    public let domainName: String?
    public let displayName: String?
    public let createdTime: Date?
    public let domainStatus: DomainStatus?
    public let acmCertificateArn: String?
}

extension DescribeDomainOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acmCertificateArn = "AcmCertificateArn"
        case createdTime = "CreatedTime"
        case displayName = "DisplayName"
        case domainName = "DomainName"
        case domainStatus = "DomainStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let createdTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdTime)
        createdTime = createdTimeDecoded
        let domainStatusDecoded = try containerValues.decodeIfPresent(DomainStatus.self, forKey: .domainStatus)
        domainStatus = domainStatusDecoded
        let acmCertificateArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .acmCertificateArn)
        acmCertificateArn = acmCertificateArnDecoded
    }
}
