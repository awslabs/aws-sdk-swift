// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSessionOutputBody: Equatable {
    public let sessionId: String?
    public let messages: [Message]?
    public let interpretations: [Interpretation]?
    public let sessionState: SessionState?
}

extension GetSessionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case interpretations
        case messages
        case sessionId
        case sessionState
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sessionId)
        sessionId = sessionIdDecoded
        let messagesContainer = try containerValues.decodeIfPresent([Message].self, forKey: .messages)
        var messagesDecoded0:[Message]? = nil
        if let messagesContainer = messagesContainer {
            messagesDecoded0 = [Message]()
            for structure0 in messagesContainer {
                messagesDecoded0?.append(structure0)
            }
        }
        messages = messagesDecoded0
        let interpretationsContainer = try containerValues.decodeIfPresent([Interpretation].self, forKey: .interpretations)
        var interpretationsDecoded0:[Interpretation]? = nil
        if let interpretationsContainer = interpretationsContainer {
            interpretationsDecoded0 = [Interpretation]()
            for structure0 in interpretationsContainer {
                interpretationsDecoded0?.append(structure0)
            }
        }
        interpretations = interpretationsDecoded0
        let sessionStateDecoded = try containerValues.decodeIfPresent(SessionState.self, forKey: .sessionState)
        sessionState = sessionStateDecoded
    }
}
