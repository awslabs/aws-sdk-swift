// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PlaybackInterruptionReason {
    case dtmfStartDetected
    case textDetected
    case voiceStartDetected
    case sdkUnknown(String)
}

extension PlaybackInterruptionReason : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PlaybackInterruptionReason] {
        return [
            .dtmfStartDetected,
            .textDetected,
            .voiceStartDetected,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dtmfStartDetected: return "DTMF_START_DETECTED"
        case .textDetected: return "TEXT_DETECTED"
        case .voiceStartDetected: return "VOICE_START_DETECTED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PlaybackInterruptionReason(rawValue: rawValue) ?? PlaybackInterruptionReason.sdkUnknown(rawValue)
    }
}
