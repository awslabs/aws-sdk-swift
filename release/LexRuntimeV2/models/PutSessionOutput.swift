// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutSessionOutput: Equatable {
    /// <p>If the requested content type was audio, the audio version of the
    ///          message to convey to the user.</p>
    public let audioStream: Data?
    /// <p>The type of response. Same as the type specified in the
    ///             <code>responseContentType</code> field in the request.</p>
    public let contentType: String?
    /// <p>A list of messages that were last sent to the user. The messages are
    ///          ordered based on how you return the messages from you Lambda function
    ///          or the order that the messages are defined in the bot.</p>
    public let messages: String?
    /// <p>Request-specific information passed between the client application
    ///          and Amazon Lex. These are the same as the <code>requestAttribute</code>
    ///          parameter in the call to the <code>PutSession</code> operation.</p>
    public let requestAttributes: String?
    /// <p>The identifier of the session that received the data.</p>
    public let sessionId: String?
    /// <p>Represents the current state of the dialog between the user and the
    ///          bot.</p>
    ///          <p>Use this to determine the progress of the conversation and what the
    ///          next action may be.</p>
    public let sessionState: String?

    public init (
        audioStream: Data? = nil,
        contentType: String? = nil,
        messages: String? = nil,
        requestAttributes: String? = nil,
        sessionId: String? = nil,
        sessionState: String? = nil
    )
    {
        self.audioStream = audioStream
        self.contentType = contentType
        self.messages = messages
        self.requestAttributes = requestAttributes
        self.sessionId = sessionId
        self.sessionState = sessionState
    }
}
