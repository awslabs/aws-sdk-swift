// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Interpretation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case intent
        case nluConfidence
        case sentimentResponse
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intent = intent {
            try encodeContainer.encode(intent, forKey: .intent)
        }
        if let nluConfidence = nluConfidence {
            try encodeContainer.encode(nluConfidence, forKey: .nluConfidence)
        }
        if let sentimentResponse = sentimentResponse {
            try encodeContainer.encode(sentimentResponse, forKey: .sentimentResponse)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nluConfidenceDecoded = try containerValues.decodeIfPresent(ConfidenceScore.self, forKey: .nluConfidence)
        nluConfidence = nluConfidenceDecoded
        let sentimentResponseDecoded = try containerValues.decodeIfPresent(SentimentResponse.self, forKey: .sentimentResponse)
        sentimentResponse = sentimentResponseDecoded
        let intentDecoded = try containerValues.decodeIfPresent(Intent.self, forKey: .intent)
        intent = intentDecoded
    }
}
