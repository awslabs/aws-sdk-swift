// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the contexts that a user is using in a
///          session. You can configure Amazon Lex to set a context when an intent is
///          fulfilled, or you can set a context using the , , or  operations.</p>
///          <p>Use a context to indicate to Amazon Lex intents that should be used as
///          follow-up intents. For example, if the active context is
///             <code>order-fulfilled</code>, only intents that have
///             <code>order-fulfilled</code> configured as a trigger are considered
///          for follow up.</p>
public struct ActiveContext: Equatable {
    /// <p>A lis tof contexts active for the request. A context can be
    ///          activated when a previous intent is fulfilled, or by including the
    ///          context in the request.</p>
    ///          <p>If you don't specify a list of contexts, Amazon Lex will use the
    ///          current list of contexts for the session. If you specify an empty list,
    ///          all contexts for the session are cleared. </p>
    public let contextAttributes: [String:String]?
    /// <p>The name of the context.</p>
    public let name: String?
    /// <p>Indicates the number of turns or seconds that the context is active.
    ///          Once the time to live expires, the context is no longer returned in a
    ///          response.</p>
    public let timeToLive: ActiveContextTimeToLive?

    public init (
        contextAttributes: [String:String]? = nil,
        name: String? = nil,
        timeToLive: ActiveContextTimeToLive? = nil
    )
    {
        self.contextAttributes = contextAttributes
        self.name = name
        self.timeToLive = timeToLive
    }
}
