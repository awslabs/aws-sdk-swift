// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutSessionInput: Equatable {
    /// <p>The alias identifier of the bot that receives the session
    ///          data.</p>
    public let botAliasId: String?
    /// <p>The identifier of the bot that receives the session data.</p>
    public let botId: String?
    /// <p>The locale where the session is in use.</p>
    public let localeId: String?
    /// <p>A list of messages to send to the user. Messages are sent in the
    ///          order that they are defined in the list.</p>
    public let messages: [Message]?
    /// <p>Request-specific information passed between Amazon Lex and the client
    ///          application.</p>
    ///          <p>The namespace <code>x-amz-lex:</code> is reserved for special
    ///          attributes. Don't create any request attributes with the prefix
    ///             <code>x-amz-lex:</code>.</p>
    public let requestAttributes: [String:String]?
    /// <p>The message that Amazon Lex returns in the response can be either text or
    ///          speech depending on the value of this parameter. </p>
    ///          <ul>
    ///             <li>
    ///                <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex
    ///                returns text in the response.</p>
    ///             </li>
    ///          </ul>
    public let responseContentType: String?
    /// <p>The identifier of the session that receives the session data.</p>
    public let sessionId: String?
    /// <p>Sets the state of the session with the user. You can use this to set
    ///          the current intent, attributes, context, and dialog action. Use the
    ///          dialog action to determine the next step that Amazon Lex should use in the
    ///          conversation with the user.</p>
    public let sessionState: SessionState?

    public init (
        botAliasId: String? = nil,
        botId: String? = nil,
        localeId: String? = nil,
        messages: [Message]? = nil,
        requestAttributes: [String:String]? = nil,
        responseContentType: String? = nil,
        sessionId: String? = nil,
        sessionState: SessionState? = nil
    )
    {
        self.botAliasId = botAliasId
        self.botId = botId
        self.localeId = localeId
        self.messages = messages
        self.requestAttributes = requestAttributes
        self.responseContentType = responseContentType
        self.sessionId = sessionId
        self.sessionState = sessionState
    }
}
