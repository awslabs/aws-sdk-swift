// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLexiconsOutputBody: Equatable {
    public let lexicons: [LexiconDescription]?
    public let nextToken: String?
}

extension ListLexiconsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lexicons = "Lexicons"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lexiconsContainer = try containerValues.decodeIfPresent([LexiconDescription].self, forKey: .lexicons)
        var lexiconsDecoded0:[LexiconDescription]? = nil
        if let lexiconsContainer = lexiconsContainer {
            lexiconsDecoded0 = [LexiconDescription]()
            for structure0 in lexiconsContainer {
                lexiconsDecoded0?.append(structure0)
            }
        }
        lexicons = lexiconsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
