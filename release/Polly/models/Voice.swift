// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Description of the voice.</p>
public struct Voice: Equatable {
    /// <p>Additional codes for languages available for the specified voice in addition to its
    ///       default language. </p>
    ///          <p>For example, the default language for Aditi is Indian English (en-IN) because it was first
    ///       used for that language. Since Aditi is bilingual and fluent in both Indian English and Hindi,
    ///       this parameter would show the code <code>hi-IN</code>.</p>
    public let additionalLanguageCodes: [LanguageCode]?
    /// <p>Gender of the voice.</p>
    public let gender: Gender?
    /// <p>Amazon Polly assigned voice ID. This is the ID that you specify when calling the
    ///         <code>SynthesizeSpeech</code> operation.</p>
    public let id: VoiceId?
    /// <p>Language code of the voice.</p>
    public let languageCode: LanguageCode?
    /// <p>Human readable name of the language in English.</p>
    public let languageName: String?
    /// <p>Name of the voice (for example, Salli, Kendra, etc.). This provides a human readable
    ///       voice name that you might display in your application.</p>
    public let name: String?
    /// <p>Specifies which engines (<code>standard</code> or <code>neural</code>) that are supported
    ///       by a given voice.</p>
    public let supportedEngines: [Engine]?

    public init (
        additionalLanguageCodes: [LanguageCode]? = nil,
        gender: Gender? = nil,
        id: VoiceId? = nil,
        languageCode: LanguageCode? = nil,
        languageName: String? = nil,
        name: String? = nil,
        supportedEngines: [Engine]? = nil
    )
    {
        self.additionalLanguageCodes = additionalLanguageCodes
        self.gender = gender
        self.id = id
        self.languageCode = languageCode
        self.languageName = languageName
        self.name = name
        self.supportedEngines = supportedEngines
    }
}
