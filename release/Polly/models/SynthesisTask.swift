// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>SynthesisTask object that provides information about a speech synthesis task.</p>
public struct SynthesisTask: Equatable {
    /// <p>Timestamp for the time the synthesis task was started.</p>
    public let creationTime: Date?
    /// <p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to
    ///       use when processing input text for speech synthesis. Using a voice that is not supported for
    ///       the engine selected will result in an error.</p>
    public let engine: Engine?
    /// <p>Optional language code for a synthesis task. This is only necessary if using a bilingual
    ///       voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p>
    ///          <p>If a bilingual voice is used and no language code is specified, Amazon Polly will use the
    ///       default language of the bilingual voice. The default language for any voice is the one
    ///       returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example,
    ///       if no language code is specified, Aditi will use Indian English rather than Hindi.</p>
    public let languageCode: LanguageCode?
    /// <p>List of one or more pronunciation lexicon names you want the service to apply during
    ///       synthesis. Lexicons are applied only if the language of the lexicon is the same as the
    ///       language of the voice. </p>
    public let lexiconNames: [String]?
    /// <p>The format in which the returned output will be encoded. For audio stream, this will be
    ///       mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p>
    public let outputFormat: OutputFormat?
    /// <p>Pathway for the output speech file.</p>
    public let outputUri: String?
    /// <p>Number of billable characters synthesized.</p>
    public let requestCharacters: Int
    /// <p>The audio frequency specified in Hz.</p>
    ///          <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The
    ///       default value for standard voices is "22050". The default value for neural voices is
    ///       "24000".</p>
    ///          <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>
    public let sampleRate: String?
    /// <p>ARN for the SNS topic optionally used for providing status notification for a speech
    ///       synthesis task.</p>
    public let snsTopicArn: String?
    /// <p>The type of speech marks returned for the input text.</p>
    public let speechMarkTypes: [SpeechMarkType]?
    /// <p>The Amazon Polly generated identifier for a speech synthesis task.</p>
    public let taskId: String?
    /// <p>Current status of the individual speech synthesis task.</p>
    public let taskStatus: TaskStatus?
    /// <p>Reason for the current status of a specific speech synthesis task, including errors if the
    ///       task has failed.</p>
    public let taskStatusReason: String?
    /// <p>Specifies whether the input text is plain text or SSML. The default value is plain text.
    ///     </p>
    public let textType: TextType?
    /// <p>Voice ID to use for the synthesis. </p>
    public let voiceId: VoiceId?

    public init (
        creationTime: Date? = nil,
        engine: Engine? = nil,
        languageCode: LanguageCode? = nil,
        lexiconNames: [String]? = nil,
        outputFormat: OutputFormat? = nil,
        outputUri: String? = nil,
        requestCharacters: Int = 0,
        sampleRate: String? = nil,
        snsTopicArn: String? = nil,
        speechMarkTypes: [SpeechMarkType]? = nil,
        taskId: String? = nil,
        taskStatus: TaskStatus? = nil,
        taskStatusReason: String? = nil,
        textType: TextType? = nil,
        voiceId: VoiceId? = nil
    )
    {
        self.creationTime = creationTime
        self.engine = engine
        self.languageCode = languageCode
        self.lexiconNames = lexiconNames
        self.outputFormat = outputFormat
        self.outputUri = outputUri
        self.requestCharacters = requestCharacters
        self.sampleRate = sampleRate
        self.snsTopicArn = snsTopicArn
        self.speechMarkTypes = speechMarkTypes
        self.taskId = taskId
        self.taskStatus = taskStatus
        self.taskStatusReason = taskStatusReason
        self.textType = textType
        self.voiceId = voiceId
    }
}
