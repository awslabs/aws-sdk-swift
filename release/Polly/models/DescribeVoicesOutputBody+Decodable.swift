// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeVoicesOutputBody: Equatable {
    public let voices: [Voice]?
    public let nextToken: String?
}

extension DescribeVoicesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case voices = "Voices"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let voicesContainer = try containerValues.decodeIfPresent([Voice].self, forKey: .voices)
        var voicesDecoded0:[Voice]? = nil
        if let voicesContainer = voicesContainer {
            voicesDecoded0 = [Voice]()
            for structure0 in voicesContainer {
                voicesDecoded0?.append(structure0)
            }
        }
        voices = voicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
