// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAssociateAssessmentReportEvidenceOutputBody: Equatable {
    public let evidenceIds: [String]?
    public let errors: [AssessmentReportEvidenceError]?
}

extension BatchAssociateAssessmentReportEvidenceOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case errors
        case evidenceIds
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evidenceIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .evidenceIds)
        var evidenceIdsDecoded0:[String]? = nil
        if let evidenceIdsContainer = evidenceIdsContainer {
            evidenceIdsDecoded0 = [String]()
            for string0 in evidenceIdsContainer {
                evidenceIdsDecoded0?.append(string0)
            }
        }
        evidenceIds = evidenceIdsDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([AssessmentReportEvidenceError].self, forKey: .errors)
        var errorsDecoded0:[AssessmentReportEvidenceError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [AssessmentReportEvidenceError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
