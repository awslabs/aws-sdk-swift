// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssessmentReportsOutputBody: Equatable {
    public let assessmentReports: [AssessmentReportMetadata]?
    public let nextToken: String?
}

extension ListAssessmentReportsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assessmentReports
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assessmentReportsContainer = try containerValues.decodeIfPresent([AssessmentReportMetadata].self, forKey: .assessmentReports)
        var assessmentReportsDecoded0:[AssessmentReportMetadata]? = nil
        if let assessmentReportsContainer = assessmentReportsContainer {
            assessmentReportsDecoded0 = [AssessmentReportMetadata]()
            for structure0 in assessmentReportsContainer {
                assessmentReportsDecoded0?.append(structure0)
            }
        }
        assessmentReports = assessmentReportsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
