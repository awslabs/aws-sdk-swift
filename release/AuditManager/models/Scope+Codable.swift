// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Scope: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case awsAccounts
        case awsServices
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsAccounts = awsAccounts {
            var awsAccountsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .awsAccounts)
            for awsaccounts0 in awsAccounts {
                try awsAccountsContainer.encode(awsaccounts0)
            }
        }
        if let awsServices = awsServices {
            var awsServicesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .awsServices)
            for awsservices0 in awsServices {
                try awsServicesContainer.encode(awsservices0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let awsAccountsContainer = try containerValues.decodeIfPresent([AWSAccount].self, forKey: .awsAccounts)
        var awsAccountsDecoded0:[AWSAccount]? = nil
        if let awsAccountsContainer = awsAccountsContainer {
            awsAccountsDecoded0 = [AWSAccount]()
            for structure0 in awsAccountsContainer {
                awsAccountsDecoded0?.append(structure0)
            }
        }
        awsAccounts = awsAccountsDecoded0
        let awsServicesContainer = try containerValues.decodeIfPresent([AWSService].self, forKey: .awsServices)
        var awsServicesDecoded0:[AWSService]? = nil
        if let awsServicesContainer = awsServicesContainer {
            awsServicesDecoded0 = [AWSService]()
            for structure0 in awsServicesContainer {
                awsServicesDecoded0?.append(structure0)
            }
        }
        awsServices = awsServicesDecoded0
    }
}
