// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ControlComment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case authorName
        case commentBody
        case postedDate
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authorName = authorName {
            try encodeContainer.encode(authorName, forKey: .authorName)
        }
        if let commentBody = commentBody {
            try encodeContainer.encode(commentBody, forKey: .commentBody)
        }
        if let postedDate = postedDate {
            try encodeContainer.encode(postedDate.timeIntervalSince1970, forKey: .postedDate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .authorName)
        authorName = authorNameDecoded
        let commentBodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commentBody)
        commentBody = commentBodyDecoded
        let postedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .postedDate)
        postedDate = postedDateDecoded
    }
}
