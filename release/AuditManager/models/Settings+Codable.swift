// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Settings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultAssessmentReportsDestination
        case defaultProcessOwners
        case isAwsOrgEnabled
        case kmsKey
        case snsTopic
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultAssessmentReportsDestination = defaultAssessmentReportsDestination {
            try encodeContainer.encode(defaultAssessmentReportsDestination, forKey: .defaultAssessmentReportsDestination)
        }
        if let defaultProcessOwners = defaultProcessOwners {
            var defaultProcessOwnersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .defaultProcessOwners)
            for roles0 in defaultProcessOwners {
                try defaultProcessOwnersContainer.encode(roles0)
            }
        }
        if let isAwsOrgEnabled = isAwsOrgEnabled {
            try encodeContainer.encode(isAwsOrgEnabled, forKey: .isAwsOrgEnabled)
        }
        if let kmsKey = kmsKey {
            try encodeContainer.encode(kmsKey, forKey: .kmsKey)
        }
        if let snsTopic = snsTopic {
            try encodeContainer.encode(snsTopic, forKey: .snsTopic)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let isAwsOrgEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .isAwsOrgEnabled)
        isAwsOrgEnabled = isAwsOrgEnabledDecoded
        let snsTopicDecoded = try containerValues.decodeIfPresent(String.self, forKey: .snsTopic)
        snsTopic = snsTopicDecoded
        let defaultAssessmentReportsDestinationDecoded = try containerValues.decodeIfPresent(AssessmentReportsDestination.self, forKey: .defaultAssessmentReportsDestination)
        defaultAssessmentReportsDestination = defaultAssessmentReportsDestinationDecoded
        let defaultProcessOwnersContainer = try containerValues.decodeIfPresent([Role].self, forKey: .defaultProcessOwners)
        var defaultProcessOwnersDecoded0:[Role]? = nil
        if let defaultProcessOwnersContainer = defaultProcessOwnersContainer {
            defaultProcessOwnersDecoded0 = [Role]()
            for structure0 in defaultProcessOwnersContainer {
                defaultProcessOwnersDecoded0?.append(structure0)
            }
        }
        defaultProcessOwners = defaultProcessOwnersDecoded0
        let kmsKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKey)
        kmsKey = kmsKeyDecoded
    }
}
