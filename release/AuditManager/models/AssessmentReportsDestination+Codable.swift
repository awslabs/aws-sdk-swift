// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssessmentReportsDestination: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destination
        case destinationType
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let destinationType = destinationType {
            try encodeContainer.encode(destinationType.rawValue, forKey: .destinationType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationTypeDecoded = try containerValues.decodeIfPresent(AssessmentReportDestinationType.self, forKey: .destinationType)
        destinationType = destinationTypeDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destination)
        destination = destinationDecoded
    }
}
