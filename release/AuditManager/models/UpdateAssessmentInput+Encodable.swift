// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateAssessmentInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case assessmentDescription
        case assessmentName
        case assessmentReportsDestination
        case roles
        case scope
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let assessmentDescription = assessmentDescription {
            try encodeContainer.encode(assessmentDescription, forKey: .assessmentDescription)
        }
        if let assessmentName = assessmentName {
            try encodeContainer.encode(assessmentName, forKey: .assessmentName)
        }
        if let assessmentReportsDestination = assessmentReportsDestination {
            try encodeContainer.encode(assessmentReportsDestination, forKey: .assessmentReportsDestination)
        }
        if let roles = roles {
            var rolesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .roles)
            for roles0 in roles {
                try rolesContainer.encode(roles0)
            }
        }
        if let scope = scope {
            try encodeContainer.encode(scope, forKey: .scope)
        }
    }
}
