// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>
///    A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity triggered by a user, or a system configuration snapshot.
/// </p>
public struct Evidence: Equatable {
    /// <p>
    ///          Specifies whether the evidence is included in the assessment report.
    ///       </p>
    public let assessmentReportSelection: String?
    /// <p>
    ///  The names and values used by the evidence event, including an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>).
    /// </p>
    public let attributes: [String:String]?
    /// <p>
    ///    The identifier for the specified AWS account.
    /// </p>
    public let awsAccountId: String?
    /// <p>
    ///    The AWS account from which the evidence is collected, and its AWS organization path.
    /// </p>
    public let awsOrganization: String?
    /// <p> The evaluation status for evidence that falls under the compliance check category. For
    ///          evidence collected from AWS Security Hub, a <i>Pass</i> or
    ///             <i>Fail</i> result is shown. For evidence collected from AWS Config, a
    ///             <i>Compliant</i> or <i>Noncompliant</i> result is shown. </p>
    public let complianceCheck: String?
    /// <p>
    ///          The data source from which the specified evidence was collected.
    ///       </p>
    public let dataSource: String?
    /// <p>
    ///          The name of the specified evidence event.
    ///       </p>
    public let eventName: String?
    /// <p>
    /// The AWS service from which the evidence is collected.
    /// </p>
    public let eventSource: String?
    /// <p>
    ///    The identifier for the specified AWS account.
    /// </p>
    public let evidenceAwsAccountId: String?
    /// <p>
    ///          The type of automated evidence.
    ///       </p>
    public let evidenceByType: String?
    /// <p>
    ///    The identifier for the folder in which the evidence is stored.
    /// </p>
    public let evidenceFolderId: String?
    /// <p>
    ///          The unique identifier for the IAM user or role associated with the evidence.
    ///       </p>
    public let iamId: String?
    /// <p> The identifier for the evidence.
    /// </p>
    public let id: String?
    /// <p>
    ///    The list of resources assessed to generate the evidence.
    /// </p>
    public let resourcesIncluded: [Resource]?
    /// <p>
    ///          The timestamp that represents when the evidence was collected.
    ///       </p>
    public let time: Date?

    public init (
        assessmentReportSelection: String? = nil,
        attributes: [String:String]? = nil,
        awsAccountId: String? = nil,
        awsOrganization: String? = nil,
        complianceCheck: String? = nil,
        dataSource: String? = nil,
        eventName: String? = nil,
        eventSource: String? = nil,
        evidenceAwsAccountId: String? = nil,
        evidenceByType: String? = nil,
        evidenceFolderId: String? = nil,
        iamId: String? = nil,
        id: String? = nil,
        resourcesIncluded: [Resource]? = nil,
        time: Date? = nil
    )
    {
        self.assessmentReportSelection = assessmentReportSelection
        self.attributes = attributes
        self.awsAccountId = awsAccountId
        self.awsOrganization = awsOrganization
        self.complianceCheck = complianceCheck
        self.dataSource = dataSource
        self.eventName = eventName
        self.eventSource = eventSource
        self.evidenceAwsAccountId = evidenceAwsAccountId
        self.evidenceByType = evidenceByType
        self.evidenceFolderId = evidenceFolderId
        self.iamId = iamId
        self.id = id
        self.resourcesIncluded = resourcesIncluded
        self.time = time
    }
}
