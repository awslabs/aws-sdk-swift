// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAssessmentFrameworkInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let complianceType: String?
    public let controlSets: [UpdateAssessmentFrameworkControlSet]?
}

extension UpdateAssessmentFrameworkInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case complianceType
        case controlSets
        case description
        case name
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let complianceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .complianceType)
        complianceType = complianceTypeDecoded
        let controlSetsContainer = try containerValues.decodeIfPresent([UpdateAssessmentFrameworkControlSet].self, forKey: .controlSets)
        var controlSetsDecoded0:[UpdateAssessmentFrameworkControlSet]? = nil
        if let controlSetsContainer = controlSetsContainer {
            controlSetsDecoded0 = [UpdateAssessmentFrameworkControlSet]()
            for structure0 in controlSetsContainer {
                controlSetsDecoded0?.append(structure0)
            }
        }
        controlSets = controlSetsDecoded0
    }
}
