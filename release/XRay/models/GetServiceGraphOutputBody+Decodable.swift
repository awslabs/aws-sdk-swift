// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServiceGraphOutputBody: Equatable {
    public let startTime: Date?
    public let endTime: Date?
    public let services: [Service]?
    public let containsOldGroupVersions: Bool
    public let nextToken: String?
}

extension GetServiceGraphOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case containsOldGroupVersions = "ContainsOldGroupVersions"
        case endTime = "EndTime"
        case nextToken = "NextToken"
        case services = "Services"
        case startTime = "StartTime"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let servicesContainer = try containerValues.decodeIfPresent([Service].self, forKey: .services)
        var servicesDecoded0:[Service]? = nil
        if let servicesContainer = servicesContainer {
            servicesDecoded0 = [Service]()
            for structure0 in servicesContainer {
                servicesDecoded0?.append(structure0)
            }
        }
        services = servicesDecoded0
        let containsOldGroupVersionsDecoded = try containerValues.decode(Bool.self, forKey: .containsOldGroupVersions)
        containsOldGroupVersions = containsOldGroupVersionsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
