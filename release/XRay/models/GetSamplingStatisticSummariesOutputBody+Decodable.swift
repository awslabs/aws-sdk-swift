// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSamplingStatisticSummariesOutputBody: Equatable {
    public let samplingStatisticSummaries: [SamplingStatisticSummary]?
    public let nextToken: String?
}

extension GetSamplingStatisticSummariesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case samplingStatisticSummaries = "SamplingStatisticSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let samplingStatisticSummariesContainer = try containerValues.decodeIfPresent([SamplingStatisticSummary].self, forKey: .samplingStatisticSummaries)
        var samplingStatisticSummariesDecoded0:[SamplingStatisticSummary]? = nil
        if let samplingStatisticSummariesContainer = samplingStatisticSummariesContainer {
            samplingStatisticSummariesDecoded0 = [SamplingStatisticSummary]()
            for structure0 in samplingStatisticSummariesContainer {
                samplingStatisticSummariesDecoded0?.append(structure0)
            }
        }
        samplingStatisticSummaries = samplingStatisticSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
