// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutTelemetryRecordsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case eC2InstanceId = "EC2InstanceId"
        case hostname = "Hostname"
        case resourceARN = "ResourceARN"
        case telemetryRecords = "TelemetryRecords"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let eC2InstanceId = eC2InstanceId {
            try encodeContainer.encode(eC2InstanceId, forKey: .eC2InstanceId)
        }
        if let hostname = hostname {
            try encodeContainer.encode(hostname, forKey: .hostname)
        }
        if let resourceARN = resourceARN {
            try encodeContainer.encode(resourceARN, forKey: .resourceARN)
        }
        if let telemetryRecords = telemetryRecords {
            var telemetryRecordsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .telemetryRecords)
            for telemetryrecordlist0 in telemetryRecords {
                try telemetryRecordsContainer.encode(telemetryrecordlist0)
            }
        }
    }
}
