// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTimeSeriesServiceStatisticsOutputBody: Equatable {
    public let timeSeriesServiceStatistics: [TimeSeriesServiceStatistics]?
    public let containsOldGroupVersions: Bool
    public let nextToken: String?
}

extension GetTimeSeriesServiceStatisticsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case containsOldGroupVersions = "ContainsOldGroupVersions"
        case nextToken = "NextToken"
        case timeSeriesServiceStatistics = "TimeSeriesServiceStatistics"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeSeriesServiceStatisticsContainer = try containerValues.decodeIfPresent([TimeSeriesServiceStatistics].self, forKey: .timeSeriesServiceStatistics)
        var timeSeriesServiceStatisticsDecoded0:[TimeSeriesServiceStatistics]? = nil
        if let timeSeriesServiceStatisticsContainer = timeSeriesServiceStatisticsContainer {
            timeSeriesServiceStatisticsDecoded0 = [TimeSeriesServiceStatistics]()
            for structure0 in timeSeriesServiceStatisticsContainer {
                timeSeriesServiceStatisticsDecoded0?.append(structure0)
            }
        }
        timeSeriesServiceStatistics = timeSeriesServiceStatisticsDecoded0
        let containsOldGroupVersionsDecoded = try containerValues.decode(Bool.self, forKey: .containsOldGroupVersions)
        containsOldGroupVersions = containsOldGroupVersionsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
