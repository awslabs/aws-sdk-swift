// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutEncryptionConfigInputBody: Equatable {
    public let keyId: String?
    public let type: EncryptionType?
}

extension PutEncryptionConfigInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case keyId = "KeyId"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let typeDecoded = try containerValues.decodeIfPresent(EncryptionType.self, forKey: .type)
        type = typeDecoded
    }
}
