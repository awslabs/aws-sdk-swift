// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGroupInputBody: Equatable {
    public let groupName: String?
    public let groupARN: String?
    public let filterExpression: String?
    public let insightsConfiguration: InsightsConfiguration?
}

extension UpdateGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filterExpression = "FilterExpression"
        case groupARN = "GroupARN"
        case groupName = "GroupName"
        case insightsConfiguration = "InsightsConfiguration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let groupARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupARN)
        groupARN = groupARNDecoded
        let filterExpressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .filterExpression)
        filterExpression = filterExpressionDecoded
        let insightsConfigurationDecoded = try containerValues.decodeIfPresent(InsightsConfiguration.self, forKey: .insightsConfiguration)
        insightsConfiguration = insightsConfigurationDecoded
    }
}
