// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RequestImpactStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case faultCount = "FaultCount"
        case okCount = "OkCount"
        case totalCount = "TotalCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let faultCount = faultCount {
            try encodeContainer.encode(faultCount, forKey: .faultCount)
        }
        if let okCount = okCount {
            try encodeContainer.encode(okCount, forKey: .okCount)
        }
        if let totalCount = totalCount {
            try encodeContainer.encode(totalCount, forKey: .totalCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let faultCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .faultCount)
        faultCount = faultCountDecoded
        let okCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .okCount)
        okCount = okCountDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
