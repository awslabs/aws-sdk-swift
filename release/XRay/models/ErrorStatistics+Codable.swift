// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ErrorStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case otherCount = "OtherCount"
        case throttleCount = "ThrottleCount"
        case totalCount = "TotalCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let otherCount = otherCount {
            try encodeContainer.encode(otherCount, forKey: .otherCount)
        }
        if let throttleCount = throttleCount {
            try encodeContainer.encode(throttleCount, forKey: .throttleCount)
        }
        if let totalCount = totalCount {
            try encodeContainer.encode(totalCount, forKey: .totalCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let throttleCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .throttleCount)
        throttleCount = throttleCountDecoded
        let otherCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .otherCount)
        otherCount = otherCountDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
