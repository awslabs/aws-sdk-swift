// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInsightSummariesOutputBody: Equatable {
    public let insightSummaries: [InsightSummary]?
    public let nextToken: String?
}

extension GetInsightSummariesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case insightSummaries = "InsightSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightSummariesContainer = try containerValues.decodeIfPresent([InsightSummary].self, forKey: .insightSummaries)
        var insightSummariesDecoded0:[InsightSummary]? = nil
        if let insightSummariesContainer = insightSummariesContainer {
            insightSummariesDecoded0 = [InsightSummary]()
            for structure0 in insightSummariesContainer {
                insightSummariesDecoded0?.append(structure0)
            }
        }
        insightSummaries = insightSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
