// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ForecastStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case faultCountHigh = "FaultCountHigh"
        case faultCountLow = "FaultCountLow"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let faultCountHigh = faultCountHigh {
            try encodeContainer.encode(faultCountHigh, forKey: .faultCountHigh)
        }
        if let faultCountLow = faultCountLow {
            try encodeContainer.encode(faultCountLow, forKey: .faultCountLow)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let faultCountHighDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .faultCountHigh)
        faultCountHigh = faultCountHighDecoded
        let faultCountLowDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .faultCountLow)
        faultCountLow = faultCountLowDecoded
    }
}
