// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTelemetryRecordsInputBody: Equatable {
    public let telemetryRecords: [TelemetryRecord]?
    public let eC2InstanceId: String?
    public let hostname: String?
    public let resourceARN: String?
}

extension PutTelemetryRecordsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eC2InstanceId = "EC2InstanceId"
        case hostname = "Hostname"
        case resourceARN = "ResourceARN"
        case telemetryRecords = "TelemetryRecords"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let telemetryRecordsContainer = try containerValues.decodeIfPresent([TelemetryRecord].self, forKey: .telemetryRecords)
        var telemetryRecordsDecoded0:[TelemetryRecord]? = nil
        if let telemetryRecordsContainer = telemetryRecordsContainer {
            telemetryRecordsDecoded0 = [TelemetryRecord]()
            for structure0 in telemetryRecordsContainer {
                telemetryRecordsDecoded0?.append(structure0)
            }
        }
        telemetryRecords = telemetryRecordsDecoded0
        let eC2InstanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eC2InstanceId)
        eC2InstanceId = eC2InstanceIdDecoded
        let hostnameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hostname)
        hostname = hostnameDecoded
        let resourceARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
    }
}
