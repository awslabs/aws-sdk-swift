// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Request sampling results for a single rule from a service. Results are for the last 10
///       seconds unless the service has been assigned a longer reporting interval after a previous call
///       to <a>GetSamplingTargets</a>.</p>
public struct SamplingStatisticsDocument: Equatable {
    /// <p>The number of requests recorded with borrowed reservoir quota.</p>
    public let borrowCount: Int
    /// <p>A unique identifier for the service in hexadecimal.</p>
    public let clientID: String?
    /// <p>The number of requests that matched the rule.</p>
    public let requestCount: Int
    /// <p>The name of the sampling rule.</p>
    public let ruleName: String?
    /// <p>The number of requests recorded.</p>
    public let sampledCount: Int
    /// <p>The current time.</p>
    public let timestamp: Date?

    public init (
        borrowCount: Int = 0,
        clientID: String? = nil,
        requestCount: Int = 0,
        ruleName: String? = nil,
        sampledCount: Int = 0,
        timestamp: Date? = nil
    )
    {
        self.borrowCount = borrowCount
        self.clientID = clientID
        self.requestCount = requestCount
        self.ruleName = ruleName
        self.sampledCount = sampledCount
        self.timestamp = timestamp
    }
}
