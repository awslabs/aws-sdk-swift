// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTraceSegmentsInputBody: Equatable {
    public let traceSegmentDocuments: [String]?
}

extension PutTraceSegmentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case traceSegmentDocuments = "TraceSegmentDocuments"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let traceSegmentDocumentsContainer = try containerValues.decodeIfPresent([String].self, forKey: .traceSegmentDocuments)
        var traceSegmentDocumentsDecoded0:[String]? = nil
        if let traceSegmentDocumentsContainer = traceSegmentDocumentsContainer {
            traceSegmentDocumentsDecoded0 = [String]()
            for string0 in traceSegmentDocumentsContainer {
                traceSegmentDocumentsDecoded0?.append(string0)
            }
        }
        traceSegmentDocuments = traceSegmentDocumentsDecoded0
    }
}
