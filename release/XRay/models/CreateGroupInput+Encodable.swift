// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateGroupInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filterExpression = "FilterExpression"
        case groupName = "GroupName"
        case insightsConfiguration = "InsightsConfiguration"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterExpression = filterExpression {
            try encodeContainer.encode(filterExpression, forKey: .filterExpression)
        }
        if let groupName = groupName {
            try encodeContainer.encode(groupName, forKey: .groupName)
        }
        if let insightsConfiguration = insightsConfiguration {
            try encodeContainer.encode(insightsConfiguration, forKey: .insightsConfiguration)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
