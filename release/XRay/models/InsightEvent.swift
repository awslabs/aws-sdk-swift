// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>X-Ray reevaluates insights periodically until they are resolved, and records each intermediate state in an
///          event. You can review incident events in the Impact Timeline on the Inspect page in the X-Ray console.</p>
public struct InsightEvent: Equatable {
    /// <p>The impact statistics of the client side service. This includes the number of requests to the client service
    ///          and whether the requests were faults or okay.</p>
    public let clientRequestImpactStatistics: RequestImpactStatistics?
    /// <p>The time, in Unix seconds, at which the event was recorded.</p>
    public let eventTime: Date?
    /// <p>The impact statistics of the root cause service. This includes the number of requests to the client service
    ///          and whether the requests were faults or okay.</p>
    public let rootCauseServiceRequestImpactStatistics: RequestImpactStatistics?
    /// <p>A brief description of the event.</p>
    public let summary: String?
    /// <p>The service during the event that is most impacted by the incident.</p>
    public let topAnomalousServices: [AnomalousService]?

    public init (
        clientRequestImpactStatistics: RequestImpactStatistics? = nil,
        eventTime: Date? = nil,
        rootCauseServiceRequestImpactStatistics: RequestImpactStatistics? = nil,
        summary: String? = nil,
        topAnomalousServices: [AnomalousService]? = nil
    )
    {
        self.clientRequestImpactStatistics = clientRequestImpactStatistics
        self.eventTime = eventTime
        self.rootCauseServiceRequestImpactStatistics = rootCauseServiceRequestImpactStatistics
        self.summary = summary
        self.topAnomalousServices = topAnomalousServices
    }
}
