// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackendConnectionErrors: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectionRefusedCount = "ConnectionRefusedCount"
        case hTTPCode4XXCount = "HTTPCode4XXCount"
        case hTTPCode5XXCount = "HTTPCode5XXCount"
        case otherCount = "OtherCount"
        case timeoutCount = "TimeoutCount"
        case unknownHostCount = "UnknownHostCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let connectionRefusedCount = connectionRefusedCount {
            try encodeContainer.encode(connectionRefusedCount, forKey: .connectionRefusedCount)
        }
        if let hTTPCode4XXCount = hTTPCode4XXCount {
            try encodeContainer.encode(hTTPCode4XXCount, forKey: .hTTPCode4XXCount)
        }
        if let hTTPCode5XXCount = hTTPCode5XXCount {
            try encodeContainer.encode(hTTPCode5XXCount, forKey: .hTTPCode5XXCount)
        }
        if let otherCount = otherCount {
            try encodeContainer.encode(otherCount, forKey: .otherCount)
        }
        if let timeoutCount = timeoutCount {
            try encodeContainer.encode(timeoutCount, forKey: .timeoutCount)
        }
        if let unknownHostCount = unknownHostCount {
            try encodeContainer.encode(unknownHostCount, forKey: .unknownHostCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timeoutCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .timeoutCount)
        timeoutCount = timeoutCountDecoded
        let connectionRefusedCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .connectionRefusedCount)
        connectionRefusedCount = connectionRefusedCountDecoded
        let hTTPCode4XXCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .hTTPCode4XXCount)
        hTTPCode4XXCount = hTTPCode4XXCountDecoded
        let hTTPCode5XXCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .hTTPCode5XXCount)
        hTTPCode5XXCount = hTTPCode5XXCountDecoded
        let unknownHostCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .unknownHostCount)
        unknownHostCount = unknownHostCountDecoded
        let otherCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .otherCount)
        otherCount = otherCountDecoded
    }
}
