// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTraceGraphInputBody: Equatable {
    public let traceIds: [String]?
    public let nextToken: String?
}

extension GetTraceGraphInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case traceIds = "TraceIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let traceIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .traceIds)
        var traceIdsDecoded0:[String]? = nil
        if let traceIdsContainer = traceIdsContainer {
            traceIdsDecoded0 = [String]()
            for string0 in traceIdsContainer {
                traceIdsDecoded0?.append(string0)
            }
        }
        traceIds = traceIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
