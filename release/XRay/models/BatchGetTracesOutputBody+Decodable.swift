// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetTracesOutputBody: Equatable {
    public let traces: [Trace]?
    public let unprocessedTraceIds: [String]?
    public let nextToken: String?
}

extension BatchGetTracesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case traces = "Traces"
        case unprocessedTraceIds = "UnprocessedTraceIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tracesContainer = try containerValues.decodeIfPresent([Trace].self, forKey: .traces)
        var tracesDecoded0:[Trace]? = nil
        if let tracesContainer = tracesContainer {
            tracesDecoded0 = [Trace]()
            for structure0 in tracesContainer {
                tracesDecoded0?.append(structure0)
            }
        }
        traces = tracesDecoded0
        let unprocessedTraceIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .unprocessedTraceIds)
        var unprocessedTraceIdsDecoded0:[String]? = nil
        if let unprocessedTraceIdsContainer = unprocessedTraceIdsContainer {
            unprocessedTraceIdsDecoded0 = [String]()
            for string0 in unprocessedTraceIdsContainer {
                unprocessedTraceIdsDecoded0?.append(string0)
            }
        }
        unprocessedTraceIds = unprocessedTraceIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
