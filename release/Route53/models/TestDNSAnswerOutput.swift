// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains the response to a <code>TestDNSAnswer</code> request. </p>
public struct TestDNSAnswerOutput: Equatable {
    /// <p>The protocol that Amazon Route 53 used to respond to the request, either <code>UDP</code> or <code>TCP</code>. </p>
    public let `protocol`: String?
    /// <p>The Amazon Route 53 name server used to respond to the request.</p>
    public let nameserver: String?
    /// <p>A list that contains values that Amazon Route 53 returned for this resource record set.</p>
    public let recordData: [String]?
    /// <p>The name of the resource record set that you submitted a request for.</p>
    public let recordName: String?
    /// <p>The type of the resource record set that you submitted a request for.</p>
    public let recordType: RRType?
    /// <p>A code that indicates whether the request is valid or not. The most common response code is <code>NOERROR</code>, meaning that
    /// 			the request is valid. If the response is not valid, Amazon Route 53 returns a response code that describes the error.
    /// 			For a list of possible response codes, see
    /// 			<a href="http://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-6">DNS RCODES</a> on the IANA website. </p>
    public let responseCode: String?

    public init (
        `protocol`: String? = nil,
        nameserver: String? = nil,
        recordData: [String]? = nil,
        recordName: String? = nil,
        recordType: RRType? = nil,
        responseCode: String? = nil
    )
    {
        self.`protocol` = `protocol`
        self.nameserver = nameserver
        self.recordData = recordData
        self.recordName = recordName
        self.recordType = recordType
        self.responseCode = responseCode
    }
}
