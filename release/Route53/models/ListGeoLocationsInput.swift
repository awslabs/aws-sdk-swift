// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A request to get a list of geographic locations that Amazon Route 53 supports for geolocation resource record sets. </p>
public struct ListGeoLocationsInput: Equatable {
    /// <p>(Optional) The maximum number of geolocations to be included in the response body for this request. If more than <code>maxitems</code>
    /// 			geolocations remain to be listed, then the value of the <code>IsTruncated</code> element in the response is <code>true</code>.</p>
    public let maxItems: Int?
    /// <p>The code for the continent with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already
    /// 			returned a page or more of results, if <code>IsTruncated</code> is true, and if <code>NextContinentCode</code> from the previous
    /// 			response has a value, enter that value in <code>startcontinentcode</code> to return the next page of results.</p>
    /// 		       <p>Include <code>startcontinentcode</code> only if you want to list continents. Don't include <code>startcontinentcode</code>
    /// 			when you're listing countries or countries with their subdivisions.</p>
    public let startContinentCode: String?
    /// <p>The code for the country with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already
    /// 			returned a page or more of results, if <code>IsTruncated</code> is <code>true</code>, and if <code>NextCountryCode</code> from the
    /// 			previous response has a value, enter that value in <code>startcountrycode</code> to return the next page of results.</p>
    public let startCountryCode: String?
    /// <p>The code for the state of the United States with which you want to start listing locations that Amazon Route 53 supports
    /// 			for geolocation. If Route 53 has already returned a page or more of results, if <code>IsTruncated</code> is <code>true</code>, and if
    /// 			<code>NextSubdivisionCode</code> from the previous response has a value, enter that value in <code>startsubdivisioncode</code>
    /// 			to return the next page of results.</p>
    /// 		       <p>To list subdivisions (U.S. states), you must include both <code>startcountrycode</code> and <code>startsubdivisioncode</code>.</p>
    public let startSubdivisionCode: String?

    public init (
        maxItems: Int? = nil,
        startContinentCode: String? = nil,
        startCountryCode: String? = nil,
        startSubdivisionCode: String? = nil
    )
    {
        self.maxItems = maxItems
        self.startContinentCode = startContinentCode
        self.startCountryCode = startCountryCode
        self.startSubdivisionCode = startSubdivisionCode
    }
}
