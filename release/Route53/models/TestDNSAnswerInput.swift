// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify
/// 			the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask. </p>
public struct TestDNSAnswerInput: Equatable {
    /// <p>If the resolver that you specified for resolverip supports EDNS0, specify the IPv4 or IPv6 address of a client
    /// 			in the applicable location, for example, <code>192.0.2.44</code> or <code>2001:db8:85a3::8a2e:370:7334</code>.</p>
    public let eDNS0ClientSubnetIP: String?
    /// <p>If you specify an IP address for <code>edns0clientsubnetip</code>, you can optionally specify the number of bits of the IP address
    /// 			that you want the checking tool to include in the DNS query. For example, if you specify <code>192.0.2.44</code> for
    /// 			<code>edns0clientsubnetip</code> and <code>24</code> for <code>edns0clientsubnetmask</code>, the checking tool will simulate a request from
    /// 			192.0.2.0/24. The default value is 24 bits for IPv4 addresses and 64 bits for IPv6 addresses.</p>
    /// 		       <p>The range of valid values depends on whether <code>edns0clientsubnetip</code> is an IPv4 or an IPv6 address:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <b>IPv4</b>: Specify a value between 0 and 32</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>IPv6</b>: Specify a value between 0 and 128</p>
    ///             </li>
    ///          </ul>
    public let eDNS0ClientSubnetMask: String?
    /// <p>The ID of the hosted zone that you want Amazon Route 53 to simulate a query for.</p>
    public let hostedZoneId: String?
    /// <p>The name of the resource record set that you want Amazon Route 53 to simulate a query for.</p>
    public let recordName: String?
    /// <p>The type of the resource record set.</p>
    public let recordType: RRType?
    /// <p>If you want to simulate a request from a specific DNS resolver, specify the IP address for that resolver.
    /// 			If you omit this value, <code>TestDnsAnswer</code> uses the IP address of a DNS resolver in the AWS US East (N. Virginia) Region
    /// 			(<code>us-east-1</code>).</p>
    public let resolverIP: String?

    public init (
        eDNS0ClientSubnetIP: String? = nil,
        eDNS0ClientSubnetMask: String? = nil,
        hostedZoneId: String? = nil,
        recordName: String? = nil,
        recordType: RRType? = nil,
        resolverIP: String? = nil
    )
    {
        self.eDNS0ClientSubnetIP = eDNS0ClientSubnetIP
        self.eDNS0ClientSubnetMask = eDNS0ClientSubnetMask
        self.hostedZoneId = hostedZoneId
        self.recordName = recordName
        self.recordType = recordType
        self.resolverIP = resolverIP
    }
}
