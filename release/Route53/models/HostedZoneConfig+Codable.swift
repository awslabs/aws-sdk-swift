// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HostedZoneConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case comment = "Comment"
        case privateZone = "PrivateZone"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: Key("xmlns"))
        }
        if let comment = comment {
            try container.encode(comment, forKey: Key("comment"))
        }
        if privateZone != false {
            try container.encode(privateZone, forKey: Key("privateZone"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .comment)
        comment = commentDecoded
        let privateZoneDecoded = try containerValues.decode(Bool.self, forKey: .privateZone)
        privateZone = privateZoneDecoded
    }
}
