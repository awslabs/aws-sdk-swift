// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListGeoLocationsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListGeoLocationsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListGeoLocationsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListGeoLocationsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let startContinentCode = input.operationInput.startContinentCode {
            let startContinentCodeQueryItem = URLQueryItem(name: "startcontinentcode".urlPercentEncoding(), value: String(startContinentCode).urlPercentEncoding())
            input.builder.withQueryItem(startContinentCodeQueryItem)
        }
        if let startCountryCode = input.operationInput.startCountryCode {
            let startCountryCodeQueryItem = URLQueryItem(name: "startcountrycode".urlPercentEncoding(), value: String(startCountryCode).urlPercentEncoding())
            input.builder.withQueryItem(startCountryCodeQueryItem)
        }
        if let maxItems = input.operationInput.maxItems {
            let maxItemsQueryItem = URLQueryItem(name: "maxitems".urlPercentEncoding(), value: String(maxItems).urlPercentEncoding())
            input.builder.withQueryItem(maxItemsQueryItem)
        }
        if let startSubdivisionCode = input.operationInput.startSubdivisionCode {
            let startSubdivisionCodeQueryItem = URLQueryItem(name: "startsubdivisioncode".urlPercentEncoding(), value: String(startSubdivisionCode).urlPercentEncoding())
            input.builder.withQueryItem(startSubdivisionCodeQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListGeoLocationsInput>
    public typealias MOutput = OperationOutput<ListGeoLocationsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListGeoLocationsOutputError>
}
