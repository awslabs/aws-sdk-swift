// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListTrafficPolicyVersionsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListTrafficPolicyVersionsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListTrafficPolicyVersionsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListTrafficPolicyVersionsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let trafficPolicyVersionMarker = input.operationInput.trafficPolicyVersionMarker {
            let trafficPolicyVersionMarkerQueryItem = URLQueryItem(name: "trafficpolicyversion".urlPercentEncoding(), value: String(trafficPolicyVersionMarker).urlPercentEncoding())
            input.builder.withQueryItem(trafficPolicyVersionMarkerQueryItem)
        }
        if let maxItems = input.operationInput.maxItems {
            let maxItemsQueryItem = URLQueryItem(name: "maxitems".urlPercentEncoding(), value: String(maxItems).urlPercentEncoding())
            input.builder.withQueryItem(maxItemsQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListTrafficPolicyVersionsInput>
    public typealias MOutput = OperationOutput<ListTrafficPolicyVersionsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListTrafficPolicyVersionsOutputError>
}
