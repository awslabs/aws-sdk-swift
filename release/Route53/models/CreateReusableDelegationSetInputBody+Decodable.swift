// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateReusableDelegationSetInputBody: Equatable {
    public let callerReference: String?
    public let hostedZoneId: String?
}

extension CreateReusableDelegationSetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case callerReference = "CallerReference"
        case hostedZoneId = "HostedZoneId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let callerReferenceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .callerReference)
        callerReference = callerReferenceDecoded
        let hostedZoneIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hostedZoneId)
        hostedZoneId = hostedZoneIdDecoded
    }
}
