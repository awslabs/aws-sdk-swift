// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains information about the reusable delegation sets that are associated with the current AWS account.</p>
public struct ListReusableDelegationSetsOutput: Equatable {
    /// <p>A complex type that contains one <code>DelegationSet</code> element for each reusable delegation set that was created
    /// 			by the current AWS account.</p>
    public let delegationSets: [DelegationSet]?
    /// <p>A flag that indicates whether there are more reusable delegation sets to be listed.</p>
    public let isTruncated: Bool
    /// <p>For the second and subsequent calls to <code>ListReusableDelegationSets</code>, <code>Marker</code> is the value that you specified
    /// 			for the <code>marker</code> parameter in the request that produced the current response.</p>
    public let marker: String?
    /// <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListReusableDelegationSets</code> that
    /// 			produced the current response.</p>
    public let maxItems: Int?
    /// <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the next reusable delegation set
    /// 			that Amazon Route 53 will return if you submit another <code>ListReusableDelegationSets</code> request and specify the value of <code>NextMarker</code>
    /// 			in the <code>marker</code> parameter.</p>
    public let nextMarker: String?

    public init (
        delegationSets: [DelegationSet]? = nil,
        isTruncated: Bool = false,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil
    )
    {
        self.delegationSets = delegationSets
        self.isTruncated = isTruncated
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
    }
}
