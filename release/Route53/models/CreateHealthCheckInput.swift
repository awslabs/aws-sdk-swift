// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains the health check request information.</p>
public struct CreateHealthCheckInput: Equatable {
    /// <p>A unique string that identifies the request and that allows you to retry a failed <code>CreateHealthCheck</code> request
    /// 			without the risk of creating two identical health checks:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> and settings
    /// 				as a previous request, and if the health check doesn't exist, Amazon Route 53 creates the health check. If the health check does exist,
    /// 				Route 53 returns the settings for the existing health check.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as a deleted health check,
    /// 				regardless of the settings, Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you send a <code>CreateHealthCheck</code> request with the same <code>CallerReference</code> as an existing health check
    /// 				but with different settings, Route 53 returns a <code>HealthCheckAlreadyExists</code> error.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you send a <code>CreateHealthCheck</code> request with a unique <code>CallerReference</code> but settings identical to
    /// 				an existing health check, Route 53 creates the health check.</p>
    ///             </li>
    ///          </ul>
    public let callerReference: String?
    /// <p>A complex type that contains settings for a new health check.</p>
    public let healthCheckConfig: HealthCheckConfig?

    public init (
        callerReference: String? = nil,
        healthCheckConfig: HealthCheckConfig? = nil
    )
    {
        self.callerReference = callerReference
        self.healthCheckConfig = healthCheckConfig
    }
}
