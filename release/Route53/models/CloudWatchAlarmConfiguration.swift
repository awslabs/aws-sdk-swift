// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.</p>
public struct CloudWatchAlarmConfiguration: Equatable {
    /// <p>For the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.</p>
    public let comparisonOperator: ComparisonOperator?
    /// <p>For the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric.
    /// 			For information, see
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
    /// 			in the <i>Amazon CloudWatch User Guide</i>.</p>
    public let dimensions: [Dimension]?
    /// <p>For the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.</p>
    public let evaluationPeriods: Int?
    /// <p>The name of the CloudWatch metric that the alarm is associated with.</p>
    public let metricName: String?
    /// <p>The namespace of the metric that the alarm is associated with. For more information, see
    /// 			<a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
    /// 			in the <i>Amazon CloudWatch User Guide</i>.</p>
    public let namespace: String?
    /// <p>For the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.</p>
    public let period: Int?
    /// <p>For the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.</p>
    public let statistic: Statistic?
    /// <p>For the metric that the CloudWatch alarm is associated with, the value the metric is compared with.</p>
    public let threshold: Double?

    public init (
        comparisonOperator: ComparisonOperator? = nil,
        dimensions: [Dimension]? = nil,
        evaluationPeriods: Int? = nil,
        metricName: String? = nil,
        namespace: String? = nil,
        period: Int? = nil,
        statistic: Statistic? = nil,
        threshold: Double? = nil
    )
    {
        self.comparisonOperator = comparisonOperator
        self.dimensions = dimensions
        self.evaluationPeriods = evaluationPeriods
        self.metricName = metricName
        self.namespace = namespace
        self.period = period
        self.statistic = statistic
        self.threshold = threshold
    }
}
