// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains the response to a <code>ListHealthChecks</code> request.</p>
public struct ListHealthChecksOutput: Equatable {
    /// <p>A complex type that contains one <code>HealthCheck</code> element for each health check that is associated with the current
    /// 			AWS account.</p>
    public let healthChecks: [HealthCheck]?
    /// <p>A flag that indicates whether there are more health checks to be listed. If the response was truncated, you can get the next group of
    /// 			health checks by submitting another <code>ListHealthChecks</code> request and specifying the value of <code>NextMarker</code> in the
    /// 			<code>marker</code> parameter.</p>
    public let isTruncated: Bool
    /// <p>For the second and subsequent calls to <code>ListHealthChecks</code>, <code>Marker</code> is the value that you specified for the
    /// 			<code>marker</code> parameter in the previous request.</p>
    public let marker: String?
    /// <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHealthChecks</code> that produced the
    /// 			current response.</p>
    public let maxItems: Int?
    /// <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first health check that Amazon Route 53
    /// 			returns if you submit another <code>ListHealthChecks</code> request and specify the value of <code>NextMarker</code> in
    /// 			the <code>marker</code> parameter.</p>
    public let nextMarker: String?

    public init (
        healthChecks: [HealthCheck]? = nil,
        isTruncated: Bool = false,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil
    )
    {
        self.healthChecks = healthChecks
        self.isTruncated = isTruncated
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
    }
}
