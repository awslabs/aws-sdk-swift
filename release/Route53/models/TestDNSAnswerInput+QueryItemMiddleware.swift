// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct TestDNSAnswerInputQueryItemMiddleware: Middleware {
    public let id: String = "TestDNSAnswerInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<TestDNSAnswerInput>,
                  next: H) -> Swift.Result<OperationOutput<TestDNSAnswerOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let recordName = input.operationInput.recordName {
            let recordNameQueryItem = URLQueryItem(name: "recordname".urlPercentEncoding(), value: String(recordName).urlPercentEncoding())
            input.builder.withQueryItem(recordNameQueryItem)
        }
        if let eDNS0ClientSubnetIP = input.operationInput.eDNS0ClientSubnetIP {
            let eDNS0ClientSubnetIPQueryItem = URLQueryItem(name: "edns0clientsubnetip".urlPercentEncoding(), value: String(eDNS0ClientSubnetIP).urlPercentEncoding())
            input.builder.withQueryItem(eDNS0ClientSubnetIPQueryItem)
        }
        if let recordType = input.operationInput.recordType {
            let recordTypeQueryItem = URLQueryItem(name: "recordtype".urlPercentEncoding(), value: String(recordType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(recordTypeQueryItem)
        }
        if let hostedZoneId = input.operationInput.hostedZoneId {
            let hostedZoneIdQueryItem = URLQueryItem(name: "hostedzoneid".urlPercentEncoding(), value: String(hostedZoneId).urlPercentEncoding())
            input.builder.withQueryItem(hostedZoneIdQueryItem)
        }
        if let resolverIP = input.operationInput.resolverIP {
            let resolverIPQueryItem = URLQueryItem(name: "resolverip".urlPercentEncoding(), value: String(resolverIP).urlPercentEncoding())
            input.builder.withQueryItem(resolverIPQueryItem)
        }
        if let eDNS0ClientSubnetMask = input.operationInput.eDNS0ClientSubnetMask {
            let eDNS0ClientSubnetMaskQueryItem = URLQueryItem(name: "edns0clientsubnetmask".urlPercentEncoding(), value: String(eDNS0ClientSubnetMask).urlPercentEncoding())
            input.builder.withQueryItem(eDNS0ClientSubnetMaskQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<TestDNSAnswerInput>
    public typealias MOutput = OperationOutput<TestDNSAnswerOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<TestDNSAnswerOutputError>
}
