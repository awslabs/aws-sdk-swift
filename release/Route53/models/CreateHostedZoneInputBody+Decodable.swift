// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHostedZoneInputBody: Equatable {
    public let name: String?
    public let vPC: VPC?
    public let callerReference: String?
    public let hostedZoneConfig: HostedZoneConfig?
    public let delegationSetId: String?
}

extension CreateHostedZoneInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case callerReference = "CallerReference"
        case delegationSetId = "DelegationSetId"
        case hostedZoneConfig = "HostedZoneConfig"
        case name = "Name"
        case vPC = "VPC"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let vPCDecoded = try containerValues.decodeIfPresent(VPC.self, forKey: .vPC)
        vPC = vPCDecoded
        let callerReferenceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .callerReference)
        callerReference = callerReferenceDecoded
        let hostedZoneConfigDecoded = try containerValues.decodeIfPresent(HostedZoneConfig.self, forKey: .hostedZoneConfig)
        hostedZoneConfig = hostedZoneConfigDecoded
        let delegationSetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .delegationSetId)
        delegationSetId = delegationSetIdDecoded
    }
}
