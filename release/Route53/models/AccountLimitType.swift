// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AccountLimitType {
    case maxHealthChecksByOwner
    case maxHostedZonesByOwner
    case maxReusableDelegationSetsByOwner
    case maxTrafficPoliciesByOwner
    case maxTrafficPolicyInstancesByOwner
    case sdkUnknown(String)
}

extension AccountLimitType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AccountLimitType] {
        return [
            .maxHealthChecksByOwner,
            .maxHostedZonesByOwner,
            .maxReusableDelegationSetsByOwner,
            .maxTrafficPoliciesByOwner,
            .maxTrafficPolicyInstancesByOwner,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .maxHealthChecksByOwner: return "MAX_HEALTH_CHECKS_BY_OWNER"
        case .maxHostedZonesByOwner: return "MAX_HOSTED_ZONES_BY_OWNER"
        case .maxReusableDelegationSetsByOwner: return "MAX_REUSABLE_DELEGATION_SETS_BY_OWNER"
        case .maxTrafficPoliciesByOwner: return "MAX_TRAFFIC_POLICIES_BY_OWNER"
        case .maxTrafficPolicyInstancesByOwner: return "MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AccountLimitType(rawValue: rawValue) ?? AccountLimitType.sdkUnknown(rawValue)
    }
}
