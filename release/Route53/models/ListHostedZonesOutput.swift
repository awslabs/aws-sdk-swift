// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListHostedZonesOutput: Equatable {
    /// <p>A complex type that contains general information about the hosted zone.</p>
    public let hostedZones: [HostedZone]?
    /// <p>A flag indicating whether there are more hosted zones to be listed. If the response was truncated, you can get more hosted zones
    /// 			by submitting another <code>ListHostedZones</code> request and specifying the value of <code>NextMarker</code> in the
    /// 			<code>marker</code> parameter.</p>
    public let isTruncated: Bool
    /// <p>For the second and subsequent calls to <code>ListHostedZones</code>, <code>Marker</code> is the value that you specified for the
    /// 			<code>marker</code> parameter in the request that produced the current response.</p>
    public let marker: String?
    /// <p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListHostedZones</code> that
    /// 			produced the current response.</p>
    public let maxItems: Int?
    /// <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>NextMarker</code> identifies the first hosted zone in the next group
    /// 			of hosted zones. Submit another <code>ListHostedZones</code> request, and specify the value of <code>NextMarker</code> from the response in the
    /// 			<code>marker</code> parameter.</p>
    /// 		       <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
    public let nextMarker: String?

    public init (
        hostedZones: [HostedZone]? = nil,
        isTruncated: Bool = false,
        marker: String? = nil,
        maxItems: Int? = nil,
        nextMarker: String? = nil
    )
    {
        self.hostedZones = hostedZones
        self.isTruncated = isTruncated
        self.marker = marker
        self.maxItems = maxItems
        self.nextMarker = nextMarker
    }
}
