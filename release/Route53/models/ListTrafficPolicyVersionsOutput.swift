// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A complex type that contains the response information for the request.</p>
public struct ListTrafficPolicyVersionsOutput: Equatable {
    /// <p>A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of
    /// 			traffic policies by submitting another <code>ListTrafficPolicyVersions</code> request and specifying the value of <code>NextMarker</code>
    /// 			in the <code>marker</code> parameter.</p>
    public let isTruncated: Bool
    /// <p>The value that you specified for the <code>maxitems</code> parameter in the <code>ListTrafficPolicyVersions</code> request that produced
    /// 			the current response.</p>
    public let maxItems: Int?
    /// <p>A list that contains one <code>TrafficPolicy</code> element for each traffic policy
    /// 			version that is associated with the specified traffic policy.</p>
    public let trafficPolicies: [TrafficPolicy]?
    /// <p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>TrafficPolicyVersionMarker</code> identifies the first traffic policy
    /// 			that Amazon Route 53 will return if you submit another request. Call <code>ListTrafficPolicyVersions</code> again and specify the value of
    /// 			<code>TrafficPolicyVersionMarker</code> in the <code>TrafficPolicyVersionMarker</code> request parameter.</p>
    /// 		       <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>
    public let trafficPolicyVersionMarker: String?

    public init (
        isTruncated: Bool = false,
        maxItems: Int? = nil,
        trafficPolicies: [TrafficPolicy]? = nil,
        trafficPolicyVersionMarker: String? = nil
    )
    {
        self.isTruncated = isTruncated
        self.maxItems = maxItems
        self.trafficPolicies = trafficPolicies
        self.trafficPolicyVersionMarker = trafficPolicyVersionMarker
    }
}
