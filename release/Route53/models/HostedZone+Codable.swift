// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HostedZone: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case callerReference = "CallerReference"
        case config = "Config"
        case id = "Id"
        case linkedService = "LinkedService"
        case name = "Name"
        case resourceRecordSetCount = "ResourceRecordSetCount"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: Key("xmlns"))
        }
        if let callerReference = callerReference {
            try container.encode(callerReference, forKey: Key("callerReference"))
        }
        if let config = config {
            try container.encode(config, forKey: Key("config"))
        }
        if let id = id {
            try container.encode(id, forKey: Key("id"))
        }
        if let linkedService = linkedService {
            try container.encode(linkedService, forKey: Key("linkedService"))
        }
        if let name = name {
            try container.encode(name, forKey: Key("name"))
        }
        if let resourceRecordSetCount = resourceRecordSetCount {
            try container.encode(resourceRecordSetCount, forKey: Key("resourceRecordSetCount"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let callerReferenceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .callerReference)
        callerReference = callerReferenceDecoded
        let configDecoded = try containerValues.decodeIfPresent(HostedZoneConfig.self, forKey: .config)
        config = configDecoded
        let resourceRecordSetCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .resourceRecordSetCount)
        resourceRecordSetCount = resourceRecordSetCountDecoded
        let linkedServiceDecoded = try containerValues.decodeIfPresent(LinkedService.self, forKey: .linkedService)
        linkedService = linkedServiceDecoded
    }
}
