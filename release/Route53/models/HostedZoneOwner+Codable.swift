// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HostedZoneOwner: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case owningAccount = "OwningAccount"
        case owningService = "OwningService"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("https://route53.amazonaws.com/doc/2013-04-01/", forKey: Key("xmlns"))
        }
        if let owningAccount = owningAccount {
            try container.encode(owningAccount, forKey: Key("owningAccount"))
        }
        if let owningService = owningService {
            try container.encode(owningService, forKey: Key("owningService"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let owningAccountDecoded = try containerValues.decodeIfPresent(String.self, forKey: .owningAccount)
        owningAccount = owningAccountDecoded
        let owningServiceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .owningService)
        owningService = owningServiceDecoded
    }
}
