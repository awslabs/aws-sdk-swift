// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHostedZoneOutputBody: Equatable {
    public let hostedZone: HostedZone?
    public let changeInfo: ChangeInfo?
    public let delegationSet: DelegationSet?
    public let vPC: VPC?
}

extension CreateHostedZoneOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case changeInfo = "ChangeInfo"
        case delegationSet = "DelegationSet"
        case hostedZone = "HostedZone"
        case vPC = "VPC"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostedZoneDecoded = try containerValues.decodeIfPresent(HostedZone.self, forKey: .hostedZone)
        hostedZone = hostedZoneDecoded
        let changeInfoDecoded = try containerValues.decodeIfPresent(ChangeInfo.self, forKey: .changeInfo)
        changeInfo = changeInfoDecoded
        let delegationSetDecoded = try containerValues.decodeIfPresent(DelegationSet.self, forKey: .delegationSet)
        delegationSet = delegationSetDecoded
        let vPCDecoded = try containerValues.decodeIfPresent(VPC.self, forKey: .vPC)
        vPC = vPCDecoded
    }
}
