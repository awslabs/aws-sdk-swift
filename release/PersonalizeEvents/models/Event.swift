// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents user interaction event information sent using the
///       <code>PutEvents</code> API.</p>
public struct Event: Equatable {
    /// <p>An ID associated with the event. If an event ID is not provided, Amazon Personalize generates
    ///       a unique ID for the event. An event ID is not used as an input to the model. Amazon Personalize uses
    ///       the event ID to distinquish unique events. Any subsequent events after the first with the
    ///       same event ID are not used in model training.</p>
    public let eventId: String?
    /// <p>The type of event, such as click or download. This property corresponds to the <code>EVENT_TYPE</code>
    ///       field of your Interactions schema and depends on the types of events you are tracking.</p>
    public let eventType: String?
    /// <p>The event value that corresponds to the <code>EVENT_VALUE</code> field of the Interactions schema.</p>
    public let eventValue: Float?
    /// <p>A list of item IDs that represents the sequence of items you have shown the user. For example, <code>["itemId1", "itemId2", "itemId3"]</code>.</p>
    public let impression: [String]?
    /// <p>The item ID key that corresponds to the <code>ITEM_ID</code> field of the Interactions schema.</p>
    public let itemId: String?
    /// <p>A string map of event-specific data that you might choose to record. For example, if a
    ///       user rates a movie on your site, other than movie ID (<code>itemId</code>) and rating (<code>eventValue</code>)
    ///       , you might also send the number of movie ratings made by the user.</p>
    ///          <p>Each item in the map consists of a key-value pair. For example,</p>
    ///
    ///          <p>
    ///             <code>{"numberOfRatings": "12"}</code>
    ///          </p>
    ///          <p>The keys use camel case names that match the fields in the Interactions
    ///       schema. In the above example, the <code>numberOfRatings</code> would match the
    ///       'NUMBER_OF_RATINGS' field defined in the Interactions schema.</p>
    public let properties: String?
    /// <p>The ID of the recommendation.</p>
    public let recommendationId: String?
    /// <p>The timestamp (in Unix time) on the client side when the event occurred.</p>
    public let sentAt: Date?

    public init (
        eventId: String? = nil,
        eventType: String? = nil,
        eventValue: Float? = nil,
        impression: [String]? = nil,
        itemId: String? = nil,
        properties: String? = nil,
        recommendationId: String? = nil,
        sentAt: Date? = nil
    )
    {
        self.eventId = eventId
        self.eventType = eventType
        self.eventValue = eventValue
        self.impression = impression
        self.itemId = itemId
        self.properties = properties
        self.recommendationId = recommendationId
        self.sentAt = sentAt
    }
}
