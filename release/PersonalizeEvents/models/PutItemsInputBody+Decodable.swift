// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutItemsInputBody: Equatable {
    public let datasetArn: String?
    public let items: [Item]?
}

extension PutItemsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetArn
        case items
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetArn)
        datasetArn = datasetArnDecoded
        let itemsContainer = try containerValues.decodeIfPresent([Item].self, forKey: .items)
        var itemsDecoded0:[Item]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [Item]()
            for structure0 in itemsContainer {
                itemsDecoded0?.append(structure0)
            }
        }
        items = itemsDecoded0
    }
}
