// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Item: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case itemId
        case properties
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let itemId = itemId {
            try encodeContainer.encode(itemId, forKey: .itemId)
        }
        if let properties = properties {
            try encodeContainer.encode(properties, forKey: .properties)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .itemId)
        itemId = itemIdDecoded
        let propertiesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .properties)
        properties = propertiesDecoded
    }
}
