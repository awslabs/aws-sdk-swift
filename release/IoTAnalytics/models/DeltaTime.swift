// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Used to limit data to that which has arrived since the last execution of the
///       action.</p>
public struct DeltaTime: Equatable {
    /// <p>The number of seconds of estimated in-flight lag time of message data. When you create
    ///       dataset contents using message data from a specified timeframe, some message data might still
    ///       be in flight when processing begins, and so do not arrive in time to be processed. Use this
    ///       field to make allowances for the in flight time of your message data, so that data not
    ///       processed from a previous timeframe is included with the next timeframe. Otherwise, missed
    ///       message data would be excluded from processing during the next timeframe too, because its
    ///       timestamp places it within the previous timeframe.</p>
    public let offsetSeconds: Int?
    /// <p>An expression by which the time of the message data might be determined. This can be the
    ///       name of a timestamp field or a SQL expression that is used to derive the time the message data
    ///       was generated.</p>
    public let timeExpression: String?

    public init (
        offsetSeconds: Int? = nil,
        timeExpression: String? = nil
    )
    {
        self.offsetSeconds = offsetSeconds
        self.timeExpression = timeExpression
    }
}
