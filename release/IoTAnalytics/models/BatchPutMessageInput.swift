// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct BatchPutMessageInput: Equatable {
    /// <p>The name of the channel where the messages are sent.</p>
    public let channelName: String?
    /// <p>The list of messages to be sent. Each message has the format: { "messageId": "string",
    ///          "payload": "string"}.</p>
    ///          <p>The field names of message payloads (data) that you send to AWS IoT Analytics:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must contain only alphanumeric characters and undescores (_). No other special characters are
    ///                allowed.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must begin with an alphabetic character or single underscore (_).</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot contain hyphens (-).</p>
    ///             </li>
    ///             <li>
    ///                <p>In regular expression terms: "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot be more than 255 characters.</p>
    ///             </li>
    ///             <li>
    ///                <p>Are case insensitive. (Fields named foo and FOO in the same payload are considered
    ///                duplicates.)</p>
    ///             </li>
    ///          </ul>
    ///          <p>For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but {"temp-01": 29},
    ///  {"01_temp": 29} or {"__temp_01": 29} are invalid in message payloads.  </p>
    public let messages: [Message]?

    public init (
        channelName: String? = nil,
        messages: [Message]? = nil
    )
    {
        self.channelName = channelName
        self.messages = messages
    }
}
