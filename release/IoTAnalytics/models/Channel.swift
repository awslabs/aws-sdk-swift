// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A collection of data from an MQTT topic. Channels archive the raw, unprocessed messages
///       before publishing the data to a pipeline.</p>
public struct Channel: Equatable {
    /// <p>The ARN of the channel.</p>
    public let arn: String?
    /// <p>When the channel was created.</p>
    public let creationTime: Date?
    /// <p>The last time when a new message arrived in the channel.</p>
    ///          <p>AWS IoT Analytics updates this value at most once per minute for one channel.
    ///   Hence, the <code>lastMessageArrivalTime</code> value is an approximation.</p>
    ///          <p>This feature only applies to messages that arrived in the data store after October 23, 2020. </p>
    public let lastMessageArrivalTime: Date?
    /// <p>When the channel was last updated.</p>
    public let lastUpdateTime: Date?
    /// <p>The name of the channel.</p>
    public let name: String?
    /// <p>How long, in days, message data is kept for the channel.</p>
    public let retentionPeriod: RetentionPeriod?
    /// <p>The status of the channel.</p>
    public let status: ChannelStatus?
    /// <p>Where channel data is stored. You can choose one of <code>serviceManagedS3</code> or
    ///         <code>customerManagedS3</code> storage. If not specified, the default is
    ///         <code>serviceManagedS3</code>. You cannot change this storage option after the channel is
    ///       created.</p>
    public let storage: ChannelStorage?

    public init (
        arn: String? = nil,
        creationTime: Date? = nil,
        lastMessageArrivalTime: Date? = nil,
        lastUpdateTime: Date? = nil,
        name: String? = nil,
        retentionPeriod: RetentionPeriod? = nil,
        status: ChannelStatus? = nil,
        storage: ChannelStorage? = nil
    )
    {
        self.arn = arn
        self.creationTime = creationTime
        self.lastMessageArrivalTime = lastMessageArrivalTime
        self.lastUpdateTime = lastUpdateTime
        self.name = name
        self.retentionPeriod = retentionPeriod
        self.status = status
        self.storage = storage
    }
}
