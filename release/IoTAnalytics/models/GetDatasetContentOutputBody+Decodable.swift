// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDatasetContentOutputBody: Equatable {
    public let entries: [DatasetEntry]?
    public let timestamp: Date?
    public let status: DatasetContentStatus?
}

extension GetDatasetContentOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entries
        case status
        case timestamp
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entriesContainer = try containerValues.decodeIfPresent([DatasetEntry].self, forKey: .entries)
        var entriesDecoded0:[DatasetEntry]? = nil
        if let entriesContainer = entriesContainer {
            entriesDecoded0 = [DatasetEntry]()
            for structure0 in entriesContainer {
                entriesDecoded0?.append(structure0)
            }
        }
        entries = entriesDecoded0
        let timestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .timestamp)
        timestamp = timestampDecoded
        let statusDecoded = try containerValues.decodeIfPresent(DatasetContentStatus.self, forKey: .status)
        status = statusDecoded
    }
}
