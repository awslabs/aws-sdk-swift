// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatasetsOutputBody: Equatable {
    public let datasetSummaries: [DatasetSummary]?
    public let nextToken: String?
}

extension ListDatasetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetSummariesContainer = try containerValues.decodeIfPresent([DatasetSummary].self, forKey: .datasetSummaries)
        var datasetSummariesDecoded0:[DatasetSummary]? = nil
        if let datasetSummariesContainer = datasetSummariesContainer {
            datasetSummariesDecoded0 = [DatasetSummary]()
            for structure0 in datasetSummariesContainer {
                datasetSummariesDecoded0?.append(structure0)
            }
        }
        datasetSummaries = datasetSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
