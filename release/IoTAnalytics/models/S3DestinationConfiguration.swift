// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Configuration information for delivery of dataset contents to Amazon Simple Storage
///       Service (Amazon S3).</p>
public struct S3DestinationConfiguration: Equatable {
    /// <p>The name of the S3 bucket to which dataset contents are delivered.</p>
    public let bucket: String?
    /// <p>Configuration information for coordination with AWS Glue, a fully managed extract,
    ///       transform and load (ETL) service.</p>
    public let glueConfiguration: GlueConfiguration?
    /// <p>The key of the dataset contents object in an S3 bucket. Each object has a key that is a
    ///       unique identifier. Each object has exactly one key.</p>
    ///          <p>You can create a unique key with the following options:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Use <code>!{iotanalytics:scheduleTime}</code> to insert the time of a scheduled SQL
    ///           query run.</p>
    ///             </li>
    ///             <li>
    ///                <p>Use <code>!{iotanalytics:versionId}</code> to insert a unique hash that identifies a
    ///           dataset content.</p>
    ///             </li>
    ///             <li>
    ///                <p>Use <code>!{iotanalytics:creationTime}</code> to insert the creation time of a dataset
    ///           content.</p>
    ///             </li>
    ///          </ul>
    ///          <p>The following example creates a unique key for a CSV file:
    ///         <code>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</code>
    ///          </p>
    ///          <note>
    ///             <p>If you don't use <code>!{iotanalytics:versionId}</code> to specify the key, you might
    ///         get duplicate keys. For example, you might have two dataset contents with the same
    ///           <code>scheduleTime</code> but different <code>versionId</code>s. This means that one
    ///         dataset content overwrites the other. </p>
    ///          </note>
    public let key: String?
    /// <p>The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon
    ///       S3 and AWS Glue resources.</p>
    public let roleArn: String?

    public init (
        bucket: String? = nil,
        glueConfiguration: GlueConfiguration? = nil,
        key: String? = nil,
        roleArn: String? = nil
    )
    {
        self.bucket = bucket
        self.glueConfiguration = glueConfiguration
        self.key = key
        self.roleArn = roleArn
    }
}
