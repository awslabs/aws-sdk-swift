// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChannelsOutputBody: Equatable {
    public let channelSummaries: [ChannelSummary]?
    public let nextToken: String?
}

extension ListChannelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelSummariesContainer = try containerValues.decodeIfPresent([ChannelSummary].self, forKey: .channelSummaries)
        var channelSummariesDecoded0:[ChannelSummary]? = nil
        if let channelSummariesContainer = channelSummariesContainer {
            channelSummariesDecoded0 = [ChannelSummary]()
            for structure0 in channelSummariesContainer {
                channelSummariesDecoded0?.append(structure0)
            }
        }
        channelSummaries = channelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
