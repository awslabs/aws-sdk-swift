// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDatastoresOutputBody: Equatable {
    public let datastoreSummaries: [DatastoreSummary]?
    public let nextToken: String?
}

extension ListDatastoresOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datastoreSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datastoreSummariesContainer = try containerValues.decodeIfPresent([DatastoreSummary].self, forKey: .datastoreSummaries)
        var datastoreSummariesDecoded0:[DatastoreSummary]? = nil
        if let datastoreSummariesContainer = datastoreSummariesContainer {
            datastoreSummariesDecoded0 = [DatastoreSummary]()
            for structure0 in datastoreSummariesContainer {
                datastoreSummariesDecoded0?.append(structure0)
            }
        }
        datastoreSummaries = datastoreSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
