// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatastoreStorage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customerManagedS3
        case sdkUnknown
        case serviceManagedS3
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .customerManagedS3(customerManagedS3):
                if let customerManagedS3 = customerManagedS3 {
                    try container.encode(customerManagedS3, forKey: .customerManagedS3)
                }
            case let .serviceManagedS3(serviceManagedS3):
                if let serviceManagedS3 = serviceManagedS3 {
                    try container.encode(serviceManagedS3, forKey: .serviceManagedS3)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let serviceManagedS3Decoded = try values.decodeIfPresent(ServiceManagedDatastoreS3Storage.self, forKey: .serviceManagedS3)
        if let serviceManagedS3 = serviceManagedS3Decoded {
            self = .serviceManagedS3(serviceManagedS3)
            return
        }
        let customerManagedS3Decoded = try values.decodeIfPresent(CustomerManagedDatastoreS3Storage.self, forKey: .customerManagedS3)
        if let customerManagedS3 = customerManagedS3Decoded {
            self = .customerManagedS3(customerManagedS3)
            return
        }
        self = .sdkUnknown("")
    }
}
