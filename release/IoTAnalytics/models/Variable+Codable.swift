// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Variable: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case datasetContentVersionValue
        case doubleValue
        case name
        case outputFileUriValue
        case stringValue
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datasetContentVersionValue = datasetContentVersionValue {
            try encodeContainer.encode(datasetContentVersionValue, forKey: .datasetContentVersionValue)
        }
        if doubleValue != 0.0 {
            try encodeContainer.encode(doubleValue, forKey: .doubleValue)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let outputFileUriValue = outputFileUriValue {
            try encodeContainer.encode(outputFileUriValue, forKey: .outputFileUriValue)
        }
        if let stringValue = stringValue {
            try encodeContainer.encode(stringValue, forKey: .stringValue)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let stringValueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stringValue)
        stringValue = stringValueDecoded
        let doubleValueDecoded = try containerValues.decode(Double.self, forKey: .doubleValue)
        doubleValue = doubleValueDecoded
        let datasetContentVersionValueDecoded = try containerValues.decodeIfPresent(DatasetContentVersionValue.self, forKey: .datasetContentVersionValue)
        datasetContentVersionValue = datasetContentVersionValueDecoded
        let outputFileUriValueDecoded = try containerValues.decodeIfPresent(OutputFileUriValue.self, forKey: .outputFileUriValue)
        outputFileUriValue = outputFileUriValueDecoded
    }
}
