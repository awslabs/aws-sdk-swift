// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DatasetContentDeliveryDestination: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iotEventsDestinationConfiguration
        case s3DestinationConfiguration
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iotEventsDestinationConfiguration = iotEventsDestinationConfiguration {
            try encodeContainer.encode(iotEventsDestinationConfiguration, forKey: .iotEventsDestinationConfiguration)
        }
        if let s3DestinationConfiguration = s3DestinationConfiguration {
            try encodeContainer.encode(s3DestinationConfiguration, forKey: .s3DestinationConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iotEventsDestinationConfigurationDecoded = try containerValues.decodeIfPresent(IotEventsDestinationConfiguration.self, forKey: .iotEventsDestinationConfiguration)
        iotEventsDestinationConfiguration = iotEventsDestinationConfigurationDecoded
        let s3DestinationConfigurationDecoded = try containerValues.decodeIfPresent(S3DestinationConfiguration.self, forKey: .s3DestinationConfiguration)
        s3DestinationConfiguration = s3DestinationConfigurationDecoded
    }
}
