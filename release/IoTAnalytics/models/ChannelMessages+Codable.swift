// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChannelMessages: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case s3Paths
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let s3Paths = s3Paths {
            var s3PathsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .s3Paths)
            for s3pathchannelmessages0 in s3Paths {
                try s3PathsContainer.encode(s3pathchannelmessages0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3PathsContainer = try containerValues.decodeIfPresent([String].self, forKey: .s3Paths)
        var s3PathsDecoded0:[String]? = nil
        if let s3PathsContainer = s3PathsContainer {
            s3PathsDecoded0 = [String]()
            for string0 in s3PathsContainer {
                s3PathsDecoded0?.append(string0)
            }
        }
        s3Paths = s3PathsDecoded0
    }
}
