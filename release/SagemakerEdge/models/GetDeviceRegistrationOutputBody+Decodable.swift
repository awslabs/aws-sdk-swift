// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceRegistrationOutputBody: Equatable {
    public let deviceRegistration: String?
    public let cacheTTL: String?
}

extension GetDeviceRegistrationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cacheTTL = "CacheTTL"
        case deviceRegistration = "DeviceRegistration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceRegistrationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceRegistration)
        deviceRegistration = deviceRegistrationDecoded
        let cacheTTLDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cacheTTL)
        cacheTTL = cacheTTLDecoded
    }
}
