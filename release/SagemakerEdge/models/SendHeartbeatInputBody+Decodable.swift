// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendHeartbeatInputBody: Equatable {
    public let agentMetrics: [EdgeMetric]?
    public let models: [Model]?
    public let agentVersion: String?
    public let deviceName: String?
    public let deviceFleetName: String?
}

extension SendHeartbeatInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case agentMetrics = "AgentMetrics"
        case agentVersion = "AgentVersion"
        case deviceFleetName = "DeviceFleetName"
        case deviceName = "DeviceName"
        case models = "Models"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentMetricsContainer = try containerValues.decodeIfPresent([EdgeMetric].self, forKey: .agentMetrics)
        var agentMetricsDecoded0:[EdgeMetric]? = nil
        if let agentMetricsContainer = agentMetricsContainer {
            agentMetricsDecoded0 = [EdgeMetric]()
            for structure0 in agentMetricsContainer {
                agentMetricsDecoded0?.append(structure0)
            }
        }
        agentMetrics = agentMetricsDecoded0
        let modelsContainer = try containerValues.decodeIfPresent([Model].self, forKey: .models)
        var modelsDecoded0:[Model]? = nil
        if let modelsContainer = modelsContainer {
            modelsDecoded0 = [Model]()
            for structure0 in modelsContainer {
                modelsDecoded0?.append(structure0)
            }
        }
        models = modelsDecoded0
        let agentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentVersion)
        agentVersion = agentVersionDecoded
        let deviceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceName)
        deviceName = deviceNameDecoded
        let deviceFleetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceFleetName)
        deviceFleetName = deviceFleetNameDecoded
    }
}
