// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSchedulesOutputBody: Equatable {
    public let schedules: [Schedule]?
    public let nextToken: String?
}

extension ListSchedulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case schedules = "Schedules"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let schedulesContainer = try containerValues.decodeIfPresent([Schedule].self, forKey: .schedules)
        var schedulesDecoded0:[Schedule]? = nil
        if let schedulesContainer = schedulesContainer {
            schedulesDecoded0 = [Schedule]()
            for structure0 in schedulesContainer {
                schedulesDecoded0?.append(structure0)
            }
        }
        schedules = schedulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
