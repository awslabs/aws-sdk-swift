// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a dataset that can be processed by DataBrew.</p>
public struct Dataset: Equatable {
    /// <p>The ID of the AWS account that owns the dataset.</p>
    public let accountId: String?
    /// <p>The date and time that the dataset was created.</p>
    public let createDate: Date?
    /// <p>The Amazon Resource Name (ARN) of the user who created the dataset.</p>
    public let createdBy: String?
    /// <p>The file format of a dataset that is created from an S3 file or folder.</p>
    public let format: InputFormat?
    /// <p>A set of options that define how DataBrew interprets the data in the dataset.</p>
    public let formatOptions: FormatOptions?
    /// <p>Information on how DataBrew can find the dataset, in either the AWS Glue Data Catalog
    ///             or Amazon S3.</p>
    public let input: Input?
    /// <p>The Amazon Resource Name (ARN) of the user who last modified the dataset.</p>
    public let lastModifiedBy: String?
    /// <p>The last modification date and time of the dataset.</p>
    public let lastModifiedDate: Date?
    /// <p>The unique name of the dataset.</p>
    public let name: String?
    /// <p>A set of options that defines how DataBrew interprets an S3 path of the dataset.</p>
    public let pathOptions: PathOptions?
    /// <p>The unique Amazon Resource Name (ARN) for the dataset.</p>
    public let resourceArn: String?
    /// <p>The location of the data for the dataset, either Amazon S3 or the AWS Glue Data
    ///             Catalog.</p>
    public let source: Source?
    /// <p>Metadata tags that have been applied to the dataset.</p>
    public let tags: [String:String]?

    public init (
        accountId: String? = nil,
        createDate: Date? = nil,
        createdBy: String? = nil,
        format: InputFormat? = nil,
        formatOptions: FormatOptions? = nil,
        input: Input? = nil,
        lastModifiedBy: String? = nil,
        lastModifiedDate: Date? = nil,
        name: String? = nil,
        pathOptions: PathOptions? = nil,
        resourceArn: String? = nil,
        source: Source? = nil,
        tags: [String:String]? = nil
    )
    {
        self.accountId = accountId
        self.createDate = createDate
        self.createdBy = createdBy
        self.format = format
        self.formatOptions = formatOptions
        self.input = input
        self.lastModifiedBy = lastModifiedBy
        self.lastModifiedDate = lastModifiedDate
        self.name = name
        self.pathOptions = pathOptions
        self.resourceArn = resourceArn
        self.source = source
        self.tags = tags
    }
}
