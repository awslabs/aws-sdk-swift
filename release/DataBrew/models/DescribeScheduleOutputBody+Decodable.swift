// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScheduleOutputBody: Equatable {
    public let createDate: Date?
    public let createdBy: String?
    public let jobNames: [String]?
    public let lastModifiedBy: String?
    public let lastModifiedDate: Date?
    public let resourceArn: String?
    public let cronExpression: String?
    public let tags: [String:String]?
    public let name: String?
}

extension DescribeScheduleOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createDate = "CreateDate"
        case createdBy = "CreatedBy"
        case cronExpression = "CronExpression"
        case jobNames = "JobNames"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedDate = "LastModifiedDate"
        case name = "Name"
        case resourceArn = "ResourceArn"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let createDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createDate)
        createDate = createDateDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let jobNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .jobNames)
        var jobNamesDecoded0:[String]? = nil
        if let jobNamesContainer = jobNamesContainer {
            jobNamesDecoded0 = [String]()
            for string0 in jobNamesContainer {
                jobNamesDecoded0?.append(string0)
            }
        }
        jobNames = jobNamesDecoded0
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let lastModifiedDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedDate)
        lastModifiedDate = lastModifiedDateDecoded
        let resourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let cronExpressionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cronExpression)
        cronExpression = cronExpressionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
    }
}
