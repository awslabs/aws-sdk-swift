// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SessionStatus {
    case assigned
    case failed
    case initializing
    case provisioning
    case ready
    case recycling
    case rotating
    case terminated
    case terminating
    case updating
    case sdkUnknown(String)
}

extension SessionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SessionStatus] {
        return [
            .assigned,
            .failed,
            .initializing,
            .provisioning,
            .ready,
            .recycling,
            .rotating,
            .terminated,
            .terminating,
            .updating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .assigned: return "ASSIGNED"
        case .failed: return "FAILED"
        case .initializing: return "INITIALIZING"
        case .provisioning: return "PROVISIONING"
        case .ready: return "READY"
        case .recycling: return "RECYCLING"
        case .rotating: return "ROTATING"
        case .terminated: return "TERMINATED"
        case .terminating: return "TERMINATING"
        case .updating: return "UPDATING"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SessionStatus(rawValue: rawValue) ?? SessionStatus.sdkUnknown(rawValue)
    }
}
