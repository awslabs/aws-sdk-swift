// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeJobRunOutput: Equatable {
    /// <p>The number of times that DataBrew has attempted to run the job.</p>
    public let attempt: Int
    /// <p>The date and time when the job completed processing.</p>
    public let completedOn: Date?
    /// <p>The name of the dataset for the job to process.</p>
    public let datasetName: String?
    /// <p>A message indicating an error (if any) that was encountered when the job ran.</p>
    public let errorMessage: String?
    /// <p>The amount of time, in seconds, during which the job run consumed resources.</p>
    public let executionTime: Int
    /// <p>The name of the job being processed during this run.</p>
    public let jobName: String?
    /// <p>Sample configuration for profile jobs only. Determines the number of rows on which the
    ///             profile job will be executed. If a JobSample value is not provided, the default value
    ///             will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the
    ///             size parameter.</p>
    public let jobSample: JobSample?
    /// <p>The name of an Amazon CloudWatch log group, where the job writes diagnostic messages
    ///             when it runs.</p>
    public let logGroupName: String?
    /// <p>The current status of Amazon CloudWatch logging for the job run.</p>
    public let logSubscription: LogSubscription?
    /// <p>One or more output artifacts from a job run.</p>
    public let outputs: [Output]?
    /// <p>Represents the name and version of a DataBrew recipe.</p>
    public let recipeReference: RecipeReference?
    /// <p>The unique identifier of the job run.</p>
    public let runId: String?
    /// <p>The Amazon Resource Name (ARN) of the user who started the job run.</p>
    public let startedBy: String?
    /// <p>The date and time when the job run began.</p>
    public let startedOn: Date?
    /// <p>The current state of the job run entity itself.</p>
    public let state: JobRunState?

    public init (
        attempt: Int = 0,
        completedOn: Date? = nil,
        datasetName: String? = nil,
        errorMessage: String? = nil,
        executionTime: Int = 0,
        jobName: String? = nil,
        jobSample: JobSample? = nil,
        logGroupName: String? = nil,
        logSubscription: LogSubscription? = nil,
        outputs: [Output]? = nil,
        recipeReference: RecipeReference? = nil,
        runId: String? = nil,
        startedBy: String? = nil,
        startedOn: Date? = nil,
        state: JobRunState? = nil
    )
    {
        self.attempt = attempt
        self.completedOn = completedOn
        self.datasetName = datasetName
        self.errorMessage = errorMessage
        self.executionTime = executionTime
        self.jobName = jobName
        self.jobSample = jobSample
        self.logGroupName = logGroupName
        self.logSubscription = logSubscription
        self.outputs = outputs
        self.recipeReference = recipeReference
        self.runId = runId
        self.startedBy = startedBy
        self.startedOn = startedOn
        self.state = state
    }
}
