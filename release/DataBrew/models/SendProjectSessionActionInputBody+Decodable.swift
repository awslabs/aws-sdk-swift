// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendProjectSessionActionInputBody: Equatable {
    public let preview: Bool
    public let recipeStep: RecipeStep?
    public let stepIndex: Int?
    public let clientSessionId: String?
    public let viewFrame: ViewFrame?
}

extension SendProjectSessionActionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientSessionId = "ClientSessionId"
        case preview = "Preview"
        case recipeStep = "RecipeStep"
        case stepIndex = "StepIndex"
        case viewFrame = "ViewFrame"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let previewDecoded = try containerValues.decode(Bool.self, forKey: .preview)
        preview = previewDecoded
        let recipeStepDecoded = try containerValues.decodeIfPresent(RecipeStep.self, forKey: .recipeStep)
        recipeStep = recipeStepDecoded
        let stepIndexDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .stepIndex)
        stepIndex = stepIndexDecoded
        let clientSessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientSessionId)
        clientSessionId = clientSessionIdDecoded
        let viewFrameDecoded = try containerValues.decodeIfPresent(ViewFrame.self, forKey: .viewFrame)
        viewFrame = viewFrameDecoded
    }
}
