// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ViewFrame: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case columnRange = "ColumnRange"
        case hiddenColumns = "HiddenColumns"
        case startColumnIndex = "StartColumnIndex"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let columnRange = columnRange {
            try encodeContainer.encode(columnRange, forKey: .columnRange)
        }
        if let hiddenColumns = hiddenColumns {
            var hiddenColumnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .hiddenColumns)
            for hiddencolumnlist0 in hiddenColumns {
                try hiddenColumnsContainer.encode(hiddencolumnlist0)
            }
        }
        if let startColumnIndex = startColumnIndex {
            try encodeContainer.encode(startColumnIndex, forKey: .startColumnIndex)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let startColumnIndexDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .startColumnIndex)
        startColumnIndex = startColumnIndexDecoded
        let columnRangeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .columnRange)
        columnRange = columnRangeDecoded
        let hiddenColumnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .hiddenColumns)
        var hiddenColumnsDecoded0:[String]? = nil
        if let hiddenColumnsContainer = hiddenColumnsContainer {
            hiddenColumnsDecoded0 = [String]()
            for string0 in hiddenColumnsContainer {
                hiddenColumnsDecoded0?.append(string0)
            }
        }
        hiddenColumns = hiddenColumnsDecoded0
    }
}
