// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Input: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataCatalogInputDefinition = "DataCatalogInputDefinition"
        case databaseInputDefinition = "DatabaseInputDefinition"
        case s3InputDefinition = "S3InputDefinition"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataCatalogInputDefinition = dataCatalogInputDefinition {
            try encodeContainer.encode(dataCatalogInputDefinition, forKey: .dataCatalogInputDefinition)
        }
        if let databaseInputDefinition = databaseInputDefinition {
            try encodeContainer.encode(databaseInputDefinition, forKey: .databaseInputDefinition)
        }
        if let s3InputDefinition = s3InputDefinition {
            try encodeContainer.encode(s3InputDefinition, forKey: .s3InputDefinition)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3InputDefinitionDecoded = try containerValues.decodeIfPresent(S3Location.self, forKey: .s3InputDefinition)
        s3InputDefinition = s3InputDefinitionDecoded
        let dataCatalogInputDefinitionDecoded = try containerValues.decodeIfPresent(DataCatalogInputDefinition.self, forKey: .dataCatalogInputDefinition)
        dataCatalogInputDefinition = dataCatalogInputDefinitionDecoded
        let databaseInputDefinitionDecoded = try containerValues.decodeIfPresent(DatabaseInputDefinition.self, forKey: .databaseInputDefinition)
        databaseInputDefinition = databaseInputDefinitionDecoded
    }
}
