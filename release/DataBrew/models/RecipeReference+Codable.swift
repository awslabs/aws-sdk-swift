// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RecipeReference: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case recipeVersion = "RecipeVersion"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let recipeVersion = recipeVersion {
            try encodeContainer.encode(recipeVersion, forKey: .recipeVersion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let recipeVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recipeVersion)
        recipeVersion = recipeVersionDecoded
    }
}
