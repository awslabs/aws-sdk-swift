// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHarvestJobsOutputBody: Equatable {
    public let harvestJobs: [HarvestJob]?
    public let nextToken: String?
}

extension ListHarvestJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case harvestJobs = "harvestJobs"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let harvestJobsContainer = try containerValues.decodeIfPresent([HarvestJob].self, forKey: .harvestJobs)
        var harvestJobsDecoded0:[HarvestJob]? = nil
        if let harvestJobsContainer = harvestJobsContainer {
            harvestJobsDecoded0 = [HarvestJob]()
            for structure0 in harvestJobsContainer {
                harvestJobsDecoded0?.append(structure0)
            }
        }
        harvestJobs = harvestJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
