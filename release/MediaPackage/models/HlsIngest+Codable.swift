// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HlsIngest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ingestEndpoints = "ingestEndpoints"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ingestEndpoints = ingestEndpoints {
            var ingestEndpointsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ingestEndpoints)
            for __listofingestendpoint0 in ingestEndpoints {
                try ingestEndpointsContainer.encode(__listofingestendpoint0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ingestEndpointsContainer = try containerValues.decodeIfPresent([IngestEndpoint].self, forKey: .ingestEndpoints)
        var ingestEndpointsDecoded0:[IngestEndpoint]? = nil
        if let ingestEndpointsContainer = ingestEndpointsContainer {
            ingestEndpointsDecoded0 = [IngestEndpoint]()
            for structure0 in ingestEndpointsContainer {
                ingestEndpointsDecoded0?.append(structure0)
            }
        }
        ingestEndpoints = ingestEndpointsDecoded0
    }
}
