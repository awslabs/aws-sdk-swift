// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeHarvestJobOutput: Equatable {
    /// The Amazon Resource Name (ARN) assigned to the HarvestJob.
    public let arn: String?
    /// The ID of the Channel that the HarvestJob will harvest from.
    public let channelId: String?
    /// The time the HarvestJob was submitted
    public let createdAt: String?
    /// The end of the time-window which will be harvested.
    public let endTime: String?
    /// The ID of the HarvestJob. The ID must be unique within the region
    /// and it cannot be changed after the HarvestJob is submitted.
    public let id: String?
    /// The ID of the OriginEndpoint that the HarvestJob will harvest from.
    /// This cannot be changed after the HarvestJob is submitted.
    public let originEndpointId: String?
    /// Configuration parameters for where in an S3 bucket to place the harvested content
    public let s3Destination: S3Destination?
    /// The start of the time-window which will be harvested.
    public let startTime: String?
    /// The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
    /// HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
    /// include an explanation of why the HarvestJob failed.
    public let status: Status?

    public init (
        arn: String? = nil,
        channelId: String? = nil,
        createdAt: String? = nil,
        endTime: String? = nil,
        id: String? = nil,
        originEndpointId: String? = nil,
        s3Destination: S3Destination? = nil,
        startTime: String? = nil,
        status: Status? = nil
    )
    {
        self.arn = arn
        self.channelId = channelId
        self.createdAt = createdAt
        self.endTime = endTime
        self.id = id
        self.originEndpointId = originEndpointId
        self.s3Destination = s3Destination
        self.startTime = startTime
        self.status = status
    }
}
