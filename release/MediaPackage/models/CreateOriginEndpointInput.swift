// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Configuration parameters used to create a new OriginEndpoint.
public struct CreateOriginEndpointInput: Equatable {
    /// CDN Authorization credentials
    public let authorization: Authorization?
    /// The ID of the Channel that the OriginEndpoint will be associated with.
    /// This cannot be changed after the OriginEndpoint is created.
    public let channelId: String?
    /// A Common Media Application Format (CMAF) packaging configuration.
    public let cmafPackage: CmafPackageCreateOrUpdateParameters?
    /// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    public let dashPackage: DashPackage?
    /// A short text description of the OriginEndpoint.
    public let description: String?
    /// An HTTP Live Streaming (HLS) packaging configuration.
    public let hlsPackage: HlsPackage?
    /// The ID of the OriginEndpoint.  The ID must be unique within the region
    /// and it cannot be changed after the OriginEndpoint is created.
    public let id: String?
    /// A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").
    public let manifestName: String?
    /// A Microsoft Smooth Streaming (MSS) packaging configuration.
    public let mssPackage: MssPackage?
    /// Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
    /// may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
    /// requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
    public let origination: Origination?
    /// Maximum duration (seconds) of content to retain for startover playback.
    /// If not specified, startover playback will be disabled for the OriginEndpoint.
    public let startoverWindowSeconds: Int
    /// A collection of tags associated with a resource
    public let tags: [String:String]?
    /// Amount of delay (seconds) to enforce on the playback of live content.
    /// If not specified, there will be no time delay in effect for the OriginEndpoint.
    public let timeDelaySeconds: Int
    /// A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
    public let whitelist: [String]?

    public init (
        authorization: Authorization? = nil,
        channelId: String? = nil,
        cmafPackage: CmafPackageCreateOrUpdateParameters? = nil,
        dashPackage: DashPackage? = nil,
        description: String? = nil,
        hlsPackage: HlsPackage? = nil,
        id: String? = nil,
        manifestName: String? = nil,
        mssPackage: MssPackage? = nil,
        origination: Origination? = nil,
        startoverWindowSeconds: Int = 0,
        tags: [String:String]? = nil,
        timeDelaySeconds: Int = 0,
        whitelist: [String]? = nil
    )
    {
        self.authorization = authorization
        self.channelId = channelId
        self.cmafPackage = cmafPackage
        self.dashPackage = dashPackage
        self.description = description
        self.hlsPackage = hlsPackage
        self.id = id
        self.manifestName = manifestName
        self.mssPackage = mssPackage
        self.origination = origination
        self.startoverWindowSeconds = startoverWindowSeconds
        self.tags = tags
        self.timeDelaySeconds = timeDelaySeconds
        self.whitelist = whitelist
    }
}
