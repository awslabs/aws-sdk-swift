// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>AWS Fault Injection Simulator is a managed service that enables you to perform fault injection
///            experiments on your AWS workloads. For more information, see the <a href="https://docs.aws.amazon.com/fis/latest/userguide/">AWS Fault Injection Simulator User Guide</a>.</p>
public protocol FisClientProtocol {
    /// <p>Creates an experiment template. </p>
    ///          <p>To create a template, specify the following information: </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Targets</b>: A target can be a specific resource
    ///                in your AWS environment, or one or more resources that match criteria that you
    ///                specify, for example, resources that have specific tags.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Actions</b>: The actions to carry out on the
    ///                target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Stop conditions</b>: If a stop condition is
    ///                triggered while an experiment is running, the experiment is automatically
    ///                stopped. You can define a stop condition as a CloudWatch alarm.</p>
    ///             </li>
    ///          </ul>
    ///          <p>For more information, see the <a href="https://docs.aws.amazon.com/fis/latest/userguide/">AWS Fault Injection Simulator User Guide</a>.</p>
    func createExperimentTemplate(input: CreateExperimentTemplateInput, completion: @escaping (SdkResult<CreateExperimentTemplateOutputResponse, CreateExperimentTemplateOutputError>) -> Void)
    /// <p>Deletes the specified experiment template.</p>
    func deleteExperimentTemplate(input: DeleteExperimentTemplateInput, completion: @escaping (SdkResult<DeleteExperimentTemplateOutputResponse, DeleteExperimentTemplateOutputError>) -> Void)
    /// <p>Gets information about the specified AWS FIS action.</p>
    func getAction(input: GetActionInput, completion: @escaping (SdkResult<GetActionOutputResponse, GetActionOutputError>) -> Void)
    /// <p>Gets information about the specified experiment.</p>
    func getExperiment(input: GetExperimentInput, completion: @escaping (SdkResult<GetExperimentOutputResponse, GetExperimentOutputError>) -> Void)
    /// <p>Gets information about the specified experiment template.</p>
    func getExperimentTemplate(input: GetExperimentTemplateInput, completion: @escaping (SdkResult<GetExperimentTemplateOutputResponse, GetExperimentTemplateOutputError>) -> Void)
    /// <p>Lists the available AWS FIS actions.</p>
    func listActions(input: ListActionsInput, completion: @escaping (SdkResult<ListActionsOutputResponse, ListActionsOutputError>) -> Void)
    /// <p>Lists your experiments.</p>
    func listExperiments(input: ListExperimentsInput, completion: @escaping (SdkResult<ListExperimentsOutputResponse, ListExperimentsOutputError>) -> Void)
    /// <p>Lists your experiment templates.</p>
    func listExperimentTemplates(input: ListExperimentTemplatesInput, completion: @escaping (SdkResult<ListExperimentTemplatesOutputResponse, ListExperimentTemplatesOutputError>) -> Void)
    /// <p>Lists the tags for the specified resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Starts running an experiment from the specified experiment template.</p>
    func startExperiment(input: StartExperimentInput, completion: @escaping (SdkResult<StartExperimentOutputResponse, StartExperimentOutputError>) -> Void)
    /// <p>Stops the specified experiment.</p>
    func stopExperiment(input: StopExperimentInput, completion: @escaping (SdkResult<StopExperimentOutputResponse, StopExperimentOutputError>) -> Void)
    /// <p>Applies the specified tags to the specified resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes the specified tags from the specified resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates the specified experiment template.</p>
    func updateExperimentTemplate(input: UpdateExperimentTemplateInput, completion: @escaping (SdkResult<UpdateExperimentTemplateOutputResponse, UpdateExperimentTemplateOutputError>) -> Void)
}
