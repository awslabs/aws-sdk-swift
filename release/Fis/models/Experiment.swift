// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an experiment.</p>
public struct Experiment: Equatable {
    /// <p>The actions for the experiment.</p>
    public let actions: [String:ExperimentAction]?
    /// <p>The time the experiment was created.</p>
    public let creationTime: Date?
    /// <p>The time that the experiment ended.</p>
    public let endTime: Date?
    /// <p>The ID of the experiment template.</p>
    public let experimentTemplateId: String?
    /// <p>The ID of the experiment.</p>
    public let id: String?
    /// <p>The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.</p>
    public let roleArn: String?
    /// <p>The time that the experiment was started.</p>
    public let startTime: Date?
    /// <p>The state of the experiment.</p>
    public let state: ExperimentState?
    /// <p>The stop conditions for the experiment.</p>
    public let stopConditions: [ExperimentStopCondition]?
    /// <p>The tags for the experiment.</p>
    public let tags: [String:String]?
    /// <p>The targets for the experiment.</p>
    public let targets: [String:ExperimentTarget]?

    public init (
        actions: [String:ExperimentAction]? = nil,
        creationTime: Date? = nil,
        endTime: Date? = nil,
        experimentTemplateId: String? = nil,
        id: String? = nil,
        roleArn: String? = nil,
        startTime: Date? = nil,
        state: ExperimentState? = nil,
        stopConditions: [ExperimentStopCondition]? = nil,
        tags: [String:String]? = nil,
        targets: [String:ExperimentTarget]? = nil
    )
    {
        self.actions = actions
        self.creationTime = creationTime
        self.endTime = endTime
        self.experimentTemplateId = experimentTemplateId
        self.id = id
        self.roleArn = roleArn
        self.startTime = startTime
        self.state = state
        self.stopConditions = stopConditions
        self.tags = tags
        self.targets = targets
    }
}
