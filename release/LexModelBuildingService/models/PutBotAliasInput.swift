// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutBotAliasInput: Equatable {
    /// <p>The name of the bot.</p>
    public let botName: String?
    /// <p>The version of the bot.</p>
    public let botVersion: String?
    /// <p>Identifies a specific revision of the <code>$LATEST</code>
    ///       version.</p>
    ///          <p>When you create a new bot alias, leave the <code>checksum</code>
    ///       field blank. If you specify a checksum you get a
    ///         <code>BadRequestException</code> exception.</p>
    ///          <p>When you want to update a bot alias, set the <code>checksum</code>
    ///       field to the checksum of the most recent revision of the
    ///         <code>$LATEST</code> version. If you don't specify the <code>
    ///         checksum</code> field, or if the checksum does not match the
    ///         <code>$LATEST</code> version, you get a
    ///         <code>PreconditionFailedException</code> exception.</p>
    public let checksum: String?
    /// <p>Settings for conversation logs for the alias.</p>
    public let conversationLogs: ConversationLogsRequest?
    /// <p>A description of the alias.</p>
    public let description: String?
    /// <p>The name of the alias. The name is <i>not</i> case
    ///       sensitive.</p>
    public let name: String?
    /// <p>A list of tags to add to the bot alias. You can only add tags when you
    ///       create an alias, you can't use the <code>PutBotAlias</code> operation to
    ///       update the tags on a bot alias. To update tags, use the
    ///         <code>TagResource</code> operation.</p>
    public let tags: [Tag]?

    public init (
        botName: String? = nil,
        botVersion: String? = nil,
        checksum: String? = nil,
        conversationLogs: ConversationLogsRequest? = nil,
        description: String? = nil,
        name: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.botName = botName
        self.botVersion = botVersion
        self.checksum = checksum
        self.conversationLogs = conversationLogs
        self.description = description
        self.name = name
        self.tags = tags
    }
}
