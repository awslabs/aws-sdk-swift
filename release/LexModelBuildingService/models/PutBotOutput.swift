// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutBotOutput: Equatable {
    /// <p>The message that Amazon Lex uses to cancel a conversation. For more
    ///       information, see <a>PutBot</a>.</p>
    public let abortStatement: Statement?
    /// <p>Checksum of the bot that you created.</p>
    public let checksum: String?
    /// <p>For each Amazon Lex bot created with the Amazon Lex Model Building Service,
    ///       you must specify whether your use of Amazon Lex is related to a website,
    ///       program, or other application that is directed or targeted, in whole or in
    ///       part, to children under age 13 and subject to the Children's Online
    ///       Privacy Protection Act (COPPA) by specifying <code>true</code> or
    ///         <code>false</code> in the <code>childDirected</code> field. By
    ///       specifying <code>true</code> in the <code>childDirected</code> field, you
    ///       confirm that your use of Amazon Lex <b>is</b> related
    ///       to a website, program, or other application that is directed or targeted,
    ///       in whole or in part, to children under age 13 and subject to COPPA. By
    ///       specifying <code>false</code> in the <code>childDirected</code> field, you
    ///       confirm that your use of Amazon Lex <b>is not</b>
    ///       related to a website, program, or other application that is directed or
    ///       targeted, in whole or in part, to children under age 13 and subject to
    ///       COPPA. You may not specify a default value for the
    ///         <code>childDirected</code> field that does not accurately reflect
    ///       whether your use of Amazon Lex is related to a website, program, or other
    ///       application that is directed or targeted, in whole or in part, to children
    ///       under age 13 and subject to COPPA.</p>
    ///          <p>If your use of Amazon Lex relates to a website, program, or other
    ///       application that is directed in whole or in part, to children under age
    ///       13, you must obtain any required verifiable parental consent under COPPA.
    ///       For information regarding the use of Amazon Lex in connection with websites,
    ///       programs, or other applications that are directed or targeted, in whole or
    ///       in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon Lex FAQ.</a>
    ///          </p>
    public let childDirected: Bool?
    /// <p> The prompts that Amazon Lex uses when it doesn't understand the user's
    ///       intent. For more information, see <a>PutBot</a>. </p>
    public let clarificationPrompt: Prompt?
    /// <p>
    ///             <code>True</code> if a new version of the bot was created. If the
    ///         <code>createVersion</code> field was not specified in the request, the
    ///         <code>createVersion</code> field is set to false in the
    ///       response.</p>
    public let createVersion: Bool?
    /// <p>The date that the bot was created.</p>
    public let createdDate: Date?
    /// <p>A description of the bot.</p>
    public let description: String?
    /// <p>
    ///             <code>true</code> if the bot is configured to send user utterances to
    ///       Amazon Comprehend for sentiment analysis. If the
    ///         <code>detectSentiment</code> field was not specified in the request, the
    ///         <code>detectSentiment</code> field is <code>false</code> in the
    ///       response.</p>
    public let detectSentiment: Bool?
    /// <p>Indicates whether the bot uses accuracy improvements.
    ///         <code>true</code> indicates that the bot is using the improvements,
    ///       otherwise, <code>false</code>.</p>
    public let enableModelImprovements: Bool?
    /// <p>If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the
    ///       reason that it failed to build the bot.</p>
    public let failureReason: String?
    /// <p>The maximum length of time that Amazon Lex retains the data gathered in
    ///       a conversation. For more information, see <a>PutBot</a>.</p>
    public let idleSessionTTLInSeconds: Int?
    /// <p>An array of <code>Intent</code> objects. For more information, see
    ///         <a>PutBot</a>.</p>
    public let intents: [Intent]?
    /// <p>The date that the bot was updated. When you create a resource, the
    ///       creation date and last updated date are the same.</p>
    public let lastUpdatedDate: Date?
    /// <p> The target locale for the bot. </p>
    public let locale: Locale?
    /// <p>The name of the bot.</p>
    public let name: String?
    /// <p>The score that determines where Amazon Lex inserts the
    ///         <code>AMAZON.FallbackIntent</code>,
    ///         <code>AMAZON.KendraSearchIntent</code>, or both when returning
    ///       alternative intents in a <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html">PostContent</a> or
    ///         <a href="https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html">PostText</a> response.
    ///         <code>AMAZON.FallbackIntent</code> is inserted if the confidence score
    ///       for all intents is below this value.
    ///         <code>AMAZON.KendraSearchIntent</code> is only inserted if it is
    ///       configured for the bot.</p>
    public let nluIntentConfidenceThreshold: Double?
    /// <p> When you send a request to create a bot with
    ///         <code>processBehavior</code> set to <code>BUILD</code>, Amazon Lex sets the
    ///         <code>status</code> response element to <code>BUILDING</code>.</p>
    ///          <p>In the <code>READY_BASIC_TESTING</code> state you can test the bot
    ///       with user inputs that exactly match the utterances configured for the
    ///       bot's intents and values in the slot types.</p>
    ///          <p>If Amazon Lex can't build the bot, Amazon Lex sets <code>status</code> to
    ///         <code>FAILED</code>. Amazon Lex returns the reason for the failure in the
    ///         <code>failureReason</code> response element. </p>
    ///          <p>When you set <code>processBehavior</code> to <code>SAVE</code>,
    ///       Amazon Lex sets the status code to <code>NOT BUILT</code>.</p>
    ///          <p>When the bot is in the <code>READY</code> state you can test and
    ///       publish the bot.</p>
    public let status: Status?
    /// <p>A list of tags associated with the bot.</p>
    public let tags: [Tag]?
    /// <p>The version of the bot. For a new bot, the version is always
    ///         <code>$LATEST</code>.</p>
    public let version: String?
    /// <p>The Amazon Polly voice ID that Amazon Lex uses for voice interaction
    ///       with the user. For more information, see <a>PutBot</a>.</p>
    public let voiceId: String?

    public init (
        abortStatement: Statement? = nil,
        checksum: String? = nil,
        childDirected: Bool? = nil,
        clarificationPrompt: Prompt? = nil,
        createVersion: Bool? = nil,
        createdDate: Date? = nil,
        description: String? = nil,
        detectSentiment: Bool? = nil,
        enableModelImprovements: Bool? = nil,
        failureReason: String? = nil,
        idleSessionTTLInSeconds: Int? = nil,
        intents: [Intent]? = nil,
        lastUpdatedDate: Date? = nil,
        locale: Locale? = nil,
        name: String? = nil,
        nluIntentConfidenceThreshold: Double? = nil,
        status: Status? = nil,
        tags: [Tag]? = nil,
        version: String? = nil,
        voiceId: String? = nil
    )
    {
        self.abortStatement = abortStatement
        self.checksum = checksum
        self.childDirected = childDirected
        self.clarificationPrompt = clarificationPrompt
        self.createVersion = createVersion
        self.createdDate = createdDate
        self.description = description
        self.detectSentiment = detectSentiment
        self.enableModelImprovements = enableModelImprovements
        self.failureReason = failureReason
        self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
        self.intents = intents
        self.lastUpdatedDate = lastUpdatedDate
        self.locale = locale
        self.name = name
        self.nluIntentConfidenceThreshold = nluIntentConfidenceThreshold
        self.status = status
        self.tags = tags
        self.version = version
        self.voiceId = voiceId
    }
}
