// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CodeHook: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case messageVersion
        case uri
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let messageVersion = messageVersion {
            try encodeContainer.encode(messageVersion, forKey: .messageVersion)
        }
        if let uri = uri {
            try encodeContainer.encode(uri, forKey: .uri)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let uriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .uri)
        uri = uriDecoded
        let messageVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .messageVersion)
        messageVersion = messageVersionDecoded
    }
}
