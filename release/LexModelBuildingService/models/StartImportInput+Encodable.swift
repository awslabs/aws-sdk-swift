// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartImportInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case mergeStrategy
        case payload
        case resourceType
        case tags
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let mergeStrategy = mergeStrategy {
            try encodeContainer.encode(mergeStrategy.rawValue, forKey: .mergeStrategy)
        }
        if let payload = payload {
            try encodeContainer.encode(payload.base64EncodedString(), forKey: .payload)
        }
        if let resourceType = resourceType {
            try encodeContainer.encode(resourceType.rawValue, forKey: .resourceType)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
