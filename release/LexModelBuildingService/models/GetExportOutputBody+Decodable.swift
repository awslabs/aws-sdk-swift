// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExportOutputBody: Equatable {
    public let name: String?
    public let version: String?
    public let resourceType: ResourceType?
    public let exportType: ExportType?
    public let exportStatus: ExportStatus?
    public let failureReason: String?
    public let url: String?
}

extension GetExportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exportStatus
        case exportType
        case failureReason
        case name
        case resourceType
        case url
        case version
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let exportTypeDecoded = try containerValues.decodeIfPresent(ExportType.self, forKey: .exportType)
        exportType = exportTypeDecoded
        let exportStatusDecoded = try containerValues.decodeIfPresent(ExportStatus.self, forKey: .exportStatus)
        exportStatus = exportStatusDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let urlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .url)
        url = urlDecoded
    }
}
