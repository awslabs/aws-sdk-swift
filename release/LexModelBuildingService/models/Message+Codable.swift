// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Message: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case content
        case contentType
        case groupNumber
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let content = content {
            try encodeContainer.encode(content, forKey: .content)
        }
        if let contentType = contentType {
            try encodeContainer.encode(contentType.rawValue, forKey: .contentType)
        }
        if let groupNumber = groupNumber {
            try encodeContainer.encode(groupNumber, forKey: .groupNumber)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contentTypeDecoded = try containerValues.decodeIfPresent(ContentType.self, forKey: .contentType)
        contentType = contentTypeDecoded
        let contentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .content)
        content = contentDecoded
        let groupNumberDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .groupNumber)
        groupNumber = groupNumberDecoded
    }
}
