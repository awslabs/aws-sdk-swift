// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetBotAliasesInput: Equatable {
    /// <p>The name of the bot.</p>
    public let botName: String?
    /// <p>The maximum number of aliases to return in the response. The
    ///       default is 50. . </p>
    public let maxResults: Int?
    /// <p>Substring to match in bot alias names. An alias will be returned if
    ///       any part of its name matches the substring. For example, "xyz" matches
    ///       both "xyzabc" and "abcxyz."</p>
    public let nameContains: String?
    /// <p>A pagination token for fetching the next page of aliases. If the
    ///       response to this call is truncated, Amazon Lex returns a pagination token in
    ///       the response. To fetch the next page of aliases, specify the pagination
    ///       token in the next request. </p>
    public let nextToken: String?

    public init (
        botName: String? = nil,
        maxResults: Int? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil
    )
    {
        self.botName = botName
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
    }
}
