// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FollowUpPrompt: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case prompt
        case rejectionStatement
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let prompt = prompt {
            try encodeContainer.encode(prompt, forKey: .prompt)
        }
        if let rejectionStatement = rejectionStatement {
            try encodeContainer.encode(rejectionStatement, forKey: .rejectionStatement)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let promptDecoded = try containerValues.decodeIfPresent(Prompt.self, forKey: .prompt)
        prompt = promptDecoded
        let rejectionStatementDecoded = try containerValues.decodeIfPresent(Statement.self, forKey: .rejectionStatement)
        rejectionStatement = rejectionStatementDecoded
    }
}
