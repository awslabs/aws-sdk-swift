// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateBotVersionOutput: Equatable {
    /// <p>The message that Amazon Lex uses to cancel a conversation. For more
    ///       information, see <a>PutBot</a>.</p>
    public let abortStatement: Statement?
    /// <p>Checksum identifying the version of the bot that was
    ///       created.</p>
    public let checksum: String?
    /// <p>For each Amazon Lex bot created with the Amazon Lex Model Building Service,
    ///       you must specify whether your use of Amazon Lex is related to a website,
    ///       program, or other application that is directed or targeted, in whole or in
    ///       part, to children under age 13 and subject to the Children's Online
    ///       Privacy Protection Act (COPPA) by specifying <code>true</code> or
    ///         <code>false</code> in the <code>childDirected</code> field. By
    ///       specifying <code>true</code> in the <code>childDirected</code> field, you
    ///       confirm that your use of Amazon Lex <b>is</b> related
    ///       to a website, program, or other application that is directed or targeted,
    ///       in whole or in part, to children under age 13 and subject to COPPA. By
    ///       specifying <code>false</code> in the <code>childDirected</code> field, you
    ///       confirm that your use of Amazon Lex <b>is not</b>
    ///       related to a website, program, or other application that is directed or
    ///       targeted, in whole or in part, to children under age 13 and subject to
    ///       COPPA. You may not specify a default value for the
    ///         <code>childDirected</code> field that does not accurately reflect
    ///       whether your use of Amazon Lex is related to a website, program, or other
    ///       application that is directed or targeted, in whole or in part, to children
    ///       under age 13 and subject to COPPA.</p>
    ///          <p>If your use of Amazon Lex relates to a website, program, or other
    ///       application that is directed in whole or in part, to children under age
    ///       13, you must obtain any required verifiable parental consent under COPPA.
    ///       For information regarding the use of Amazon Lex in connection with websites,
    ///       programs, or other applications that are directed or targeted, in whole or
    ///       in part, to children under age 13, see the <a href="https://aws.amazon.com/lex/faqs#data-security">Amazon Lex FAQ.</a>
    ///          </p>
    public let childDirected: Bool?
    /// <p>The message that Amazon Lex uses when it doesn't understand the user's
    ///       request. For more information, see <a>PutBot</a>. </p>
    public let clarificationPrompt: Prompt?
    /// <p>The date when the bot version was created.</p>
    public let createdDate: Date?
    /// <p>A description of the bot.</p>
    public let description: String?
    /// <p>Indicates whether utterances entered by the user should be sent to
    ///       Amazon Comprehend for sentiment analysis.</p>
    public let detectSentiment: Bool?
    /// <p>Indicates whether the bot uses accuracy improvements.
    ///         <code>true</code> indicates that the bot is using the improvements,
    ///       otherwise, <code>false</code>.</p>
    public let enableModelImprovements: Bool?
    /// <p>If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the
    ///       reason that it failed to build the bot.</p>
    public let failureReason: String?
    /// <p>The maximum time in seconds that Amazon Lex retains the data gathered in
    ///       a conversation. For more information, see <a>PutBot</a>.</p>
    public let idleSessionTTLInSeconds: Int?
    /// <p>An array of <code>Intent</code> objects. For more information, see
    ///         <a>PutBot</a>.</p>
    public let intents: [Intent]?
    /// <p>The date when the <code>$LATEST</code> version of this bot was
    ///       updated. </p>
    public let lastUpdatedDate: Date?
    /// <p> Specifies the target locale for the bot. </p>
    public let locale: Locale?
    /// <p>The name of the bot.</p>
    public let name: String?
    /// <p> When you send a request to create or update a bot, Amazon Lex sets the
    ///         <code>status</code> response element to <code>BUILDING</code>. After
    ///       Amazon Lex builds the bot, it sets <code>status</code> to <code>READY</code>.
    ///       If Amazon Lex can't build the bot, it sets <code>status</code> to
    ///         <code>FAILED</code>. Amazon Lex returns the reason for the failure in the
    ///         <code>failureReason</code> response element. </p>
    public let status: Status?
    /// <p>The version of the bot. </p>
    public let version: String?
    /// <p>The Amazon Polly voice ID that Amazon Lex uses for voice interactions
    ///       with the user.</p>
    public let voiceId: String?

    public init (
        abortStatement: Statement? = nil,
        checksum: String? = nil,
        childDirected: Bool? = nil,
        clarificationPrompt: Prompt? = nil,
        createdDate: Date? = nil,
        description: String? = nil,
        detectSentiment: Bool? = nil,
        enableModelImprovements: Bool? = nil,
        failureReason: String? = nil,
        idleSessionTTLInSeconds: Int? = nil,
        intents: [Intent]? = nil,
        lastUpdatedDate: Date? = nil,
        locale: Locale? = nil,
        name: String? = nil,
        status: Status? = nil,
        version: String? = nil,
        voiceId: String? = nil
    )
    {
        self.abortStatement = abortStatement
        self.checksum = checksum
        self.childDirected = childDirected
        self.clarificationPrompt = clarificationPrompt
        self.createdDate = createdDate
        self.description = description
        self.detectSentiment = detectSentiment
        self.enableModelImprovements = enableModelImprovements
        self.failureReason = failureReason
        self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
        self.intents = intents
        self.lastUpdatedDate = lastUpdatedDate
        self.locale = locale
        self.name = name
        self.status = status
        self.version = version
        self.voiceId = voiceId
    }
}
