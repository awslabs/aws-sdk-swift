// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetImportOutputBody: Equatable {
    public let name: String?
    public let resourceType: ResourceType?
    public let mergeStrategy: MergeStrategy?
    public let importId: String?
    public let importStatus: ImportStatus?
    public let failureReason: [String]?
    public let createdDate: Date?
}

extension GetImportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdDate
        case failureReason
        case importId
        case importStatus
        case mergeStrategy
        case name
        case resourceType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let resourceTypeDecoded = try containerValues.decodeIfPresent(ResourceType.self, forKey: .resourceType)
        resourceType = resourceTypeDecoded
        let mergeStrategyDecoded = try containerValues.decodeIfPresent(MergeStrategy.self, forKey: .mergeStrategy)
        mergeStrategy = mergeStrategyDecoded
        let importIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .importId)
        importId = importIdDecoded
        let importStatusDecoded = try containerValues.decodeIfPresent(ImportStatus.self, forKey: .importStatus)
        importStatus = importStatusDecoded
        let failureReasonContainer = try containerValues.decodeIfPresent([String].self, forKey: .failureReason)
        var failureReasonDecoded0:[String]? = nil
        if let failureReasonContainer = failureReasonContainer {
            failureReasonDecoded0 = [String]()
            for string0 in failureReasonContainer {
                failureReasonDecoded0?.append(string0)
            }
        }
        failureReason = failureReasonDecoded0
        let createdDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdDate)
        createdDate = createdDateDecoded
    }
}
