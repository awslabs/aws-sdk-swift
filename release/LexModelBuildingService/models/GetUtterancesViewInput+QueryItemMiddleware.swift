// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetUtterancesViewInputQueryItemMiddleware: Middleware {
    public let id: String = "GetUtterancesViewInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetUtterancesViewInput>,
                  next: H) -> Swift.Result<OperationOutput<GetUtterancesViewOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        input.builder.withQueryItem(URLQueryItem(name: "view", value: "aggregation"))
        if let statusType = input.operationInput.statusType {
            let statusTypeQueryItem = URLQueryItem(name: "status_type".urlPercentEncoding(), value: String(statusType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(statusTypeQueryItem)
        }
        if let botVersions = input.operationInput.botVersions {
            botVersions.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "bot_versions".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetUtterancesViewInput>
    public typealias MOutput = OperationOutput<GetUtterancesViewOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetUtterancesViewOutputError>
}
