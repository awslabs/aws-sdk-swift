// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Intent: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case intentName
        case intentVersion
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let intentName = intentName {
            try encodeContainer.encode(intentName, forKey: .intentName)
        }
        if let intentVersion = intentVersion {
            try encodeContainer.encode(intentVersion, forKey: .intentVersion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let intentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .intentName)
        intentName = intentNameDecoded
        let intentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .intentVersion)
        intentVersion = intentVersionDecoded
    }
}
