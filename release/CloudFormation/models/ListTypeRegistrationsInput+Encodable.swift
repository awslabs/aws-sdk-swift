// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListTypeRegistrationsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let maxResults = maxResults {
            try container.encode(maxResults, forKey: Key("MaxResults"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: Key("NextToken"))
        }
        if let registrationStatusFilter = registrationStatusFilter {
            try container.encode(registrationStatusFilter, forKey: Key("RegistrationStatusFilter"))
        }
        if let type = type {
            try container.encode(type, forKey: Key("Type"))
        }
        if let typeArn = typeArn {
            try container.encode(typeArn, forKey: Key("TypeArn"))
        }
        if let typeName = typeName {
            try container.encode(typeName, forKey: Key("TypeName"))
        }
        try container.encode("ListTypeRegistrations", forKey:Key("Action"))
        try container.encode("2010-05-15", forKey:Key("Version"))
    }
}
