// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateStackInstancesInput: Equatable {
    /// <p>[Self-managed permissions] The names of one or more AWS accounts for which you want to update parameter values
    ///          for stack instances. The overridden parameter values will be applied to all stack instances
    ///          in the specified accounts and Regions.</p>
    ///          <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    public let accounts: [String]?
    /// <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>
    ///          <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>
    ///          <ul>
    ///             <li>
    ///                <p>If you are signed in to the management account, specify <code>SELF</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p>
    ///                <p>Your AWS account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>AWS CloudFormation User Guide</i>.</p>
    ///             </li>
    ///          </ul>
    public let callAs: CallAs?
    /// <p>[Service-managed permissions] The AWS Organizations accounts for which you want to update parameter values for stack instances. If your update targets OUs, the overridden parameter values only apply to the accounts that are currently in the target OUs and their child OUs. Accounts added to the target OUs and their child OUs in the future won't use the overridden values.</p>
    ///          <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    public let deploymentTargets: DeploymentTargets?
    /// <p>The unique identifier for this stack set operation. </p>
    ///          <p>The operation ID also functions as an idempotency token, to ensure that AWS
    ///          CloudFormation performs the stack set operation only once, even if you retry the request
    ///          multiple times. You might retry stack set operation requests to ensure that AWS
    ///          CloudFormation successfully received them.</p>
    ///          <p>If you don't specify an operation ID, the SDK generates one automatically.
    ///       </p>
    public var operationId: String?
    /// <p>Preferences for how AWS CloudFormation performs this stack set operation.</p>
    public let operationPreferences: StackSetOperationPreferences?
    /// <p> A list of input parameters whose values you want to update for the specified stack
    ///          instances. </p>
    ///          <p>Any overridden parameter values will be applied to all stack instances in the
    ///          specified accounts and Regions. When specifying parameters and their values, be aware of
    ///          how AWS CloudFormation sets parameter values during stack instance update
    ///          operations:</p>
    ///          <ul>
    ///             <li>
    ///                <p>To override the current value for a parameter, include the parameter and
    ///                specify its value.</p>
    ///             </li>
    ///             <li>
    ///                <p>To leave a parameter set to its present value, you can do one of the
    ///                following:</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>Do not include the parameter in the list.</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>Include the parameter and specify <code>UsePreviousValue</code> as
    ///                         <code>true</code>. (You cannot specify both a value and set
    ///                         <code>UsePreviousValue</code> to <code>true</code>.)</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>To set all overridden parameter back to the values specified in the stack set,
    ///                specify a parameter list but do not include any parameters.</p>
    ///             </li>
    ///             <li>
    ///                <p>To leave all parameters set to their present values, do not specify this
    ///                property at all.</p>
    ///             </li>
    ///          </ul>
    ///          <p>During stack set updates, any parameter values overridden for a stack instance are
    ///          not updated, but retain their overridden value.</p>
    ///          <p>You can only override the parameter <i>values</i> that are specified in
    ///          the stack set; to add or delete a parameter itself, use <code>UpdateStackSet</code> to
    ///          update the stack set template. If you add a parameter to a template, before you can
    ///          override the parameter value specified in the stack set you must first use <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_UpdateStackSet.html">UpdateStackSet</a> to update all stack instances with the updated template and
    ///          parameter value specified in the stack set. Once a stack instance has been updated with the
    ///          new parameter, you can then override the parameter value using
    ///             <code>UpdateStackInstances</code>.</p>
    public let parameterOverrides: [Parameter]?
    /// <p>The names of one or more Regions in which you want to update parameter values for
    ///          stack instances. The overridden parameter values will be applied to all stack instances in
    ///          the specified accounts and Regions.</p>
    public let regions: [String]?
    /// <p>The name or unique ID of the stack set associated with the stack instances.</p>
    public let stackSetName: String?

    public init (
        accounts: [String]? = nil,
        callAs: CallAs? = nil,
        deploymentTargets: DeploymentTargets? = nil,
        operationId: String? = nil,
        operationPreferences: StackSetOperationPreferences? = nil,
        parameterOverrides: [Parameter]? = nil,
        regions: [String]? = nil,
        stackSetName: String? = nil
    )
    {
        self.accounts = accounts
        self.callAs = callAs
        self.deploymentTargets = deploymentTargets
        self.operationId = operationId
        self.operationPreferences = operationPreferences
        self.parameterOverrides = parameterOverrides
        self.regions = regions
        self.stackSetName = stackSetName
    }
}
