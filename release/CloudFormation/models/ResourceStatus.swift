// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceStatus {
    case createComplete
    case createFailed
    case createInProgress
    case deleteComplete
    case deleteFailed
    case deleteInProgress
    case deleteSkipped
    case importComplete
    case importFailed
    case importInProgress
    case importRollbackComplete
    case importRollbackFailed
    case importRollbackInProgress
    case updateComplete
    case updateFailed
    case updateInProgress
    case sdkUnknown(String)
}

extension ResourceStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceStatus] {
        return [
            .createComplete,
            .createFailed,
            .createInProgress,
            .deleteComplete,
            .deleteFailed,
            .deleteInProgress,
            .deleteSkipped,
            .importComplete,
            .importFailed,
            .importInProgress,
            .importRollbackComplete,
            .importRollbackFailed,
            .importRollbackInProgress,
            .updateComplete,
            .updateFailed,
            .updateInProgress,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createComplete: return "CREATE_COMPLETE"
        case .createFailed: return "CREATE_FAILED"
        case .createInProgress: return "CREATE_IN_PROGRESS"
        case .deleteComplete: return "DELETE_COMPLETE"
        case .deleteFailed: return "DELETE_FAILED"
        case .deleteInProgress: return "DELETE_IN_PROGRESS"
        case .deleteSkipped: return "DELETE_SKIPPED"
        case .importComplete: return "IMPORT_COMPLETE"
        case .importFailed: return "IMPORT_FAILED"
        case .importInProgress: return "IMPORT_IN_PROGRESS"
        case .importRollbackComplete: return "IMPORT_ROLLBACK_COMPLETE"
        case .importRollbackFailed: return "IMPORT_ROLLBACK_FAILED"
        case .importRollbackInProgress: return "IMPORT_ROLLBACK_IN_PROGRESS"
        case .updateComplete: return "UPDATE_COMPLETE"
        case .updateFailed: return "UPDATE_FAILED"
        case .updateInProgress: return "UPDATE_IN_PROGRESS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceStatus(rawValue: rawValue) ?? ResourceStatus.sdkUnknown(rawValue)
    }
}
