// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StackInstanceFilter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case values = "Values"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let name = name {
            try container.encode(name, forKey: Key("Name"))
        }
        if let values = values {
            try container.encode(values, forKey: Key("Values"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(StackInstanceFilterName.self, forKey: .name)
        name = nameDecoded
        let valuesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .values)
        values = valuesDecoded
    }
}
