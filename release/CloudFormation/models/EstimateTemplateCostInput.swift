// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The input for an <a>EstimateTemplateCost</a> action.</p>
public struct EstimateTemplateCostInput: Equatable {
    /// <p>A list of <code>Parameter</code> structures that specify input parameters.</p>
    public let parameters: [Parameter]?
    /// <p>Structure containing the template body with a minimum length of 1 byte and a maximum
    ///          length of 51,200 bytes. (For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a>
    ///          in the AWS CloudFormation User Guide.)</p>
    ///          <p>Conditional: You must pass <code>TemplateBody</code> or <code>TemplateURL</code>. If
    ///          both are passed, only <code>TemplateBody</code> is used.</p>
    public let templateBody: String?
    /// <p>Location of file containing the template body. The URL must point to a template that
    ///          is located in an Amazon S3 bucket or a Systems Manager document. For more information, go to
    ///             <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a>
    ///          in the AWS CloudFormation User Guide.</p>
    ///          <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If
    ///          both are passed, only <code>TemplateBody</code> is used.</p>
    public let templateURL: String?

    public init (
        parameters: [Parameter]? = nil,
        templateBody: String? = nil,
        templateURL: String? = nil
    )
    {
        self.parameters = parameters
        self.templateBody = templateBody
        self.templateURL = templateURL
    }
}
