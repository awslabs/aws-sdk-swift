// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListTypesInput: Equatable {
    /// <p>The deprecation status of the extension that you want to get summary information about.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>LIVE</code>: The extension is registered for use in CloudFormation operations.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DEPRECATED</code>: The extension has been deregistered and can no longer be used in CloudFormation operations. </p>
    ///             </li>
    ///          </ul>
    public let deprecatedStatus: DeprecatedStatus?
    /// <p>The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.</p>
    public let maxResults: Int?
    /// <p>If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>.</p>
    public let nextToken: String?
    /// <p>The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>FULLY_MUTABLE</code>: The extension includes an update handler to process updates to the extension during stack update operations.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>IMMUTABLE</code>: The extension does not include an update handler, so the extension cannot be updated and must instead be replaced during stack update operations.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NON_PROVISIONABLE</code>: The extension does not include create, read, and delete handlers, and therefore cannot actually be provisioned.</p>
    ///             </li>
    ///          </ul>
    public let provisioningType: ProvisioningType?
    /// <p>The type of extension.</p>
    public let type: RegistryType?
    /// <p>The scope at which the extension is visible and usable in CloudFormation operations.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PRIVATE</code>: The extension is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any extension you create as <code>PRIVATE</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PUBLIC</code>: The extension is publically visible and usable within any Amazon account.</p>
    ///             </li>
    ///          </ul>
    ///          <p>The default is <code>PRIVATE</code>.</p>
    public let visibility: Visibility?

    public init (
        deprecatedStatus: DeprecatedStatus? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        provisioningType: ProvisioningType? = nil,
        type: RegistryType? = nil,
        visibility: Visibility? = nil
    )
    {
        self.deprecatedStatus = deprecatedStatus
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.provisioningType = provisioningType
        self.type = type
        self.visibility = visibility
    }
}
