// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum StackStatus {
    case createComplete
    case createFailed
    case createInProgress
    case deleteComplete
    case deleteFailed
    case deleteInProgress
    case importComplete
    case importInProgress
    case importRollbackComplete
    case importRollbackFailed
    case importRollbackInProgress
    case reviewInProgress
    case rollbackComplete
    case rollbackFailed
    case rollbackInProgress
    case updateComplete
    case updateCompleteCleanupInProgress
    case updateInProgress
    case updateRollbackComplete
    case updateRollbackCompleteCleanupInProgress
    case updateRollbackFailed
    case updateRollbackInProgress
    case sdkUnknown(String)
}

extension StackStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [StackStatus] {
        return [
            .createComplete,
            .createFailed,
            .createInProgress,
            .deleteComplete,
            .deleteFailed,
            .deleteInProgress,
            .importComplete,
            .importInProgress,
            .importRollbackComplete,
            .importRollbackFailed,
            .importRollbackInProgress,
            .reviewInProgress,
            .rollbackComplete,
            .rollbackFailed,
            .rollbackInProgress,
            .updateComplete,
            .updateCompleteCleanupInProgress,
            .updateInProgress,
            .updateRollbackComplete,
            .updateRollbackCompleteCleanupInProgress,
            .updateRollbackFailed,
            .updateRollbackInProgress,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createComplete: return "CREATE_COMPLETE"
        case .createFailed: return "CREATE_FAILED"
        case .createInProgress: return "CREATE_IN_PROGRESS"
        case .deleteComplete: return "DELETE_COMPLETE"
        case .deleteFailed: return "DELETE_FAILED"
        case .deleteInProgress: return "DELETE_IN_PROGRESS"
        case .importComplete: return "IMPORT_COMPLETE"
        case .importInProgress: return "IMPORT_IN_PROGRESS"
        case .importRollbackComplete: return "IMPORT_ROLLBACK_COMPLETE"
        case .importRollbackFailed: return "IMPORT_ROLLBACK_FAILED"
        case .importRollbackInProgress: return "IMPORT_ROLLBACK_IN_PROGRESS"
        case .reviewInProgress: return "REVIEW_IN_PROGRESS"
        case .rollbackComplete: return "ROLLBACK_COMPLETE"
        case .rollbackFailed: return "ROLLBACK_FAILED"
        case .rollbackInProgress: return "ROLLBACK_IN_PROGRESS"
        case .updateComplete: return "UPDATE_COMPLETE"
        case .updateCompleteCleanupInProgress: return "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS"
        case .updateInProgress: return "UPDATE_IN_PROGRESS"
        case .updateRollbackComplete: return "UPDATE_ROLLBACK_COMPLETE"
        case .updateRollbackCompleteCleanupInProgress: return "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS"
        case .updateRollbackFailed: return "UPDATE_ROLLBACK_FAILED"
        case .updateRollbackInProgress: return "UPDATE_ROLLBACK_IN_PROGRESS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = StackStatus(rawValue: rawValue) ?? StackStatus.sdkUnknown(rawValue)
    }
}
