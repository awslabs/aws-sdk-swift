// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The structure that contains information about a stack set operation. </p>
public struct StackSetOperation: Equatable {
    /// <p>The type of stack set operation: <code>CREATE</code>, <code>UPDATE</code>, or
    ///             <code>DELETE</code>. Create and delete operations affect only the specified stack set
    ///          instances that are associated with the specified stack set. Update operations affect both
    ///          the stack set itself, as well as <i>all</i> associated stack set
    ///          instances.</p>
    public let action: StackSetOperationAction?
    /// <p>The Amazon Resource Number (ARN) of the IAM role used to perform this stack set
    ///          operation. </p>
    ///          <p>Use customized administrator roles to control which users or groups can manage specific
    ///          stack sets within the same administrator account. For more information, see <a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html">Define Permissions for Multiple
    ///             Administrators</a> in the <i>AWS CloudFormation User Guide</i>.</p>
    public let administrationRoleARN: String?
    /// <p>The time at which the operation was initiated. Note that the creation times for the
    ///          stack set operation might differ from the creation time of the individual stacks
    ///          themselves. This is because AWS CloudFormation needs to perform preparatory work for the
    ///          operation, such as dispatching the work to the requested Regions, before actually creating
    ///          the first stacks.</p>
    public let creationTimestamp: Date?
    /// <p>[Service-managed permissions] The AWS Organizations accounts affected by the stack operation.</p>
    public let deploymentTargets: DeploymentTargets?
    /// <p>The time at which the stack set operation ended, across all accounts and Regions
    ///          specified. Note that this doesn't necessarily mean that the stack set operation was
    ///          successful, or even attempted, in each account or Region.</p>
    public let endTimestamp: Date?
    /// <p>The name of the IAM execution role used to create or update the stack set.</p>
    ///          <p>Use customized execution roles to control which stack resources users and groups can
    ///          include in their stack sets.
    ///       </p>
    public let executionRoleName: String?
    /// <p>The unique ID of a stack set operation.</p>
    public let operationId: String?
    /// <p>The preferences for how AWS CloudFormation performs this stack set
    ///          operation.</p>
    public let operationPreferences: StackSetOperationPreferences?
    /// <p>For stack set operations of action type <code>DELETE</code>, specifies whether to
    ///          remove the stack instances from the specified stack set, but doesn't delete the stacks. You
    ///          can't reassociate a retained stack, or add an existing, saved stack to a new stack
    ///          set.</p>
    public let retainStacks: Bool?
    /// <p>Detailed information about the drift status of the stack set. This includes information
    ///          about drift operations currently being performed on the stack set.</p>
    ///          <p>this information will only be present for stack set operations whose <code>Action</code>
    ///          type is <code>DETECT_DRIFT</code>.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-drift.html">Detecting Unmanaged
    ///          Changes in Stack Sets</a> in the AWS CloudFormation User Guide.</p>
    public let stackSetDriftDetectionDetails: StackSetDriftDetectionDetails?
    /// <p>The ID of the stack set.</p>
    public let stackSetId: String?
    /// <p>The status of the operation. </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code>: The operation exceeded the specified failure tolerance.
    ///                The failure tolerance value that you've set for an operation is applied for each
    ///                Region during stack create and update operations. If the number of failed stacks
    ///                within a Region exceeds the failure tolerance, the status of the operation in the
    ///                Region is set to <code>FAILED</code>. This in turn sets the status of the operation
    ///                as a whole to <code>FAILED</code>, and AWS CloudFormation cancels the operation in
    ///                any remaining Regions.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>QUEUED</code>: [Service-managed permissions] For automatic deployments that
    ///                require a sequence of operations, the operation is queued to be performed. For more information, see the <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-status-codes">stack set operation status codes</a> in the AWS CloudFormation User Guide.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>RUNNING</code>: The operation is currently being performed.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>STOPPED</code>: The user has cancelled the operation.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>STOPPING</code>: The operation is in the process of stopping, at user
    ///                request. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SUCCEEDED</code>: The operation completed creating or updating all the
    ///                specified stacks without exceeding the failure tolerance for the operation.</p>
    ///             </li>
    ///          </ul>
    public let status: StackSetOperationStatus?

    public init (
        action: StackSetOperationAction? = nil,
        administrationRoleARN: String? = nil,
        creationTimestamp: Date? = nil,
        deploymentTargets: DeploymentTargets? = nil,
        endTimestamp: Date? = nil,
        executionRoleName: String? = nil,
        operationId: String? = nil,
        operationPreferences: StackSetOperationPreferences? = nil,
        retainStacks: Bool? = nil,
        stackSetDriftDetectionDetails: StackSetDriftDetectionDetails? = nil,
        stackSetId: String? = nil,
        status: StackSetOperationStatus? = nil
    )
    {
        self.action = action
        self.administrationRoleARN = administrationRoleARN
        self.creationTimestamp = creationTimestamp
        self.deploymentTargets = deploymentTargets
        self.endTimestamp = endTimestamp
        self.executionRoleName = executionRoleName
        self.operationId = operationId
        self.operationPreferences = operationPreferences
        self.retainStacks = retainStacks
        self.stackSetDriftDetectionDetails = stackSetDriftDetectionDetails
        self.stackSetId = stackSetId
        self.status = status
    }
}
