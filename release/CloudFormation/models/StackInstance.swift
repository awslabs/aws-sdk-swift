// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An AWS CloudFormation stack, in a specific account and Region, that's part of a stack
///          set operation. A stack instance is a reference to an attempted or actual stack in a given
///          account within a given Region. A stack instance can exist without a stackâ€”for example, if
///          the stack couldn't be created for some reason. A stack instance is associated with only one
///          stack set. Each stack instance contains the ID of its associated stack set, as well as the
///          ID of the actual stack and the stack status.</p>
public struct StackInstance: Equatable {
    /// <p>[Self-managed permissions] The name of the AWS account that the stack instance is associated with.</p>
    public let account: String?
    /// <p>Status of the stack instance's actual configuration compared to the expected template
    ///          and parameter configuration of the stack set to which it belongs. </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>DRIFTED</code>: The stack differs from the expected template and parameter
    ///                configuration of the stack set to which it belongs. A stack instance is considered to
    ///                have drifted if one or more of the resources in the associated stack have
    ///                drifted.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NOT_CHECKED</code>: AWS CloudFormation has not checked if the stack instance differs from
    ///                its expected stack set configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>IN_SYNC</code>: The stack instance's actual configuration matches its
    ///                expected stack set configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>UNKNOWN</code>: This value is reserved for future use.</p>
    ///             </li>
    ///          </ul>
    public let driftStatus: StackDriftStatus?
    /// <p>Most recent time when CloudFormation performed a drift detection operation on the stack
    ///          instance. This value will be <code>NULL</code> for any stack instance on which drift
    ///          detection has not yet been performed.</p>
    public let lastDriftCheckTimestamp: Date?
    /// <p>[Service-managed permissions] The organization root ID or organizational unit (OU) IDs that you specified for <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DeploymentTargets.html">DeploymentTargets</a>.</p>
    public let organizationalUnitId: String?
    /// <p>A list of parameters from the stack set template whose values have been overridden in
    ///          this stack instance.</p>
    public let parameterOverrides: [Parameter]?
    /// <p>The name of the AWS Region that the stack instance is associated with.</p>
    public let region: String?
    /// <p>The ID of the stack instance.</p>
    public let stackId: String?
    /// <p>The detailed status of the stack instance.</p>
    public let stackInstanceStatus: StackInstanceComprehensiveStatus?
    /// <p>The name or unique ID of the stack set that the stack instance is associated
    ///          with.</p>
    public let stackSetId: String?
    /// <p>The status of the stack instance, in terms of its synchronization with its associated
    ///          stack set.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>INOPERABLE</code>: A <code>DeleteStackInstances</code> operation has
    ///                failed and left the stack in an unstable state. Stacks in this state are excluded
    ///                from further <code>UpdateStackSet</code> operations. You might need to perform a
    ///                   <code>DeleteStackInstances</code> operation, with <code>RetainStacks</code> set to
    ///                   <code>true</code>, to delete the stack instance, and then delete the stack
    ///                manually.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>OUTDATED</code>: The stack isn't currently up to date with the stack set
    ///                because:</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>The associated stack failed during a <code>CreateStackSet</code> or
    ///                         <code>UpdateStackSet</code> operation. </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>The stack was part of a <code>CreateStackSet</code> or
    ///                         <code>UpdateStackSet</code> operation that failed or was stopped before the
    ///                      stack was created or updated. </p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CURRENT</code>: The stack is currently up to date with the stack
    ///                set.</p>
    ///             </li>
    ///          </ul>
    public let status: StackInstanceStatus?
    /// <p>The explanation for the specific status code that is assigned to this stack
    ///          instance.</p>
    public let statusReason: String?

    public init (
        account: String? = nil,
        driftStatus: StackDriftStatus? = nil,
        lastDriftCheckTimestamp: Date? = nil,
        organizationalUnitId: String? = nil,
        parameterOverrides: [Parameter]? = nil,
        region: String? = nil,
        stackId: String? = nil,
        stackInstanceStatus: StackInstanceComprehensiveStatus? = nil,
        stackSetId: String? = nil,
        status: StackInstanceStatus? = nil,
        statusReason: String? = nil
    )
    {
        self.account = account
        self.driftStatus = driftStatus
        self.lastDriftCheckTimestamp = lastDriftCheckTimestamp
        self.organizationalUnitId = organizationalUnitId
        self.parameterOverrides = parameterOverrides
        self.region = region
        self.stackId = stackId
        self.stackInstanceStatus = stackInstanceStatus
        self.stackSetId = stackSetId
        self.status = status
        self.statusReason = statusReason
    }
}
