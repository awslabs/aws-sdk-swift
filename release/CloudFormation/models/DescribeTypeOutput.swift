// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeTypeOutput: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the extension.</p>
    public let arn: String?
    /// <p>The ID of the default version of the extension. The default version is used when the extension version is not specified.</p>
    ///          <p>To set the default version of an extension, use <code>
    ///                <a>SetTypeDefaultVersion</a>
    ///             </code>. </p>
    public let defaultVersionId: String?
    /// <p>The deprecation status of the extension version.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>LIVE</code>: The extension is registered and can be used in CloudFormation operations, dependent on its provisioning behavior and visibility scope.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DEPRECATED</code>: The extension has been deregistered and can no longer be used in CloudFormation operations. </p>
    ///             </li>
    ///          </ul>
    public let deprecatedStatus: DeprecatedStatus?
    /// <p>The description of the registered extension.</p>
    public let description: String?
    /// <p>The URL of a page providing detailed documentation for this extension.</p>
    public let documentationUrl: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM execution role used to register the extension. If your resource type calls AWS APIs in any of its handlers, you must create an
    ///          <i>
    ///                <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM execution
    ///             role</a>
    ///             </i> that includes the necessary permissions to call those
    ///          AWS APIs, and provision that execution role in your account. CloudFormation then
    ///          assumes that execution role to provide your extension with the appropriate
    ///          credentials.</p>
    public let executionRoleArn: String?
    /// <p>Whether the specified extension version is set as the default version.</p>
    public let isDefaultVersion: Bool?
    /// <p>When the specified extension version was registered.</p>
    public let lastUpdated: Date?
    /// <p>Contains logging configuration information for an extension.</p>
    public let loggingConfig: LoggingConfig?
    /// <p>The provisioning behavior of the extension. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>FULLY_MUTABLE</code>: The extension includes an update handler to process updates to the extension during stack update operations.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>IMMUTABLE</code>: The extension does not include an update handler, so the extension cannot be updated and must instead be replaced during stack update operations.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NON_PROVISIONABLE</code>: The extension does not include all of the following handlers, and therefore cannot actually be provisioned.</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>create</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>read</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>delete</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///          </ul>
    public let provisioningType: ProvisioningType?
    /// <p>The schema that defines the extension.</p>
    ///          <p>For more information on extension schemas, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-schema.html">Resource Provider Schema</a> in the <i>CloudFormation CLI User Guide</i>.</p>
    public let schema: String?
    /// <p>The URL of the source code for the extension.</p>
    public let sourceUrl: String?
    /// <p>When the specified extension version was registered.</p>
    public let timeCreated: Date?
    /// <p>The kind of extension. </p>
    public let type: RegistryType?
    /// <p>The name of the registered extension.</p>
    public let typeName: String?
    /// <p>The scope at which the extension is visible and usable in CloudFormation operations.</p>
    ///          <p>Valid values include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PRIVATE</code>: The extension is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as <code>PRIVATE</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PUBLIC</code>: The extension is publically visible and usable within any Amazon account.</p>
    ///             </li>
    ///          </ul>
    public let visibility: Visibility?

    public init (
        arn: String? = nil,
        defaultVersionId: String? = nil,
        deprecatedStatus: DeprecatedStatus? = nil,
        description: String? = nil,
        documentationUrl: String? = nil,
        executionRoleArn: String? = nil,
        isDefaultVersion: Bool? = nil,
        lastUpdated: Date? = nil,
        loggingConfig: LoggingConfig? = nil,
        provisioningType: ProvisioningType? = nil,
        schema: String? = nil,
        sourceUrl: String? = nil,
        timeCreated: Date? = nil,
        type: RegistryType? = nil,
        typeName: String? = nil,
        visibility: Visibility? = nil
    )
    {
        self.arn = arn
        self.defaultVersionId = defaultVersionId
        self.deprecatedStatus = deprecatedStatus
        self.description = description
        self.documentationUrl = documentationUrl
        self.executionRoleArn = executionRoleArn
        self.isDefaultVersion = isDefaultVersion
        self.lastUpdated = lastUpdated
        self.loggingConfig = loggingConfig
        self.provisioningType = provisioningType
        self.schema = schema
        self.sourceUrl = sourceUrl
        self.timeCreated = timeCreated
        self.type = type
        self.typeName = typeName
        self.visibility = visibility
    }
}
