// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ExecutionStatus {
    case available
    case executeComplete
    case executeFailed
    case executeInProgress
    case obsolete
    case unavailable
    case sdkUnknown(String)
}

extension ExecutionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ExecutionStatus] {
        return [
            .available,
            .executeComplete,
            .executeFailed,
            .executeInProgress,
            .obsolete,
            .unavailable,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .available: return "AVAILABLE"
        case .executeComplete: return "EXECUTE_COMPLETE"
        case .executeFailed: return "EXECUTE_FAILED"
        case .executeInProgress: return "EXECUTE_IN_PROGRESS"
        case .obsolete: return "OBSOLETE"
        case .unavailable: return "UNAVAILABLE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ExecutionStatus(rawValue: rawValue) ?? ExecutionStatus.sdkUnknown(rawValue)
    }
}
