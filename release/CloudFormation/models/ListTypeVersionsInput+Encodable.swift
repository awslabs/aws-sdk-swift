// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListTypeVersionsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let arn = arn {
            try container.encode(arn, forKey: Key("Arn"))
        }
        if let deprecatedStatus = deprecatedStatus {
            try container.encode(deprecatedStatus, forKey: Key("DeprecatedStatus"))
        }
        if let maxResults = maxResults {
            try container.encode(maxResults, forKey: Key("MaxResults"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: Key("NextToken"))
        }
        if let type = type {
            try container.encode(type, forKey: Key("Type"))
        }
        if let typeName = typeName {
            try container.encode(typeName, forKey: Key("TypeName"))
        }
        try container.encode("ListTypeVersions", forKey:Key("Action"))
        try container.encode("2010-05-15", forKey:Key("Version"))
    }
}
