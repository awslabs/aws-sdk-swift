// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeleteStackInstancesInput: Equatable {
    /// <p>[Self-managed permissions] The names of the AWS accounts that you want to delete stack instances for.</p>
    ///          <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    public let accounts: [String]?
    /// <p>[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.</p>
    ///          <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p>
    ///          <ul>
    ///             <li>
    ///                <p>If you are signed in to the management account, specify <code>SELF</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>If you are signed in to a delegated administrator account, specify <code>DELEGATED_ADMIN</code>.</p>
    ///                <p>Your AWS account must be registered as a delegated administrator in the management account. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html">Register a delegated administrator</a> in the <i>AWS CloudFormation User Guide</i>.</p>
    ///             </li>
    ///          </ul>
    public let callAs: CallAs?
    /// <p>[Service-managed permissions] The AWS Organizations accounts from which to delete stack instances.</p>
    ///          <p>You can specify <code>Accounts</code> or <code>DeploymentTargets</code>, but not both.</p>
    public let deploymentTargets: DeploymentTargets?
    /// <p>The unique identifier for this stack set operation. </p>
    ///          <p>If you don't specify an operation ID, the SDK generates one automatically. </p>
    ///          <p>The operation ID also functions as an idempotency token, to ensure that AWS
    ///          CloudFormation performs the stack set operation only once, even if you retry the request
    ///          multiple times. You can retry stack set operation requests to ensure that AWS
    ///          CloudFormation successfully received them.</p>
    ///          <p>Repeating this stack set operation with a new operation ID retries all stack
    ///          instances whose status is <code>OUTDATED</code>. </p>
    public var operationId: String?
    /// <p>Preferences for how AWS CloudFormation performs this stack set operation.</p>
    public let operationPreferences: StackSetOperationPreferences?
    /// <p>The Regions where you want to delete stack set instances. </p>
    public let regions: [String]?
    /// <p>Removes the stack instances from the specified stack set, but doesn't delete the
    ///          stacks. You can't reassociate a retained stack or add an existing, saved stack to a new
    ///          stack set.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
    public let retainStacks: Bool
    /// <p>The name or unique ID of the stack set that you want to delete stack instances
    ///          for.</p>
    public let stackSetName: String?

    public init (
        accounts: [String]? = nil,
        callAs: CallAs? = nil,
        deploymentTargets: DeploymentTargets? = nil,
        operationId: String? = nil,
        operationPreferences: StackSetOperationPreferences? = nil,
        regions: [String]? = nil,
        retainStacks: Bool = false,
        stackSetName: String? = nil
    )
    {
        self.accounts = accounts
        self.callAs = callAs
        self.deploymentTargets = deploymentTargets
        self.operationId = operationId
        self.operationPreferences = operationPreferences
        self.regions = regions
        self.retainStacks = retainStacks
        self.stackSetName = stackSetName
    }
}
