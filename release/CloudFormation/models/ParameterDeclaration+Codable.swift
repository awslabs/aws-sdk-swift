// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ParameterDeclaration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultValue = "DefaultValue"
        case description = "Description"
        case noEcho = "NoEcho"
        case parameterConstraints = "ParameterConstraints"
        case parameterKey = "ParameterKey"
        case parameterType = "ParameterType"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let defaultValue = defaultValue {
            try container.encode(defaultValue, forKey: Key("DefaultValue"))
        }
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
        if let noEcho = noEcho {
            try container.encode(noEcho, forKey: Key("NoEcho"))
        }
        if let parameterConstraints = parameterConstraints {
            try container.encode(parameterConstraints, forKey: Key("ParameterConstraints"))
        }
        if let parameterKey = parameterKey {
            try container.encode(parameterKey, forKey: Key("ParameterKey"))
        }
        if let parameterType = parameterType {
            try container.encode(parameterType, forKey: Key("ParameterType"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let parameterKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .parameterKey)
        parameterKey = parameterKeyDecoded
        let defaultValueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultValue)
        defaultValue = defaultValueDecoded
        let parameterTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .parameterType)
        parameterType = parameterTypeDecoded
        let noEchoDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .noEcho)
        noEcho = noEchoDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let parameterConstraintsDecoded = try containerValues.decodeIfPresent(ParameterConstraints.self, forKey: .parameterConstraints)
        parameterConstraints = parameterConstraintsDecoded
    }
}
