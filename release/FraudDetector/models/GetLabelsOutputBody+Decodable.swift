// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLabelsOutputBody: Equatable {
    public let labels: [Label]?
    public let nextToken: String?
}

extension GetLabelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case labels
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelsContainer = try containerValues.decodeIfPresent([Label].self, forKey: .labels)
        var labelsDecoded0:[Label]? = nil
        if let labelsContainer = labelsContainer {
            labelsDecoded0 = [Label]()
            for structure0 in labelsContainer {
                labelsDecoded0?.append(structure0)
            }
        }
        labels = labelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
