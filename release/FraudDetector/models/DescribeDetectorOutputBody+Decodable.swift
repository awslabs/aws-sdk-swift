// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDetectorOutputBody: Equatable {
    public let detectorId: String?
    public let detectorVersionSummaries: [DetectorVersionSummary]?
    public let nextToken: String?
    public let arn: String?
}

extension DescribeDetectorOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case arn
        case detectorId
        case detectorVersionSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .detectorId)
        detectorId = detectorIdDecoded
        let detectorVersionSummariesContainer = try containerValues.decodeIfPresent([DetectorVersionSummary].self, forKey: .detectorVersionSummaries)
        var detectorVersionSummariesDecoded0:[DetectorVersionSummary]? = nil
        if let detectorVersionSummariesContainer = detectorVersionSummariesContainer {
            detectorVersionSummariesDecoded0 = [DetectorVersionSummary]()
            for structure0 in detectorVersionSummariesContainer {
                detectorVersionSummariesDecoded0?.append(structure0)
            }
        }
        detectorVersionSummaries = detectorVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
    }
}
