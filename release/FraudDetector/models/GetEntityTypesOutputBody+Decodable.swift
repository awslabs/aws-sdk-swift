// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEntityTypesOutputBody: Equatable {
    public let entityTypes: [EntityType]?
    public let nextToken: String?
}

extension GetEntityTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entityTypes
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityTypesContainer = try containerValues.decodeIfPresent([EntityType].self, forKey: .entityTypes)
        var entityTypesDecoded0:[EntityType]? = nil
        if let entityTypesContainer = entityTypesContainer {
            entityTypesDecoded0 = [EntityType]()
            for structure0 in entityTypesContainer {
                entityTypesDecoded0?.append(structure0)
            }
        }
        entityTypes = entityTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
