// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetVariableInputBody: Equatable {
    public let names: [String]?
}

extension BatchGetVariableInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case names
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namesContainer = try containerValues.decodeIfPresent([String].self, forKey: .names)
        var namesDecoded0:[String]? = nil
        if let namesContainer = namesContainer {
            namesDecoded0 = [String]()
            for string0 in namesContainer {
                namesDecoded0?.append(string0)
            }
        }
        names = namesDecoded0
    }
}
