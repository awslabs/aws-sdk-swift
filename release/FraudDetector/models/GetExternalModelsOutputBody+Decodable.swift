// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetExternalModelsOutputBody: Equatable {
    public let externalModels: [ExternalModel]?
    public let nextToken: String?
}

extension GetExternalModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case externalModels
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let externalModelsContainer = try containerValues.decodeIfPresent([ExternalModel].self, forKey: .externalModels)
        var externalModelsDecoded0:[ExternalModel]? = nil
        if let externalModelsContainer = externalModelsContainer {
            externalModelsDecoded0 = [ExternalModel]()
            for structure0 in externalModelsContainer {
                externalModelsDecoded0?.append(structure0)
            }
        }
        externalModels = externalModelsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
