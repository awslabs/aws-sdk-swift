// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The batch prediction details.</p>
public struct BatchPrediction: Equatable {
    /// <p>The ARN of batch prediction job.</p>
    public let arn: String?
    /// <p>Timestamp of when the batch prediction job comleted.</p>
    public let completionTime: String?
    /// <p>The name of the detector.</p>
    public let detectorName: String?
    /// <p>The detector version. </p>
    public let detectorVersion: String?
    /// <p>The name of the event type.</p>
    public let eventTypeName: String?
    /// <p>The reason a batch prediction job failed.</p>
    public let failureReason: String?
    /// <p>The ARN of the IAM role to use for this job request.</p>
    public let iamRoleArn: String?
    /// <p>The Amazon S3 location of your training file.</p>
    public let inputPath: String?
    /// <p>The job ID for the batch prediction.</p>
    public let jobId: String?
    /// <p>Timestamp of most recent heartbeat indicating the batch prediction job was making progress.</p>
    public let lastHeartbeatTime: String?
    /// <p>The Amazon S3 location of your output file.</p>
    public let outputPath: String?
    /// <p>The number of records processed by the batch prediction job.</p>
    public let processedRecordsCount: Int?
    /// <p>Timestamp of when the batch prediction job started.</p>
    public let startTime: String?
    /// <p>The batch prediction status.</p>
    public let status: AsyncJobStatus?
    /// <p>The total number of records in the batch prediction job.</p>
    public let totalRecordsCount: Int?

    public init (
        arn: String? = nil,
        completionTime: String? = nil,
        detectorName: String? = nil,
        detectorVersion: String? = nil,
        eventTypeName: String? = nil,
        failureReason: String? = nil,
        iamRoleArn: String? = nil,
        inputPath: String? = nil,
        jobId: String? = nil,
        lastHeartbeatTime: String? = nil,
        outputPath: String? = nil,
        processedRecordsCount: Int? = nil,
        startTime: String? = nil,
        status: AsyncJobStatus? = nil,
        totalRecordsCount: Int? = nil
    )
    {
        self.arn = arn
        self.completionTime = completionTime
        self.detectorName = detectorName
        self.detectorVersion = detectorVersion
        self.eventTypeName = eventTypeName
        self.failureReason = failureReason
        self.iamRoleArn = iamRoleArn
        self.inputPath = inputPath
        self.jobId = jobId
        self.lastHeartbeatTime = lastHeartbeatTime
        self.outputPath = outputPath
        self.processedRecordsCount = processedRecordsCount
        self.startTime = startTime
        self.status = status
        self.totalRecordsCount = totalRecordsCount
    }
}
