// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetVariablesOutputBody: Equatable {
    public let variables: [Variable]?
    public let nextToken: String?
}

extension GetVariablesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case variables
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let variablesContainer = try containerValues.decodeIfPresent([Variable].self, forKey: .variables)
        var variablesDecoded0:[Variable]? = nil
        if let variablesContainer = variablesContainer {
            variablesDecoded0 = [Variable]()
            for structure0 in variablesContainer {
                variablesDecoded0?.append(structure0)
            }
        }
        variables = variablesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
