// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetModelsOutputBody: Equatable {
    public let nextToken: String?
    public let models: [Model]?
}

extension GetModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case models
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let modelsContainer = try containerValues.decodeIfPresent([Model].self, forKey: .models)
        var modelsDecoded0:[Model]? = nil
        if let modelsContainer = modelsContainer {
            modelsDecoded0 = [Model]()
            for structure0 in modelsContainer {
                modelsDecoded0?.append(structure0)
            }
        }
        models = modelsDecoded0
    }
}
