// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRulesOutputBody: Equatable {
    public let ruleDetails: [RuleDetail]?
    public let nextToken: String?
}

extension GetRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case ruleDetails
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleDetailsContainer = try containerValues.decodeIfPresent([RuleDetail].self, forKey: .ruleDetails)
        var ruleDetailsDecoded0:[RuleDetail]? = nil
        if let ruleDetailsContainer = ruleDetailsContainer {
            ruleDetailsDecoded0 = [RuleDetail]()
            for structure0 in ruleDetailsContainer {
                ruleDetailsDecoded0?.append(structure0)
            }
        }
        ruleDetails = ruleDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
