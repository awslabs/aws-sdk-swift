// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOutcomesOutputBody: Equatable {
    public let outcomes: [Outcome]?
    public let nextToken: String?
}

extension GetOutcomesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case outcomes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outcomesContainer = try containerValues.decodeIfPresent([Outcome].self, forKey: .outcomes)
        var outcomesDecoded0:[Outcome]? = nil
        if let outcomesContainer = outcomesContainer {
            outcomesDecoded0 = [Outcome]()
            for structure0 in outcomesContainer {
                outcomesDecoded0?.append(structure0)
            }
        }
        outcomes = outcomesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
