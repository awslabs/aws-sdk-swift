// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetEventPredictionOutputBody: Equatable {
    public let modelScores: [ModelScores]?
    public let ruleResults: [RuleResult]?
}

extension GetEventPredictionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case modelScores
        case ruleResults
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelScoresContainer = try containerValues.decodeIfPresent([ModelScores].self, forKey: .modelScores)
        var modelScoresDecoded0:[ModelScores]? = nil
        if let modelScoresContainer = modelScoresContainer {
            modelScoresDecoded0 = [ModelScores]()
            for structure0 in modelScoresContainer {
                modelScoresDecoded0?.append(structure0)
            }
        }
        modelScores = modelScoresDecoded0
        let ruleResultsContainer = try containerValues.decodeIfPresent([RuleResult].self, forKey: .ruleResults)
        var ruleResultsDecoded0:[RuleResult]? = nil
        if let ruleResultsContainer = ruleResultsContainer {
            ruleResultsDecoded0 = [RuleResult]()
            for structure0 in ruleResultsContainer {
                ruleResultsDecoded0?.append(structure0)
            }
        }
        ruleResults = ruleResultsDecoded0
    }
}
