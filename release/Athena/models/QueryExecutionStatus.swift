// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The completion date, current state, submission time, and state change reason (if
///             applicable) for the query execution.</p>
public struct QueryExecutionStatus: Equatable {
    /// <p>The date and time that the query completed.</p>
    public let completionDateTime: Date?
    /// <p>The state of query execution. <code>QUEUED</code> indicates that the query has been
    ///             submitted to the service, and Athena will execute the query as soon as resources are
    ///             available. <code>RUNNING</code> indicates that the query is in execution phase.
    ///                 <code>SUCCEEDED</code> indicates that the query completed without errors.
    ///                 <code>FAILED</code> indicates that the query experienced an error and did not
    ///             complete processing. <code>CANCELLED</code> indicates that a user input interrupted
    ///             query execution.</p>
    ///         <note>
    ///             <p>Athena automatically retries your queries in cases of certain transient errors. As
    ///                 a result, you may see the query state transition from <code>RUNNING</code> or
    ///                     <code>FAILED</code> to <code>QUEUED</code>. </p>
    ///         </note>
    public let state: QueryExecutionState?
    /// <p>Further detail about the status of the query.</p>
    public let stateChangeReason: String?
    /// <p>The date and time that the query was submitted.</p>
    public let submissionDateTime: Date?

    public init (
        completionDateTime: Date? = nil,
        state: QueryExecutionState? = nil,
        stateChangeReason: String? = nil,
        submissionDateTime: Date? = nil
    )
    {
        self.completionDateTime = completionDateTime
        self.state = state
        self.stateChangeReason = stateChangeReason
        self.submissionDateTime = submissionDateTime
    }
}
