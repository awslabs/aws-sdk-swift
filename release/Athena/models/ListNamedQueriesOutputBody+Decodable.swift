// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNamedQueriesOutputBody: Equatable {
    public let namedQueryIds: [String]?
    public let nextToken: String?
}

extension ListNamedQueriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case namedQueryIds = "NamedQueryIds"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let namedQueryIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .namedQueryIds)
        var namedQueryIdsDecoded0:[String]? = nil
        if let namedQueryIdsContainer = namedQueryIdsContainer {
            namedQueryIdsDecoded0 = [String]()
            for string0 in namedQueryIdsContainer {
                namedQueryIdsDecoded0?.append(string0)
            }
        }
        namedQueryIds = namedQueryIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
