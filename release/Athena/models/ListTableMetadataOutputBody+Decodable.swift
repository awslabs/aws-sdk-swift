// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTableMetadataOutputBody: Equatable {
    public let tableMetadataList: [TableMetadata]?
    public let nextToken: String?
}

extension ListTableMetadataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case tableMetadataList = "TableMetadataList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableMetadataListContainer = try containerValues.decodeIfPresent([TableMetadata].self, forKey: .tableMetadataList)
        var tableMetadataListDecoded0:[TableMetadata]? = nil
        if let tableMetadataListContainer = tableMetadataListContainer {
            tableMetadataListDecoded0 = [TableMetadata]()
            for structure0 in tableMetadataListContainer {
                tableMetadataListDecoded0?.append(structure0)
            }
        }
        tableMetadataList = tableMetadataListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
