// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartQueryExecutionInput: Equatable {
    /// <p>A unique case-sensitive string used to ensure the request to create the query is
    ///             idempotent (executes only once). If another <code>StartQueryExecution</code> request is
    ///             received, the same response is returned and another query is not created. If a parameter
    ///             has changed, for example, the <code>QueryString</code>, an error is returned.</p>
    ///         <important>
    ///             <p>This token is listed as not required because AWS SDKs (for example the AWS SDK for
    ///                 Java) auto-generate the token for users. If you are not using the AWS SDK or the AWS
    ///                 CLI, you must provide this token or the action will fail.</p>
    ///         </important>
    public var clientRequestToken: String?
    /// <p>The database within which the query executes.</p>
    public let queryExecutionContext: QueryExecutionContext?
    /// <p>The SQL query statements to be executed.</p>
    public let queryString: String?
    /// <p>Specifies information about where and how to save the results of the query execution.
    ///             If the query runs in a workgroup, then workgroup's settings may override query settings.
    ///             This affects the query results location. The workgroup settings override is specified in
    ///             EnforceWorkGroupConfiguration (true/false) in the WorkGroupConfiguration. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.</p>
    public let resultConfiguration: ResultConfiguration?
    /// <p>The name of the workgroup in which the query is being started.</p>
    public let workGroup: String?

    public init (
        clientRequestToken: String? = nil,
        queryExecutionContext: QueryExecutionContext? = nil,
        queryString: String? = nil,
        resultConfiguration: ResultConfiguration? = nil,
        workGroup: String? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.queryExecutionContext = queryExecutionContext
        self.queryString = queryString
        self.resultConfiguration = resultConfiguration
        self.workGroup = workGroup
    }
}
