// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkGroupsOutputBody: Equatable {
    public let workGroups: [WorkGroupSummary]?
    public let nextToken: String?
}

extension ListWorkGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case workGroups = "WorkGroups"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workGroupsContainer = try containerValues.decodeIfPresent([WorkGroupSummary].self, forKey: .workGroups)
        var workGroupsDecoded0:[WorkGroupSummary]? = nil
        if let workGroupsContainer = workGroupsContainer {
            workGroupsDecoded0 = [WorkGroupSummary]()
            for structure0 in workGroupsContainer {
                workGroupsDecoded0?.append(structure0)
            }
        }
        workGroups = workGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
