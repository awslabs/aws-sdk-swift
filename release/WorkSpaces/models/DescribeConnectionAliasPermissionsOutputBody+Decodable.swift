// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConnectionAliasPermissionsOutputBody: Equatable {
    public let aliasId: String?
    public let connectionAliasPermissions: [ConnectionAliasPermission]?
    public let nextToken: String?
}

extension DescribeConnectionAliasPermissionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aliasId = "AliasId"
        case connectionAliasPermissions = "ConnectionAliasPermissions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aliasIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .aliasId)
        aliasId = aliasIdDecoded
        let connectionAliasPermissionsContainer = try containerValues.decodeIfPresent([ConnectionAliasPermission].self, forKey: .connectionAliasPermissions)
        var connectionAliasPermissionsDecoded0:[ConnectionAliasPermission]? = nil
        if let connectionAliasPermissionsContainer = connectionAliasPermissionsContainer {
            connectionAliasPermissionsDecoded0 = [ConnectionAliasPermission]()
            for structure0 in connectionAliasPermissionsContainer {
                connectionAliasPermissionsDecoded0?.append(structure0)
            }
        }
        connectionAliasPermissions = connectionAliasPermissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
