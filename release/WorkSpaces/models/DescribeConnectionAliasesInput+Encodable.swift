// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeConnectionAliasesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case aliasIds = "AliasIds"
        case limit = "Limit"
        case nextToken = "NextToken"
        case resourceId = "ResourceId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let aliasIds = aliasIds {
            var aliasIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .aliasIds)
            for connectionaliasidlist0 in aliasIds {
                try aliasIdsContainer.encode(connectionaliasidlist0)
            }
        }
        if let limit = limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let resourceId = resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
    }
}
