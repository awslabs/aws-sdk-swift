// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the information used to create a WorkSpace.</p>
public struct WorkspaceRequest: Equatable {
    /// <p>The identifier of the bundle for the WorkSpace. You can use <a>DescribeWorkspaceBundles</a> to list the available bundles.</p>
    public let bundleId: String?
    /// <p>The identifier of the AWS Directory Service directory for the WorkSpace. You can use
    ///             <a>DescribeWorkspaceDirectories</a> to list the available directories.</p>
    public let directoryId: String?
    /// <p>Indicates whether the data stored on the root volume is encrypted.</p>
    public let rootVolumeEncryptionEnabled: Bool?
    /// <p>The tags for the WorkSpace.</p>
    public let tags: [Tag]?
    /// <p>The user name of the user for the WorkSpace. This user name must exist in the AWS
    ///          Directory Service directory for the WorkSpace.</p>
    public let userName: String?
    /// <p>Indicates whether the data stored on the user volume is encrypted.</p>
    public let userVolumeEncryptionEnabled: Bool?
    /// <p>The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace.
    ///          Amazon WorkSpaces does not support asymmetric CMKs.</p>
    public let volumeEncryptionKey: String?
    /// <p>The WorkSpace properties.</p>
    public let workspaceProperties: WorkspaceProperties?

    public init (
        bundleId: String? = nil,
        directoryId: String? = nil,
        rootVolumeEncryptionEnabled: Bool? = nil,
        tags: [Tag]? = nil,
        userName: String? = nil,
        userVolumeEncryptionEnabled: Bool? = nil,
        volumeEncryptionKey: String? = nil,
        workspaceProperties: WorkspaceProperties? = nil
    )
    {
        self.bundleId = bundleId
        self.directoryId = directoryId
        self.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled
        self.tags = tags
        self.userName = userName
        self.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled
        self.volumeEncryptionKey = volumeEncryptionKey
        self.workspaceProperties = workspaceProperties
    }
}
