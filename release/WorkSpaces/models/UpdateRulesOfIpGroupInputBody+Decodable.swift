// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateRulesOfIpGroupInputBody: Equatable {
    public let groupId: String?
    public let userRules: [IpRuleItem]?
}

extension UpdateRulesOfIpGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groupId = "GroupId"
        case userRules = "UserRules"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupId)
        groupId = groupIdDecoded
        let userRulesContainer = try containerValues.decodeIfPresent([IpRuleItem].self, forKey: .userRules)
        var userRulesDecoded0:[IpRuleItem]? = nil
        if let userRulesContainer = userRulesContainer {
            userRulesDecoded0 = [IpRuleItem]()
            for structure0 in userRulesContainer {
                userRulesDecoded0?.append(structure0)
            }
        }
        userRules = userRulesDecoded0
    }
}
