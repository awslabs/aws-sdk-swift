// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWorkspaceImagePermissionsOutputBody: Equatable {
    public let imageId: String?
    public let imagePermissions: [ImagePermission]?
    public let nextToken: String?
}

extension DescribeWorkspaceImagePermissionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageId = "ImageId"
        case imagePermissions = "ImagePermissions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let imagePermissionsContainer = try containerValues.decodeIfPresent([ImagePermission].self, forKey: .imagePermissions)
        var imagePermissionsDecoded0:[ImagePermission]? = nil
        if let imagePermissionsContainer = imagePermissionsContainer {
            imagePermissionsDecoded0 = [ImagePermission]()
            for structure0 in imagePermissionsContainer {
                imagePermissionsDecoded0?.append(structure0)
            }
        }
        imagePermissions = imagePermissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
