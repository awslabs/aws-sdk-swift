// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Snapshot: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case snapshotTime = "SnapshotTime"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let snapshotTime = snapshotTime {
            try encodeContainer.encode(snapshotTime.timeIntervalSince1970, forKey: .snapshotTime)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let snapshotTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .snapshotTime)
        snapshotTime = snapshotTimeDecoded
    }
}
