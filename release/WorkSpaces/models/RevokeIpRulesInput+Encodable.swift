// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RevokeIpRulesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case groupId = "GroupId"
        case userRules = "UserRules"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groupId = groupId {
            try encodeContainer.encode(groupId, forKey: .groupId)
        }
        if let userRules = userRules {
            var userRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .userRules)
            for iprevokedrulelist0 in userRules {
                try userRulesContainer.encode(iprevokedrulelist0)
            }
        }
    }
}
