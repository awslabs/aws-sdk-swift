// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ImportWorkspaceImageInput: Equatable {
    /// <p>If specified, the version of Microsoft Office to subscribe to. Valid only for Windows 10
    ///          BYOL images. For more information about subscribing to Office for BYOL images, see
    ///          <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html">
    ///             Bring Your Own Windows Desktop Licenses</a>.</p>
    ///
    ///          <note>
    ///             <p>Although this parameter is an array, only one item is allowed at this time.</p>
    ///          </note>
    public let applications: [Application]?
    /// <p>The identifier of the EC2 image.</p>
    public let ec2ImageId: String?
    /// <p>The description of the WorkSpace image.</p>
    public let imageDescription: String?
    /// <p>The name of the WorkSpace image.</p>
    public let imageName: String?
    /// <p>The ingestion process to be used when importing the image, depending on which protocol
    ///          you want to use for your BYOL Workspace image, either PCoIP or WorkSpaces Streaming Protocol
    ///          (WSP). To use WSP, specify a value that ends in <code>_WSP</code>. To use PCoIP, specify a value
    ///          that does not end in <code>_WSP</code>. </p>
    ///
    ///          <p>For non-GPU-enabled bundles (bundles other than Graphics or GraphicsPro), specify
    ///          <code>BYOL_REGULAR</code> or <code>BYOL_REGULAR_WSP</code>, depending on the protocol.</p>
    public let ingestionProcess: WorkspaceImageIngestionProcess?
    /// <p>The tags. Each WorkSpaces resource can have a maximum of 50 tags.</p>
    public let tags: [Tag]?

    public init (
        applications: [Application]? = nil,
        ec2ImageId: String? = nil,
        imageDescription: String? = nil,
        imageName: String? = nil,
        ingestionProcess: WorkspaceImageIngestionProcess? = nil,
        tags: [Tag]? = nil
    )
    {
        self.applications = applications
        self.ec2ImageId = ec2ImageId
        self.imageDescription = imageDescription
        self.imageName = imageName
        self.ingestionProcess = ingestionProcess
        self.tags = tags
    }
}
