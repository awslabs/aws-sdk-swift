// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWorkspaceBundlesInputBody: Equatable {
    public let bundleIds: [String]?
    public let owner: String?
    public let nextToken: String?
}

extension DescribeWorkspaceBundlesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bundleIds = "BundleIds"
        case nextToken = "NextToken"
        case owner = "Owner"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bundleIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .bundleIds)
        var bundleIdsDecoded0:[String]? = nil
        if let bundleIdsContainer = bundleIdsContainer {
            bundleIdsDecoded0 = [String]()
            for string0 in bundleIdsContainer {
                bundleIdsDecoded0?.append(string0)
            }
        }
        bundleIds = bundleIdsDecoded0
        let ownerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .owner)
        owner = ownerDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
