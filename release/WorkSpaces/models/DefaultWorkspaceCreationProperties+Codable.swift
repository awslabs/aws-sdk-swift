// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DefaultWorkspaceCreationProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customSecurityGroupId = "CustomSecurityGroupId"
        case defaultOu = "DefaultOu"
        case enableInternetAccess = "EnableInternetAccess"
        case enableMaintenanceMode = "EnableMaintenanceMode"
        case enableWorkDocs = "EnableWorkDocs"
        case userEnabledAsLocalAdministrator = "UserEnabledAsLocalAdministrator"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customSecurityGroupId = customSecurityGroupId {
            try encodeContainer.encode(customSecurityGroupId, forKey: .customSecurityGroupId)
        }
        if let defaultOu = defaultOu {
            try encodeContainer.encode(defaultOu, forKey: .defaultOu)
        }
        if let enableInternetAccess = enableInternetAccess {
            try encodeContainer.encode(enableInternetAccess, forKey: .enableInternetAccess)
        }
        if let enableMaintenanceMode = enableMaintenanceMode {
            try encodeContainer.encode(enableMaintenanceMode, forKey: .enableMaintenanceMode)
        }
        if let enableWorkDocs = enableWorkDocs {
            try encodeContainer.encode(enableWorkDocs, forKey: .enableWorkDocs)
        }
        if let userEnabledAsLocalAdministrator = userEnabledAsLocalAdministrator {
            try encodeContainer.encode(userEnabledAsLocalAdministrator, forKey: .userEnabledAsLocalAdministrator)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enableWorkDocsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enableWorkDocs)
        enableWorkDocs = enableWorkDocsDecoded
        let enableInternetAccessDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enableInternetAccess)
        enableInternetAccess = enableInternetAccessDecoded
        let defaultOuDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultOu)
        defaultOu = defaultOuDecoded
        let customSecurityGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customSecurityGroupId)
        customSecurityGroupId = customSecurityGroupIdDecoded
        let userEnabledAsLocalAdministratorDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .userEnabledAsLocalAdministrator)
        userEnabledAsLocalAdministrator = userEnabledAsLocalAdministratorDecoded
        let enableMaintenanceModeDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enableMaintenanceMode)
        enableMaintenanceMode = enableMaintenanceModeDecoded
    }
}
