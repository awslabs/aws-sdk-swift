// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClientPropertiesResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientProperties = "ClientProperties"
        case resourceId = "ResourceId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientProperties = clientProperties {
            try encodeContainer.encode(clientProperties, forKey: .clientProperties)
        }
        if let resourceId = resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceId)
        resourceId = resourceIdDecoded
        let clientPropertiesDecoded = try containerValues.decodeIfPresent(ClientProperties.self, forKey: .clientProperties)
        clientProperties = clientPropertiesDecoded
    }
}
