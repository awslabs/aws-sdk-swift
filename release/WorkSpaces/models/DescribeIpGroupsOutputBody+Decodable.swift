// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeIpGroupsOutputBody: Equatable {
    public let result: [WorkspacesIpGroup]?
    public let nextToken: String?
}

extension DescribeIpGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case result = "Result"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultContainer = try containerValues.decodeIfPresent([WorkspacesIpGroup].self, forKey: .result)
        var resultDecoded0:[WorkspacesIpGroup]? = nil
        if let resultContainer = resultContainer {
            resultDecoded0 = [WorkspacesIpGroup]()
            for structure0 in resultContainer {
                resultDecoded0?.append(structure0)
            }
        }
        result = resultDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
