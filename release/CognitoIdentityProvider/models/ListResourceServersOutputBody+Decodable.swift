// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceServersOutputBody: Equatable {
    public let resourceServers: [ResourceServerType]?
    public let nextToken: String?
}

extension ListResourceServersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case resourceServers = "ResourceServers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceServersContainer = try containerValues.decodeIfPresent([ResourceServerType].self, forKey: .resourceServers)
        var resourceServersDecoded0:[ResourceServerType]? = nil
        if let resourceServersContainer = resourceServersContainer {
            resourceServersDecoded0 = [ResourceServerType]()
            for structure0 in resourceServersContainer {
                resourceServersDecoded0?.append(structure0)
            }
        }
        resourceServers = resourceServersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
