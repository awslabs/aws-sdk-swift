// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ChangePasswordInputBody: Equatable {
    public let previousPassword: String?
    public let proposedPassword: String?
    public let accessToken: String?
}

extension ChangePasswordInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case previousPassword = "PreviousPassword"
        case proposedPassword = "ProposedPassword"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let previousPasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .previousPassword)
        previousPassword = previousPasswordDecoded
        let proposedPasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .proposedPassword)
        proposedPassword = proposedPasswordDecoded
        let accessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
    }
}
