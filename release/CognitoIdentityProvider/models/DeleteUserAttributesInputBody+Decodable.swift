// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteUserAttributesInputBody: Equatable {
    public let userAttributeNames: [String]?
    public let accessToken: String?
}

extension DeleteUserAttributesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case userAttributeNames = "UserAttributeNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userAttributeNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .userAttributeNames)
        var userAttributeNamesDecoded0:[String]? = nil
        if let userAttributeNamesContainer = userAttributeNamesContainer {
            userAttributeNamesDecoded0 = [String]()
            for string0 in userAttributeNamesContainer {
                userAttributeNamesDecoded0?.append(string0)
            }
        }
        userAttributeNames = userAttributeNamesDecoded0
        let accessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
    }
}
