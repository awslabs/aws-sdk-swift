// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AuthFlowType {
    case adminNoSrpAuth
    case adminUserPasswordAuth
    case customAuth
    case refreshToken
    case refreshTokenAuth
    case userPasswordAuth
    case userSrpAuth
    case sdkUnknown(String)
}

extension AuthFlowType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AuthFlowType] {
        return [
            .adminNoSrpAuth,
            .adminUserPasswordAuth,
            .customAuth,
            .refreshToken,
            .refreshTokenAuth,
            .userPasswordAuth,
            .userSrpAuth,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .adminNoSrpAuth: return "ADMIN_NO_SRP_AUTH"
        case .adminUserPasswordAuth: return "ADMIN_USER_PASSWORD_AUTH"
        case .customAuth: return "CUSTOM_AUTH"
        case .refreshToken: return "REFRESH_TOKEN"
        case .refreshTokenAuth: return "REFRESH_TOKEN_AUTH"
        case .userPasswordAuth: return "USER_PASSWORD_AUTH"
        case .userSrpAuth: return "USER_SRP_AUTH"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AuthFlowType(rawValue: rawValue) ?? AuthFlowType.sdkUnknown(rawValue)
    }
}
