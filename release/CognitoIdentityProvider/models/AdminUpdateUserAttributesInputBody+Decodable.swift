// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AdminUpdateUserAttributesInputBody: Equatable {
    public let userPoolId: String?
    public let username: String?
    public let userAttributes: [AttributeType]?
    public let clientMetadata: [String:String]?
}

extension AdminUpdateUserAttributesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientMetadata = "ClientMetadata"
        case userAttributes = "UserAttributes"
        case userPoolId = "UserPoolId"
        case username = "Username"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let usernameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .username)
        username = usernameDecoded
        let userAttributesContainer = try containerValues.decodeIfPresent([AttributeType].self, forKey: .userAttributes)
        var userAttributesDecoded0:[AttributeType]? = nil
        if let userAttributesContainer = userAttributesContainer {
            userAttributesDecoded0 = [AttributeType]()
            for structure0 in userAttributesContainer {
                userAttributesDecoded0?.append(structure0)
            }
        }
        userAttributes = userAttributesDecoded0
        let clientMetadataContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .clientMetadata)
        var clientMetadataDecoded0: [String:String]? = nil
        if let clientMetadataContainer = clientMetadataContainer {
            clientMetadataDecoded0 = [String:String]()
            for (key0, stringtype0) in clientMetadataContainer {
                clientMetadataDecoded0?[key0] = stringtype0
            }
        }
        clientMetadata = clientMetadataDecoded0
    }
}
