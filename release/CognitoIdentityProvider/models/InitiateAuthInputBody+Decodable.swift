// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InitiateAuthInputBody: Equatable {
    public let authFlow: AuthFlowType?
    public let authParameters: [String:String]?
    public let clientMetadata: [String:String]?
    public let clientId: String?
    public let analyticsMetadata: AnalyticsMetadataType?
    public let userContextData: UserContextDataType?
}

extension InitiateAuthInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case analyticsMetadata = "AnalyticsMetadata"
        case authFlow = "AuthFlow"
        case authParameters = "AuthParameters"
        case clientId = "ClientId"
        case clientMetadata = "ClientMetadata"
        case userContextData = "UserContextData"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authFlowDecoded = try containerValues.decodeIfPresent(AuthFlowType.self, forKey: .authFlow)
        authFlow = authFlowDecoded
        let authParametersContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .authParameters)
        var authParametersDecoded0: [String:String]? = nil
        if let authParametersContainer = authParametersContainer {
            authParametersDecoded0 = [String:String]()
            for (key0, stringtype0) in authParametersContainer {
                authParametersDecoded0?[key0] = stringtype0
            }
        }
        authParameters = authParametersDecoded0
        let clientMetadataContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .clientMetadata)
        var clientMetadataDecoded0: [String:String]? = nil
        if let clientMetadataContainer = clientMetadataContainer {
            clientMetadataDecoded0 = [String:String]()
            for (key0, stringtype0) in clientMetadataContainer {
                clientMetadataDecoded0?[key0] = stringtype0
            }
        }
        clientMetadata = clientMetadataDecoded0
        let clientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientId)
        clientId = clientIdDecoded
        let analyticsMetadataDecoded = try containerValues.decodeIfPresent(AnalyticsMetadataType.self, forKey: .analyticsMetadata)
        analyticsMetadata = analyticsMetadataDecoded
        let userContextDataDecoded = try containerValues.decodeIfPresent(UserContextDataType.self, forKey: .userContextData)
        userContextData = userContextDataDecoded
    }
}
