// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentityProvidersOutputBody: Equatable {
    public let providers: [ProviderDescription]?
    public let nextToken: String?
}

extension ListIdentityProvidersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case providers = "Providers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let providersContainer = try containerValues.decodeIfPresent([ProviderDescription].self, forKey: .providers)
        var providersDecoded0:[ProviderDescription]? = nil
        if let providersContainer = providersContainer {
            providersDecoded0 = [ProviderDescription]()
            for structure0 in providersContainer {
                providersDecoded0?.append(structure0)
            }
        }
        providers = providersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
