// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A container for information about an identity provider.</p>
public struct IdentityProviderType: Equatable {
    /// <p>A mapping of identity provider attributes to standard and custom user pool
    ///             attributes.</p>
    public let attributeMapping: [String:String]?
    /// <p>The date the identity provider was created.</p>
    public let creationDate: Date?
    /// <p>A list of identity provider identifiers.</p>
    public let idpIdentifiers: [String]?
    /// <p>The date the identity provider was last modified.</p>
    public let lastModifiedDate: Date?
    /// <p>The identity provider details. The following list describes the provider detail keys
    ///             for each identity provider type.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>For Google and Login with Amazon:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>client_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>client_secret</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_scopes</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>For Facebook:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>client_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>client_secret</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_scopes</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>api_version</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>For Sign in with Apple:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>client_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>team_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>key_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>private_key</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_scopes</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>For OIDC providers:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>client_id</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>client_secret</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>attributes_request_method</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>oidc_issuer</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_scopes</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_url <i>if not available from discovery URL specified
    ///                                 by oidc_issuer key</i>
    ///                      </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>token_url <i>if not available from discovery URL specified by
    ///                                 oidc_issuer key</i>
    ///                      </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>attributes_url <i>if not available from discovery URL specified
    ///                                 by oidc_issuer key</i>
    ///                      </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>jwks_uri <i>if not available from discovery URL specified by
    ///                                 oidc_issuer key</i>
    ///                      </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>authorize_scopes</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>For SAML providers:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>MetadataFile OR MetadataURL</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>IDPSignOut <i>optional</i>
    ///                      </p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///          </ul>
    public let providerDetails: [String:String]?
    /// <p>The identity provider name.</p>
    public let providerName: String?
    /// <p>The identity provider type.</p>
    public let providerType: IdentityProviderTypeType?
    /// <p>The user pool ID.</p>
    public let userPoolId: String?

    public init (
        attributeMapping: [String:String]? = nil,
        creationDate: Date? = nil,
        idpIdentifiers: [String]? = nil,
        lastModifiedDate: Date? = nil,
        providerDetails: [String:String]? = nil,
        providerName: String? = nil,
        providerType: IdentityProviderTypeType? = nil,
        userPoolId: String? = nil
    )
    {
        self.attributeMapping = attributeMapping
        self.creationDate = creationDate
        self.idpIdentifiers = idpIdentifiers
        self.lastModifiedDate = lastModifiedDate
        self.providerDetails = providerDetails
        self.providerName = providerName
        self.providerType = providerType
        self.userPoolId = userPoolId
    }
}
