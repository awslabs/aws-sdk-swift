// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccountRecoverySettingType: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case recoveryMechanisms = "RecoveryMechanisms"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let recoveryMechanisms = recoveryMechanisms {
            var recoveryMechanismsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .recoveryMechanisms)
            for recoverymechanismstype0 in recoveryMechanisms {
                try recoveryMechanismsContainer.encode(recoverymechanismstype0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recoveryMechanismsContainer = try containerValues.decodeIfPresent([RecoveryOptionType].self, forKey: .recoveryMechanisms)
        var recoveryMechanismsDecoded0:[RecoveryOptionType]? = nil
        if let recoveryMechanismsContainer = recoveryMechanismsContainer {
            recoveryMechanismsDecoded0 = [RecoveryOptionType]()
            for structure0 in recoveryMechanismsContainer {
                recoveryMechanismsDecoded0?.append(structure0)
            }
        }
        recoveryMechanisms = recoveryMechanismsDecoded0
    }
}
