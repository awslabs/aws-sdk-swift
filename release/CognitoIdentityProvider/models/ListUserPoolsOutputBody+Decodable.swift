// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserPoolsOutputBody: Equatable {
    public let userPools: [UserPoolDescriptionType]?
    public let nextToken: String?
}

extension ListUserPoolsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case userPools = "UserPools"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolsContainer = try containerValues.decodeIfPresent([UserPoolDescriptionType].self, forKey: .userPools)
        var userPoolsDecoded0:[UserPoolDescriptionType]? = nil
        if let userPoolsContainer = userPoolsContainer {
            userPoolsDecoded0 = [UserPoolDescriptionType]()
            for structure0 in userPoolsContainer {
                userPoolsDecoded0?.append(structure0)
            }
        }
        userPools = userPoolsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
