// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum IdentityProviderTypeType {
    case facebook
    case google
    case loginwithamazon
    case oidc
    case saml
    case signinwithapple
    case sdkUnknown(String)
}

extension IdentityProviderTypeType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [IdentityProviderTypeType] {
        return [
            .facebook,
            .google,
            .loginwithamazon,
            .oidc,
            .saml,
            .signinwithapple,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .facebook: return "Facebook"
        case .google: return "Google"
        case .loginwithamazon: return "LoginWithAmazon"
        case .oidc: return "OIDC"
        case .saml: return "SAML"
        case .signinwithapple: return "SignInWithApple"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = IdentityProviderTypeType(rawValue: rawValue) ?? IdentityProviderTypeType.sdkUnknown(rawValue)
    }
}
