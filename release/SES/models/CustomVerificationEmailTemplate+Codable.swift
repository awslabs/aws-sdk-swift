// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomVerificationEmailTemplate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case failureRedirectionURL = "FailureRedirectionURL"
        case fromEmailAddress = "FromEmailAddress"
        case successRedirectionURL = "SuccessRedirectionURL"
        case templateName = "TemplateName"
        case templateSubject = "TemplateSubject"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let failureRedirectionURL = failureRedirectionURL {
            try container.encode(failureRedirectionURL, forKey: Key("FailureRedirectionURL"))
        }
        if let fromEmailAddress = fromEmailAddress {
            try container.encode(fromEmailAddress, forKey: Key("FromEmailAddress"))
        }
        if let successRedirectionURL = successRedirectionURL {
            try container.encode(successRedirectionURL, forKey: Key("SuccessRedirectionURL"))
        }
        if let templateName = templateName {
            try container.encode(templateName, forKey: Key("TemplateName"))
        }
        if let templateSubject = templateSubject {
            try container.encode(templateSubject, forKey: Key("TemplateSubject"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let templateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let fromEmailAddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fromEmailAddress)
        fromEmailAddress = fromEmailAddressDecoded
        let templateSubjectDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateSubject)
        templateSubject = templateSubjectDecoded
        let successRedirectionURLDecoded = try containerValues.decodeIfPresent(String.self, forKey: .successRedirectionURL)
        successRedirectionURL = successRedirectionURLDecoded
        let failureRedirectionURLDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureRedirectionURL)
        failureRedirectionURL = failureRedirectionURLDecoded
    }
}
