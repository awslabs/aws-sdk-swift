// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ReceiptIpFilter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cidr = "Cidr"
        case policy = "Policy"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let cidr = cidr {
            try container.encode(cidr, forKey: Key("Cidr"))
        }
        if let policy = policy {
            try container.encode(policy, forKey: Key("Policy"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyDecoded = try containerValues.decodeIfPresent(ReceiptFilterPolicy.self, forKey: .policy)
        policy = policyDecoded
        let cidrDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cidr)
        cidr = cidrDecoded
    }
}
