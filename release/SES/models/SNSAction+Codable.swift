// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SNSAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case encoding = "Encoding"
        case topicArn = "TopicArn"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let encoding = encoding {
            try container.encode(encoding, forKey: Key("Encoding"))
        }
        if let topicArn = topicArn {
            try container.encode(topicArn, forKey: Key("TopicArn"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .topicArn)
        topicArn = topicArnDecoded
        let encodingDecoded = try containerValues.decodeIfPresent(SNSActionEncoding.self, forKey: .encoding)
        encoding = encodingDecoded
    }
}
