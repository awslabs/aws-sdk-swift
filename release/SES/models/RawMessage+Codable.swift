// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RawMessage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case data = "Data"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let data = data {
            try container.encode(data.base64EncodedString(), forKey: Key("Data"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.data) {
            do {
                let dataDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .data)
                data = dataDecoded
            } catch {
                data = "".data(using: .utf8)
            }
        } else {
            data = nil
        }
    }
}
