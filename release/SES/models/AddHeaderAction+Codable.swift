// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddHeaderAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case headerName = "HeaderName"
        case headerValue = "HeaderValue"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let headerName = headerName {
            try container.encode(headerName, forKey: Key("HeaderName"))
        }
        if let headerValue = headerValue {
            try container.encode(headerValue, forKey: Key("HeaderValue"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .headerName)
        headerName = headerNameDecoded
        let headerValueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .headerValue)
        headerValue = headerValueDecoded
    }
}
