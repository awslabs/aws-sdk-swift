// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Receipt rules enable you to specify which actions Amazon SES should take when it receives
///             mail on behalf of one or more email addresses or domains that you own.</p>
///         <p>Each receipt rule defines a set of email addresses or domains that it applies to. If
///             the email addresses or domains match at least one recipient address of the message,
///             Amazon SES executes all of the receipt rule's actions on the message.</p>
///         <p>For information about setting up receipt rules, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-receipt-rules.html">Amazon SES Developer
///                 Guide</a>.</p>
public struct ReceiptRule: Equatable {
    /// <p>An ordered list of actions to perform on messages that match at least one of the
    ///             recipient email addresses or domains specified in the receipt rule.</p>
    public let actions: [ReceiptAction]?
    /// <p>If <code>true</code>, the receipt rule is active. The default value is
    ///                 <code>false</code>.</p>
    public let enabled: Bool
    /// <p>The name of the receipt rule. The name must:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9),
    ///                     underscores (_), or dashes (-).</p>
    ///             </li>
    ///             <li>
    ///                 <p>Start and end with a letter or number.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Contain less than 64 characters.</p>
    ///             </li>
    ///          </ul>
    public let name: String?
    /// <p>The recipient domains and email addresses that the receipt rule applies to. If this
    ///             field is not specified, this rule will match all recipients under all verified
    ///             domains.</p>
    public let recipients: [String]?
    /// <p>If <code>true</code>, then messages that this receipt rule applies to are scanned for
    ///             spam and viruses. The default value is <code>false</code>.</p>
    public let scanEnabled: Bool
    /// <p>Specifies whether Amazon SES should require that incoming email is delivered over a
    ///             connection encrypted with Transport Layer Security (TLS). If this parameter is set to
    ///                 <code>Require</code>, Amazon SES will bounce emails that are not received over TLS. The
    ///             default is <code>Optional</code>.</p>
    public let tlsPolicy: TlsPolicy?

    public init (
        actions: [ReceiptAction]? = nil,
        enabled: Bool = false,
        name: String? = nil,
        recipients: [String]? = nil,
        scanEnabled: Bool = false,
        tlsPolicy: TlsPolicy? = nil
    )
    {
        self.actions = actions
        self.enabled = enabled
        self.name = name
        self.recipients = recipients
        self.scanEnabled = scanEnabled
        self.tlsPolicy = tlsPolicy
    }
}
