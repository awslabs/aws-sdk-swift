// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BouncedRecipientInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bounceType = "BounceType"
        case recipient = "Recipient"
        case recipientArn = "RecipientArn"
        case recipientDsnFields = "RecipientDsnFields"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let bounceType = bounceType {
            try container.encode(bounceType, forKey: Key("BounceType"))
        }
        if let recipient = recipient {
            try container.encode(recipient, forKey: Key("Recipient"))
        }
        if let recipientArn = recipientArn {
            try container.encode(recipientArn, forKey: Key("RecipientArn"))
        }
        if let recipientDsnFields = recipientDsnFields {
            try container.encode(recipientDsnFields, forKey: Key("RecipientDsnFields"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recipientDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recipient)
        recipient = recipientDecoded
        let recipientArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recipientArn)
        recipientArn = recipientArnDecoded
        let bounceTypeDecoded = try containerValues.decodeIfPresent(BounceType.self, forKey: .bounceType)
        bounceType = bounceTypeDecoded
        let recipientDsnFieldsDecoded = try containerValues.decodeIfPresent(RecipientDsnFields.self, forKey: .recipientDsnFields)
        recipientDsnFields = recipientDsnFieldsDecoded
    }
}
