// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the notification attributes of an identity, including whether an identity
///             has Amazon Simple Notification Service (Amazon SNS) topics set for bounce, complaint, and/or delivery notifications,
///             and whether feedback forwarding is enabled for bounce and complaint
///             notifications.</p>
public struct IdentityNotificationAttributes: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish bounce
    ///             notifications.</p>
    public let bounceTopic: String?
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish complaint
    ///             notifications.</p>
    public let complaintTopic: String?
    /// <p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish delivery
    ///             notifications.</p>
    public let deliveryTopic: String?
    /// <p>Describes whether Amazon SES will forward bounce and complaint notifications as email.
    ///                 <code>true</code> indicates that Amazon SES will forward bounce and complaint
    ///             notifications as email, while <code>false</code> indicates that bounce and complaint
    ///             notifications will be published only to the specified bounce and complaint Amazon SNS
    ///             topics.</p>
    public let forwardingEnabled: Bool
    /// <p>Describes whether Amazon SES includes the original email headers in Amazon SNS notifications of
    ///             type <code>Bounce</code>. A value of <code>true</code> specifies that Amazon SES will include
    ///             headers in bounce notifications, and a value of <code>false</code> specifies that Amazon SES
    ///             will not include headers in bounce notifications.</p>
    public let headersInBounceNotificationsEnabled: Bool
    /// <p>Describes whether Amazon SES includes the original email headers in Amazon SNS notifications of
    ///             type <code>Complaint</code>. A value of <code>true</code> specifies that Amazon SES will
    ///             include headers in complaint notifications, and a value of <code>false</code> specifies
    ///             that Amazon SES will not include headers in complaint notifications.</p>
    public let headersInComplaintNotificationsEnabled: Bool
    /// <p>Describes whether Amazon SES includes the original email headers in Amazon SNS notifications of
    ///             type <code>Delivery</code>. A value of <code>true</code> specifies that Amazon SES will
    ///             include headers in delivery notifications, and a value of <code>false</code> specifies
    ///             that Amazon SES will not include headers in delivery notifications.</p>
    public let headersInDeliveryNotificationsEnabled: Bool

    public init (
        bounceTopic: String? = nil,
        complaintTopic: String? = nil,
        deliveryTopic: String? = nil,
        forwardingEnabled: Bool = false,
        headersInBounceNotificationsEnabled: Bool = false,
        headersInComplaintNotificationsEnabled: Bool = false,
        headersInDeliveryNotificationsEnabled: Bool = false
    )
    {
        self.bounceTopic = bounceTopic
        self.complaintTopic = complaintTopic
        self.deliveryTopic = deliveryTopic
        self.forwardingEnabled = forwardingEnabled
        self.headersInBounceNotificationsEnabled = headersInBounceNotificationsEnabled
        self.headersInComplaintNotificationsEnabled = headersInComplaintNotificationsEnabled
        self.headersInDeliveryNotificationsEnabled = headersInDeliveryNotificationsEnabled
    }
}
