// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IdentityMailFromDomainAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case behaviorOnMXFailure = "BehaviorOnMXFailure"
        case mailFromDomain = "MailFromDomain"
        case mailFromDomainStatus = "MailFromDomainStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let behaviorOnMXFailure = behaviorOnMXFailure {
            try container.encode(behaviorOnMXFailure, forKey: Key("BehaviorOnMXFailure"))
        }
        if let mailFromDomain = mailFromDomain {
            try container.encode(mailFromDomain, forKey: Key("MailFromDomain"))
        }
        if let mailFromDomainStatus = mailFromDomainStatus {
            try container.encode(mailFromDomainStatus, forKey: Key("MailFromDomainStatus"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mailFromDomainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mailFromDomain)
        mailFromDomain = mailFromDomainDecoded
        let mailFromDomainStatusDecoded = try containerValues.decodeIfPresent(CustomMailFromStatus.self, forKey: .mailFromDomainStatus)
        mailFromDomainStatus = mailFromDomainStatusDecoded
        let behaviorOnMXFailureDecoded = try containerValues.decodeIfPresent(BehaviorOnMXFailure.self, forKey: .behaviorOnMXFailure)
        behaviorOnMXFailure = behaviorOnMXFailureDecoded
    }
}
