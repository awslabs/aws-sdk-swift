// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Message: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case body = "Body"
        case subject = "Subject"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let body = body {
            try container.encode(body, forKey: Key("Body"))
        }
        if let subject = subject {
            try container.encode(subject, forKey: Key("Subject"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subjectDecoded = try containerValues.decodeIfPresent(Content.self, forKey: .subject)
        subject = subjectDecoded
        let bodyDecoded = try containerValues.decodeIfPresent(Body.self, forKey: .body)
        body = bodyDecoded
    }
}
