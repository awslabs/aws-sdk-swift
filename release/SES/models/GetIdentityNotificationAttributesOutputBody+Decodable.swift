// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdentityNotificationAttributesOutputBody: Equatable {
    public let notificationAttributes: [String:IdentityNotificationAttributes]?
}

extension GetIdentityNotificationAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case notificationAttributes = "NotificationAttributes"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetIdentityNotificationAttributesResult"))
        if containerValues.contains(.notificationAttributes) {
            struct KeyVal0{struct key{}; struct value{}}
            let notificationAttributesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: MapEntry<String, IdentityNotificationAttributes, KeyVal0.key, KeyVal0.value>.CodingKeys.self, forKey: .notificationAttributes)
            if let notificationAttributesWrappedContainer = notificationAttributesWrappedContainer {
                let notificationAttributesContainer = try notificationAttributesWrappedContainer.decodeIfPresent([MapKeyValue<String, IdentityNotificationAttributes, KeyVal0.key, KeyVal0.value>].self, forKey: .entry)
                var notificationAttributesBuffer: [String:IdentityNotificationAttributes]? = nil
                if let notificationAttributesContainer = notificationAttributesContainer {
                    notificationAttributesBuffer = [String:IdentityNotificationAttributes]()
                    for structureContainer0 in notificationAttributesContainer {
                        notificationAttributesBuffer?[structureContainer0.key] = structureContainer0.value
                    }
                }
                notificationAttributes = notificationAttributesBuffer
            } else {
                notificationAttributes = [:]
            }
        } else {
            notificationAttributes = nil
        }
    }
}
