// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdentityVerificationAttributesOutputBody: Equatable {
    public let verificationAttributes: [String:IdentityVerificationAttributes]?
}

extension GetIdentityVerificationAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case verificationAttributes = "VerificationAttributes"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetIdentityVerificationAttributesResult"))
        if containerValues.contains(.verificationAttributes) {
            struct KeyVal0{struct key{}; struct value{}}
            let verificationAttributesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: MapEntry<String, IdentityVerificationAttributes, KeyVal0.key, KeyVal0.value>.CodingKeys.self, forKey: .verificationAttributes)
            if let verificationAttributesWrappedContainer = verificationAttributesWrappedContainer {
                let verificationAttributesContainer = try verificationAttributesWrappedContainer.decodeIfPresent([MapKeyValue<String, IdentityVerificationAttributes, KeyVal0.key, KeyVal0.value>].self, forKey: .entry)
                var verificationAttributesBuffer: [String:IdentityVerificationAttributes]? = nil
                if let verificationAttributesContainer = verificationAttributesContainer {
                    verificationAttributesBuffer = [String:IdentityVerificationAttributes]()
                    for structureContainer0 in verificationAttributesContainer {
                        verificationAttributesBuffer?[structureContainer0.key] = structureContainer0.value
                    }
                }
                verificationAttributes = verificationAttributesBuffer
            } else {
                verificationAttributes = [:]
            }
        } else {
            verificationAttributes = nil
        }
    }
}
