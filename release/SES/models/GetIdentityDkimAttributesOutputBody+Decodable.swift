// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdentityDkimAttributesOutputBody: Equatable {
    public let dkimAttributes: [String:IdentityDkimAttributes]?
}

extension GetIdentityDkimAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dkimAttributes = "DkimAttributes"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetIdentityDkimAttributesResult"))
        if containerValues.contains(.dkimAttributes) {
            struct KeyVal0{struct key{}; struct value{}}
            let dkimAttributesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: MapEntry<String, IdentityDkimAttributes, KeyVal0.key, KeyVal0.value>.CodingKeys.self, forKey: .dkimAttributes)
            if let dkimAttributesWrappedContainer = dkimAttributesWrappedContainer {
                let dkimAttributesContainer = try dkimAttributesWrappedContainer.decodeIfPresent([MapKeyValue<String, IdentityDkimAttributes, KeyVal0.key, KeyVal0.value>].self, forKey: .entry)
                var dkimAttributesBuffer: [String:IdentityDkimAttributes]? = nil
                if let dkimAttributesContainer = dkimAttributesContainer {
                    dkimAttributesBuffer = [String:IdentityDkimAttributes]()
                    for structureContainer0 in dkimAttributesContainer {
                        dkimAttributesBuffer?[structureContainer0.key] = structureContainer0.value
                    }
                }
                dkimAttributes = dkimAttributesBuffer
            } else {
                dkimAttributes = [:]
            }
        } else {
            dkimAttributes = nil
        }
    }
}
