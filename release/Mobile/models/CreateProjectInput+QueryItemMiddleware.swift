// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateProjectInputQueryItemMiddleware: Middleware {
    public let id: String = "CreateProjectInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<CreateProjectInput>,
                  next: H) -> Swift.Result<OperationOutput<CreateProjectOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let snapshotId = input.operationInput.snapshotId {
            let snapshotIdQueryItem = URLQueryItem(name: "snapshotId".urlPercentEncoding(), value: String(snapshotId).urlPercentEncoding())
            input.builder.withQueryItem(snapshotIdQueryItem)
        }
        if let name = input.operationInput.name {
            let nameQueryItem = URLQueryItem(name: "name".urlPercentEncoding(), value: String(name).urlPercentEncoding())
            input.builder.withQueryItem(nameQueryItem)
        }
        if let region = input.operationInput.region {
            let regionQueryItem = URLQueryItem(name: "region".urlPercentEncoding(), value: String(region).urlPercentEncoding())
            input.builder.withQueryItem(regionQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<CreateProjectInput>
    public typealias MOutput = OperationOutput<CreateProjectOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<CreateProjectOutputError>
}
