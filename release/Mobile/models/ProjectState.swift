// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///             Synchronization state for a project.
///         </p>
public enum ProjectState {
    case importing
    case normal
    case syncing
    case sdkUnknown(String)
}

extension ProjectState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProjectState] {
        return [
            .importing,
            .normal,
            .syncing,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .importing: return "IMPORTING"
        case .normal: return "NORMAL"
        case .syncing: return "SYNCING"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProjectState(rawValue: rawValue) ?? ProjectState.sdkUnknown(rawValue)
    }
}
