// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBundlesOutputBody: Equatable {
    public let bundleList: [BundleDetails]?
    public let nextToken: String?
}

extension ListBundlesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bundleList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bundleListContainer = try containerValues.decodeIfPresent([BundleDetails].self, forKey: .bundleList)
        var bundleListDecoded0:[BundleDetails]? = nil
        if let bundleListContainer = bundleListContainer {
            bundleListDecoded0 = [BundleDetails]()
            for structure0 in bundleListContainer {
                bundleListDecoded0?.append(structure0)
            }
        }
        bundleList = bundleListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
