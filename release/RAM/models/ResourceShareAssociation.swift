// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an association with a resource share.</p>
public struct ResourceShareAssociation: Equatable {
    /// <p>The associated entity. For resource associations, this is the ARN of the resource.
    ///        For principal associations, this is the ID of an AWS account or the ARN of an OU or
    ///        organization from AWS Organizations.</p>
    public let associatedEntity: String?
    /// <p>The association type.</p>
    public let associationType: ResourceShareAssociationType?
    /// <p>The time when the association was created.</p>
    public let creationTime: Date?
    /// <p>Indicates whether the principal belongs to the same AWS organization as the AWS account that owns the resource share.</p>
    public let external: Bool?
    /// <p>The time when the association was last updated.</p>
    public let lastUpdatedTime: Date?
    /// <p>The Amazon Resource Name (ARN) of the resource share.</p>
    public let resourceShareArn: String?
    /// <p>The name of the resource share.</p>
    public let resourceShareName: String?
    /// <p>The status of the association.</p>
    public let status: ResourceShareAssociationStatus?
    /// <p>A message about the status of the association.</p>
    public let statusMessage: String?

    public init (
        associatedEntity: String? = nil,
        associationType: ResourceShareAssociationType? = nil,
        creationTime: Date? = nil,
        external: Bool? = nil,
        lastUpdatedTime: Date? = nil,
        resourceShareArn: String? = nil,
        resourceShareName: String? = nil,
        status: ResourceShareAssociationStatus? = nil,
        statusMessage: String? = nil
    )
    {
        self.associatedEntity = associatedEntity
        self.associationType = associationType
        self.creationTime = creationTime
        self.external = external
        self.lastUpdatedTime = lastUpdatedTime
        self.resourceShareArn = resourceShareArn
        self.resourceShareName = resourceShareName
        self.status = status
        self.statusMessage = statusMessage
    }
}
