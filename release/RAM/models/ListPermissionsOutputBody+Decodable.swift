// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPermissionsOutputBody: Equatable {
    public let permissions: [ResourceSharePermissionSummary]?
    public let nextToken: String?
}

extension ListPermissionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case permissions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionsContainer = try containerValues.decodeIfPresent([ResourceSharePermissionSummary].self, forKey: .permissions)
        var permissionsDecoded0:[ResourceSharePermissionSummary]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [ResourceSharePermissionSummary]()
            for structure0 in permissionsContainer {
                permissionsDecoded0?.append(structure0)
            }
        }
        permissions = permissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
