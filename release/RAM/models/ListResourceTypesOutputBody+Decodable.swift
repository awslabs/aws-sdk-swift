// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceTypesOutputBody: Equatable {
    public let resourceTypes: [ServiceNameAndResourceType]?
    public let nextToken: String?
}

extension ListResourceTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case resourceTypes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceTypesContainer = try containerValues.decodeIfPresent([ServiceNameAndResourceType].self, forKey: .resourceTypes)
        var resourceTypesDecoded0:[ServiceNameAndResourceType]? = nil
        if let resourceTypesContainer = resourceTypesContainer {
            resourceTypesDecoded0 = [ServiceNameAndResourceType]()
            for structure0 in resourceTypesContainer {
                resourceTypesDecoded0?.append(structure0)
            }
        }
        resourceTypes = resourceTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
