// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceShareAssociationsOutputBody: Equatable {
    public let resourceShareAssociations: [ResourceShareAssociation]?
    public let nextToken: String?
}

extension GetResourceShareAssociationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case resourceShareAssociations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceShareAssociationsContainer = try containerValues.decodeIfPresent([ResourceShareAssociation].self, forKey: .resourceShareAssociations)
        var resourceShareAssociationsDecoded0:[ResourceShareAssociation]? = nil
        if let resourceShareAssociationsContainer = resourceShareAssociationsContainer {
            resourceShareAssociationsDecoded0 = [ResourceShareAssociation]()
            for structure0 in resourceShareAssociationsContainer {
                resourceShareAssociationsDecoded0?.append(structure0)
            }
        }
        resourceShareAssociations = resourceShareAssociationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
