// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateResourceShareInputBody: Equatable {
    public let resourceShareArn: String?
    public let resourceArns: [String]?
    public let principals: [String]?
    public let clientToken: String?
}

extension AssociateResourceShareInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case principals
        case resourceArns
        case resourceShareArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceShareArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceShareArn)
        resourceShareArn = resourceShareArnDecoded
        let resourceArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .resourceArns)
        var resourceArnsDecoded0:[String]? = nil
        if let resourceArnsContainer = resourceArnsContainer {
            resourceArnsDecoded0 = [String]()
            for string0 in resourceArnsContainer {
                resourceArnsDecoded0?.append(string0)
            }
        }
        resourceArns = resourceArnsDecoded0
        let principalsContainer = try containerValues.decodeIfPresent([String].self, forKey: .principals)
        var principalsDecoded0:[String]? = nil
        if let principalsContainer = principalsContainer {
            principalsDecoded0 = [String]()
            for string0 in principalsContainer {
                principalsDecoded0?.append(string0)
            }
        }
        principals = principalsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
