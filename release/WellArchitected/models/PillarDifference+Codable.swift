// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PillarDifference: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case differenceStatus = "DifferenceStatus"
        case pillarId = "PillarId"
        case questionDifferences = "QuestionDifferences"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let differenceStatus = differenceStatus {
            try encodeContainer.encode(differenceStatus.rawValue, forKey: .differenceStatus)
        }
        if let pillarId = pillarId {
            try encodeContainer.encode(pillarId, forKey: .pillarId)
        }
        if let questionDifferences = questionDifferences {
            var questionDifferencesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .questionDifferences)
            for questiondifferences0 in questionDifferences {
                try questionDifferencesContainer.encode(questiondifferences0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pillarIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pillarId)
        pillarId = pillarIdDecoded
        let differenceStatusDecoded = try containerValues.decodeIfPresent(DifferenceStatus.self, forKey: .differenceStatus)
        differenceStatus = differenceStatusDecoded
        let questionDifferencesContainer = try containerValues.decodeIfPresent([QuestionDifference].self, forKey: .questionDifferences)
        var questionDifferencesDecoded0:[QuestionDifference]? = nil
        if let questionDifferencesContainer = questionDifferencesContainer {
            questionDifferencesDecoded0 = [QuestionDifference]()
            for structure0 in questionDifferencesContainer {
                questionDifferencesDecoded0?.append(structure0)
            }
        }
        questionDifferences = questionDifferencesDecoded0
    }
}
