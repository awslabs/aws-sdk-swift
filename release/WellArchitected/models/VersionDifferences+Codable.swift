// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VersionDifferences: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pillarDifferences = "PillarDifferences"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pillarDifferences = pillarDifferences {
            var pillarDifferencesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pillarDifferences)
            for pillardifferences0 in pillarDifferences {
                try pillarDifferencesContainer.encode(pillardifferences0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pillarDifferencesContainer = try containerValues.decodeIfPresent([PillarDifference].self, forKey: .pillarDifferences)
        var pillarDifferencesDecoded0:[PillarDifference]? = nil
        if let pillarDifferencesContainer = pillarDifferencesContainer {
            pillarDifferencesDecoded0 = [PillarDifference]()
            for structure0 in pillarDifferencesContainer {
                pillarDifferencesDecoded0?.append(structure0)
            }
        }
        pillarDifferences = pillarDifferencesDecoded0
    }
}
