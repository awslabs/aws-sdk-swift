// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateLensesInputBody: Equatable {
    public let lensAliases: [String]?
}

extension AssociateLensesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lensAliases = "LensAliases"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lensAliasesContainer = try containerValues.decodeIfPresent([String].self, forKey: .lensAliases)
        var lensAliasesDecoded0:[String]? = nil
        if let lensAliasesContainer = lensAliasesContainer {
            lensAliasesDecoded0 = [String]()
            for string0 in lensAliasesContainer {
                lensAliasesDecoded0?.append(string0)
            }
        }
        lensAliases = lensAliasesDecoded0
    }
}
