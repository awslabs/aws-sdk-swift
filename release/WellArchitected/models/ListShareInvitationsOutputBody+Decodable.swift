// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListShareInvitationsOutputBody: Equatable {
    public let shareInvitationSummaries: [ShareInvitationSummary]?
    public let nextToken: String?
}

extension ListShareInvitationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case shareInvitationSummaries = "ShareInvitationSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shareInvitationSummariesContainer = try containerValues.decodeIfPresent([ShareInvitationSummary].self, forKey: .shareInvitationSummaries)
        var shareInvitationSummariesDecoded0:[ShareInvitationSummary]? = nil
        if let shareInvitationSummariesContainer = shareInvitationSummariesContainer {
            shareInvitationSummariesDecoded0 = [ShareInvitationSummary]()
            for structure0 in shareInvitationSummariesContainer {
                shareInvitationSummariesDecoded0?.append(structure0)
            }
        }
        shareInvitationSummaries = shareInvitationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
