// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkloadsOutputBody: Equatable {
    public let workloadSummaries: [WorkloadSummary]?
    public let nextToken: String?
}

extension ListWorkloadsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case workloadSummaries = "WorkloadSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workloadSummariesContainer = try containerValues.decodeIfPresent([WorkloadSummary].self, forKey: .workloadSummaries)
        var workloadSummariesDecoded0:[WorkloadSummary]? = nil
        if let workloadSummariesContainer = workloadSummariesContainer {
            workloadSummariesDecoded0 = [WorkloadSummary]()
            for structure0 in workloadSummariesContainer {
                workloadSummariesDecoded0?.append(structure0)
            }
        }
        workloadSummaries = workloadSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
