// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLensVersionDifferenceOutputBody: Equatable {
    public let lensAlias: String?
    public let baseLensVersion: String?
    public let latestLensVersion: String?
    public let versionDifferences: VersionDifferences?
}

extension GetLensVersionDifferenceOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case baseLensVersion = "BaseLensVersion"
        case latestLensVersion = "LatestLensVersion"
        case lensAlias = "LensAlias"
        case versionDifferences = "VersionDifferences"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lensAliasDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lensAlias)
        lensAlias = lensAliasDecoded
        let baseLensVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .baseLensVersion)
        baseLensVersion = baseLensVersionDecoded
        let latestLensVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .latestLensVersion)
        latestLensVersion = latestLensVersionDecoded
        let versionDifferencesDecoded = try containerValues.decodeIfPresent(VersionDifferences.self, forKey: .versionDifferences)
        versionDifferences = versionDifferencesDecoded
    }
}
