// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnswerOutputBody: Equatable {
    public let workloadId: String?
    public let milestoneNumber: Int
    public let lensAlias: String?
    public let answer: Answer?
}

extension GetAnswerOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case answer = "Answer"
        case lensAlias = "LensAlias"
        case milestoneNumber = "MilestoneNumber"
        case workloadId = "WorkloadId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workloadIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workloadId)
        workloadId = workloadIdDecoded
        let milestoneNumberDecoded = try containerValues.decode(Int.self, forKey: .milestoneNumber)
        milestoneNumber = milestoneNumberDecoded
        let lensAliasDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lensAlias)
        lensAlias = lensAliasDecoded
        let answerDecoded = try containerValues.decodeIfPresent(Answer.self, forKey: .answer)
        answer = answerDecoded
    }
}
