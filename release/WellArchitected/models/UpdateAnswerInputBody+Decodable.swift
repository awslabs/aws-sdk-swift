// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAnswerInputBody: Equatable {
    public let selectedChoices: [String]?
    public let notes: String?
    public let isApplicable: Bool
}

extension UpdateAnswerInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case isApplicable = "IsApplicable"
        case notes = "Notes"
        case selectedChoices = "SelectedChoices"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let selectedChoicesContainer = try containerValues.decodeIfPresent([String].self, forKey: .selectedChoices)
        var selectedChoicesDecoded0:[String]? = nil
        if let selectedChoicesContainer = selectedChoicesContainer {
            selectedChoicesDecoded0 = [String]()
            for string0 in selectedChoicesContainer {
                selectedChoicesDecoded0?.append(string0)
            }
        }
        selectedChoices = selectedChoicesDecoded0
        let notesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .notes)
        notes = notesDecoded
        let isApplicableDecoded = try containerValues.decode(Bool.self, forKey: .isApplicable)
        isApplicable = isApplicableDecoded
    }
}
