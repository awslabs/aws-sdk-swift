// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchDevicesOutputBody: Equatable {
    public let devices: [DeviceSummary]?
    public let nextToken: String?
}

extension SearchDevicesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case devices
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let devicesContainer = try containerValues.decodeIfPresent([DeviceSummary].self, forKey: .devices)
        var devicesDecoded0:[DeviceSummary]? = nil
        if let devicesContainer = devicesContainer {
            devicesDecoded0 = [DeviceSummary]()
            for structure0 in devicesContainer {
                devicesDecoded0?.append(structure0)
            }
        }
        devices = devicesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
