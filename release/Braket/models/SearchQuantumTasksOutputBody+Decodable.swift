// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchQuantumTasksOutputBody: Equatable {
    public let quantumTasks: [QuantumTaskSummary]?
    public let nextToken: String?
}

extension SearchQuantumTasksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case quantumTasks
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let quantumTasksContainer = try containerValues.decodeIfPresent([QuantumTaskSummary].self, forKey: .quantumTasks)
        var quantumTasksDecoded0:[QuantumTaskSummary]? = nil
        if let quantumTasksContainer = quantumTasksContainer {
            quantumTasksDecoded0 = [QuantumTaskSummary]()
            for structure0 in quantumTasksContainer {
                quantumTasksDecoded0?.append(structure0)
            }
        }
        quantumTasks = quantumTasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
