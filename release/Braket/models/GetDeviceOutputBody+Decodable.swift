// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceOutputBody: Equatable {
    public let deviceArn: String?
    public let deviceName: String?
    public let providerName: String?
    public let deviceType: DeviceType?
    public let deviceStatus: DeviceStatus?
    public let deviceCapabilities: String?
}

extension GetDeviceOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceArn
        case deviceCapabilities
        case deviceName
        case deviceStatus
        case deviceType
        case providerName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceArn)
        deviceArn = deviceArnDecoded
        let deviceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceName)
        deviceName = deviceNameDecoded
        let providerNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .providerName)
        providerName = providerNameDecoded
        let deviceTypeDecoded = try containerValues.decodeIfPresent(DeviceType.self, forKey: .deviceType)
        deviceType = deviceTypeDecoded
        let deviceStatusDecoded = try containerValues.decodeIfPresent(DeviceStatus.self, forKey: .deviceStatus)
        deviceStatus = deviceStatusDecoded
        let deviceCapabilitiesDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceCapabilities)
        deviceCapabilities = deviceCapabilitiesDecoded
    }
}
