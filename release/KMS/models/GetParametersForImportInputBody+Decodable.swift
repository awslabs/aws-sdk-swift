// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParametersForImportInputBody: Equatable {
    public let keyId: String?
    public let wrappingAlgorithm: AlgorithmSpec?
    public let wrappingKeySpec: WrappingKeySpec?
}

extension GetParametersForImportInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case keyId = "KeyId"
        case wrappingAlgorithm = "WrappingAlgorithm"
        case wrappingKeySpec = "WrappingKeySpec"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let wrappingAlgorithmDecoded = try containerValues.decodeIfPresent(AlgorithmSpec.self, forKey: .wrappingAlgorithm)
        wrappingAlgorithm = wrappingAlgorithmDecoded
        let wrappingKeySpecDecoded = try containerValues.decodeIfPresent(WrappingKeySpec.self, forKey: .wrappingKeySpec)
        wrappingKeySpec = wrappingKeySpecDecoded
    }
}
