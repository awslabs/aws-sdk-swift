// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCustomKeyStoresInputBody: Equatable {
    public let customKeyStoreId: String?
    public let customKeyStoreName: String?
    public let limit: Int?
    public let marker: String?
}

extension DescribeCustomKeyStoresInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customKeyStoreId = "CustomKeyStoreId"
        case customKeyStoreName = "CustomKeyStoreName"
        case limit = "Limit"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customKeyStoreIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customKeyStoreId)
        customKeyStoreId = customKeyStoreIdDecoded
        let customKeyStoreNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customKeyStoreName)
        customKeyStoreName = customKeyStoreNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
