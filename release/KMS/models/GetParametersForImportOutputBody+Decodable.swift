// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetParametersForImportOutputBody: Equatable {
    public let keyId: String?
    public let importToken: Data?
    public let publicKey: Data?
    public let parametersValidTo: Date?
}

extension GetParametersForImportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case importToken = "ImportToken"
        case keyId = "KeyId"
        case parametersValidTo = "ParametersValidTo"
        case publicKey = "PublicKey"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let importTokenDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .importToken)
        importToken = importTokenDecoded
        let publicKeyDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .publicKey)
        publicKey = publicKeyDecoded
        let parametersValidToDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .parametersValidTo)
        parametersValidTo = parametersValidToDecoded
    }
}
