// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetPublicKeyInputBody: Equatable {
    public let keyId: String?
    public let grantTokens: [String]?
}

extension GetPublicKeyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case grantTokens = "GrantTokens"
        case keyId = "KeyId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let grantTokensContainer = try containerValues.decodeIfPresent([String].self, forKey: .grantTokens)
        var grantTokensDecoded0:[String]? = nil
        if let grantTokensContainer = grantTokensContainer {
            grantTokensDecoded0 = [String]()
            for string0 in grantTokensContainer {
                grantTokensDecoded0?.append(string0)
            }
        }
        grantTokens = grantTokensDecoded0
    }
}
