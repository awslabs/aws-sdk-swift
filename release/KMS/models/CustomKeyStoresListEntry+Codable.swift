// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomKeyStoresListEntry: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudHsmClusterId = "CloudHsmClusterId"
        case connectionErrorCode = "ConnectionErrorCode"
        case connectionState = "ConnectionState"
        case creationDate = "CreationDate"
        case customKeyStoreId = "CustomKeyStoreId"
        case customKeyStoreName = "CustomKeyStoreName"
        case trustAnchorCertificate = "TrustAnchorCertificate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudHsmClusterId = cloudHsmClusterId {
            try encodeContainer.encode(cloudHsmClusterId, forKey: .cloudHsmClusterId)
        }
        if let connectionErrorCode = connectionErrorCode {
            try encodeContainer.encode(connectionErrorCode.rawValue, forKey: .connectionErrorCode)
        }
        if let connectionState = connectionState {
            try encodeContainer.encode(connectionState.rawValue, forKey: .connectionState)
        }
        if let creationDate = creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let customKeyStoreId = customKeyStoreId {
            try encodeContainer.encode(customKeyStoreId, forKey: .customKeyStoreId)
        }
        if let customKeyStoreName = customKeyStoreName {
            try encodeContainer.encode(customKeyStoreName, forKey: .customKeyStoreName)
        }
        if let trustAnchorCertificate = trustAnchorCertificate {
            try encodeContainer.encode(trustAnchorCertificate, forKey: .trustAnchorCertificate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customKeyStoreIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customKeyStoreId)
        customKeyStoreId = customKeyStoreIdDecoded
        let customKeyStoreNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customKeyStoreName)
        customKeyStoreName = customKeyStoreNameDecoded
        let cloudHsmClusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cloudHsmClusterId)
        cloudHsmClusterId = cloudHsmClusterIdDecoded
        let trustAnchorCertificateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trustAnchorCertificate)
        trustAnchorCertificate = trustAnchorCertificateDecoded
        let connectionStateDecoded = try containerValues.decodeIfPresent(ConnectionStateType.self, forKey: .connectionState)
        connectionState = connectionStateDecoded
        let connectionErrorCodeDecoded = try containerValues.decodeIfPresent(ConnectionErrorCodeType.self, forKey: .connectionErrorCode)
        connectionErrorCode = connectionErrorCodeDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
    }
}
