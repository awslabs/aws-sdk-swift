// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateKeyInput: Equatable {
    /// <p>A flag to indicate whether to bypass the key policy lockout safety check.</p>
    ///          <important>
    ///             <p>Setting this value to true increases the risk that the CMK becomes unmanageable. Do not
    ///         set this value to true indiscriminately.</p>
    ///             <p>For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section in the <i>
    ///                   <i>AWS Key Management Service Developer Guide</i>
    ///                </i>.</p>
    ///          </important>
    ///          <p>Use this parameter only when you include a policy in the request and you intend to prevent
    ///       the principal that is making the request from making a subsequent <a>PutKeyPolicy</a> request on the CMK.</p>
    ///          <p>The default value is false.</p>
    public let bypassPolicyLockoutSafetyCheck: Bool
    /// <p>Creates the CMK in the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom key store</a> and the key material in its associated
    ///       AWS CloudHSM cluster. To create a CMK in a custom key store, you must also specify the
    ///         <code>Origin</code> parameter with a value of <code>AWS_CLOUDHSM</code>. The AWS CloudHSM cluster
    ///       that is associated with the custom key store must have at least two active HSMs, each in a
    ///       different Availability Zone in the Region.</p>
    ///          <p>This parameter is valid only for symmetric CMKs. You cannot create an asymmetric CMK in a
    ///       custom key store.</p>
    ///          <p>To find the ID of a custom key store, use the <a>DescribeCustomKeyStores</a> operation.</p>
    ///          <p>The response includes the custom key store ID and the ID of the AWS CloudHSM cluster.</p>
    ///          <p>This operation is part of the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">Custom Key Store feature</a> feature in AWS KMS, which
    /// combines the convenience and extensive integration of AWS KMS with the isolation and control of a
    /// single-tenant key store.</p>
    public let customKeyStoreId: String?
    /// <p>Specifies the type of CMK to create. The default value, <code>SYMMETRIC_DEFAULT</code>,
    ///       creates a CMK with a 256-bit symmetric key for encryption and decryption. For help choosing a
    ///       key spec for your CMK, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html">How to Choose Your CMK
    ///         Configuration</a> in the <i>AWS Key Management Service Developer
    ///           Guide</i>.</p>
    ///          <p>The <code>CustomerMasterKeySpec</code> determines whether the CMK contains a symmetric key
    ///       or an asymmetric key pair. It also determines the encryption algorithms or signing algorithms
    ///       that the CMK supports. You can't change the <code>CustomerMasterKeySpec</code> after the CMK
    ///       is created. To further restrict the algorithms that can be used with the CMK, use a condition
    ///       key in its key policy or IAM policy. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-algorithm">kms:EncryptionAlgorithm</a> or <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-signing-algorithm">kms:Signing Algorithm</a> in the <i>AWS Key Management Service Developer
    ///         Guide</i>.</p>
    ///          <important>
    ///             <p>
    ///                <a href="http://aws.amazon.com/kms/features/#AWS_Service_Integration">AWS services that
    ///         are integrated with AWS KMS</a> use symmetric CMKs to protect your data. These
    ///         services do not support asymmetric CMKs. For help determining whether a CMK is symmetric or
    ///         asymmetric, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/find-symm-asymm.html">Identifying Symmetric and Asymmetric
    ///           CMKs</a> in the <i>AWS Key Management Service Developer
    ///             Guide</i>.</p>
    ///          </important>
    ///          <p>AWS KMS supports the following key specs for CMKs:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Symmetric key (default)</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>SYMMETRIC_DEFAULT</code> (AES-256-GCM)</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>Asymmetric RSA key pairs</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>RSA_2048</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>RSA_3072</code>
    ///                      </p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>RSA_4096</code>
    ///                      </p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>Asymmetric NIST-recommended elliptic curve key pairs</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>ECC_NIST_P256</code> (secp256r1)</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>ECC_NIST_P384</code> (secp384r1)</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                         <code>ECC_NIST_P521</code> (secp521r1)</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>Other asymmetric elliptic curve key pairs</p>
    ///                <ul>
    ///                   <li>
    ///                      <p>
    ///                         <code>ECC_SECG_P256K1</code> (secp256k1), commonly used for
    ///               cryptocurrencies.</p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///          </ul>
    public let customerMasterKeySpec: CustomerMasterKeySpec?
    /// <p>A description of the CMK.</p>
    ///          <p>Use a description that helps you decide whether the CMK is appropriate for a task.</p>
    public let description: String?
    /// <p>Determines the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic operations</a> for which you can use the CMK. The default value
    ///       is <code>ENCRYPT_DECRYPT</code>. This parameter is required only for asymmetric CMKs. You
    ///       can't change the <code>KeyUsage</code> value after the CMK is created.</p>
    ///          <p>Select only one valid value.</p>
    ///          <ul>
    ///             <li>
    ///                <p>For symmetric CMKs, omit the parameter or specify <code>ENCRYPT_DECRYPT</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>For asymmetric CMKs with RSA key material, specify <code>ENCRYPT_DECRYPT</code> or
    ///             <code>SIGN_VERIFY</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>For asymmetric CMKs with ECC key material, specify <code>SIGN_VERIFY</code>.</p>
    ///             </li>
    ///          </ul>
    public let keyUsage: KeyUsageType?
    /// <p>The source of the key material for the CMK. You cannot change the origin after you create
    ///       the CMK. The default is <code>AWS_KMS</code>, which means AWS KMS creates the key
    ///       material.</p>
    ///          <p>When the parameter value is <code>EXTERNAL</code>, AWS KMS creates a CMK without key
    ///       material so that you can import key material from your existing key management infrastructure.
    ///       For more information about importing key material into AWS KMS, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html">Importing Key Material</a> in the
    ///       <i>AWS Key Management Service Developer Guide</i>. This value is valid only for symmetric CMKs.</p>
    ///          <p>When the parameter value is <code>AWS_CLOUDHSM</code>, AWS KMS creates the CMK in an AWS KMS
    ///       <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom key store</a> and creates its key material in the associated AWS CloudHSM cluster. You must also
    ///       use the <code>CustomKeyStoreId</code> parameter to identify the custom key store. This value
    ///       is valid only for symmetric CMKs.</p>
    public let origin: OriginType?
    /// <p>The key policy to attach to the CMK.</p>
    ///          <p>If you provide a key policy, it must meet the following criteria:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If you don't set <code>BypassPolicyLockoutSafetyCheck</code> to true, the key policy
    ///           must allow the principal that is making the <code>CreateKey</code> request to make a
    ///           subsequent <a>PutKeyPolicy</a> request on the CMK. This reduces the risk that
    ///           the CMK becomes unmanageable. For more information, refer to the scenario in the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam">Default Key Policy</a> section of the <i>
    ///                      <i>AWS Key Management Service Developer Guide</i>
    ///                   </i>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Each statement in the key policy must contain one or more principals. The principals
    ///           in the key policy must exist and be visible to AWS KMS. When you create a new AWS principal
    ///           (for example, an IAM user or role), you might need to enforce a delay before including the
    ///           new principal in a key policy because the new principal might not be immediately visible
    ///           to AWS KMS. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_eventual-consistency">Changes that I make are not always immediately visible</a> in the <i>AWS
    ///             Identity and Access Management User Guide</i>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK. For
    ///       more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default Key Policy</a> in the
    ///       <i>AWS Key Management Service Developer Guide</i>. </p>
    ///          <p>The key policy size quota is 32 kilobytes (32768 bytes).</p>
    ///          <p>For help writing and formatting a JSON policy document, see the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html">IAM JSON Policy Reference</a> in the <i>
    ///                <i>IAM User Guide</i>
    ///             </i>.</p>
    public let policy: String?
    /// <p>One or more tags. Each tag consists of a tag key and a tag value. Both the tag key and the
    ///       tag value are required, but the tag value can be an empty (null) string. </p>
    ///          <p>When you add tags to an AWS resource, AWS generates a cost allocation
    ///               report with usage and costs aggregated by tags. For information about adding, changing, deleting and listing tags for CMKs,
    ///               see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/tagging-keys.html">Tagging Keys</a>.</p>
    ///          <p>Use this parameter to tag the CMK when it is created. To add tags to an
    ///       existing CMK, use the <a>TagResource</a> operation.</p>
    ///          <p>To use this parameter, you must have <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html">kms:TagResource</a> permission in an IAM policy.</p>
    public let tags: [Tag]?

    public init (
        bypassPolicyLockoutSafetyCheck: Bool = false,
        customKeyStoreId: String? = nil,
        customerMasterKeySpec: CustomerMasterKeySpec? = nil,
        description: String? = nil,
        keyUsage: KeyUsageType? = nil,
        origin: OriginType? = nil,
        policy: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheck
        self.customKeyStoreId = customKeyStoreId
        self.customerMasterKeySpec = customerMasterKeySpec
        self.description = description
        self.keyUsage = keyUsage
        self.origin = origin
        self.policy = policy
        self.tags = tags
    }
}
