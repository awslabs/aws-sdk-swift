// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

extension UpdateCustomKeyStoreOutputError: HttpResponseBinding {
    public init(httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        let errorDetails = try RestJSONError(httpResponse: httpResponse)
        let requestID = httpResponse.headers.value(for: X_AMZN_REQUEST_ID_HEADER)
        try self.init(errorType: errorDetails.errorType, httpResponse: httpResponse, decoder: decoder, message: errorDetails.errorMessage, requestID: requestID)
    }
}

extension UpdateCustomKeyStoreOutputError {
    public init(errorType: String?, httpResponse: HttpResponse, decoder: ResponseDecoder? = nil, message: String? = nil, requestID: String? = nil) throws {
        switch errorType {
        case "CloudHsmClusterInvalidConfigurationException" : self = .cloudHsmClusterInvalidConfigurationException(try CloudHsmClusterInvalidConfigurationException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CloudHsmClusterNotActiveException" : self = .cloudHsmClusterNotActiveException(try CloudHsmClusterNotActiveException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CloudHsmClusterNotFoundException" : self = .cloudHsmClusterNotFoundException(try CloudHsmClusterNotFoundException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CloudHsmClusterNotRelatedException" : self = .cloudHsmClusterNotRelatedException(try CloudHsmClusterNotRelatedException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CustomKeyStoreInvalidStateException" : self = .customKeyStoreInvalidStateException(try CustomKeyStoreInvalidStateException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CustomKeyStoreNameInUseException" : self = .customKeyStoreNameInUseException(try CustomKeyStoreNameInUseException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "CustomKeyStoreNotFoundException" : self = .customKeyStoreNotFoundException(try CustomKeyStoreNotFoundException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        case "KMSInternalException" : self = .kMSInternalException(try KMSInternalException(httpResponse: httpResponse, decoder: decoder, message: message, requestID: requestID))
        default : self = .unknown(UnknownAWSHttpServiceError(httpResponse: httpResponse, message: message, requestID: requestID))
        }
    }
}
