// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateGrantInput: Equatable {
    /// <p>Allows a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic operation</a> only when the encryption context matches or includes the encryption
    ///       context specified in this structure. For more information about encryption context, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
    ///         Context</a> in the <i>
    ///                <i>AWS Key Management Service Developer Guide</i>
    ///             </i>.</p>
    ///          <p>Grant constraints are not applied to operations that do not support an encryption context,
    ///       such as cryptographic operations with asymmetric CMKs and management operations, such as
    ///       <a>DescribeKey</a> or <a>RetireGrant</a>.</p>
    public let constraints: GrantConstraints?
    /// <p>A list of grant tokens.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the
    ///     <i>AWS Key Management Service Developer Guide</i>.</p>
    public let grantTokens: [String]?
    /// <p>The principal that is given permission to perform the operations that the grant
    ///       permits.</p>
    ///          <p>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS
    ///       principal. Valid AWS principals include AWS accounts (root), IAM users, IAM roles, federated
    ///       users, and assumed role users. For examples of the ARN syntax to use for specifying a
    ///       principal, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access
    ///         Management (IAM)</a> in the Example ARNs section of the <i>AWS General
    ///         Reference</i>.</p>
    public let granteePrincipal: String?
    /// <p>The unique identifier for the customer master key (CMK) that the grant applies to.</p>
    ///
    ///          <p>Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a
    /// different AWS account, you must use the key ARN.</p>
    ///          <p>For example:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>.</p>
    public let keyId: String?
    /// <p>A friendly name for the grant. Use this value to prevent the unintended
    ///       creation of duplicate grants when retrying this request.</p>
    ///          <p>When this value is absent, all <code>CreateGrant</code> requests result in a new grant
    ///       with a unique <code>GrantId</code> even if all the supplied parameters are identical. This can
    ///       result in unintended duplicates when you retry the <code>CreateGrant</code> request.</p>
    ///          <p>When this value is present, you can retry a <code>CreateGrant</code> request with
    ///       identical parameters; if the grant already exists, the original <code>GrantId</code> is
    ///       returned without creating a new grant. Note that the returned grant token is unique with every
    ///         <code>CreateGrant</code> request, even when a duplicate <code>GrantId</code> is returned.
    ///       All grant tokens for the same grant ID can be used interchangeably.</p>
    public let name: String?
    /// <p>A list of operations that the grant permits.</p>
    public let operations: [GrantOperation]?
    /// <p>The principal that is given permission to retire the grant by using <a>RetireGrant</a> operation.</p>
    ///          <p>To specify the principal, use the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an AWS
    ///       principal. Valid AWS principals include AWS accounts (root), IAM users, federated users, and
    ///       assumed role users. For examples of the ARN syntax to use for specifying a principal, see
    ///         <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-iam">AWS Identity and Access Management (IAM)</a> in the Example ARNs section of the
    ///         <i>AWS General Reference</i>.</p>
    public let retiringPrincipal: String?

    public init (
        constraints: GrantConstraints? = nil,
        grantTokens: [String]? = nil,
        granteePrincipal: String? = nil,
        keyId: String? = nil,
        name: String? = nil,
        operations: [GrantOperation]? = nil,
        retiringPrincipal: String? = nil
    )
    {
        self.constraints = constraints
        self.grantTokens = grantTokens
        self.granteePrincipal = granteePrincipal
        self.keyId = keyId
        self.name = name
        self.operations = operations
        self.retiringPrincipal = retiringPrincipal
    }
}
