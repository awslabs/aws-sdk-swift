// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCustomKeyStoreInputBody: Equatable {
    public let customKeyStoreName: String?
    public let cloudHsmClusterId: String?
    public let trustAnchorCertificate: String?
    public let keyStorePassword: String?
}

extension CreateCustomKeyStoreInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cloudHsmClusterId = "CloudHsmClusterId"
        case customKeyStoreName = "CustomKeyStoreName"
        case keyStorePassword = "KeyStorePassword"
        case trustAnchorCertificate = "TrustAnchorCertificate"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customKeyStoreNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customKeyStoreName)
        customKeyStoreName = customKeyStoreNameDecoded
        let cloudHsmClusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cloudHsmClusterId)
        cloudHsmClusterId = cloudHsmClusterIdDecoded
        let trustAnchorCertificateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trustAnchorCertificate)
        trustAnchorCertificate = trustAnchorCertificateDecoded
        let keyStorePasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyStorePassword)
        keyStorePassword = keyStorePasswordDecoded
    }
}
