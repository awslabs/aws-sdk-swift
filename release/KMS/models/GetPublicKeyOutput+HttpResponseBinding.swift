// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetPublicKeyOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: GetPublicKeyOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.customerMasterKeySpec = output.customerMasterKeySpec
            self.encryptionAlgorithms = output.encryptionAlgorithms
            self.keyId = output.keyId
            self.keyUsage = output.keyUsage
            self.publicKey = output.publicKey
            self.signingAlgorithms = output.signingAlgorithms
        } else {
            self.customerMasterKeySpec = nil
            self.encryptionAlgorithms = nil
            self.keyId = nil
            self.keyUsage = nil
            self.publicKey = nil
            self.signingAlgorithms = nil
        }
    }
}
