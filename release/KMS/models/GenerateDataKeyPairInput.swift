// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GenerateDataKeyPairInput: Equatable {
    /// <p>Specifies the encryption context that will be used when encrypting the private key in the
    ///       data key pair.</p>
    ///          <p>An <i>encryption context</i> is a collection of non-secret key-value pairs that represents additional authenticated data. When you use an encryption context to encrypt data, you must specify the same (an exact case-sensitive match) encryption context to decrypt the data. An encryption context is optional when encrypting with a symmetric CMK, but it is highly recommended.</p>
    ///          <p>For more information, see
    ///         <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption
    ///         Context</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
    public let encryptionContext: [String:String]?
    /// <p>A list of grant tokens.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the
    ///     <i>AWS Key Management Service Developer Guide</i>.</p>
    public let grantTokens: [String]?
    /// <p>Specifies the symmetric CMK that encrypts the private key in the data key pair. You cannot
    ///       specify an asymmetric CMK or a CMK in a custom key store. To get the type and origin of your
    ///       CMK, use the <a>DescribeKey</a> operation.</p>
    ///          <p>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a CMK in a different AWS account, you must use the key ARN or alias ARN.</p>
    ///          <p>For example:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Alias name: <code>alias/ExampleAlias</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>. To get the alias name and alias ARN, use <a>ListAliases</a>.</p>
    public let keyId: String?
    /// <p>Determines the type of data key pair that is generated. </p>
    ///          <p>The AWS KMS rule that restricts the use of asymmetric RSA CMKs to encrypt and decrypt or to sign and verify (but not both), and the rule that permits you to use ECC CMKs only to sign and verify, are not effective outside of AWS KMS.</p>
    public let keyPairSpec: DataKeyPairSpec?

    public init (
        encryptionContext: [String:String]? = nil,
        grantTokens: [String]? = nil,
        keyId: String? = nil,
        keyPairSpec: DataKeyPairSpec? = nil
    )
    {
        self.encryptionContext = encryptionContext
        self.grantTokens = grantTokens
        self.keyId = keyId
        self.keyPairSpec = keyPairSpec
    }
}
