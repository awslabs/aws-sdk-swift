// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct VerifyInput: Equatable {
    /// <p>A list of grant tokens.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token">Grant Tokens</a> in the
    ///     <i>AWS Key Management Service Developer Guide</i>.</p>
    public let grantTokens: [String]?
    /// <p>Identifies the asymmetric CMK that will be used to verify the signature. This must be the
    ///       same CMK that was used to generate the signature. If you specify a different CMK, the
    ///       signature verification fails.</p>
    ///
    ///          <p>To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. When using an alias name, prefix it with <code>"alias/"</code>. To specify a CMK in a different AWS account, you must use the key ARN or alias ARN.</p>
    ///          <p>For example:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Alias name: <code>alias/ExampleAlias</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Alias ARN: <code>arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>To get the key ID and key ARN for a CMK, use <a>ListKeys</a> or <a>DescribeKey</a>. To get the alias name and alias ARN, use <a>ListAliases</a>.</p>
    public let keyId: String?
    /// <p>Specifies the message that was signed. You can submit a raw message of up to 4096 bytes,
    ///       or a hash digest of the message. If you submit a digest, use the <code>MessageType</code>
    ///       parameter with a value of <code>DIGEST</code>.</p>
    ///          <p>If the message specified here is different from the message that was signed, the signature
    ///       verification fails. A message and its hash digest are considered to be the same
    ///       message.</p>
    public let message: Data?
    /// <p>Tells AWS KMS whether the value of the <code>Message</code> parameter is a message or
    ///       message digest. The default value, RAW, indicates a message. To indicate a message digest,
    ///       enter <code>DIGEST</code>.</p>
    ///          <important>
    ///             <p>Use the <code>DIGEST</code> value only when the value of the <code>Message</code>
    ///         parameter is a message digest. If you use the <code>DIGEST</code> value with a raw message,
    ///         the security of the verification operation can be compromised.</p>
    ///          </important>
    public let messageType: MessageType?
    /// <p>The signature that the <code>Sign</code> operation generated.</p>
    public let signature: Data?
    /// <p>The signing algorithm that was used to sign the message. If you submit a different
    ///       algorithm, the signature verification fails.</p>
    public let signingAlgorithm: SigningAlgorithmSpec?

    public init (
        grantTokens: [String]? = nil,
        keyId: String? = nil,
        message: Data? = nil,
        messageType: MessageType? = nil,
        signature: Data? = nil,
        signingAlgorithm: SigningAlgorithmSpec? = nil
    )
    {
        self.grantTokens = grantTokens
        self.keyId = keyId
        self.message = message
        self.messageType = messageType
        self.signature = signature
        self.signingAlgorithm = signingAlgorithm
    }
}
