// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListGrantsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case grantId = "GrantId"
        case granteePrincipal = "GranteePrincipal"
        case keyId = "KeyId"
        case limit = "Limit"
        case marker = "Marker"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let grantId = grantId {
            try encodeContainer.encode(grantId, forKey: .grantId)
        }
        if let granteePrincipal = granteePrincipal {
            try encodeContainer.encode(granteePrincipal, forKey: .granteePrincipal)
        }
        if let keyId = keyId {
            try encodeContainer.encode(keyId, forKey: .keyId)
        }
        if let limit = limit {
            try encodeContainer.encode(limit, forKey: .limit)
        }
        if let marker = marker {
            try encodeContainer.encode(marker, forKey: .marker)
        }
    }
}
