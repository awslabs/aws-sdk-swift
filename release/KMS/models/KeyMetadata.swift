// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains metadata about a customer master key (CMK).</p>
///          <p>This data type is used as a response element for the <a>CreateKey</a> and <a>DescribeKey</a> operations.</p>
public struct KeyMetadata: Equatable {
    /// <p>The twelve-digit account ID of the AWS account that owns the CMK.</p>
    public let aWSAccountId: String?
    /// <p>The Amazon Resource Name (ARN) of the CMK. For examples, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">AWS Key Management Service
    ///         (AWS KMS)</a> in the Example ARNs section of the <i>AWS General
    ///         Reference</i>.</p>
    public let arn: String?
    /// <p>The cluster ID of the AWS CloudHSM cluster that contains the key material for the CMK. When you
    ///       create a CMK in a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom key store</a>, AWS KMS creates the key material for the CMK in the
    ///       associated AWS CloudHSM cluster. This value is present only when the CMK is created in a custom key
    ///       store.</p>
    public let cloudHsmClusterId: String?
    /// <p>The date and time when the CMK was created.</p>
    public let creationDate: Date?
    /// <p>A unique identifier for the <a href="https://docs.aws.amazon.com/kms/latest/developerguide/custom-key-store-overview.html">custom key store</a> that contains the CMK. This value is present
    ///       only when the CMK is created in a custom key store.</p>
    public let customKeyStoreId: String?
    /// <p>Describes the type of key material in the CMK.</p>
    public let customerMasterKeySpec: CustomerMasterKeySpec?
    /// <p>The date and time after which AWS KMS deletes the CMK. This value is present only when
    ///         <code>KeyState</code> is <code>PendingDeletion</code>.</p>
    public let deletionDate: Date?
    /// <p>The description of the CMK.</p>
    public let description: String?
    /// <p>Specifies whether the CMK is enabled. When <code>KeyState</code> is <code>Enabled</code>
    ///       this value is true, otherwise it is false.</p>
    public let enabled: Bool
    /// <p>The encryption algorithms that the CMK supports. You cannot use the CMK with other
    ///       encryption algorithms within AWS KMS.</p>
    ///          <p>This field appears only when the <code>KeyUsage</code> of the CMK is
    ///         <code>ENCRYPT_DECRYPT</code>.</p>
    public let encryptionAlgorithms: [EncryptionAlgorithmSpec]?
    /// <p>Specifies whether the CMK's key material expires. This value is present only when
    ///         <code>Origin</code> is <code>EXTERNAL</code>, otherwise this value is omitted.</p>
    public let expirationModel: ExpirationModelType?
    /// <p>The globally unique identifier for the CMK.</p>
    public let keyId: String?
    /// <p>The manager of the CMK. CMKs in your AWS account are either customer managed or AWS
    ///       managed. For more information about the difference, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys">Customer Master Keys</a> in the
    ///       <i>AWS Key Management Service Developer Guide</i>.</p>
    public let keyManager: KeyManagerType?
    /// <p>The current status of the CMK.</p>
    ///          <p>For more information about how key state affects the use of a CMK, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">Key state: Effect on your CMK</a> in the <i>AWS Key Management Service Developer Guide</i>.</p>
    public let keyState: KeyState?
    /// <p>The <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic operations</a> for which you can use the CMK.</p>
    public let keyUsage: KeyUsageType?
    /// <p>The source of the CMK's key material. When this value is <code>AWS_KMS</code>, AWS KMS
    ///       created the key material. When this value is <code>EXTERNAL</code>, the key material was
    ///       imported from your existing key management infrastructure or the CMK lacks key material. When
    ///       this value is <code>AWS_CLOUDHSM</code>, the key material was created in the AWS CloudHSM cluster
    ///       associated with a custom key store.</p>
    public let origin: OriginType?
    /// <p>The signing algorithms that the CMK supports. You cannot use the CMK with other
    ///       signing algorithms within AWS KMS.</p>
    ///          <p>This field appears only when the <code>KeyUsage</code> of the CMK is
    ///         <code>SIGN_VERIFY</code>.</p>
    public let signingAlgorithms: [SigningAlgorithmSpec]?
    /// <p>The time at which the imported key material expires. When the key material expires, AWS KMS
    ///       deletes the key material and the CMK becomes unusable. This value is present only for CMKs
    ///       whose <code>Origin</code> is <code>EXTERNAL</code> and whose <code>ExpirationModel</code> is
    ///         <code>KEY_MATERIAL_EXPIRES</code>, otherwise this value is omitted.</p>
    public let validTo: Date?

    public init (
        aWSAccountId: String? = nil,
        arn: String? = nil,
        cloudHsmClusterId: String? = nil,
        creationDate: Date? = nil,
        customKeyStoreId: String? = nil,
        customerMasterKeySpec: CustomerMasterKeySpec? = nil,
        deletionDate: Date? = nil,
        description: String? = nil,
        enabled: Bool = false,
        encryptionAlgorithms: [EncryptionAlgorithmSpec]? = nil,
        expirationModel: ExpirationModelType? = nil,
        keyId: String? = nil,
        keyManager: KeyManagerType? = nil,
        keyState: KeyState? = nil,
        keyUsage: KeyUsageType? = nil,
        origin: OriginType? = nil,
        signingAlgorithms: [SigningAlgorithmSpec]? = nil,
        validTo: Date? = nil
    )
    {
        self.aWSAccountId = aWSAccountId
        self.arn = arn
        self.cloudHsmClusterId = cloudHsmClusterId
        self.creationDate = creationDate
        self.customKeyStoreId = customKeyStoreId
        self.customerMasterKeySpec = customerMasterKeySpec
        self.deletionDate = deletionDate
        self.description = description
        self.enabled = enabled
        self.encryptionAlgorithms = encryptionAlgorithms
        self.expirationModel = expirationModel
        self.keyId = keyId
        self.keyManager = keyManager
        self.keyState = keyState
        self.keyUsage = keyUsage
        self.origin = origin
        self.signingAlgorithms = signingAlgorithms
        self.validTo = validTo
    }
}
