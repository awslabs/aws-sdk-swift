// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ConnectionErrorCodeType {
    case clusterNotFound
    case insufficientCloudhsmHsms
    case internalError
    case invalidCredentials
    case networkErrors
    case subnetNotFound
    case userLockedOut
    case userLoggedIn
    case userNotFound
    case sdkUnknown(String)
}

extension ConnectionErrorCodeType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ConnectionErrorCodeType] {
        return [
            .clusterNotFound,
            .insufficientCloudhsmHsms,
            .internalError,
            .invalidCredentials,
            .networkErrors,
            .subnetNotFound,
            .userLockedOut,
            .userLoggedIn,
            .userNotFound,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .clusterNotFound: return "CLUSTER_NOT_FOUND"
        case .insufficientCloudhsmHsms: return "INSUFFICIENT_CLOUDHSM_HSMS"
        case .internalError: return "INTERNAL_ERROR"
        case .invalidCredentials: return "INVALID_CREDENTIALS"
        case .networkErrors: return "NETWORK_ERRORS"
        case .subnetNotFound: return "SUBNET_NOT_FOUND"
        case .userLockedOut: return "USER_LOCKED_OUT"
        case .userLoggedIn: return "USER_LOGGED_IN"
        case .userNotFound: return "USER_NOT_FOUND"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ConnectionErrorCodeType(rawValue: rawValue) ?? ConnectionErrorCodeType.sdkUnknown(rawValue)
    }
}
