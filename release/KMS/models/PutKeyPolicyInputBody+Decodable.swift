// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutKeyPolicyInputBody: Equatable {
    public let keyId: String?
    public let policyName: String?
    public let policy: String?
    public let bypassPolicyLockoutSafetyCheck: Bool
}

extension PutKeyPolicyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bypassPolicyLockoutSafetyCheck = "BypassPolicyLockoutSafetyCheck"
        case keyId = "KeyId"
        case policy = "Policy"
        case policyName = "PolicyName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .keyId)
        keyId = keyIdDecoded
        let policyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyName)
        policyName = policyNameDecoded
        let policyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policy)
        policy = policyDecoded
        let bypassPolicyLockoutSafetyCheckDecoded = try containerValues.decode(Bool.self, forKey: .bypassPolicyLockoutSafetyCheck)
        bypassPolicyLockoutSafetyCheck = bypassPolicyLockoutSafetyCheckDecoded
    }
}
