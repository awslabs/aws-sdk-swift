// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>This section provides documentation for the Amazon CodeGuru Reviewer API operations. CodeGuru Reviewer is a service
///          that uses program analysis and machine learning to detect potential defects that are difficult for developers to find and recommendations to
///          address them in your Java and Python code.</p>
///
///          <p>By proactively detecting and providing recommendations for addressing code defects and implementing best practices, CodeGuru Reviewer
///             improves the overall quality and maintainability of your code base during the code review stage. For more information about CodeGuru Reviewer, see the
///             <i>
///                <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html">Amazon CodeGuru Reviewer User Guide</a>.</i>
///          </p>
///
///          <p>
///          To improve the security of your CodeGuru Reviewer API calls, you can establish a private connection between your VPC and CodeGuru Reviewer by
///          creating an <i>interface VPC endpoint</i>. For more information, see
///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/vpc-interface-endpoints.html">CodeGuru Reviewer and interface
///             VPC endpoints (AWS PrivateLink)</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.
///       </p>
public protocol CodeGuruReviewerClientProtocol {
    /// <p>
    ///          Use to associate an AWS CodeCommit repository or a repostory managed by
    ///          AWS CodeStar Connections with Amazon CodeGuru Reviewer. When you associate a
    ///         repository, CodeGuru Reviewer reviews source code changes in the repository's pull requests and provides
    ///         automatic recommendations. You can view recommendations using the CodeGuru Reviewer console. For more information, see
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/recommendations.html">Recommendations in
    ///             Amazon CodeGuru Reviewer</a> in the <i>Amazon CodeGuru Reviewer User Guide.</i>
    ///         </p>
    ///
    ///          <p>If you associate a CodeCommit repository, it must be in the same
    ///          AWS Region and AWS account where its CodeGuru Reviewer code reviews are configured.</p>
    ///
    ///          <p>Bitbucket and GitHub Enterprise Server repositories are managed by AWS CodeStar
    ///          Connections to connect to CodeGuru Reviewer. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-associate-repository.html">Associate a repository</a> in
    ///          the <i>Amazon CodeGuru Reviewer User Guide.</i>
    ///          </p>
    ///
    ///          <note>
    ///             <p>
    ///             You cannot use the CodeGuru Reviewer SDK or the AWS CLI to associate a GitHub repository with Amazon CodeGuru Reviewer. To associate
    ///             a GitHub repository, use the console. For more information, see
    ///             <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/getting-started-with-guru.html">Getting
    ///             started with CodeGuru Reviewer</a> in the <i>CodeGuru Reviewer User Guide.</i>
    ///             </p>
    ///          </note>
    func associateRepository(input: AssociateRepositoryInput, completion: @escaping (SdkResult<AssociateRepositoryOutputResponse, AssociateRepositoryOutputError>) -> Void)
    /// <p>
    ///          Use to create a code review with a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReviewType.html">
    ///                <code>CodeReviewType</code>
    ///             </a>
    ///          of <code>RepositoryAnalysis</code>. This type of code review analyzes all code under a specified branch in an associated repository.
    ///          <code>PullRequest</code> code reviews are automatically triggered by a pull request so cannot be created using this method.
    ///       </p>
    func createCodeReview(input: CreateCodeReviewInput, completion: @escaping (SdkResult<CreateCodeReviewOutputResponse, CreateCodeReviewOutputError>) -> Void)
    /// <p> Returns the metadata associated with the code review along with its status.</p>
    func describeCodeReview(input: DescribeCodeReviewInput, completion: @escaping (SdkResult<DescribeCodeReviewOutputResponse, DescribeCodeReviewOutputError>) -> Void)
    /// <p>
    ///          Describes the customer feedback for a CodeGuru Reviewer recommendation.
    ///       </p>
    func describeRecommendationFeedback(input: DescribeRecommendationFeedbackInput, completion: @escaping (SdkResult<DescribeRecommendationFeedbackOutputResponse, DescribeRecommendationFeedbackOutputError>) -> Void)
    /// <p>
    ///          Returns a <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">
    ///                <code>RepositoryAssociation</code>
    ///             </a> object
    ///          that contains information about the requested repository association.
    ///       </p>
    func describeRepositoryAssociation(input: DescribeRepositoryAssociationInput, completion: @escaping (SdkResult<DescribeRepositoryAssociationOutputResponse, DescribeRepositoryAssociationOutputError>) -> Void)
    /// <p>Removes the association between Amazon CodeGuru Reviewer and a repository.</p>
    func disassociateRepository(input: DisassociateRepositoryInput, completion: @escaping (SdkResult<DisassociateRepositoryOutputResponse, DisassociateRepositoryOutputError>) -> Void)
    /// <p>
    ///          Lists all the code reviews that the customer has created in the past 90 days.
    ///       </p>
    func listCodeReviews(input: ListCodeReviewsInput, completion: @escaping (SdkResult<ListCodeReviewsOutputResponse, ListCodeReviewsOutputError>) -> Void)
    /// <p>
    ///          Returns a list of
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RecommendationFeedbackSummary.html">
    ///                <code>RecommendationFeedbackSummary</code>
    ///             </a>
    ///          objects that contain customer recommendation feedback for all CodeGuru Reviewer users.
    ///       </p>
    func listRecommendationFeedback(input: ListRecommendationFeedbackInput, completion: @escaping (SdkResult<ListRecommendationFeedbackOutputResponse, ListRecommendationFeedbackOutputError>) -> Void)
    /// <p>
    ///          Returns the list of all recommendations for a completed code review.
    ///       </p>
    func listRecommendations(input: ListRecommendationsInput, completion: @escaping (SdkResult<ListRecommendationsOutputResponse, ListRecommendationsOutputError>) -> Void)
    /// <p>
    ///          Returns a list of <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html">
    ///                <code>RepositoryAssociationSummary</code>
    ///             </a> objects that
    ///          contain summary information about a repository association. You can filter the returned list by
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-ProviderType">
    ///                <code>ProviderType</code>
    ///             </a>,
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Name">
    ///                <code>Name</code>
    ///             </a>,
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-State">
    ///                <code>State</code>
    ///             </a>, and
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociationSummary.html#reviewer-Type-RepositoryAssociationSummary-Owner">
    ///                <code>Owner</code>
    ///             </a>.
    ///       </p>
    func listRepositoryAssociations(input: ListRepositoryAssociationsInput, completion: @escaping (SdkResult<ListRepositoryAssociationsOutputResponse, ListRepositoryAssociationsOutputError>) -> Void)
    /// <p>Returns the list of tags associated with an associated repository resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>
    ///          Stores customer feedback for a CodeGuru Reviewer recommendation. When this API is called again with different reactions the previous feedback is overwritten.
    ///       </p>
    func putRecommendationFeedback(input: PutRecommendationFeedbackInput, completion: @escaping (SdkResult<PutRecommendationFeedbackOutputResponse, PutRecommendationFeedbackOutputError>) -> Void)
    /// <p>Adds one or more tags to an associated repository.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes a tag from an associated repository.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
}
