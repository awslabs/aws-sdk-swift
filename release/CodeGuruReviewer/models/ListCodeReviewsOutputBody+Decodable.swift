// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCodeReviewsOutputBody: Equatable {
    public let codeReviewSummaries: [CodeReviewSummary]?
    public let nextToken: String?
}

extension ListCodeReviewsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeReviewSummaries = "CodeReviewSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeReviewSummariesContainer = try containerValues.decodeIfPresent([CodeReviewSummary].self, forKey: .codeReviewSummaries)
        var codeReviewSummariesDecoded0:[CodeReviewSummary]? = nil
        if let codeReviewSummariesContainer = codeReviewSummariesContainer {
            codeReviewSummariesDecoded0 = [CodeReviewSummary]()
            for structure0 in codeReviewSummariesContainer {
                codeReviewSummariesDecoded0?.append(structure0)
            }
        }
        codeReviewSummaries = codeReviewSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
