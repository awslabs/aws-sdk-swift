// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Summary information about a repository association. The
///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">
///                <code>ListRepositoryAssociations</code>
///             </a>
///          operation returns a list of <code>RepositoryAssociationSummary</code> objects.</p>
public struct RepositoryAssociationSummary: Equatable {
    /// <p>
    ///          The Amazon Resource Name (ARN) of the
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html">
    ///                <code>RepositoryAssociation</code>
    ///             </a> object.
    ///          You can retrieve this ARN by calling
    ///          <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">
    ///                <code>ListRepositoryAssociations</code>
    ///             </a>.
    ///       </p>
    public let associationArn: String?
    /// <p>
    ///          The repository association ID.
    ///       </p>
    public let associationId: String?
    /// <p>
    ///          The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection. Its format is
    ///          <code>arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id</code>. For more information, see
    ///          <a href="https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html">
    ///                <code>Connection</code>
    ///             </a> in
    ///          the <i>AWS CodeStar Connections API Reference</i>.
    ///       </p>
    public let connectionArn: String?
    /// <p>The time, in milliseconds since the epoch, since the repository association
    ///         was last updated.
    ///       </p>
    public let lastUpdatedTimeStamp: Date?
    /// <p>The name of the repository association.</p>
    public let name: String?
    /// <p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the
    ///       account that owns the repository. For a GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the username for the account that owns the repository.</p>
    public let owner: String?
    /// <p>The provider type of the repository association.</p>
    public let providerType: ProviderType?
    /// <p>The state of the repository association.</p>
    ///          <p>The valid repository association states are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Associated</b>: The repository
    ///                association is complete.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Associating</b>: CodeGuru Reviewer is:
    ///             </p>
    ///                <ul>
    ///                   <li>
    ///                      <p>
    ///                      Setting up pull request notifications. This is required
    ///                      for pull requests to trigger a CodeGuru Reviewer review.
    ///                   </p>
    ///                      <note>
    ///                         <p>
    ///                         If your repository <code>ProviderType</code> is <code>GitHub</code>, <code>GitHub Enterprise Server</code>, or <code>Bitbucket</code>,
    ///                         CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks,
    ///                         reviews of code in your repository cannot be triggered.
    ///                      </p>
    ///                      </note>
    ///                   </li>
    ///                   <li>
    ///                      <p>
    ///                      Setting up source code access. This is required for CodeGuru Reviewer to securely
    ///                      clone code in your repository.
    ///                   </p>
    ///                   </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Failed</b>: The repository failed to associate or disassociate.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Disassociating</b>: CodeGuru Reviewer is removing the repository's pull request notifications and
    ///                source code access.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>Disassociated</b>: CodeGuru Reviewer successfully disassociated the repository. You can create a new association
    ///                with this repository if you want to review source code in it later. You can control access to code reviews created in an
    ///                associated repository with tags after it has been disassociated. For more information, see <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html">Using tags to control access to
    ///                associated repositories</a> in the <i>Amazon CodeGuru Reviewer User Guide</i>.
    ///             </p>
    ///             </li>
    ///          </ul>
    public let state: RepositoryAssociationState?

    public init (
        associationArn: String? = nil,
        associationId: String? = nil,
        connectionArn: String? = nil,
        lastUpdatedTimeStamp: Date? = nil,
        name: String? = nil,
        owner: String? = nil,
        providerType: ProviderType? = nil,
        state: RepositoryAssociationState? = nil
    )
    {
        self.associationArn = associationArn
        self.associationId = associationId
        self.connectionArn = connectionArn
        self.lastUpdatedTimeStamp = lastUpdatedTimeStamp
        self.name = name
        self.owner = owner
        self.providerType = providerType
        self.state = state
    }
}
