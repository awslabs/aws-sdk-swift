// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Metrics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case findingsCount = "FindingsCount"
        case meteredLinesOfCodeCount = "MeteredLinesOfCodeCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let findingsCount = findingsCount {
            try encodeContainer.encode(findingsCount, forKey: .findingsCount)
        }
        if let meteredLinesOfCodeCount = meteredLinesOfCodeCount {
            try encodeContainer.encode(meteredLinesOfCodeCount, forKey: .meteredLinesOfCodeCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let meteredLinesOfCodeCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .meteredLinesOfCodeCount)
        meteredLinesOfCodeCount = meteredLinesOfCodeCountDecoded
        let findingsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .findingsCount)
        findingsCount = findingsCountDecoded
    }
}
