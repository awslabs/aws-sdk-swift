// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListCodeReviewsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListCodeReviewsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListCodeReviewsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListCodeReviewsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let states = input.operationInput.states {
            states.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "States".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let repositoryNames = input.operationInput.repositoryNames {
            repositoryNames.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "RepositoryNames".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let type = input.operationInput.type {
            let typeQueryItem = URLQueryItem(name: "Type".urlPercentEncoding(), value: String(type.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(typeQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "NextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let providerTypes = input.operationInput.providerTypes {
            providerTypes.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "ProviderTypes".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "MaxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListCodeReviewsInput>
    public typealias MOutput = OperationOutput<ListCodeReviewsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListCodeReviewsOutputError>
}
