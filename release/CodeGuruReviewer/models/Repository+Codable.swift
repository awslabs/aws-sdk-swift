// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Repository: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bitbucket = "Bitbucket"
        case codeCommit = "CodeCommit"
        case gitHubEnterpriseServer = "GitHubEnterpriseServer"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bitbucket = bitbucket {
            try encodeContainer.encode(bitbucket, forKey: .bitbucket)
        }
        if let codeCommit = codeCommit {
            try encodeContainer.encode(codeCommit, forKey: .codeCommit)
        }
        if let gitHubEnterpriseServer = gitHubEnterpriseServer {
            try encodeContainer.encode(gitHubEnterpriseServer, forKey: .gitHubEnterpriseServer)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeCommitDecoded = try containerValues.decodeIfPresent(CodeCommitRepository.self, forKey: .codeCommit)
        codeCommit = codeCommitDecoded
        let bitbucketDecoded = try containerValues.decodeIfPresent(ThirdPartySourceRepository.self, forKey: .bitbucket)
        bitbucket = bitbucketDecoded
        let gitHubEnterpriseServerDecoded = try containerValues.decodeIfPresent(ThirdPartySourceRepository.self, forKey: .gitHubEnterpriseServer)
        gitHubEnterpriseServer = gitHubEnterpriseServerDecoded
    }
}
