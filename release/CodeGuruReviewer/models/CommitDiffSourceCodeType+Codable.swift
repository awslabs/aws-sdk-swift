// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CommitDiffSourceCodeType: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destinationCommit = "DestinationCommit"
        case sourceCommit = "SourceCommit"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destinationCommit = destinationCommit {
            try encodeContainer.encode(destinationCommit, forKey: .destinationCommit)
        }
        if let sourceCommit = sourceCommit {
            try encodeContainer.encode(sourceCommit, forKey: .sourceCommit)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceCommitDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceCommit)
        sourceCommit = sourceCommitDecoded
        let destinationCommitDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationCommit)
        destinationCommit = destinationCommitDecoded
    }
}
