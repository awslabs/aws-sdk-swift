// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>
///          Information about the summary of the code review.
///       </p>
public struct CodeReviewSummary: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">
    ///                <code>CodeReview</code>
    ///             </a> object.
    ///       </p>
    public let codeReviewArn: String?
    /// <p>
    ///          The time, in milliseconds since the epoch, when the code review was created.
    ///       </p>
    public let createdTimeStamp: Date?
    /// <p>
    ///          The time, in milliseconds since the epoch, when the code review was last updated.
    ///       </p>
    public let lastUpdatedTimeStamp: Date?
    /// <p>
    ///          The statistics from the code review.
    ///       </p>
    public let metricsSummary: MetricsSummary?
    /// <p>
    ///          The name of the code review.
    ///       </p>
    public let name: String?
    /// <p>The owner of the repository. For an AWS CodeCommit repository, this is the AWS account ID of the
    ///       account that owns the repository. For a GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the username for the account that owns the repository.</p>
    public let owner: String?
    /// <p>
    ///          The provider type of the repository association.
    ///       </p>
    public let providerType: ProviderType?
    /// <p>
    ///          The pull request ID for the code review.
    ///       </p>
    public let pullRequestId: String?
    /// <p>
    ///          The name of the repository.
    ///       </p>
    public let repositoryName: String?
    /// <p>
    ///          The state of the code review.
    ///       </p>
    ///          <p>The valid code review states are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Completed</code>: The code review is complete.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Pending</code>: The code review started and has not completed or failed.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Failed</code>: The code review failed.
    ///             </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Deleting</code>: The code review is being deleted.
    ///             </p>
    ///             </li>
    ///          </ul>
    public let state: JobState?
    /// <p>
    ///          The type of the code review.
    ///       </p>
    public let type: `Type`?

    public init (
        codeReviewArn: String? = nil,
        createdTimeStamp: Date? = nil,
        lastUpdatedTimeStamp: Date? = nil,
        metricsSummary: MetricsSummary? = nil,
        name: String? = nil,
        owner: String? = nil,
        providerType: ProviderType? = nil,
        pullRequestId: String? = nil,
        repositoryName: String? = nil,
        state: JobState? = nil,
        type: `Type`? = nil
    )
    {
        self.codeReviewArn = codeReviewArn
        self.createdTimeStamp = createdTimeStamp
        self.lastUpdatedTimeStamp = lastUpdatedTimeStamp
        self.metricsSummary = metricsSummary
        self.name = name
        self.owner = owner
        self.providerType = providerType
        self.pullRequestId = pullRequestId
        self.repositoryName = repositoryName
        self.state = state
        self.type = type
    }
}
