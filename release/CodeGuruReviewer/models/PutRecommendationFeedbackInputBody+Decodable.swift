// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecommendationFeedbackInputBody: Equatable {
    public let codeReviewArn: String?
    public let recommendationId: String?
    public let reactions: [Reaction]?
}

extension PutRecommendationFeedbackInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeReviewArn = "CodeReviewArn"
        case reactions = "Reactions"
        case recommendationId = "RecommendationId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeReviewArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .codeReviewArn)
        codeReviewArn = codeReviewArnDecoded
        let recommendationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .recommendationId)
        recommendationId = recommendationIdDecoded
        let reactionsContainer = try containerValues.decodeIfPresent([Reaction].self, forKey: .reactions)
        var reactionsDecoded0:[Reaction]? = nil
        if let reactionsContainer = reactionsContainer {
            reactionsDecoded0 = [Reaction]()
            for string0 in reactionsContainer {
                reactionsDecoded0?.append(string0)
            }
        }
        reactions = reactionsDecoded0
    }
}
