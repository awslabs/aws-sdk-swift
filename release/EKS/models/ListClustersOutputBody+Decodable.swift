// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListClustersOutputBody: Equatable {
    public let clusters: [String]?
    public let nextToken: String?
}

extension ListClustersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusters
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clustersContainer = try containerValues.decodeIfPresent([String].self, forKey: .clusters)
        var clustersDecoded0:[String]? = nil
        if let clustersContainer = clustersContainer {
            clustersDecoded0 = [String]()
            for string0 in clustersContainer {
                clustersDecoded0?.append(string0)
            }
        }
        clusters = clustersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
