// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object representing an Amazon EKS cluster VPC configuration response.</p>
public struct VpcConfigResponse: Equatable {
    /// <p>The cluster security group that was created by Amazon EKS for the cluster. Managed node
    ///             groups use this security group for control-plane-to-data-plane communication.</p>
    public let clusterSecurityGroupId: String?
    /// <p>This parameter indicates whether the Amazon EKS private API server endpoint is enabled. If
    ///             the Amazon EKS private API server endpoint is enabled, Kubernetes API requests that originate
    ///             from within your cluster's VPC use the private VPC endpoint instead of traversing the
    ///             internet. If this value is disabled and you have nodes or AWS Fargate pods in the cluster,
    ///             then ensure that <code>publicAccessCidrs</code> includes the necessary CIDR blocks for
    ///             communication with the nodes or Fargate pods. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon EKS Cluster
    ///                 Endpoint Access Control</a> in the <i>
    ///                <i>Amazon EKS User Guide</i>
    ///             </i>.</p>
    public let endpointPrivateAccess: Bool
    /// <p>This parameter indicates whether the Amazon EKS public API server endpoint is enabled. If
    ///             the Amazon EKS public API server endpoint is disabled, your cluster's Kubernetes API server
    ///             can only receive requests that originate from within the cluster VPC.</p>
    public let endpointPublicAccess: Bool
    /// <p>The CIDR blocks that are allowed access to your cluster's public Kubernetes API server
    ///             endpoint. Communication to the endpoint from addresses outside of the listed CIDR blocks
    ///             is denied. The default value is <code>0.0.0.0/0</code>. If you've disabled private
    ///             endpoint access and you have nodes or AWS Fargate pods in the cluster, then ensure that the
    ///             necessary CIDR blocks are listed. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html">Amazon EKS Cluster
    ///                 Endpoint Access Control</a> in the <i>
    ///                <i>Amazon EKS User Guide</i>
    ///             </i>.</p>
    public let publicAccessCidrs: [String]?
    /// <p>The security groups associated with the cross-account elastic network interfaces that
    ///             are used to allow communication between your nodes and the Kubernetes control
    ///             plane.</p>
    public let securityGroupIds: [String]?
    /// <p>The subnets associated with your cluster.</p>
    public let subnetIds: [String]?
    /// <p>The VPC associated with your cluster.</p>
    public let vpcId: String?

    public init (
        clusterSecurityGroupId: String? = nil,
        endpointPrivateAccess: Bool = false,
        endpointPublicAccess: Bool = false,
        publicAccessCidrs: [String]? = nil,
        securityGroupIds: [String]? = nil,
        subnetIds: [String]? = nil,
        vpcId: String? = nil
    )
    {
        self.clusterSecurityGroupId = clusterSecurityGroupId
        self.endpointPrivateAccess = endpointPrivateAccess
        self.endpointPublicAccess = endpointPublicAccess
        self.publicAccessCidrs = publicAccessCidrs
        self.securityGroupIds = securityGroupIds
        self.subnetIds = subnetIds
        self.vpcId = vpcId
    }
}
