// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNodegroupVersionInputBody: Equatable {
    public let version: String?
    public let releaseVersion: String?
    public let launchTemplate: LaunchTemplateSpecification?
    public let force: Bool
    public let clientRequestToken: String?
}

extension UpdateNodegroupVersionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken
        case force
        case launchTemplate
        case releaseVersion
        case version
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let releaseVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .releaseVersion)
        releaseVersion = releaseVersionDecoded
        let launchTemplateDecoded = try containerValues.decodeIfPresent(LaunchTemplateSpecification.self, forKey: .launchTemplate)
        launchTemplate = launchTemplateDecoded
        let forceDecoded = try containerValues.decode(Bool.self, forKey: .force)
        force = forceDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
