// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateTaintsPayload: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case addOrUpdateTaints
        case removeTaints
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addOrUpdateTaints = addOrUpdateTaints {
            var addOrUpdateTaintsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .addOrUpdateTaints)
            for taintslist0 in addOrUpdateTaints {
                try addOrUpdateTaintsContainer.encode(taintslist0)
            }
        }
        if let removeTaints = removeTaints {
            var removeTaintsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .removeTaints)
            for taintslist0 in removeTaints {
                try removeTaintsContainer.encode(taintslist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addOrUpdateTaintsContainer = try containerValues.decodeIfPresent([Taint].self, forKey: .addOrUpdateTaints)
        var addOrUpdateTaintsDecoded0:[Taint]? = nil
        if let addOrUpdateTaintsContainer = addOrUpdateTaintsContainer {
            addOrUpdateTaintsDecoded0 = [Taint]()
            for structure0 in addOrUpdateTaintsContainer {
                addOrUpdateTaintsDecoded0?.append(structure0)
            }
        }
        addOrUpdateTaints = addOrUpdateTaintsDecoded0
        let removeTaintsContainer = try containerValues.decodeIfPresent([Taint].self, forKey: .removeTaints)
        var removeTaintsDecoded0:[Taint]? = nil
        if let removeTaintsContainer = removeTaintsContainer {
            removeTaintsDecoded0 = [Taint]()
            for structure0 in removeTaintsContainer {
                removeTaintsDecoded0?.append(structure0)
            }
        }
        removeTaints = removeTaintsDecoded0
    }
}
