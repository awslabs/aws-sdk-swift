// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAddonsOutputBody: Equatable {
    public let addons: [String]?
    public let nextToken: String?
}

extension ListAddonsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addons
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addonsContainer = try containerValues.decodeIfPresent([String].self, forKey: .addons)
        var addonsDecoded0:[String]? = nil
        if let addonsContainer = addonsContainer {
            addonsDecoded0 = [String]()
            for string0 in addonsContainer {
                addonsDecoded0?.append(string0)
            }
        }
        addons = addonsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
