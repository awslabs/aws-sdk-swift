// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An object that represents the configuration for an OpenID Connect (OIDC) identity
///             provider. </p>
public struct OidcIdentityProviderConfig: Equatable {
    /// <p>This is also known as <i>audience</i>. The ID of the client application
    ///             that makes authentication requests to the OIDC identity provider.</p>
    public let clientId: String?
    /// <p>The cluster that the configuration is associated to.</p>
    public let clusterName: String?
    /// <p>The JSON web token (JWT) claim that the provider uses to return your groups.</p>
    public let groupsClaim: String?
    /// <p>The prefix that is prepended to group claims to prevent clashes with existing names
    ///             (such as <code>system:</code> groups). For example, the value<code> oidc:</code> creates
    ///             group names like <code>oidc:engineering</code> and <code>oidc:infra</code>. The prefix
    ///             can't contain <code>system:</code>
    ///          </p>
    public let groupsPrefix: String?
    /// <p>The ARN of the configuration.</p>
    public let identityProviderConfigArn: String?
    /// <p>The name of the configuration.</p>
    public let identityProviderConfigName: String?
    /// <p>The URL of the OIDC identity provider that allows the API server to discover public
    ///             signing keys for verifying tokens.</p>
    public let issuerUrl: String?
    /// <p>The key-value pairs that describe required claims in the identity token. If set, each
    ///             claim is verified to be present in the token with a matching value.</p>
    public let requiredClaims: [String:String]?
    /// <p>The status of the OIDC identity provider.</p>
    public let status: ConfigStatus?
    /// <p>The metadata to apply to the provider configuration to assist with categorization and
    ///             organization. Each tag consists of a key and an optional value, both of which you
    ///             defined.</p>
    public let tags: [String:String]?
    /// <p>The JSON Web token (JWT) claim that is used as the username.</p>
    public let usernameClaim: String?
    /// <p>The prefix that is prepended to username claims to prevent clashes with existing
    ///             names. The prefix can't contain <code>system:</code>
    ///          </p>
    public let usernamePrefix: String?

    public init (
        clientId: String? = nil,
        clusterName: String? = nil,
        groupsClaim: String? = nil,
        groupsPrefix: String? = nil,
        identityProviderConfigArn: String? = nil,
        identityProviderConfigName: String? = nil,
        issuerUrl: String? = nil,
        requiredClaims: [String:String]? = nil,
        status: ConfigStatus? = nil,
        tags: [String:String]? = nil,
        usernameClaim: String? = nil,
        usernamePrefix: String? = nil
    )
    {
        self.clientId = clientId
        self.clusterName = clusterName
        self.groupsClaim = groupsClaim
        self.groupsPrefix = groupsPrefix
        self.identityProviderConfigArn = identityProviderConfigArn
        self.identityProviderConfigName = identityProviderConfigName
        self.issuerUrl = issuerUrl
        self.requiredClaims = requiredClaims
        self.status = status
        self.tags = tags
        self.usernameClaim = usernameClaim
        self.usernamePrefix = usernamePrefix
    }
}
