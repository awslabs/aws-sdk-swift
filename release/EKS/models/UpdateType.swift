// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UpdateType {
    case addonUpdate
    case associateEncryptionConfig
    case associateIdentityProviderConfig
    case configUpdate
    case disassociateIdentityProviderConfig
    case endpointAccessUpdate
    case loggingUpdate
    case versionUpdate
    case sdkUnknown(String)
}

extension UpdateType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UpdateType] {
        return [
            .addonUpdate,
            .associateEncryptionConfig,
            .associateIdentityProviderConfig,
            .configUpdate,
            .disassociateIdentityProviderConfig,
            .endpointAccessUpdate,
            .loggingUpdate,
            .versionUpdate,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .addonUpdate: return "AddonUpdate"
        case .associateEncryptionConfig: return "AssociateEncryptionConfig"
        case .associateIdentityProviderConfig: return "AssociateIdentityProviderConfig"
        case .configUpdate: return "ConfigUpdate"
        case .disassociateIdentityProviderConfig: return "DisassociateIdentityProviderConfig"
        case .endpointAccessUpdate: return "EndpointAccessUpdate"
        case .loggingUpdate: return "LoggingUpdate"
        case .versionUpdate: return "VersionUpdate"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UpdateType(rawValue: rawValue) ?? UpdateType.sdkUnknown(rawValue)
    }
}
