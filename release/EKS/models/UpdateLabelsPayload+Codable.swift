// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateLabelsPayload: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case addOrUpdateLabels
        case removeLabels
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let addOrUpdateLabels = addOrUpdateLabels {
            var addOrUpdateLabelsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .addOrUpdateLabels)
            for (dictKey0, labelsmap0) in addOrUpdateLabels {
                try addOrUpdateLabelsContainer.encode(labelsmap0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let removeLabels = removeLabels {
            var removeLabelsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .removeLabels)
            for labelskeylist0 in removeLabels {
                try removeLabelsContainer.encode(labelskeylist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addOrUpdateLabelsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .addOrUpdateLabels)
        var addOrUpdateLabelsDecoded0: [String:String]? = nil
        if let addOrUpdateLabelsContainer = addOrUpdateLabelsContainer {
            addOrUpdateLabelsDecoded0 = [String:String]()
            for (key0, labelvalue0) in addOrUpdateLabelsContainer {
                addOrUpdateLabelsDecoded0?[key0] = labelvalue0
            }
        }
        addOrUpdateLabels = addOrUpdateLabelsDecoded0
        let removeLabelsContainer = try containerValues.decodeIfPresent([String].self, forKey: .removeLabels)
        var removeLabelsDecoded0:[String]? = nil
        if let removeLabelsContainer = removeLabelsContainer {
            removeLabelsDecoded0 = [String]()
            for string0 in removeLabelsContainer {
                removeLabelsDecoded0?.append(string0)
            }
        }
        removeLabels = removeLabelsDecoded0
    }
}
