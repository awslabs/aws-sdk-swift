// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateNodegroupInput: Equatable {
    /// <p>The AMI type for your node group. GPU instance types should use the
    ///                 <code>AL2_x86_64_GPU</code> AMI type. Non-GPU instances should use the
    ///                 <code>AL2_x86_64</code> AMI type. Arm instances should use the
    ///                 <code>AL2_ARM_64</code> AMI type. All types use the Amazon EKS optimized Amazon Linux 2 AMI.
    ///             If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify <code>amiType</code>,
    ///             or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let amiType: AMITypes?
    /// <p>The capacity type for your node group.</p>
    public let capacityType: CapacityTypes?
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///             request.</p>
    public var clientRequestToken: String?
    /// <p>The name of the cluster to create the node group in.</p>
    public let clusterName: String?
    /// <p>The root device disk size (in GiB) for your node group instances. The default disk
    ///             size is 20 GiB. If you specify <code>launchTemplate</code>, then don't specify  <code>diskSize</code>,
    ///             or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let diskSize: Int?
    /// <p>Specify the instance types for a node group. If you specify a GPU instance type, be
    ///             sure to specify <code>AL2_x86_64_GPU</code> with the <code>amiType</code> parameter. If
    ///             you specify <code>launchTemplate</code>, then you can specify zero or one instance type
    ///             in your launch template <i>or</i> you can specify 0-20 instance types for
    ///                 <code>instanceTypes</code>. If however, you specify an instance type in your launch
    ///             template <i>and</i> specify any <code>instanceTypes</code>, the node group
    ///             deployment will fail. If you don't specify an instance type in a launch template or for
    ///                 <code>instanceTypes</code>, then <code>t3.medium</code> is used, by default. If you
    ///             specify <code>Spot</code> for <code>capacityType</code>, then we recommend specifying
    ///             multiple values for <code>instanceTypes</code>. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types">Managed node group capacity types</a> and <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in
    ///             the <i>Amazon EKS User Guide</i>.</p>
    public let instanceTypes: [String]?
    /// <p>The Kubernetes labels to be applied to the nodes in the node group when they are
    ///             created.</p>
    public let labels: [String:String]?
    /// <p>An object representing a node group's launch template specification. If specified,
    ///             then do not specify <code>instanceTypes</code>, <code>diskSize</code>, or
    ///                 <code>remoteAccess</code> and make sure that the launch template meets the
    ///             requirements in <code>launchTemplateSpecification</code>.</p>
    public let launchTemplate: LaunchTemplateSpecification?
    /// <p>The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker
    ///             node <code>kubelet</code> daemon makes calls to AWS APIs on your behalf. Nodes receive
    ///             permissions for these API calls through an IAM instance profile and associated
    ///             policies. Before you can launch nodes and register them into a cluster, you must create
    ///             an IAM role for those nodes to use when they are launched. For more information, see
    ///                 <a href="https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html">Amazon EKS node IAM role</a> in the <i>
    ///                <i>Amazon EKS User Guide</i>
    ///             </i>.
    ///             If you specify <code>launchTemplate</code>, then don't specify  <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html">
    ///                <code>IamInstanceProfile</code>
    ///             </a> in your launch template,
    ///             or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let nodeRole: String?
    /// <p>The unique name to give your node group.</p>
    public let nodegroupName: String?
    /// <p>The AMI version of the Amazon EKS optimized AMI to use with your node group. By default,
    ///             the latest available AMI version for the node group's current Kubernetes version is
    ///             used. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS
    ///                 optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>. If you specify <code>launchTemplate</code>,
    ///             and your launch template uses a custom AMI, then don't specify  <code>releaseVersion</code>, or the node group
    ///             deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let releaseVersion: String?
    /// <p>The remote access (SSH) configuration to use with your node group. If you specify <code>launchTemplate</code>,
    ///             then don't specify  <code>remoteAccess</code>, or the node group  deployment
    ///             will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let remoteAccess: RemoteAccessConfig?
    /// <p>The scaling configuration details for the Auto Scaling group that is created for your
    ///             node group.</p>
    public let scalingConfig: NodegroupScalingConfig?
    /// <p>The subnets to use for the Auto Scaling group that is created for your node group.
    ///             If you specify <code>launchTemplate</code>, then don't specify  <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html">
    ///                <code>SubnetId</code>
    ///             </a> in your launch template, or the node group
    ///             deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let subnets: [String]?
    /// <p>The metadata to apply to the node group to assist with categorization and
    ///             organization. Each tag consists of a key and an optional value, both of which you
    ///             define. Node group tags do not propagate to any other resources associated with the node
    ///             group, such as the Amazon EC2 instances or subnets.</p>
    public let tags: [String:String]?
    /// <p>The Kubernetes taints to be applied to the nodes in the node group.</p>
    public let taints: [Taint]?
    /// <p>The Kubernetes version to use for your managed nodes. By default, the Kubernetes
    ///             version of the cluster is used, and this is the only accepted specified value.
    ///             If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify  <code>version</code>,
    ///             or the node group  deployment will fail. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let version: String?

    public init (
        amiType: AMITypes? = nil,
        capacityType: CapacityTypes? = nil,
        clientRequestToken: String? = nil,
        clusterName: String? = nil,
        diskSize: Int? = nil,
        instanceTypes: [String]? = nil,
        labels: [String:String]? = nil,
        launchTemplate: LaunchTemplateSpecification? = nil,
        nodeRole: String? = nil,
        nodegroupName: String? = nil,
        releaseVersion: String? = nil,
        remoteAccess: RemoteAccessConfig? = nil,
        scalingConfig: NodegroupScalingConfig? = nil,
        subnets: [String]? = nil,
        tags: [String:String]? = nil,
        taints: [Taint]? = nil,
        version: String? = nil
    )
    {
        self.amiType = amiType
        self.capacityType = capacityType
        self.clientRequestToken = clientRequestToken
        self.clusterName = clusterName
        self.diskSize = diskSize
        self.instanceTypes = instanceTypes
        self.labels = labels
        self.launchTemplate = launchTemplate
        self.nodeRole = nodeRole
        self.nodegroupName = nodegroupName
        self.releaseVersion = releaseVersion
        self.remoteAccess = remoteAccess
        self.scalingConfig = scalingConfig
        self.subnets = subnets
        self.tags = tags
        self.taints = taints
        self.version = version
    }
}
