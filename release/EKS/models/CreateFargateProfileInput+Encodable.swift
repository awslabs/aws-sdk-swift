// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateFargateProfileInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken
        case fargateProfileName
        case podExecutionRoleArn
        case selectors
        case subnets
        case tags
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let fargateProfileName = fargateProfileName {
            try encodeContainer.encode(fargateProfileName, forKey: .fargateProfileName)
        }
        if let podExecutionRoleArn = podExecutionRoleArn {
            try encodeContainer.encode(podExecutionRoleArn, forKey: .podExecutionRoleArn)
        }
        if let selectors = selectors {
            var selectorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .selectors)
            for fargateprofileselectors0 in selectors {
                try selectorsContainer.encode(fargateprofileselectors0)
            }
        }
        if let subnets = subnets {
            var subnetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnets)
            for stringlist0 in subnets {
                try subnetsContainer.encode(stringlist0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
