// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateNodegroupVersionInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///             request.</p>
    public var clientRequestToken: String?
    /// <p>The name of the Amazon EKS cluster that is associated with the managed node group to
    ///             update.</p>
    public let clusterName: String?
    /// <p>Force the update if the existing node group's pods are unable to be drained due to a
    ///             pod disruption budget issue. If an update fails because pods could not be drained, you
    ///             can force the update after it fails to terminate the old node whether or not any pods
    ///             are running on the node.</p>
    public let force: Bool
    /// <p>An object representing a node group's launch template specification. You can only
    ///             update a node group using a launch template if the node group was originally deployed
    ///             with a launch template.</p>
    public let launchTemplate: LaunchTemplateSpecification?
    /// <p>The name of the managed node group to update.</p>
    public let nodegroupName: String?
    /// <p>The AMI version of the Amazon EKS optimized AMI to use for the update. By default, the
    ///             latest available AMI version for the node group's Kubernetes version is used. For more
    ///             information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html">Amazon EKS optimized Amazon Linux 2 AMI versions </a> in the
    ///             <i>Amazon EKS User Guide</i>. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify
    ///                 <code>releaseVersion</code>, or the node group  update will fail.
    ///             For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let releaseVersion: String?
    /// <p>The Kubernetes version to update to. If no version is specified, then the Kubernetes
    ///             version of the node group does not change. You can specify the Kubernetes version of the
    ///             cluster to update the node group to the latest AMI version of the cluster's Kubernetes
    ///             version. If you specify <code>launchTemplate</code>, and your launch template uses a custom AMI, then don't specify
    ///                 <code>version</code>, or the node group  update will fail.
    ///             For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p>
    public let version: String?

    public init (
        clientRequestToken: String? = nil,
        clusterName: String? = nil,
        force: Bool = false,
        launchTemplate: LaunchTemplateSpecification? = nil,
        nodegroupName: String? = nil,
        releaseVersion: String? = nil,
        version: String? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.clusterName = clusterName
        self.force = force
        self.launchTemplate = launchTemplate
        self.nodegroupName = nodegroupName
        self.releaseVersion = releaseVersion
        self.version = version
    }
}
