// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFargateProfileInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///             request.</p>
    public var clientRequestToken: String?
    /// <p>The name of the Amazon EKS cluster to apply the Fargate profile to.</p>
    public let clusterName: String?
    /// <p>The name of the Fargate profile.</p>
    public let fargateProfileName: String?
    /// <p>The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in
    ///             the Fargate profile. The pod execution role allows Fargate infrastructure to register with
    ///             your cluster as a node, and it provides read access to Amazon ECR image repositories. For
    ///             more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html">Pod Execution Role</a> in the
    ///             <i>Amazon EKS User Guide</i>.</p>
    public let podExecutionRoleArn: String?
    /// <p>The selectors to match for pods to use this Fargate profile. Each selector must have an
    ///             associated namespace. Optionally, you can also specify labels for a namespace. You may
    ///             specify up to five selectors in a Fargate profile.</p>
    public let selectors: [FargateProfileSelector]?
    /// <p>The IDs of subnets to launch your pods into. At this time, pods running on Fargate are
    ///             not assigned public IP addresses, so only private subnets (with no direct route to an
    ///             Internet Gateway) are accepted for this parameter.</p>
    public let subnets: [String]?
    /// <p>The metadata to apply to the Fargate profile to assist with categorization and
    ///             organization. Each tag consists of a key and an optional value, both of which you
    ///             define. Fargate profile tags do not propagate to any other resources associated with the
    ///             Fargate profile, such as the pods that are scheduled with it.</p>
    public let tags: [String:String]?

    public init (
        clientRequestToken: String? = nil,
        clusterName: String? = nil,
        fargateProfileName: String? = nil,
        podExecutionRoleArn: String? = nil,
        selectors: [FargateProfileSelector]? = nil,
        subnets: [String]? = nil,
        tags: [String:String]? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.clusterName = clusterName
        self.fargateProfileName = fargateProfileName
        self.podExecutionRoleArn = podExecutionRoleArn
        self.selectors = selectors
        self.subnets = subnets
        self.tags = tags
    }
}
