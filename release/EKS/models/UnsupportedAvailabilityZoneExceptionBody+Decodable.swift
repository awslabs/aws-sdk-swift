// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnsupportedAvailabilityZoneExceptionBody: Equatable {
    public let message: String?
    public let clusterName: String?
    public let nodegroupName: String?
    public let validZones: [String]?
}

extension UnsupportedAvailabilityZoneExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterName
        case message
        case nodegroupName
        case validZones
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let clusterNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let nodegroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nodegroupName)
        nodegroupName = nodegroupNameDecoded
        let validZonesContainer = try containerValues.decodeIfPresent([String].self, forKey: .validZones)
        var validZonesDecoded0:[String]? = nil
        if let validZonesContainer = validZonesContainer {
            validZonesDecoded0 = [String]()
            for string0 in validZonesContainer {
                validZonesDecoded0?.append(string0)
            }
        }
        validZones = validZonesDecoded0
    }
}
