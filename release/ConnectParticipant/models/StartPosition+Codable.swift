// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartPosition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case absoluteTime = "AbsoluteTime"
        case id = "Id"
        case mostRecent = "MostRecent"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let absoluteTime = absoluteTime {
            try encodeContainer.encode(absoluteTime, forKey: .absoluteTime)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if mostRecent != 0 {
            try encodeContainer.encode(mostRecent, forKey: .mostRecent)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let absoluteTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .absoluteTime)
        absoluteTime = absoluteTimeDecoded
        let mostRecentDecoded = try containerValues.decode(Int.self, forKey: .mostRecent)
        mostRecent = mostRecentDecoded
    }
}
