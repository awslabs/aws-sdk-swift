// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTranscriptOutputBody: Equatable {
    public let initialContactId: String?
    public let transcript: [Item]?
    public let nextToken: String?
}

extension GetTranscriptOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case initialContactId = "InitialContactId"
        case nextToken = "NextToken"
        case transcript = "Transcript"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initialContactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .initialContactId)
        initialContactId = initialContactIdDecoded
        let transcriptContainer = try containerValues.decodeIfPresent([Item].self, forKey: .transcript)
        var transcriptDecoded0:[Item]? = nil
        if let transcriptContainer = transcriptContainer {
            transcriptDecoded0 = [Item]()
            for structure0 in transcriptContainer {
                transcriptDecoded0?.append(structure0)
            }
        }
        transcript = transcriptDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
