// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UploadMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case headersToInclude = "HeadersToInclude"
        case url = "Url"
        case urlExpiry = "UrlExpiry"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let headersToInclude = headersToInclude {
            var headersToIncludeContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .headersToInclude)
            for (dictKey0, uploadmetadatasignedheaders0) in headersToInclude {
                try headersToIncludeContainer.encode(uploadmetadatasignedheaders0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let url = url {
            try encodeContainer.encode(url, forKey: .url)
        }
        if let urlExpiry = urlExpiry {
            try encodeContainer.encode(urlExpiry, forKey: .urlExpiry)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let urlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .url)
        url = urlDecoded
        let urlExpiryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .urlExpiry)
        urlExpiry = urlExpiryDecoded
        let headersToIncludeContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .headersToInclude)
        var headersToIncludeDecoded0: [String:String]? = nil
        if let headersToIncludeContainer = headersToIncludeContainer {
            headersToIncludeDecoded0 = [String:String]()
            for (key0, uploadmetadatasignedheadersvalue0) in headersToIncludeContainer {
                headersToIncludeDecoded0?[key0] = uploadmetadatasignedheadersvalue0
            }
        }
        headersToInclude = headersToIncludeDecoded0
    }
}
