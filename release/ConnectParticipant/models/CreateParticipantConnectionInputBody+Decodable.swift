// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateParticipantConnectionInputBody: Equatable {
    public let type: [ConnectionType]?
}

extension CreateParticipantConnectionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeContainer = try containerValues.decodeIfPresent([ConnectionType].self, forKey: .type)
        var typeDecoded0:[ConnectionType]? = nil
        if let typeContainer = typeContainer {
            typeDecoded0 = [ConnectionType]()
            for string0 in typeContainer {
                typeDecoded0?.append(string0)
            }
        }
        type = typeDecoded0
    }
}
