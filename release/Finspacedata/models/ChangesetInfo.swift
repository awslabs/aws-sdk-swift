// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A changeset is unit of data in a dataset.</p>
public struct ChangesetInfo: Equatable {
    /// <p>Change type indicates how a changeset is applied to a dataset.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>REPLACE</code> - Changeset is considered as a replacement to all prior loaded
    ///           changesets.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>APPEND</code> - Changeset is considered as an addition to the end of all prior
    ///           loaded changesets.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>MODIFY</code> - Changeset is considered as a replacement to a specific prior
    ///           ingested changeset.</p>
    ///             </li>
    ///          </ul>
    public let changeType: ChangeType?
    /// <p>The ARN identifier of the changeset.</p>
    public let changesetArn: String?
    /// <p>Tags associated with the changeset.</p>
    public let changesetLabels: [String:String]?
    /// <p>The timestamp at which the changeset was created in FinSpace.</p>
    public let createTimestamp: Date?
    /// <p>The unique identifier for the FinSpace dataset in which the changeset is created.</p>
    public let datasetId: String?
    /// <p>The structure with error messages.</p>
    public let errorInfo: ErrorInfo?
    /// <p>Structure of the source file(s).</p>
    public let formatParams: [String:String]?
    /// <p>Format type of the input files loaded into the changeset.</p>
    public let formatType: FormatType?
    /// <p>Unique identifier for a changeset.</p>
    public let id: String?
    /// <p>Source path from which the files to create the changeset are sourced.</p>
    public let sourceParams: [String:String]?
    /// <p>Type of the data source from which the files to create the changeset are sourced.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>S3</code> - Amazon S3.</p>
    ///             </li>
    ///          </ul>
    public let sourceType: SourceType?
    /// <p>The status of changeset creation operation.</p>
    public let status: ChangesetStatus?
    /// <p>Unique identifier of the changeset that is updated a changeset.</p>
    public let updatedByChangesetId: String?
    /// <p>Unique identifier of the changeset that is updated.</p>
    public let updatesChangesetId: String?

    public init (
        changeType: ChangeType? = nil,
        changesetArn: String? = nil,
        changesetLabels: [String:String]? = nil,
        createTimestamp: Date? = nil,
        datasetId: String? = nil,
        errorInfo: ErrorInfo? = nil,
        formatParams: [String:String]? = nil,
        formatType: FormatType? = nil,
        id: String? = nil,
        sourceParams: [String:String]? = nil,
        sourceType: SourceType? = nil,
        status: ChangesetStatus? = nil,
        updatedByChangesetId: String? = nil,
        updatesChangesetId: String? = nil
    )
    {
        self.changeType = changeType
        self.changesetArn = changesetArn
        self.changesetLabels = changesetLabels
        self.createTimestamp = createTimestamp
        self.datasetId = datasetId
        self.errorInfo = errorInfo
        self.formatParams = formatParams
        self.formatType = formatType
        self.id = id
        self.sourceParams = sourceParams
        self.sourceType = sourceType
        self.status = status
        self.updatedByChangesetId = updatedByChangesetId
        self.updatesChangesetId = updatesChangesetId
    }
}
