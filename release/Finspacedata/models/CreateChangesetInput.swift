// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateChangesetInput: Equatable {
    /// <p>Option to indicate how a changeset will be applied to a dataset.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>REPLACE</code> - Changeset will be considered as a replacement to all prior
    ///           loaded changesets.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>APPEND</code> - Changeset will be considered as an addition to the end of all
    ///           prior loaded changesets.</p>
    ///             </li>
    ///          </ul>
    public let changeType: ChangeType?
    /// <p>The unique identifier for the FinSpace dataset in which the changeset will be
    ///       created.</p>
    public let datasetId: String?
    /// <p>Options that define the structure of the source file(s).</p>
    public let formatParams: [String:String]?
    /// <p>Format type of the input files being loaded into the changeset.</p>
    public let formatType: FormatType?
    /// <p>Source path from which the files to create the changeset will be sourced.</p>
    public let sourceParams: [String:String]?
    /// <p>Type of the data source from which the files to create the changeset will be
    ///       sourced.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>S3</code> - Amazon S3.</p>
    ///             </li>
    ///          </ul>
    public let sourceType: SourceType?
    /// <p>Metadata tags to apply to this changeset.</p>
    public let tags: [String:String]?

    public init (
        changeType: ChangeType? = nil,
        datasetId: String? = nil,
        formatParams: [String:String]? = nil,
        formatType: FormatType? = nil,
        sourceParams: [String:String]? = nil,
        sourceType: SourceType? = nil,
        tags: [String:String]? = nil
    )
    {
        self.changeType = changeType
        self.datasetId = datasetId
        self.formatParams = formatParams
        self.formatType = formatType
        self.sourceParams = sourceParams
        self.sourceType = sourceType
        self.tags = tags
    }
}
