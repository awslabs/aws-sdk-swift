// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ErrorCategory {
    case accessDenied
    case cancelled
    case internalServiceException
    case resourceNotFound
    case serviceQuotaExceeded
    case throttling
    case userRecoverable
    case validation
    case sdkUnknown(String)
}

extension ErrorCategory : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ErrorCategory] {
        return [
            .accessDenied,
            .cancelled,
            .internalServiceException,
            .resourceNotFound,
            .serviceQuotaExceeded,
            .throttling,
            .userRecoverable,
            .validation,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessDenied: return "Missing_required_permission_to_perform_this_request"
        case .cancelled: return "Cancelled"
        case .internalServiceException: return "An_internal_error_has_occurred"
        case .resourceNotFound: return "One_or_more_inputs_to_this_request_were_not_found"
        case .serviceQuotaExceeded: return "Service_limits_have_been_exceeded"
        case .throttling: return "The_system_temporarily_lacks_sufficient_resources_to_process_the_request"
        case .userRecoverable: return "A_user_recoverable_error_has_occurred"
        case .validation: return "The_inputs_to_this_request_are_invalid"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ErrorCategory(rawValue: rawValue) ?? ErrorCategory.sdkUnknown(rawValue)
    }
}
