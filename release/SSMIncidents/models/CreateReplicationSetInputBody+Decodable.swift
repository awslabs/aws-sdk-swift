// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateReplicationSetInputBody: Equatable {
    public let regions: [String:RegionMapInputValue]?
    public let clientToken: String?
}

extension CreateReplicationSetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case regions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regionsContainer = try containerValues.decodeIfPresent([String:RegionMapInputValue].self, forKey: .regions)
        var regionsDecoded0: [String:RegionMapInputValue]? = nil
        if let regionsContainer = regionsContainer {
            regionsDecoded0 = [String:RegionMapInputValue]()
            for (key0, regionmapinputvalue0) in regionsContainer {
                regionsDecoded0?[key0] = regionmapinputvalue0
            }
        }
        regions = regionsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
