// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTimelineEventInputBody: Equatable {
    public let clientToken: String?
    public let incidentRecordArn: String?
    public let eventTime: Date?
    public let eventType: String?
    public let eventData: String?
}

extension CreateTimelineEventInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case eventData
        case eventTime
        case eventType
        case incidentRecordArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let incidentRecordArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .incidentRecordArn)
        incidentRecordArn = incidentRecordArnDecoded
        let eventTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .eventTime)
        eventTime = eventTimeDecoded
        let eventTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventType)
        eventType = eventTypeDecoded
        let eventDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventData)
        eventData = eventDataDecoded
    }
}
