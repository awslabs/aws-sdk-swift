// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RelatedItemsUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case itemToAdd
        case itemToRemove
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .itemToAdd(itemToAdd):
                if let itemToAdd = itemToAdd {
                    try container.encode(itemToAdd, forKey: .itemToAdd)
                }
            case let .itemToRemove(itemToRemove):
                if let itemToRemove = itemToRemove {
                    try container.encode(itemToRemove, forKey: .itemToRemove)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let itemToAddDecoded = try values.decodeIfPresent(RelatedItem.self, forKey: .itemToAdd)
        if let itemToAdd = itemToAddDecoded {
            self = .itemToAdd(itemToAdd)
            return
        }
        let itemToRemoveDecoded = try values.decodeIfPresent(ItemIdentifier.self, forKey: .itemToRemove)
        if let itemToRemove = itemToRemoveDecoded {
            self = .itemToRemove(itemToRemove)
            return
        }
        self = .sdkUnknown("")
    }
}
