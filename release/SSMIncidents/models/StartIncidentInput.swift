// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartIncidentInput: Equatable {
    /// <p>A token ensuring that the action is called only once with the specified details.</p>
    public var clientToken: String?
    /// <p>Defines the impact to the customers. Providing an impact overwrites the impact
    ///             provided by a response plan.</p>
    ///         <p class="title">
    ///             <b>Possible impacts:</b>
    ///          </p>
    ///          <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>1</code> - Critical impact, this typically relates to full application
    ///                     failure that impacts many to all customers. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>2</code> - High impact, partial application failure with impact to many
    ///                     customers.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>3</code> -  Medium impact, the application is providing reduced service
    ///                     to customers.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>4</code> -  Low impact, customer might aren't impacted by the problem
    ///                     yet.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>5</code> - No impact, customers aren't currently impacted but urgent
    ///                     action is needed to avoid impact.</p>
    ///             </li>
    ///          </ul>
    public let impact: Int?
    /// <p>Add related items to the incident for other responders to use. Related items are AWS
    ///             resources, external links, or files uploaded to an S3 bucket. </p>
    public let relatedItems: [RelatedItem]?
    /// <p>The Amazon Resource Name (ARN) of the response plan that pre-defines summary, chat
    ///             channels, SNS topics, runbooks, title, and impact of the incident. </p>
    public let responsePlanArn: String?
    /// <p>Provide a title for the incident. Providing a title overwrites the title provided by
    ///             the response plan. </p>
    public let title: String?
    /// <p>Details of what created the incident record in Incident Manager.</p>
    public let triggerDetails: TriggerDetails?

    public init (
        clientToken: String? = nil,
        impact: Int? = nil,
        relatedItems: [RelatedItem]? = nil,
        responsePlanArn: String? = nil,
        title: String? = nil,
        triggerDetails: TriggerDetails? = nil
    )
    {
        self.clientToken = clientToken
        self.impact = impact
        self.relatedItems = relatedItems
        self.responsePlanArn = responsePlanArn
        self.title = title
        self.triggerDetails = triggerDetails
    }
}
