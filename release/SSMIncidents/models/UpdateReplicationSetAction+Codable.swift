// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateReplicationSetAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case addRegionAction
        case deleteRegionAction
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .addRegionAction(addRegionAction):
                if let addRegionAction = addRegionAction {
                    try container.encode(addRegionAction, forKey: .addRegionAction)
                }
            case let .deleteRegionAction(deleteRegionAction):
                if let deleteRegionAction = deleteRegionAction {
                    try container.encode(deleteRegionAction, forKey: .deleteRegionAction)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let addRegionActionDecoded = try values.decodeIfPresent(AddRegionAction.self, forKey: .addRegionAction)
        if let addRegionAction = addRegionActionDecoded {
            self = .addRegionAction(addRegionAction)
            return
        }
        let deleteRegionActionDecoded = try values.decodeIfPresent(DeleteRegionAction.self, forKey: .deleteRegionAction)
        if let deleteRegionAction = deleteRegionActionDecoded {
            self = .deleteRegionAction(deleteRegionAction)
            return
        }
        self = .sdkUnknown("")
    }
}
