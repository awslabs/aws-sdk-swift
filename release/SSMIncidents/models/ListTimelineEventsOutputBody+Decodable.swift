// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTimelineEventsOutputBody: Equatable {
    public let eventSummaries: [EventSummary]?
    public let nextToken: String?
}

extension ListTimelineEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eventSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventSummariesContainer = try containerValues.decodeIfPresent([EventSummary].self, forKey: .eventSummaries)
        var eventSummariesDecoded0:[EventSummary]? = nil
        if let eventSummariesContainer = eventSummariesContainer {
            eventSummariesDecoded0 = [EventSummary]()
            for structure0 in eventSummariesContainer {
                eventSummariesDecoded0?.append(structure0)
            }
        }
        eventSummaries = eventSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
