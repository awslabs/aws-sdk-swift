// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReplicationSetsOutputBody: Equatable {
    public let replicationSetArns: [String]?
    public let nextToken: String?
}

extension ListReplicationSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case replicationSetArns
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationSetArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .replicationSetArns)
        var replicationSetArnsDecoded0:[String]? = nil
        if let replicationSetArnsContainer = replicationSetArnsContainer {
            replicationSetArnsDecoded0 = [String]()
            for string0 in replicationSetArnsContainer {
                replicationSetArnsDecoded0?.append(string0)
            }
        }
        replicationSetArns = replicationSetArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
