// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateIncidentRecordInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn
        case chatChannel
        case clientToken
        case impact
        case notificationTargets
        case status
        case summary
        case title
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let chatChannel = chatChannel {
            try encodeContainer.encode(chatChannel, forKey: .chatChannel)
        }
        if let clientToken = clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let impact = impact {
            try encodeContainer.encode(impact, forKey: .impact)
        }
        if let notificationTargets = notificationTargets {
            var notificationTargetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .notificationTargets)
            for notificationtargetset0 in notificationTargets {
                try notificationTargetsContainer.encode(notificationtargetset0)
            }
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let summary = summary {
            try encodeContainer.encode(summary, forKey: .summary)
        }
        if let title = title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }
}
