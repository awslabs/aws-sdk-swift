// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIncidentRecordsOutputBody: Equatable {
    public let incidentRecordSummaries: [IncidentRecordSummary]?
    public let nextToken: String?
}

extension ListIncidentRecordsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case incidentRecordSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let incidentRecordSummariesContainer = try containerValues.decodeIfPresent([IncidentRecordSummary].self, forKey: .incidentRecordSummaries)
        var incidentRecordSummariesDecoded0:[IncidentRecordSummary]? = nil
        if let incidentRecordSummariesContainer = incidentRecordSummariesContainer {
            incidentRecordSummariesDecoded0 = [IncidentRecordSummary]()
            for structure0 in incidentRecordSummariesContainer {
                incidentRecordSummariesDecoded0?.append(structure0)
            }
        }
        incidentRecordSummaries = incidentRecordSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
