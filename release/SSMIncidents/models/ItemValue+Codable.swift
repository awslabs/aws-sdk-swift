// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ItemValue: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn
        case metricDefinition
        case sdkUnknown
        case url
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .arn(arn):
                if let arn = arn {
                    try container.encode(arn, forKey: .arn)
                }
            case let .metricDefinition(metricDefinition):
                if let metricDefinition = metricDefinition {
                    try container.encode(metricDefinition, forKey: .metricDefinition)
                }
            case let .url(url):
                if let url = url {
                    try container.encode(url, forKey: .url)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try values.decodeIfPresent(String.self, forKey: .arn)
        if let arn = arnDecoded {
            self = .arn(arn)
            return
        }
        let urlDecoded = try values.decodeIfPresent(String.self, forKey: .url)
        if let url = urlDecoded {
            self = .url(url)
            return
        }
        let metricDefinitionDecoded = try values.decodeIfPresent(String.self, forKey: .metricDefinition)
        if let metricDefinition = metricDefinitionDecoded {
            self = .metricDefinition(metricDefinition)
            return
        }
        self = .sdkUnknown("")
    }
}
