// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceType {
    case incidentRecord
    case replicationSet
    case resourcePolicy
    case responsePlan
    case timelineEvent
    case sdkUnknown(String)
}

extension ResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceType] {
        return [
            .incidentRecord,
            .replicationSet,
            .resourcePolicy,
            .responsePlan,
            .timelineEvent,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .incidentRecord: return "INCIDENT_RECORD"
        case .replicationSet: return "REPLICATION_SET"
        case .resourcePolicy: return "RESOURCE_POLICY"
        case .responsePlan: return "RESPONSE_PLAN"
        case .timelineEvent: return "TIMELINE_EVENT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
    }
}
