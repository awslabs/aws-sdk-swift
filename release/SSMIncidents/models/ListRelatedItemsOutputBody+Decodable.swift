// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRelatedItemsOutputBody: Equatable {
    public let relatedItems: [RelatedItem]?
    public let nextToken: String?
}

extension ListRelatedItemsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case relatedItems
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relatedItemsContainer = try containerValues.decodeIfPresent([RelatedItem].self, forKey: .relatedItems)
        var relatedItemsDecoded0:[RelatedItem]? = nil
        if let relatedItemsContainer = relatedItemsContainer {
            relatedItemsDecoded0 = [RelatedItem]()
            for structure0 in relatedItemsContainer {
                relatedItemsDecoded0?.append(structure0)
            }
        }
        relatedItems = relatedItemsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
