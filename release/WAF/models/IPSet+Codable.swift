// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IPSet: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iPSetDescriptors = "IPSetDescriptors"
        case iPSetId = "IPSetId"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iPSetDescriptors = iPSetDescriptors {
            var iPSetDescriptorsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .iPSetDescriptors)
            for ipsetdescriptors0 in iPSetDescriptors {
                try iPSetDescriptorsContainer.encode(ipsetdescriptors0)
            }
        }
        if let iPSetId = iPSetId {
            try encodeContainer.encode(iPSetId, forKey: .iPSetId)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPSetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .iPSetId)
        iPSetId = iPSetIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let iPSetDescriptorsContainer = try containerValues.decodeIfPresent([IPSetDescriptor].self, forKey: .iPSetDescriptors)
        var iPSetDescriptorsDecoded0:[IPSetDescriptor]? = nil
        if let iPSetDescriptorsContainer = iPSetDescriptorsContainer {
            iPSetDescriptorsDecoded0 = [IPSetDescriptor]()
            for structure0 in iPSetDescriptorsContainer {
                iPSetDescriptorsDecoded0?.append(structure0)
            }
        }
        iPSetDescriptors = iPSetDescriptorsDecoded0
    }
}
