// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateWebACLMigrationStackInput: Equatable {
    /// <p>Indicates whether to exclude entities that can't be migrated or to stop the migration.
    ///            Set this to true to ignore unsupported entities in the web ACL during the migration. Otherwise, if AWS WAF encounters unsupported
    ///            entities, it stops the process and throws an exception. </p>
    public let ignoreUnsupportedType: Bool?
    /// <p>The name of the Amazon S3 bucket to store the CloudFormation template in. The S3 bucket must be
    ///            configured as follows for the migration:  </p>
    ///          <ul>
    ///             <li>
    ///                <p>The bucket name must start with <code>aws-waf-migration-</code>. For example, <code>aws-waf-migration-my-web-acl</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>The bucket must be in the Region where you are deploying the template. For example, for a web ACL in us-west-2, you must use an Amazon S3 bucket in us-west-2 and you must deploy the template stack to us-west-2. </p>
    ///             </li>
    ///             <li>
    ///                <p>The bucket policies must permit the migration process to write data. For listings of the
    ///        bucket policies, see the Examples section. </p>
    ///            </li>
    ///          </ul>
    public let s3BucketName: String?
    /// <p>The UUID of the WAF Classic web ACL that you want to migrate to WAF v2.</p>
    public let webACLId: String?

    public init (
        ignoreUnsupportedType: Bool? = nil,
        s3BucketName: String? = nil,
        webACLId: String? = nil
    )
    {
        self.ignoreUnsupportedType = ignoreUnsupportedType
        self.s3BucketName = s3BucketName
        self.webACLId = webACLId
    }
}
