// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSampledRequestsOutputBody: Equatable {
    public let sampledRequests: [SampledHTTPRequest]?
    public let populationSize: Int
    public let timeWindow: TimeWindow?
}

extension GetSampledRequestsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case populationSize = "PopulationSize"
        case sampledRequests = "SampledRequests"
        case timeWindow = "TimeWindow"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sampledRequestsContainer = try containerValues.decodeIfPresent([SampledHTTPRequest].self, forKey: .sampledRequests)
        var sampledRequestsDecoded0:[SampledHTTPRequest]? = nil
        if let sampledRequestsContainer = sampledRequestsContainer {
            sampledRequestsDecoded0 = [SampledHTTPRequest]()
            for structure0 in sampledRequestsContainer {
                sampledRequestsDecoded0?.append(structure0)
            }
        }
        sampledRequests = sampledRequestsDecoded0
        let populationSizeDecoded = try containerValues.decode(Int.self, forKey: .populationSize)
        populationSize = populationSizeDecoded
        let timeWindowDecoded = try containerValues.decodeIfPresent(TimeWindow.self, forKey: .timeWindow)
        timeWindow = timeWindowDecoded
    }
}
