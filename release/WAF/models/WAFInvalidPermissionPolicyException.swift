// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The operation failed because the specified policy is not in the proper format. </p>
///          <p>The policy is subject to the following restrictions:</p>
///          <ul>
///             <li>
///                <p>You can attach only one policy with each <code>PutPermissionPolicy</code> request.</p>
///             </li>
///             <li>
///                <p>The policy must include an <code>Effect</code>, <code>Action</code> and <code>Principal</code>. </p>
///             </li>
///             <li>
///
///                <p>
///                   <code>Effect</code> must specify <code>Allow</code>.</p>
///             </li>
///             <li>
///                <p>The <code>Action</code> in the policy must be <code>waf:UpdateWebACL</code>, <code>waf-regional:UpdateWebACL</code>, <code>waf:GetRuleGroup</code> and <code>waf-regional:GetRuleGroup</code> . Any extra or wildcard actions in the policy will be rejected.</p>
///             </li>
///             <li>
///                <p>The policy cannot include a <code>Resource</code> parameter.</p>
///             </li>
///             <li>
///                <p>The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup must exist in the same region.</p>
///             </li>
///             <li>
///                <p>The user making the request must be the owner of the RuleGroup.</p>
///             </li>
///             <li>
///                <p>Your policy must be composed using IAM Policy version 2012-10-17.</p>
///             </li>
///          </ul>
public struct WAFInvalidPermissionPolicyException: ClientRuntime.ServiceError, Equatable {
    public var _headers: Headers?
    public var _statusCode: HttpStatusCode?
    public var _message: String?
    public var _requestID: String?
    public var _retryable: Bool = false
    public var _isThrottling: Bool = false
    public var _type: ErrorType = .client
    public var message: String?

    public init (
        message: String? = nil
    )
    {
        self.message = message
    }
}
