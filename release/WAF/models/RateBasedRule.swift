// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <note>
///             <p>This is <b>AWS WAF Classic</b> documentation. For
///       more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS
///       WAF Classic</a> in the developer guide.</p>
///             <p>
///                <b>For the latest version of AWS
///       WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
///          </note>
///          <p>A <code>RateBasedRule</code> is identical to a regular <a>Rule</a>, with
///          one addition: a <code>RateBasedRule</code> counts the number of requests that arrive from a
///          specified IP address every five minutes. For example, based on recent requests that you've
///          seen from an attacker, you might create a <code>RateBasedRule</code> that includes the
///          following conditions: </p>
///          <ul>
///             <li>
///                <p>The requests come from 192.0.2.44.</p>
///             </li>
///             <li>
///                <p>They contain the value <code>BadBot</code> in the <code>User-Agent</code>
///                header.</p>
///             </li>
///          </ul>
///          <p>In the rule, you also define the rate limit as 1,000.</p>
///          <p>Requests that meet both of these conditions and exceed 1,000 requests every five
///          minutes trigger the rule's action (block or count), which is defined in the web
///          ACL.</p>
public struct RateBasedRule: Equatable {
    /// <p>The <code>Predicates</code> object contains one <code>Predicate</code> element for
    ///          each <a>ByteMatchSet</a>, <a>IPSet</a>, or <a>SqlInjectionMatchSet</a> object that you want to include in a
    ///             <code>RateBasedRule</code>.</p>
    public let matchPredicates: [Predicate]?
    /// <p>A friendly name or description for the metrics for a <code>RateBasedRule</code>. The name can contain only alphanumeric characters (A-Z, a-z, 0-9), with maximum length 128 and minimum length one. It can't contain
    ///          whitespace or metric names reserved for AWS WAF, including "All" and "Default_Action." You can't change the name of the metric after you create the
    ///             <code>RateBasedRule</code>.</p>
    public let metricName: String?
    /// <p>A friendly name or description for a <code>RateBasedRule</code>. You can't change the
    ///          name of a <code>RateBasedRule</code> after you create it.</p>
    public let name: String?
    /// <p>The field that AWS WAF uses to determine if requests are likely arriving from single
    ///          source and thus subject to rate monitoring. The only valid value for <code>RateKey</code>
    ///          is <code>IP</code>. <code>IP</code> indicates that requests arriving from the same IP
    ///          address are subject to the <code>RateLimit</code> that is specified in the
    ///             <code>RateBasedRule</code>.</p>
    public let rateKey: RateKey?
    /// <p>The maximum number of requests, which have an identical value in the field specified
    ///          by the <code>RateKey</code>, allowed in a five-minute period. If the number of requests
    ///          exceeds the <code>RateLimit</code> and the other predicates specified in the rule are also
    ///          met, AWS WAF triggers the action that is specified for this rule.</p>
    public let rateLimit: Int
    /// <p>A unique identifier for a <code>RateBasedRule</code>. You use <code>RuleId</code> to
    ///          get more information about a <code>RateBasedRule</code> (see <a>GetRateBasedRule</a>), update a <code>RateBasedRule</code> (see <a>UpdateRateBasedRule</a>), insert a <code>RateBasedRule</code> into a
    ///             <code>WebACL</code> or delete one from a <code>WebACL</code> (see <a>UpdateWebACL</a>), or delete a <code>RateBasedRule</code> from AWS WAF (see <a>DeleteRateBasedRule</a>).</p>
    public let ruleId: String?

    public init (
        matchPredicates: [Predicate]? = nil,
        metricName: String? = nil,
        name: String? = nil,
        rateKey: RateKey? = nil,
        rateLimit: Int = 0,
        ruleId: String? = nil
    )
    {
        self.matchPredicates = matchPredicates
        self.metricName = metricName
        self.name = name
        self.rateKey = rateKey
        self.rateLimit = rateLimit
        self.ruleId = ruleId
    }
}
