// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct WAFInvalidParameterExceptionBody: Equatable {
    public let field: ParameterExceptionField?
    public let parameter: String?
    public let reason: ParameterExceptionReason?
}

extension WAFInvalidParameterExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case field
        case parameter
        case reason
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fieldDecoded = try containerValues.decodeIfPresent(ParameterExceptionField.self, forKey: .field)
        field = fieldDecoded
        let parameterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .parameter)
        parameter = parameterDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(ParameterExceptionReason.self, forKey: .reason)
        reason = reasonDecoded
    }
}
