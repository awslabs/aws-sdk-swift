// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SqlInjectionMatchSet: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name = "Name"
        case sqlInjectionMatchSetId = "SqlInjectionMatchSetId"
        case sqlInjectionMatchTuples = "SqlInjectionMatchTuples"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let sqlInjectionMatchSetId = sqlInjectionMatchSetId {
            try encodeContainer.encode(sqlInjectionMatchSetId, forKey: .sqlInjectionMatchSetId)
        }
        if let sqlInjectionMatchTuples = sqlInjectionMatchTuples {
            var sqlInjectionMatchTuplesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sqlInjectionMatchTuples)
            for sqlinjectionmatchtuples0 in sqlInjectionMatchTuples {
                try sqlInjectionMatchTuplesContainer.encode(sqlinjectionmatchtuples0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sqlInjectionMatchSetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sqlInjectionMatchSetId)
        sqlInjectionMatchSetId = sqlInjectionMatchSetIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let sqlInjectionMatchTuplesContainer = try containerValues.decodeIfPresent([SqlInjectionMatchTuple].self, forKey: .sqlInjectionMatchTuples)
        var sqlInjectionMatchTuplesDecoded0:[SqlInjectionMatchTuple]? = nil
        if let sqlInjectionMatchTuplesContainer = sqlInjectionMatchTuplesContainer {
            sqlInjectionMatchTuplesDecoded0 = [SqlInjectionMatchTuple]()
            for structure0 in sqlInjectionMatchTuplesContainer {
                sqlInjectionMatchTuplesDecoded0?.append(structure0)
            }
        }
        sqlInjectionMatchTuples = sqlInjectionMatchTuplesDecoded0
    }
}
