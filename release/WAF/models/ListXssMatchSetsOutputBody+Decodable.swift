// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListXssMatchSetsOutputBody: Equatable {
    public let nextMarker: String?
    public let xssMatchSets: [XssMatchSetSummary]?
}

extension ListXssMatchSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextMarker = "NextMarker"
        case xssMatchSets = "XssMatchSets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let xssMatchSetsContainer = try containerValues.decodeIfPresent([XssMatchSetSummary].self, forKey: .xssMatchSets)
        var xssMatchSetsDecoded0:[XssMatchSetSummary]? = nil
        if let xssMatchSetsContainer = xssMatchSetsContainer {
            xssMatchSetsDecoded0 = [XssMatchSetSummary]()
            for structure0 in xssMatchSetsContainer {
                xssMatchSetsDecoded0?.append(structure0)
            }
        }
        xssMatchSets = xssMatchSetsDecoded0
    }
}
