// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MatchFieldType {
    case allQueryArgs
    case body
    case header
    case method
    case queryString
    case singleQueryArg
    case uri
    case sdkUnknown(String)
}

extension MatchFieldType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MatchFieldType] {
        return [
            .allQueryArgs,
            .body,
            .header,
            .method,
            .queryString,
            .singleQueryArg,
            .uri,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .allQueryArgs: return "ALL_QUERY_ARGS"
        case .body: return "BODY"
        case .header: return "HEADER"
        case .method: return "METHOD"
        case .queryString: return "QUERY_STRING"
        case .singleQueryArg: return "SINGLE_QUERY_ARG"
        case .uri: return "URI"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MatchFieldType(rawValue: rawValue) ?? MatchFieldType.sdkUnknown(rawValue)
    }
}
