// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QueueQuickConnectConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case contactFlowId = "ContactFlowId"
        case queueId = "QueueId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contactFlowId = contactFlowId {
            try encodeContainer.encode(contactFlowId, forKey: .contactFlowId)
        }
        if let queueId = queueId {
            try encodeContainer.encode(queueId, forKey: .queueId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queueIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .queueId)
        queueId = queueIdDecoded
        let contactFlowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactFlowId)
        contactFlowId = contactFlowIdDecoded
    }
}
