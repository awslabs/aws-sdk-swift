// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension KinesisFirehoseConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case firehoseArn = "FirehoseArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let firehoseArn = firehoseArn {
            try encodeContainer.encode(firehoseArn, forKey: .firehoseArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let firehoseArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firehoseArn)
        firehoseArn = firehoseArnDecoded
    }
}
