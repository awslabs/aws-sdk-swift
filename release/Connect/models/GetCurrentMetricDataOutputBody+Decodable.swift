// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCurrentMetricDataOutputBody: Equatable {
    public let nextToken: String?
    public let metricResults: [CurrentMetricResult]?
    public let dataSnapshotTime: Date?
}

extension GetCurrentMetricDataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataSnapshotTime = "DataSnapshotTime"
        case metricResults = "MetricResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let metricResultsContainer = try containerValues.decodeIfPresent([CurrentMetricResult].self, forKey: .metricResults)
        var metricResultsDecoded0:[CurrentMetricResult]? = nil
        if let metricResultsContainer = metricResultsContainer {
            metricResultsDecoded0 = [CurrentMetricResult]()
            for structure0 in metricResultsContainer {
                metricResultsDecoded0?.append(structure0)
            }
        }
        metricResults = metricResultsDecoded0
        let dataSnapshotTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .dataSnapshotTime)
        dataSnapshotTime = dataSnapshotTimeDecoded
    }
}
