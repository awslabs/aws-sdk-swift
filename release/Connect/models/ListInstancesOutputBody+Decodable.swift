// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInstancesOutputBody: Equatable {
    public let instanceSummaryList: [InstanceSummary]?
    public let nextToken: String?
}

extension ListInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceSummaryList = "InstanceSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceSummaryListContainer = try containerValues.decodeIfPresent([InstanceSummary].self, forKey: .instanceSummaryList)
        var instanceSummaryListDecoded0:[InstanceSummary]? = nil
        if let instanceSummaryListContainer = instanceSummaryListContainer {
            instanceSummaryListDecoded0 = [InstanceSummary]()
            for structure0 in instanceSummaryListContainer {
                instanceSummaryListDecoded0?.append(structure0)
            }
        }
        instanceSummaryList = instanceSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
