// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HistoricalMetricData: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case metric = "Metric"
        case value = "Value"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let metric = metric {
            try encodeContainer.encode(metric, forKey: .metric)
        }
        if let value = value {
            try encodeContainer.encode(value, forKey: .value)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricDecoded = try containerValues.decodeIfPresent(HistoricalMetric.self, forKey: .metric)
        metric = metricDecoded
        let valueDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .value)
        value = valueDecoded
    }
}
