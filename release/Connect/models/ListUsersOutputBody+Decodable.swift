// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUsersOutputBody: Equatable {
    public let userSummaryList: [UserSummary]?
    public let nextToken: String?
}

extension ListUsersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case userSummaryList = "UserSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userSummaryListContainer = try containerValues.decodeIfPresent([UserSummary].self, forKey: .userSummaryList)
        var userSummaryListDecoded0:[UserSummary]? = nil
        if let userSummaryListContainer = userSummaryListContainer {
            userSummaryListDecoded0 = [UserSummary]()
            for structure0 in userSummaryListContainer {
                userSummaryListDecoded0?.append(structure0)
            }
        }
        userSummaryList = userSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
