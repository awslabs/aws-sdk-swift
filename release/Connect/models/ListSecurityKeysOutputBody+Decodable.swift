// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecurityKeysOutputBody: Equatable {
    public let securityKeys: [SecurityKey]?
    public let nextToken: String?
}

extension ListSecurityKeysOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case securityKeys = "SecurityKeys"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let securityKeysContainer = try containerValues.decodeIfPresent([SecurityKey].self, forKey: .securityKeys)
        var securityKeysDecoded0:[SecurityKey]? = nil
        if let securityKeysContainer = securityKeysContainer {
            securityKeysDecoded0 = [SecurityKey]()
            for structure0 in securityKeysContainer {
                securityKeysDecoded0?.append(structure0)
            }
        }
        securityKeys = securityKeysDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
