// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartContactRecordingInputBody: Equatable {
    public let instanceId: String?
    public let contactId: String?
    public let initialContactId: String?
    public let voiceRecordingConfiguration: VoiceRecordingConfiguration?
}

extension StartContactRecordingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactId = "ContactId"
        case initialContactId = "InitialContactId"
        case instanceId = "InstanceId"
        case voiceRecordingConfiguration = "VoiceRecordingConfiguration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceId)
        instanceId = instanceIdDecoded
        let contactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactId)
        contactId = contactIdDecoded
        let initialContactIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .initialContactId)
        initialContactId = initialContactIdDecoded
        let voiceRecordingConfigurationDecoded = try containerValues.decodeIfPresent(VoiceRecordingConfiguration.self, forKey: .voiceRecordingConfiguration)
        voiceRecordingConfiguration = voiceRecordingConfigurationDecoded
    }
}
