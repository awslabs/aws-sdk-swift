// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserHierarchyGroupsOutputBody: Equatable {
    public let userHierarchyGroupSummaryList: [HierarchyGroupSummary]?
    public let nextToken: String?
}

extension ListUserHierarchyGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case userHierarchyGroupSummaryList = "UserHierarchyGroupSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userHierarchyGroupSummaryListContainer = try containerValues.decodeIfPresent([HierarchyGroupSummary].self, forKey: .userHierarchyGroupSummaryList)
        var userHierarchyGroupSummaryListDecoded0:[HierarchyGroupSummary]? = nil
        if let userHierarchyGroupSummaryListContainer = userHierarchyGroupSummaryListContainer {
            userHierarchyGroupSummaryListDecoded0 = [HierarchyGroupSummary]()
            for structure0 in userHierarchyGroupSummaryListContainer {
                userHierarchyGroupSummaryListDecoded0?.append(structure0)
            }
        }
        userHierarchyGroupSummaryList = userHierarchyGroupSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
