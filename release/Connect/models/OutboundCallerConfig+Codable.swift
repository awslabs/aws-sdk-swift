// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutboundCallerConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case outboundCallerIdName = "OutboundCallerIdName"
        case outboundCallerIdNumberId = "OutboundCallerIdNumberId"
        case outboundFlowId = "OutboundFlowId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let outboundCallerIdName = outboundCallerIdName {
            try encodeContainer.encode(outboundCallerIdName, forKey: .outboundCallerIdName)
        }
        if let outboundCallerIdNumberId = outboundCallerIdNumberId {
            try encodeContainer.encode(outboundCallerIdNumberId, forKey: .outboundCallerIdNumberId)
        }
        if let outboundFlowId = outboundFlowId {
            try encodeContainer.encode(outboundFlowId, forKey: .outboundFlowId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outboundCallerIdNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outboundCallerIdName)
        outboundCallerIdName = outboundCallerIdNameDecoded
        let outboundCallerIdNumberIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outboundCallerIdNumberId)
        outboundCallerIdNumberId = outboundCallerIdNumberIdDecoded
        let outboundFlowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outboundFlowId)
        outboundFlowId = outboundFlowIdDecoded
    }
}
