// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactFlowsOutputBody: Equatable {
    public let contactFlowSummaryList: [ContactFlowSummary]?
    public let nextToken: String?
}

extension ListContactFlowsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactFlowSummaryList = "ContactFlowSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactFlowSummaryListContainer = try containerValues.decodeIfPresent([ContactFlowSummary].self, forKey: .contactFlowSummaryList)
        var contactFlowSummaryListDecoded0:[ContactFlowSummary]? = nil
        if let contactFlowSummaryListContainer = contactFlowSummaryListContainer {
            contactFlowSummaryListDecoded0 = [ContactFlowSummary]()
            for structure0 in contactFlowSummaryListContainer {
                contactFlowSummaryListDecoded0?.append(structure0)
            }
        }
        contactFlowSummaryList = contactFlowSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
