// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPhoneNumbersOutputBody: Equatable {
    public let phoneNumberSummaryList: [PhoneNumberSummary]?
    public let nextToken: String?
}

extension ListPhoneNumbersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case phoneNumberSummaryList = "PhoneNumberSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let phoneNumberSummaryListContainer = try containerValues.decodeIfPresent([PhoneNumberSummary].self, forKey: .phoneNumberSummaryList)
        var phoneNumberSummaryListDecoded0:[PhoneNumberSummary]? = nil
        if let phoneNumberSummaryListContainer = phoneNumberSummaryListContainer {
            phoneNumberSummaryListDecoded0 = [PhoneNumberSummary]()
            for structure0 in phoneNumberSummaryListContainer {
                phoneNumberSummaryListDecoded0?.append(structure0)
            }
        }
        phoneNumberSummaryList = phoneNumberSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
