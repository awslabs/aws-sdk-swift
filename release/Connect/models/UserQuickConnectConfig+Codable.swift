// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UserQuickConnectConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case contactFlowId = "ContactFlowId"
        case userId = "UserId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contactFlowId = contactFlowId {
            try encodeContainer.encode(contactFlowId, forKey: .contactFlowId)
        }
        if let userId = userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userId)
        userId = userIdDecoded
        let contactFlowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactFlowId)
        contactFlowId = contactFlowIdDecoded
    }
}
