// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQueueQuickConnectsOutputBody: Equatable {
    public let nextToken: String?
    public let quickConnectSummaryList: [QuickConnectSummary]?
}

extension ListQueueQuickConnectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case quickConnectSummaryList = "QuickConnectSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let quickConnectSummaryListContainer = try containerValues.decodeIfPresent([QuickConnectSummary].self, forKey: .quickConnectSummaryList)
        var quickConnectSummaryListDecoded0:[QuickConnectSummary]? = nil
        if let quickConnectSummaryListContainer = quickConnectSummaryListContainer {
            quickConnectSummaryListDecoded0 = [QuickConnectSummary]()
            for structure0 in quickConnectSummaryListContainer {
                quickConnectSummaryListDecoded0?.append(structure0)
            }
        }
        quickConnectSummaryList = quickConnectSummaryListDecoded0
    }
}
