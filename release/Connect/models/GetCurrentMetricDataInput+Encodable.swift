// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetCurrentMetricDataInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case currentMetrics = "CurrentMetrics"
        case filters = "Filters"
        case groupings = "Groupings"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let currentMetrics = currentMetrics {
            var currentMetricsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .currentMetrics)
            for currentmetrics0 in currentMetrics {
                try currentMetricsContainer.encode(currentmetrics0)
            }
        }
        if let filters = filters {
            try encodeContainer.encode(filters, forKey: .filters)
        }
        if let groupings = groupings {
            var groupingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groupings)
            for groupings0 in groupings {
                try groupingsContainer.encode(groupings0.rawValue)
            }
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
