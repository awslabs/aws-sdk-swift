// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetMetricDataInput: Equatable {
    /// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the
    ///    retrieval of historical metrics data. The time must be specified using an interval of 5 minutes,
    ///    such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p>
    ///          <p>The time range between the start and end time must be less than 24 hours.</p>
    public let endTime: Date?
    /// <p>The queues, up to 100, or channels, to use to filter the metrics returned. Metric data is
    ///    retrieved only for the resources associated with the queues or channels included in the filter.
    ///    You can include both queue IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels are supported.</p>
    ///          <note>
    ///             <p>To filter by <code>Queues</code>, enter the queue
    ///     ID/ARN, not the name of the queue.</p>
    ///          </note>
    public let filters: Filters?
    /// <p>The grouping applied to the metrics returned. For example, when results are grouped by
    ///    queue, the metrics returned are grouped by queue. The values returned apply to the metrics for
    ///    each queue rather than aggregated for all queues.</p>
    ///
    ///          <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>
    public let groupings: [Grouping]?
    /// <p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The
    ///    following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator
    ///    Guide</i>.</p>
    ///          <dl>
    ///             <dt>ABANDON_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>AFTER_CONTACT_WORK_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>API_CONTACTS_HANDLED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CALLBACK_CONTACTS_HANDLED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_ABANDONED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_CONSULTED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_HANDLED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_HANDLED_INCOMING</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_HANDLED_OUTBOUND</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_HOLD_ABANDONS</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_MISSED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_QUEUED</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_TRANSFERRED_IN</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_TRANSFERRED_OUT</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt>
    ///             <dd>
    ///                <p>Unit: COUNT</p>
    ///                <p>Statistic: SUM</p>
    ///             </dd>
    ///             <dt>HANDLE_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>HOLD_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>INTERACTION_AND_HOLD_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>INTERACTION_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>OCCUPANCY</dt>
    ///             <dd>
    ///                <p>Unit: PERCENT</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>QUEUE_ANSWER_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: AVG</p>
    ///             </dd>
    ///             <dt>QUEUED_TIME</dt>
    ///             <dd>
    ///                <p>Unit: SECONDS</p>
    ///                <p>Statistic: MAX</p>
    ///             </dd>
    ///             <dt>SERVICE_LEVEL</dt>
    ///             <dd>
    ///                <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p>
    ///                <p>Unit: PERCENT</p>
    ///                <p>Statistic: AVG</p>
    ///                <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800
    ///       (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for
    ///       "Less than"). </p>
    ///             </dd>
    ///          </dl>
    public let historicalMetrics: [HistoricalMetric]?
    /// <p>The identifier of the Amazon Connect instance.</p>
    public let instanceId: String?
    /// <p>The maximum number of results to return per page.</p>
    public let maxResults: Int
    /// <p>The token for the next set of results. Use the value returned in the previous
    /// response in the next request to retrieve the next set of results.</p>
    public let nextToken: String?
    /// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the
    ///    retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes,
    ///    such as 10:05, 10:10, 10:15.</p>
    ///          <p>The start time cannot be earlier than 24 hours before the time of the request. Historical
    ///    metrics are available only for 24 hours.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        filters: Filters? = nil,
        groupings: [Grouping]? = nil,
        historicalMetrics: [HistoricalMetric]? = nil,
        instanceId: String? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.filters = filters
        self.groupings = groupings
        self.historicalMetrics = historicalMetrics
        self.instanceId = instanceId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.startTime = startTime
    }
}
