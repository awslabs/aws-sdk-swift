// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The historical metric names.</p>
public enum HistoricalMetricName {
    case abandonTime
    case afterContactWorkTime
    case apiContactsHandled
    case callbackContactsHandled
    case contactsAbandoned
    case contactsAgentHungUpFirst
    case contactsConsulted
    case contactsHandled
    case contactsHandledIncoming
    case contactsHandledOutbound
    case contactsHoldAbandons
    case contactsMissed
    case contactsQueued
    case contactsTransferredIn
    case contactsTransferredInFromQueue
    case contactsTransferredOut
    case contactsTransferredOutFromQueue
    case handleTime
    case holdTime
    case interactionAndHoldTime
    case interactionTime
    case occupancy
    case queuedTime
    case queueAnswerTime
    case serviceLevel
    case sdkUnknown(String)
}

extension HistoricalMetricName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HistoricalMetricName] {
        return [
            .abandonTime,
            .afterContactWorkTime,
            .apiContactsHandled,
            .callbackContactsHandled,
            .contactsAbandoned,
            .contactsAgentHungUpFirst,
            .contactsConsulted,
            .contactsHandled,
            .contactsHandledIncoming,
            .contactsHandledOutbound,
            .contactsHoldAbandons,
            .contactsMissed,
            .contactsQueued,
            .contactsTransferredIn,
            .contactsTransferredInFromQueue,
            .contactsTransferredOut,
            .contactsTransferredOutFromQueue,
            .handleTime,
            .holdTime,
            .interactionAndHoldTime,
            .interactionTime,
            .occupancy,
            .queuedTime,
            .queueAnswerTime,
            .serviceLevel,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .abandonTime: return "ABANDON_TIME"
        case .afterContactWorkTime: return "AFTER_CONTACT_WORK_TIME"
        case .apiContactsHandled: return "API_CONTACTS_HANDLED"
        case .callbackContactsHandled: return "CALLBACK_CONTACTS_HANDLED"
        case .contactsAbandoned: return "CONTACTS_ABANDONED"
        case .contactsAgentHungUpFirst: return "CONTACTS_AGENT_HUNG_UP_FIRST"
        case .contactsConsulted: return "CONTACTS_CONSULTED"
        case .contactsHandled: return "CONTACTS_HANDLED"
        case .contactsHandledIncoming: return "CONTACTS_HANDLED_INCOMING"
        case .contactsHandledOutbound: return "CONTACTS_HANDLED_OUTBOUND"
        case .contactsHoldAbandons: return "CONTACTS_HOLD_ABANDONS"
        case .contactsMissed: return "CONTACTS_MISSED"
        case .contactsQueued: return "CONTACTS_QUEUED"
        case .contactsTransferredIn: return "CONTACTS_TRANSFERRED_IN"
        case .contactsTransferredInFromQueue: return "CONTACTS_TRANSFERRED_IN_FROM_QUEUE"
        case .contactsTransferredOut: return "CONTACTS_TRANSFERRED_OUT"
        case .contactsTransferredOutFromQueue: return "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE"
        case .handleTime: return "HANDLE_TIME"
        case .holdTime: return "HOLD_TIME"
        case .interactionAndHoldTime: return "INTERACTION_AND_HOLD_TIME"
        case .interactionTime: return "INTERACTION_TIME"
        case .occupancy: return "OCCUPANCY"
        case .queuedTime: return "QUEUED_TIME"
        case .queueAnswerTime: return "QUEUE_ANSWER_TIME"
        case .serviceLevel: return "SERVICE_LEVEL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HistoricalMetricName(rawValue: rawValue) ?? HistoricalMetricName.sdkUnknown(rawValue)
    }
}
