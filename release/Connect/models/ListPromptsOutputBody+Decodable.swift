// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPromptsOutputBody: Equatable {
    public let promptSummaryList: [PromptSummary]?
    public let nextToken: String?
}

extension ListPromptsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case promptSummaryList = "PromptSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let promptSummaryListContainer = try containerValues.decodeIfPresent([PromptSummary].self, forKey: .promptSummaryList)
        var promptSummaryListDecoded0:[PromptSummary]? = nil
        if let promptSummaryListContainer = promptSummaryListContainer {
            promptSummaryListDecoded0 = [PromptSummary]()
            for structure0 in promptSummaryListContainer {
                promptSummaryListDecoded0?.append(structure0)
            }
        }
        promptSummaryList = promptSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
