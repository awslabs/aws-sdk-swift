// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLexBotsOutputBody: Equatable {
    public let lexBots: [LexBot]?
    public let nextToken: String?
}

extension ListLexBotsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lexBots = "LexBots"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lexBotsContainer = try containerValues.decodeIfPresent([LexBot].self, forKey: .lexBots)
        var lexBotsDecoded0:[LexBot]? = nil
        if let lexBotsContainer = lexBotsContainer {
            lexBotsDecoded0 = [LexBot]()
            for structure0 in lexBotsContainer {
                lexBotsDecoded0?.append(structure0)
            }
        }
        lexBots = lexBotsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
