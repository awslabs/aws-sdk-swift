// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The current status of the search domain.</p>
public struct DomainStatus: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the search domain.  See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html" target="_blank">Identifiers for IAM Entities</a> in <i>Using AWS Identity and Access Management</i> for more information.</p>
    public let aRN: String?
    /// <p>True if the search domain is created. It can take several minutes to initialize a domain when <a>CreateDomain</a> is called. Newly created search domains are returned from <a>DescribeDomains</a> with a false value for Created until domain creation is complete.</p>
    public let created: Bool?
    /// <p>True if the search domain has been deleted.  The system must clean up resources dedicated to the search domain when <a>DeleteDomain</a> is called.  Newly deleted search domains are returned from <a>DescribeDomains</a> with a true value for IsDeleted for several minutes until resource cleanup is complete.</p>
    public let deleted: Bool?
    /// <p>The service endpoint for updating documents in a search domain.</p>
    public let docService: ServiceEndpoint?
    /// <p>An internally generated unique identifier for a domain.</p>
    public let domainId: String?
    /// <p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p>
    public let domainName: String?
    public let limits: Limits?
    /// <p>True if processing is being done to activate the current domain configuration.</p>
    public let processing: Bool?
    /// <p>True if <a>IndexDocuments</a> needs to be called to activate the current domain configuration.</p>
    public let requiresIndexDocuments: Bool?
    /// <p>The number of search instances that are available to process search requests.</p>
    public let searchInstanceCount: Int
    /// <p>The instance type that is being used to process search requests.</p>
    public let searchInstanceType: String?
    /// <p>The number of partitions across which the search index is spread.</p>
    public let searchPartitionCount: Int
    /// <p>The service endpoint for requesting search results from a search domain.</p>
    public let searchService: ServiceEndpoint?

    public init (
        aRN: String? = nil,
        created: Bool? = nil,
        deleted: Bool? = nil,
        docService: ServiceEndpoint? = nil,
        domainId: String? = nil,
        domainName: String? = nil,
        limits: Limits? = nil,
        processing: Bool? = nil,
        requiresIndexDocuments: Bool? = nil,
        searchInstanceCount: Int = 0,
        searchInstanceType: String? = nil,
        searchPartitionCount: Int = 0,
        searchService: ServiceEndpoint? = nil
    )
    {
        self.aRN = aRN
        self.created = created
        self.deleted = deleted
        self.docService = docService
        self.domainId = domainId
        self.domainName = domainName
        self.limits = limits
        self.processing = processing
        self.requiresIndexDocuments = requiresIndexDocuments
        self.searchInstanceCount = searchInstanceCount
        self.searchInstanceType = searchInstanceType
        self.searchPartitionCount = searchPartitionCount
        self.searchService = searchService
    }
}
