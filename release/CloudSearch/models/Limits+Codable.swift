// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Limits: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maximumPartitionCount = "MaximumPartitionCount"
        case maximumReplicationCount = "MaximumReplicationCount"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if maximumPartitionCount != 0 {
            try container.encode(maximumPartitionCount, forKey: Key("MaximumPartitionCount"))
        }
        if maximumReplicationCount != 0 {
            try container.encode(maximumReplicationCount, forKey: Key("MaximumReplicationCount"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maximumReplicationCountDecoded = try containerValues.decode(Int.self, forKey: .maximumReplicationCount)
        maximumReplicationCount = maximumReplicationCountDecoded
        let maximumPartitionCountDecoded = try containerValues.decode(Int.self, forKey: .maximumPartitionCount)
        maximumPartitionCount = maximumPartitionCountDecoded
    }
}
