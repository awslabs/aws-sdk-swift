// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DefineExpressionOutputBody: Equatable {
    public let expression: ExpressionStatus?
}

extension DefineExpressionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case expression = "Expression"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DefineExpressionResult"))
        let expressionDecoded = try containerValues.decodeIfPresent(ExpressionStatus.self, forKey: .expression)
        expression = expressionDecoded
    }
}
