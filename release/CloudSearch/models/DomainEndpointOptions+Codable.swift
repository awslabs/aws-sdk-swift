// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DomainEndpointOptions: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case enforceHTTPS = "EnforceHTTPS"
        case tLSSecurityPolicy = "TLSSecurityPolicy"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let enforceHTTPS = enforceHTTPS {
            try container.encode(enforceHTTPS, forKey: Key("EnforceHTTPS"))
        }
        if let tLSSecurityPolicy = tLSSecurityPolicy {
            try container.encode(tLSSecurityPolicy, forKey: Key("TLSSecurityPolicy"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enforceHTTPSDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enforceHTTPS)
        enforceHTTPS = enforceHTTPSDecoded
        let tLSSecurityPolicyDecoded = try containerValues.decodeIfPresent(TLSSecurityPolicy.self, forKey: .tLSSecurityPolicy)
        tLSSecurityPolicy = tLSSecurityPolicyDecoded
    }
}
