// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAddressesOutputBody: Equatable {
    public let addresses: [Address]?
    public let nextToken: String?
}

extension DescribeAddressesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addresses = "Addresses"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addressesContainer = try containerValues.decodeIfPresent([Address].self, forKey: .addresses)
        var addressesDecoded0:[Address]? = nil
        if let addressesContainer = addressesContainer {
            addressesDecoded0 = [Address]()
            for structure0 in addressesContainer {
                addressesDecoded0?.append(structure0)
            }
        }
        addresses = addressesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
