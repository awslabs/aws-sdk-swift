// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ShippingDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case inboundShipment = "InboundShipment"
        case outboundShipment = "OutboundShipment"
        case shippingOption = "ShippingOption"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inboundShipment = inboundShipment {
            try encodeContainer.encode(inboundShipment, forKey: .inboundShipment)
        }
        if let outboundShipment = outboundShipment {
            try encodeContainer.encode(outboundShipment, forKey: .outboundShipment)
        }
        if let shippingOption = shippingOption {
            try encodeContainer.encode(shippingOption.rawValue, forKey: .shippingOption)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shippingOptionDecoded = try containerValues.decodeIfPresent(ShippingOption.self, forKey: .shippingOption)
        shippingOption = shippingOptionDecoded
        let inboundShipmentDecoded = try containerValues.decodeIfPresent(Shipment.self, forKey: .inboundShipment)
        inboundShipment = inboundShipmentDecoded
        let outboundShipmentDecoded = try containerValues.decodeIfPresent(Shipment.self, forKey: .outboundShipment)
        outboundShipment = outboundShipmentDecoded
    }
}
