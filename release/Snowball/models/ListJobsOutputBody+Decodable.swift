// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListJobsOutputBody: Equatable {
    public let jobListEntries: [JobListEntry]?
    public let nextToken: String?
}

extension ListJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobListEntries = "JobListEntries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobListEntriesContainer = try containerValues.decodeIfPresent([JobListEntry].self, forKey: .jobListEntries)
        var jobListEntriesDecoded0:[JobListEntry]? = nil
        if let jobListEntriesContainer = jobListEntriesContainer {
            jobListEntriesDecoded0 = [JobListEntry]()
            for structure0 in jobListEntriesContainer {
                jobListEntriesDecoded0?.append(structure0)
            }
        }
        jobListEntries = jobListEntriesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
