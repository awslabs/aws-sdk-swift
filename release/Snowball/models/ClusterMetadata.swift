// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains metadata about a specific cluster.</p>
public struct ClusterMetadata: Equatable {
    /// <p>The automatically generated ID for a specific address.</p>
    public let addressId: String?
    /// <p>The automatically generated ID for a cluster.</p>
    public let clusterId: String?
    /// <p>The current status of the cluster.</p>
    public let clusterState: ClusterState?
    /// <p>The creation date for this cluster.</p>
    public let creationDate: Date?
    /// <p>The optional description of the cluster.</p>
    public let description: String?
    /// <p>The ID of the address that you want a cluster shipped to, after it will be
    ///       shipped to its primary address. This field is not supported in most regions.</p>
    public let forwardingAddressId: String?
    /// <p>The type of job for this cluster. Currently, the only job type supported for clusters
    ///       is <code>LOCAL_USE</code>.</p>
    public let jobType: JobType?
    /// <p>The <code>KmsKeyARN</code> Amazon Resource Name (ARN) associated with this cluster.
    ///       This ARN was created using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in AWS Key
    ///       Management Service (AWS KMS).</p>
    public let kmsKeyARN: String?
    /// <p>The Amazon Simple Notification Service (Amazon SNS) notification settings for this
    ///       cluster.</p>
    public let notification: Notification?
    /// <p>The arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.</p>
    public let resources: JobResource?
    /// <p>The role ARN associated with this cluster. This ARN was created using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a>
    ///       API action in AWS Identity and Access Management (IAM).</p>
    public let roleARN: String?
    /// <p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon
    ///       you'll get each device, rather it represents how quickly each device moves to
    ///       its destination while in transit. Regional shipping speeds are as follows:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>In Australia, you have access to express shipping. Typically, devices shipped
    ///           express are delivered in about a day.</p>
    ///             </li>
    ///             <li>
    ///                <p>In the European Union (EU), you have access to express shipping. Typically,
    ///           Snow devices shipped express are delivered in about a day. In addition, most countries
    ///           in the EU have access to standard shipping, which typically takes less than a week, one
    ///           way.</p>
    ///             </li>
    ///             <li>
    ///                <p>In India, Snow devices are delivered in one to seven days.</p>
    ///             </li>
    ///             <li>
    ///                <p>In the US, you have access to one-day shipping and two-day shipping.</p>
    ///             </li>
    ///          </ul>
    public let shippingOption: ShippingOption?
    /// <p>The type of AWS Snow device to use for this cluster.
    ///       </p>
    ///          <note>
    ///             <p>For cluster jobs, AWS Snow Family currently supports only the <code>EDGE</code> device type.</p>
    ///          </note>
    public let snowballType: SnowballType?
    /// <p>The tax documents required in your AWS Region.</p>
    public let taxDocuments: TaxDocuments?

    public init (
        addressId: String? = nil,
        clusterId: String? = nil,
        clusterState: ClusterState? = nil,
        creationDate: Date? = nil,
        description: String? = nil,
        forwardingAddressId: String? = nil,
        jobType: JobType? = nil,
        kmsKeyARN: String? = nil,
        notification: Notification? = nil,
        resources: JobResource? = nil,
        roleARN: String? = nil,
        shippingOption: ShippingOption? = nil,
        snowballType: SnowballType? = nil,
        taxDocuments: TaxDocuments? = nil
    )
    {
        self.addressId = addressId
        self.clusterId = clusterId
        self.clusterState = clusterState
        self.creationDate = creationDate
        self.description = description
        self.forwardingAddressId = forwardingAddressId
        self.jobType = jobType
        self.kmsKeyARN = kmsKeyARN
        self.notification = notification
        self.resources = resources
        self.roleARN = roleARN
        self.shippingOption = shippingOption
        self.snowballType = snowballType
        self.taxDocuments = taxDocuments
    }
}
