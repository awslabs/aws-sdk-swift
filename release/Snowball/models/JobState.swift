// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum JobState {
    case cancelled
    case complete
    case inProgress
    case inTransitToAws
    case inTransitToCustomer
    case listing
    case new
    case pending
    case preparingAppliance
    case preparingShipment
    case withAws
    case withAwsSortingFacility
    case withCustomer
    case sdkUnknown(String)
}

extension JobState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [JobState] {
        return [
            .cancelled,
            .complete,
            .inProgress,
            .inTransitToAws,
            .inTransitToCustomer,
            .listing,
            .new,
            .pending,
            .preparingAppliance,
            .preparingShipment,
            .withAws,
            .withAwsSortingFacility,
            .withCustomer,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cancelled: return "Cancelled"
        case .complete: return "Complete"
        case .inProgress: return "InProgress"
        case .inTransitToAws: return "InTransitToAWS"
        case .inTransitToCustomer: return "InTransitToCustomer"
        case .listing: return "Listing"
        case .new: return "New"
        case .pending: return "Pending"
        case .preparingAppliance: return "PreparingAppliance"
        case .preparingShipment: return "PreparingShipment"
        case .withAws: return "WithAWS"
        case .withAwsSortingFacility: return "WithAWSSortingFacility"
        case .withCustomer: return "WithCustomer"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = JobState(rawValue: rawValue) ?? JobState.sdkUnknown(rawValue)
    }
}
