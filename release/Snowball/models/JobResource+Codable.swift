// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobResource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ec2AmiResources = "Ec2AmiResources"
        case lambdaResources = "LambdaResources"
        case s3Resources = "S3Resources"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ec2AmiResources = ec2AmiResources {
            var ec2AmiResourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ec2AmiResources)
            for ec2amiresourcelist0 in ec2AmiResources {
                try ec2AmiResourcesContainer.encode(ec2amiresourcelist0)
            }
        }
        if let lambdaResources = lambdaResources {
            var lambdaResourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .lambdaResources)
            for lambdaresourcelist0 in lambdaResources {
                try lambdaResourcesContainer.encode(lambdaresourcelist0)
            }
        }
        if let s3Resources = s3Resources {
            var s3ResourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .s3Resources)
            for s3resourcelist0 in s3Resources {
                try s3ResourcesContainer.encode(s3resourcelist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3ResourcesContainer = try containerValues.decodeIfPresent([S3Resource].self, forKey: .s3Resources)
        var s3ResourcesDecoded0:[S3Resource]? = nil
        if let s3ResourcesContainer = s3ResourcesContainer {
            s3ResourcesDecoded0 = [S3Resource]()
            for structure0 in s3ResourcesContainer {
                s3ResourcesDecoded0?.append(structure0)
            }
        }
        s3Resources = s3ResourcesDecoded0
        let lambdaResourcesContainer = try containerValues.decodeIfPresent([LambdaResource].self, forKey: .lambdaResources)
        var lambdaResourcesDecoded0:[LambdaResource]? = nil
        if let lambdaResourcesContainer = lambdaResourcesContainer {
            lambdaResourcesDecoded0 = [LambdaResource]()
            for structure0 in lambdaResourcesContainer {
                lambdaResourcesDecoded0?.append(structure0)
            }
        }
        lambdaResources = lambdaResourcesDecoded0
        let ec2AmiResourcesContainer = try containerValues.decodeIfPresent([Ec2AmiResource].self, forKey: .ec2AmiResources)
        var ec2AmiResourcesDecoded0:[Ec2AmiResource]? = nil
        if let ec2AmiResourcesContainer = ec2AmiResourcesContainer {
            ec2AmiResourcesDecoded0 = [Ec2AmiResource]()
            for structure0 in ec2AmiResourcesContainer {
                ec2AmiResourcesDecoded0?.append(structure0)
            }
        }
        ec2AmiResources = ec2AmiResourcesDecoded0
    }
}
