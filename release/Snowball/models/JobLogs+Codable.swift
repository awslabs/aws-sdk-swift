// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JobLogs: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case jobCompletionReportURI = "JobCompletionReportURI"
        case jobFailureLogURI = "JobFailureLogURI"
        case jobSuccessLogURI = "JobSuccessLogURI"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let jobCompletionReportURI = jobCompletionReportURI {
            try encodeContainer.encode(jobCompletionReportURI, forKey: .jobCompletionReportURI)
        }
        if let jobFailureLogURI = jobFailureLogURI {
            try encodeContainer.encode(jobFailureLogURI, forKey: .jobFailureLogURI)
        }
        if let jobSuccessLogURI = jobSuccessLogURI {
            try encodeContainer.encode(jobSuccessLogURI, forKey: .jobSuccessLogURI)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobCompletionReportURIDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobCompletionReportURI)
        jobCompletionReportURI = jobCompletionReportURIDecoded
        let jobSuccessLogURIDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobSuccessLogURI)
        jobSuccessLogURI = jobSuccessLogURIDecoded
        let jobFailureLogURIDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobFailureLogURI)
        jobFailureLogURI = jobFailureLogURIDecoded
    }
}
