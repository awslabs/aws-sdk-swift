// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterListEntry: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clusterId = "ClusterId"
        case clusterState = "ClusterState"
        case creationDate = "CreationDate"
        case description = "Description"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterId = clusterId {
            try encodeContainer.encode(clusterId, forKey: .clusterId)
        }
        if let clusterState = clusterState {
            try encodeContainer.encode(clusterState.rawValue, forKey: .clusterState)
        }
        if let creationDate = creationDate {
            try encodeContainer.encode(creationDate.timeIntervalSince1970, forKey: .creationDate)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterId)
        clusterId = clusterIdDecoded
        let clusterStateDecoded = try containerValues.decodeIfPresent(ClusterState.self, forKey: .clusterState)
        clusterState = clusterStateDecoded
        let creationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDate)
        creationDate = creationDateDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
