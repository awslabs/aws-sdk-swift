// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateLongTermPricingInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isLongTermPricingAutoRenew = "IsLongTermPricingAutoRenew"
        case longTermPricingType = "LongTermPricingType"
        case snowballType = "SnowballType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isLongTermPricingAutoRenew = isLongTermPricingAutoRenew {
            try encodeContainer.encode(isLongTermPricingAutoRenew, forKey: .isLongTermPricingAutoRenew)
        }
        if let longTermPricingType = longTermPricingType {
            try encodeContainer.encode(longTermPricingType.rawValue, forKey: .longTermPricingType)
        }
        if let snowballType = snowballType {
            try encodeContainer.encode(snowballType.rawValue, forKey: .snowballType)
        }
    }
}
