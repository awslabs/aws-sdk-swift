// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3Resource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bucketArn = "BucketArn"
        case keyRange = "KeyRange"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let bucketArn = bucketArn {
            try encodeContainer.encode(bucketArn, forKey: .bucketArn)
        }
        if let keyRange = keyRange {
            try encodeContainer.encode(keyRange, forKey: .keyRange)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketArn)
        bucketArn = bucketArnDecoded
        let keyRangeDecoded = try containerValues.decodeIfPresent(KeyRange.self, forKey: .keyRange)
        keyRange = keyRangeDecoded
    }
}
