// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTransitGatewayRegistrationsOutputBody: Equatable {
    public let transitGatewayRegistrations: [TransitGatewayRegistration]?
    public let nextToken: String?
}

extension GetTransitGatewayRegistrationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case transitGatewayRegistrations = "TransitGatewayRegistrations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayRegistrationsContainer = try containerValues.decodeIfPresent([TransitGatewayRegistration].self, forKey: .transitGatewayRegistrations)
        var transitGatewayRegistrationsDecoded0:[TransitGatewayRegistration]? = nil
        if let transitGatewayRegistrationsContainer = transitGatewayRegistrationsContainer {
            transitGatewayRegistrationsDecoded0 = [TransitGatewayRegistration]()
            for structure0 in transitGatewayRegistrationsContainer {
                transitGatewayRegistrationsDecoded0?.append(structure0)
            }
        }
        transitGatewayRegistrations = transitGatewayRegistrationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
