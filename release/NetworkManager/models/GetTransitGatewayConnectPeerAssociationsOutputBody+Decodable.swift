// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTransitGatewayConnectPeerAssociationsOutputBody: Equatable {
    public let transitGatewayConnectPeerAssociations: [TransitGatewayConnectPeerAssociation]?
    public let nextToken: String?
}

extension GetTransitGatewayConnectPeerAssociationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case transitGatewayConnectPeerAssociations = "TransitGatewayConnectPeerAssociations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transitGatewayConnectPeerAssociationsContainer = try containerValues.decodeIfPresent([TransitGatewayConnectPeerAssociation].self, forKey: .transitGatewayConnectPeerAssociations)
        var transitGatewayConnectPeerAssociationsDecoded0:[TransitGatewayConnectPeerAssociation]? = nil
        if let transitGatewayConnectPeerAssociationsContainer = transitGatewayConnectPeerAssociationsContainer {
            transitGatewayConnectPeerAssociationsDecoded0 = [TransitGatewayConnectPeerAssociation]()
            for structure0 in transitGatewayConnectPeerAssociationsContainer {
                transitGatewayConnectPeerAssociationsDecoded0?.append(structure0)
            }
        }
        transitGatewayConnectPeerAssociations = transitGatewayConnectPeerAssociationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
