// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLinkAssociationsOutputBody: Equatable {
    public let linkAssociations: [LinkAssociation]?
    public let nextToken: String?
}

extension GetLinkAssociationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case linkAssociations = "LinkAssociations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let linkAssociationsContainer = try containerValues.decodeIfPresent([LinkAssociation].self, forKey: .linkAssociations)
        var linkAssociationsDecoded0:[LinkAssociation]? = nil
        if let linkAssociationsContainer = linkAssociationsContainer {
            linkAssociationsDecoded0 = [LinkAssociation]()
            for structure0 in linkAssociationsContainer {
                linkAssociationsDecoded0?.append(structure0)
            }
        }
        linkAssociations = linkAssociationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
