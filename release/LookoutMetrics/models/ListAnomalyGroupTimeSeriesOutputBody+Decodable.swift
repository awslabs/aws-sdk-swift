// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAnomalyGroupTimeSeriesOutputBody: Equatable {
    public let anomalyGroupId: String?
    public let metricName: String?
    public let timestampList: [String]?
    public let nextToken: String?
    public let timeSeriesList: [TimeSeries]?
}

extension ListAnomalyGroupTimeSeriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalyGroupId = "AnomalyGroupId"
        case metricName = "MetricName"
        case nextToken = "NextToken"
        case timeSeriesList = "TimeSeriesList"
        case timestampList = "TimestampList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .anomalyGroupId)
        anomalyGroupId = anomalyGroupIdDecoded
        let metricNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .metricName)
        metricName = metricNameDecoded
        let timestampListContainer = try containerValues.decodeIfPresent([String].self, forKey: .timestampList)
        var timestampListDecoded0:[String]? = nil
        if let timestampListContainer = timestampListContainer {
            timestampListDecoded0 = [String]()
            for string0 in timestampListContainer {
                timestampListDecoded0?.append(string0)
            }
        }
        timestampList = timestampListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let timeSeriesListContainer = try containerValues.decodeIfPresent([TimeSeries].self, forKey: .timeSeriesList)
        var timeSeriesListDecoded0:[TimeSeries]? = nil
        if let timeSeriesListContainer = timeSeriesListContainer {
            timeSeriesListDecoded0 = [TimeSeries]()
            for structure0 in timeSeriesListContainer {
                timeSeriesListDecoded0?.append(structure0)
            }
        }
        timeSeriesList = timeSeriesListDecoded0
    }
}
