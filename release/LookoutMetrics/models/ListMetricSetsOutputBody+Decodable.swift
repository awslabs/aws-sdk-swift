// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMetricSetsOutputBody: Equatable {
    public let metricSetSummaryList: [MetricSetSummary]?
    public let nextToken: String?
}

extension ListMetricSetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metricSetSummaryList = "MetricSetSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricSetSummaryListContainer = try containerValues.decodeIfPresent([MetricSetSummary].self, forKey: .metricSetSummaryList)
        var metricSetSummaryListDecoded0:[MetricSetSummary]? = nil
        if let metricSetSummaryListContainer = metricSetSummaryListContainer {
            metricSetSummaryListDecoded0 = [MetricSetSummary]()
            for structure0 in metricSetSummaryListContainer {
                metricSetSummaryListDecoded0?.append(structure0)
            }
        }
        metricSetSummaryList = metricSetSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
