// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateMetricSetInput: Equatable {
    /// <p>The ARN of the anomaly detector that will use the dataset.</p>
    public let anomalyDetectorArn: String?
    /// <p>A list of the fields you want to treat as dimensions.</p>
    public let dimensionList: [String]?
    /// <p>A list of metrics that the dataset will contain.</p>
    public let metricList: [Metric]?
    /// <p>A description of the dataset you are creating.</p>
    public let metricSetDescription: String?
    /// <p>The frequency with which the source data will be analyzed for anomalies.</p>
    public let metricSetFrequency: Frequency?
    /// <p>The name of the dataset.</p>
    public let metricSetName: String?
    /// <p>Contains information about how the source data should be interpreted.</p>
    public let metricSource: MetricSource?
    /// <p>After an interval ends, the amount of time that the detector waits before importing data.</p>
    public let offset: Int
    /// <p>A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the dataset.</p>
    public let tags: [String:String]?
    /// <p>Contains information about the column used for tracking time in your source data.</p>
    public let timestampColumn: TimestampColumn?
    /// <p>The time zone in which your source data was recorded.</p>
    public let timezone: String?

    public init (
        anomalyDetectorArn: String? = nil,
        dimensionList: [String]? = nil,
        metricList: [Metric]? = nil,
        metricSetDescription: String? = nil,
        metricSetFrequency: Frequency? = nil,
        metricSetName: String? = nil,
        metricSource: MetricSource? = nil,
        offset: Int = 0,
        tags: [String:String]? = nil,
        timestampColumn: TimestampColumn? = nil,
        timezone: String? = nil
    )
    {
        self.anomalyDetectorArn = anomalyDetectorArn
        self.dimensionList = dimensionList
        self.metricList = metricList
        self.metricSetDescription = metricSetDescription
        self.metricSetFrequency = metricSetFrequency
        self.metricSetName = metricSetName
        self.metricSource = metricSource
        self.offset = offset
        self.tags = tags
        self.timestampColumn = timestampColumn
        self.timezone = timezone
    }
}
