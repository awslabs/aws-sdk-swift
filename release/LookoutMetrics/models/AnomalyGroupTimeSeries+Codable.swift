// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnomalyGroupTimeSeries: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case anomalyGroupId = "AnomalyGroupId"
        case timeSeriesId = "TimeSeriesId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let anomalyGroupId = anomalyGroupId {
            try encodeContainer.encode(anomalyGroupId, forKey: .anomalyGroupId)
        }
        if let timeSeriesId = timeSeriesId {
            try encodeContainer.encode(timeSeriesId, forKey: .timeSeriesId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .anomalyGroupId)
        anomalyGroupId = anomalyGroupIdDecoded
        let timeSeriesIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .timeSeriesId)
        timeSeriesId = timeSeriesIdDecoded
    }
}
