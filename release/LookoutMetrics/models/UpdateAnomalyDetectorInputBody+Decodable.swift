// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAnomalyDetectorInputBody: Equatable {
    public let anomalyDetectorArn: String?
    public let kmsKeyArn: String?
    public let anomalyDetectorDescription: String?
    public let anomalyDetectorConfig: AnomalyDetectorConfig?
}

extension UpdateAnomalyDetectorInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalyDetectorArn = "AnomalyDetectorArn"
        case anomalyDetectorConfig = "AnomalyDetectorConfig"
        case anomalyDetectorDescription = "AnomalyDetectorDescription"
        case kmsKeyArn = "KmsKeyArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyDetectorArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .anomalyDetectorArn)
        anomalyDetectorArn = anomalyDetectorArnDecoded
        let kmsKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyArn)
        kmsKeyArn = kmsKeyArnDecoded
        let anomalyDetectorDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .anomalyDetectorDescription)
        anomalyDetectorDescription = anomalyDetectorDescriptionDecoded
        let anomalyDetectorConfigDecoded = try containerValues.decodeIfPresent(AnomalyDetectorConfig.self, forKey: .anomalyDetectorConfig)
        anomalyDetectorConfig = anomalyDetectorConfigDecoded
    }
}
