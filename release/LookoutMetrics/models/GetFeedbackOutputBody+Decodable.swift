// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFeedbackOutputBody: Equatable {
    public let anomalyGroupTimeSeriesFeedback: [TimeSeriesFeedback]?
    public let nextToken: String?
}

extension GetFeedbackOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalyGroupTimeSeriesFeedback = "AnomalyGroupTimeSeriesFeedback"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyGroupTimeSeriesFeedbackContainer = try containerValues.decodeIfPresent([TimeSeriesFeedback].self, forKey: .anomalyGroupTimeSeriesFeedback)
        var anomalyGroupTimeSeriesFeedbackDecoded0:[TimeSeriesFeedback]? = nil
        if let anomalyGroupTimeSeriesFeedbackContainer = anomalyGroupTimeSeriesFeedbackContainer {
            anomalyGroupTimeSeriesFeedbackDecoded0 = [TimeSeriesFeedback]()
            for structure0 in anomalyGroupTimeSeriesFeedbackContainer {
                anomalyGroupTimeSeriesFeedbackDecoded0?.append(structure0)
            }
        }
        anomalyGroupTimeSeriesFeedback = anomalyGroupTimeSeriesFeedbackDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
