// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlertsOutputBody: Equatable {
    public let alertSummaryList: [AlertSummary]?
    public let nextToken: String?
}

extension ListAlertsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alertSummaryList = "AlertSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alertSummaryListContainer = try containerValues.decodeIfPresent([AlertSummary].self, forKey: .alertSummaryList)
        var alertSummaryListDecoded0:[AlertSummary]? = nil
        if let alertSummaryListContainer = alertSummaryListContainer {
            alertSummaryListDecoded0 = [AlertSummary]()
            for structure0 in alertSummaryListContainer {
                alertSummaryListDecoded0?.append(structure0)
            }
        }
        alertSummaryList = alertSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
