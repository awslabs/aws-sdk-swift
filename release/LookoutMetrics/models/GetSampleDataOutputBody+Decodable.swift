// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSampleDataOutputBody: Equatable {
    public let headerValues: [String]?
    public let sampleRows: [[String]?]?
}

extension GetSampleDataOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case headerValues = "HeaderValues"
        case sampleRows = "SampleRows"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let headerValuesContainer = try containerValues.decodeIfPresent([String].self, forKey: .headerValues)
        var headerValuesDecoded0:[String]? = nil
        if let headerValuesContainer = headerValuesContainer {
            headerValuesDecoded0 = [String]()
            for string0 in headerValuesContainer {
                headerValuesDecoded0?.append(string0)
            }
        }
        headerValues = headerValuesDecoded0
        let sampleRowsContainer = try containerValues.decodeIfPresent([[String]?].self, forKey: .sampleRows)
        var sampleRowsDecoded0:[[String]?]? = nil
        if let sampleRowsContainer = sampleRowsContainer {
            sampleRowsDecoded0 = [[String]?]()
            for list0 in sampleRowsContainer {
                var list0Decoded0 = [String]()
                if let list0 = list0 {
                    for string1 in list0 {
                        list0Decoded0.append(string1)
                    }
                }
                sampleRowsDecoded0?.append(list0Decoded0)
            }
        }
        sampleRows = sampleRowsDecoded0
    }
}
