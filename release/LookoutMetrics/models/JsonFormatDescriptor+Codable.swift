// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension JsonFormatDescriptor: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case charset = "Charset"
        case fileCompression = "FileCompression"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let charset = charset {
            try encodeContainer.encode(charset, forKey: .charset)
        }
        if let fileCompression = fileCompression {
            try encodeContainer.encode(fileCompression.rawValue, forKey: .fileCompression)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileCompressionDecoded = try containerValues.decodeIfPresent(JsonFileCompression.self, forKey: .fileCompression)
        fileCompression = fileCompressionDecoded
        let charsetDecoded = try containerValues.decodeIfPresent(String.self, forKey: .charset)
        charset = charsetDecoded
    }
}
