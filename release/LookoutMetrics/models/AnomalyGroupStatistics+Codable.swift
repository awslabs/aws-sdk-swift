// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnomalyGroupStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case evaluationStartDate = "EvaluationStartDate"
        case itemizedMetricStatsList = "ItemizedMetricStatsList"
        case totalCount = "TotalCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let evaluationStartDate = evaluationStartDate {
            try encodeContainer.encode(evaluationStartDate, forKey: .evaluationStartDate)
        }
        if let itemizedMetricStatsList = itemizedMetricStatsList {
            var itemizedMetricStatsListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .itemizedMetricStatsList)
            for itemizedmetricstatslist0 in itemizedMetricStatsList {
                try itemizedMetricStatsListContainer.encode(itemizedmetricstatslist0)
            }
        }
        if totalCount != 0 {
            try encodeContainer.encode(totalCount, forKey: .totalCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let evaluationStartDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .evaluationStartDate)
        evaluationStartDate = evaluationStartDateDecoded
        let totalCountDecoded = try containerValues.decode(Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
        let itemizedMetricStatsListContainer = try containerValues.decodeIfPresent([ItemizedMetricStats].self, forKey: .itemizedMetricStatsList)
        var itemizedMetricStatsListDecoded0:[ItemizedMetricStats]? = nil
        if let itemizedMetricStatsListContainer = itemizedMetricStatsListContainer {
            itemizedMetricStatsListDecoded0 = [ItemizedMetricStats]()
            for structure0 in itemizedMetricStatsListContainer {
                itemizedMetricStatsListDecoded0?.append(structure0)
            }
        }
        itemizedMetricStatsList = itemizedMetricStatsListDecoded0
    }
}
