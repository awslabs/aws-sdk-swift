// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAnomalyDetectionExecutionsOutputBody: Equatable {
    public let executionList: [ExecutionStatus]?
    public let nextToken: String?
}

extension DescribeAnomalyDetectionExecutionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case executionList = "ExecutionList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionListContainer = try containerValues.decodeIfPresent([ExecutionStatus].self, forKey: .executionList)
        var executionListDecoded0:[ExecutionStatus]? = nil
        if let executionListContainer = executionListContainer {
            executionListDecoded0 = [ExecutionStatus]()
            for structure0 in executionListContainer {
                executionListDecoded0?.append(structure0)
            }
        }
        executionList = executionListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
