// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GrantPermissionsInputBody: Equatable {
    public let catalogId: String?
    public let principal: DataLakePrincipal?
    public let resource: Resource?
    public let permissions: [Permission]?
    public let permissionsWithGrantOption: [Permission]?
}

extension GrantPermissionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case permissions = "Permissions"
        case permissionsWithGrantOption = "PermissionsWithGrantOption"
        case principal = "Principal"
        case resource = "Resource"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let principalDecoded = try containerValues.decodeIfPresent(DataLakePrincipal.self, forKey: .principal)
        principal = principalDecoded
        let resourceDecoded = try containerValues.decodeIfPresent(Resource.self, forKey: .resource)
        resource = resourceDecoded
        let permissionsContainer = try containerValues.decodeIfPresent([Permission].self, forKey: .permissions)
        var permissionsDecoded0:[Permission]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [Permission]()
            for string0 in permissionsContainer {
                permissionsDecoded0?.append(string0)
            }
        }
        permissions = permissionsDecoded0
        let permissionsWithGrantOptionContainer = try containerValues.decodeIfPresent([Permission].self, forKey: .permissionsWithGrantOption)
        var permissionsWithGrantOptionDecoded0:[Permission]? = nil
        if let permissionsWithGrantOptionContainer = permissionsWithGrantOptionContainer {
            permissionsWithGrantOptionDecoded0 = [Permission]()
            for string0 in permissionsWithGrantOptionContainer {
                permissionsWithGrantOptionDecoded0?.append(string0)
            }
        }
        permissionsWithGrantOption = permissionsWithGrantOptionDecoded0
    }
}
