// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ColumnWildcard: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case excludedColumnNames = "ExcludedColumnNames"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludedColumnNames = excludedColumnNames {
            var excludedColumnNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .excludedColumnNames)
            for columnnames0 in excludedColumnNames {
                try excludedColumnNamesContainer.encode(columnnames0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let excludedColumnNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .excludedColumnNames)
        var excludedColumnNamesDecoded0:[String]? = nil
        if let excludedColumnNamesContainer = excludedColumnNamesContainer {
            excludedColumnNamesDecoded0 = [String]()
            for string0 in excludedColumnNamesContainer {
                excludedColumnNamesDecoded0?.append(string0)
            }
        }
        excludedColumnNames = excludedColumnNamesDecoded0
    }
}
