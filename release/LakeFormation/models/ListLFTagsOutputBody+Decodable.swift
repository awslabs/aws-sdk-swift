// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLFTagsOutputBody: Equatable {
    public let lFTags: [LFTagPair]?
    public let nextToken: String?
}

extension ListLFTagsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lFTags = "LFTags"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lFTagsContainer = try containerValues.decodeIfPresent([LFTagPair].self, forKey: .lFTags)
        var lFTagsDecoded0:[LFTagPair]? = nil
        if let lFTagsContainer = lFTagsContainer {
            lFTagsDecoded0 = [LFTagPair]()
            for structure0 in lFTagsContainer {
                lFTagsDecoded0?.append(structure0)
            }
        }
        lFTags = lFTagsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
