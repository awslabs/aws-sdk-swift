// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DetailsMap: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resourceShare = "ResourceShare"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resourceShare = resourceShare {
            var resourceShareContainer = encodeContainer.nestedUnkeyedContainer(forKey: .resourceShare)
            for resourcesharelist0 in resourceShare {
                try resourceShareContainer.encode(resourcesharelist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceShareContainer = try containerValues.decodeIfPresent([String].self, forKey: .resourceShare)
        var resourceShareDecoded0:[String]? = nil
        if let resourceShareContainer = resourceShareContainer {
            resourceShareDecoded0 = [String]()
            for string0 in resourceShareContainer {
                resourceShareDecoded0?.append(string0)
            }
        }
        resourceShare = resourceShareDecoded0
    }
}
