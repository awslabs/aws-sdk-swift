// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Resource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case catalog = "Catalog"
        case dataLocation = "DataLocation"
        case database = "Database"
        case lFTag = "LFTag"
        case lFTagPolicy = "LFTagPolicy"
        case table = "Table"
        case tableWithColumns = "TableWithColumns"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let catalog = catalog {
            try encodeContainer.encode(catalog, forKey: .catalog)
        }
        if let dataLocation = dataLocation {
            try encodeContainer.encode(dataLocation, forKey: .dataLocation)
        }
        if let database = database {
            try encodeContainer.encode(database, forKey: .database)
        }
        if let lFTag = lFTag {
            try encodeContainer.encode(lFTag, forKey: .lFTag)
        }
        if let lFTagPolicy = lFTagPolicy {
            try encodeContainer.encode(lFTagPolicy, forKey: .lFTagPolicy)
        }
        if let table = table {
            try encodeContainer.encode(table, forKey: .table)
        }
        if let tableWithColumns = tableWithColumns {
            try encodeContainer.encode(tableWithColumns, forKey: .tableWithColumns)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogDecoded = try containerValues.decodeIfPresent(CatalogResource.self, forKey: .catalog)
        catalog = catalogDecoded
        let databaseDecoded = try containerValues.decodeIfPresent(DatabaseResource.self, forKey: .database)
        database = databaseDecoded
        let tableDecoded = try containerValues.decodeIfPresent(TableResource.self, forKey: .table)
        table = tableDecoded
        let tableWithColumnsDecoded = try containerValues.decodeIfPresent(TableWithColumnsResource.self, forKey: .tableWithColumns)
        tableWithColumns = tableWithColumnsDecoded
        let dataLocationDecoded = try containerValues.decodeIfPresent(DataLocationResource.self, forKey: .dataLocation)
        dataLocation = dataLocationDecoded
        let lFTagDecoded = try containerValues.decodeIfPresent(LFTagKeyResource.self, forKey: .lFTag)
        lFTag = lFTagDecoded
        let lFTagPolicyDecoded = try containerValues.decodeIfPresent(LFTagPolicyResource.self, forKey: .lFTagPolicy)
        lFTagPolicy = lFTagPolicyDecoded
    }
}
