// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DataLakeResourceType {
    case catalog
    case database
    case dataLocation
    case lfTag
    case lfTagPolicy
    case lfTagPolicyDatabase
    case lfTagPolicyTable
    case table
    case sdkUnknown(String)
}

extension DataLakeResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DataLakeResourceType] {
        return [
            .catalog,
            .database,
            .dataLocation,
            .lfTag,
            .lfTagPolicy,
            .lfTagPolicyDatabase,
            .lfTagPolicyTable,
            .table,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .catalog: return "CATALOG"
        case .database: return "DATABASE"
        case .dataLocation: return "DATA_LOCATION"
        case .lfTag: return "LF_TAG"
        case .lfTagPolicy: return "LF_TAG_POLICY"
        case .lfTagPolicyDatabase: return "LF_TAG_POLICY_DATABASE"
        case .lfTagPolicyTable: return "LF_TAG_POLICY_TABLE"
        case .table: return "TABLE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DataLakeResourceType(rawValue: rawValue) ?? DataLakeResourceType.sdkUnknown(rawValue)
    }
}
