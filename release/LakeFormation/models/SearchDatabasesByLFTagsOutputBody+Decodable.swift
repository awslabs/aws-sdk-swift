// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchDatabasesByLFTagsOutputBody: Equatable {
    public let nextToken: String?
    public let databaseList: [TaggedDatabase]?
}

extension SearchDatabasesByLFTagsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case databaseList = "DatabaseList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let databaseListContainer = try containerValues.decodeIfPresent([TaggedDatabase].self, forKey: .databaseList)
        var databaseListDecoded0:[TaggedDatabase]? = nil
        if let databaseListContainer = databaseListContainer {
            databaseListDecoded0 = [TaggedDatabase]()
            for structure0 in databaseListContainer {
                databaseListDecoded0?.append(structure0)
            }
        }
        databaseList = databaseListDecoded0
    }
}
