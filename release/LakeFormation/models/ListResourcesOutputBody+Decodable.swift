// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourcesOutputBody: Equatable {
    public let resourceInfoList: [ResourceInfo]?
    public let nextToken: String?
}

extension ListResourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case resourceInfoList = "ResourceInfoList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceInfoListContainer = try containerValues.decodeIfPresent([ResourceInfo].self, forKey: .resourceInfoList)
        var resourceInfoListDecoded0:[ResourceInfo]? = nil
        if let resourceInfoListContainer = resourceInfoListContainer {
            resourceInfoListDecoded0 = [ResourceInfo]()
            for structure0 in resourceInfoListContainer {
                resourceInfoListDecoded0?.append(structure0)
            }
        }
        resourceInfoList = resourceInfoListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
