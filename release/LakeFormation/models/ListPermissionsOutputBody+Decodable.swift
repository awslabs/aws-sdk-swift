// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPermissionsOutputBody: Equatable {
    public let principalResourcePermissions: [PrincipalResourcePermissions]?
    public let nextToken: String?
}

extension ListPermissionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case principalResourcePermissions = "PrincipalResourcePermissions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let principalResourcePermissionsContainer = try containerValues.decodeIfPresent([PrincipalResourcePermissions].self, forKey: .principalResourcePermissions)
        var principalResourcePermissionsDecoded0:[PrincipalResourcePermissions]? = nil
        if let principalResourcePermissionsContainer = principalResourcePermissionsContainer {
            principalResourcePermissionsDecoded0 = [PrincipalResourcePermissions]()
            for structure0 in principalResourcePermissionsContainer {
                principalResourcePermissionsDecoded0?.append(structure0)
            }
        }
        principalResourcePermissions = principalResourcePermissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
