// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterResourceInputBody: Equatable {
    public let resourceArn: String?
    public let useServiceLinkedRole: Bool?
    public let roleArn: String?
}

extension RegisterResourceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case resourceArn = "ResourceArn"
        case roleArn = "RoleArn"
        case useServiceLinkedRole = "UseServiceLinkedRole"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceArn)
        resourceArn = resourceArnDecoded
        let useServiceLinkedRoleDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .useServiceLinkedRole)
        useServiceLinkedRole = useServiceLinkedRoleDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
