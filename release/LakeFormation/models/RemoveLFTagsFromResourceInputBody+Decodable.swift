// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RemoveLFTagsFromResourceInputBody: Equatable {
    public let catalogId: String?
    public let resource: Resource?
    public let lFTags: [LFTagPair]?
}

extension RemoveLFTagsFromResourceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalogId = "CatalogId"
        case lFTags = "LFTags"
        case resource = "Resource"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalogId)
        catalogId = catalogIdDecoded
        let resourceDecoded = try containerValues.decodeIfPresent(Resource.self, forKey: .resource)
        resource = resourceDecoded
        let lFTagsContainer = try containerValues.decodeIfPresent([LFTagPair].self, forKey: .lFTags)
        var lFTagsDecoded0:[LFTagPair]? = nil
        if let lFTagsContainer = lFTagsContainer {
            lFTagsDecoded0 = [LFTagPair]()
            for structure0 in lFTagsContainer {
                lFTagsDecoded0?.append(structure0)
            }
        }
        lFTags = lFTagsDecoded0
    }
}
