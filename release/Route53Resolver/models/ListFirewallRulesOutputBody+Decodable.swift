// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallRulesOutputBody: Equatable {
    public let nextToken: String?
    public let firewallRules: [FirewallRule]?
}

extension ListFirewallRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case firewallRules = "FirewallRules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallRulesContainer = try containerValues.decodeIfPresent([FirewallRule].self, forKey: .firewallRules)
        var firewallRulesDecoded0:[FirewallRule]? = nil
        if let firewallRulesContainer = firewallRulesContainer {
            firewallRulesDecoded0 = [FirewallRule]()
            for structure0 in firewallRulesContainer {
                firewallRulesDecoded0?.append(structure0)
            }
        }
        firewallRules = firewallRulesDecoded0
    }
}
