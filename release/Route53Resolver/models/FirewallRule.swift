// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A single firewall rule in a rule group.</p>
public struct FirewallRule: Equatable {
    /// <p>The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>ALLOW</code> - Permit the request to go through.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ALERT</code> - Permit the request to go through but send an alert to the logs.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>BLOCK</code> - Disallow the request. If this is specified, additional handling details are provided in the rule's <code>BlockResponse</code> setting. </p>
    ///             </li>
    ///          </ul>
    public let action: Action?
    /// <p>The DNS record's type. This determines the format of the record value that you provided in <code>BlockOverrideDomain</code>. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
    public let blockOverrideDnsType: BlockOverrideDnsType?
    /// <p>The custom DNS record to send back in response to the query. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
    public let blockOverrideDomain: String?
    /// <p>The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>
    public let blockOverrideTtl: Int?
    /// <p>The way that you want DNS Firewall to block the request. Used for the rule action setting <code>BLOCK</code>.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>NODATA</code> - Respond indicating that the query was successful, but no response is available for it.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NXDOMAIN</code> - Respond indicating that the domain name that's in the query doesn't exist.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>OVERRIDE</code> - Provide a custom override in the response. This option requires custom handling details in the rule's <code>BlockOverride*</code> settings. </p>
    ///             </li>
    ///          </ul>
    public let blockResponse: BlockResponse?
    /// <p>The date and time that the rule was created, in Unix time format and Coordinated Universal Time (UTC). </p>
    public let creationTime: String?
    /// <p>A unique string defined by you to identify the request. This allows you to retry failed requests
    ///            without the risk of executing the operation twice. This can be any unique string, for example, a timestamp. </p>
    public let creatorRequestId: String?
    /// <p>The ID of the domain list that's used in the rule. </p>
    public let firewallDomainListId: String?
    /// <p>The unique identifier of the firewall rule group of the rule. </p>
    public let firewallRuleGroupId: String?
    /// <p>The date and time that the rule was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>
    public let modificationTime: String?
    /// <p>The name of the rule. </p>
    public let name: String?
    /// <p>The priority of the rule in the rule group. This value must be unique within the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.</p>
    public let priority: Int?

    public init (
        action: Action? = nil,
        blockOverrideDnsType: BlockOverrideDnsType? = nil,
        blockOverrideDomain: String? = nil,
        blockOverrideTtl: Int? = nil,
        blockResponse: BlockResponse? = nil,
        creationTime: String? = nil,
        creatorRequestId: String? = nil,
        firewallDomainListId: String? = nil,
        firewallRuleGroupId: String? = nil,
        modificationTime: String? = nil,
        name: String? = nil,
        priority: Int? = nil
    )
    {
        self.action = action
        self.blockOverrideDnsType = blockOverrideDnsType
        self.blockOverrideDomain = blockOverrideDomain
        self.blockOverrideTtl = blockOverrideTtl
        self.blockResponse = blockResponse
        self.creationTime = creationTime
        self.creatorRequestId = creatorRequestId
        self.firewallDomainListId = firewallDomainListId
        self.firewallRuleGroupId = firewallRuleGroupId
        self.modificationTime = modificationTime
        self.name = name
        self.priority = priority
    }
}
