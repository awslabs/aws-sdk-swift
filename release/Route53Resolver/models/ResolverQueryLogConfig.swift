// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>In the response to a
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverQueryLogConfig.html">CreateResolverQueryLogConfig</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverQueryLogConfig.html">DeleteResolverQueryLogConfig</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfig.html">GetResolverQueryLogConfig</a>,
/// 			or
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a>
/// 			request, a complex type that contains settings for one query logging configuration.</p>
public struct ResolverQueryLogConfig: Equatable {
    /// <p>The ARN for the query logging configuration.</p>
    public let arn: String?
    /// <p>The number of VPCs that are associated with the query logging configuration.</p>
    public let associationCount: Int
    /// <p>The date and time that the query logging configuration was created, in Unix time format and Coordinated Universal Time (UTC).</p>
    public let creationTime: String?
    /// <p>A unique string that identifies the request that created the query logging configuration.
    /// 			The <code>CreatorRequestId</code> allows failed requests to be retried without the risk
    /// 			of running the operation twice.</p>
    public let creatorRequestId: String?
    /// <p>The ARN of the resource that you want Resolver to send query logs: an Amazon S3 bucket, a CloudWatch Logs log group, or
    /// 			a Kinesis Data Firehose delivery stream.</p>
    public let destinationArn: String?
    /// <p>The ID for the query logging configuration.</p>
    public let id: String?
    /// <p>The name of the query logging configuration. </p>
    public let name: String?
    /// <p>The AWS account ID for the account that created the query logging configuration. </p>
    public let ownerId: String?
    /// <p>An indication of whether the query logging configuration is shared with other AWS accounts, or was shared with the current account by another
    /// 			AWS account. Sharing is configured through AWS Resource Access Manager (AWS RAM).</p>
    public let shareStatus: ShareStatus?
    /// <p>The status of the specified query logging configuration. Valid values include the following:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <code>CREATING</code>: Resolver is creating the query logging configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATED</code>: The query logging configuration was successfully created.
    /// 				Resolver is logging queries that originate in the specified VPC.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETING</code>: Resolver is deleting this query logging configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code>: Resolver can't deliver logs to the location that is specified in the query logging configuration.
    /// 				Here are two common causes:</p>
    /// 				           <ul>
    ///                   <li>
    ///                      <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p>
    ///                   </li>
    ///                   <li>
    ///                      <p>Permissions don't allow sending logs to the destination.</p>
    ///                   </li>
    ///                </ul>
    /// 			         </li>
    ///          </ul>
    public let status: ResolverQueryLogConfigStatus?

    public init (
        arn: String? = nil,
        associationCount: Int = 0,
        creationTime: String? = nil,
        creatorRequestId: String? = nil,
        destinationArn: String? = nil,
        id: String? = nil,
        name: String? = nil,
        ownerId: String? = nil,
        shareStatus: ShareStatus? = nil,
        status: ResolverQueryLogConfigStatus? = nil
    )
    {
        self.arn = arn
        self.associationCount = associationCount
        self.creationTime = creationTime
        self.creatorRequestId = creatorRequestId
        self.destinationArn = destinationArn
        self.id = id
        self.name = name
        self.ownerId = ownerId
        self.shareStatus = shareStatus
        self.status = status
    }
}
