// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallRuleGroupAssociationsOutputBody: Equatable {
    public let nextToken: String?
    public let firewallRuleGroupAssociations: [FirewallRuleGroupAssociation]?
}

extension ListFirewallRuleGroupAssociationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case firewallRuleGroupAssociations = "FirewallRuleGroupAssociations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let firewallRuleGroupAssociationsContainer = try containerValues.decodeIfPresent([FirewallRuleGroupAssociation].self, forKey: .firewallRuleGroupAssociations)
        var firewallRuleGroupAssociationsDecoded0:[FirewallRuleGroupAssociation]? = nil
        if let firewallRuleGroupAssociationsContainer = firewallRuleGroupAssociationsContainer {
            firewallRuleGroupAssociationsDecoded0 = [FirewallRuleGroupAssociation]()
            for structure0 in firewallRuleGroupAssociationsContainer {
                firewallRuleGroupAssociationsDecoded0?.append(structure0)
            }
        }
        firewallRuleGroupAssociations = firewallRuleGroupAssociationsDecoded0
    }
}
