// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>In the response to an
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html">AssociateResolverQueryLogConfig</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfigAssociation.html">GetResolverQueryLogConfigAssociation</a>,
/// 			or
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>,
/// 			request, a complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.</p>
public struct ResolverQueryLogConfigAssociation: Equatable {
    /// <p>The date and time that the VPC was associated with the query logging configuration, in Unix time format and Coordinated Universal Time (UTC).</p>
    public let creationTime: String?
    /// <p>If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p>
    ///             </li>
    ///          </ul>
    /// 		       <p>If the value of <code>Status</code> is a value other than <code>FAILED</code>, <code>Error</code> is null. </p>
    public let error: ResolverQueryLogConfigAssociationError?
    /// <p>Contains additional information about the error. If the value or <code>Error</code> is null, the value of <code>ErrorMessage</code> also is null.</p>
    public let errorMessage: String?
    /// <p>The ID of the query logging association.</p>
    public let id: String?
    /// <p>The ID of the query logging configuration that a VPC is associated with.</p>
    public let resolverQueryLogConfigId: String?
    /// <p>The ID of the Amazon VPC that is associated with the query logging configuration.</p>
    public let resourceId: String?
    /// <p>The status of the specified query logging association. Valid values include the following:</p>
    /// 		       <ul>
    ///             <li>
    ///                <p>
    ///                   <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration
    /// 				was successfully created. Resolver is logging queries that originate in the specified VPC.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETING</code>: Resolver is deleting this query logging association.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association.</p>
    ///             </li>
    ///          </ul>
    public let status: ResolverQueryLogConfigAssociationStatus?

    public init (
        creationTime: String? = nil,
        error: ResolverQueryLogConfigAssociationError? = nil,
        errorMessage: String? = nil,
        id: String? = nil,
        resolverQueryLogConfigId: String? = nil,
        resourceId: String? = nil,
        status: ResolverQueryLogConfigAssociationStatus? = nil
    )
    {
        self.creationTime = creationTime
        self.error = error
        self.errorMessage = errorMessage
        self.id = id
        self.resolverQueryLogConfigId = resolverQueryLogConfigId
        self.resourceId = resourceId
        self.status = status
    }
}
