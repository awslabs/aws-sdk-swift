// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResolverQueryLogConfigAssociationError {
    case accessdenied
    case destinationnotfound
    case internalserviceerror
    case `none`
    case sdkUnknown(String)
}

extension ResolverQueryLogConfigAssociationError : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResolverQueryLogConfigAssociationError] {
        return [
            .accessdenied,
            .destinationnotfound,
            .internalserviceerror,
            .none,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessdenied: return "ACCESS_DENIED"
        case .destinationnotfound: return "DESTINATION_NOT_FOUND"
        case .internalserviceerror: return "INTERNAL_SERVICE_ERROR"
        case .none: return "NONE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResolverQueryLogConfigAssociationError(rawValue: rawValue) ?? ResolverQueryLogConfigAssociationError.sdkUnknown(rawValue)
    }
}
