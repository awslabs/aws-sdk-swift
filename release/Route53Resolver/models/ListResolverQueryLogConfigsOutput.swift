// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListResolverQueryLogConfigsOutput: Equatable {
    /// <p>If there are more than <code>MaxResults</code> query logging configurations, you can submit another <code>ListResolverQueryLogConfigs</code> request
    /// 			to get the next group of configurations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>
    public let nextToken: String?
    /// <p>A list that contains one <code>ResolverQueryLogConfig</code> element for each query logging configuration that matches the
    /// 			values that you specified for <code>Filter</code>.</p>
    public let resolverQueryLogConfigs: [ResolverQueryLogConfig]?
    /// <p>The total number of query logging configurations that were created by the current account in the specified Region. This count can differ from the
    /// 			number of query logging configurations that are returned in a <code>ListResolverQueryLogConfigs</code> response, depending on the values that you specify
    /// 			in the request.</p>
    public let totalCount: Int
    /// <p>The total number of query logging configurations that were created by the current account in the specified Region and that match the filters
    /// 			that were specified in the <code>ListResolverQueryLogConfigs</code> request. For the total number of query logging configurations that were created by the
    /// 			current account in the specified Region, see <code>TotalCount</code>.</p>
    public let totalFilteredCount: Int

    public init (
        nextToken: String? = nil,
        resolverQueryLogConfigs: [ResolverQueryLogConfig]? = nil,
        totalCount: Int = 0,
        totalFilteredCount: Int = 0
    )
    {
        self.nextToken = nextToken
        self.resolverQueryLogConfigs = resolverQueryLogConfigs
        self.totalCount = totalCount
        self.totalFilteredCount = totalFilteredCount
    }
}
