// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociateResolverRuleInputBody: Equatable {
    public let vPCId: String?
    public let resolverRuleId: String?
}

extension DisassociateResolverRuleInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case resolverRuleId = "ResolverRuleId"
        case vPCId = "VPCId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vPCIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vPCId)
        vPCId = vPCIdDecoded
        let resolverRuleIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resolverRuleId)
        resolverRuleId = resolverRuleIdDecoded
    }
}
