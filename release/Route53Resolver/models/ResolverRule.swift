// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>For queries that originate in your VPC, detailed information about a Resolver rule, which specifies how to route DNS queries
/// 			out of the VPC. The <code>ResolverRule</code> parameter appears in the response to a
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html">DeleteResolverRule</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a>,
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>,
/// 			or
/// 			<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html">UpdateResolverRule</a> request.</p>
public struct ResolverRule: Equatable {
    /// <p>The ARN (Amazon Resource Name) for the Resolver rule specified by <code>Id</code>.</p>
    public let arn: String?
    /// <p>The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).</p>
    public let creationTime: String?
    /// <p>A unique string that you specified when you created the Resolver rule.
    /// 				<code>CreatorRequestId</code> identifies the request and allows failed requests to
    /// 			be retried without the risk of running the operation twice. </p>
    public let creatorRequestId: String?
    /// <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches
    /// 			multiple Resolver rules (example.com and www.example.com), the query is routed using the Resolver rule that contains the most specific domain name
    /// 			(www.example.com).</p>
    public let domainName: String?
    /// <p>The ID that Resolver assigned to the Resolver rule when you created it.</p>
    public let id: String?
    /// <p>The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).</p>
    public let modificationTime: String?
    /// <p>The name for the Resolver rule, which you specified when you created the Resolver rule.</p>
    public let name: String?
    /// <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>
    public let ownerId: String?
    /// <p>The ID of the endpoint that the rule is associated with.</p>
    public let resolverEndpointId: String?
    /// <p>When you want to forward DNS queries for specified domain name to resolvers on your network, specify <code>FORWARD</code>.</p>
    /// 		       <p>When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for
    /// 			a subdomain of that domain, specify <code>SYSTEM</code>.</p>
    /// 		       <p>For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify <code>FORWARD</code>
    /// 			for <code>RuleType</code>. To then have Resolver process queries for apex.example.com, you create a rule and specify
    /// 			<code>SYSTEM</code> for <code>RuleType</code>.</p>
    /// 		       <p>Currently, only Resolver can create rules that have a value of <code>RECURSIVE</code> for <code>RuleType</code>.</p>
    public let ruleType: RuleTypeOption?
    /// <p>Whether the rule is shared and, if so, whether the current account is sharing the rule with
    /// 			another account, or another account is sharing the rule with the current account.</p>
    public let shareStatus: ShareStatus?
    /// <p>A code that specifies the current status of the Resolver rule.</p>
    public let status: ResolverRuleStatus?
    /// <p>A detailed description of the status of a Resolver rule.</p>
    public let statusMessage: String?
    /// <p>An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically,
    /// 			these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.</p>
    public let targetIps: [TargetAddress]?

    public init (
        arn: String? = nil,
        creationTime: String? = nil,
        creatorRequestId: String? = nil,
        domainName: String? = nil,
        id: String? = nil,
        modificationTime: String? = nil,
        name: String? = nil,
        ownerId: String? = nil,
        resolverEndpointId: String? = nil,
        ruleType: RuleTypeOption? = nil,
        shareStatus: ShareStatus? = nil,
        status: ResolverRuleStatus? = nil,
        statusMessage: String? = nil,
        targetIps: [TargetAddress]? = nil
    )
    {
        self.arn = arn
        self.creationTime = creationTime
        self.creatorRequestId = creatorRequestId
        self.domainName = domainName
        self.id = id
        self.modificationTime = modificationTime
        self.name = name
        self.ownerId = ownerId
        self.resolverEndpointId = resolverEndpointId
        self.ruleType = ruleType
        self.shareStatus = shareStatus
        self.status = status
        self.statusMessage = statusMessage
        self.targetIps = targetIps
    }
}
