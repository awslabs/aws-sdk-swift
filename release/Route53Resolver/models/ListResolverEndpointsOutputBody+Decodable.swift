// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResolverEndpointsOutputBody: Equatable {
    public let nextToken: String?
    public let maxResults: Int?
    public let resolverEndpoints: [ResolverEndpoint]?
}

extension ListResolverEndpointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resolverEndpoints = "ResolverEndpoints"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let resolverEndpointsContainer = try containerValues.decodeIfPresent([ResolverEndpoint].self, forKey: .resolverEndpoints)
        var resolverEndpointsDecoded0:[ResolverEndpoint]? = nil
        if let resolverEndpointsContainer = resolverEndpointsContainer {
            resolverEndpointsDecoded0 = [ResolverEndpoint]()
            for structure0 in resolverEndpointsContainer {
                resolverEndpointsDecoded0?.append(structure0)
            }
        }
        resolverEndpoints = resolverEndpointsDecoded0
    }
}
