// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListResolverQueryLogConfigAssociationsOutput: Equatable {
    /// <p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request
    /// 			to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>
    public let nextToken: String?
    /// <p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the
    /// 			values that you specified for <code>Filter</code>.</p>
    public let resolverQueryLogConfigAssociations: [ResolverQueryLogConfigAssociation]?
    /// <p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the
    /// 			number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify
    /// 			in the request.</p>
    public let totalCount: Int
    /// <p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters
    /// 			that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the
    /// 			current account in the specified Region, see <code>TotalCount</code>.</p>
    public let totalFilteredCount: Int

    public init (
        nextToken: String? = nil,
        resolverQueryLogConfigAssociations: [ResolverQueryLogConfigAssociation]? = nil,
        totalCount: Int = 0,
        totalFilteredCount: Int = 0
    )
    {
        self.nextToken = nextToken
        self.resolverQueryLogConfigAssociations = resolverQueryLogConfigAssociations
        self.totalCount = totalCount
        self.totalFilteredCount = totalFilteredCount
    }
}
