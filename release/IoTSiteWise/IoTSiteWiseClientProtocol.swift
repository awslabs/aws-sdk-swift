// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Welcome to the AWS IoT SiteWise API Reference. AWS IoT SiteWise is an AWS service that connects <a href="https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications">Industrial Internet of Things (IIoT)</a> devices to the power of the AWS Cloud. For more information, see the
///       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/">AWS IoT SiteWise User Guide</a>. For information about AWS IoT SiteWise quotas, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html">Quotas</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
public protocol IoTSiteWiseClientProtocol {
    /// <p>Associates a child asset with the given parent asset through a hierarchy defined in the
    ///       parent asset's model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html">Associating assets</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func associateAssets(input: AssociateAssetsInput, completion: @escaping (SdkResult<AssociateAssetsOutputResponse, AssociateAssetsOutputError>) -> Void)
    /// <p>Associates a group (batch) of assets with an AWS IoT SiteWise Monitor project.</p>
    func batchAssociateProjectAssets(input: BatchAssociateProjectAssetsInput, completion: @escaping (SdkResult<BatchAssociateProjectAssetsOutputResponse, BatchAssociateProjectAssetsOutputError>) -> Void)
    /// <p>Disassociates a group (batch) of assets from an AWS IoT SiteWise Monitor project.</p>
    func batchDisassociateProjectAssets(input: BatchDisassociateProjectAssetsInput, completion: @escaping (SdkResult<BatchDisassociateProjectAssetsOutputResponse, BatchDisassociateProjectAssetsOutputError>) -> Void)
    /// <p>Sends a list of asset property values to AWS IoT SiteWise. Each value is a timestamp-quality-value
    ///       (TQV) data point. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html">Ingesting data using the API</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>To identify an asset property, you must specify one of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
    ///             </li>
    ///             <li>
    ///                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
    ///           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    ///             </li>
    ///          </ul>
    ///          <important>
    ///             <p>With respect to Unix epoch time, AWS IoT SiteWise accepts only TQVs that have a timestamp of no more
    ///         than 7 days in the past and no more than 10 minutes in the future. AWS IoT SiteWise rejects timestamps
    ///         outside of the inclusive range of [-7 days, +10 minutes] and returns a
    ///           <code>TimestampOutOfRangeException</code> error.</p>
    ///             <p>For each asset property, AWS IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer
    ///         TQV has a different quality. For example, if you store a TQV <code>{T1, GOOD, V1}</code>,
    ///         then storing <code>{T1, GOOD, V2}</code> replaces the existing TQV.</p>
    ///          </important>
    ///          <p>AWS IoT SiteWise authorizes access to each <code>BatchPutAssetPropertyValue</code> entry individually.
    ///       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action">BatchPutAssetPropertyValue authorization</a> in the
    ///       <i>AWS IoT SiteWise User Guide</i>.</p>
    func batchPutAssetPropertyValue(input: BatchPutAssetPropertyValueInput, completion: @escaping (SdkResult<BatchPutAssetPropertyValueOutputResponse, BatchPutAssetPropertyValueOutputError>) -> Void)
    /// <p>Creates an access policy that grants the specified identity (AWS SSO user, AWS SSO group, or
    ///       IAM user) access to the specified AWS IoT SiteWise Monitor portal or project resource.</p>
    func createAccessPolicy(input: CreateAccessPolicyInput, completion: @escaping (SdkResult<CreateAccessPolicyOutputResponse, CreateAccessPolicyOutputError>) -> Void)
    /// <p>Creates an asset from an existing asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html">Creating assets</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func createAsset(input: CreateAssetInput, completion: @escaping (SdkResult<CreateAssetOutputResponse, CreateAssetOutputError>) -> Void)
    /// <p>Creates an asset model from specified property and hierarchy definitions. You create
    ///       assets from asset models. With asset models, you can easily create assets of the same type
    ///       that have standardized definitions. Each asset created from a model inherits the asset model's
    ///       property and hierarchy definitions. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html">Defining asset models</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func createAssetModel(input: CreateAssetModelInput, completion: @escaping (SdkResult<CreateAssetModelOutputResponse, CreateAssetModelOutputError>) -> Void)
    /// <p>Creates a dashboard in an AWS IoT SiteWise Monitor project.</p>
    func createDashboard(input: CreateDashboardInput, completion: @escaping (SdkResult<CreateDashboardOutputResponse, CreateDashboardOutputError>) -> Void)
    /// <p>Creates a gateway, which is a virtual or edge device that delivers industrial data streams
    ///       from local servers to AWS IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func createGateway(input: CreateGatewayInput, completion: @escaping (SdkResult<CreateGatewayOutputResponse, CreateGatewayOutputError>) -> Void)
    /// <p>Creates a portal, which can contain projects and dashboards. AWS IoT SiteWise Monitor uses AWS SSO or IAM
    ///       to authenticate portal users and manage user permissions.</p>
    ///          <note>
    ///             <p>Before you can sign in to a new portal, you must add at least one identity to that
    ///         portal. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins">Adding or removing portal
    ///           administrators</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          </note>
    func createPortal(input: CreatePortalInput, completion: @escaping (SdkResult<CreatePortalOutputResponse, CreatePortalOutputError>) -> Void)
    /// <p>Creates a project in the specified portal.</p>
    func createProject(input: CreateProjectInput, completion: @escaping (SdkResult<CreateProjectOutputResponse, CreateProjectOutputError>) -> Void)
    /// <p>Deletes an access policy that grants the specified identity access to the specified
    ///       AWS IoT SiteWise Monitor resource. You can use this operation to revoke access to an AWS IoT SiteWise Monitor
    ///       resource.</p>
    func deleteAccessPolicy(input: DeleteAccessPolicyInput, completion: @escaping (SdkResult<DeleteAccessPolicyOutputResponse, DeleteAccessPolicyOutputError>) -> Void)
    /// <p>Deletes an asset. This action can't be undone. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and
    ///         models</a> in the <i>AWS IoT SiteWise User Guide</i>.
    ///       </p>
    ///          <note>
    ///             <p>You can't delete an asset that's associated to another asset. For more information, see
    ///           <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html">DisassociateAssets</a>.</p>
    ///          </note>
    func deleteAsset(input: DeleteAssetInput, completion: @escaping (SdkResult<DeleteAssetOutputResponse, DeleteAssetOutputError>) -> Void)
    /// <p>Deletes an asset model. This action can't be undone. You must delete all assets created
    ///       from an asset model before you can delete the model. Also, you can't delete an asset model if
    ///       a parent asset model exists that contains a property formula expression that depends on the
    ///       asset model that you want to delete. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html">Deleting assets and models</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func deleteAssetModel(input: DeleteAssetModelInput, completion: @escaping (SdkResult<DeleteAssetModelOutputResponse, DeleteAssetModelOutputError>) -> Void)
    /// <p>Deletes a dashboard from AWS IoT SiteWise Monitor.</p>
    func deleteDashboard(input: DeleteDashboardInput, completion: @escaping (SdkResult<DeleteDashboardOutputResponse, DeleteDashboardOutputError>) -> Void)
    /// <p>Deletes a gateway from AWS IoT SiteWise. When you delete a gateway, some of the gateway's files remain
    ///       in your gateway's file system.</p>
    func deleteGateway(input: DeleteGatewayInput, completion: @escaping (SdkResult<DeleteGatewayOutputResponse, DeleteGatewayOutputError>) -> Void)
    /// <p>Deletes a portal from AWS IoT SiteWise Monitor.</p>
    func deletePortal(input: DeletePortalInput, completion: @escaping (SdkResult<DeletePortalOutputResponse, DeletePortalOutputError>) -> Void)
    /// <p>Deletes a project from AWS IoT SiteWise Monitor.</p>
    func deleteProject(input: DeleteProjectInput, completion: @escaping (SdkResult<DeleteProjectOutputResponse, DeleteProjectOutputError>) -> Void)
    /// <p>Describes an access policy, which specifies an identity's access to an AWS IoT SiteWise Monitor portal or
    ///       project.</p>
    func describeAccessPolicy(input: DescribeAccessPolicyInput, completion: @escaping (SdkResult<DescribeAccessPolicyOutputResponse, DescribeAccessPolicyOutputError>) -> Void)
    /// <p>Retrieves information about an asset.</p>
    func describeAsset(input: DescribeAssetInput, completion: @escaping (SdkResult<DescribeAssetOutputResponse, DescribeAssetOutputError>) -> Void)
    /// <p>Retrieves information about an asset model.</p>
    func describeAssetModel(input: DescribeAssetModelInput, completion: @escaping (SdkResult<DescribeAssetModelOutputResponse, DescribeAssetModelOutputError>) -> Void)
    /// <p>Retrieves information about an asset property.</p>
    ///          <note>
    ///             <p>When you call this operation for an attribute property, this response includes the
    ///         default attribute value that you define in the asset model. If you update the default value
    ///         in the model, this operation's response includes the new default value.</p>
    ///          </note>
    ///          <p>This operation doesn't return the value of the asset property. To get the value of an
    ///       asset property, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html">GetAssetPropertyValue</a>.</p>
    func describeAssetProperty(input: DescribeAssetPropertyInput, completion: @escaping (SdkResult<DescribeAssetPropertyOutputResponse, DescribeAssetPropertyOutputError>) -> Void)
    /// <p>Retrieves information about a dashboard.</p>
    func describeDashboard(input: DescribeDashboardInput, completion: @escaping (SdkResult<DescribeDashboardOutputResponse, DescribeDashboardOutputError>) -> Void)
    /// <p>Retrieves information about the default encryption configuration for the
    ///       AWS account in the default or specified region. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a>
    ///       in the <i>AWS IoT SiteWise User Guide</i>.</p>
    func describeDefaultEncryptionConfiguration(input: DescribeDefaultEncryptionConfigurationInput, completion: @escaping (SdkResult<DescribeDefaultEncryptionConfigurationOutputResponse, DescribeDefaultEncryptionConfigurationOutputError>) -> Void)
    /// <p>Retrieves information about a gateway.</p>
    func describeGateway(input: DescribeGatewayInput, completion: @escaping (SdkResult<DescribeGatewayOutputResponse, DescribeGatewayOutputError>) -> Void)
    /// <p>Retrieves information about a gateway capability configuration.
    ///       Each gateway capability defines data sources for a gateway. A capability configuration
    ///       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
    ///       the AWS IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
    ///       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
    func describeGatewayCapabilityConfiguration(input: DescribeGatewayCapabilityConfigurationInput, completion: @escaping (SdkResult<DescribeGatewayCapabilityConfigurationOutputResponse, DescribeGatewayCapabilityConfigurationOutputError>) -> Void)
    /// <p>Retrieves the current AWS IoT SiteWise logging options.</p>
    func describeLoggingOptions(input: DescribeLoggingOptionsInput, completion: @escaping (SdkResult<DescribeLoggingOptionsOutputResponse, DescribeLoggingOptionsOutputError>) -> Void)
    /// <p>Retrieves information about a portal.</p>
    func describePortal(input: DescribePortalInput, completion: @escaping (SdkResult<DescribePortalOutputResponse, DescribePortalOutputError>) -> Void)
    /// <p>Retrieves information about a project.</p>
    func describeProject(input: DescribeProjectInput, completion: @escaping (SdkResult<DescribeProjectOutputResponse, DescribeProjectOutputError>) -> Void)
    /// <p>Disassociates a child asset from the given parent asset through a hierarchy defined in the
    ///       parent asset's model.</p>
    func disassociateAssets(input: DisassociateAssetsInput, completion: @escaping (SdkResult<DisassociateAssetsOutputResponse, DisassociateAssetsOutputError>) -> Void)
    /// <p>Gets aggregated values for an asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates">Querying
    ///         aggregates</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>To identify an asset property, you must specify one of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
    ///             </li>
    ///             <li>
    ///                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
    ///           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    ///             </li>
    ///          </ul>
    func getAssetPropertyAggregates(input: GetAssetPropertyAggregatesInput, completion: @escaping (SdkResult<GetAssetPropertyAggregatesOutputResponse, GetAssetPropertyAggregatesOutputError>) -> Void)
    /// <p>Gets an asset property's current value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values">Querying
    ///         current values</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>To identify an asset property, you must specify one of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
    ///             </li>
    ///             <li>
    ///                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
    ///           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    ///             </li>
    ///          </ul>
    func getAssetPropertyValue(input: GetAssetPropertyValueInput, completion: @escaping (SdkResult<GetAssetPropertyValueOutputResponse, GetAssetPropertyValueOutputError>) -> Void)
    /// <p>Gets the history of an asset property's values. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values">Querying
    ///         historical values</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>To identify an asset property, you must specify one of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
    ///             </li>
    ///             <li>
    ///                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
    ///           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    ///             </li>
    ///          </ul>
    func getAssetPropertyValueHistory(input: GetAssetPropertyValueHistoryInput, completion: @escaping (SdkResult<GetAssetPropertyValueHistoryOutputResponse, GetAssetPropertyValueHistoryOutputError>) -> Void)
    /// <p>Get interpolated values for an asset property for a specified time interval, during a
    ///       period of time. For example, you can use the this operation to return the interpolated temperature values for a wind turbine every 24 hours
    ///       over a duration of 7 days.</p>
    ///          <note>
    ///             <p>This API isn't available in China (Beijing).</p>
    ///          </note>
    ///          <p>To identify an asset property, you must specify one of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>assetId</code> and <code>propertyId</code> of an asset property.</p>
    ///             </li>
    ///             <li>
    ///                <p>A <code>propertyAlias</code>, which is a data stream alias (for example,
    ///           <code>/company/windfarm/3/turbine/7/temperature</code>). To define an asset property's alias, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    ///             </li>
    ///          </ul>
    func getInterpolatedAssetPropertyValues(input: GetInterpolatedAssetPropertyValuesInput, completion: @escaping (SdkResult<GetInterpolatedAssetPropertyValuesOutputResponse, GetInterpolatedAssetPropertyValuesOutputError>) -> Void)
    /// <p>Retrieves a paginated list of access policies for an identity (an AWS SSO user, an AWS SSO
    ///       group, or an IAM user) or an AWS IoT SiteWise Monitor resource (a portal or project).</p>
    func listAccessPolicies(input: ListAccessPoliciesInput, completion: @escaping (SdkResult<ListAccessPoliciesOutputResponse, ListAccessPoliciesOutputError>) -> Void)
    /// <p>Retrieves a paginated list of summaries of all asset models.</p>
    func listAssetModels(input: ListAssetModelsInput, completion: @escaping (SdkResult<ListAssetModelsOutputResponse, ListAssetModelsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of asset relationships for an asset. You can use this operation
    ///       to identify an asset's root asset and all associated assets between that asset and its
    ///       root.</p>
    func listAssetRelationships(input: ListAssetRelationshipsInput, completion: @escaping (SdkResult<ListAssetRelationshipsOutputResponse, ListAssetRelationshipsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of asset summaries.</p>
    ///          <p>You can use this operation to do the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>List assets based on a specific asset model.</p>
    ///             </li>
    ///             <li>
    ///                <p>List top-level assets.</p>
    ///             </li>
    ///          </ul>
    ///          <p>You can't use this operation to list all assets. To retrieve summaries for all of your
    ///       assets, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html">ListAssetModels</a> to get all of your asset model IDs. Then, use ListAssets to get all
    ///       assets for each asset model.</p>
    func listAssets(input: ListAssetsInput, completion: @escaping (SdkResult<ListAssetsOutputResponse, ListAssetsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of associated assets.</p>
    ///          <p>You can use this operation to do the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>List child assets associated to a parent asset by a hierarchy that you specify.</p>
    ///             </li>
    ///             <li>
    ///                <p>List an asset's parent asset.</p>
    ///             </li>
    ///          </ul>
    func listAssociatedAssets(input: ListAssociatedAssetsInput, completion: @escaping (SdkResult<ListAssociatedAssetsOutputResponse, ListAssociatedAssetsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of dashboards for an AWS IoT SiteWise Monitor project.</p>
    func listDashboards(input: ListDashboardsInput, completion: @escaping (SdkResult<ListDashboardsOutputResponse, ListDashboardsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of gateways.</p>
    func listGateways(input: ListGatewaysInput, completion: @escaping (SdkResult<ListGatewaysOutputResponse, ListGatewaysOutputError>) -> Void)
    /// <p>Retrieves a paginated list of AWS IoT SiteWise Monitor portals.</p>
    func listPortals(input: ListPortalsInput, completion: @escaping (SdkResult<ListPortalsOutputResponse, ListPortalsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of assets associated with an AWS IoT SiteWise Monitor project.</p>
    func listProjectAssets(input: ListProjectAssetsInput, completion: @escaping (SdkResult<ListProjectAssetsOutputResponse, ListProjectAssetsOutputError>) -> Void)
    /// <p>Retrieves a paginated list of projects for an AWS IoT SiteWise Monitor portal.</p>
    func listProjects(input: ListProjectsInput, completion: @escaping (SdkResult<ListProjectsOutputResponse, ListProjectsOutputError>) -> Void)
    /// <p>Retrieves the list of tags for an AWS IoT SiteWise resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Sets the default encryption configuration for the AWS
    ///       account. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html">Key management</a>
    ///       in the <i>AWS IoT SiteWise User Guide</i>.</p>
    func putDefaultEncryptionConfiguration(input: PutDefaultEncryptionConfigurationInput, completion: @escaping (SdkResult<PutDefaultEncryptionConfigurationOutputResponse, PutDefaultEncryptionConfigurationOutputError>) -> Void)
    /// <p>Sets logging options for AWS IoT SiteWise.</p>
    func putLoggingOptions(input: PutLoggingOptionsInput, completion: @escaping (SdkResult<PutLoggingOptionsOutputResponse, PutLoggingOptionsOutputError>) -> Void)
    /// <p>Adds tags to an AWS IoT SiteWise resource. If a tag already exists for the resource, this operation
    ///       updates the tag's value.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes a tag from an AWS IoT SiteWise resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates an existing access policy that specifies an identity's access to an AWS IoT SiteWise Monitor
    ///       portal or project resource.</p>
    func updateAccessPolicy(input: UpdateAccessPolicyInput, completion: @escaping (SdkResult<UpdateAccessPolicyOutputResponse, UpdateAccessPolicyOutputError>) -> Void)
    /// <p>Updates an asset's name. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    func updateAsset(input: UpdateAssetInput, completion: @escaping (SdkResult<UpdateAssetOutputResponse, UpdateAssetOutputError>) -> Void)
    /// <p>Updates an asset model and all of the assets that were created from the model. Each asset
    ///       created from the model inherits the updated asset model's property and hierarchy definitions.
    ///       For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html">Updating assets and models</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <important>
    ///             <p>This operation overwrites the existing model with the provided model. To avoid deleting
    ///         your asset model's properties or hierarchies, you must include their IDs and definitions in
    ///         the updated asset model payload. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModel.html">DescribeAssetModel</a>.</p>
    ///             <p>If you remove a property from an asset model, AWS IoT SiteWise deletes all previous data for that
    ///         property. If you remove a hierarchy definition from an asset model, AWS IoT SiteWise disassociates every
    ///         asset associated with that hierarchy. You can't change the type or data type of an existing
    ///         property.</p>
    ///          </important>
    func updateAssetModel(input: UpdateAssetModelInput, completion: @escaping (SdkResult<UpdateAssetModelOutputResponse, UpdateAssetModelOutputError>) -> Void)
    /// <p>Updates an asset property's alias and notification state.</p>
    ///          <important>
    ///             <p>This operation overwrites the property's existing alias and notification state. To keep
    ///         your existing property's alias or notification state, you must include the existing values
    ///         in the UpdateAssetProperty request. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html">DescribeAssetProperty</a>.</p>
    ///          </important>
    func updateAssetProperty(input: UpdateAssetPropertyInput, completion: @escaping (SdkResult<UpdateAssetPropertyOutputResponse, UpdateAssetPropertyOutputError>) -> Void)
    /// <p>Updates an AWS IoT SiteWise Monitor dashboard.</p>
    func updateDashboard(input: UpdateDashboardInput, completion: @escaping (SdkResult<UpdateDashboardOutputResponse, UpdateDashboardOutputError>) -> Void)
    /// <p>Updates a gateway's name.</p>
    func updateGateway(input: UpdateGatewayInput, completion: @escaping (SdkResult<UpdateGatewayOutputResponse, UpdateGatewayOutputError>) -> Void)
    /// <p>Updates a gateway capability configuration or defines a new capability configuration.
    ///       Each gateway capability defines data sources for a gateway. A capability configuration
    ///       can contain multiple data source configurations. If you define OPC-UA sources for a gateway in
    ///       the AWS IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To
    ///       list all capability configurations for a gateway, use <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html">DescribeGateway</a>.</p>
    func updateGatewayCapabilityConfiguration(input: UpdateGatewayCapabilityConfigurationInput, completion: @escaping (SdkResult<UpdateGatewayCapabilityConfigurationOutputResponse, UpdateGatewayCapabilityConfigurationOutputError>) -> Void)
    /// <p>Updates an AWS IoT SiteWise Monitor portal.</p>
    func updatePortal(input: UpdatePortalInput, completion: @escaping (SdkResult<UpdatePortalOutputResponse, UpdatePortalOutputError>) -> Void)
    /// <p>Updates an AWS IoT SiteWise Monitor project.</p>
    func updateProject(input: UpdateProjectInput, completion: @escaping (SdkResult<UpdateProjectOutputResponse, UpdateProjectOutputError>) -> Void)
}
