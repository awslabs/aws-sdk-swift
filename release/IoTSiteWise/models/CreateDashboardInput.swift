// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDashboardInput: Equatable {
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    public var clientToken: String?
    /// <p>The dashboard definition specified in a JSON literal. For detailed information, see
    ///       <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html">Creating dashboards (CLI)</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    public let dashboardDefinition: String?
    /// <p>A description for the dashboard.</p>
    public let dashboardDescription: String?
    /// <p>A friendly name for the dashboard.</p>
    public let dashboardName: String?
    /// <p>The ID of the project in which to create the dashboard.</p>
    public let projectId: String?
    /// <p>A list of key-value pairs that contain metadata for the dashboard. For more information,
    ///       see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your AWS IoT SiteWise
    ///         resources</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    public let tags: [String:String]?

    public init (
        clientToken: String? = nil,
        dashboardDefinition: String? = nil,
        dashboardDescription: String? = nil,
        dashboardName: String? = nil,
        projectId: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.clientToken = clientToken
        self.dashboardDefinition = dashboardDefinition
        self.dashboardDescription = dashboardDescription
        self.dashboardName = dashboardName
        self.projectId = projectId
        self.tags = tags
    }
}
