// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetAssetPropertyValueHistoryInputQueryItemMiddleware: Middleware {
    public let id: String = "GetAssetPropertyValueHistoryInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetAssetPropertyValueHistoryInput>,
                  next: H) -> Swift.Result<OperationOutput<GetAssetPropertyValueHistoryOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let endDate = input.operationInput.endDate {
            let endDateQueryItem = URLQueryItem(name: "endDate".urlPercentEncoding(), value: String(endDate.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(endDateQueryItem)
        }
        if let assetId = input.operationInput.assetId {
            let assetIdQueryItem = URLQueryItem(name: "assetId".urlPercentEncoding(), value: String(assetId).urlPercentEncoding())
            input.builder.withQueryItem(assetIdQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let propertyAlias = input.operationInput.propertyAlias {
            let propertyAliasQueryItem = URLQueryItem(name: "propertyAlias".urlPercentEncoding(), value: String(propertyAlias).urlPercentEncoding())
            input.builder.withQueryItem(propertyAliasQueryItem)
        }
        if let qualities = input.operationInput.qualities {
            qualities.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "qualities".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let timeOrdering = input.operationInput.timeOrdering {
            let timeOrderingQueryItem = URLQueryItem(name: "timeOrdering".urlPercentEncoding(), value: String(timeOrdering.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(timeOrderingQueryItem)
        }
        if let propertyId = input.operationInput.propertyId {
            let propertyIdQueryItem = URLQueryItem(name: "propertyId".urlPercentEncoding(), value: String(propertyId).urlPercentEncoding())
            input.builder.withQueryItem(propertyIdQueryItem)
        }
        if let startDate = input.operationInput.startDate {
            let startDateQueryItem = URLQueryItem(name: "startDate".urlPercentEncoding(), value: String(startDate.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(startDateQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetAssetPropertyValueHistoryInput>
    public typealias MOutput = OperationOutput<GetAssetPropertyValueHistoryOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetAssetPropertyValueHistoryOutputError>
}
