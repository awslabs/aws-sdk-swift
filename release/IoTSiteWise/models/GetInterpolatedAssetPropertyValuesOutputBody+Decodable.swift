// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInterpolatedAssetPropertyValuesOutputBody: Equatable {
    public let interpolatedAssetPropertyValues: [InterpolatedAssetPropertyValue]?
    public let nextToken: String?
}

extension GetInterpolatedAssetPropertyValuesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case interpolatedAssetPropertyValues
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let interpolatedAssetPropertyValuesContainer = try containerValues.decodeIfPresent([InterpolatedAssetPropertyValue].self, forKey: .interpolatedAssetPropertyValues)
        var interpolatedAssetPropertyValuesDecoded0:[InterpolatedAssetPropertyValue]? = nil
        if let interpolatedAssetPropertyValuesContainer = interpolatedAssetPropertyValuesContainer {
            interpolatedAssetPropertyValuesDecoded0 = [InterpolatedAssetPropertyValue]()
            for structure0 in interpolatedAssetPropertyValuesContainer {
                interpolatedAssetPropertyValuesDecoded0?.append(structure0)
            }
        }
        interpolatedAssetPropertyValues = interpolatedAssetPropertyValuesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
