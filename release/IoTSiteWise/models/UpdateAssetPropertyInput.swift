// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateAssetPropertyInput: Equatable {
    /// <p>The ID of the asset to be updated.</p>
    public let assetId: String?
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    public var clientToken: String?
    /// <p>The property alias that identifies the property, such as an OPC-UA server data stream path
    ///         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
    ///         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>If you omit this parameter, the alias is removed from the property.</p>
    public let propertyAlias: String?
    /// <p>The ID of the asset property to be updated.</p>
    public let propertyId: String?
    /// <p>The MQTT notification state (enabled or disabled) for this asset property.
    ///       When the notification state is enabled, AWS IoT SiteWise publishes property value
    ///       updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    ///          <p>If you omit this parameter, the notification state is set to <code>DISABLED</code>.</p>
    public let propertyNotificationState: PropertyNotificationState?

    public init (
        assetId: String? = nil,
        clientToken: String? = nil,
        propertyAlias: String? = nil,
        propertyId: String? = nil,
        propertyNotificationState: PropertyNotificationState? = nil
    )
    {
        self.assetId = assetId
        self.clientToken = clientToken
        self.propertyAlias = propertyAlias
        self.propertyId = propertyId
        self.propertyNotificationState = propertyNotificationState
    }
}
