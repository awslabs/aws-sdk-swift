// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribePortalOutput: Equatable {
    /// <p>Contains the configuration information of an alarm created in a AWS IoT SiteWise Monitor portal.</p>
    public let alarms: Alarms?
    /// <p>The email address that sends alarm notifications.</p>
    public let notificationSenderEmail: String?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the portal, which has the following format.</p>
    ///         <p>
    ///             <code>arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}</code>
    ///          </p>
    public let portalArn: String?
    /// <p>The service to use to authenticate users to the portal.</p>
    public let portalAuthMode: AuthMode?
    /// <p>The AWS SSO application generated client ID (used with AWS SSO APIs). AWS IoT SiteWise includes
    ///         <code>portalClientId</code> for only portals that use AWS SSO to authenticate users.</p>
    public let portalClientId: String?
    /// <p>The AWS administrator's contact email address.</p>
    public let portalContactEmail: String?
    /// <p>The date the portal was created, in Unix epoch time.</p>
    public let portalCreationDate: Date?
    /// <p>The portal's description.</p>
    public let portalDescription: String?
    /// <p>The ID of the portal.</p>
    public let portalId: String?
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    public let portalLastUpdateDate: Date?
    /// <p>The portal's logo image, which is available at a URL.</p>
    public let portalLogoImageLocation: ImageLocation?
    /// <p>The name of the portal.</p>
    public let portalName: String?
    /// <p>The URL for the AWS IoT SiteWise Monitor portal. You can use this URL to access portals that
    ///       use AWS SSO for authentication. For portals that use IAM for authentication, you must use the
    ///       AWS IoT SiteWise console to get a URL that you can use to access the portal.</p>
    public let portalStartUrl: String?
    /// <p>The current status of the portal, which contains a state and any error message.</p>
    public let portalStatus: PortalStatus?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your AWS IoT SiteWise
    ///       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for AWS IoT SiteWise Monitor</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    public let roleArn: String?

    public init (
        alarms: Alarms? = nil,
        notificationSenderEmail: String? = nil,
        portalArn: String? = nil,
        portalAuthMode: AuthMode? = nil,
        portalClientId: String? = nil,
        portalContactEmail: String? = nil,
        portalCreationDate: Date? = nil,
        portalDescription: String? = nil,
        portalId: String? = nil,
        portalLastUpdateDate: Date? = nil,
        portalLogoImageLocation: ImageLocation? = nil,
        portalName: String? = nil,
        portalStartUrl: String? = nil,
        portalStatus: PortalStatus? = nil,
        roleArn: String? = nil
    )
    {
        self.alarms = alarms
        self.notificationSenderEmail = notificationSenderEmail
        self.portalArn = portalArn
        self.portalAuthMode = portalAuthMode
        self.portalClientId = portalClientId
        self.portalContactEmail = portalContactEmail
        self.portalCreationDate = portalCreationDate
        self.portalDescription = portalDescription
        self.portalId = portalId
        self.portalLastUpdateDate = portalLastUpdateDate
        self.portalLogoImageLocation = portalLogoImageLocation
        self.portalName = portalName
        self.portalStartUrl = portalStartUrl
        self.portalStatus = portalStatus
        self.roleArn = roleArn
    }
}
