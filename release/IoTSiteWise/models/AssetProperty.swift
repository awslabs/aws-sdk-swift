// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains asset property information.</p>
public struct AssetProperty: Equatable {
    /// <p>The property alias that identifies the property, such as an OPC-UA server data stream path
    ///         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
    ///         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    public let alias: String?
    /// <p>The data type of the asset property.</p>
    public let dataType: PropertyDataType?
    /// <p>The data type of the structure for this property. This parameter exists on properties that
    ///       have the <code>STRUCT</code> data type.</p>
    public let dataTypeSpec: String?
    /// <p>The ID of the asset property.</p>
    public let id: String?
    /// <p>The name of the property.</p>
    public let name: String?
    /// <p>The asset property's notification topic and state. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html">UpdateAssetProperty</a>.</p>
    public let notification: PropertyNotification?
    /// <p>The unit (such as <code>Newtons</code> or <code>RPM</code>) of the asset property.</p>
    public let unit: String?

    public init (
        alias: String? = nil,
        dataType: PropertyDataType? = nil,
        dataTypeSpec: String? = nil,
        id: String? = nil,
        name: String? = nil,
        notification: PropertyNotification? = nil,
        unit: String? = nil
    )
    {
        self.alias = alias
        self.dataType = dataType
        self.dataTypeSpec = dataTypeSpec
        self.id = id
        self.name = name
        self.notification = notification
        self.unit = unit
    }
}
