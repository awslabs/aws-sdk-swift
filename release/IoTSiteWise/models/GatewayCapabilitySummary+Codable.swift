// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GatewayCapabilitySummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case capabilityNamespace
        case capabilitySyncStatus
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let capabilityNamespace = capabilityNamespace {
            try encodeContainer.encode(capabilityNamespace, forKey: .capabilityNamespace)
        }
        if let capabilitySyncStatus = capabilitySyncStatus {
            try encodeContainer.encode(capabilitySyncStatus.rawValue, forKey: .capabilitySyncStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let capabilityNamespaceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .capabilityNamespace)
        capabilityNamespace = capabilityNamespaceDecoded
        let capabilitySyncStatusDecoded = try containerValues.decodeIfPresent(CapabilitySyncStatus.self, forKey: .capabilitySyncStatus)
        capabilitySyncStatus = capabilitySyncStatusDecoded
    }
}
