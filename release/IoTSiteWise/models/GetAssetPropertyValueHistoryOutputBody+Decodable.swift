// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAssetPropertyValueHistoryOutputBody: Equatable {
    public let assetPropertyValueHistory: [AssetPropertyValue]?
    public let nextToken: String?
}

extension GetAssetPropertyValueHistoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assetPropertyValueHistory
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetPropertyValueHistoryContainer = try containerValues.decodeIfPresent([AssetPropertyValue].self, forKey: .assetPropertyValueHistory)
        var assetPropertyValueHistoryDecoded0:[AssetPropertyValue]? = nil
        if let assetPropertyValueHistoryContainer = assetPropertyValueHistoryContainer {
            assetPropertyValueHistoryDecoded0 = [AssetPropertyValue]()
            for structure0 in assetPropertyValueHistoryContainer {
                assetPropertyValueHistoryDecoded0?.append(structure0)
            }
        }
        assetPropertyValueHistory = assetPropertyValueHistoryDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
