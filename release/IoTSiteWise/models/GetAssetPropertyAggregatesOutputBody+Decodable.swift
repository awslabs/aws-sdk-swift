// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAssetPropertyAggregatesOutputBody: Equatable {
    public let aggregatedValues: [AggregatedValue]?
    public let nextToken: String?
}

extension GetAssetPropertyAggregatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aggregatedValues
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let aggregatedValuesContainer = try containerValues.decodeIfPresent([AggregatedValue].self, forKey: .aggregatedValues)
        var aggregatedValuesDecoded0:[AggregatedValue]? = nil
        if let aggregatedValuesContainer = aggregatedValuesContainer {
            aggregatedValuesDecoded0 = [AggregatedValue]()
            for structure0 in aggregatedValuesContainer {
                aggregatedValuesDecoded0?.append(structure0)
            }
        }
        aggregatedValues = aggregatedValuesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
