// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDashboardsOutputBody: Equatable {
    public let dashboardSummaries: [DashboardSummary]?
    public let nextToken: String?
}

extension ListDashboardsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dashboardSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dashboardSummariesContainer = try containerValues.decodeIfPresent([DashboardSummary].self, forKey: .dashboardSummaries)
        var dashboardSummariesDecoded0:[DashboardSummary]? = nil
        if let dashboardSummariesContainer = dashboardSummariesContainer {
            dashboardSummariesDecoded0 = [DashboardSummary]()
            for structure0 in dashboardSummariesContainer {
                dashboardSummariesDecoded0?.append(structure0)
            }
        }
        dashboardSummaries = dashboardSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
