// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePortalOutputBody: Equatable {
    public let portalId: String?
    public let portalArn: String?
    public let portalName: String?
    public let portalDescription: String?
    public let portalClientId: String?
    public let portalStartUrl: String?
    public let portalContactEmail: String?
    public let portalStatus: PortalStatus?
    public let portalCreationDate: Date?
    public let portalLastUpdateDate: Date?
    public let portalLogoImageLocation: ImageLocation?
    public let roleArn: String?
    public let portalAuthMode: AuthMode?
    public let notificationSenderEmail: String?
    public let alarms: Alarms?
}

extension DescribePortalOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarms
        case notificationSenderEmail
        case portalArn
        case portalAuthMode
        case portalClientId
        case portalContactEmail
        case portalCreationDate
        case portalDescription
        case portalId
        case portalLastUpdateDate
        case portalLogoImageLocation
        case portalName
        case portalStartUrl
        case portalStatus
        case roleArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let portalIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalId)
        portalId = portalIdDecoded
        let portalArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalArn)
        portalArn = portalArnDecoded
        let portalNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalName)
        portalName = portalNameDecoded
        let portalDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalDescription)
        portalDescription = portalDescriptionDecoded
        let portalClientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalClientId)
        portalClientId = portalClientIdDecoded
        let portalStartUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalStartUrl)
        portalStartUrl = portalStartUrlDecoded
        let portalContactEmailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .portalContactEmail)
        portalContactEmail = portalContactEmailDecoded
        let portalStatusDecoded = try containerValues.decodeIfPresent(PortalStatus.self, forKey: .portalStatus)
        portalStatus = portalStatusDecoded
        let portalCreationDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .portalCreationDate)
        portalCreationDate = portalCreationDateDecoded
        let portalLastUpdateDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .portalLastUpdateDate)
        portalLastUpdateDate = portalLastUpdateDateDecoded
        let portalLogoImageLocationDecoded = try containerValues.decodeIfPresent(ImageLocation.self, forKey: .portalLogoImageLocation)
        portalLogoImageLocation = portalLogoImageLocationDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let portalAuthModeDecoded = try containerValues.decodeIfPresent(AuthMode.self, forKey: .portalAuthMode)
        portalAuthMode = portalAuthModeDecoded
        let notificationSenderEmailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .notificationSenderEmail)
        notificationSenderEmail = notificationSenderEmailDecoded
        let alarmsDecoded = try containerValues.decodeIfPresent(Alarms.self, forKey: .alarms)
        alarms = alarmsDecoded
    }
}
