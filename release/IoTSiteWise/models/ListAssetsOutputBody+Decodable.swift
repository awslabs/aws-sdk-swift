// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssetsOutputBody: Equatable {
    public let assetSummaries: [AssetSummary]?
    public let nextToken: String?
}

extension ListAssetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assetSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetSummariesContainer = try containerValues.decodeIfPresent([AssetSummary].self, forKey: .assetSummaries)
        var assetSummariesDecoded0:[AssetSummary]? = nil
        if let assetSummariesContainer = assetSummariesContainer {
            assetSummariesDecoded0 = [AssetSummary]()
            for structure0 in assetSummariesContainer {
                assetSummariesDecoded0?.append(structure0)
            }
        }
        assetSummaries = assetSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
