// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PropertyDataType {
    case boolean
    case double
    case integer
    case string
    case `struct`
    case sdkUnknown(String)
}

extension PropertyDataType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PropertyDataType] {
        return [
            .boolean,
            .double,
            .integer,
            .string,
            .struct,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .boolean: return "BOOLEAN"
        case .double: return "DOUBLE"
        case .integer: return "INTEGER"
        case .string: return "STRING"
        case .struct: return "STRUCT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PropertyDataType(rawValue: rawValue) ?? PropertyDataType.sdkUnknown(rawValue)
    }
}
