// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreatePortalInput: Equatable {
    /// <p>Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal.
    ///   You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see .</p>
    public let alarms: Alarms?
    /// <p>A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.</p>
    public var clientToken: String?
    /// <p>The email address that sends alarm notifications.</p>
    ///          <important>
    ///             <p>If you use the AWS IoT Events managed AWS Lambda function to manage your emails, you must
    ///         <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html">verify the sender email address in Amazon SES</a>.</p>
    ///          </important>
    public let notificationSenderEmail: String?
    /// <p>The service to use to authenticate users to the portal. Choose from the following
    ///       options:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>SSO</code> – The portal uses AWS Single Sign-On to authenticate users and manage
    ///           user permissions. Before you can create a portal that uses AWS SSO, you must enable AWS SSO.
    ///           For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso">Enabling AWS SSO</a> in the
    ///             <i>AWS IoT SiteWise User Guide</i>. This option is only available in AWS Regions other than
    ///           the China Regions.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>IAM</code> – The portal uses AWS Identity and Access Management (IAM) to authenticate users and manage
    ///           user permissions. This option is only available in the China Regions.</p>
    ///             </li>
    ///          </ul>
    ///          <p>You can't change this value after you create a portal.</p>
    ///          <p>Default: <code>SSO</code>
    ///          </p>
    public let portalAuthMode: AuthMode?
    /// <p>The AWS administrator's contact email address.</p>
    public let portalContactEmail: String?
    /// <p>A description for the portal.</p>
    public let portalDescription: String?
    /// <p>A logo image to display in the portal. Upload a square, high-resolution image. The
    ///       image is displayed on a dark background.</p>
    public let portalLogoImageFile: ImageFile?
    /// <p>A friendly name for the portal.</p>
    public let portalName: String?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of a service role that allows the portal's users to access your AWS IoT SiteWise
    ///       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for AWS IoT SiteWise Monitor</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    public let roleArn: String?
    /// <p>A list of key-value pairs that contain metadata for the portal. For more information, see
    ///         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your AWS IoT SiteWise
    ///         resources</a> in the <i>AWS IoT SiteWise User Guide</i>.</p>
    public let tags: [String:String]?

    public init (
        alarms: Alarms? = nil,
        clientToken: String? = nil,
        notificationSenderEmail: String? = nil,
        portalAuthMode: AuthMode? = nil,
        portalContactEmail: String? = nil,
        portalDescription: String? = nil,
        portalLogoImageFile: ImageFile? = nil,
        portalName: String? = nil,
        roleArn: String? = nil,
        tags: [String:String]? = nil
    )
    {
        self.alarms = alarms
        self.clientToken = clientToken
        self.notificationSenderEmail = notificationSenderEmail
        self.portalAuthMode = portalAuthMode
        self.portalContactEmail = portalContactEmail
        self.portalDescription = portalDescription
        self.portalLogoImageFile = portalLogoImageFile
        self.portalName = portalName
        self.roleArn = roleArn
        self.tags = tags
    }
}
