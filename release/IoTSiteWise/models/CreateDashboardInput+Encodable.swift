// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDashboardInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientToken
        case dashboardDefinition
        case dashboardDescription
        case dashboardName
        case projectId
        case tags
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let dashboardDefinition = dashboardDefinition {
            try encodeContainer.encode(dashboardDefinition, forKey: .dashboardDefinition)
        }
        if let dashboardDescription = dashboardDescription {
            try encodeContainer.encode(dashboardDescription, forKey: .dashboardDescription)
        }
        if let dashboardName = dashboardName {
            try encodeContainer.encode(dashboardName, forKey: .dashboardName)
        }
        if let projectId = projectId {
            try encodeContainer.encode(projectId, forKey: .projectId)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .tags)
            for (dictKey0, tagmap0) in tags {
                try tagsContainer.encode(tagmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
