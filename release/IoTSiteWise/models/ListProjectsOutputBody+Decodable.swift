// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProjectsOutputBody: Equatable {
    public let projectSummaries: [ProjectSummary]?
    public let nextToken: String?
}

extension ListProjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case projectSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectSummariesContainer = try containerValues.decodeIfPresent([ProjectSummary].self, forKey: .projectSummaries)
        var projectSummariesDecoded0:[ProjectSummary]? = nil
        if let projectSummariesContainer = projectSummariesContainer {
            projectSummariesDecoded0 = [ProjectSummary]()
            for structure0 in projectSummariesContainer {
                projectSummariesDecoded0?.append(structure0)
            }
        }
        projectSummaries = projectSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
