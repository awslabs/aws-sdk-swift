// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAssetModelInputBody: Equatable {
    public let assetModelName: String?
    public let assetModelDescription: String?
    public let assetModelProperties: [AssetModelProperty]?
    public let assetModelHierarchies: [AssetModelHierarchy]?
    public let assetModelCompositeModels: [AssetModelCompositeModel]?
    public let clientToken: String?
}

extension UpdateAssetModelInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assetModelCompositeModels
        case assetModelDescription
        case assetModelHierarchies
        case assetModelName
        case assetModelProperties
        case clientToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetModelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .assetModelName)
        assetModelName = assetModelNameDecoded
        let assetModelDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .assetModelDescription)
        assetModelDescription = assetModelDescriptionDecoded
        let assetModelPropertiesContainer = try containerValues.decodeIfPresent([AssetModelProperty].self, forKey: .assetModelProperties)
        var assetModelPropertiesDecoded0:[AssetModelProperty]? = nil
        if let assetModelPropertiesContainer = assetModelPropertiesContainer {
            assetModelPropertiesDecoded0 = [AssetModelProperty]()
            for structure0 in assetModelPropertiesContainer {
                assetModelPropertiesDecoded0?.append(structure0)
            }
        }
        assetModelProperties = assetModelPropertiesDecoded0
        let assetModelHierarchiesContainer = try containerValues.decodeIfPresent([AssetModelHierarchy].self, forKey: .assetModelHierarchies)
        var assetModelHierarchiesDecoded0:[AssetModelHierarchy]? = nil
        if let assetModelHierarchiesContainer = assetModelHierarchiesContainer {
            assetModelHierarchiesDecoded0 = [AssetModelHierarchy]()
            for structure0 in assetModelHierarchiesContainer {
                assetModelHierarchiesDecoded0?.append(structure0)
            }
        }
        assetModelHierarchies = assetModelHierarchiesDecoded0
        let assetModelCompositeModelsContainer = try containerValues.decodeIfPresent([AssetModelCompositeModel].self, forKey: .assetModelCompositeModels)
        var assetModelCompositeModelsDecoded0:[AssetModelCompositeModel]? = nil
        if let assetModelCompositeModelsContainer = assetModelCompositeModelsContainer {
            assetModelCompositeModelsDecoded0 = [AssetModelCompositeModel]()
            for structure0 in assetModelCompositeModelsContainer {
                assetModelCompositeModelsDecoded0?.append(structure0)
            }
        }
        assetModelCompositeModels = assetModelCompositeModelsDecoded0
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
    }
}
