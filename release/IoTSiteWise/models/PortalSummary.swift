// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains a portal summary.</p>
public struct PortalSummary: Equatable {
    /// <p>The date the portal was created, in Unix epoch time.</p>
    public let creationDate: Date?
    /// <p>The portal's description.</p>
    public let description: String?
    /// <p>The ID of the portal.</p>
    public let id: String?
    /// <p>The date the portal was last updated, in Unix epoch time.</p>
    public let lastUpdateDate: Date?
    /// <p>The name of the portal.</p>
    public let name: String?
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the service role that allows the portal's users to access your AWS IoT SiteWise
    ///       resources on your behalf. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html">Using service roles for AWS IoT SiteWise Monitor</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    public let roleArn: String?
    /// <p>The URL for the AWS IoT SiteWise Monitor portal. You can use this URL to access portals that
    ///       use AWS SSO for authentication. For portals that use IAM for authentication, you must use the
    ///       AWS IoT SiteWise console to get a URL that you can use to access the portal.</p>
    public let startUrl: String?
    /// <p>Contains information about the current status of a portal.</p>
    public let status: PortalStatus?

    public init (
        creationDate: Date? = nil,
        description: String? = nil,
        id: String? = nil,
        lastUpdateDate: Date? = nil,
        name: String? = nil,
        roleArn: String? = nil,
        startUrl: String? = nil,
        status: PortalStatus? = nil
    )
    {
        self.creationDate = creationDate
        self.description = description
        self.id = id
        self.lastUpdateDate = lastUpdateDate
        self.name = name
        self.roleArn = roleArn
        self.startUrl = startUrl
        self.status = status
    }
}
