// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetInterpolatedAssetPropertyValuesInput: Equatable {
    /// <p>The ID of the asset.</p>
    public let assetId: String?
    /// <p>The inclusive end of the range from which to interpolate data, expressed in seconds in
    ///       Unix epoch time.</p>
    public let endTimeInSeconds: Int?
    /// <p>The nanosecond offset converted from <code>endTimeInSeconds</code>.</p>
    public let endTimeOffsetInNanos: Int?
    /// <p>The time interval in seconds over which to interpolate data. Each interval starts when the
    ///       previous one ends.</p>
    public let intervalInSeconds: Int?
    /// <p>The maximum number of results to be returned per paginated request.
    ///       If not specified, the default value is 10.</p>
    public let maxResults: Int?
    /// <p>The token to be used for the next set of paginated results.</p>
    public let nextToken: String?
    /// <p>The property alias that identifies the property, such as an OPC-UA server data stream path
    ///         (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see
    ///         <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the
    ///         <i>AWS IoT SiteWise User Guide</i>.</p>
    public let propertyAlias: String?
    /// <p>The ID of the asset property.</p>
    public let propertyId: String?
    /// <p>The quality of the asset property value. You can use this parameter as a filter to choose
    ///       only the asset property values that have a specific quality.</p>
    public let quality: Quality?
    /// <p>The exclusive start of the range from which to interpolate data, expressed in seconds in
    ///       Unix epoch time.</p>
    public let startTimeInSeconds: Int?
    /// <p>The nanosecond offset converted from <code>startTimeInSeconds</code>.</p>
    public let startTimeOffsetInNanos: Int?
    /// <p>The interpolation type.</p>
    ///          <p>Valid values: <code>LINEAR_INTERPOLATION</code>
    ///          </p>
    public let type: String?

    public init (
        assetId: String? = nil,
        endTimeInSeconds: Int? = nil,
        endTimeOffsetInNanos: Int? = nil,
        intervalInSeconds: Int? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        propertyAlias: String? = nil,
        propertyId: String? = nil,
        quality: Quality? = nil,
        startTimeInSeconds: Int? = nil,
        startTimeOffsetInNanos: Int? = nil,
        type: String? = nil
    )
    {
        self.assetId = assetId
        self.endTimeInSeconds = endTimeInSeconds
        self.endTimeOffsetInNanos = endTimeOffsetInNanos
        self.intervalInSeconds = intervalInSeconds
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.propertyAlias = propertyAlias
        self.propertyId = propertyId
        self.quality = quality
        self.startTimeInSeconds = startTimeInSeconds
        self.startTimeOffsetInNanos = startTimeOffsetInNanos
        self.type = type
    }
}
