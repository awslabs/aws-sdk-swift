// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssetModelsOutputBody: Equatable {
    public let assetModelSummaries: [AssetModelSummary]?
    public let nextToken: String?
}

extension ListAssetModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assetModelSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let assetModelSummariesContainer = try containerValues.decodeIfPresent([AssetModelSummary].self, forKey: .assetModelSummaries)
        var assetModelSummariesDecoded0:[AssetModelSummary]? = nil
        if let assetModelSummariesContainer = assetModelSummariesContainer {
            assetModelSummariesDecoded0 = [AssetModelSummary]()
            for structure0 in assetModelSummariesContainer {
                assetModelSummariesDecoded0?.append(structure0)
            }
        }
        assetModelSummaries = assetModelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
