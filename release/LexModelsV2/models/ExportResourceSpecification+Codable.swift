// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExportResourceSpecification: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case botExportSpecification
        case botLocaleExportSpecification
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let botExportSpecification = botExportSpecification {
            try encodeContainer.encode(botExportSpecification, forKey: .botExportSpecification)
        }
        if let botLocaleExportSpecification = botLocaleExportSpecification {
            try encodeContainer.encode(botLocaleExportSpecification, forKey: .botLocaleExportSpecification)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botExportSpecificationDecoded = try containerValues.decodeIfPresent(BotExportSpecification.self, forKey: .botExportSpecification)
        botExportSpecification = botExportSpecificationDecoded
        let botLocaleExportSpecificationDecoded = try containerValues.decodeIfPresent(BotLocaleExportSpecification.self, forKey: .botLocaleExportSpecification)
        botLocaleExportSpecification = botLocaleExportSpecificationDecoded
    }
}
