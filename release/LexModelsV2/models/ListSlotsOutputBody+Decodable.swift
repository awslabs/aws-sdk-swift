// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSlotsOutputBody: Equatable {
    public let botId: String?
    public let botVersion: String?
    public let localeId: String?
    public let intentId: String?
    public let slotSummaries: [SlotSummary]?
    public let nextToken: String?
}

extension ListSlotsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botVersion
        case intentId
        case localeId
        case nextToken
        case slotSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let localeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .localeId)
        localeId = localeIdDecoded
        let intentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .intentId)
        intentId = intentIdDecoded
        let slotSummariesContainer = try containerValues.decodeIfPresent([SlotSummary].self, forKey: .slotSummaries)
        var slotSummariesDecoded0:[SlotSummary]? = nil
        if let slotSummariesContainer = slotSummariesContainer {
            slotSummariesDecoded0 = [SlotSummary]()
            for structure0 in slotSummariesContainer {
                slotSummariesDecoded0?.append(structure0)
            }
        }
        slotSummaries = slotSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
