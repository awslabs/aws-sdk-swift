// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSlotTypesOutputBody: Equatable {
    public let botId: String?
    public let botVersion: String?
    public let localeId: String?
    public let slotTypeSummaries: [SlotTypeSummary]?
    public let nextToken: String?
}

extension ListSlotTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botVersion
        case localeId
        case nextToken
        case slotTypeSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let localeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .localeId)
        localeId = localeIdDecoded
        let slotTypeSummariesContainer = try containerValues.decodeIfPresent([SlotTypeSummary].self, forKey: .slotTypeSummaries)
        var slotTypeSummariesDecoded0:[SlotTypeSummary]? = nil
        if let slotTypeSummariesContainer = slotTypeSummariesContainer {
            slotTypeSummariesDecoded0 = [SlotTypeSummary]()
            for structure0 in slotTypeSummariesContainer {
                slotTypeSummariesDecoded0?.append(structure0)
            }
        }
        slotTypeSummaries = slotTypeSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
