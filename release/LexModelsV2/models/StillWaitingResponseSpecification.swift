// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Defines the messages that Amazon Lex sends to a user to remind them that
///          the bot is waiting for a response.</p>
public struct StillWaitingResponseSpecification: Equatable {
    /// <p>Indicates that the user can interrupt the response by speaking while
    ///          the message is being played.</p>
    public let allowInterrupt: Bool?
    /// <p>How often a message should be sent to the user. Minimum of 1 second,
    ///          maximum of 5 minutes.</p>
    public let frequencyInSeconds: Int?
    /// <p>One or more message groups, each containing one or more messages,
    ///          that define the prompts that Amazon Lex sends to the user.</p>
    public let messageGroups: [MessageGroup]?
    /// <p>If Amazon Lex waits longer than this length of time for a response, it
    ///          will stop sending messages.</p>
    public let timeoutInSeconds: Int?

    public init (
        allowInterrupt: Bool? = nil,
        frequencyInSeconds: Int? = nil,
        messageGroups: [MessageGroup]? = nil,
        timeoutInSeconds: Int? = nil
    )
    {
        self.allowInterrupt = allowInterrupt
        self.frequencyInSeconds = frequencyInSeconds
        self.messageGroups = messageGroups
        self.timeoutInSeconds = timeoutInSeconds
    }
}
