// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides the bot parameters required for importing a bot.</p>
public struct BotImportSpecification: Equatable {
    /// <p>The name that Amazon Lex should use for the bot.</p>
    public let botName: String?
    /// <p>A list of tags to add to the bot. You can only add tags when you
    ///          import a bot. You can't use the <code>UpdateBot</code> operation to
    ///          update tags. To update tags, use the <code>TagResource</code>
    ///          operation.</p>
    public let botTags: [String:String]?
    /// <p>By default, data stored by Amazon Lex is encrypted. The
    ///             <code>DataPrivacy</code> structure provides settings that determine
    ///          how Amazon Lex handles special cases of securing the data for your bot.
    ///       </p>
    public let dataPrivacy: DataPrivacy?
    /// <p>The time, in seconds, that Amazon Lex should keep information about a
    ///          user's conversation with the bot. </p>
    ///          <p>A user interaction remains active for the amount of time specified.
    ///          If no conversation occurs during this time, the session expires and
    ///          Amazon Lex deletes any data provided before the timeout.</p>
    ///          <p>You can specify between 60 (1 minute) and 86,400 (24 hours)
    ///          seconds.</p>
    public let idleSessionTTLInSeconds: Int?
    /// <p>The Amazon Resource Name (ARN) of the IAM role used to build and run
    ///          the bot.</p>
    public let roleArn: String?
    /// <p>A list of tags to add to the test alias for a bot. You can only add
    ///          tags when you import a bot. You can't use the <code>UpdateAlias</code>
    ///          operation to update tags. To update tags on the test alias, use the
    ///             <code>TagResource</code> operation.</p>
    public let testBotAliasTags: [String:String]?

    public init (
        botName: String? = nil,
        botTags: [String:String]? = nil,
        dataPrivacy: DataPrivacy? = nil,
        idleSessionTTLInSeconds: Int? = nil,
        roleArn: String? = nil,
        testBotAliasTags: [String:String]? = nil
    )
    {
        self.botName = botName
        self.botTags = botTags
        self.dataPrivacy = dataPrivacy
        self.idleSessionTTLInSeconds = idleSessionTTLInSeconds
        self.roleArn = roleArn
        self.testBotAliasTags = testBotAliasTags
    }
}
