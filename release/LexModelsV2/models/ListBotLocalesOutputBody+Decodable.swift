// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotLocalesOutputBody: Equatable {
    public let botId: String?
    public let botVersion: String?
    public let nextToken: String?
    public let botLocaleSummaries: [BotLocaleSummary]?
}

extension ListBotLocalesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botLocaleSummaries
        case botVersion
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let botLocaleSummariesContainer = try containerValues.decodeIfPresent([BotLocaleSummary].self, forKey: .botLocaleSummaries)
        var botLocaleSummariesDecoded0:[BotLocaleSummary]? = nil
        if let botLocaleSummariesContainer = botLocaleSummariesContainer {
            botLocaleSummariesDecoded0 = [BotLocaleSummary]()
            for structure0 in botLocaleSummariesContainer {
                botLocaleSummariesDecoded0?.append(structure0)
            }
        }
        botLocaleSummaries = botLocaleSummariesDecoded0
    }
}
