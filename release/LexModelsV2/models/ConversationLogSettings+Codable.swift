// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConversationLogSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case audioLogSettings
        case textLogSettings
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let audioLogSettings = audioLogSettings {
            var audioLogSettingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .audioLogSettings)
            for audiologsettingslist0 in audioLogSettings {
                try audioLogSettingsContainer.encode(audiologsettingslist0)
            }
        }
        if let textLogSettings = textLogSettings {
            var textLogSettingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .textLogSettings)
            for textlogsettingslist0 in textLogSettings {
                try textLogSettingsContainer.encode(textlogsettingslist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textLogSettingsContainer = try containerValues.decodeIfPresent([TextLogSetting].self, forKey: .textLogSettings)
        var textLogSettingsDecoded0:[TextLogSetting]? = nil
        if let textLogSettingsContainer = textLogSettingsContainer {
            textLogSettingsDecoded0 = [TextLogSetting]()
            for structure0 in textLogSettingsContainer {
                textLogSettingsDecoded0?.append(structure0)
            }
        }
        textLogSettings = textLogSettingsDecoded0
        let audioLogSettingsContainer = try containerValues.decodeIfPresent([AudioLogSetting].self, forKey: .audioLogSettings)
        var audioLogSettingsDecoded0:[AudioLogSetting]? = nil
        if let audioLogSettingsContainer = audioLogSettingsContainer {
            audioLogSettingsDecoded0 = [AudioLogSetting]()
            for structure0 in audioLogSettingsContainer {
                audioLogSettingsDecoded0?.append(structure0)
            }
        }
        audioLogSettings = audioLogSettingsDecoded0
    }
}
