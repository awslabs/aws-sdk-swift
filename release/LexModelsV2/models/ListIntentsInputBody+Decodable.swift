// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIntentsInputBody: Equatable {
    public let sortBy: IntentSortBy?
    public let filters: [IntentFilter]?
    public let maxResults: Int?
    public let nextToken: String?
}

extension ListIntentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filters
        case maxResults
        case nextToken
        case sortBy
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sortByDecoded = try containerValues.decodeIfPresent(IntentSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let filtersContainer = try containerValues.decodeIfPresent([IntentFilter].self, forKey: .filters)
        var filtersDecoded0:[IntentFilter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [IntentFilter]()
            for structure0 in filtersContainer {
                filtersDecoded0?.append(structure0)
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
