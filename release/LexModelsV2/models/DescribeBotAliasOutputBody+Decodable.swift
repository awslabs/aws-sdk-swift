// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBotAliasOutputBody: Equatable {
    public let botAliasId: String?
    public let botAliasName: String?
    public let description: String?
    public let botVersion: String?
    public let botAliasLocaleSettings: [String:BotAliasLocaleSettings]?
    public let conversationLogSettings: ConversationLogSettings?
    public let sentimentAnalysisSettings: SentimentAnalysisSettings?
    public let botAliasHistoryEvents: [BotAliasHistoryEvent]?
    public let botAliasStatus: BotAliasStatus?
    public let botId: String?
    public let creationDateTime: Date?
    public let lastUpdatedDateTime: Date?
}

extension DescribeBotAliasOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botAliasHistoryEvents
        case botAliasId
        case botAliasLocaleSettings
        case botAliasName
        case botAliasStatus
        case botId
        case botVersion
        case conversationLogSettings
        case creationDateTime
        case description
        case lastUpdatedDateTime
        case sentimentAnalysisSettings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botAliasIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botAliasId)
        botAliasId = botAliasIdDecoded
        let botAliasNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botAliasName)
        botAliasName = botAliasNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let botAliasLocaleSettingsContainer = try containerValues.decodeIfPresent([String:BotAliasLocaleSettings].self, forKey: .botAliasLocaleSettings)
        var botAliasLocaleSettingsDecoded0: [String:BotAliasLocaleSettings]? = nil
        if let botAliasLocaleSettingsContainer = botAliasLocaleSettingsContainer {
            botAliasLocaleSettingsDecoded0 = [String:BotAliasLocaleSettings]()
            for (key0, botaliaslocalesettings0) in botAliasLocaleSettingsContainer {
                botAliasLocaleSettingsDecoded0?[key0] = botaliaslocalesettings0
            }
        }
        botAliasLocaleSettings = botAliasLocaleSettingsDecoded0
        let conversationLogSettingsDecoded = try containerValues.decodeIfPresent(ConversationLogSettings.self, forKey: .conversationLogSettings)
        conversationLogSettings = conversationLogSettingsDecoded
        let sentimentAnalysisSettingsDecoded = try containerValues.decodeIfPresent(SentimentAnalysisSettings.self, forKey: .sentimentAnalysisSettings)
        sentimentAnalysisSettings = sentimentAnalysisSettingsDecoded
        let botAliasHistoryEventsContainer = try containerValues.decodeIfPresent([BotAliasHistoryEvent].self, forKey: .botAliasHistoryEvents)
        var botAliasHistoryEventsDecoded0:[BotAliasHistoryEvent]? = nil
        if let botAliasHistoryEventsContainer = botAliasHistoryEventsContainer {
            botAliasHistoryEventsDecoded0 = [BotAliasHistoryEvent]()
            for structure0 in botAliasHistoryEventsContainer {
                botAliasHistoryEventsDecoded0?.append(structure0)
            }
        }
        botAliasHistoryEvents = botAliasHistoryEventsDecoded0
        let botAliasStatusDecoded = try containerValues.decodeIfPresent(BotAliasStatus.self, forKey: .botAliasStatus)
        botAliasStatus = botAliasStatusDecoded
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
        let lastUpdatedDateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastUpdatedDateTime)
        lastUpdatedDateTime = lastUpdatedDateTimeDecoded
    }
}
