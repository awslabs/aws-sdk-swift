// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBotVersionOutputBody: Equatable {
    public let botId: String?
    public let description: String?
    public let botVersion: String?
    public let botVersionLocaleSpecification: [String:BotVersionLocaleDetails]?
    public let botStatus: BotStatus?
    public let creationDateTime: Date?
}

extension CreateBotVersionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botStatus
        case botVersion
        case botVersionLocaleSpecification
        case creationDateTime
        case description
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let botVersionLocaleSpecificationContainer = try containerValues.decodeIfPresent([String:BotVersionLocaleDetails].self, forKey: .botVersionLocaleSpecification)
        var botVersionLocaleSpecificationDecoded0: [String:BotVersionLocaleDetails]? = nil
        if let botVersionLocaleSpecificationContainer = botVersionLocaleSpecificationContainer {
            botVersionLocaleSpecificationDecoded0 = [String:BotVersionLocaleDetails]()
            for (key0, botversionlocaledetails0) in botVersionLocaleSpecificationContainer {
                botVersionLocaleSpecificationDecoded0?[key0] = botversionlocaledetails0
            }
        }
        botVersionLocaleSpecification = botVersionLocaleSpecificationDecoded0
        let botStatusDecoded = try containerValues.decodeIfPresent(BotStatus.self, forKey: .botStatus)
        botStatus = botStatusDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
    }
}
