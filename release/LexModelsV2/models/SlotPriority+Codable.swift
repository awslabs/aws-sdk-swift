// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SlotPriority: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case priority
        case slotId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let priority = priority {
            try encodeContainer.encode(priority, forKey: .priority)
        }
        if let slotId = slotId {
            try encodeContainer.encode(slotId, forKey: .slotId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let priorityDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .priority)
        priority = priorityDecoded
        let slotIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .slotId)
        slotId = slotIdDecoded
    }
}
