// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudWatchLogGroupLogDestination: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchLogGroupArn
        case logPrefix
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchLogGroupArn = cloudWatchLogGroupArn {
            try encodeContainer.encode(cloudWatchLogGroupArn, forKey: .cloudWatchLogGroupArn)
        }
        if let logPrefix = logPrefix {
            try encodeContainer.encode(logPrefix, forKey: .logPrefix)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cloudWatchLogGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cloudWatchLogGroupArn)
        cloudWatchLogGroupArn = cloudWatchLogGroupArnDecoded
        let logPrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logPrefix)
        logPrefix = logPrefixDecoded
    }
}
