// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateIntentInput: Equatable {
    /// <p>The identifier of the bot that contains the intent.</p>
    public let botId: String?
    /// <p>The version of the bot that contains the intent. Must be
    ///             <code>DRAFT</code>.</p>
    public let botVersion: String?
    /// <p>The new description of the intent.</p>
    public let description: String?
    /// <p>The new Lambda function to use between each turn of the conversation
    ///          with the bot.</p>
    public let dialogCodeHook: DialogCodeHookSettings?
    /// <p>The new Lambda function to call when all of the intents required
    ///          slots are provided and the intent is ready for fulfillment.</p>
    public let fulfillmentCodeHook: FulfillmentCodeHookSettings?
    /// <p>A new list of contexts that must be active in order for Amazon Lex to
    ///          consider the intent.</p>
    public let inputContexts: [InputContext]?
    /// <p>The new response that Amazon Lex sends the user when the intent is
    ///          closed.</p>
    public let intentClosingSetting: IntentClosingSetting?
    /// <p>New prompts that Amazon Lex sends to the user to confirm the completion
    ///          of an intent.</p>
    public let intentConfirmationSetting: IntentConfirmationSetting?
    /// <p>The unique identifier of the intent to update.</p>
    public let intentId: String?
    /// <p>The new name for the intent.</p>
    public let intentName: String?
    /// <p>New configuration settings for connecting to an Amazon Kendra index.</p>
    public let kendraConfiguration: KendraConfiguration?
    /// <p>The identifier of the language and locale where this intent is used.
    ///          The string must match one of the supported locales. For more
    ///          information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.</p>
    public let localeId: String?
    /// <p>A new list of contexts that Amazon Lex activates when the intent is
    ///          fulfilled.</p>
    public let outputContexts: [OutputContext]?
    /// <p>The signature of the new built-in intent to use as the parent of
    ///          this intent.</p>
    public let parentIntentSignature: String?
    /// <p>New utterances used to invoke the intent.</p>
    public let sampleUtterances: [SampleUtterance]?
    /// <p>A new list of slots and their priorities that are contained by the
    ///          intent.</p>
    public let slotPriorities: [SlotPriority]?

    public init (
        botId: String? = nil,
        botVersion: String? = nil,
        description: String? = nil,
        dialogCodeHook: DialogCodeHookSettings? = nil,
        fulfillmentCodeHook: FulfillmentCodeHookSettings? = nil,
        inputContexts: [InputContext]? = nil,
        intentClosingSetting: IntentClosingSetting? = nil,
        intentConfirmationSetting: IntentConfirmationSetting? = nil,
        intentId: String? = nil,
        intentName: String? = nil,
        kendraConfiguration: KendraConfiguration? = nil,
        localeId: String? = nil,
        outputContexts: [OutputContext]? = nil,
        parentIntentSignature: String? = nil,
        sampleUtterances: [SampleUtterance]? = nil,
        slotPriorities: [SlotPriority]? = nil
    )
    {
        self.botId = botId
        self.botVersion = botVersion
        self.description = description
        self.dialogCodeHook = dialogCodeHook
        self.fulfillmentCodeHook = fulfillmentCodeHook
        self.inputContexts = inputContexts
        self.intentClosingSetting = intentClosingSetting
        self.intentConfirmationSetting = intentConfirmationSetting
        self.intentId = intentId
        self.intentName = intentName
        self.kendraConfiguration = kendraConfiguration
        self.localeId = localeId
        self.outputContexts = outputContexts
        self.parentIntentSignature = parentIntentSignature
        self.sampleUtterances = sampleUtterances
        self.slotPriorities = slotPriorities
    }
}
