// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBuiltInSlotTypesOutputBody: Equatable {
    public let builtInSlotTypeSummaries: [BuiltInSlotTypeSummary]?
    public let nextToken: String?
    public let localeId: String?
}

extension ListBuiltInSlotTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case builtInSlotTypeSummaries
        case localeId
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let builtInSlotTypeSummariesContainer = try containerValues.decodeIfPresent([BuiltInSlotTypeSummary].self, forKey: .builtInSlotTypeSummaries)
        var builtInSlotTypeSummariesDecoded0:[BuiltInSlotTypeSummary]? = nil
        if let builtInSlotTypeSummariesContainer = builtInSlotTypeSummariesContainer {
            builtInSlotTypeSummariesDecoded0 = [BuiltInSlotTypeSummary]()
            for structure0 in builtInSlotTypeSummariesContainer {
                builtInSlotTypeSummariesDecoded0?.append(structure0)
            }
        }
        builtInSlotTypeSummaries = builtInSlotTypeSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let localeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .localeId)
        localeId = localeIdDecoded
    }
}
