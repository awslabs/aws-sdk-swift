// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBotVersionsOutputBody: Equatable {
    public let botId: String?
    public let botVersionSummaries: [BotVersionSummary]?
    public let nextToken: String?
}

extension ListBotVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botId
        case botVersionSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botId)
        botId = botIdDecoded
        let botVersionSummariesContainer = try containerValues.decodeIfPresent([BotVersionSummary].self, forKey: .botVersionSummaries)
        var botVersionSummariesDecoded0:[BotVersionSummary]? = nil
        if let botVersionSummariesContainer = botVersionSummariesContainer {
            botVersionSummariesDecoded0 = [BotVersionSummary]()
            for structure0 in botVersionSummariesContainer {
                botVersionSummariesDecoded0?.append(structure0)
            }
        }
        botVersionSummaries = botVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
