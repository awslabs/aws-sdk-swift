// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateSlotTypeInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description
        case parentSlotTypeSignature
        case slotTypeName
        case slotTypeValues
        case valueSelectionSetting
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let parentSlotTypeSignature = parentSlotTypeSignature {
            try encodeContainer.encode(parentSlotTypeSignature, forKey: .parentSlotTypeSignature)
        }
        if let slotTypeName = slotTypeName {
            try encodeContainer.encode(slotTypeName, forKey: .slotTypeName)
        }
        if let slotTypeValues = slotTypeValues {
            var slotTypeValuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .slotTypeValues)
            for slottypevalues0 in slotTypeValues {
                try slotTypeValuesContainer.encode(slottypevalues0)
            }
        }
        if let valueSelectionSetting = valueSelectionSetting {
            try encodeContainer.encode(valueSelectionSetting, forKey: .valueSelectionSetting)
        }
    }
}
