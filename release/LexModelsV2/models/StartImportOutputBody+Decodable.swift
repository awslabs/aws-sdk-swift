// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartImportOutputBody: Equatable {
    public let importId: String?
    public let resourceSpecification: ImportResourceSpecification?
    public let mergeStrategy: MergeStrategy?
    public let importStatus: ImportStatus?
    public let creationDateTime: Date?
}

extension StartImportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationDateTime
        case importId
        case importStatus
        case mergeStrategy
        case resourceSpecification
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .importId)
        importId = importIdDecoded
        let resourceSpecificationDecoded = try containerValues.decodeIfPresent(ImportResourceSpecification.self, forKey: .resourceSpecification)
        resourceSpecification = resourceSpecificationDecoded
        let mergeStrategyDecoded = try containerValues.decodeIfPresent(MergeStrategy.self, forKey: .mergeStrategy)
        mergeStrategy = mergeStrategyDecoded
        let importStatusDecoded = try containerValues.decodeIfPresent(ImportStatus.self, forKey: .importStatus)
        importStatus = importStatusDecoded
        let creationDateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationDateTime)
        creationDateTime = creationDateTimeDecoded
    }
}
