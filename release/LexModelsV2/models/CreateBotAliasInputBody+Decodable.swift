// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBotAliasInputBody: Equatable {
    public let botAliasName: String?
    public let description: String?
    public let botVersion: String?
    public let botAliasLocaleSettings: [String:BotAliasLocaleSettings]?
    public let conversationLogSettings: ConversationLogSettings?
    public let sentimentAnalysisSettings: SentimentAnalysisSettings?
    public let tags: [String:String]?
}

extension CreateBotAliasInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botAliasLocaleSettings
        case botAliasName
        case botVersion
        case conversationLogSettings
        case description
        case sentimentAnalysisSettings
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botAliasNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botAliasName)
        botAliasName = botAliasNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let botVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botVersion)
        botVersion = botVersionDecoded
        let botAliasLocaleSettingsContainer = try containerValues.decodeIfPresent([String:BotAliasLocaleSettings].self, forKey: .botAliasLocaleSettings)
        var botAliasLocaleSettingsDecoded0: [String:BotAliasLocaleSettings]? = nil
        if let botAliasLocaleSettingsContainer = botAliasLocaleSettingsContainer {
            botAliasLocaleSettingsDecoded0 = [String:BotAliasLocaleSettings]()
            for (key0, botaliaslocalesettings0) in botAliasLocaleSettingsContainer {
                botAliasLocaleSettingsDecoded0?[key0] = botaliaslocalesettings0
            }
        }
        botAliasLocaleSettings = botAliasLocaleSettingsDecoded0
        let conversationLogSettingsDecoded = try containerValues.decodeIfPresent(ConversationLogSettings.self, forKey: .conversationLogSettings)
        conversationLogSettings = conversationLogSettingsDecoded
        let sentimentAnalysisSettingsDecoded = try containerValues.decodeIfPresent(SentimentAnalysisSettings.self, forKey: .sentimentAnalysisSettings)
        sentimentAnalysisSettings = sentimentAnalysisSettingsDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
    }
}
