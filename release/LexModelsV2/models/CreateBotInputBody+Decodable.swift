// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBotInputBody: Equatable {
    public let botName: String?
    public let description: String?
    public let roleArn: String?
    public let dataPrivacy: DataPrivacy?
    public let idleSessionTTLInSeconds: Int?
    public let botTags: [String:String]?
    public let testBotAliasTags: [String:String]?
}

extension CreateBotInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case botName
        case botTags
        case dataPrivacy
        case description
        case idleSessionTTLInSeconds
        case roleArn
        case testBotAliasTags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let botNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .botName)
        botName = botNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let dataPrivacyDecoded = try containerValues.decodeIfPresent(DataPrivacy.self, forKey: .dataPrivacy)
        dataPrivacy = dataPrivacyDecoded
        let idleSessionTTLInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .idleSessionTTLInSeconds)
        idleSessionTTLInSeconds = idleSessionTTLInSecondsDecoded
        let botTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .botTags)
        var botTagsDecoded0: [String:String]? = nil
        if let botTagsContainer = botTagsContainer {
            botTagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in botTagsContainer {
                botTagsDecoded0?[key0] = tagvalue0
            }
        }
        botTags = botTagsDecoded0
        let testBotAliasTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .testBotAliasTags)
        var testBotAliasTagsDecoded0: [String:String]? = nil
        if let testBotAliasTagsContainer = testBotAliasTagsContainer {
            testBotAliasTagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in testBotAliasTagsContainer {
                testBotAliasTagsDecoded0?[key0] = tagvalue0
            }
        }
        testBotAliasTags = testBotAliasTagsDecoded0
    }
}
