// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p/>
public struct UpdateMissionProfileInput: Equatable {
    /// <p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>
    public let contactPostPassDurationSeconds: Int?
    /// <p>Amount of time after a contact ends that you’d like to receive a CloudWatch event indicating the pass has finished.</p>
    public let contactPrePassDurationSeconds: Int?
    /// <p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i>
    ///             <code>Config</code> and a <i>to</i>
    ///             <code>Config</code>.</p>
    public let dataflowEdges: [[String]?]?
    /// <p>Smallest amount of time in seconds that you’d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>
    public let minimumViableContactDurationSeconds: Int?
    /// <p>UUID of a mission profile.</p>
    public let missionProfileId: String?
    /// <p>Name of a mission profile.</p>
    public let name: String?
    /// <p>ARN of a tracking <code>Config</code>.</p>
    public let trackingConfigArn: String?

    public init (
        contactPostPassDurationSeconds: Int? = nil,
        contactPrePassDurationSeconds: Int? = nil,
        dataflowEdges: [[String]?]? = nil,
        minimumViableContactDurationSeconds: Int? = nil,
        missionProfileId: String? = nil,
        name: String? = nil,
        trackingConfigArn: String? = nil
    )
    {
        self.contactPostPassDurationSeconds = contactPostPassDurationSeconds
        self.contactPrePassDurationSeconds = contactPrePassDurationSeconds
        self.dataflowEdges = dataflowEdges
        self.minimumViableContactDurationSeconds = minimumViableContactDurationSeconds
        self.missionProfileId = missionProfileId
        self.name = name
        self.trackingConfigArn = trackingConfigArn
    }
}
