// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactsInputBody: Equatable {
    public let maxResults: Int?
    public let nextToken: String?
    public let statusList: [ContactStatus]?
    public let startTime: Date?
    public let endTime: Date?
    public let groundStation: String?
    public let satelliteArn: String?
    public let missionProfileArn: String?
}

extension ListContactsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endTime
        case groundStation
        case maxResults
        case missionProfileArn
        case nextToken
        case satelliteArn
        case startTime
        case statusList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let statusListContainer = try containerValues.decodeIfPresent([ContactStatus].self, forKey: .statusList)
        var statusListDecoded0:[ContactStatus]? = nil
        if let statusListContainer = statusListContainer {
            statusListDecoded0 = [ContactStatus]()
            for string0 in statusListContainer {
                statusListDecoded0?.append(string0)
            }
        }
        statusList = statusListDecoded0
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let groundStationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groundStation)
        groundStation = groundStationDecoded
        let satelliteArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .satelliteArn)
        satelliteArn = satelliteArnDecoded
        let missionProfileArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .missionProfileArn)
        missionProfileArn = missionProfileArnDecoded
    }
}
