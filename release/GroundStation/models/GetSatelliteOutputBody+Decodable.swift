// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSatelliteOutputBody: Equatable {
    public let satelliteId: String?
    public let satelliteArn: String?
    public let noradSatelliteID: Int
    public let groundStations: [String]?
}

extension GetSatelliteOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groundStations
        case noradSatelliteID
        case satelliteArn
        case satelliteId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let satelliteIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .satelliteId)
        satelliteId = satelliteIdDecoded
        let satelliteArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .satelliteArn)
        satelliteArn = satelliteArnDecoded
        let noradSatelliteIDDecoded = try containerValues.decode(Int.self, forKey: .noradSatelliteID)
        noradSatelliteID = noradSatelliteIDDecoded
        let groundStationsContainer = try containerValues.decodeIfPresent([String].self, forKey: .groundStations)
        var groundStationsDecoded0:[String]? = nil
        if let groundStationsContainer = groundStationsContainer {
            groundStationsDecoded0 = [String]()
            for string0 in groundStationsContainer {
                groundStationsDecoded0?.append(string0)
            }
        }
        groundStations = groundStationsDecoded0
    }
}
