// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConfigsOutputBody: Equatable {
    public let nextToken: String?
    public let configList: [ConfigListItem]?
}

extension ListConfigsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let configListContainer = try containerValues.decodeIfPresent([ConfigListItem].self, forKey: .configList)
        var configListDecoded0:[ConfigListItem]? = nil
        if let configListContainer = configListContainer {
            configListDecoded0 = [ConfigListItem]()
            for structure0 in configListContainer {
                configListDecoded0?.append(structure0)
            }
        }
        configList = configListDecoded0
    }
}
