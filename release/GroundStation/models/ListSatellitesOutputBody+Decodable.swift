// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSatellitesOutputBody: Equatable {
    public let nextToken: String?
    public let satellites: [SatelliteListItem]?
}

extension ListSatellitesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case satellites
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let satellitesContainer = try containerValues.decodeIfPresent([SatelliteListItem].self, forKey: .satellites)
        var satellitesDecoded0:[SatelliteListItem]? = nil
        if let satellitesContainer = satellitesContainer {
            satellitesDecoded0 = [SatelliteListItem]()
            for structure0 in satellitesContainer {
                satellitesDecoded0?.append(structure0)
            }
        }
        satellites = satellitesDecoded0
    }
}
