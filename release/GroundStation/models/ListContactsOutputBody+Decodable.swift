// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactsOutputBody: Equatable {
    public let nextToken: String?
    public let contactList: [ContactData]?
}

extension ListContactsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let contactListContainer = try containerValues.decodeIfPresent([ContactData].self, forKey: .contactList)
        var contactListDecoded0:[ContactData]? = nil
        if let contactListContainer = contactListContainer {
            contactListDecoded0 = [ContactData]()
            for structure0 in contactListContainer {
                contactListDecoded0?.append(structure0)
            }
        }
        contactList = contactListDecoded0
    }
}
