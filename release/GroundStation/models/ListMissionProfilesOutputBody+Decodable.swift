// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMissionProfilesOutputBody: Equatable {
    public let nextToken: String?
    public let missionProfileList: [MissionProfileListItem]?
}

extension ListMissionProfilesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case missionProfileList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let missionProfileListContainer = try containerValues.decodeIfPresent([MissionProfileListItem].self, forKey: .missionProfileList)
        var missionProfileListDecoded0:[MissionProfileListItem]? = nil
        if let missionProfileListContainer = missionProfileListContainer {
            missionProfileListDecoded0 = [MissionProfileListItem]()
            for structure0 in missionProfileListContainer {
                missionProfileListDecoded0?.append(structure0)
            }
        }
        missionProfileList = missionProfileListDecoded0
    }
}
