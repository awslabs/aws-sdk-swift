// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ConfigCapabilityType {
    case antennaDownlink
    case antennaDownlinkDemodDecode
    case antennaUplink
    case dataflowEndpoint
    case s3Recording
    case tracking
    case uplinkEcho
    case sdkUnknown(String)
}

extension ConfigCapabilityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ConfigCapabilityType] {
        return [
            .antennaDownlink,
            .antennaDownlinkDemodDecode,
            .antennaUplink,
            .dataflowEndpoint,
            .s3Recording,
            .tracking,
            .uplinkEcho,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .antennaDownlink: return "antenna-downlink"
        case .antennaDownlinkDemodDecode: return "antenna-downlink-demod-decode"
        case .antennaUplink: return "antenna-uplink"
        case .dataflowEndpoint: return "dataflow-endpoint"
        case .s3Recording: return "s3-recording"
        case .tracking: return "tracking"
        case .uplinkEcho: return "uplink-echo"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ConfigCapabilityType(rawValue: rawValue) ?? ConfigCapabilityType.sdkUnknown(rawValue)
    }
}
