// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDataflowEndpointGroupOutputBody: Equatable {
    public let dataflowEndpointGroupId: String?
    public let dataflowEndpointGroupArn: String?
    public let endpointsDetails: [EndpointDetails]?
    public let tags: [String:String]?
}

extension GetDataflowEndpointGroupOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataflowEndpointGroupArn
        case dataflowEndpointGroupId
        case endpointsDetails
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataflowEndpointGroupIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataflowEndpointGroupId)
        dataflowEndpointGroupId = dataflowEndpointGroupIdDecoded
        let dataflowEndpointGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataflowEndpointGroupArn)
        dataflowEndpointGroupArn = dataflowEndpointGroupArnDecoded
        let endpointsDetailsContainer = try containerValues.decodeIfPresent([EndpointDetails].self, forKey: .endpointsDetails)
        var endpointsDetailsDecoded0:[EndpointDetails]? = nil
        if let endpointsDetailsContainer = endpointsDetailsContainer {
            endpointsDetailsDecoded0 = [EndpointDetails]()
            for structure0 in endpointsDetailsContainer {
                endpointsDetailsDecoded0?.append(structure0)
            }
        }
        endpointsDetails = endpointsDetailsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, string0) in tagsContainer {
                tagsDecoded0?[key0] = string0
            }
        }
        tags = tagsDecoded0
    }
}
