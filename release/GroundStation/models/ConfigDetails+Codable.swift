// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConfigDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case antennaDemodDecodeDetails
        case endpointDetails
        case s3RecordingDetails
        case sdkUnknown
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
            case let .antennaDemodDecodeDetails(antennaDemodDecodeDetails):
                if let antennaDemodDecodeDetails = antennaDemodDecodeDetails {
                    try container.encode(antennaDemodDecodeDetails, forKey: .antennaDemodDecodeDetails)
                }
            case let .endpointDetails(endpointDetails):
                if let endpointDetails = endpointDetails {
                    try container.encode(endpointDetails, forKey: .endpointDetails)
                }
            case let .s3RecordingDetails(s3RecordingDetails):
                if let s3RecordingDetails = s3RecordingDetails {
                    try container.encode(s3RecordingDetails, forKey: .s3RecordingDetails)
                }
            case let .sdkUnknown(sdkUnknown):
                try container.encode(sdkUnknown, forKey: .sdkUnknown)
        }
    }

    public init (from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        let endpointDetailsDecoded = try values.decodeIfPresent(EndpointDetails.self, forKey: .endpointDetails)
        if let endpointDetails = endpointDetailsDecoded {
            self = .endpointDetails(endpointDetails)
            return
        }
        let antennaDemodDecodeDetailsDecoded = try values.decodeIfPresent(AntennaDemodDecodeDetails.self, forKey: .antennaDemodDecodeDetails)
        if let antennaDemodDecodeDetails = antennaDemodDecodeDetailsDecoded {
            self = .antennaDemodDecodeDetails(antennaDemodDecodeDetails)
            return
        }
        let s3RecordingDetailsDecoded = try values.decodeIfPresent(S3RecordingDetails.self, forKey: .s3RecordingDetails)
        if let s3RecordingDetails = s3RecordingDetailsDecoded {
            self = .s3RecordingDetails(s3RecordingDetails)
            return
        }
        self = .sdkUnknown("")
    }
}
