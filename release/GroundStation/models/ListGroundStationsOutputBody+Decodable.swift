// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGroundStationsOutputBody: Equatable {
    public let nextToken: String?
    public let groundStationList: [GroundStationData]?
}

extension ListGroundStationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groundStationList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let groundStationListContainer = try containerValues.decodeIfPresent([GroundStationData].self, forKey: .groundStationList)
        var groundStationListDecoded0:[GroundStationData]? = nil
        if let groundStationListContainer = groundStationListContainer {
            groundStationListDecoded0 = [GroundStationData]()
            for structure0 in groundStationListContainer {
                groundStationListDecoded0?.append(structure0)
            }
        }
        groundStationList = groundStationListDecoded0
    }
}
