// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListGroupsInput: Equatable {
    /// <p>A list of <code>Filter</code> objects, which is used in the <code>ListUsers</code> and <code>ListGroups</code> request. </p>
    public let filters: [Filter]?
    /// <p>The globally unique identifier for the identity store, such as d-1234567890. In this example, d- is a fixed prefix, and 1234567890 is a randomly generated string which contains number and lower case letters. This value is generated at the time that a new identity store is created.</p>
    public let identityStoreId: String?
    /// <p>The maximum number of results to be returned per request, which is used in the <code>ListUsers</code> and <code>ListGroups</code> request to specify how many results to return in one page. The length limit is 50 characters.</p>
    public let maxResults: Int?
    /// <p>The pagination token used for the <code>ListUsers</code> and <code>ListGroups</code> APIs. This value is generated by the identity store service and is returned in the API response if the total results are more than the size of one page, and when this token is used in the API request to search for the next page.</p>
    public let nextToken: String?

    public init (
        filters: [Filter]? = nil,
        identityStoreId: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil
    )
    {
        self.filters = filters
        self.identityStoreId = identityStoreId
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
