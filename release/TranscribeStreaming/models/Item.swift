// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A word, phrase, or punctuation mark that is transcribed from the input audio.</p>
public struct Item: Equatable {
    /// <p>A value between 0 and 1 for an item that is a confidence score that Amazon Transcribe assigns to each
    ///       word or phrase that it transcribes.</p>
    public let confidence: Double?
    /// <p>The word or punctuation that was recognized in the input audio.</p>
    public let content: String?
    /// <p>The offset from the beginning of the audio stream to the end of the audio that resulted in
    ///       the item.</p>
    public let endTime: Double
    /// <p>If speaker identification is enabled, shows the speakers identified in the real-time
    ///       stream.</p>
    public let speaker: String?
    /// <p>If partial result stabilization has been enabled, indicates whether the word or phrase in
    ///       the item is stable. If <code>Stable</code> is <code>true</code>, the result is stable.</p>
    public let stable: Bool?
    /// <p>The offset from the beginning of the audio stream to the beginning of the audio that
    ///       resulted in the item.</p>
    public let startTime: Double
    /// <p>The type of the item. <code>PRONUNCIATION</code> indicates that the item is a word that
    ///       was recognized in the input audio. <code>PUNCTUATION</code> indicates that the item was
    ///       interpreted as a pause in the input audio.</p>
    public let type: ItemType?
    /// <p>Indicates whether a word in the item matches a word in the vocabulary filter you've chosen
    ///       for your real-time stream. If <code>true</code> then a word in the item matches your
    ///       vocabulary filter.</p>
    public let vocabularyFilterMatch: Bool

    public init (
        confidence: Double? = nil,
        content: String? = nil,
        endTime: Double = 0.0,
        speaker: String? = nil,
        stable: Bool? = nil,
        startTime: Double = 0.0,
        type: ItemType? = nil,
        vocabularyFilterMatch: Bool = false
    )
    {
        self.confidence = confidence
        self.content = content
        self.endTime = endTime
        self.speaker = speaker
        self.stable = stable
        self.startTime = startTime
        self.type = type
        self.vocabularyFilterMatch = vocabularyFilterMatch
    }
}
