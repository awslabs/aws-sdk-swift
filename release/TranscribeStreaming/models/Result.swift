// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The result of transcribing a portion of the input audio stream. </p>
public struct Result: Equatable {
    /// <p>A list of possible transcriptions for the audio. Each alternative typically contains one
    ///         <code>item</code> that contains the result of the transcription.</p>
    public let alternatives: [Alternative]?
    /// <p>When channel identification is enabled, Amazon Transcribe transcribes the speech from each audio
    ///       channel separately.</p>
    ///          <p>You can use <code>ChannelId</code> to retrieve the transcription results for a single
    ///       channel in your audio stream.</p>
    public let channelId: String?
    /// <p>The offset in seconds from the beginning of the audio stream to the end of the
    ///       result.</p>
    public let endTime: Double
    /// <p>Amazon Transcribe divides the incoming audio stream into segments at natural points in the audio.
    ///       Transcription results are returned based on these segments. </p>
    ///          <p>The <code>IsPartial</code> field is <code>true</code> to indicate that Amazon Transcribe has
    ///       additional transcription data to send, <code>false</code> to indicate that this is the last
    ///       transcription result for the segment.</p>
    public let isPartial: Bool
    /// <p>A unique identifier for the result. </p>
    public let resultId: String?
    /// <p>The offset in seconds from the beginning of the audio stream to the beginning of the
    ///       result.</p>
    public let startTime: Double

    public init (
        alternatives: [Alternative]? = nil,
        channelId: String? = nil,
        endTime: Double = 0.0,
        isPartial: Bool = false,
        resultId: String? = nil,
        startTime: Double = 0.0
    )
    {
        self.alternatives = alternatives
        self.channelId = channelId
        self.endTime = endTime
        self.isPartial = isPartial
        self.resultId = resultId
        self.startTime = startTime
    }
}
