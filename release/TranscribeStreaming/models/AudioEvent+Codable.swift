// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AudioEvent: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case audioChunk = "AudioChunk"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let audioChunk = audioChunk {
            try encodeContainer.encode(audioChunk.base64EncodedString(), forKey: .audioChunk)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let audioChunkDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .audioChunk)
        audioChunk = audioChunkDecoded
    }
}
