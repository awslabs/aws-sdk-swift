// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CommitTransactionRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case commitDigest = "CommitDigest"
        case transactionId = "TransactionId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commitDigest = commitDigest {
            try encodeContainer.encode(commitDigest.base64EncodedString(), forKey: .commitDigest)
        }
        if let transactionId = transactionId {
            try encodeContainer.encode(transactionId, forKey: .transactionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transactionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transactionId)
        transactionId = transactionIdDecoded
        let commitDigestDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .commitDigest)
        commitDigest = commitDigestDecoded
    }
}
