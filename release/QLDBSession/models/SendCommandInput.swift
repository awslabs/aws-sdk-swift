// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SendCommandInput: Equatable {
    /// <p>Command to abort the current transaction.</p>
    public let abortTransaction: AbortTransactionRequest?
    /// <p>Command to commit the specified transaction.</p>
    public let commitTransaction: CommitTransactionRequest?
    /// <p>Command to end the current session.</p>
    public let endSession: EndSessionRequest?
    /// <p>Command to execute a statement in the specified transaction.</p>
    public let executeStatement: ExecuteStatementRequest?
    /// <p>Command to fetch a page.</p>
    public let fetchPage: FetchPageRequest?
    /// <p>Specifies the session token for the current command. A session token is constant
    ///          throughout the life of the session.</p>
    ///          <p>To obtain a session token, run the <code>StartSession</code> command. This
    ///             <code>SessionToken</code> is required for every subsequent command that is issued during
    ///          the current session.</p>
    public let sessionToken: String?
    /// <p>Command to start a new session. A session token is obtained as part of the
    ///          response.</p>
    public let startSession: StartSessionRequest?
    /// <p>Command to start a new transaction.</p>
    public let startTransaction: StartTransactionRequest?

    public init (
        abortTransaction: AbortTransactionRequest? = nil,
        commitTransaction: CommitTransactionRequest? = nil,
        endSession: EndSessionRequest? = nil,
        executeStatement: ExecuteStatementRequest? = nil,
        fetchPage: FetchPageRequest? = nil,
        sessionToken: String? = nil,
        startSession: StartSessionRequest? = nil,
        startTransaction: StartTransactionRequest? = nil
    )
    {
        self.abortTransaction = abortTransaction
        self.commitTransaction = commitTransaction
        self.endSession = endSession
        self.executeStatement = executeStatement
        self.fetchPage = fetchPage
        self.sessionToken = sessionToken
        self.startSession = startSession
        self.startTransaction = startTransaction
    }
}
