// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SendCommandOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: SendCommandOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.abortTransaction = output.abortTransaction
            self.commitTransaction = output.commitTransaction
            self.endSession = output.endSession
            self.executeStatement = output.executeStatement
            self.fetchPage = output.fetchPage
            self.startSession = output.startSession
            self.startTransaction = output.startTransaction
        } else {
            self.abortTransaction = nil
            self.commitTransaction = nil
            self.endSession = nil
            self.executeStatement = nil
            self.fetchPage = nil
            self.startSession = nil
            self.startTransaction = nil
        }
    }
}
