// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRepositoriesInputBody: Equatable {
    public let nextToken: String?
    public let sortBy: SortByEnum?
    public let order: OrderEnum?
}

extension ListRepositoriesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case order
        case sortBy
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(SortByEnum.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let orderDecoded = try containerValues.decodeIfPresent(OrderEnum.self, forKey: .order)
        order = orderDecoded
    }
}
