// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCommitInput: Equatable {
    /// <p>The name of the author who created the commit. This information is used as both the
    ///             author and committer for the commit.</p>
    public let authorName: String?
    /// <p>The name of the branch where you create the commit.</p>
    public let branchName: String?
    /// <p>The commit message you want to include in the commit. Commit messages are limited to
    ///             256 KB. If no message is specified, a default message is used.</p>
    public let commitMessage: String?
    /// <p>The files to delete in this commit. These files still exist in earlier commits.</p>
    public let deleteFiles: [DeleteFileEntry]?
    /// <p>The email address of the person who created the commit.</p>
    public let email: String?
    /// <p>If the commit contains deletions, whether to keep a folder or folder structure if the
    ///             changes leave the folders empty. If true, a ..gitkeep file is created for empty folders.
    ///             The default is false.</p>
    public let keepEmptyFolders: Bool
    /// <p>The ID of the commit that is the parent of the commit you create. Not required if this
    ///             is an empty repository.</p>
    public let parentCommitId: String?
    /// <p>The files to add or update in this commit.</p>
    public let putFiles: [PutFileEntry]?
    /// <p>The name of the repository where you create the commit.</p>
    public let repositoryName: String?
    /// <p>The file modes to update for files in this commit.</p>
    public let setFileModes: [SetFileModeEntry]?

    public init (
        authorName: String? = nil,
        branchName: String? = nil,
        commitMessage: String? = nil,
        deleteFiles: [DeleteFileEntry]? = nil,
        email: String? = nil,
        keepEmptyFolders: Bool = false,
        parentCommitId: String? = nil,
        putFiles: [PutFileEntry]? = nil,
        repositoryName: String? = nil,
        setFileModes: [SetFileModeEntry]? = nil
    )
    {
        self.authorName = authorName
        self.branchName = branchName
        self.commitMessage = commitMessage
        self.deleteFiles = deleteFiles
        self.email = email
        self.keepEmptyFolders = keepEmptyFolders
        self.parentCommitId = parentCommitId
        self.putFiles = putFiles
        self.repositoryName = repositoryName
        self.setFileModes = setFileModes
    }
}
