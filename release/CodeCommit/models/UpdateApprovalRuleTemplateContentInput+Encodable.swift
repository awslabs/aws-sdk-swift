// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateApprovalRuleTemplateContentInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approvalRuleTemplateName
        case existingRuleContentSha256
        case newRuleContent
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalRuleTemplateName = approvalRuleTemplateName {
            try encodeContainer.encode(approvalRuleTemplateName, forKey: .approvalRuleTemplateName)
        }
        if let existingRuleContentSha256 = existingRuleContentSha256 {
            try encodeContainer.encode(existingRuleContentSha256, forKey: .existingRuleContentSha256)
        }
        if let newRuleContent = newRuleContent {
            try encodeContainer.encode(newRuleContent, forKey: .newRuleContent)
        }
    }
}
