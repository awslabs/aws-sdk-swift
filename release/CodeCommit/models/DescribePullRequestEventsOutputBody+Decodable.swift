// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePullRequestEventsOutputBody: Equatable {
    public let pullRequestEvents: [PullRequestEvent]?
    public let nextToken: String?
}

extension DescribePullRequestEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case pullRequestEvents
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullRequestEventsContainer = try containerValues.decodeIfPresent([PullRequestEvent].self, forKey: .pullRequestEvents)
        var pullRequestEventsDecoded0:[PullRequestEvent]? = nil
        if let pullRequestEventsContainer = pullRequestEventsContainer {
            pullRequestEventsDecoded0 = [PullRequestEvent]()
            for structure0 in pullRequestEventsContainer {
                pullRequestEventsDecoded0?.append(structure0)
            }
        }
        pullRequestEvents = pullRequestEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
