// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchAssociateApprovalRuleTemplateWithRepositoriesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approvalRuleTemplateName
        case repositoryNames
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalRuleTemplateName = approvalRuleTemplateName {
            try encodeContainer.encode(approvalRuleTemplateName, forKey: .approvalRuleTemplateName)
        }
        if let repositoryNames = repositoryNames {
            var repositoryNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .repositoryNames)
            for repositorynamelist0 in repositoryNames {
                try repositoryNamesContainer.encode(repositorynamelist0)
            }
        }
    }
}
