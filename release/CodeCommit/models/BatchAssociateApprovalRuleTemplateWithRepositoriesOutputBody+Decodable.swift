// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAssociateApprovalRuleTemplateWithRepositoriesOutputBody: Equatable {
    public let associatedRepositoryNames: [String]?
    public let errors: [BatchAssociateApprovalRuleTemplateWithRepositoriesError]?
}

extension BatchAssociateApprovalRuleTemplateWithRepositoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case associatedRepositoryNames
        case errors
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let associatedRepositoryNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .associatedRepositoryNames)
        var associatedRepositoryNamesDecoded0:[String]? = nil
        if let associatedRepositoryNamesContainer = associatedRepositoryNamesContainer {
            associatedRepositoryNamesDecoded0 = [String]()
            for string0 in associatedRepositoryNamesContainer {
                associatedRepositoryNamesDecoded0?.append(string0)
            }
        }
        associatedRepositoryNames = associatedRepositoryNamesDecoded0
        let errorsContainer = try containerValues.decodeIfPresent([BatchAssociateApprovalRuleTemplateWithRepositoriesError].self, forKey: .errors)
        var errorsDecoded0:[BatchAssociateApprovalRuleTemplateWithRepositoriesError]? = nil
        if let errorsContainer = errorsContainer {
            errorsDecoded0 = [BatchAssociateApprovalRuleTemplateWithRepositoriesError]()
            for structure0 in errorsContainer {
                errorsDecoded0?.append(structure0)
            }
        }
        errors = errorsDecoded0
    }
}
