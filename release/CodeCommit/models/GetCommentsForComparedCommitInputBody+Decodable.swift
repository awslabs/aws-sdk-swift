// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommentsForComparedCommitInputBody: Equatable {
    public let repositoryName: String?
    public let beforeCommitId: String?
    public let afterCommitId: String?
    public let nextToken: String?
    public let maxResults: Int?
}

extension GetCommentsForComparedCommitInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case afterCommitId
        case beforeCommitId
        case maxResults
        case nextToken
        case repositoryName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let beforeCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .beforeCommitId)
        beforeCommitId = beforeCommitIdDecoded
        let afterCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .afterCommitId)
        afterCommitId = afterCommitIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
