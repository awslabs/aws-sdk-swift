// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFileOutputBody: Equatable {
    public let commitId: String?
    public let blobId: String?
    public let filePath: String?
    public let fileMode: FileModeTypeEnum?
    public let fileSize: Int
    public let fileContent: Data?
}

extension GetFileOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case blobId
        case commitId
        case fileContent
        case fileMode
        case filePath
        case fileSize
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commitId)
        commitId = commitIdDecoded
        let blobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .blobId)
        blobId = blobIdDecoded
        let filePathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .filePath)
        filePath = filePathDecoded
        let fileModeDecoded = try containerValues.decodeIfPresent(FileModeTypeEnum.self, forKey: .fileMode)
        fileMode = fileModeDecoded
        let fileSizeDecoded = try containerValues.decode(Int.self, forKey: .fileSize)
        fileSize = fileSizeDecoded
        let fileContentDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .fileContent)
        fileContent = fileContentDecoded
    }
}
