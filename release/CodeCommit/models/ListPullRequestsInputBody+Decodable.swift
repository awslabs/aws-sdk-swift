// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPullRequestsInputBody: Equatable {
    public let repositoryName: String?
    public let authorArn: String?
    public let pullRequestStatus: PullRequestStatusEnum?
    public let nextToken: String?
    public let maxResults: Int?
}

extension ListPullRequestsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authorArn
        case maxResults
        case nextToken
        case pullRequestStatus
        case repositoryName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let authorArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .authorArn)
        authorArn = authorArnDecoded
        let pullRequestStatusDecoded = try containerValues.decodeIfPresent(PullRequestStatusEnum.self, forKey: .pullRequestStatus)
        pullRequestStatus = pullRequestStatusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
