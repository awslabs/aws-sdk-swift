// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PostCommentForComparedCommitInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case afterCommitId
        case beforeCommitId
        case clientRequestToken
        case content
        case location
        case repositoryName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afterCommitId = afterCommitId {
            try encodeContainer.encode(afterCommitId, forKey: .afterCommitId)
        }
        if let beforeCommitId = beforeCommitId {
            try encodeContainer.encode(beforeCommitId, forKey: .beforeCommitId)
        }
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let content = content {
            try encodeContainer.encode(content, forKey: .content)
        }
        if let location = location {
            try encodeContainer.encode(location, forKey: .location)
        }
        if let repositoryName = repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
    }
}
