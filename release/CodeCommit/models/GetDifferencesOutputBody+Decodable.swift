// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDifferencesOutputBody: Equatable {
    public let differences: [Difference]?
    public let nextToken: String?
}

extension GetDifferencesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case differences
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let differencesContainer = try containerValues.decodeIfPresent([Difference].self, forKey: .differences)
        var differencesDecoded0:[Difference]? = nil
        if let differencesContainer = differencesContainer {
            differencesDecoded0 = [Difference]()
            for structure0 in differencesContainer {
                differencesDecoded0?.append(structure0)
            }
        }
        differences = differencesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
