// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutFileInput: Equatable {
    /// <p>The name of the branch where you want to add or update the file. If this is an empty
    ///             repository, this branch is created.</p>
    public let branchName: String?
    /// <p>A message about why this file was added or updated. Although it is optional, a message
    ///             makes the commit history for your repository more useful.</p>
    public let commitMessage: String?
    /// <p>An email address for the person adding or updating the file.</p>
    public let email: String?
    /// <p>The content of the file, in binary object format. </p>
    public let fileContent: Data?
    /// <p>The file mode permissions of the blob. Valid file mode permissions are listed
    ///             here.</p>
    public let fileMode: FileModeTypeEnum?
    /// <p>The name of the file you want to add or update, including the relative path to the file in the repository.</p>
    ///         <note>
    ///             <p>If the path does not currently exist in the repository, the path is created as part of adding
    ///                 the file.</p>
    ///          </note>
    public let filePath: String?
    /// <p>The name of the person adding or updating the file. Although it is optional, a name
    ///             makes the commit history for your repository more useful.</p>
    public let name: String?
    /// <p>The full commit ID of the head commit in the branch where you want to add or update the file. If this is an empty repository,
    ///             no commit ID is required. If this is not an empty repository, a commit ID is required. </p>
    ///         <p>The commit ID must match the ID of the head commit at the time of the operation.
    ///             Otherwise, an error occurs, and the file is not added or updated.</p>
    public let parentCommitId: String?
    /// <p>The name of the repository where you want to add or update the file.</p>
    public let repositoryName: String?

    public init (
        branchName: String? = nil,
        commitMessage: String? = nil,
        email: String? = nil,
        fileContent: Data? = nil,
        fileMode: FileModeTypeEnum? = nil,
        filePath: String? = nil,
        name: String? = nil,
        parentCommitId: String? = nil,
        repositoryName: String? = nil
    )
    {
        self.branchName = branchName
        self.commitMessage = commitMessage
        self.email = email
        self.fileContent = fileContent
        self.fileMode = fileMode
        self.filePath = filePath
        self.name = name
        self.parentCommitId = parentCommitId
        self.repositoryName = repositoryName
    }
}
