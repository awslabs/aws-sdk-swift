// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetCommentsForPullRequestInput: Equatable {
    /// <p>The full commit ID of the commit in the source branch that was the tip of the branch at the time the comment was made.</p>
    public let afterCommitId: String?
    /// <p>The full commit ID of the commit in the destination branch that was the tip of the branch at the time the pull request was created.</p>
    public let beforeCommitId: String?
    /// <p>A non-zero, non-negative integer used to limit the number of returned results. The default is 100 comments.
    ///             You can return up to 500 comments with a single request.</p>
    public let maxResults: Int?
    /// <p>An enumeration token that, when provided in a request, returns the next batch of the
    ///             results.</p>
    public let nextToken: String?
    /// <p>The system-generated ID of the pull request. To get this ID, use <a>ListPullRequests</a>.</p>
    public let pullRequestId: String?
    /// <p>The name of the repository that contains the pull request.</p>
    public let repositoryName: String?

    public init (
        afterCommitId: String? = nil,
        beforeCommitId: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        pullRequestId: String? = nil,
        repositoryName: String? = nil
    )
    {
        self.afterCommitId = afterCommitId
        self.beforeCommitId = beforeCommitId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.pullRequestId = pullRequestId
        self.repositoryName = repositoryName
    }
}
