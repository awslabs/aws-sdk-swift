// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PostCommentForComparedCommitInput: Equatable {
    /// <p>To establish the directionality of the comparison, the full commit ID of the after
    ///             commit.</p>
    public let afterCommitId: String?
    /// <p>To establish the directionality of the comparison, the full commit ID of the before
    ///             commit. Required for commenting on any commit unless that commit is the initial
    ///             commit.</p>
    public let beforeCommitId: String?
    /// <p>A unique, client-generated idempotency token that, when provided in a request, ensures
    ///             the request cannot be repeated with a changed parameter. If a request is received with
    ///             the same parameters and a token is included, the request returns information about the
    ///             initial request that used that token.</p>
    public var clientRequestToken: String?
    /// <p>The content of the comment you want to make.</p>
    public let content: String?
    /// <p>The location of the comparison where you want to comment.</p>
    public let location: Location?
    /// <p>The name of the repository where you want to post a comment on the comparison between commits.</p>
    public let repositoryName: String?

    public init (
        afterCommitId: String? = nil,
        beforeCommitId: String? = nil,
        clientRequestToken: String? = nil,
        content: String? = nil,
        location: Location? = nil,
        repositoryName: String? = nil
    )
    {
        self.afterCommitId = afterCommitId
        self.beforeCommitId = beforeCommitId
        self.clientRequestToken = clientRequestToken
        self.content = content
        self.location = location
        self.repositoryName = repositoryName
    }
}
