// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetCommitsInputBody: Equatable {
    public let commitIds: [String]?
    public let repositoryName: String?
}

extension BatchGetCommitsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case commitIds
        case repositoryName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let commitIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .commitIds)
        var commitIdsDecoded0:[String]? = nil
        if let commitIdsContainer = commitIdsContainer {
            commitIdsDecoded0 = [String]()
            for string0 in commitIdsContainer {
                commitIdsDecoded0?.append(string0)
            }
        }
        commitIds = commitIdsDecoded0
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
    }
}
