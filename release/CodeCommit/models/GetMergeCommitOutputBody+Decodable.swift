// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMergeCommitOutputBody: Equatable {
    public let sourceCommitId: String?
    public let destinationCommitId: String?
    public let baseCommitId: String?
    public let mergedCommitId: String?
}

extension GetMergeCommitOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case baseCommitId
        case destinationCommitId
        case mergedCommitId
        case sourceCommitId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceCommitId)
        sourceCommitId = sourceCommitIdDecoded
        let destinationCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationCommitId)
        destinationCommitId = destinationCommitIdDecoded
        let baseCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .baseCommitId)
        baseCommitId = baseCommitIdDecoded
        let mergedCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mergedCommitId)
        mergedCommitId = mergedCommitIdDecoded
    }
}
