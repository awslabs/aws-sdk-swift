// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPullRequestsOutputBody: Equatable {
    public let pullRequestIds: [String]?
    public let nextToken: String?
}

extension ListPullRequestsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case pullRequestIds
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullRequestIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .pullRequestIds)
        var pullRequestIdsDecoded0:[String]? = nil
        if let pullRequestIdsContainer = pullRequestIdsContainer {
            pullRequestIdsDecoded0 = [String]()
            for string0 in pullRequestIdsContainer {
                pullRequestIdsDecoded0?.append(string0)
            }
        }
        pullRequestIds = pullRequestIdsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
