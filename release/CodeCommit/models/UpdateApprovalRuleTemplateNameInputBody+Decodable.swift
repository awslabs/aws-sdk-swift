// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateApprovalRuleTemplateNameInputBody: Equatable {
    public let oldApprovalRuleTemplateName: String?
    public let newApprovalRuleTemplateName: String?
}

extension UpdateApprovalRuleTemplateNameInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case newApprovalRuleTemplateName
        case oldApprovalRuleTemplateName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let oldApprovalRuleTemplateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .oldApprovalRuleTemplateName)
        oldApprovalRuleTemplateName = oldApprovalRuleTemplateNameDecoded
        let newApprovalRuleTemplateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .newApprovalRuleTemplateName)
        newApprovalRuleTemplateName = newApprovalRuleTemplateNameDecoded
    }
}
