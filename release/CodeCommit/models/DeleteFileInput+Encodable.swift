// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeleteFileInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case branchName
        case commitMessage
        case email
        case filePath
        case keepEmptyFolders
        case name
        case parentCommitId
        case repositoryName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let branchName = branchName {
            try encodeContainer.encode(branchName, forKey: .branchName)
        }
        if let commitMessage = commitMessage {
            try encodeContainer.encode(commitMessage, forKey: .commitMessage)
        }
        if let email = email {
            try encodeContainer.encode(email, forKey: .email)
        }
        if let filePath = filePath {
            try encodeContainer.encode(filePath, forKey: .filePath)
        }
        if keepEmptyFolders != false {
            try encodeContainer.encode(keepEmptyFolders, forKey: .keepEmptyFolders)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let parentCommitId = parentCommitId {
            try encodeContainer.encode(parentCommitId, forKey: .parentCommitId)
        }
        if let repositoryName = repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
    }
}
