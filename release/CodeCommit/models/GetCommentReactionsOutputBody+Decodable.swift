// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCommentReactionsOutputBody: Equatable {
    public let reactionsForComment: [ReactionForComment]?
    public let nextToken: String?
}

extension GetCommentReactionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case reactionsForComment
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let reactionsForCommentContainer = try containerValues.decodeIfPresent([ReactionForComment].self, forKey: .reactionsForComment)
        var reactionsForCommentDecoded0:[ReactionForComment]? = nil
        if let reactionsForCommentContainer = reactionsForCommentContainer {
            reactionsForCommentDecoded0 = [ReactionForComment]()
            for structure0 in reactionsForCommentContainer {
                reactionsForCommentDecoded0?.append(structure0)
            }
        }
        reactionsForComment = reactionsForCommentDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
