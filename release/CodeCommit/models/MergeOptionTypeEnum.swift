// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MergeOptionTypeEnum {
    case fastForwardMerge
    case squashMerge
    case threeWayMerge
    case sdkUnknown(String)
}

extension MergeOptionTypeEnum : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MergeOptionTypeEnum] {
        return [
            .fastForwardMerge,
            .squashMerge,
            .threeWayMerge,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fastForwardMerge: return "FAST_FORWARD_MERGE"
        case .squashMerge: return "SQUASH_MERGE"
        case .threeWayMerge: return "THREE_WAY_MERGE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MergeOptionTypeEnum(rawValue: rawValue) ?? MergeOptionTypeEnum.sdkUnknown(rawValue)
    }
}
