// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct MergePullRequestByThreeWayInputBody: Equatable {
    public let pullRequestId: String?
    public let repositoryName: String?
    public let sourceCommitId: String?
    public let conflictDetailLevel: ConflictDetailLevelTypeEnum?
    public let conflictResolutionStrategy: ConflictResolutionStrategyTypeEnum?
    public let commitMessage: String?
    public let authorName: String?
    public let email: String?
    public let keepEmptyFolders: Bool
    public let conflictResolution: ConflictResolution?
}

extension MergePullRequestByThreeWayInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authorName
        case commitMessage
        case conflictDetailLevel
        case conflictResolution
        case conflictResolutionStrategy
        case email
        case keepEmptyFolders
        case pullRequestId
        case repositoryName
        case sourceCommitId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pullRequestIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pullRequestId)
        pullRequestId = pullRequestIdDecoded
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let sourceCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceCommitId)
        sourceCommitId = sourceCommitIdDecoded
        let conflictDetailLevelDecoded = try containerValues.decodeIfPresent(ConflictDetailLevelTypeEnum.self, forKey: .conflictDetailLevel)
        conflictDetailLevel = conflictDetailLevelDecoded
        let conflictResolutionStrategyDecoded = try containerValues.decodeIfPresent(ConflictResolutionStrategyTypeEnum.self, forKey: .conflictResolutionStrategy)
        conflictResolutionStrategy = conflictResolutionStrategyDecoded
        let commitMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commitMessage)
        commitMessage = commitMessageDecoded
        let authorNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .authorName)
        authorName = authorNameDecoded
        let emailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .email)
        email = emailDecoded
        let keepEmptyFoldersDecoded = try containerValues.decode(Bool.self, forKey: .keepEmptyFolders)
        keepEmptyFolders = keepEmptyFoldersDecoded
        let conflictResolutionDecoded = try containerValues.decodeIfPresent(ConflictResolution.self, forKey: .conflictResolution)
        conflictResolution = conflictResolutionDecoded
    }
}
