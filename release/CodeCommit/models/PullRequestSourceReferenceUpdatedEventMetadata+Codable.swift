// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PullRequestSourceReferenceUpdatedEventMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case afterCommitId
        case beforeCommitId
        case mergeBase
        case repositoryName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let afterCommitId = afterCommitId {
            try encodeContainer.encode(afterCommitId, forKey: .afterCommitId)
        }
        if let beforeCommitId = beforeCommitId {
            try encodeContainer.encode(beforeCommitId, forKey: .beforeCommitId)
        }
        if let mergeBase = mergeBase {
            try encodeContainer.encode(mergeBase, forKey: .mergeBase)
        }
        if let repositoryName = repositoryName {
            try encodeContainer.encode(repositoryName, forKey: .repositoryName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let beforeCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .beforeCommitId)
        beforeCommitId = beforeCommitIdDecoded
        let afterCommitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .afterCommitId)
        afterCommitId = afterCommitIdDecoded
        let mergeBaseDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mergeBase)
        mergeBase = mergeBaseDecoded
    }
}
