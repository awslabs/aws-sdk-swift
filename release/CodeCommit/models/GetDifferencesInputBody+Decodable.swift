// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDifferencesInputBody: Equatable {
    public let repositoryName: String?
    public let beforeCommitSpecifier: String?
    public let afterCommitSpecifier: String?
    public let beforePath: String?
    public let afterPath: String?
    public let maxResults: Int?
    public let nextToken: String?
}

extension GetDifferencesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case afterCommitSpecifier
        case afterPath
        case beforeCommitSpecifier
        case beforePath
        case repositoryName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repositoryName)
        repositoryName = repositoryNameDecoded
        let beforeCommitSpecifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .beforeCommitSpecifier)
        beforeCommitSpecifier = beforeCommitSpecifierDecoded
        let afterCommitSpecifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .afterCommitSpecifier)
        afterCommitSpecifier = afterCommitSpecifierDecoded
        let beforePathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .beforePath)
        beforePath = beforePathDecoded
        let afterPathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .afterPath)
        afterPath = afterPathDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
