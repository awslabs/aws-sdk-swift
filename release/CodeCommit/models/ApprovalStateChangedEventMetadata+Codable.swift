// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ApprovalStateChangedEventMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approvalStatus
        case revisionId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalStatus = approvalStatus {
            try encodeContainer.encode(approvalStatus.rawValue, forKey: .approvalStatus)
        }
        if let revisionId = revisionId {
            try encodeContainer.encode(revisionId, forKey: .revisionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionId)
        revisionId = revisionIdDecoded
        let approvalStatusDecoded = try containerValues.decodeIfPresent(ApprovalState.self, forKey: .approvalStatus)
        approvalStatus = approvalStatusDecoded
    }
}
