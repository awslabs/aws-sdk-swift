// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchAssociateApprovalRuleTemplateWithRepositoriesInputBody: Equatable {
    public let approvalRuleTemplateName: String?
    public let repositoryNames: [String]?
}

extension BatchAssociateApprovalRuleTemplateWithRepositoriesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case approvalRuleTemplateName
        case repositoryNames
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let approvalRuleTemplateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .approvalRuleTemplateName)
        approvalRuleTemplateName = approvalRuleTemplateNameDecoded
        let repositoryNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .repositoryNames)
        var repositoryNamesDecoded0:[String]? = nil
        if let repositoryNamesContainer = repositoryNamesContainer {
            repositoryNamesDecoded0 = [String]()
            for string0 in repositoryNamesContainer {
                repositoryNamesDecoded0?.append(string0)
            }
        }
        repositoryNames = repositoryNamesDecoded0
    }
}
