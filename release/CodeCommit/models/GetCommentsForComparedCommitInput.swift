// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetCommentsForComparedCommitInput: Equatable {
    /// <p>To establish the directionality of the comparison, the full commit ID of the after
    ///             commit.</p>
    public let afterCommitId: String?
    /// <p>To establish the directionality of the comparison, the full commit ID of the before
    ///             commit.</p>
    public let beforeCommitId: String?
    /// <p>A non-zero, non-negative integer used to limit the number of returned results. The
    ///             default is 100 comments, but you can configure up to 500.</p>
    public let maxResults: Int?
    /// <p>An enumeration token that when provided in a request, returns the next batch of the results. </p>
    public let nextToken: String?
    /// <p>The name of the repository where you want to compare commits.</p>
    public let repositoryName: String?

    public init (
        afterCommitId: String? = nil,
        beforeCommitId: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        repositoryName: String? = nil
    )
    {
        self.afterCommitId = afterCommitId
        self.beforeCommitId = beforeCommitId
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.repositoryName = repositoryName
    }
}
