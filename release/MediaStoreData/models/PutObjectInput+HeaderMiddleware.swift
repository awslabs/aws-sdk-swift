// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutObjectInputHeadersMiddleware: Middleware {
    public let id: String = "PutObjectInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<PutObjectInput>,
                  next: H) -> Swift.Result<OperationOutput<PutObjectOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let cacheControl = input.operationInput.cacheControl {
            input.builder.withHeader(name: "Cache-Control", value: String(cacheControl))
        }
        if let contentType = input.operationInput.contentType {
            input.builder.withHeader(name: "Content-Type", value: String(contentType))
        }
        if let storageClass = input.operationInput.storageClass {
            input.builder.withHeader(name: "x-amz-storage-class", value: String(storageClass.rawValue))
        }
        if let uploadAvailability = input.operationInput.uploadAvailability {
            input.builder.withHeader(name: "x-amz-upload-availability", value: String(uploadAvailability.rawValue))
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<PutObjectInput>
    public typealias MOutput = OperationOutput<PutObjectOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<PutObjectOutputError>
}
