// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterDeviceInputBody: Equatable {
    public let platform: Platform?
    public let token: String?
}

extension RegisterDeviceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case platform = "Platform"
        case token = "Token"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let platformDecoded = try containerValues.decodeIfPresent(Platform.self, forKey: .platform)
        platform = platformDecoded
        let tokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .token)
        token = tokenDecoded
    }
}
