// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Returned for a successful
///       ListRecordsRequest.
public struct ListRecordsOutput: Equatable {
    /// Total number of records.
    public let count: Int
    /// A boolean value
    ///       specifying whether to delete the dataset locally.
    public let datasetDeletedAfterRequestedSyncCount: Bool
    /// Indicates whether the dataset
    ///       exists.
    public let datasetExists: Bool
    /// Server sync count for this
    ///       dataset.
    public let datasetSyncCount: Int?
    /// The user/device that made the last
    ///       change to this record.
    public let lastModifiedBy: String?
    /// Names of merged
    ///       datasets.
    public let mergedDatasetNames: [String]?
    /// A pagination token for obtaining the next
    ///       page of results.
    public let nextToken: String?
    /// A list of all records.
    public let records: [Record]?
    /// A token containing a session ID,
    ///       identity ID, and expiration.
    public let syncSessionToken: String?

    public init (
        count: Int = 0,
        datasetDeletedAfterRequestedSyncCount: Bool = false,
        datasetExists: Bool = false,
        datasetSyncCount: Int? = nil,
        lastModifiedBy: String? = nil,
        mergedDatasetNames: [String]? = nil,
        nextToken: String? = nil,
        records: [Record]? = nil,
        syncSessionToken: String? = nil
    )
    {
        self.count = count
        self.datasetDeletedAfterRequestedSyncCount = datasetDeletedAfterRequestedSyncCount
        self.datasetExists = datasetExists
        self.datasetSyncCount = datasetSyncCount
        self.lastModifiedBy = lastModifiedBy
        self.mergedDatasetNames = mergedDatasetNames
        self.nextToken = nextToken
        self.records = records
        self.syncSessionToken = syncSessionToken
    }
}
