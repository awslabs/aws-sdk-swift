// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Returns properties of the user that you specify.</p>
public struct ListedUser: Equatable {
    /// <p>Provides the unique Amazon Resource Name (ARN) for the user that you want to learn
    ///       about.</p>
    public let arn: String?
    /// <p>Specifies the location that files are written to or read from an Amazon S3 bucket for the
    ///       user you specify by their ARN.</p>
    public let homeDirectory: String?
    /// <p>Specifies the type of landing directory (folder) you mapped for your users' home
    ///       directory. If you set it to <code>PATH</code>, the user will see the absolute Amazon S3 bucket
    ///       paths as is in their file transfer protocol clients. If you set it <code>LOGICAL</code>, you
    ///       will need to provide mappings in the <code>HomeDirectoryMappings</code> for how you want to
    ///       make Amazon S3 paths visible to your users.</p>
    public let homeDirectoryType: HomeDirectoryType?
    /// <p>Specifies the role that is in use by this user. A <i>role</i> is an AWS
    ///       Identity and Access Management (IAM) entity that, in this case, allows a file transfer
    ///       protocol-enabled server to act on a user's behalf. It allows the server to inherit the
    ///       trust relationship that enables that user to perform file operations to their Amazon S3
    ///       bucket.</p>
    ///          <note>
    ///
    ///             <p>The IAM role that controls your users' access to your Amazon S3 bucket for servers with <code>Domain=S3</code>, or your EFS file system for servers with <code>Domain=EFS</code>.
    ///         </p>
    ///             <p>The policies attached to this role determine the level of access you want to provide your users when
    ///         transferring files into and out of your S3 buckets or EFS file systems.</p>
    ///
    ///          </note>
    public let role: String?
    /// <p>Specifies the number of SSH public keys stored for the user you specified.</p>
    public let sshPublicKeyCount: Int?
    /// <p>Specifies the name of the user whose ARN was specified. User names are used for
    ///       authentication purposes.</p>
    public let userName: String?

    public init (
        arn: String? = nil,
        homeDirectory: String? = nil,
        homeDirectoryType: HomeDirectoryType? = nil,
        role: String? = nil,
        sshPublicKeyCount: Int? = nil,
        userName: String? = nil
    )
    {
        self.arn = arn
        self.homeDirectory = homeDirectory
        self.homeDirectoryType = homeDirectoryType
        self.role = role
        self.sshPublicKeyCount = sshPublicKeyCount
        self.userName = userName
    }
}
