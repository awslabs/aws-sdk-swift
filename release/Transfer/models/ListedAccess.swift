// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Lists the properties for one or more specified associated accesses.</p>
public struct ListedAccess: Equatable {
    /// <p>A unique identifier that might be required when you assume a role in another account. Think
    ///       of the <code>ExternalID</code> as a group membership mechanism that uses a unique identifier
    ///       (often a SID, but could be a group name or something else) as a basis. If the administrator of
    ///       the account to which the role belongs provided you with an external ID, then provide that
    ///       value in the <code>ExternalId</code> parameter. A cross-account role is usually set up to
    ///       trust everyone in an account. Therefore, the administrator of the trusting account might send
    ///       an external ID to the administrator of the trusted account. That way, only someone with the ID
    ///       can assume the role, rather than everyone in the account.</p>
    ///          <p>The regex used to validate this parameter is a string of characters consisting of
    ///       uppercase and lowercase alphanumeric characters with no spaces. You can also include
    ///       underscores or any of the following characters: =,.@:/-</p>
    public let externalId: String?
    /// <p>Specifies the landing directory (or folder), which is the location that files are written
    ///       to or read from in an Amazon S3 bucket, for the described access.</p>
    public let homeDirectory: String?
    /// <p>The type of landing directory (folder) that you want your users' home directory to be when
    ///       they log in to the server. If you set it to <code>PATH</code>, the user will see the absolute
    ///       Amazon S3 bucket paths as is in their file transfer protocol clients. If you set it to
    ///         <code>LOGICAL</code>, you must provide mappings in the <code>HomeDirectoryMappings</code>
    ///       for how you want to make Amazon S3 paths visible to your users.</p>
    public let homeDirectoryType: HomeDirectoryType?
    /// <p>The AWS Identity and Access Management (IAM) role that controls access to your Amazon S3
    ///       bucket from the specified associated access. The policies attached to this role will determine
    ///       the level of access that you want to provide the associated access when transferring files
    ///       into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust
    ///       relationship that allows a server to access your resources when servicing transfer requests
    ///       for the associated access.</p>
    public let role: String?

    public init (
        externalId: String? = nil,
        homeDirectory: String? = nil,
        homeDirectoryType: HomeDirectoryType? = nil,
        role: String? = nil
    )
    {
        self.externalId = externalId
        self.homeDirectory = homeDirectory
        self.homeDirectoryType = homeDirectoryType
        self.role = role
    }
}
