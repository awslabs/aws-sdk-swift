// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServersOutputBody: Equatable {
    public let nextToken: String?
    public let servers: [ListedServer]?
}

extension ListServersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case servers = "Servers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let serversContainer = try containerValues.decodeIfPresent([ListedServer].self, forKey: .servers)
        var serversDecoded0:[ListedServer]? = nil
        if let serversContainer = serversContainer {
            serversDecoded0 = [ListedServer]()
            for structure0 in serversContainer {
                serversDecoded0?.append(structure0)
            }
        }
        servers = serversDecoded0
    }
}
