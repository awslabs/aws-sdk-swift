// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the properties of a file transfer protocol-enabled server that was
///       specified.</p>
public struct DescribedServer: Equatable {
    /// <p>Specifies the unique Amazon Resource Name (ARN) of the server.</p>
    public let arn: String?
    /// <p>Specifies the ARN of the AWS Certificate Manager (ACM) certificate. Required when
    ///         <code>Protocols</code> is set to <code>FTPS</code>.</p>
    public let certificate: String?
    /// <p>Specifies the domain of the storage system that is used for file transfers.</p>
    public let domain: Domain?
    /// <p>Specifies the virtual private cloud (VPC) endpoint settings that you configured for your
    ///       server.</p>
    public let endpointDetails: EndpointDetails?
    /// <p>Defines the type of endpoint that your server is connected to. If your server is connected
    ///       to a VPC endpoint, your server isn't accessible over the public internet.</p>
    public let endpointType: EndpointType?
    /// <p>Specifies the Base64-encoded SHA256 fingerprint of the server's host key. This value
    ///       is equivalent to the output of the <code>ssh-keygen -l -f my-new-server-key</code>
    ///       command.</p>
    public let hostKeyFingerprint: String?
    /// <p>Specifies information to call a customer-supplied authentication API. This field is not
    ///       populated when the <code>IdentityProviderType</code> of a server is
    ///       <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code>.</p>
    public let identityProviderDetails: IdentityProviderDetails?
    /// <p>Specifies the mode of authentication method enabled for this service. A value of
    ///         <code>AWS_DIRECTORY_SERVICE</code> means that you are providing access to Active Directory
    ///       groups in AWS Managed Active Directory or Microsoft Active Directory in your on-premises
    ///       environment or in AWS using AD Connectors. A value of <code>SERVICE_MANAGED</code> means that
    ///       you are using this server to store and access user credentials within the service. A value of
    ///         <code>API_GATEWAY</code> indicates that you have integrated an API Gateway endpoint that
    ///       will be invoked for authenticating your user into the service.</p>
    public let identityProviderType: IdentityProviderType?
    /// <p>Specifies the AWS Identity and Access Management (IAM) role that allows a server to turn
    ///       on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in
    ///       your CloudWatch logs.</p>
    public let loggingRole: String?
    /// <p>Specifies the file transfer protocol or protocols over which your file transfer protocol
    ///       client can connect to your server's endpoint. The available protocols are:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>SFTP</code> (Secure Shell (SSH) File Transfer Protocol): File transfer over
    ///           SSH</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FTPS</code> (File Transfer Protocol Secure): File transfer with TLS
    ///           encryption</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FTP</code> (File Transfer Protocol): Unencrypted file transfer</p>
    ///             </li>
    ///          </ul>
    public let protocols: [`Protocol`]?
    /// <p>Specifies the name of the security policy that is attached to the server.</p>
    public let securityPolicyName: String?
    /// <p>Specifies the unique system-assigned identifier for a server that you instantiate.</p>
    public let serverId: String?
    /// <p>Specifies the condition of a server for the server that was described. A value of
    ///         <code>ONLINE</code> indicates that the server can accept jobs and transfer files. A
    ///         <code>State</code> value of <code>OFFLINE</code> means that the server cannot perform file
    ///       transfer operations.</p>
    ///
    ///          <p>The states of <code>STARTING</code> and <code>STOPPING</code> indicate that the server is
    ///       in an intermediate state, either not fully able to respond, or not fully offline. The values
    ///       of <code>START_FAILED</code> or <code>STOP_FAILED</code> can indicate an error
    ///       condition.</p>
    public let state: State?
    /// <p>Specifies the key-value pairs that you can use to search for and group servers that were
    ///       assigned to the server that was described.</p>
    public let tags: [Tag]?
    /// <p>Specifies the number of users that are assigned to a server you specified with the
    ///         <code>ServerId</code>.</p>
    public let userCount: Int?

    public init (
        arn: String? = nil,
        certificate: String? = nil,
        domain: Domain? = nil,
        endpointDetails: EndpointDetails? = nil,
        endpointType: EndpointType? = nil,
        hostKeyFingerprint: String? = nil,
        identityProviderDetails: IdentityProviderDetails? = nil,
        identityProviderType: IdentityProviderType? = nil,
        loggingRole: String? = nil,
        protocols: [`Protocol`]? = nil,
        securityPolicyName: String? = nil,
        serverId: String? = nil,
        state: State? = nil,
        tags: [Tag]? = nil,
        userCount: Int? = nil
    )
    {
        self.arn = arn
        self.certificate = certificate
        self.domain = domain
        self.endpointDetails = endpointDetails
        self.endpointType = endpointType
        self.hostKeyFingerprint = hostKeyFingerprint
        self.identityProviderDetails = identityProviderDetails
        self.identityProviderType = identityProviderType
        self.loggingRole = loggingRole
        self.protocols = protocols
        self.securityPolicyName = securityPolicyName
        self.serverId = serverId
        self.state = state
        self.tags = tags
        self.userCount = userCount
    }
}
