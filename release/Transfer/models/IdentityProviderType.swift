// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Returns information related to the type of user authentication that is in use for a file
///       transfer protocol-enabled server's users. For <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code>
///       authentication, the Secure Shell (SSH) public keys are stored with a user on the server
///       instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is
///       implemented by using an API call. The server can have only one method of
///       authentication.</p>
public enum IdentityProviderType {
    case apiGateway
    case awsDirectoryService
    case serviceManaged
    case sdkUnknown(String)
}

extension IdentityProviderType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [IdentityProviderType] {
        return [
            .apiGateway,
            .awsDirectoryService,
            .serviceManaged,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .apiGateway: return "API_GATEWAY"
        case .awsDirectoryService: return "AWS_DIRECTORY_SERVICE"
        case .serviceManaged: return "SERVICE_MANAGED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = IdentityProviderType(rawValue: rawValue) ?? IdentityProviderType.sdkUnknown(rawValue)
    }
}
