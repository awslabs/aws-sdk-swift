// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetItemOutputBody: Equatable {
    public let item: [String:AttributeValue]?
    public let consumedCapacity: ConsumedCapacity?
}

extension GetItemOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case consumedCapacity = "ConsumedCapacity"
        case item = "Item"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemContainer = try containerValues.decodeIfPresent([String:AttributeValue].self, forKey: .item)
        var itemDecoded0: [String:AttributeValue]? = nil
        if let itemContainer = itemContainer {
            itemDecoded0 = [String:AttributeValue]()
            for (key0, attributevalue0) in itemContainer {
                itemDecoded0?[key0] = attributevalue0
            }
        }
        item = itemDecoded0
        let consumedCapacityDecoded = try containerValues.decodeIfPresent(ConsumedCapacity.self, forKey: .consumedCapacity)
        consumedCapacity = consumedCapacityDecoded
    }
}
