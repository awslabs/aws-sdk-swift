// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ReplicaStatus {
    case active
    case creating
    case creationFailed
    case deleting
    case inaccessibleEncryptionCredentials
    case regionDisabled
    case updating
    case sdkUnknown(String)
}

extension ReplicaStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ReplicaStatus] {
        return [
            .active,
            .creating,
            .creationFailed,
            .deleting,
            .inaccessibleEncryptionCredentials,
            .regionDisabled,
            .updating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "ACTIVE"
        case .creating: return "CREATING"
        case .creationFailed: return "CREATION_FAILED"
        case .deleting: return "DELETING"
        case .inaccessibleEncryptionCredentials: return "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
        case .regionDisabled: return "REGION_DISABLED"
        case .updating: return "UPDATING"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ReplicaStatus(rawValue: rawValue) ?? ReplicaStatus.sdkUnknown(rawValue)
    }
}
