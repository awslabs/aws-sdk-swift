// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGlobalTablesOutputBody: Equatable {
    public let globalTables: [GlobalTable]?
    public let lastEvaluatedGlobalTableName: String?
}

extension ListGlobalTablesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case globalTables = "GlobalTables"
        case lastEvaluatedGlobalTableName = "LastEvaluatedGlobalTableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalTablesContainer = try containerValues.decodeIfPresent([GlobalTable].self, forKey: .globalTables)
        var globalTablesDecoded0:[GlobalTable]? = nil
        if let globalTablesContainer = globalTablesContainer {
            globalTablesDecoded0 = [GlobalTable]()
            for structure0 in globalTablesContainer {
                globalTablesDecoded0?.append(structure0)
            }
        }
        globalTables = globalTablesDecoded0
        let lastEvaluatedGlobalTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastEvaluatedGlobalTableName)
        lastEvaluatedGlobalTableName = lastEvaluatedGlobalTableNameDecoded
    }
}
