// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteTransactionInputBody: Equatable {
    public let transactStatements: [ParameterizedStatement]?
    public let clientRequestToken: String?
}

extension ExecuteTransactionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case transactStatements = "TransactStatements"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transactStatementsContainer = try containerValues.decodeIfPresent([ParameterizedStatement].self, forKey: .transactStatements)
        var transactStatementsDecoded0:[ParameterizedStatement]? = nil
        if let transactStatementsContainer = transactStatementsContainer {
            transactStatementsDecoded0 = [ParameterizedStatement]()
            for structure0 in transactStatementsContainer {
                transactStatementsDecoded0?.append(structure0)
            }
        }
        transactStatements = transactStatementsDecoded0
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
