// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTableReplicaAutoScalingInputBody: Equatable {
    public let globalSecondaryIndexUpdates: [GlobalSecondaryIndexAutoScalingUpdate]?
    public let tableName: String?
    public let provisionedWriteCapacityAutoScalingUpdate: AutoScalingSettingsUpdate?
    public let replicaUpdates: [ReplicaAutoScalingUpdate]?
}

extension UpdateTableReplicaAutoScalingInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case globalSecondaryIndexUpdates = "GlobalSecondaryIndexUpdates"
        case provisionedWriteCapacityAutoScalingUpdate = "ProvisionedWriteCapacityAutoScalingUpdate"
        case replicaUpdates = "ReplicaUpdates"
        case tableName = "TableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalSecondaryIndexUpdatesContainer = try containerValues.decodeIfPresent([GlobalSecondaryIndexAutoScalingUpdate].self, forKey: .globalSecondaryIndexUpdates)
        var globalSecondaryIndexUpdatesDecoded0:[GlobalSecondaryIndexAutoScalingUpdate]? = nil
        if let globalSecondaryIndexUpdatesContainer = globalSecondaryIndexUpdatesContainer {
            globalSecondaryIndexUpdatesDecoded0 = [GlobalSecondaryIndexAutoScalingUpdate]()
            for structure0 in globalSecondaryIndexUpdatesContainer {
                globalSecondaryIndexUpdatesDecoded0?.append(structure0)
            }
        }
        globalSecondaryIndexUpdates = globalSecondaryIndexUpdatesDecoded0
        let tableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableName)
        tableName = tableNameDecoded
        let provisionedWriteCapacityAutoScalingUpdateDecoded = try containerValues.decodeIfPresent(AutoScalingSettingsUpdate.self, forKey: .provisionedWriteCapacityAutoScalingUpdate)
        provisionedWriteCapacityAutoScalingUpdate = provisionedWriteCapacityAutoScalingUpdateDecoded
        let replicaUpdatesContainer = try containerValues.decodeIfPresent([ReplicaAutoScalingUpdate].self, forKey: .replicaUpdates)
        var replicaUpdatesDecoded0:[ReplicaAutoScalingUpdate]? = nil
        if let replicaUpdatesContainer = replicaUpdatesContainer {
            replicaUpdatesDecoded0 = [ReplicaAutoScalingUpdate]()
            for structure0 in replicaUpdatesContainer {
                replicaUpdatesDecoded0?.append(structure0)
            }
        }
        replicaUpdates = replicaUpdatesDecoded0
    }
}
