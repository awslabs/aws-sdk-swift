// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TransactGetItemsOutputBody: Equatable {
    public let consumedCapacity: [ConsumedCapacity]?
    public let responses: [ItemResponse]?
}

extension TransactGetItemsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case consumedCapacity = "ConsumedCapacity"
        case responses = "Responses"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consumedCapacityContainer = try containerValues.decodeIfPresent([ConsumedCapacity].self, forKey: .consumedCapacity)
        var consumedCapacityDecoded0:[ConsumedCapacity]? = nil
        if let consumedCapacityContainer = consumedCapacityContainer {
            consumedCapacityDecoded0 = [ConsumedCapacity]()
            for structure0 in consumedCapacityContainer {
                consumedCapacityDecoded0?.append(structure0)
            }
        }
        consumedCapacity = consumedCapacityDecoded0
        let responsesContainer = try containerValues.decodeIfPresent([ItemResponse].self, forKey: .responses)
        var responsesDecoded0:[ItemResponse]? = nil
        if let responsesContainer = responsesContainer {
            responsesDecoded0 = [ItemResponse]()
            for structure0 in responsesContainer {
                responsesDecoded0?.append(structure0)
            }
        }
        responses = responsesDecoded0
    }
}
