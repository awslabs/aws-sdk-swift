// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExportTableToPointInTimeInputBody: Equatable {
    public let tableArn: String?
    public let exportTime: Date?
    public let clientToken: String?
    public let s3Bucket: String?
    public let s3BucketOwner: String?
    public let s3Prefix: String?
    public let s3SseAlgorithm: S3SseAlgorithm?
    public let s3SseKmsKeyId: String?
    public let exportFormat: ExportFormat?
}

extension ExportTableToPointInTimeInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken = "ClientToken"
        case exportFormat = "ExportFormat"
        case exportTime = "ExportTime"
        case s3Bucket = "S3Bucket"
        case s3BucketOwner = "S3BucketOwner"
        case s3Prefix = "S3Prefix"
        case s3SseAlgorithm = "S3SseAlgorithm"
        case s3SseKmsKeyId = "S3SseKmsKeyId"
        case tableArn = "TableArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tableArn)
        tableArn = tableArnDecoded
        let exportTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .exportTime)
        exportTime = exportTimeDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let s3BucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let s3BucketOwnerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3BucketOwner)
        s3BucketOwner = s3BucketOwnerDecoded
        let s3PrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Prefix)
        s3Prefix = s3PrefixDecoded
        let s3SseAlgorithmDecoded = try containerValues.decodeIfPresent(S3SseAlgorithm.self, forKey: .s3SseAlgorithm)
        s3SseAlgorithm = s3SseAlgorithmDecoded
        let s3SseKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3SseKmsKeyId)
        s3SseKmsKeyId = s3SseKmsKeyIdDecoded
        let exportFormatDecoded = try containerValues.decodeIfPresent(ExportFormat.self, forKey: .exportFormat)
        exportFormat = exportFormatDecoded
    }
}
