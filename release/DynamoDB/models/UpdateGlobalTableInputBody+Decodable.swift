// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGlobalTableInputBody: Equatable {
    public let globalTableName: String?
    public let replicaUpdates: [ReplicaUpdate]?
}

extension UpdateGlobalTableInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case globalTableName = "GlobalTableName"
        case replicaUpdates = "ReplicaUpdates"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let globalTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .globalTableName)
        globalTableName = globalTableNameDecoded
        let replicaUpdatesContainer = try containerValues.decodeIfPresent([ReplicaUpdate].self, forKey: .replicaUpdates)
        var replicaUpdatesDecoded0:[ReplicaUpdate]? = nil
        if let replicaUpdatesContainer = replicaUpdatesContainer {
            replicaUpdatesDecoded0 = [ReplicaUpdate]()
            for structure0 in replicaUpdatesContainer {
                replicaUpdatesDecoded0?.append(structure0)
            }
        }
        replicaUpdates = replicaUpdatesDecoded0
    }
}
