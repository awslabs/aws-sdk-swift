// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TransactionCanceledExceptionBody: Equatable {
    public let message: String?
    public let cancellationReasons: [CancellationReason]?
}

extension TransactionCanceledExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cancellationReasons = "CancellationReasons"
        case message = "Message"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let cancellationReasonsContainer = try containerValues.decodeIfPresent([CancellationReason].self, forKey: .cancellationReasons)
        var cancellationReasonsDecoded0:[CancellationReason]? = nil
        if let cancellationReasonsContainer = cancellationReasonsContainer {
            cancellationReasonsDecoded0 = [CancellationReason]()
            for structure0 in cancellationReasonsContainer {
                cancellationReasonsDecoded0?.append(structure0)
            }
        }
        cancellationReasons = cancellationReasonsDecoded0
    }
}
