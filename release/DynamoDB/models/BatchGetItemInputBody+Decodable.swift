// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetItemInputBody: Equatable {
    public let requestItems: [String:KeysAndAttributes]?
    public let returnConsumedCapacity: ReturnConsumedCapacity?
}

extension BatchGetItemInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case requestItems = "RequestItems"
        case returnConsumedCapacity = "ReturnConsumedCapacity"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestItemsContainer = try containerValues.decodeIfPresent([String:KeysAndAttributes].self, forKey: .requestItems)
        var requestItemsDecoded0: [String:KeysAndAttributes]? = nil
        if let requestItemsContainer = requestItemsContainer {
            requestItemsDecoded0 = [String:KeysAndAttributes]()
            for (key0, keysandattributes0) in requestItemsContainer {
                requestItemsDecoded0?[key0] = keysandattributes0
            }
        }
        requestItems = requestItemsDecoded0
        let returnConsumedCapacityDecoded = try containerValues.decodeIfPresent(ReturnConsumedCapacity.self, forKey: .returnConsumedCapacity)
        returnConsumedCapacity = returnConsumedCapacityDecoded
    }
}
