// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExportSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exportArn = "ExportArn"
        case exportStatus = "ExportStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exportArn = exportArn {
            try encodeContainer.encode(exportArn, forKey: .exportArn)
        }
        if let exportStatus = exportStatus {
            try encodeContainer.encode(exportStatus.rawValue, forKey: .exportStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exportArn)
        exportArn = exportArnDecoded
        let exportStatusDecoded = try containerValues.decodeIfPresent(ExportStatus.self, forKey: .exportStatus)
        exportStatus = exportStatusDecoded
    }
}
