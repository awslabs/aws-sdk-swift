// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains the details of the table when the backup was created. </p>
public struct SourceTableDetails: Equatable {
    /// <p>Controls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PROVISIONED</code> - Sets the read/write capacity mode to <code>PROVISIONED</code>. We recommend using <code>PROVISIONED</code> for predictable workloads.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PAY_PER_REQUEST</code> - Sets the read/write capacity mode to <code>PAY_PER_REQUEST</code>. We recommend using <code>PAY_PER_REQUEST</code> for unpredictable workloads.
    ///             </p>
    ///             </li>
    ///          </ul>
    public let billingMode: BillingMode?
    /// <p>Number of items in the table. Note that this is an approximate value. </p>
    public let itemCount: Int?
    /// <p>Schema of the table. </p>
    public let keySchema: [KeySchemaElement]?
    /// <p>Read IOPs and Write IOPS on the table when the backup was created.</p>
    public let provisionedThroughput: ProvisionedThroughput?
    /// <p>ARN of the table for which backup was created. </p>
    public let tableArn: String?
    /// <p>Time when the source table was created. </p>
    public let tableCreationDateTime: Date?
    /// <p>Unique identifier for the table for which the backup was created. </p>
    public let tableId: String?
    /// <p>The name of the table for which the backup was created. </p>
    public let tableName: String?
    /// <p>Size of the table in bytes. Note that this is an approximate value.</p>
    public let tableSizeBytes: Int

    public init (
        billingMode: BillingMode? = nil,
        itemCount: Int? = nil,
        keySchema: [KeySchemaElement]? = nil,
        provisionedThroughput: ProvisionedThroughput? = nil,
        tableArn: String? = nil,
        tableCreationDateTime: Date? = nil,
        tableId: String? = nil,
        tableName: String? = nil,
        tableSizeBytes: Int = 0
    )
    {
        self.billingMode = billingMode
        self.itemCount = itemCount
        self.keySchema = keySchema
        self.provisionedThroughput = provisionedThroughput
        self.tableArn = tableArn
        self.tableCreationDateTime = tableCreationDateTime
        self.tableId = tableId
        self.tableName = tableName
        self.tableSizeBytes = tableSizeBytes
    }
}
