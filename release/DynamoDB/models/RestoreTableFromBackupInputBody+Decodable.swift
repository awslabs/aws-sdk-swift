// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RestoreTableFromBackupInputBody: Equatable {
    public let targetTableName: String?
    public let backupArn: String?
    public let billingModeOverride: BillingMode?
    public let globalSecondaryIndexOverride: [GlobalSecondaryIndex]?
    public let localSecondaryIndexOverride: [LocalSecondaryIndex]?
    public let provisionedThroughputOverride: ProvisionedThroughput?
    public let sSESpecificationOverride: SSESpecification?
}

extension RestoreTableFromBackupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case backupArn = "BackupArn"
        case billingModeOverride = "BillingModeOverride"
        case globalSecondaryIndexOverride = "GlobalSecondaryIndexOverride"
        case localSecondaryIndexOverride = "LocalSecondaryIndexOverride"
        case provisionedThroughputOverride = "ProvisionedThroughputOverride"
        case sSESpecificationOverride = "SSESpecificationOverride"
        case targetTableName = "TargetTableName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetTableName)
        targetTableName = targetTableNameDecoded
        let backupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backupArn)
        backupArn = backupArnDecoded
        let billingModeOverrideDecoded = try containerValues.decodeIfPresent(BillingMode.self, forKey: .billingModeOverride)
        billingModeOverride = billingModeOverrideDecoded
        let globalSecondaryIndexOverrideContainer = try containerValues.decodeIfPresent([GlobalSecondaryIndex].self, forKey: .globalSecondaryIndexOverride)
        var globalSecondaryIndexOverrideDecoded0:[GlobalSecondaryIndex]? = nil
        if let globalSecondaryIndexOverrideContainer = globalSecondaryIndexOverrideContainer {
            globalSecondaryIndexOverrideDecoded0 = [GlobalSecondaryIndex]()
            for structure0 in globalSecondaryIndexOverrideContainer {
                globalSecondaryIndexOverrideDecoded0?.append(structure0)
            }
        }
        globalSecondaryIndexOverride = globalSecondaryIndexOverrideDecoded0
        let localSecondaryIndexOverrideContainer = try containerValues.decodeIfPresent([LocalSecondaryIndex].self, forKey: .localSecondaryIndexOverride)
        var localSecondaryIndexOverrideDecoded0:[LocalSecondaryIndex]? = nil
        if let localSecondaryIndexOverrideContainer = localSecondaryIndexOverrideContainer {
            localSecondaryIndexOverrideDecoded0 = [LocalSecondaryIndex]()
            for structure0 in localSecondaryIndexOverrideContainer {
                localSecondaryIndexOverrideDecoded0?.append(structure0)
            }
        }
        localSecondaryIndexOverride = localSecondaryIndexOverrideDecoded0
        let provisionedThroughputOverrideDecoded = try containerValues.decodeIfPresent(ProvisionedThroughput.self, forKey: .provisionedThroughputOverride)
        provisionedThroughputOverride = provisionedThroughputOverrideDecoded
        let sSESpecificationOverrideDecoded = try containerValues.decodeIfPresent(SSESpecification.self, forKey: .sSESpecificationOverride)
        sSESpecificationOverride = sSESpecificationOverrideDecoded
    }
}
