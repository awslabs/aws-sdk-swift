// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The request parameters represent the input of a request to run a SQL statement against
///             a database.</p>
public struct ExecuteStatementInput: Equatable {
    /// <p>A value that indicates whether to continue running the statement after
    ///             the call times out. By default, the statement stops running when the call
    ///             times out.</p>
    ///         <important>
    ///             <p>For DDL statements, we recommend continuing to run the statement after
    ///                the call times out. When a DDL statement terminates before it is finished
    ///                running, it can result in errors and possibly corrupted data structures.</p>
    ///         </important>
    public let continueAfterTimeout: Bool
    /// <p>The name of the database.</p>
    public let database: String?
    /// <p>A value that indicates whether to include metadata in the results.</p>
    public let includeResultMetadata: Bool
    /// <p>The parameters for the SQL statement.</p>
    ///         <note>
    ///             <p>Array parameters are not supported.</p>
    ///         </note>
    public let parameters: [SqlParameter]?
    /// <p>The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.</p>
    public let resourceArn: String?
    /// <p>Options that control how the result set is returned.</p>
    public let resultSetOptions: ResultSetOptions?
    /// <p>The name of the database schema.</p>
    ///         <note>
    ///             <p>Currently, the <code>schema</code> parameter isn't supported.</p>
    ///         </note>
    public let schema: String?
    /// <p>The name or ARN of the secret that enables access to the DB cluster.</p>
    public let secretArn: String?
    /// <p>The SQL statement to run.</p>
    public let sql: String?
    /// <p>The identifier of a transaction that was started by using the
    ///                 <code>BeginTransaction</code> operation. Specify the transaction ID of the
    ///             transaction that you want to include the SQL statement in.</p>
    ///         <p>If the SQL statement is not part of a transaction, don't set this parameter.</p>
    public let transactionId: String?

    public init (
        continueAfterTimeout: Bool = false,
        database: String? = nil,
        includeResultMetadata: Bool = false,
        parameters: [SqlParameter]? = nil,
        resourceArn: String? = nil,
        resultSetOptions: ResultSetOptions? = nil,
        schema: String? = nil,
        secretArn: String? = nil,
        sql: String? = nil,
        transactionId: String? = nil
    )
    {
        self.continueAfterTimeout = continueAfterTimeout
        self.database = database
        self.includeResultMetadata = includeResultMetadata
        self.parameters = parameters
        self.resourceArn = resourceArn
        self.resultSetOptions = resultSetOptions
        self.schema = schema
        self.secretArn = secretArn
        self.sql = sql
        self.transactionId = transactionId
    }
}
