// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SqlStatementResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case numberOfRecordsUpdated
        case resultFrame
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if numberOfRecordsUpdated != 0 {
            try encodeContainer.encode(numberOfRecordsUpdated, forKey: .numberOfRecordsUpdated)
        }
        if let resultFrame = resultFrame {
            try encodeContainer.encode(resultFrame, forKey: .resultFrame)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultFrameDecoded = try containerValues.decodeIfPresent(ResultFrame.self, forKey: .resultFrame)
        resultFrame = resultFrameDecoded
        let numberOfRecordsUpdatedDecoded = try containerValues.decode(Int.self, forKey: .numberOfRecordsUpdated)
        numberOfRecordsUpdated = numberOfRecordsUpdatedDecoded
    }
}
