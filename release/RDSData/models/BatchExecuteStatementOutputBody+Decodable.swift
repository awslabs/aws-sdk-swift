// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchExecuteStatementOutputBody: Equatable {
    public let updateResults: [UpdateResult]?
}

extension BatchExecuteStatementOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case updateResults
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let updateResultsContainer = try containerValues.decodeIfPresent([UpdateResult].self, forKey: .updateResults)
        var updateResultsDecoded0:[UpdateResult]? = nil
        if let updateResultsContainer = updateResultsContainer {
            updateResultsDecoded0 = [UpdateResult]()
            for structure0 in updateResultsContainer {
                updateResultsDecoded0?.append(structure0)
            }
        }
        updateResults = updateResultsDecoded0
    }
}
