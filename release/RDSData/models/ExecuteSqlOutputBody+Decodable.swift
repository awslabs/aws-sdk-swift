// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteSqlOutputBody: Equatable {
    public let sqlStatementResults: [SqlStatementResult]?
}

extension ExecuteSqlOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case sqlStatementResults
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sqlStatementResultsContainer = try containerValues.decodeIfPresent([SqlStatementResult].self, forKey: .sqlStatementResults)
        var sqlStatementResultsDecoded0:[SqlStatementResult]? = nil
        if let sqlStatementResultsContainer = sqlStatementResultsContainer {
            sqlStatementResultsDecoded0 = [SqlStatementResult]()
            for structure0 in sqlStatementResultsContainer {
                sqlStatementResultsDecoded0?.append(structure0)
            }
        }
        sqlStatementResults = sqlStatementResultsDecoded0
    }
}
