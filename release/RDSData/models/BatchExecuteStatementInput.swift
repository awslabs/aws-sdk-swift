// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The request parameters represent the input of a SQL statement over an array of
///             data.</p>
public struct BatchExecuteStatementInput: Equatable {
    /// <p>The name of the database.</p>
    public let database: String?
    /// <p>The parameter set for the batch operation.</p>
    ///         <p>The SQL statement is executed as many times as the number of parameter sets provided.
    ///           To execute a SQL statement with no parameters, use one of the following options:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Specify one or more empty parameter sets.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Use the <code>ExecuteStatement</code> operation instead of the <code>BatchExecuteStatement</code> operation.</p>
    ///             </li>
    ///          </ul>
    ///         <note>
    ///             <p>Array parameters are not supported.</p>
    ///         </note>
    public let parameterSets: [[SqlParameter]?]?
    /// <p>The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.</p>
    public let resourceArn: String?
    /// <p>The name of the database schema.</p>
    public let schema: String?
    /// <p>The name or ARN of the secret that enables access to the DB cluster.</p>
    public let secretArn: String?
    /// <p>The SQL statement to run.</p>
    public let sql: String?
    /// <p>The identifier of a transaction that was started by using the
    ///                 <code>BeginTransaction</code> operation. Specify the transaction ID of the
    ///             transaction that you want to include the SQL statement in.</p>
    ///         <p>If the SQL statement is not part of a transaction, don't set this
    ///             parameter.</p>
    public let transactionId: String?

    public init (
        database: String? = nil,
        parameterSets: [[SqlParameter]?]? = nil,
        resourceArn: String? = nil,
        schema: String? = nil,
        secretArn: String? = nil,
        sql: String? = nil,
        transactionId: String? = nil
    )
    {
        self.database = database
        self.parameterSets = parameterSets
        self.resourceArn = resourceArn
        self.schema = schema
        self.secretArn = secretArn
        self.sql = sql
        self.transactionId = transactionId
    }
}
