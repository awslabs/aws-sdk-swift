// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case generatedFields
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let generatedFields = generatedFields {
            var generatedFieldsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .generatedFields)
            for fieldlist0 in generatedFields {
                try generatedFieldsContainer.encode(fieldlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let generatedFieldsContainer = try containerValues.decodeIfPresent([Field].self, forKey: .generatedFields)
        var generatedFieldsDecoded0:[Field]? = nil
        if let generatedFieldsContainer = generatedFieldsContainer {
            generatedFieldsDecoded0 = [Field]()
            for union0 in generatedFieldsContainer {
                generatedFieldsDecoded0?.append(union0)
            }
        }
        generatedFields = generatedFieldsDecoded0
    }
}
