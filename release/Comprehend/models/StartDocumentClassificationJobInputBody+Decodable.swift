// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDocumentClassificationJobInputBody: Equatable {
    public let jobName: String?
    public let documentClassifierArn: String?
    public let inputDataConfig: InputDataConfig?
    public let outputDataConfig: OutputDataConfig?
    public let dataAccessRoleArn: String?
    public let clientRequestToken: String?
    public let volumeKmsKeyId: String?
    public let vpcConfig: VpcConfig?
}

extension StartDocumentClassificationJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case dataAccessRoleArn = "DataAccessRoleArn"
        case documentClassifierArn = "DocumentClassifierArn"
        case inputDataConfig = "InputDataConfig"
        case jobName = "JobName"
        case outputDataConfig = "OutputDataConfig"
        case volumeKmsKeyId = "VolumeKmsKeyId"
        case vpcConfig = "VpcConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobName)
        jobName = jobNameDecoded
        let documentClassifierArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .documentClassifierArn)
        documentClassifierArn = documentClassifierArnDecoded
        let inputDataConfigDecoded = try containerValues.decodeIfPresent(InputDataConfig.self, forKey: .inputDataConfig)
        inputDataConfig = inputDataConfigDecoded
        let outputDataConfigDecoded = try containerValues.decodeIfPresent(OutputDataConfig.self, forKey: .outputDataConfig)
        outputDataConfig = outputDataConfigDecoded
        let dataAccessRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataAccessRoleArn)
        dataAccessRoleArn = dataAccessRoleArnDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
        let volumeKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .volumeKmsKeyId)
        volumeKmsKeyId = volumeKmsKeyIdDecoded
        let vpcConfigDecoded = try containerValues.decodeIfPresent(VpcConfig.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
    }
}
