// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentClassifiersOutputBody: Equatable {
    public let documentClassifierPropertiesList: [DocumentClassifierProperties]?
    public let nextToken: String?
}

extension ListDocumentClassifiersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case documentClassifierPropertiesList = "DocumentClassifierPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentClassifierPropertiesListContainer = try containerValues.decodeIfPresent([DocumentClassifierProperties].self, forKey: .documentClassifierPropertiesList)
        var documentClassifierPropertiesListDecoded0:[DocumentClassifierProperties]? = nil
        if let documentClassifierPropertiesListContainer = documentClassifierPropertiesListContainer {
            documentClassifierPropertiesListDecoded0 = [DocumentClassifierProperties]()
            for structure0 in documentClassifierPropertiesListContainer {
                documentClassifierPropertiesListDecoded0?.append(structure0)
            }
        }
        documentClassifierPropertiesList = documentClassifierPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
