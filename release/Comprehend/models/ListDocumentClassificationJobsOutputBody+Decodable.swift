// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDocumentClassificationJobsOutputBody: Equatable {
    public let documentClassificationJobPropertiesList: [DocumentClassificationJobProperties]?
    public let nextToken: String?
}

extension ListDocumentClassificationJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case documentClassificationJobPropertiesList = "DocumentClassificationJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let documentClassificationJobPropertiesListContainer = try containerValues.decodeIfPresent([DocumentClassificationJobProperties].self, forKey: .documentClassificationJobPropertiesList)
        var documentClassificationJobPropertiesListDecoded0:[DocumentClassificationJobProperties]? = nil
        if let documentClassificationJobPropertiesListContainer = documentClassificationJobPropertiesListContainer {
            documentClassificationJobPropertiesListDecoded0 = [DocumentClassificationJobProperties]()
            for structure0 in documentClassificationJobPropertiesListContainer {
                documentClassificationJobPropertiesListDecoded0?.append(structure0)
            }
        }
        documentClassificationJobPropertiesList = documentClassificationJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
