// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information about a PII entities detection job.</p>
public struct PiiEntitiesDetectionJobProperties: Equatable {
    /// <p>The Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input
    ///       data.</p>
    public let dataAccessRoleArn: String?
    /// <p>The time that the PII entities detection job completed.</p>
    public let endTime: Date?
    /// <p>The input properties for a PII entities detection job.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The identifier assigned to the PII entities detection job.</p>
    public let jobId: String?
    /// <p>The name that you assigned the PII entities detection job.</p>
    public let jobName: String?
    /// <p>The current status of the PII entities detection job. If the status is
    ///       <code>FAILED</code>, the <code>Message</code> field shows the reason for the failure.</p>
    public let jobStatus: JobStatus?
    /// <p>The language code of the input documents</p>
    public let languageCode: LanguageCode?
    /// <p>A description of the status of a job.</p>
    public let message: String?
    /// <p>Specifies whether the output provides the locations (offsets) of PII entities or a file in
    ///       which PII entities are redacted.</p>
    public let mode: PiiEntitiesDetectionMode?
    /// <p>The output data configuration that you supplied when you created the PII entities
    ///       detection job.</p>
    public let outputDataConfig: PiiOutputDataConfig?
    /// <p>Provides configuration parameters for PII entity redaction.</p>
    ///          <p>This parameter is required if you set the <code>Mode</code> parameter to
    ///         <code>ONLY_REDACTION</code>. In that case, you must provide a <code>RedactionConfig</code>
    ///       definition that includes the <code>PiiEntityTypes</code> parameter.</p>
    public let redactionConfig: RedactionConfig?
    /// <p>The time that the PII entities detection job was submitted for processing.</p>
    public let submitTime: Date?

    public init (
        dataAccessRoleArn: String? = nil,
        endTime: Date? = nil,
        inputDataConfig: InputDataConfig? = nil,
        jobId: String? = nil,
        jobName: String? = nil,
        jobStatus: JobStatus? = nil,
        languageCode: LanguageCode? = nil,
        message: String? = nil,
        mode: PiiEntitiesDetectionMode? = nil,
        outputDataConfig: PiiOutputDataConfig? = nil,
        redactionConfig: RedactionConfig? = nil,
        submitTime: Date? = nil
    )
    {
        self.dataAccessRoleArn = dataAccessRoleArn
        self.endTime = endTime
        self.inputDataConfig = inputDataConfig
        self.jobId = jobId
        self.jobName = jobName
        self.jobStatus = jobStatus
        self.languageCode = languageCode
        self.message = message
        self.mode = mode
        self.outputDataConfig = outputDataConfig
        self.redactionConfig = redactionConfig
        self.submitTime = submitTime
    }
}
