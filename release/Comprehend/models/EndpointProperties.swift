// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Specifies information about the specified endpoint.</p>
public struct EndpointProperties: Equatable {
    /// <p>The creation date and time of the endpoint.</p>
    public let creationTime: Date?
    /// <p>The number of inference units currently used by the model using this endpoint.</p>
    public let currentInferenceUnits: Int?
    /// <p>The Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that
    ///       grants Amazon Comprehend read access to trained custom models encrypted with a customer
    ///       managed key (ModelKmsKeyId).</p>
    public let dataAccessRoleArn: String?
    /// <p>The desired number of inference units to be used by the model using this endpoint.
    ///
    ///       Each inference unit represents of a throughput of 100 characters per second.</p>
    public let desiredInferenceUnits: Int?
    /// <p>The Amazon Resource Number (ARN) of the endpoint.</p>
    public let endpointArn: String?
    /// <p>The date and time that the endpoint was last modified.</p>
    public let lastModifiedTime: Date?
    /// <p>Specifies a reason for failure in cases of <code>Failed</code> status.</p>
    public let message: String?
    /// <p>The Amazon Resource Number (ARN) of the model to which the endpoint is attached.</p>
    public let modelArn: String?
    /// <p>Specifies the status of the endpoint. Because the endpoint updates and creation are
    ///       asynchronous, so customers will need to wait for the endpoint to be <code>Ready</code> status
    ///       before making inference requests.</p>
    public let status: EndpointStatus?

    public init (
        creationTime: Date? = nil,
        currentInferenceUnits: Int? = nil,
        dataAccessRoleArn: String? = nil,
        desiredInferenceUnits: Int? = nil,
        endpointArn: String? = nil,
        lastModifiedTime: Date? = nil,
        message: String? = nil,
        modelArn: String? = nil,
        status: EndpointStatus? = nil
    )
    {
        self.creationTime = creationTime
        self.currentInferenceUnits = currentInferenceUnits
        self.dataAccessRoleArn = dataAccessRoleArn
        self.desiredInferenceUnits = desiredInferenceUnits
        self.endpointArn = endpointArn
        self.lastModifiedTime = lastModifiedTime
        self.message = message
        self.modelArn = modelArn
        self.status = status
    }
}
