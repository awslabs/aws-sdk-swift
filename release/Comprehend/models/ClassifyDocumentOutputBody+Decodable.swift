// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ClassifyDocumentOutputBody: Equatable {
    public let classes: [DocumentClass]?
    public let labels: [DocumentLabel]?
}

extension ClassifyDocumentOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case classes = "Classes"
        case labels = "Labels"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let classesContainer = try containerValues.decodeIfPresent([DocumentClass].self, forKey: .classes)
        var classesDecoded0:[DocumentClass]? = nil
        if let classesContainer = classesContainer {
            classesDecoded0 = [DocumentClass]()
            for structure0 in classesContainer {
                classesDecoded0?.append(structure0)
            }
        }
        classes = classesDecoded0
        let labelsContainer = try containerValues.decodeIfPresent([DocumentLabel].self, forKey: .labels)
        var labelsDecoded0:[DocumentLabel]? = nil
        if let labelsContainer = labelsContainer {
            labelsDecoded0 = [DocumentLabel]()
            for structure0 in labelsContainer {
                labelsDecoded0?.append(structure0)
            }
        }
        labels = labelsDecoded0
    }
}
