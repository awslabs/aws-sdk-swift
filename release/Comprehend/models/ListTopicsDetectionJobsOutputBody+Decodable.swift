// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTopicsDetectionJobsOutputBody: Equatable {
    public let topicsDetectionJobPropertiesList: [TopicsDetectionJobProperties]?
    public let nextToken: String?
}

extension ListTopicsDetectionJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case topicsDetectionJobPropertiesList = "TopicsDetectionJobPropertiesList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicsDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([TopicsDetectionJobProperties].self, forKey: .topicsDetectionJobPropertiesList)
        var topicsDetectionJobPropertiesListDecoded0:[TopicsDetectionJobProperties]? = nil
        if let topicsDetectionJobPropertiesListContainer = topicsDetectionJobPropertiesListContainer {
            topicsDetectionJobPropertiesListDecoded0 = [TopicsDetectionJobProperties]()
            for structure0 in topicsDetectionJobPropertiesListContainer {
                topicsDetectionJobPropertiesListDecoded0?.append(structure0)
            }
        }
        topicsDetectionJobPropertiesList = topicsDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
