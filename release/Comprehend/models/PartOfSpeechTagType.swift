// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PartOfSpeechTagType {
    case adj
    case adp
    case adv
    case aux
    case cconj
    case conj
    case det
    case intj
    case noun
    case num
    case o
    case part
    case pron
    case propn
    case punct
    case sconj
    case sym
    case verb
    case sdkUnknown(String)
}

extension PartOfSpeechTagType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PartOfSpeechTagType] {
        return [
            .adj,
            .adp,
            .adv,
            .aux,
            .cconj,
            .conj,
            .det,
            .intj,
            .noun,
            .num,
            .o,
            .part,
            .pron,
            .propn,
            .punct,
            .sconj,
            .sym,
            .verb,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .adj: return "ADJ"
        case .adp: return "ADP"
        case .adv: return "ADV"
        case .aux: return "AUX"
        case .cconj: return "CCONJ"
        case .conj: return "CONJ"
        case .det: return "DET"
        case .intj: return "INTJ"
        case .noun: return "NOUN"
        case .num: return "NUM"
        case .o: return "O"
        case .part: return "PART"
        case .pron: return "PRON"
        case .propn: return "PROPN"
        case .punct: return "PUNCT"
        case .sconj: return "SCONJ"
        case .sym: return "SYM"
        case .verb: return "VERB"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PartOfSpeechTagType(rawValue: rawValue) ?? PartOfSpeechTagType.sdkUnknown(rawValue)
    }
}
