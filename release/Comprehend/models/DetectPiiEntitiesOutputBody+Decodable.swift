// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectPiiEntitiesOutputBody: Equatable {
    public let entities: [PiiEntity]?
}

extension DetectPiiEntitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entities = "Entities"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entitiesContainer = try containerValues.decodeIfPresent([PiiEntity].self, forKey: .entities)
        var entitiesDecoded0:[PiiEntity]? = nil
        if let entitiesContainer = entitiesContainer {
            entitiesDecoded0 = [PiiEntity]()
            for structure0 in entitiesContainer {
                entitiesDecoded0?.append(structure0)
            }
        }
        entities = entitiesDecoded0
    }
}
