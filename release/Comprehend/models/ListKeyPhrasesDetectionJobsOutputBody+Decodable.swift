// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListKeyPhrasesDetectionJobsOutputBody: Equatable {
    public let keyPhrasesDetectionJobPropertiesList: [KeyPhrasesDetectionJobProperties]?
    public let nextToken: String?
}

extension ListKeyPhrasesDetectionJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case keyPhrasesDetectionJobPropertiesList = "KeyPhrasesDetectionJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyPhrasesDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([KeyPhrasesDetectionJobProperties].self, forKey: .keyPhrasesDetectionJobPropertiesList)
        var keyPhrasesDetectionJobPropertiesListDecoded0:[KeyPhrasesDetectionJobProperties]? = nil
        if let keyPhrasesDetectionJobPropertiesListContainer = keyPhrasesDetectionJobPropertiesListContainer {
            keyPhrasesDetectionJobPropertiesListDecoded0 = [KeyPhrasesDetectionJobProperties]()
            for structure0 in keyPhrasesDetectionJobPropertiesListContainer {
                keyPhrasesDetectionJobPropertiesListDecoded0?.append(structure0)
            }
        }
        keyPhrasesDetectionJobPropertiesList = keyPhrasesDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
