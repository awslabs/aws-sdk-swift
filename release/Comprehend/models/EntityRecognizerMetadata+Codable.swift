// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EntityRecognizerMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case entityTypes = "EntityTypes"
        case evaluationMetrics = "EvaluationMetrics"
        case numberOfTestDocuments = "NumberOfTestDocuments"
        case numberOfTrainedDocuments = "NumberOfTrainedDocuments"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let entityTypes = entityTypes {
            var entityTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .entityTypes)
            for entityrecognizermetadataentitytypeslist0 in entityTypes {
                try entityTypesContainer.encode(entityrecognizermetadataentitytypeslist0)
            }
        }
        if let evaluationMetrics = evaluationMetrics {
            try encodeContainer.encode(evaluationMetrics, forKey: .evaluationMetrics)
        }
        if let numberOfTestDocuments = numberOfTestDocuments {
            try encodeContainer.encode(numberOfTestDocuments, forKey: .numberOfTestDocuments)
        }
        if let numberOfTrainedDocuments = numberOfTrainedDocuments {
            try encodeContainer.encode(numberOfTrainedDocuments, forKey: .numberOfTrainedDocuments)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let numberOfTrainedDocumentsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numberOfTrainedDocuments)
        numberOfTrainedDocuments = numberOfTrainedDocumentsDecoded
        let numberOfTestDocumentsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numberOfTestDocuments)
        numberOfTestDocuments = numberOfTestDocumentsDecoded
        let evaluationMetricsDecoded = try containerValues.decodeIfPresent(EntityRecognizerEvaluationMetrics.self, forKey: .evaluationMetrics)
        evaluationMetrics = evaluationMetricsDecoded
        let entityTypesContainer = try containerValues.decodeIfPresent([EntityRecognizerMetadataEntityTypesListItem].self, forKey: .entityTypes)
        var entityTypesDecoded0:[EntityRecognizerMetadataEntityTypesListItem]? = nil
        if let entityTypesContainer = entityTypesContainer {
            entityTypesDecoded0 = [EntityRecognizerMetadataEntityTypesListItem]()
            for structure0 in entityTypesContainer {
                entityTypesDecoded0?.append(structure0)
            }
        }
        entityTypes = entityTypesDecoded0
    }
}
