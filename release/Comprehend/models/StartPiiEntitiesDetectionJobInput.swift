// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartPiiEntitiesDetectionJobInput: Equatable {
    /// <p>A unique identifier for the request. If you don't set the client request token, Amazon
    ///       Comprehend generates one.</p>
    public var clientRequestToken: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that
    ///       grants Amazon Comprehend read access to your input data.</p>
    public let dataAccessRoleArn: String?
    /// <p>The input properties for a PII entities detection job.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The identifier of the job.</p>
    public let jobName: String?
    /// <p>The language of the input documents.</p>
    public let languageCode: LanguageCode?
    /// <p>Specifies whether the output provides the locations (offsets) of PII entities or a file in
    ///       which PII entities are redacted.</p>
    public let mode: PiiEntitiesDetectionMode?
    /// <p>Provides conÔ¨Åguration parameters for the output of PII entity detection jobs.</p>
    public let outputDataConfig: OutputDataConfig?
    /// <p>Provides configuration parameters for PII entity redaction.</p>
    ///          <p>This parameter is required if you set the <code>Mode</code> parameter to
    ///         <code>ONLY_REDACTION</code>. In that case, you must provide a <code>RedactionConfig</code>
    ///       definition that includes the <code>PiiEntityTypes</code> parameter.</p>
    public let redactionConfig: RedactionConfig?

    public init (
        clientRequestToken: String? = nil,
        dataAccessRoleArn: String? = nil,
        inputDataConfig: InputDataConfig? = nil,
        jobName: String? = nil,
        languageCode: LanguageCode? = nil,
        mode: PiiEntitiesDetectionMode? = nil,
        outputDataConfig: OutputDataConfig? = nil,
        redactionConfig: RedactionConfig? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.dataAccessRoleArn = dataAccessRoleArn
        self.inputDataConfig = inputDataConfig
        self.jobName = jobName
        self.languageCode = languageCode
        self.mode = mode
        self.outputDataConfig = outputDataConfig
        self.redactionConfig = redactionConfig
    }
}
