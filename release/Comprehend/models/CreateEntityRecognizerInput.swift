// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEntityRecognizerInput: Equatable {
    /// <p> A unique identifier for the request. If you don't set the client request token, Amazon
    ///       Comprehend generates one.</p>
    public var clientRequestToken: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants
    ///       Amazon Comprehend read access to your input data.</p>
    public let dataAccessRoleArn: String?
    /// <p>Specifies the format and location of the input data. The S3 bucket containing the input
    ///       data must be located in the same region as the entity recognizer being created. </p>
    public let inputDataConfig: EntityRecognizerInputDataConfig?
    /// <p> You can specify any of the following languages supported by Amazon Comprehend: English
    ///       ("en"), Spanish ("es"), French ("fr"), Italian ("it"), German ("de"), or Portuguese ("pt").
    ///       All documents must be in the same language.</p>
    public let languageCode: LanguageCode?
    /// <p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
    ///       trained custom models. The ModelKmsKeyId can be either of the following formats</p>
    ///          <ul>
    ///             <li>
    ///                <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Amazon Resource Name (ARN) of a KMS Key:
    ///             <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let modelKmsKeyId: String?
    /// <p>The name given to the newly created recognizer. Recognizer names can be a maximum of 256
    ///       characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The name
    ///       must be unique in the account/region.</p>
    public let recognizerName: String?
    /// <p>Tags to be associated with the entity recognizer being created. A tag is a key-value pair
    ///       that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with
    ///       "Sales" as the key might be added to a resource to indicate its use by the sales department.
    ///     </p>
    public let tags: [Tag]?
    /// <p>ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt
    ///       data on the storage volume attached to the ML compute instance(s) that process the analysis
    ///       job. The VolumeKmsKeyId can be either of the following formats:</p>
    ///          <ul>
    ///             <li>
    ///                <p>KMS Key ID: <code>"1234abcd-12ab-34cd-56ef-1234567890ab"</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Amazon Resource Name (ARN) of a KMS Key:
    ///             <code>"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let volumeKmsKeyId: String?
    /// <p>Configuration parameters for an optional private Virtual Private Cloud (VPC) containing
    ///       the resources you are using for your custom entity recognizer. For more information, see
    ///         <a href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon
    ///         VPC</a>. </p>
    public let vpcConfig: VpcConfig?

    public init (
        clientRequestToken: String? = nil,
        dataAccessRoleArn: String? = nil,
        inputDataConfig: EntityRecognizerInputDataConfig? = nil,
        languageCode: LanguageCode? = nil,
        modelKmsKeyId: String? = nil,
        recognizerName: String? = nil,
        tags: [Tag]? = nil,
        volumeKmsKeyId: String? = nil,
        vpcConfig: VpcConfig? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.dataAccessRoleArn = dataAccessRoleArn
        self.inputDataConfig = inputDataConfig
        self.languageCode = languageCode
        self.modelKmsKeyId = modelKmsKeyId
        self.recognizerName = recognizerName
        self.tags = tags
        self.volumeKmsKeyId = volumeKmsKeyId
        self.vpcConfig = vpcConfig
    }
}
