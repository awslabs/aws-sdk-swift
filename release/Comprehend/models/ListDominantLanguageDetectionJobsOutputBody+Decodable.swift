// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDominantLanguageDetectionJobsOutputBody: Equatable {
    public let dominantLanguageDetectionJobPropertiesList: [DominantLanguageDetectionJobProperties]?
    public let nextToken: String?
}

extension ListDominantLanguageDetectionJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dominantLanguageDetectionJobPropertiesList = "DominantLanguageDetectionJobPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dominantLanguageDetectionJobPropertiesListContainer = try containerValues.decodeIfPresent([DominantLanguageDetectionJobProperties].self, forKey: .dominantLanguageDetectionJobPropertiesList)
        var dominantLanguageDetectionJobPropertiesListDecoded0:[DominantLanguageDetectionJobProperties]? = nil
        if let dominantLanguageDetectionJobPropertiesListContainer = dominantLanguageDetectionJobPropertiesListContainer {
            dominantLanguageDetectionJobPropertiesListDecoded0 = [DominantLanguageDetectionJobProperties]()
            for structure0 in dominantLanguageDetectionJobPropertiesListContainer {
                dominantLanguageDetectionJobPropertiesListDecoded0?.append(structure0)
            }
        }
        dominantLanguageDetectionJobPropertiesList = dominantLanguageDetectionJobPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
