// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PartOfSpeechTag: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case score = "Score"
        case tag = "Tag"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let score = score {
            try encodeContainer.encode(score, forKey: .score)
        }
        if let tag = tag {
            try encodeContainer.encode(tag.rawValue, forKey: .tag)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tagDecoded = try containerValues.decodeIfPresent(PartOfSpeechTagType.self, forKey: .tag)
        tag = tagDecoded
        let scoreDecoded = try containerValues.decodeIfPresent(Float.self, forKey: .score)
        score = scoreDecoded
    }
}
