// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PiiEntityType {
    case address
    case age
    case all
    case awsAccessKey
    case awsSecretKey
    case bankAccountNumber
    case bankRouting
    case creditDebitCvv
    case creditDebitExpiry
    case creditDebitNumber
    case dateTime
    case driverId
    case email
    case ipAddress
    case macAddress
    case name
    case passportNumber
    case password
    case phone
    case pin
    case ssn
    case url
    case username
    case sdkUnknown(String)
}

extension PiiEntityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PiiEntityType] {
        return [
            .address,
            .age,
            .all,
            .awsAccessKey,
            .awsSecretKey,
            .bankAccountNumber,
            .bankRouting,
            .creditDebitCvv,
            .creditDebitExpiry,
            .creditDebitNumber,
            .dateTime,
            .driverId,
            .email,
            .ipAddress,
            .macAddress,
            .name,
            .passportNumber,
            .password,
            .phone,
            .pin,
            .ssn,
            .url,
            .username,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .address: return "ADDRESS"
        case .age: return "AGE"
        case .all: return "ALL"
        case .awsAccessKey: return "AWS_ACCESS_KEY"
        case .awsSecretKey: return "AWS_SECRET_KEY"
        case .bankAccountNumber: return "BANK_ACCOUNT_NUMBER"
        case .bankRouting: return "BANK_ROUTING"
        case .creditDebitCvv: return "CREDIT_DEBIT_CVV"
        case .creditDebitExpiry: return "CREDIT_DEBIT_EXPIRY"
        case .creditDebitNumber: return "CREDIT_DEBIT_NUMBER"
        case .dateTime: return "DATE_TIME"
        case .driverId: return "DRIVER_ID"
        case .email: return "EMAIL"
        case .ipAddress: return "IP_ADDRESS"
        case .macAddress: return "MAC_ADDRESS"
        case .name: return "NAME"
        case .passportNumber: return "PASSPORT_NUMBER"
        case .password: return "PASSWORD"
        case .phone: return "PHONE"
        case .pin: return "PIN"
        case .ssn: return "SSN"
        case .url: return "URL"
        case .username: return "USERNAME"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PiiEntityType(rawValue: rawValue) ?? PiiEntityType.sdkUnknown(rawValue)
    }
}
