// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ContainsPiiEntitiesOutputBody: Equatable {
    public let labels: [EntityLabel]?
}

extension ContainsPiiEntitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case labels = "Labels"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelsContainer = try containerValues.decodeIfPresent([EntityLabel].self, forKey: .labels)
        var labelsDecoded0:[EntityLabel]? = nil
        if let labelsContainer = labelsContainer {
            labelsDecoded0 = [EntityLabel]()
            for structure0 in labelsContainer {
                labelsDecoded0?.append(structure0)
            }
        }
        labels = labelsDecoded0
    }
}
