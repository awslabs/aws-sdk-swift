// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DetectDominantLanguageOutputBody: Equatable {
    public let languages: [DominantLanguage]?
}

extension DetectDominantLanguageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case languages = "Languages"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languagesContainer = try containerValues.decodeIfPresent([DominantLanguage].self, forKey: .languages)
        var languagesDecoded0:[DominantLanguage]? = nil
        if let languagesContainer = languagesContainer {
            languagesDecoded0 = [DominantLanguage]()
            for structure0 in languagesContainer {
                languagesDecoded0?.append(structure0)
            }
        }
        languages = languagesDecoded0
    }
}
