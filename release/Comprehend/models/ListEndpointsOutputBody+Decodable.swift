// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEndpointsOutputBody: Equatable {
    public let endpointPropertiesList: [EndpointProperties]?
    public let nextToken: String?
}

extension ListEndpointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endpointPropertiesList = "EndpointPropertiesList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointPropertiesListContainer = try containerValues.decodeIfPresent([EndpointProperties].self, forKey: .endpointPropertiesList)
        var endpointPropertiesListDecoded0:[EndpointProperties]? = nil
        if let endpointPropertiesListContainer = endpointPropertiesListContainer {
            endpointPropertiesListDecoded0 = [EndpointProperties]()
            for structure0 in endpointPropertiesListContainer {
                endpointPropertiesListDecoded0?.append(structure0)
            }
        }
        endpointPropertiesList = endpointPropertiesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
