// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeAffectedAccountsForOrganizationOutput: Equatable {
    /// <p>A JSON set of elements of the affected accounts.</p>
    public let affectedAccounts: [String]?
    /// <p>This parameter specifies if the AWS Health event is a public AWS service event or an account-specific event.</p>
    ///          <ul>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the
    ///                   <code>affectedAccounts</code> value is always empty.</p>
    ///             </li>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then
    ///                the <code>affectedAccounts</code> value lists the affected AWS accounts in your
    ///                organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you
    ///                have AWS accounts that use that service, those account IDs appear in the
    ///                response.</p>
    ///             </li>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the
    ///                   <code>eventArn</code> that you specified in the request is invalid or doesn't
    ///                exist.</p>
    ///             </li>
    ///          </ul>
    public let eventScopeCode: EventScopeCode?
    /// <p>If the results of a search are large, only a portion of the
    /// results are returned, and a <code>nextToken</code> pagination token is returned in the response. To
    /// retrieve the next batch of results, reissue the search request and include the returned token.
    /// When all results have been returned, the response does not contain a pagination token value.</p>
    public let nextToken: String?

    public init (
        affectedAccounts: [String]? = nil,
        eventScopeCode: EventScopeCode? = nil,
        nextToken: String? = nil
    )
    {
        self.affectedAccounts = affectedAccounts
        self.eventScopeCode = eventScopeCode
        self.nextToken = nextToken
    }
}
