// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Summary information about an event, returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.</p>
public struct OrganizationEvent: Equatable {
    /// <p>The unique identifier for the event. The event ARN has the
    /// <code>arn:aws:health:<i>event-region</i>::event/<i>SERVICE</i>/<i>EVENT_TYPE_CODE</i>/<i>EVENT_TYPE_PLUS_ID</i>
    ///             </code>
    /// format.</p>
    ///          <p>For example, an event ARN might look like the following:</p>
    ///          <p>
    ///             <code>arn:aws:health:us-east-1::event/EC2/EC2_INSTANCE_RETIREMENT_SCHEDULED/EC2_INSTANCE_RETIREMENT_SCHEDULED_ABC123-DEF456</code>
    ///          </p>
    public let arn: String?
    /// <p>The date and time that the event ended.</p>
    public let endTime: Date?
    /// <p>This parameter specifies if the AWS Health event is a public AWS service event or an account-specific event.</p>
    ///          <ul>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>PUBLIC</code>, then the
    ///                   <code>affectedAccounts</code> value is always empty.</p>
    ///             </li>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>ACCOUNT_SPECIFIC</code>, then
    ///                the <code>affectedAccounts</code> value lists the affected AWS accounts in your
    ///                organization. For example, if an event affects a service such as Amazon Elastic Compute Cloud and you
    ///                have AWS accounts that use that service, those account IDs appear in the
    ///                response.</p>
    ///             </li>
    ///             <li>
    ///                <p>If the <code>eventScopeCode</code> value is <code>NONE</code>, then the
    ///                   <code>eventArn</code> that you specified in the request is invalid or doesn't
    ///                exist.</p>
    ///             </li>
    ///          </ul>
    public let eventScopeCode: EventScopeCode?
    /// <p>The category of the event type.</p>
    public let eventTypeCategory: EventTypeCategory?
    /// <p>The unique identifier for the event type. The format is
    ///             <code>AWS_SERVICE_DESCRIPTION</code>. For example,
    ///             <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code>.</p>
    public let eventTypeCode: String?
    /// <p>The most recent date and time that the event was updated.</p>
    public let lastUpdatedTime: Date?
    /// <p>The AWS Region name of the event.</p>
    public let region: String?
    /// <p>The AWS service that is affected by the event, such as EC2 and RDS.</p>
    public let service: String?
    /// <p>The date and time that the event began.</p>
    public let startTime: Date?
    /// <p>The most recent status of the event. Possible values are <code>open</code>,
    ///             <code>closed</code>, and <code>upcoming</code>.</p>
    public let statusCode: EventStatusCode?

    public init (
        arn: String? = nil,
        endTime: Date? = nil,
        eventScopeCode: EventScopeCode? = nil,
        eventTypeCategory: EventTypeCategory? = nil,
        eventTypeCode: String? = nil,
        lastUpdatedTime: Date? = nil,
        region: String? = nil,
        service: String? = nil,
        startTime: Date? = nil,
        statusCode: EventStatusCode? = nil
    )
    {
        self.arn = arn
        self.endTime = endTime
        self.eventScopeCode = eventScopeCode
        self.eventTypeCategory = eventTypeCategory
        self.eventTypeCode = eventTypeCode
        self.lastUpdatedTime = lastUpdatedTime
        self.region = region
        self.service = service
        self.startTime = startTime
        self.statusCode = statusCode
    }
}
