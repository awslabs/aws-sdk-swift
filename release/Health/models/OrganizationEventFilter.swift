// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The values to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.</p>
public struct OrganizationEventFilter: Equatable {
    /// <p>A list of 12-digit AWS account numbers that contains the affected entities.</p>
    public let awsAccountIds: [String]?
    /// <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
    ///          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
    ///             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
    ///          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
    ///          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
    ///          and <code>to</code> is set: match items where the timestamp value is equal to or before
    ///             <code>to</code>.</p>
    public let endTime: DateTimeRange?
    /// <p>A list of entity ARNs (unique identifiers).</p>
    public let entityArns: [String]?
    /// <p>A list of entity identifiers, such as EC2 instance IDs (i-34ab692e) or EBS volumes (vol-426ab23e).</p>
    public let entityValues: [String]?
    /// <p>A list of event status codes.</p>
    public let eventStatusCodes: [EventStatusCode]?
    /// <p>A list of event type category codes (issue, scheduledChange, or accountNotification).</p>
    public let eventTypeCategories: [EventTypeCategory]?
    /// <p>A list of unique identifiers for event types. For example, <code>"AWS_EC2_SYSTEM_MAINTENANCE_EVENT","AWS_RDS_MAINTENANCE_SCHEDULED".</code>
    ///          </p>
    public let eventTypeCodes: [String]?
    /// <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
    ///          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
    ///             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
    ///          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
    ///          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
    ///          and <code>to</code> is set: match items where the timestamp value is equal to or before
    ///             <code>to</code>.</p>
    public let lastUpdatedTime: DateTimeRange?
    /// <p>A list of AWS Regions.</p>
    public let regions: [String]?
    /// <p>The AWS services associated with the event. For example, <code>EC2</code>, <code>RDS</code>.</p>
    public let services: [String]?
    /// <p>A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set:
    ///          match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or
    ///             <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code>
    ///          inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where
    ///          the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set
    ///          and <code>to</code> is set: match items where the timestamp value is equal to or before
    ///             <code>to</code>.</p>
    public let startTime: DateTimeRange?

    public init (
        awsAccountIds: [String]? = nil,
        endTime: DateTimeRange? = nil,
        entityArns: [String]? = nil,
        entityValues: [String]? = nil,
        eventStatusCodes: [EventStatusCode]? = nil,
        eventTypeCategories: [EventTypeCategory]? = nil,
        eventTypeCodes: [String]? = nil,
        lastUpdatedTime: DateTimeRange? = nil,
        regions: [String]? = nil,
        services: [String]? = nil,
        startTime: DateTimeRange? = nil
    )
    {
        self.awsAccountIds = awsAccountIds
        self.endTime = endTime
        self.entityArns = entityArns
        self.entityValues = entityValues
        self.eventStatusCodes = eventStatusCodes
        self.eventTypeCategories = eventTypeCategories
        self.eventTypeCodes = eventTypeCodes
        self.lastUpdatedTime = lastUpdatedTime
        self.regions = regions
        self.services = services
        self.startTime = startTime
    }
}
