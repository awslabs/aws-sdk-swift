// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAffectedEntitiesForOrganizationInputBody: Equatable {
    public let organizationEntityFilters: [EventAccountFilter]?
    public let locale: String?
    public let nextToken: String?
    public let maxResults: Int?
}

extension DescribeAffectedEntitiesForOrganizationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case locale
        case maxResults
        case nextToken
        case organizationEntityFilters
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationEntityFiltersContainer = try containerValues.decodeIfPresent([EventAccountFilter].self, forKey: .organizationEntityFilters)
        var organizationEntityFiltersDecoded0:[EventAccountFilter]? = nil
        if let organizationEntityFiltersContainer = organizationEntityFiltersContainer {
            organizationEntityFiltersDecoded0 = [EventAccountFilter]()
            for structure0 in organizationEntityFiltersContainer {
                organizationEntityFiltersDecoded0?.append(structure0)
            }
        }
        organizationEntityFilters = organizationEntityFiltersDecoded0
        let localeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .locale)
        locale = localeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
