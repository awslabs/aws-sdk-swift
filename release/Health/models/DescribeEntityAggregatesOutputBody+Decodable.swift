// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEntityAggregatesOutputBody: Equatable {
    public let entityAggregates: [EntityAggregate]?
}

extension DescribeEntityAggregatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case entityAggregates
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let entityAggregatesContainer = try containerValues.decodeIfPresent([EntityAggregate].self, forKey: .entityAggregates)
        var entityAggregatesDecoded0:[EntityAggregate]? = nil
        if let entityAggregatesContainer = entityAggregatesContainer {
            entityAggregatesDecoded0 = [EntityAggregate]()
            for structure0 in entityAggregatesContainer {
                entityAggregatesDecoded0?.append(structure0)
            }
        }
        entityAggregates = entityAggregatesDecoded0
    }
}
