// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSyncExecutionInputBody: Equatable {
    public let stateMachineArn: String?
    public let name: String?
    public let input: String?
    public let traceHeader: String?
}

extension StartSyncExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case input
        case name
        case stateMachineArn
        case traceHeader
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let inputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .input)
        input = inputDecoded
        let traceHeaderDecoded = try containerValues.decodeIfPresent(String.self, forKey: .traceHeader)
        traceHeader = traceHeaderDecoded
    }
}
