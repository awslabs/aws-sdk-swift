// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartSyncExecutionOutputBody: Equatable {
    public let executionArn: String?
    public let stateMachineArn: String?
    public let name: String?
    public let startDate: Date?
    public let stopDate: Date?
    public let status: SyncExecutionStatus?
    public let error: String?
    public let cause: String?
    public let input: String?
    public let inputDetails: CloudWatchEventsExecutionDataDetails?
    public let output: String?
    public let outputDetails: CloudWatchEventsExecutionDataDetails?
    public let traceHeader: String?
    public let billingDetails: BillingDetails?
}

extension StartSyncExecutionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case billingDetails
        case cause
        case error
        case executionArn
        case input
        case inputDetails
        case name
        case output
        case outputDetails
        case startDate
        case stateMachineArn
        case status
        case stopDate
        case traceHeader
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionArn)
        executionArn = executionArnDecoded
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let startDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startDate)
        startDate = startDateDecoded
        let stopDateDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .stopDate)
        stopDate = stopDateDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SyncExecutionStatus.self, forKey: .status)
        status = statusDecoded
        let errorDecoded = try containerValues.decodeIfPresent(String.self, forKey: .error)
        error = errorDecoded
        let causeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cause)
        cause = causeDecoded
        let inputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .input)
        input = inputDecoded
        let inputDetailsDecoded = try containerValues.decodeIfPresent(CloudWatchEventsExecutionDataDetails.self, forKey: .inputDetails)
        inputDetails = inputDetailsDecoded
        let outputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .output)
        output = outputDecoded
        let outputDetailsDecoded = try containerValues.decodeIfPresent(CloudWatchEventsExecutionDataDetails.self, forKey: .outputDetails)
        outputDetails = outputDetailsDecoded
        let traceHeaderDecoded = try containerValues.decodeIfPresent(String.self, forKey: .traceHeader)
        traceHeader = traceHeaderDecoded
        let billingDetailsDecoded = try containerValues.decodeIfPresent(BillingDetails.self, forKey: .billingDetails)
        billingDetails = billingDetailsDecoded
    }
}
