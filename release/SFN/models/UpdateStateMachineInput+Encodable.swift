// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateStateMachineInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case definition
        case loggingConfiguration
        case roleArn
        case stateMachineArn
        case tracingConfiguration
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let definition = definition {
            try encodeContainer.encode(definition, forKey: .definition)
        }
        if let loggingConfiguration = loggingConfiguration {
            try encodeContainer.encode(loggingConfiguration, forKey: .loggingConfiguration)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let stateMachineArn = stateMachineArn {
            try encodeContainer.encode(stateMachineArn, forKey: .stateMachineArn)
        }
        if let tracingConfiguration = tracingConfiguration {
            try encodeContainer.encode(tracingConfiguration, forKey: .tracingConfiguration)
        }
    }
}
