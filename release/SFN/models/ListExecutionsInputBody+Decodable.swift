// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExecutionsInputBody: Equatable {
    public let stateMachineArn: String?
    public let statusFilter: ExecutionStatus?
    public let maxResults: Int
    public let nextToken: String?
}

extension ListExecutionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults
        case nextToken
        case stateMachineArn
        case statusFilter
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachineArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateMachineArn)
        stateMachineArn = stateMachineArnDecoded
        let statusFilterDecoded = try containerValues.decodeIfPresent(ExecutionStatus.self, forKey: .statusFilter)
        statusFilter = statusFilterDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
