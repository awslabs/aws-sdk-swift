// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExecutionStartedEventDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case input
        case inputDetails
        case roleArn
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let input = input {
            try encodeContainer.encode(input, forKey: .input)
        }
        if let inputDetails = inputDetails {
            try encodeContainer.encode(inputDetails, forKey: .inputDetails)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .input)
        input = inputDecoded
        let inputDetailsDecoded = try containerValues.decodeIfPresent(HistoryEventExecutionDataDetails.self, forKey: .inputDetails)
        inputDetails = inputDetailsDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
