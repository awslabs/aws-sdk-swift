// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStateMachinesOutputBody: Equatable {
    public let stateMachines: [StateMachineListItem]?
    public let nextToken: String?
}

extension ListStateMachinesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case stateMachines
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stateMachinesContainer = try containerValues.decodeIfPresent([StateMachineListItem].self, forKey: .stateMachines)
        var stateMachinesDecoded0:[StateMachineListItem]? = nil
        if let stateMachinesContainer = stateMachinesContainer {
            stateMachinesDecoded0 = [StateMachineListItem]()
            for structure0 in stateMachinesContainer {
                stateMachinesDecoded0?.append(structure0)
            }
        }
        stateMachines = stateMachinesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
