// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StopExecutionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cause
        case error
        case executionArn
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cause = cause {
            try encodeContainer.encode(cause, forKey: .cause)
        }
        if let error = error {
            try encodeContainer.encode(error, forKey: .error)
        }
        if let executionArn = executionArn {
            try encodeContainer.encode(executionArn, forKey: .executionArn)
        }
    }
}
