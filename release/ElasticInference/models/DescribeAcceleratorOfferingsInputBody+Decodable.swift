// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorOfferingsInputBody: Equatable {
    public let locationType: LocationType?
    public let acceleratorTypes: [String]?
}

extension DescribeAcceleratorOfferingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceleratorTypes
        case locationType
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationTypeDecoded = try containerValues.decodeIfPresent(LocationType.self, forKey: .locationType)
        locationType = locationTypeDecoded
        let acceleratorTypesContainer = try containerValues.decodeIfPresent([String].self, forKey: .acceleratorTypes)
        var acceleratorTypesDecoded0:[String]? = nil
        if let acceleratorTypesContainer = acceleratorTypesContainer {
            acceleratorTypesDecoded0 = [String]()
            for string0 in acceleratorTypesContainer {
                acceleratorTypesDecoded0?.append(string0)
            }
        }
        acceleratorTypes = acceleratorTypesDecoded0
    }
}
