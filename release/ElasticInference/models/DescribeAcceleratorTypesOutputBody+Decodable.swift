// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorTypesOutputBody: Equatable {
    public let acceleratorTypes: [AcceleratorType]?
}

extension DescribeAcceleratorTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceleratorTypes
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorTypesContainer = try containerValues.decodeIfPresent([AcceleratorType].self, forKey: .acceleratorTypes)
        var acceleratorTypesDecoded0:[AcceleratorType]? = nil
        if let acceleratorTypesContainer = acceleratorTypesContainer {
            acceleratorTypesDecoded0 = [AcceleratorType]()
            for structure0 in acceleratorTypesContainer {
                acceleratorTypesDecoded0?.append(structure0)
            }
        }
        acceleratorTypes = acceleratorTypesDecoded0
    }
}
