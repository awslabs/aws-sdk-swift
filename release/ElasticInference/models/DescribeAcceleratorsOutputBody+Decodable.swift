// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAcceleratorsOutputBody: Equatable {
    public let acceleratorSet: [ElasticInferenceAccelerator]?
    public let nextToken: String?
}

extension DescribeAcceleratorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case acceleratorSet
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorSetContainer = try containerValues.decodeIfPresent([ElasticInferenceAccelerator].self, forKey: .acceleratorSet)
        var acceleratorSetDecoded0:[ElasticInferenceAccelerator]? = nil
        if let acceleratorSetContainer = acceleratorSetContainer {
            acceleratorSetDecoded0 = [ElasticInferenceAccelerator]()
            for structure0 in acceleratorSetContainer {
                acceleratorSetDecoded0?.append(structure0)
            }
        }
        acceleratorSet = acceleratorSetDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
