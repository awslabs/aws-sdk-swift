// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateEnvironmentInput: Equatable {
    /// <p>A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html">Apache Airflow configuration options</a>.</p>
    public let airflowConfigurationOptions: [String:String]?
    /// <p>The Apache Airflow version for your environment. For example, <code>v1.10.12</code>. If no value is specified, defaults to the latest version. Valid values: <code>v1.10.12</code>.</p>
    public let airflowVersion: String?
    /// <p>The relative path to the DAGs folder on your Amazon S3 bucket. For example, <code>dags</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html">Adding or updating DAGs</a>.</p>
    public let dagS3Path: String?
    /// <p>The environment class type. Valid values: <code>mw1.small</code>, <code>mw1.medium</code>, <code>mw1.large</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html">Amazon MWAA environment class</a>.</p>
    public let environmentClass: String?
    /// <p>The Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, <code>arn:aws:iam::123456789:role/my-execution-role</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html">Amazon MWAA Execution role</a>.</p>
    public let executionRoleArn: String?
    /// <p>Defines the Apache Airflow logs to send to CloudWatch Logs: <code>DagProcessingLogs</code>, <code>SchedulerLogs</code>, <code>TaskLogs</code>, <code>WebserverLogs</code>, <code>WorkerLogs</code>.</p>
    public let loggingConfiguration: LoggingConfigurationInput?
    /// <p>The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. For example, <code>20</code>. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in <code>MinWorkers</code>.</p>
    public let maxWorkers: Int?
    /// <p>The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the <code>MaxWorkers</code> field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the <code>MinWorkers</code> field. For example, <code>2</code>.</p>
    public let minWorkers: Int?
    /// <p>The name of your Amazon MWAA environment. For example, <code>MyMWAAEnvironment</code>.</p>
    public let name: String?
    /// <p>The VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html">About networking on Amazon MWAA</a>.</p>
    public let networkConfiguration: UpdateNetworkConfigurationInput?
    /// <p>The version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
    public let pluginsS3ObjectVersion: String?
    /// <p>The relative path to the <code>plugins.zip</code> file on your Amazon S3 bucket. For example, <code>plugins.zip</code>. If specified, then the plugins.zip version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html">Installing custom plugins</a>.</p>
    public let pluginsS3Path: String?
    /// <p>The version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html">How S3 Versioning works</a>.</p>
    public let requirementsS3ObjectVersion: String?
    /// <p>The relative path to the <code>requirements.txt</code> file on your Amazon S3 bucket. For example, <code>requirements.txt</code>. If specified, then a file version is required. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html">Installing Python dependencies</a>.</p>
    public let requirementsS3Path: String?
    /// <p>The number of Apache Airflow schedulers to run in your Amazon MWAA environment.</p>
    public let schedulers: Int?
    /// <p>The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, <code>arn:aws:s3:::my-airflow-bucket-unique-name</code>. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html">Create an Amazon S3 bucket for Amazon MWAA</a>.</p>
    public let sourceBucketArn: String?
    /// <p>The Apache Airflow <i>Web server</i> access mode. To learn more, see <a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html">Apache Airflow access modes</a>.</p>
    public let webserverAccessMode: WebserverAccessMode?
    /// <p>The day and time of the week to start weekly maintenance updates of your environment in the following format: <code>DAY:HH:MM</code>. For example: <code>TUE:03:30</code>. You can specify a start time in 30 minute increments only. Supported input includes the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)</p>
    ///             </li>
    ///          </ul>
    public let weeklyMaintenanceWindowStart: String?

    public init (
        airflowConfigurationOptions: [String:String]? = nil,
        airflowVersion: String? = nil,
        dagS3Path: String? = nil,
        environmentClass: String? = nil,
        executionRoleArn: String? = nil,
        loggingConfiguration: LoggingConfigurationInput? = nil,
        maxWorkers: Int? = nil,
        minWorkers: Int? = nil,
        name: String? = nil,
        networkConfiguration: UpdateNetworkConfigurationInput? = nil,
        pluginsS3ObjectVersion: String? = nil,
        pluginsS3Path: String? = nil,
        requirementsS3ObjectVersion: String? = nil,
        requirementsS3Path: String? = nil,
        schedulers: Int? = nil,
        sourceBucketArn: String? = nil,
        webserverAccessMode: WebserverAccessMode? = nil,
        weeklyMaintenanceWindowStart: String? = nil
    )
    {
        self.airflowConfigurationOptions = airflowConfigurationOptions
        self.airflowVersion = airflowVersion
        self.dagS3Path = dagS3Path
        self.environmentClass = environmentClass
        self.executionRoleArn = executionRoleArn
        self.loggingConfiguration = loggingConfiguration
        self.maxWorkers = maxWorkers
        self.minWorkers = minWorkers
        self.name = name
        self.networkConfiguration = networkConfiguration
        self.pluginsS3ObjectVersion = pluginsS3ObjectVersion
        self.pluginsS3Path = pluginsS3Path
        self.requirementsS3ObjectVersion = requirementsS3ObjectVersion
        self.requirementsS3Path = requirementsS3Path
        self.schedulers = schedulers
        self.sourceBucketArn = sourceBucketArn
        self.webserverAccessMode = webserverAccessMode
        self.weeklyMaintenanceWindowStart = weeklyMaintenanceWindowStart
    }
}
