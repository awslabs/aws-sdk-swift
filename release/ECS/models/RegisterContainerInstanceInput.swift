// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RegisterContainerInstanceInput: Equatable {
    /// <p>The container instance attributes that this container instance supports.</p>
    public let attributes: [Attribute]?
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster with which to register your container
    /// 			instance. If you do not specify a cluster, the default cluster is assumed.</p>
    public let cluster: String?
    /// <p>The ARN of the container instance (if it was previously registered).</p>
    public let containerInstanceArn: String?
    /// <p>The instance identity document for the EC2 instance to register. This document can be
    /// 			found by running the following command from the instance: <code>curl
    /// 				http://169.254.169.254/latest/dynamic/instance-identity/document/</code>
    /// 		       </p>
    public let instanceIdentityDocument: String?
    /// <p>The instance identity document signature for the EC2 instance to register. This
    /// 			signature can be found by running the following command from the instance: <code>curl
    /// 				http://169.254.169.254/latest/dynamic/instance-identity/signature/</code>
    /// 		       </p>
    public let instanceIdentityDocumentSignature: String?
    /// <p>The devices that are available on the container instance. The only supported device
    /// 			type is a GPU.</p>
    public let platformDevices: [PlatformDevice]?
    /// <p>The metadata that you apply to the container instance to help you categorize and
    /// 			organize them. Each tag consists of a key and an optional value, both of which you
    /// 			define.</p>
    ///          <p>The following basic restrictions apply to tags:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Maximum number of tags per resource - 50</p>
    ///             </li>
    ///             <li>
    ///                 <p>For each resource, each tag key must be unique, and each tag key can have only
    ///                     one value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum key length - 128 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum value length - 256 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>If your tagging schema is used across multiple services and resources,
    ///                     remember that other services may have restrictions on allowed characters.
    ///                     Generally allowed characters are: letters, numbers, and spaces representable in
    ///                     UTF-8, and the following characters: + - = . _ : / @.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Tag keys and values are case-sensitive.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase
    ///                     combination of such as a prefix for either keys or values as it is reserved for
    ///                     AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with
    ///                     this prefix do not count against your tags per resource limit.</p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?
    /// <p>The resources available on the instance.</p>
    public let totalResources: [Resource]?
    /// <p>The version information for the Amazon ECS container agent and Docker daemon running on the
    /// 			container instance.</p>
    public let versionInfo: VersionInfo?

    public init (
        attributes: [Attribute]? = nil,
        cluster: String? = nil,
        containerInstanceArn: String? = nil,
        instanceIdentityDocument: String? = nil,
        instanceIdentityDocumentSignature: String? = nil,
        platformDevices: [PlatformDevice]? = nil,
        tags: [Tag]? = nil,
        totalResources: [Resource]? = nil,
        versionInfo: VersionInfo? = nil
    )
    {
        self.attributes = attributes
        self.cluster = cluster
        self.containerInstanceArn = containerInstanceArn
        self.instanceIdentityDocument = instanceIdentityDocument
        self.instanceIdentityDocumentSignature = instanceIdentityDocumentSignature
        self.platformDevices = platformDevices
        self.tags = tags
        self.totalResources = totalResources
        self.versionInfo = versionInfo
    }
}
