// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct SubmitTaskStateChangeInput: Equatable {
    /// <p>Any attachments associated with the state change request.</p>
    public let attachments: [AttachmentStateChange]?
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task.</p>
    public let cluster: String?
    /// <p>Any containers associated with the state change request.</p>
    public let containers: [ContainerStateChange]?
    /// <p>The Unix timestamp for when the task execution stopped.</p>
    public let executionStoppedAt: Date?
    /// <p>The details for the managed agent associated with the task.</p>
    public let managedAgents: [ManagedAgentStateChange]?
    /// <p>The Unix timestamp for when the container image pull began.</p>
    public let pullStartedAt: Date?
    /// <p>The Unix timestamp for when the container image pull completed.</p>
    public let pullStoppedAt: Date?
    /// <p>The reason for the state change request.</p>
    public let reason: String?
    /// <p>The status of the state change request.</p>
    public let status: String?
    /// <p>The task ID or full ARN of the task in the state change request.</p>
    public let task: String?

    public init (
        attachments: [AttachmentStateChange]? = nil,
        cluster: String? = nil,
        containers: [ContainerStateChange]? = nil,
        executionStoppedAt: Date? = nil,
        managedAgents: [ManagedAgentStateChange]? = nil,
        pullStartedAt: Date? = nil,
        pullStoppedAt: Date? = nil,
        reason: String? = nil,
        status: String? = nil,
        task: String? = nil
    )
    {
        self.attachments = attachments
        self.cluster = cluster
        self.containers = containers
        self.executionStoppedAt = executionStoppedAt
        self.managedAgents = managedAgents
        self.pullStartedAt = pullStartedAt
        self.pullStoppedAt = pullStoppedAt
        self.reason = reason
        self.status = status
        self.task = task
    }
}
