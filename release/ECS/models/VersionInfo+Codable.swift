// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension VersionInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case agentHash
        case agentVersion
        case dockerVersion
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let agentHash = agentHash {
            try encodeContainer.encode(agentHash, forKey: .agentHash)
        }
        if let agentVersion = agentVersion {
            try encodeContainer.encode(agentVersion, forKey: .agentVersion)
        }
        if let dockerVersion = dockerVersion {
            try encodeContainer.encode(dockerVersion, forKey: .dockerVersion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentVersion)
        agentVersion = agentVersionDecoded
        let agentHashDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentHash)
        agentHash = agentHashDecoded
        let dockerVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dockerVersion)
        dockerVersion = dockerVersionDecoded
    }
}
