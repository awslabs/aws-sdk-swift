// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutClusterCapacityProvidersInputBody: Equatable {
    public let cluster: String?
    public let capacityProviders: [String]?
    public let defaultCapacityProviderStrategy: [CapacityProviderStrategyItem]?
}

extension PutClusterCapacityProvidersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityProviders
        case cluster
        case defaultCapacityProviderStrategy
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let capacityProvidersContainer = try containerValues.decodeIfPresent([String].self, forKey: .capacityProviders)
        var capacityProvidersDecoded0:[String]? = nil
        if let capacityProvidersContainer = capacityProvidersContainer {
            capacityProvidersDecoded0 = [String]()
            for string0 in capacityProvidersContainer {
                capacityProvidersDecoded0?.append(string0)
            }
        }
        capacityProviders = capacityProvidersDecoded0
        let defaultCapacityProviderStrategyContainer = try containerValues.decodeIfPresent([CapacityProviderStrategyItem].self, forKey: .defaultCapacityProviderStrategy)
        var defaultCapacityProviderStrategyDecoded0:[CapacityProviderStrategyItem]? = nil
        if let defaultCapacityProviderStrategyContainer = defaultCapacityProviderStrategyContainer {
            defaultCapacityProviderStrategyDecoded0 = [CapacityProviderStrategyItem]()
            for structure0 in defaultCapacityProviderStrategyContainer {
                defaultCapacityProviderStrategyDecoded0?.append(structure0)
            }
        }
        defaultCapacityProviderStrategy = defaultCapacityProviderStrategyDecoded0
    }
}
