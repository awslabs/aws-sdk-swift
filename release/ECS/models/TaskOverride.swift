// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The overrides associated with a task.</p>
public struct TaskOverride: Equatable {
    /// <p>One or more container overrides sent to a task.</p>
    public let containerOverrides: [ContainerOverride]?
    /// <p>The cpu override for the task.</p>
    public let cpu: String?
    /// <p>The ephemeral storage setting override for the task.</p>
    /// 		       <note>
    /// 			         <p>This parameter is only supported for tasks hosted on AWS Fargate using platform
    /// 				version <code>1.4.0</code> or later.</p>
    /// 		       </note>
    public let ephemeralStorage: EphemeralStorage?
    /// <p>The Amazon Resource Name (ARN) of the task execution IAM role override for the task.</p>
    public let executionRoleArn: String?
    /// <p>The Elastic Inference accelerator override for the task.</p>
    public let inferenceAcceleratorOverrides: [InferenceAcceleratorOverride]?
    /// <p>The memory override for the task.</p>
    public let memory: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers
    /// 			in this task are granted the permissions that are specified in this role.</p>
    public let taskRoleArn: String?

    public init (
        containerOverrides: [ContainerOverride]? = nil,
        cpu: String? = nil,
        ephemeralStorage: EphemeralStorage? = nil,
        executionRoleArn: String? = nil,
        inferenceAcceleratorOverrides: [InferenceAcceleratorOverride]? = nil,
        memory: String? = nil,
        taskRoleArn: String? = nil
    )
    {
        self.containerOverrides = containerOverrides
        self.cpu = cpu
        self.ephemeralStorage = ephemeralStorage
        self.executionRoleArn = executionRoleArn
        self.inferenceAcceleratorOverrides = inferenceAcceleratorOverrides
        self.memory = memory
        self.taskRoleArn = taskRoleArn
    }
}
