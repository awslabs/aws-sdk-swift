// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTaskDefinitionsOutputBody: Equatable {
    public let taskDefinitionArns: [String]?
    public let nextToken: String?
}

extension ListTaskDefinitionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case taskDefinitionArns
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskDefinitionArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .taskDefinitionArns)
        var taskDefinitionArnsDecoded0:[String]? = nil
        if let taskDefinitionArnsContainer = taskDefinitionArnsContainer {
            taskDefinitionArnsDecoded0 = [String]()
            for string0 in taskDefinitionArnsContainer {
                taskDefinitionArnsDecoded0?.append(string0)
            }
        }
        taskDefinitionArns = taskDefinitionArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
