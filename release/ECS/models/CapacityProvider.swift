// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The details of a capacity provider.</p>
public struct CapacityProvider: Equatable {
    /// <p>The Auto Scaling group settings for the capacity provider.</p>
    public let autoScalingGroupProvider: AutoScalingGroupProvider?
    /// <p>The Amazon Resource Name (ARN) that identifies the capacity provider.</p>
    public let capacityProviderArn: String?
    /// <p>The name of the capacity provider.</p>
    public let name: String?
    /// <p>The current status of the capacity provider. Only capacity providers in an
    /// 				<code>ACTIVE</code> state can be used in a cluster. When a capacity provider is
    /// 			successfully deleted, it will have an <code>INACTIVE</code> status.</p>
    public let status: CapacityProviderStatus?
    /// <p>The metadata that you apply to the capacity provider to help you categorize and
    /// 			organize it. Each tag consists of a key and an optional value, both of which you
    /// 			define.</p>
    ///          <p>The following basic restrictions apply to tags:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Maximum number of tags per resource - 50</p>
    ///             </li>
    ///             <li>
    ///                 <p>For each resource, each tag key must be unique, and each tag key can have only
    ///                     one value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum key length - 128 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum value length - 256 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>If your tagging schema is used across multiple services and resources,
    ///                     remember that other services may have restrictions on allowed characters.
    ///                     Generally allowed characters are: letters, numbers, and spaces representable in
    ///                     UTF-8, and the following characters: + - = . _ : / @.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Tag keys and values are case-sensitive.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase
    ///                     combination of such as a prefix for either keys or values as it is reserved for
    ///                     AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with
    ///                     this prefix do not count against your tags per resource limit.</p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?
    /// <p>The update status of the capacity provider. The following are the possible states that
    /// 			will be returned.</p>
    /// 		       <dl>
    ///             <dt>DELETE_IN_PROGRESS</dt>
    ///             <dd>
    /// 					          <p>The capacity provider is in the process of being deleted.</p>
    /// 				        </dd>
    ///             <dt>DELETE_COMPLETE</dt>
    ///             <dd>
    /// 					          <p>The capacity provider has been successfully deleted and will have an
    /// 							<code>INACTIVE</code> status.</p>
    /// 				        </dd>
    ///             <dt>DELETE_FAILED</dt>
    ///             <dd>
    /// 					          <p>The capacity provider was unable to be deleted. The update status reason
    /// 						will provide further details about why the delete failed.</p>
    /// 				        </dd>
    ///          </dl>
    public let updateStatus: CapacityProviderUpdateStatus?
    /// <p>The update status reason. This provides further details about the update status for
    /// 			the capacity provider.</p>
    public let updateStatusReason: String?

    public init (
        autoScalingGroupProvider: AutoScalingGroupProvider? = nil,
        capacityProviderArn: String? = nil,
        name: String? = nil,
        status: CapacityProviderStatus? = nil,
        tags: [Tag]? = nil,
        updateStatus: CapacityProviderUpdateStatus? = nil,
        updateStatusReason: String? = nil
    )
    {
        self.autoScalingGroupProvider = autoScalingGroupProvider
        self.capacityProviderArn = capacityProviderArn
        self.name = name
        self.status = status
        self.tags = tags
        self.updateStatus = updateStatus
        self.updateStatusReason = updateStatusReason
    }
}
