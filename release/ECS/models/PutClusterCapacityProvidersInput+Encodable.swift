// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutClusterCapacityProvidersInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case capacityProviders
        case cluster
        case defaultCapacityProviderStrategy
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let capacityProviders = capacityProviders {
            var capacityProvidersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .capacityProviders)
            for stringlist0 in capacityProviders {
                try capacityProvidersContainer.encode(stringlist0)
            }
        }
        if let cluster = cluster {
            try encodeContainer.encode(cluster, forKey: .cluster)
        }
        if let defaultCapacityProviderStrategy = defaultCapacityProviderStrategy {
            var defaultCapacityProviderStrategyContainer = encodeContainer.nestedUnkeyedContainer(forKey: .defaultCapacityProviderStrategy)
            for capacityproviderstrategy0 in defaultCapacityProviderStrategy {
                try defaultCapacityProviderStrategyContainer.encode(capacityproviderstrategy0)
            }
        }
    }
}
