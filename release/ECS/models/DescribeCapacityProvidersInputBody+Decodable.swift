// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCapacityProvidersInputBody: Equatable {
    public let capacityProviders: [String]?
    public let include: [CapacityProviderField]?
    public let maxResults: Int?
    public let nextToken: String?
}

extension DescribeCapacityProvidersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityProviders
        case include
        case maxResults
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let capacityProvidersContainer = try containerValues.decodeIfPresent([String].self, forKey: .capacityProviders)
        var capacityProvidersDecoded0:[String]? = nil
        if let capacityProvidersContainer = capacityProvidersContainer {
            capacityProvidersDecoded0 = [String]()
            for string0 in capacityProvidersContainer {
                capacityProvidersDecoded0?.append(string0)
            }
        }
        capacityProviders = capacityProvidersDecoded0
        let includeContainer = try containerValues.decodeIfPresent([CapacityProviderField].self, forKey: .include)
        var includeDecoded0:[CapacityProviderField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [CapacityProviderField]()
            for string0 in includeContainer {
                includeDecoded0?.append(string0)
            }
        }
        include = includeDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
