// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The task placement strategy for a task or service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task Placement Strategies</a> in the
/// 				<i>Amazon Elastic Container Service Developer Guide</i>.</p>
public struct PlacementStrategy: Equatable {
    /// <p>The field to apply the placement strategy against. For the <code>spread</code>
    /// 			placement strategy, valid values are <code>instanceId</code> (or <code>host</code>,
    /// 			which has the same effect), or any platform or custom attribute that is applied to a
    /// 			container instance, such as <code>attribute:ecs.availability-zone</code>. For the
    /// 				<code>binpack</code> placement strategy, valid values are <code>cpu</code> and
    /// 				<code>memory</code>. For the <code>random</code> placement strategy, this field is
    /// 			not used.</p>
    public let field: String?
    /// <p>The type of placement strategy. The <code>random</code> placement strategy randomly
    /// 			places tasks on available candidates. The <code>spread</code> placement strategy spreads
    /// 			placement across available candidates evenly based on the <code>field</code> parameter.
    /// 			The <code>binpack</code> strategy places tasks on available candidates that have the
    /// 			least available amount of the resource that is specified with the <code>field</code>
    /// 			parameter. For example, if you binpack on memory, a task is placed on the instance with
    /// 			the least amount of remaining memory (but still enough to run the task).</p>
    public let type: PlacementStrategyType?

    public init (
        field: String? = nil,
        type: PlacementStrategyType? = nil
    )
    {
        self.field = field
        self.type = type
    }
}
