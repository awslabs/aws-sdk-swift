// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCapacityProvidersOutputBody: Equatable {
    public let capacityProviders: [CapacityProvider]?
    public let failures: [Failure]?
    public let nextToken: String?
}

extension DescribeCapacityProvidersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityProviders
        case failures
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let capacityProvidersContainer = try containerValues.decodeIfPresent([CapacityProvider].self, forKey: .capacityProviders)
        var capacityProvidersDecoded0:[CapacityProvider]? = nil
        if let capacityProvidersContainer = capacityProvidersContainer {
            capacityProvidersDecoded0 = [CapacityProvider]()
            for structure0 in capacityProvidersContainer {
                capacityProvidersDecoded0?.append(structure0)
            }
        }
        capacityProviders = capacityProvidersDecoded0
        let failuresContainer = try containerValues.decodeIfPresent([Failure].self, forKey: .failures)
        var failuresDecoded0:[Failure]? = nil
        if let failuresContainer = failuresContainer {
            failuresDecoded0 = [Failure]()
            for structure0 in failuresContainer {
                failuresDecoded0?.append(structure0)
            }
        }
        failures = failuresDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
