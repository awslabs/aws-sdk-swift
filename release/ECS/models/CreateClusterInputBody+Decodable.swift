// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateClusterInputBody: Equatable {
    public let clusterName: String?
    public let tags: [Tag]?
    public let settings: [ClusterSetting]?
    public let configuration: ClusterConfiguration?
    public let capacityProviders: [String]?
    public let defaultCapacityProviderStrategy: [CapacityProviderStrategyItem]?
}

extension CreateClusterInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case capacityProviders
        case clusterName
        case configuration
        case defaultCapacityProviderStrategy
        case settings
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterName)
        clusterName = clusterNameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let settingsContainer = try containerValues.decodeIfPresent([ClusterSetting].self, forKey: .settings)
        var settingsDecoded0:[ClusterSetting]? = nil
        if let settingsContainer = settingsContainer {
            settingsDecoded0 = [ClusterSetting]()
            for structure0 in settingsContainer {
                settingsDecoded0?.append(structure0)
            }
        }
        settings = settingsDecoded0
        let configurationDecoded = try containerValues.decodeIfPresent(ClusterConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let capacityProvidersContainer = try containerValues.decodeIfPresent([String].self, forKey: .capacityProviders)
        var capacityProvidersDecoded0:[String]? = nil
        if let capacityProvidersContainer = capacityProvidersContainer {
            capacityProvidersDecoded0 = [String]()
            for string0 in capacityProvidersContainer {
                capacityProvidersDecoded0?.append(string0)
            }
        }
        capacityProviders = capacityProvidersDecoded0
        let defaultCapacityProviderStrategyContainer = try containerValues.decodeIfPresent([CapacityProviderStrategyItem].self, forKey: .defaultCapacityProviderStrategy)
        var defaultCapacityProviderStrategyDecoded0:[CapacityProviderStrategyItem]? = nil
        if let defaultCapacityProviderStrategyContainer = defaultCapacityProviderStrategyContainer {
            defaultCapacityProviderStrategyDecoded0 = [CapacityProviderStrategyItem]()
            for structure0 in defaultCapacityProviderStrategyContainer {
                defaultCapacityProviderStrategyDecoded0?.append(structure0)
            }
        }
        defaultCapacityProviderStrategy = defaultCapacityProviderStrategyDecoded0
    }
}
