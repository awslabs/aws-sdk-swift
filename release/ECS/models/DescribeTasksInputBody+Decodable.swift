// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTasksInputBody: Equatable {
    public let cluster: String?
    public let tasks: [String]?
    public let include: [TaskField]?
}

extension DescribeTasksInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cluster
        case include
        case tasks
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let tasksContainer = try containerValues.decodeIfPresent([String].self, forKey: .tasks)
        var tasksDecoded0:[String]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [String]()
            for string0 in tasksContainer {
                tasksDecoded0?.append(string0)
            }
        }
        tasks = tasksDecoded0
        let includeContainer = try containerValues.decodeIfPresent([TaskField].self, forKey: .include)
        var includeDecoded0:[TaskField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [TaskField]()
            for string0 in includeContainer {
                includeDecoded0?.append(string0)
            }
        }
        include = includeDecoded0
    }
}
