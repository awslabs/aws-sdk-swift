// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContainerInstancesInputBody: Equatable {
    public let cluster: String?
    public let filter: String?
    public let nextToken: String?
    public let maxResults: Int?
    public let status: ContainerInstanceStatus?
}

extension ListContainerInstancesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cluster
        case filter
        case maxResults
        case nextToken
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let filterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .filter)
        filter = filterDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ContainerInstanceStatus.self, forKey: .status)
        status = statusDecoded
    }
}
