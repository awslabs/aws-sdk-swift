// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteCommandOutputBody: Equatable {
    public let clusterArn: String?
    public let containerArn: String?
    public let containerName: String?
    public let interactive: Bool
    public let session: Session?
    public let taskArn: String?
}

extension ExecuteCommandOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterArn
        case containerArn
        case containerName
        case interactive
        case session
        case taskArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
        let containerArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .containerArn)
        containerArn = containerArnDecoded
        let containerNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .containerName)
        containerName = containerNameDecoded
        let interactiveDecoded = try containerValues.decode(Bool.self, forKey: .interactive)
        interactive = interactiveDecoded
        let sessionDecoded = try containerValues.decodeIfPresent(Session.self, forKey: .session)
        session = sessionDecoded
        let taskArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskArn)
        taskArn = taskArnDecoded
    }
}
