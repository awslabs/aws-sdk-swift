// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExecuteCommandInputBody: Equatable {
    public let cluster: String?
    public let container: String?
    public let command: String?
    public let interactive: Bool
    public let task: String?
}

extension ExecuteCommandInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cluster
        case command
        case container
        case interactive
        case task
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let containerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .container)
        container = containerDecoded
        let commandDecoded = try containerValues.decodeIfPresent(String.self, forKey: .command)
        command = commandDecoded
        let interactiveDecoded = try containerValues.decode(Bool.self, forKey: .interactive)
        interactive = interactiveDecoded
        let taskDecoded = try containerValues.decodeIfPresent(String.self, forKey: .task)
        task = taskDecoded
    }
}
