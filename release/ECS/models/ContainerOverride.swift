// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The overrides that should be sent to a container. An empty container override can be
/// 			passed in. An example of an empty container override would be
/// 				<code>{"containerOverrides": [ ] }</code>. If a non-empty container override is
/// 			specified, the <code>name</code> parameter must be included.</p>
public struct ContainerOverride: Equatable {
    /// <p>The command to send to the container that overrides the default command from the
    /// 			Docker image or the task definition. You must also specify a container name.</p>
    public let command: [String]?
    /// <p>The number of <code>cpu</code> units reserved for the container, instead of the
    /// 			default value from the task definition. You must also specify a container name.</p>
    public let cpu: Int?
    /// <p>The environment variables to send to the container. You can add new environment
    /// 			variables, which are added to the container at launch, or you can override the existing
    /// 			environment variables from the Docker image or the task definition. You must also
    /// 			specify a container name.</p>
    public let environment: [KeyValuePair]?
    /// <p>A list of files containing the environment variables to pass to a container, instead
    /// 			of the value from the container definition.</p>
    public let environmentFiles: [EnvironmentFile]?
    /// <p>The hard limit (in MiB) of memory to present to the container, instead of the default
    /// 			value from the task definition. If your container attempts to exceed the memory
    /// 			specified here, the container is killed. You must also specify a container name.</p>
    public let memory: Int?
    /// <p>The soft limit (in MiB) of memory to reserve for the container, instead of the default
    /// 			value from the task definition. You must also specify a container name.</p>
    public let memoryReservation: Int?
    /// <p>The name of the container that receives the override. This parameter is required if
    /// 			any override is specified.</p>
    public let name: String?
    /// <p>The type and amount of a resource to assign to a container, instead of the default
    /// 			value from the task definition. The only supported resource is a GPU.</p>
    public let resourceRequirements: [ResourceRequirement]?

    public init (
        command: [String]? = nil,
        cpu: Int? = nil,
        environment: [KeyValuePair]? = nil,
        environmentFiles: [EnvironmentFile]? = nil,
        memory: Int? = nil,
        memoryReservation: Int? = nil,
        name: String? = nil,
        resourceRequirements: [ResourceRequirement]? = nil
    )
    {
        self.command = command
        self.cpu = cpu
        self.environment = environment
        self.environmentFiles = environmentFiles
        self.memory = memory
        self.memoryReservation = memoryReservation
        self.name = name
        self.resourceRequirements = resourceRequirements
    }
}
