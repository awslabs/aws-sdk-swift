// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTaskInput: Equatable {
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster on which to start your task.
    /// 			If you do not specify a cluster, the default cluster is assumed.</p>
    public let cluster: String?
    /// <p>The container instance IDs or full ARN entries for the container instances on which
    /// 			you would like to place your task. You can specify up to 10 container instances.</p>
    public let containerInstances: [String]?
    /// <p>Specifies whether to enable Amazon ECS managed tags for the task. For more information, see
    /// 				<a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html">Tagging Your Amazon ECS
    /// 				Resources</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    public let enableECSManagedTags: Bool
    /// <p>Whether or not the execute command functionality is enabled for the task. If
    /// 				<code>true</code>, this enables execute command functionality on all containers in
    /// 			the task.</p>
    public let enableExecuteCommand: Bool
    /// <p>The name of the task group to associate with the task. The default value is the family
    /// 			name of the task definition (for example, family:my-family-name).</p>
    public let group: String?
    /// <p>The VPC subnet and security group configuration for tasks that receive their own
    ///             elastic network interface by using the <code>awsvpc</code> networking mode.</p>
    public let networkConfiguration: NetworkConfiguration?
    /// <p>A list of container overrides in JSON format that specify the name of a container in
    /// 			the specified task definition and the overrides it should receive. You can override the
    /// 			default command for a container (that is specified in the task definition or Docker
    /// 			image) with a <code>command</code> override. You can also override existing environment
    /// 			variables (that are specified in the task definition or Docker image) on a container or
    /// 			add new environment variables to it with an <code>environment</code> override.</p>
    /// 		       <note>
    /// 			         <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON
    /// 				formatting characters of the override structure.</p>
    /// 		       </note>
    public let overrides: TaskOverride?
    /// <p>Specifies whether to propagate the tags from the task definition or the service to the
    /// 			task. If no value is specified, the tags are not propagated.</p>
    public let propagateTags: PropagateTags?
    /// <p>The reference ID to use for the task.</p>
    public let referenceId: String?
    /// <p>An optional tag specified when a task is started. For example, if you automatically
    /// 			trigger a task to run a batch process job, you could apply a unique identifier for that
    /// 			job to your task with the <code>startedBy</code> parameter. You can then identify which
    /// 			tasks belong to that job by filtering the results of a <a>ListTasks</a> call
    /// 			with the <code>startedBy</code> value. Up to 36 letters (uppercase and lowercase),
    /// 			numbers, hyphens, and underscores are allowed.</p>
    /// 		       <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter
    /// 			contains the deployment ID of the service that starts it.</p>
    public let startedBy: String?
    /// <p>The metadata that you apply to the task to help you categorize and organize them. Each
    /// 			tag consists of a key and an optional value, both of which you define.</p>
    /// 		       <p>The following basic restrictions apply to tags:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Maximum number of tags per resource - 50</p>
    ///             </li>
    ///             <li>
    ///                 <p>For each resource, each tag key must be unique, and each tag key can have only
    ///                     one value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum key length - 128 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum value length - 256 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>If your tagging schema is used across multiple services and resources,
    ///                     remember that other services may have restrictions on allowed characters.
    ///                     Generally allowed characters are: letters, numbers, and spaces representable in
    ///                     UTF-8, and the following characters: + - = . _ : / @.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Tag keys and values are case-sensitive.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase
    ///                     combination of such as a prefix for either keys or values as it is reserved for
    ///                     AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with
    ///                     this prefix do not count against your tags per resource limit.</p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?
    /// <p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or
    /// 			full ARN of the task definition to start. If a <code>revision</code> is not specified,
    /// 			the latest <code>ACTIVE</code> revision is used.</p>
    public let taskDefinition: String?

    public init (
        cluster: String? = nil,
        containerInstances: [String]? = nil,
        enableECSManagedTags: Bool = false,
        enableExecuteCommand: Bool = false,
        group: String? = nil,
        networkConfiguration: NetworkConfiguration? = nil,
        overrides: TaskOverride? = nil,
        propagateTags: PropagateTags? = nil,
        referenceId: String? = nil,
        startedBy: String? = nil,
        tags: [Tag]? = nil,
        taskDefinition: String? = nil
    )
    {
        self.cluster = cluster
        self.containerInstances = containerInstances
        self.enableECSManagedTags = enableECSManagedTags
        self.enableExecuteCommand = enableExecuteCommand
        self.group = group
        self.networkConfiguration = networkConfiguration
        self.overrides = overrides
        self.propagateTags = propagateTags
        self.referenceId = referenceId
        self.startedBy = startedBy
        self.tags = tags
        self.taskDefinition = taskDefinition
    }
}
