// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTaskSetsInputBody: Equatable {
    public let cluster: String?
    public let service: String?
    public let taskSets: [String]?
    public let include: [TaskSetField]?
}

extension DescribeTaskSetsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cluster
        case include
        case service
        case taskSets
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let serviceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .service)
        service = serviceDecoded
        let taskSetsContainer = try containerValues.decodeIfPresent([String].self, forKey: .taskSets)
        var taskSetsDecoded0:[String]? = nil
        if let taskSetsContainer = taskSetsContainer {
            taskSetsDecoded0 = [String]()
            for string0 in taskSetsContainer {
                taskSetsDecoded0?.append(string0)
            }
        }
        taskSets = taskSetsDecoded0
        let includeContainer = try containerValues.decodeIfPresent([TaskSetField].self, forKey: .include)
        var includeDecoded0:[TaskSetField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [TaskSetField]()
            for string0 in includeContainer {
                includeDecoded0?.append(string0)
            }
        }
        include = includeDecoded0
    }
}
