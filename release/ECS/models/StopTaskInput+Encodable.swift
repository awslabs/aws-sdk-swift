// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StopTaskInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cluster
        case reason
        case task
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cluster = cluster {
            try encodeContainer.encode(cluster, forKey: .cluster)
        }
        if let reason = reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let task = task {
            try encodeContainer.encode(task, forKey: .task)
        }
    }
}
