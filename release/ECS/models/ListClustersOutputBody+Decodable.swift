// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListClustersOutputBody: Equatable {
    public let clusterArns: [String]?
    public let nextToken: String?
}

extension ListClustersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterArns
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .clusterArns)
        var clusterArnsDecoded0:[String]? = nil
        if let clusterArnsContainer = clusterArnsContainer {
            clusterArnsDecoded0 = [String]()
            for string0 in clusterArnsContainer {
                clusterArnsDecoded0?.append(string0)
            }
        }
        clusterArns = clusterArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
