// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SettingName {
    case awsvpcTrunking
    case containerInsights
    case containerInstanceLongArnFormat
    case serviceLongArnFormat
    case taskLongArnFormat
    case sdkUnknown(String)
}

extension SettingName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SettingName] {
        return [
            .awsvpcTrunking,
            .containerInsights,
            .containerInstanceLongArnFormat,
            .serviceLongArnFormat,
            .taskLongArnFormat,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awsvpcTrunking: return "awsvpcTrunking"
        case .containerInsights: return "containerInsights"
        case .containerInstanceLongArnFormat: return "containerInstanceLongArnFormat"
        case .serviceLongArnFormat: return "serviceLongArnFormat"
        case .taskLongArnFormat: return "taskLongArnFormat"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SettingName(rawValue: rawValue) ?? SettingName.sdkUnknown(rawValue)
    }
}
