// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListTaskDefinitionsInput: Equatable {
    /// <p>The full family name with which to filter the <code>ListTaskDefinitions</code>
    /// 			results. Specifying a <code>familyPrefix</code> limits the listed task definitions to
    /// 			task definition revisions that belong to that family.</p>
    public let familyPrefix: String?
    /// <p>The maximum number of task definition results returned by
    /// 				<code>ListTaskDefinitions</code> in paginated output. When this parameter is used,
    /// 				<code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a
    /// 			single page along with a <code>nextToken</code> response element. The remaining results
    /// 			of the initial request can be seen by sending another <code>ListTaskDefinitions</code>
    /// 			request with the returned <code>nextToken</code> value. This value can be between
    /// 			1 and 100. If this parameter is not used, then
    /// 				<code>ListTaskDefinitions</code> returns up to 100 results and a
    /// 				<code>nextToken</code> value if applicable.</p>
    public let maxResults: Int?
    /// <p>The <code>nextToken</code> value returned from a <code>ListTaskDefinitions</code>
    /// 			request indicating that more results are available to fulfill the request and further
    /// 			calls will be needed. If <code>maxResults</code> was provided, it is possible the number
    /// 			of results to be fewer than <code>maxResults</code>.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that is only used to
    ///                 retrieve the next items in a list and not for other programmatic purposes.</p>
    ///         </note>
    public let nextToken: String?
    /// <p>The order in which to sort the results. Valid values are <code>ASC</code> and
    /// 				<code>DESC</code>. By default (<code>ASC</code>), task definitions are listed
    /// 			lexicographically by family name and in ascending numerical order by revision so that
    /// 			the newest task definitions in a family are listed last. Setting this parameter to
    /// 				<code>DESC</code> reverses the sort order on family name and revision so that the
    /// 			newest task definitions in a family are listed first.</p>
    public let sort: SortOrder?
    /// <p>The task definition status with which to filter the <code>ListTaskDefinitions</code>
    /// 			results. By default, only <code>ACTIVE</code> task definitions are listed. By setting
    /// 			this parameter to <code>INACTIVE</code>, you can view task definitions that are
    /// 				<code>INACTIVE</code> as long as an active task or service still references them. If
    /// 			you paginate the resulting output, be sure to keep the <code>status</code> value
    /// 			constant in each subsequent request.</p>
    public let status: TaskDefinitionStatus?

    public init (
        familyPrefix: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        sort: SortOrder? = nil,
        status: TaskDefinitionStatus? = nil
    )
    {
        self.familyPrefix = familyPrefix
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sort = sort
        self.status = status
    }
}
