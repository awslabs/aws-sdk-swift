// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContainerInstancesOutputBody: Equatable {
    public let containerInstanceArns: [String]?
    public let nextToken: String?
}

extension ListContainerInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case containerInstanceArns
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containerInstanceArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .containerInstanceArns)
        var containerInstanceArnsDecoded0:[String]? = nil
        if let containerInstanceArnsContainer = containerInstanceArnsContainer {
            containerInstanceArnsDecoded0 = [String]()
            for string0 in containerInstanceArnsContainer {
                containerInstanceArnsDecoded0?.append(string0)
            }
        }
        containerInstanceArns = containerInstanceArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
