// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountSettingsOutputBody: Equatable {
    public let settings: [Setting]?
    public let nextToken: String?
}

extension ListAccountSettingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case settings
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let settingsContainer = try containerValues.decodeIfPresent([Setting].self, forKey: .settings)
        var settingsDecoded0:[Setting]? = nil
        if let settingsContainer = settingsContainer {
            settingsDecoded0 = [Setting]()
            for structure0 in settingsContainer {
                settingsDecoded0?.append(structure0)
            }
        }
        settings = settingsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
