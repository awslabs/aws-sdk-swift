// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTasksOutputBody: Equatable {
    public let taskArns: [String]?
    public let nextToken: String?
}

extension ListTasksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case taskArns
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .taskArns)
        var taskArnsDecoded0:[String]? = nil
        if let taskArnsContainer = taskArnsContainer {
            taskArnsDecoded0 = [String]()
            for string0 in taskArnsContainer {
                taskArnsDecoded0?.append(string0)
            }
        }
        taskArns = taskArnsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
