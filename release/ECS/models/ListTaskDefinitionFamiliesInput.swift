// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListTaskDefinitionFamiliesInput: Equatable {
    /// <p>The <code>familyPrefix</code> is a string that is used to filter the results of
    /// 				<code>ListTaskDefinitionFamilies</code>. If you specify a <code>familyPrefix</code>,
    /// 			only task definition family names that begin with the <code>familyPrefix</code> string
    /// 			are returned.</p>
    public let familyPrefix: String?
    /// <p>The maximum number of task definition family results returned by
    /// 				<code>ListTaskDefinitionFamilies</code> in paginated output. When this parameter is
    /// 			used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a
    /// 			single page along with a <code>nextToken</code> response element. The remaining results
    /// 			of the initial request can be seen by sending another
    /// 				<code>ListTaskDefinitionFamilies</code> request with the returned
    /// 				<code>nextToken</code> value. This value can be between 1 and
    /// 			100. If this parameter is not used, then
    /// 				<code>ListTaskDefinitionFamilies</code> returns up to 100 results
    /// 			and a <code>nextToken</code> value if applicable.</p>
    public let maxResults: Int?
    /// <p>The <code>nextToken</code> value returned from a
    /// 				<code>ListTaskDefinitionFamilies</code> request indicating that more results are
    /// 			available to fulfill the request and further calls will be needed. If
    /// 				<code>maxResults</code> was provided, it is possible the number of results to be
    /// 			fewer than <code>maxResults</code>.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that is only used to
    ///                 retrieve the next items in a list and not for other programmatic purposes.</p>
    ///         </note>
    public let nextToken: String?
    /// <p>The task definition family status with which to filter the
    /// 				<code>ListTaskDefinitionFamilies</code> results. By default, both
    /// 				<code>ACTIVE</code> and <code>INACTIVE</code> task definition families are listed.
    /// 			If this parameter is set to <code>ACTIVE</code>, only task definition families that have
    /// 			an <code>ACTIVE</code> task definition revision are returned. If this parameter is set
    /// 			to <code>INACTIVE</code>, only task definition families that do not have any
    /// 				<code>ACTIVE</code> task definition revisions are returned. If you paginate the
    /// 			resulting output, be sure to keep the <code>status</code> value constant in each
    /// 			subsequent request.</p>
    public let status: TaskDefinitionFamilyStatus?

    public init (
        familyPrefix: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        status: TaskDefinitionFamilyStatus? = nil
    )
    {
        self.familyPrefix = familyPrefix
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.status = status
    }
}
