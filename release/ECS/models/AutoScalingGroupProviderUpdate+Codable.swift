// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoScalingGroupProviderUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case managedScaling
        case managedTerminationProtection
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let managedScaling = managedScaling {
            try encodeContainer.encode(managedScaling, forKey: .managedScaling)
        }
        if let managedTerminationProtection = managedTerminationProtection {
            try encodeContainer.encode(managedTerminationProtection.rawValue, forKey: .managedTerminationProtection)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let managedScalingDecoded = try containerValues.decodeIfPresent(ManagedScaling.self, forKey: .managedScaling)
        managedScaling = managedScalingDecoded
        let managedTerminationProtectionDecoded = try containerValues.decodeIfPresent(ManagedTerminationProtection.self, forKey: .managedTerminationProtection)
        managedTerminationProtection = managedTerminationProtectionDecoded
    }
}
