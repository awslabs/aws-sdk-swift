// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RegisterContainerInstanceInputBody: Equatable {
    public let cluster: String?
    public let instanceIdentityDocument: String?
    public let instanceIdentityDocumentSignature: String?
    public let totalResources: [Resource]?
    public let versionInfo: VersionInfo?
    public let containerInstanceArn: String?
    public let attributes: [Attribute]?
    public let platformDevices: [PlatformDevice]?
    public let tags: [Tag]?
}

extension RegisterContainerInstanceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributes
        case cluster
        case containerInstanceArn
        case instanceIdentityDocument
        case instanceIdentityDocumentSignature
        case platformDevices
        case tags
        case totalResources
        case versionInfo
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let instanceIdentityDocumentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceIdentityDocument)
        instanceIdentityDocument = instanceIdentityDocumentDecoded
        let instanceIdentityDocumentSignatureDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceIdentityDocumentSignature)
        instanceIdentityDocumentSignature = instanceIdentityDocumentSignatureDecoded
        let totalResourcesContainer = try containerValues.decodeIfPresent([Resource].self, forKey: .totalResources)
        var totalResourcesDecoded0:[Resource]? = nil
        if let totalResourcesContainer = totalResourcesContainer {
            totalResourcesDecoded0 = [Resource]()
            for structure0 in totalResourcesContainer {
                totalResourcesDecoded0?.append(structure0)
            }
        }
        totalResources = totalResourcesDecoded0
        let versionInfoDecoded = try containerValues.decodeIfPresent(VersionInfo.self, forKey: .versionInfo)
        versionInfo = versionInfoDecoded
        let containerInstanceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .containerInstanceArn)
        containerInstanceArn = containerInstanceArnDecoded
        let attributesContainer = try containerValues.decodeIfPresent([Attribute].self, forKey: .attributes)
        var attributesDecoded0:[Attribute]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [Attribute]()
            for structure0 in attributesContainer {
                attributesDecoded0?.append(structure0)
            }
        }
        attributes = attributesDecoded0
        let platformDevicesContainer = try containerValues.decodeIfPresent([PlatformDevice].self, forKey: .platformDevices)
        var platformDevicesDecoded0:[PlatformDevice]? = nil
        if let platformDevicesContainer = platformDevicesContainer {
            platformDevicesDecoded0 = [PlatformDevice]()
            for structure0 in platformDevicesContainer {
                platformDevicesDecoded0?.append(structure0)
            }
        }
        platformDevices = platformDevicesDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
