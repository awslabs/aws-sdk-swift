// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateClusterInput: Equatable {
    /// <p>The short name of one or more capacity providers to associate with the cluster. A
    /// 			capacity provider must be associated with a cluster before it can be included as part of
    /// 			the default capacity provider strategy of the cluster or used in a capacity provider
    /// 			strategy when calling the <a>CreateService</a> or <a>RunTask</a>
    /// 			actions.</p>
    /// 		       <p>If specifying a capacity provider that uses an Auto Scaling group, the capacity
    /// 			provider must already be created and not already associated with another cluster. New
    /// 			Auto Scaling group capacity providers can be created with the <a>CreateCapacityProvider</a> API operation.</p>
    /// 		       <p>To use a AWS Fargate capacity provider, specify either the <code>FARGATE</code> or
    /// 				<code>FARGATE_SPOT</code> capacity providers. The AWS Fargate capacity providers are
    /// 			available to all accounts and only need to be associated with a cluster to be
    /// 			used.</p>
    /// 		       <p>The <a>PutClusterCapacityProviders</a> API operation is used to update the
    /// 			list of available capacity providers for a cluster after the cluster is created.</p>
    public let capacityProviders: [String]?
    /// <p>The name of your cluster. If you do not specify a name for your cluster, you create a
    /// 			cluster named <code>default</code>. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. </p>
    public let clusterName: String?
    /// <p>The execute command configuration for the cluster.</p>
    public let configuration: ClusterConfiguration?
    /// <p>The capacity provider strategy to set as the default for the cluster. When a default
    /// 			capacity provider strategy is set for a cluster, when calling the <a>RunTask</a> or <a>CreateService</a> APIs wtih no capacity
    /// 			provider strategy or launch type specified, the default capacity provider strategy for
    /// 			the cluster is used.</p>
    /// 		       <p>If a default capacity provider strategy is not defined for a cluster during creation,
    /// 			it can be defined later with the <a>PutClusterCapacityProviders</a> API
    /// 			operation.</p>
    public let defaultCapacityProviderStrategy: [CapacityProviderStrategyItem]?
    /// <p>The setting to use when creating a cluster. This parameter is used to enable CloudWatch
    /// 			Container Insights for a cluster. If this value is specified, it will override the
    /// 				<code>containerInsights</code> value set with <a>PutAccountSetting</a> or
    /// 				<a>PutAccountSettingDefault</a>.</p>
    public let settings: [ClusterSetting]?
    /// <p>The metadata that you apply to the cluster to help you categorize and organize them.
    /// 			Each tag consists of a key and an optional value, both of which you define.</p>
    /// 		       <p>The following basic restrictions apply to tags:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Maximum number of tags per resource - 50</p>
    ///             </li>
    ///             <li>
    ///                 <p>For each resource, each tag key must be unique, and each tag key can have only
    ///                     one value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum key length - 128 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>Maximum value length - 256 Unicode characters in UTF-8</p>
    ///             </li>
    ///             <li>
    ///                 <p>If your tagging schema is used across multiple services and resources,
    ///                     remember that other services may have restrictions on allowed characters.
    ///                     Generally allowed characters are: letters, numbers, and spaces representable in
    ///                     UTF-8, and the following characters: + - = . _ : / @.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Tag keys and values are case-sensitive.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase
    ///                     combination of such as a prefix for either keys or values as it is reserved for
    ///                     AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with
    ///                     this prefix do not count against your tags per resource limit.</p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?

    public init (
        capacityProviders: [String]? = nil,
        clusterName: String? = nil,
        configuration: ClusterConfiguration? = nil,
        defaultCapacityProviderStrategy: [CapacityProviderStrategyItem]? = nil,
        settings: [ClusterSetting]? = nil,
        tags: [Tag]? = nil
    )
    {
        self.capacityProviders = capacityProviders
        self.clusterName = clusterName
        self.configuration = configuration
        self.defaultCapacityProviderStrategy = defaultCapacityProviderStrategy
        self.settings = settings
        self.tags = tags
    }
}
