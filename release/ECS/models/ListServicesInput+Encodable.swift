// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListServicesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cluster
        case launchType
        case maxResults
        case nextToken
        case schedulingStrategy
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cluster = cluster {
            try encodeContainer.encode(cluster, forKey: .cluster)
        }
        if let launchType = launchType {
            try encodeContainer.encode(launchType.rawValue, forKey: .launchType)
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let schedulingStrategy = schedulingStrategy {
            try encodeContainer.encode(schedulingStrategy.rawValue, forKey: .schedulingStrategy)
        }
    }
}
