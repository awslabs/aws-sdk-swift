// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListAttributesInput: Equatable {
    /// <p>The name of the attribute with which to filter the results. </p>
    public let attributeName: String?
    /// <p>The value of the attribute with which to filter results. You must also specify an
    /// 			attribute name to use this parameter.</p>
    public let attributeValue: String?
    /// <p>The short name or full Amazon Resource Name (ARN) of the cluster to list attributes.
    /// 			If you do not specify a cluster, the default cluster is assumed.</p>
    public let cluster: String?
    /// <p>The maximum number of cluster results returned by <code>ListAttributes</code> in
    /// 			paginated output. When this parameter is used, <code>ListAttributes</code> only returns
    /// 				<code>maxResults</code> results in a single page along with a <code>nextToken</code>
    /// 			response element. The remaining results of the initial request can be seen by sending
    /// 			another <code>ListAttributes</code> request with the returned <code>nextToken</code>
    /// 			value. This value can be between 1 and 100. If this
    /// 			parameter is not used, then <code>ListAttributes</code> returns up to
    /// 			100 results and a <code>nextToken</code> value if applicable.</p>
    public let maxResults: Int?
    /// <p>The <code>nextToken</code> value returned from a <code>ListAttributes</code> request
    /// 			indicating that more results are available to fulfill the request and further calls will
    /// 			be needed. If <code>maxResults</code> was provided, it is possible the number of results
    /// 			to be fewer than <code>maxResults</code>.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that is only used to
    ///                 retrieve the next items in a list and not for other programmatic purposes.</p>
    ///         </note>
    public let nextToken: String?
    /// <p>The type of the target with which to list attributes.</p>
    public let targetType: TargetType?

    public init (
        attributeName: String? = nil,
        attributeValue: String? = nil,
        cluster: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        targetType: TargetType? = nil
    )
    {
        self.attributeName = attributeName
        self.attributeValue = attributeValue
        self.cluster = cluster
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.targetType = targetType
    }
}
