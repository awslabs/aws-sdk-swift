// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeServicesInputBody: Equatable {
    public let cluster: String?
    public let services: [String]?
    public let include: [ServiceField]?
}

extension DescribeServicesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cluster
        case include
        case services
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cluster)
        cluster = clusterDecoded
        let servicesContainer = try containerValues.decodeIfPresent([String].self, forKey: .services)
        var servicesDecoded0:[String]? = nil
        if let servicesContainer = servicesContainer {
            servicesDecoded0 = [String]()
            for string0 in servicesContainer {
                servicesDecoded0?.append(string0)
            }
        }
        services = servicesDecoded0
        let includeContainer = try containerValues.decodeIfPresent([ServiceField].self, forKey: .include)
        var includeDecoded0:[ServiceField]? = nil
        if let includeContainer = includeContainer {
            includeDecoded0 = [ServiceField]()
            for string0 in includeContainer {
                includeDecoded0?.append(string0)
            }
        }
        include = includeDecoded0
    }
}
