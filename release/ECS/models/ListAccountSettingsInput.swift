// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListAccountSettingsInput: Equatable {
    /// <p>Specifies whether to return the effective settings. If <code>true</code>, the account
    /// 			settings for the root user or the default setting for the <code>principalArn</code> are
    /// 			returned. If <code>false</code>, the account settings for the <code>principalArn</code>
    /// 			are returned if they are set. Otherwise, no account settings are returned.</p>
    public let effectiveSettings: Bool
    /// <p>The maximum number of account setting results returned by
    /// 				<code>ListAccountSettings</code> in paginated output. When this parameter is used,
    /// 				<code>ListAccountSettings</code> only returns <code>maxResults</code> results in a
    /// 			single page along with a <code>nextToken</code> response element. The remaining results
    /// 			of the initial request can be seen by sending another <code>ListAccountSettings</code>
    /// 			request with the returned <code>nextToken</code> value. This value can be between
    /// 			1 and 10. If this
    /// 			parameter is not used, then <code>ListAccountSettings</code> returns up to
    /// 			10 results and a <code>nextToken</code> value
    /// 			if applicable.</p>
    public let maxResults: Int
    /// <p>The name of the account setting you want to list the settings for.</p>
    public let name: SettingName?
    /// <p>The <code>nextToken</code> value returned from a <code>ListAccountSettings</code>
    /// 			request indicating that more results are available to fulfill the request and further
    /// 			calls will be needed. If <code>maxResults</code> was provided, it is possible the number
    /// 			of results to be fewer than <code>maxResults</code>.</p>
    ///          <note>
    ///             <p>This token should be treated as an opaque identifier that is only used to
    ///                 retrieve the next items in a list and not for other programmatic purposes.</p>
    ///         </note>
    public let nextToken: String?
    /// <p>The ARN of the principal, which can be an IAM user, IAM role, or the root user. If
    /// 			this field is omitted, the account settings are listed only for the authenticated
    /// 			user.</p>
    /// 		       <note>
    /// 			         <p>Federated users assume the account setting of the root user and can't have
    /// 				explicit account settings set for them.</p>
    /// 		       </note>
    public let principalArn: String?
    /// <p>The value of the account settings with which to filter results. You must also specify
    /// 			an account setting name to use this parameter.</p>
    public let value: String?

    public init (
        effectiveSettings: Bool = false,
        maxResults: Int = 0,
        name: SettingName? = nil,
        nextToken: String? = nil,
        principalArn: String? = nil,
        value: String? = nil
    )
    {
        self.effectiveSettings = effectiveSettings
        self.maxResults = maxResults
        self.name = name
        self.nextToken = nextToken
        self.principalArn = principalArn
        self.value = value
    }
}
