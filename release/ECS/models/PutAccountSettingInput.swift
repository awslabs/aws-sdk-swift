// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutAccountSettingInput: Equatable {
    /// <p>The Amazon ECS resource name for which to modify the account setting. If
    /// 				<code>serviceLongArnFormat</code> is specified, the ARN for your Amazon ECS services is
    /// 			affected. If <code>taskLongArnFormat</code> is specified, the ARN and resource ID for
    /// 			your Amazon ECS tasks is affected. If <code>containerInstanceLongArnFormat</code> is
    /// 			specified, the ARN and resource ID for your Amazon ECS container instances is affected. If
    /// 				<code>awsvpcTrunking</code> is specified, the elastic network interface (ENI) limit
    /// 			for your Amazon ECS container instances is affected. If <code>containerInsights</code> is
    /// 			specified, the default setting for CloudWatch Container Insights for your clusters is
    /// 			affected.</p>
    public let name: SettingName?
    /// <p>The ARN of the principal, which can be an IAM user, IAM role, or the root user. If you
    /// 			specify the root user, it modifies the account setting for all IAM users, IAM roles, and
    /// 			the root user of the account unless an IAM user or role explicitly overrides these
    /// 			settings. If this field is omitted, the setting is changed only for the authenticated
    /// 			user.</p>
    /// 		       <note>
    /// 			         <p>Federated users assume the account setting of the root user and can't have
    /// 				explicit account settings set for them.</p>
    /// 		       </note>
    public let principalArn: String?
    /// <p>The account setting value for the specified principal ARN. Accepted values are
    /// 				<code>enabled</code> and <code>disabled</code>.</p>
    public let value: String?

    public init (
        name: SettingName? = nil,
        principalArn: String? = nil,
        value: String? = nil
    )
    {
        self.name = name
        self.principalArn = principalArn
        self.value = value
    }
}
