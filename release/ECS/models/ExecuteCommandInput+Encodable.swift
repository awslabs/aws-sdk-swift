// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExecuteCommandInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cluster
        case command
        case container
        case interactive
        case task
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cluster = cluster {
            try encodeContainer.encode(cluster, forKey: .cluster)
        }
        if let command = command {
            try encodeContainer.encode(command, forKey: .command)
        }
        if let container = container {
            try encodeContainer.encode(container, forKey: .container)
        }
        if interactive != false {
            try encodeContainer.encode(interactive, forKey: .interactive)
        }
        if let task = task {
            try encodeContainer.encode(task, forKey: .task)
        }
    }
}
