// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StartSnapshotOutput: Equatable {
    /// <p>The size of the blocks in the snapshot, in bytes.</p>
    public let blockSize: Int?
    /// <p>The description of the snapshot.</p>
    public let description: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Key Management Service (AWS KMS) customer
    ///             master key (CMK) used to encrypt the snapshot.</p>
    public let kmsKeyArn: String?
    /// <p>The AWS account ID of the snapshot owner.</p>
    public let ownerId: String?
    /// <p>The ID of the parent snapshot.</p>
    public let parentSnapshotId: String?
    /// <p>The ID of the snapshot.</p>
    public let snapshotId: String?
    /// <p>The timestamp when the snapshot was created.</p>
    public let startTime: Date?
    /// <p>The status of the snapshot.</p>
    public let status: Status?
    /// <p>The tags applied to the snapshot. You can specify up to 50 tags per snapshot. For more
    ///             information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html"> Tagging your Amazon EC2
    ///                 resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    public let tags: [Tag]?
    /// <p>The size of the volume, in GiB.</p>
    public let volumeSize: Int?

    public init (
        blockSize: Int? = nil,
        description: String? = nil,
        kmsKeyArn: String? = nil,
        ownerId: String? = nil,
        parentSnapshotId: String? = nil,
        snapshotId: String? = nil,
        startTime: Date? = nil,
        status: Status? = nil,
        tags: [Tag]? = nil,
        volumeSize: Int? = nil
    )
    {
        self.blockSize = blockSize
        self.description = description
        self.kmsKeyArn = kmsKeyArn
        self.ownerId = ownerId
        self.parentSnapshotId = parentSnapshotId
        self.snapshotId = snapshotId
        self.startTime = startTime
        self.status = status
        self.tags = tags
        self.volumeSize = volumeSize
    }
}
