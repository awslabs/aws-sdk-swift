// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CompleteSnapshotInputHeadersMiddleware: Middleware {
    public let id: String = "CompleteSnapshotInputHeadersMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<CompleteSnapshotInput>,
                  next: H) -> Swift.Result<OperationOutput<CompleteSnapshotOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let changedBlocksCount = input.operationInput.changedBlocksCount {
            input.builder.withHeader(name: "x-amz-ChangedBlocksCount", value: String(changedBlocksCount))
        }
        if let checksum = input.operationInput.checksum {
            input.builder.withHeader(name: "x-amz-Checksum", value: String(checksum))
        }
        if let checksumAggregationMethod = input.operationInput.checksumAggregationMethod {
            input.builder.withHeader(name: "x-amz-Checksum-Aggregation-Method", value: String(checksumAggregationMethod.rawValue))
        }
        if let checksumAlgorithm = input.operationInput.checksumAlgorithm {
            input.builder.withHeader(name: "x-amz-Checksum-Algorithm", value: String(checksumAlgorithm.rawValue))
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<CompleteSnapshotInput>
    public typealias MOutput = OperationOutput<CompleteSnapshotOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<CompleteSnapshotOutputError>
}
