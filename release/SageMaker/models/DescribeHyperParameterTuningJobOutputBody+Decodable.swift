// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeHyperParameterTuningJobOutputBody: Equatable {
    public let hyperParameterTuningJobName: String?
    public let hyperParameterTuningJobArn: String?
    public let hyperParameterTuningJobConfig: HyperParameterTuningJobConfig?
    public let trainingJobDefinition: HyperParameterTrainingJobDefinition?
    public let trainingJobDefinitions: [HyperParameterTrainingJobDefinition]?
    public let hyperParameterTuningJobStatus: HyperParameterTuningJobStatus?
    public let creationTime: Date?
    public let hyperParameterTuningEndTime: Date?
    public let lastModifiedTime: Date?
    public let trainingJobStatusCounters: TrainingJobStatusCounters?
    public let objectiveStatusCounters: ObjectiveStatusCounters?
    public let bestTrainingJob: HyperParameterTrainingJobSummary?
    public let overallBestTrainingJob: HyperParameterTrainingJobSummary?
    public let warmStartConfig: HyperParameterTuningJobWarmStartConfig?
    public let failureReason: String?
}

extension DescribeHyperParameterTuningJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bestTrainingJob = "BestTrainingJob"
        case creationTime = "CreationTime"
        case failureReason = "FailureReason"
        case hyperParameterTuningEndTime = "HyperParameterTuningEndTime"
        case hyperParameterTuningJobArn = "HyperParameterTuningJobArn"
        case hyperParameterTuningJobConfig = "HyperParameterTuningJobConfig"
        case hyperParameterTuningJobName = "HyperParameterTuningJobName"
        case hyperParameterTuningJobStatus = "HyperParameterTuningJobStatus"
        case lastModifiedTime = "LastModifiedTime"
        case objectiveStatusCounters = "ObjectiveStatusCounters"
        case overallBestTrainingJob = "OverallBestTrainingJob"
        case trainingJobDefinition = "TrainingJobDefinition"
        case trainingJobDefinitions = "TrainingJobDefinitions"
        case trainingJobStatusCounters = "TrainingJobStatusCounters"
        case warmStartConfig = "WarmStartConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hyperParameterTuningJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hyperParameterTuningJobName)
        hyperParameterTuningJobName = hyperParameterTuningJobNameDecoded
        let hyperParameterTuningJobArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hyperParameterTuningJobArn)
        hyperParameterTuningJobArn = hyperParameterTuningJobArnDecoded
        let hyperParameterTuningJobConfigDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobConfig.self, forKey: .hyperParameterTuningJobConfig)
        hyperParameterTuningJobConfig = hyperParameterTuningJobConfigDecoded
        let trainingJobDefinitionDecoded = try containerValues.decodeIfPresent(HyperParameterTrainingJobDefinition.self, forKey: .trainingJobDefinition)
        trainingJobDefinition = trainingJobDefinitionDecoded
        let trainingJobDefinitionsContainer = try containerValues.decodeIfPresent([HyperParameterTrainingJobDefinition].self, forKey: .trainingJobDefinitions)
        var trainingJobDefinitionsDecoded0:[HyperParameterTrainingJobDefinition]? = nil
        if let trainingJobDefinitionsContainer = trainingJobDefinitionsContainer {
            trainingJobDefinitionsDecoded0 = [HyperParameterTrainingJobDefinition]()
            for structure0 in trainingJobDefinitionsContainer {
                trainingJobDefinitionsDecoded0?.append(structure0)
            }
        }
        trainingJobDefinitions = trainingJobDefinitionsDecoded0
        let hyperParameterTuningJobStatusDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobStatus.self, forKey: .hyperParameterTuningJobStatus)
        hyperParameterTuningJobStatus = hyperParameterTuningJobStatusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let hyperParameterTuningEndTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .hyperParameterTuningEndTime)
        hyperParameterTuningEndTime = hyperParameterTuningEndTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let trainingJobStatusCountersDecoded = try containerValues.decodeIfPresent(TrainingJobStatusCounters.self, forKey: .trainingJobStatusCounters)
        trainingJobStatusCounters = trainingJobStatusCountersDecoded
        let objectiveStatusCountersDecoded = try containerValues.decodeIfPresent(ObjectiveStatusCounters.self, forKey: .objectiveStatusCounters)
        objectiveStatusCounters = objectiveStatusCountersDecoded
        let bestTrainingJobDecoded = try containerValues.decodeIfPresent(HyperParameterTrainingJobSummary.self, forKey: .bestTrainingJob)
        bestTrainingJob = bestTrainingJobDecoded
        let overallBestTrainingJobDecoded = try containerValues.decodeIfPresent(HyperParameterTrainingJobSummary.self, forKey: .overallBestTrainingJob)
        overallBestTrainingJob = overallBestTrainingJobDecoded
        let warmStartConfigDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobWarmStartConfig.self, forKey: .warmStartConfig)
        warmStartConfig = warmStartConfigDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
    }
}
