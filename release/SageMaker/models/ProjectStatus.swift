// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ProjectStatus {
    case createCompleted
    case createFailed
    case createInProgress
    case deleteCompleted
    case deleteFailed
    case deleteInProgress
    case pending
    case sdkUnknown(String)
}

extension ProjectStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProjectStatus] {
        return [
            .createCompleted,
            .createFailed,
            .createInProgress,
            .deleteCompleted,
            .deleteFailed,
            .deleteInProgress,
            .pending,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createCompleted: return "CreateCompleted"
        case .createFailed: return "CreateFailed"
        case .createInProgress: return "CreateInProgress"
        case .deleteCompleted: return "DeleteCompleted"
        case .deleteFailed: return "DeleteFailed"
        case .deleteInProgress: return "DeleteInProgress"
        case .pending: return "Pending"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProjectStatus(rawValue: rawValue) ?? ProjectStatus.sdkUnknown(rawValue)
    }
}
