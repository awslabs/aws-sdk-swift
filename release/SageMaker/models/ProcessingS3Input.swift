// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Configuration for downloading input data from Amazon S3 into the processing container.</p>
public struct ProcessingS3Input: Equatable {
    /// <p>The local path in your container where you want Amazon SageMaker to write input data to.
    ///             <code>LocalPath</code> is an absolute path to the input data and must begin with
    ///             <code>/opt/ml/processing/</code>. <code>LocalPath</code> is a required
    ///             parameter when <code>AppManaged</code> is <code>False</code> (default).</p>
    public let localPath: String?
    /// <p>Whether to GZIP-decompress the data in Amazon S3 as it is streamed into the processing
    ///             container. <code>Gzip</code> can only be used when <code>Pipe</code> mode is
    ///             specified as the <code>S3InputMode</code>. In <code>Pipe</code> mode, Amazon SageMaker streams input
    ///             data from the source directly to your container without using the EBS volume.</p>
    public let s3CompressionType: ProcessingS3CompressionType?
    /// <p>Whether to distribute the data from Amazon S3 to all processing instances with
    ///             <code>FullyReplicated</code>, or whether the data from Amazon S3 is shared by Amazon S3 key,
    ///             downloading one shard of data to each processing instance.</p>
    public let s3DataDistributionType: ProcessingS3DataDistributionType?
    /// <p>Whether you use an <code>S3Prefix</code> or a <code>ManifestFile</code> for
    ///             the data type. If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key
    ///             name prefix. Amazon SageMaker uses all objects with the specified key name prefix for the processing
    ///             job. If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object
    ///             that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for
    ///             the processing job.</p>
    public let s3DataType: ProcessingS3DataType?
    /// <p>Whether to use <code>File</code> or <code>Pipe</code> input mode. In File mode, Amazon SageMaker copies the data
    ///             from the input source onto the local ML storage volume before starting your processing
    ///             container. This is the most commonly used input mode. In <code>Pipe</code> mode, Amazon SageMaker
    ///             streams input data from the source directly to your processing container into named
    ///             pipes without using the ML storage volume.</p>
    public let s3InputMode: ProcessingS3InputMode?
    /// <p>The URI of the Amazon S3 prefix Amazon SageMaker downloads data required to run a processing job.</p>
    public let s3Uri: String?

    public init (
        localPath: String? = nil,
        s3CompressionType: ProcessingS3CompressionType? = nil,
        s3DataDistributionType: ProcessingS3DataDistributionType? = nil,
        s3DataType: ProcessingS3DataType? = nil,
        s3InputMode: ProcessingS3InputMode? = nil,
        s3Uri: String? = nil
    )
    {
        self.localPath = localPath
        self.s3CompressionType = s3CompressionType
        self.s3DataDistributionType = s3DataDistributionType
        self.s3DataType = s3DataType
        self.s3InputMode = s3InputMode
        self.s3Uri = s3Uri
    }
}
