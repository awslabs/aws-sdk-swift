// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateTrialComponentInput: Equatable {
    /// <p>The name of the component as displayed. The name doesn't need to be unique. If
    ///         <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is
    ///       displayed.</p>
    public let displayName: String?
    /// <p>When the component ended.</p>
    public let endTime: Date?
    /// <p>The input artifacts for the component. Examples of input artifacts are datasets,
    ///       algorithms, hyperparameters, source code, and instance types.</p>
    public let inputArtifacts: [String:TrialComponentArtifact]?
    /// <p>Metadata properties of the tracking entity, trial, or trial component.</p>
    public let metadataProperties: MetadataProperties?
    /// <p>The output artifacts for the component. Examples of output artifacts are metrics,
    ///       snapshots, logs, and images.</p>
    public let outputArtifacts: [String:TrialComponentArtifact]?
    /// <p>The hyperparameters for the component.</p>
    public let parameters: [String:TrialComponentParameterValue]?
    /// <p>When the component started.</p>
    public let startTime: Date?
    /// <p>The status of the component. States include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>InProgress</p>
    ///             </li>
    ///             <li>
    ///                <p>Completed</p>
    ///             </li>
    ///             <li>
    ///                <p>Failed</p>
    ///             </li>
    ///          </ul>
    public let status: TrialComponentStatus?
    /// <p>A list of tags to associate with the component. You can use <a>Search</a> API
    ///       to search on the tags.</p>
    public let tags: [Tag]?
    /// <p>The name of the component. The name must be unique in your AWS account and is not
    ///       case-sensitive.</p>
    public let trialComponentName: String?

    public init (
        displayName: String? = nil,
        endTime: Date? = nil,
        inputArtifacts: [String:TrialComponentArtifact]? = nil,
        metadataProperties: MetadataProperties? = nil,
        outputArtifacts: [String:TrialComponentArtifact]? = nil,
        parameters: [String:TrialComponentParameterValue]? = nil,
        startTime: Date? = nil,
        status: TrialComponentStatus? = nil,
        tags: [Tag]? = nil,
        trialComponentName: String? = nil
    )
    {
        self.displayName = displayName
        self.endTime = endTime
        self.inputArtifacts = inputArtifacts
        self.metadataProperties = metadataProperties
        self.outputArtifacts = outputArtifacts
        self.parameters = parameters
        self.startTime = startTime
        self.status = status
        self.tags = tags
        self.trialComponentName = trialComponentName
    }
}
