// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about a target platform that you want your model to run on, such
///             as OS, architecture, and accelerators. It is an alternative of
///             <code>TargetDevice</code>.</p>
public struct TargetPlatform: Equatable {
    /// <p>Specifies a target platform accelerator (optional).</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>NVIDIA</code>: Nvidia graphics processing unit. It also requires
    ///                     <code>gpu-code</code>, <code>trt-ver</code>, <code>cuda-ver</code> compiler
    ///                     options</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>MALI</code>: ARM Mali graphics processor</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>INTEL_GRAPHICS</code>: Integrated Intel graphics</p>
    ///             </li>
    ///          </ul>
    public let accelerator: TargetPlatformAccelerator?
    /// <p>Specifies a target platform architecture.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>X86_64</code>: 64-bit version of the x86 instruction set.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>X86</code>: 32-bit version of the x86 instruction set.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ARM64</code>: ARMv8 64-bit CPU.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ARM_EABIHF</code>: ARMv7 32-bit, Hard Float.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ARM_EABI</code>: ARMv7 32-bit, Soft Float. Used by Android 32-bit ARM
    ///                     platform.</p>
    ///             </li>
    ///          </ul>
    public let arch: TargetPlatformArch?
    /// <p>Specifies a target platform OS.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>LINUX</code>: Linux-based operating systems.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ANDROID</code>: Android operating systems. Android API level can be
    ///                     specified using the <code>ANDROID_PLATFORM</code> compiler option. For example,
    ///                     <code>"CompilerOptions": {'ANDROID_PLATFORM': 28}</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let os: TargetPlatformOs?

    public init (
        accelerator: TargetPlatformAccelerator? = nil,
        arch: TargetPlatformArch? = nil,
        os: TargetPlatformOs? = nil
    )
    {
        self.accelerator = accelerator
        self.arch = arch
        self.os = os
    }
}
