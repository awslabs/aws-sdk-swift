// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConditionStepMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case outcome = "Outcome"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let outcome = outcome {
            try encodeContainer.encode(outcome.rawValue, forKey: .outcome)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outcomeDecoded = try containerValues.decodeIfPresent(ConditionOutcome.self, forKey: .outcome)
        outcome = outcomeDecoded
    }
}
