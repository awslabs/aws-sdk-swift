// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A collection of settings that apply to users of Amazon SageMaker Studio. These settings are
///       specified when the <code>CreateUserProfile</code> API is called, and as <code>DefaultUserSettings</code>
///       when the <code>CreateDomain</code> API is called.</p>
///          <p>
///             <code>SecurityGroups</code> is aggregated when specified in both calls. For all other
///      settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code>
///      take precedence over those specified in <code>CreateDomain</code>.</p>
public struct UserSettings: Equatable {
    /// <p>The execution role for the user.</p>
    public let executionRole: String?
    /// <p>The Jupyter server's app settings.</p>
    public let jupyterServerAppSettings: JupyterServerAppSettings?
    /// <p>The kernel gateway app settings.</p>
    public let kernelGatewayAppSettings: KernelGatewayAppSettings?
    /// <p>The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p>
    ///          <p>Optional when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to
    ///          <code>PublicInternetOnly</code>.</p>
    ///          <p>Required when the <code>CreateDomain.AppNetworkAccessType</code> parameter is set to
    ///          <code>VpcOnly</code>.</p>
    ///          <p>Amazon SageMaker adds a security group to allow NFS traffic from SageMaker Studio. Therefore, the
    ///          number of security groups that you can specify is one less than the maximum number shown.</p>
    public let securityGroups: [String]?
    /// <p>Specifies options for sharing SageMaker Studio notebooks.</p>
    public let sharingSettings: SharingSettings?
    /// <p>The TensorBoard app settings.</p>
    public let tensorBoardAppSettings: TensorBoardAppSettings?

    public init (
        executionRole: String? = nil,
        jupyterServerAppSettings: JupyterServerAppSettings? = nil,
        kernelGatewayAppSettings: KernelGatewayAppSettings? = nil,
        securityGroups: [String]? = nil,
        sharingSettings: SharingSettings? = nil,
        tensorBoardAppSettings: TensorBoardAppSettings? = nil
    )
    {
        self.executionRole = executionRole
        self.jupyterServerAppSettings = jupyterServerAppSettings
        self.kernelGatewayAppSettings = kernelGatewayAppSettings
        self.securityGroups = securityGroups
        self.sharingSettings = sharingSettings
        self.tensorBoardAppSettings = tensorBoardAppSettings
    }
}
