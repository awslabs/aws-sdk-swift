// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateImageInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deleteProperties = "DeleteProperties"
        case description = "Description"
        case displayName = "DisplayName"
        case imageName = "ImageName"
        case roleArn = "RoleArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deleteProperties = deleteProperties {
            var deletePropertiesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .deleteProperties)
            for imagedeletepropertylist0 in deleteProperties {
                try deletePropertiesContainer.encode(imagedeletepropertylist0)
            }
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let displayName = displayName {
            try encodeContainer.encode(displayName, forKey: .displayName)
        }
        if let imageName = imageName {
            try encodeContainer.encode(imageName, forKey: .imageName)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
    }
}
