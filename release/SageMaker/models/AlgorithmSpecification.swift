// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the training algorithm to use in a <a>CreateTrainingJob</a>
///             request.</p>
///         <p>For more information about algorithms provided by Amazon SageMaker, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. For
///             information about using your own algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon
///                 SageMaker</a>. </p>
public struct AlgorithmSpecification: Equatable {
    /// <p>The name of the algorithm resource to use for the training job. This must be an
    ///             algorithm resource that you created or subscribe to on AWS Marketplace. If you specify a value for
    ///             this parameter, you can't specify a value for <code>TrainingImage</code>.</p>
    public let algorithmName: String?
    /// <p>To generate and save time-series metrics during training, set to <code>true</code>.
    ///             The default is <code>false</code> and time-series metrics aren't generated except in the
    ///             following cases:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>You use one of the Amazon SageMaker built-in algorithms</p>
    ///             </li>
    ///             <li>
    ///                 <p>You use one of the following <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/pre-built-containers-frameworks-deep-learning.html">Prebuilt Amazon SageMaker Docker Images</a>:</p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>Tensorflow (version >= 1.15)</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>MXNet (version >= 1.6)</p>
    ///                     </li>
    ///                   <li>
    ///                         <p>PyTorch (version >= 1.3)</p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>You specify at least one <a>MetricDefinition</a>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let enableSageMakerMetricsTimeSeries: Bool
    /// <p>A list of metric definition objects. Each object specifies the metric name and regular
    ///             expressions used to parse algorithm logs. Amazon SageMaker publishes each metric to Amazon CloudWatch.</p>
    public let metricDefinitions: [MetricDefinition]?
    /// <p>The registry path of the Docker image
    ///              that contains the training algorithm.
    ///             For information about docker registry paths for built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Algorithms
    ///                 Provided by Amazon SageMaker: Common Parameters</a>. Amazon SageMaker supports both
    ///                 <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code>
    ///             image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon
    ///                 SageMaker</a>.</p>
    public let trainingImage: String?
    /// <p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker
    ///             algorithms support, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker
    ///             downloads the training data from S3 to the provisioned ML storage Volume, and mounts the
    ///             directory to docker volume for training container. If an algorithm supports the
    ///                 <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p>
    ///         <p> In File mode, make sure you provision ML storage volume with sufficient capacity
    ///             to accommodate the data download from S3. In addition to the training data, the ML
    ///             storage volume also stores the output model. The algorithm container use ML storage
    ///             volume to also store intermediate information, if any. </p>
    ///         <p> For distributed algorithms using File mode, training data is distributed
    ///             uniformly, and your training duration is predictable if the input data objects size is
    ///             approximately same. Amazon SageMaker does not split the files any further for model training. If the
    ///             object sizes are skewed, training won't be optimal as the data distribution is also
    ///             skewed where one host in a training cluster is overloaded, thus becoming bottleneck in
    ///             training. </p>
    public let trainingInputMode: TrainingInputMode?

    public init (
        algorithmName: String? = nil,
        enableSageMakerMetricsTimeSeries: Bool = false,
        metricDefinitions: [MetricDefinition]? = nil,
        trainingImage: String? = nil,
        trainingInputMode: TrainingInputMode? = nil
    )
    {
        self.algorithmName = algorithmName
        self.enableSageMakerMetricsTimeSeries = enableSageMakerMetricsTimeSeries
        self.metricDefinitions = metricDefinitions
        self.trainingImage = trainingImage
        self.trainingInputMode = trainingInputMode
    }
}
