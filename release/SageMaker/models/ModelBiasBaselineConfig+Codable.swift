// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModelBiasBaselineConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case baseliningJobName = "BaseliningJobName"
        case constraintsResource = "ConstraintsResource"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let baseliningJobName = baseliningJobName {
            try encodeContainer.encode(baseliningJobName, forKey: .baseliningJobName)
        }
        if let constraintsResource = constraintsResource {
            try encodeContainer.encode(constraintsResource, forKey: .constraintsResource)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseliningJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .baseliningJobName)
        baseliningJobName = baseliningJobNameDecoded
        let constraintsResourceDecoded = try containerValues.decodeIfPresent(MonitoringConstraintsResource.self, forKey: .constraintsResource)
        constraintsResource = constraintsResourceDecoded
    }
}
