// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SearchInput: Equatable {
    /// <p>The maximum number of results to return.</p>
    public let maxResults: Int?
    /// <p>If more than <code>MaxResults</code> resources match the specified
    ///       <code>SearchExpression</code>, the response includes a
    ///       <code>NextToken</code>. The <code>NextToken</code> can be passed to the next
    ///       <code>SearchRequest</code> to continue retrieving results.</p>
    public let nextToken: String?
    /// <p>The name of the Amazon SageMaker resource to search for.</p>
    public let resource: ResourceType?
    /// <p>A Boolean conditional statement. Resources must satisfy this condition to be
    ///       included in search results. You must provide at least one subexpression, filter, or
    ///       nested filter. The maximum number of recursive <code>SubExpressions</code>,
    ///       <code>NestedFilters</code>, and <code>Filters</code> that can be included in a
    ///       <code>SearchExpression</code> object is 50.</p>
    public let searchExpression: SearchExpression?
    /// <p>The name of the resource property used to sort the <code>SearchResults</code>. The
    ///       default is <code>LastModifiedTime</code>.</p>
    public let sortBy: String?
    /// <p>How <code>SearchResults</code> are ordered. Valid values are <code>Ascending</code> or
    ///       <code>Descending</code>. The default is <code>Descending</code>.</p>
    public let sortOrder: SearchSortOrder?

    public init (
        maxResults: Int? = nil,
        nextToken: String? = nil,
        resource: ResourceType? = nil,
        searchExpression: SearchExpression? = nil,
        sortBy: String? = nil,
        sortOrder: SearchSortOrder? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resource = resource
        self.searchExpression = searchExpression
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
