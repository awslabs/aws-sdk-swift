// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHumanTaskUisOutputBody: Equatable {
    public let humanTaskUiSummaries: [HumanTaskUiSummary]?
    public let nextToken: String?
}

extension ListHumanTaskUisOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case humanTaskUiSummaries = "HumanTaskUiSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanTaskUiSummariesContainer = try containerValues.decodeIfPresent([HumanTaskUiSummary].self, forKey: .humanTaskUiSummaries)
        var humanTaskUiSummariesDecoded0:[HumanTaskUiSummary]? = nil
        if let humanTaskUiSummariesContainer = humanTaskUiSummariesContainer {
            humanTaskUiSummariesDecoded0 = [HumanTaskUiSummary]()
            for structure0 in humanTaskUiSummariesContainer {
                humanTaskUiSummariesDecoded0?.append(structure0)
            }
        }
        humanTaskUiSummaries = humanTaskUiSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
