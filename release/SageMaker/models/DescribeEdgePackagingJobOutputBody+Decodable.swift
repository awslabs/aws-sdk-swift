// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEdgePackagingJobOutputBody: Equatable {
    public let edgePackagingJobArn: String?
    public let edgePackagingJobName: String?
    public let compilationJobName: String?
    public let modelName: String?
    public let modelVersion: String?
    public let roleArn: String?
    public let outputConfig: EdgeOutputConfig?
    public let resourceKey: String?
    public let edgePackagingJobStatus: EdgePackagingJobStatus?
    public let edgePackagingJobStatusMessage: String?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
    public let modelArtifact: String?
    public let modelSignature: String?
}

extension DescribeEdgePackagingJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case compilationJobName = "CompilationJobName"
        case creationTime = "CreationTime"
        case edgePackagingJobArn = "EdgePackagingJobArn"
        case edgePackagingJobName = "EdgePackagingJobName"
        case edgePackagingJobStatus = "EdgePackagingJobStatus"
        case edgePackagingJobStatusMessage = "EdgePackagingJobStatusMessage"
        case lastModifiedTime = "LastModifiedTime"
        case modelArtifact = "ModelArtifact"
        case modelName = "ModelName"
        case modelSignature = "ModelSignature"
        case modelVersion = "ModelVersion"
        case outputConfig = "OutputConfig"
        case resourceKey = "ResourceKey"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgePackagingJobArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .edgePackagingJobArn)
        edgePackagingJobArn = edgePackagingJobArnDecoded
        let edgePackagingJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .edgePackagingJobName)
        edgePackagingJobName = edgePackagingJobNameDecoded
        let compilationJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .compilationJobName)
        compilationJobName = compilationJobNameDecoded
        let modelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let modelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelVersion)
        modelVersion = modelVersionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(EdgeOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let resourceKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceKey)
        resourceKey = resourceKeyDecoded
        let edgePackagingJobStatusDecoded = try containerValues.decodeIfPresent(EdgePackagingJobStatus.self, forKey: .edgePackagingJobStatus)
        edgePackagingJobStatus = edgePackagingJobStatusDecoded
        let edgePackagingJobStatusMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .edgePackagingJobStatusMessage)
        edgePackagingJobStatusMessage = edgePackagingJobStatusMessageDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let modelArtifactDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelArtifact)
        modelArtifact = modelArtifactDecoded
        let modelSignatureDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelSignature)
        modelSignature = modelSignatureDecoded
    }
}
