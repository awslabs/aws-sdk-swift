// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateWorkteamInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case memberDefinitions = "MemberDefinitions"
        case notificationConfiguration = "NotificationConfiguration"
        case tags = "Tags"
        case workforceName = "WorkforceName"
        case workteamName = "WorkteamName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let memberDefinitions = memberDefinitions {
            var memberDefinitionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .memberDefinitions)
            for memberdefinitions0 in memberDefinitions {
                try memberDefinitionsContainer.encode(memberdefinitions0)
            }
        }
        if let notificationConfiguration = notificationConfiguration {
            try encodeContainer.encode(notificationConfiguration, forKey: .notificationConfiguration)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let workforceName = workforceName {
            try encodeContainer.encode(workforceName, forKey: .workforceName)
        }
        if let workteamName = workteamName {
            try encodeContainer.encode(workteamName, forKey: .workteamName)
        }
    }
}
