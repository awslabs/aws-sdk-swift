// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDomainInput: Equatable {
    /// <p>Specifies the VPC used for non-EFS traffic. The default value is
    ///         <code>PublicInternetOnly</code>.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by
    ///             Amazon SageMaker, which allows direct internet access</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p>
    ///             </li>
    ///          </ul>
    public let appNetworkAccessType: AppNetworkAccessType?
    /// <p>The mode of authentication that members use to access the domain.</p>
    public let authMode: AuthMode?
    /// <p>The default settings to use to create a user profile when <code>UserSettings</code> isn't specified
    ///          in the call to the <code>CreateUserProfile</code> API.</p>
    ///          <p>
    ///             <code>SecurityGroups</code> is aggregated when specified in both calls. For all other
    ///          settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code>
    ///          take precedence over those specified in <code>CreateDomain</code>.</p>
    public let defaultUserSettings: UserSettings?
    /// <p>A name for the domain.</p>
    public let domainName: String?
    /// <p>This member is deprecated and replaced with <code>KmsKeyId</code>.</p>
    @available(*, deprecated, message: "This property is deprecated, use KmsKeyId instead.")
    public let homeEfsFileSystemKmsKeyId: String?
    /// <p>SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed
    ///          customer master key (CMK) by default. For more control, specify a customer managed CMK.</p>
    public let kmsKeyId: String?
    /// <p>The VPC subnets that Studio uses for communication.</p>
    public let subnetIds: [String]?
    /// <p>Tags to associated with the Domain. Each tag consists of a key and an optional value.
    ///          Tag keys must be unique per resource. Tags are searchable using the
    ///          <code>Search</code> API.</p>
    ///          <p>Tags that you specify for the Domain are also added to all Apps that the
    ///           Domain launches.</p>
    public let tags: [Tag]?
    /// <p>The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p>
    public let vpcId: String?

    public init (
        appNetworkAccessType: AppNetworkAccessType? = nil,
        authMode: AuthMode? = nil,
        defaultUserSettings: UserSettings? = nil,
        domainName: String? = nil,
        homeEfsFileSystemKmsKeyId: String? = nil,
        kmsKeyId: String? = nil,
        subnetIds: [String]? = nil,
        tags: [Tag]? = nil,
        vpcId: String? = nil
    )
    {
        self.appNetworkAccessType = appNetworkAccessType
        self.authMode = authMode
        self.defaultUserSettings = defaultUserSettings
        self.domainName = domainName
        self.homeEfsFileSystemKmsKeyId = homeEfsFileSystemKmsKeyId
        self.kmsKeyId = kmsKeyId
        self.subnetIds = subnetIds
        self.tags = tags
        self.vpcId = vpcId
    }
}
