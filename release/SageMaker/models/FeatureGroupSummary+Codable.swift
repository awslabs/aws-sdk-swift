// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FeatureGroupSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case featureGroupArn = "FeatureGroupArn"
        case featureGroupName = "FeatureGroupName"
        case featureGroupStatus = "FeatureGroupStatus"
        case offlineStoreStatus = "OfflineStoreStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let featureGroupArn = featureGroupArn {
            try encodeContainer.encode(featureGroupArn, forKey: .featureGroupArn)
        }
        if let featureGroupName = featureGroupName {
            try encodeContainer.encode(featureGroupName, forKey: .featureGroupName)
        }
        if let featureGroupStatus = featureGroupStatus {
            try encodeContainer.encode(featureGroupStatus.rawValue, forKey: .featureGroupStatus)
        }
        if let offlineStoreStatus = offlineStoreStatus {
            try encodeContainer.encode(offlineStoreStatus, forKey: .offlineStoreStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let featureGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .featureGroupName)
        featureGroupName = featureGroupNameDecoded
        let featureGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .featureGroupArn)
        featureGroupArn = featureGroupArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let featureGroupStatusDecoded = try containerValues.decodeIfPresent(FeatureGroupStatus.self, forKey: .featureGroupStatus)
        featureGroupStatus = featureGroupStatusDecoded
        let offlineStoreStatusDecoded = try containerValues.decodeIfPresent(OfflineStoreStatus.self, forKey: .offlineStoreStatus)
        offlineStoreStatus = offlineStoreStatusDecoded
    }
}
