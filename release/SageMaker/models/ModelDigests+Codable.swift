// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModelDigests: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactDigest = "ArtifactDigest"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactDigest = artifactDigest {
            try encodeContainer.encode(artifactDigest, forKey: .artifactDigest)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactDigestDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactDigest)
        artifactDigest = artifactDigestDecoded
    }
}
