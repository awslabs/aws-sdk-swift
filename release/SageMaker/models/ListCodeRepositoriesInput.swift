// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListCodeRepositoriesInput: Equatable {
    /// <p>A filter that returns only Git repositories that were created after the specified
    ///             time.</p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns only Git repositories that were created before the specified
    ///             time.</p>
    public let creationTimeBefore: Date?
    /// <p>A filter that returns only Git repositories that were last modified after the
    ///             specified time.</p>
    public let lastModifiedTimeAfter: Date?
    /// <p>A filter that returns only Git repositories that were last modified before the
    ///             specified time.</p>
    public let lastModifiedTimeBefore: Date?
    /// <p>The maximum number of Git repositories to return in the response.</p>
    public let maxResults: Int?
    /// <p>A string in the Git repositories name. This filter returns only repositories whose
    ///             name contains the specified string.</p>
    public let nameContains: String?
    /// <p>If the result of a <code>ListCodeRepositoriesOutput</code> request was truncated, the
    ///             response includes a <code>NextToken</code>. To get the next set of Git repositories, use
    ///             the token in the next request.</p>
    public let nextToken: String?
    /// <p>The field to sort results by. The default is <code>Name</code>.</p>
    public let sortBy: CodeRepositorySortBy?
    /// <p>The sort order for results. The default is <code>Ascending</code>.</p>
    public let sortOrder: CodeRepositorySortOrder?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        lastModifiedTimeAfter: Date? = nil,
        lastModifiedTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        sortBy: CodeRepositorySortBy? = nil,
        sortOrder: CodeRepositorySortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.lastModifiedTimeAfter = lastModifiedTimeAfter
        self.lastModifiedTimeBefore = lastModifiedTimeBefore
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
