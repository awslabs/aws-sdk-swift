// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListProjectsOutputBody: Equatable {
    public let projectSummaryList: [ProjectSummary]?
    public let nextToken: String?
}

extension ListProjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case projectSummaryList = "ProjectSummaryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectSummaryListContainer = try containerValues.decodeIfPresent([ProjectSummary].self, forKey: .projectSummaryList)
        var projectSummaryListDecoded0:[ProjectSummary]? = nil
        if let projectSummaryListContainer = projectSummaryListContainer {
            projectSummaryListDecoded0 = [ProjectSummary]()
            for structure0 in projectSummaryListContainer {
                projectSummaryListDecoded0?.append(structure0)
            }
        }
        projectSummaryList = projectSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
