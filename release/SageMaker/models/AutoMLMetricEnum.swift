// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AutoMLMetricEnum {
    case accuracy
    case auc
    case f1
    case f1Macro
    case mse
    case sdkUnknown(String)
}

extension AutoMLMetricEnum : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AutoMLMetricEnum] {
        return [
            .accuracy,
            .auc,
            .f1,
            .f1Macro,
            .mse,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accuracy: return "Accuracy"
        case .auc: return "AUC"
        case .f1: return "F1"
        case .f1Macro: return "F1macro"
        case .mse: return "MSE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AutoMLMetricEnum(rawValue: rawValue) ?? AutoMLMetricEnum.sdkUnknown(rawValue)
    }
}
