// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAlgorithmsInput: Equatable {
    /// <p>A filter that returns only algorithms created after the specified time
    ///             (timestamp).</p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns only algorithms created before the specified time
    ///             (timestamp).</p>
    public let creationTimeBefore: Date?
    /// <p>The maximum number of algorithms to return in the response.</p>
    public let maxResults: Int?
    /// <p>A string in the algorithm name. This filter returns only algorithms whose name
    ///             contains the specified string.</p>
    public let nameContains: String?
    /// <p>If the response to a previous <code>ListAlgorithms</code> request was truncated, the
    ///             response includes a <code>NextToken</code>. To retrieve the next set of algorithms, use
    ///             the token in the next request.</p>
    public let nextToken: String?
    /// <p>The parameter by which to sort the results. The default is
    ///             <code>CreationTime</code>.</p>
    public let sortBy: AlgorithmSortBy?
    /// <p>The sort order for the results. The default is <code>Ascending</code>.</p>
    public let sortOrder: SortOrder?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        sortBy: AlgorithmSortBy? = nil,
        sortOrder: SortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
