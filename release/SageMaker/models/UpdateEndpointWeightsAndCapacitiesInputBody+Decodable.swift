// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateEndpointWeightsAndCapacitiesInputBody: Equatable {
    public let endpointName: String?
    public let desiredWeightsAndCapacities: [DesiredWeightAndCapacity]?
}

extension UpdateEndpointWeightsAndCapacitiesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case desiredWeightsAndCapacities = "DesiredWeightsAndCapacities"
        case endpointName = "EndpointName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let desiredWeightsAndCapacitiesContainer = try containerValues.decodeIfPresent([DesiredWeightAndCapacity].self, forKey: .desiredWeightsAndCapacities)
        var desiredWeightsAndCapacitiesDecoded0:[DesiredWeightAndCapacity]? = nil
        if let desiredWeightsAndCapacitiesContainer = desiredWeightsAndCapacitiesContainer {
            desiredWeightsAndCapacitiesDecoded0 = [DesiredWeightAndCapacity]()
            for structure0 in desiredWeightsAndCapacitiesContainer {
                desiredWeightsAndCapacitiesDecoded0?.append(structure0)
            }
        }
        desiredWeightsAndCapacities = desiredWeightsAndCapacitiesDecoded0
    }
}
