// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFeatureGroupInput: Equatable {
    /// <p>A free-form description of a <code>FeatureGroup</code>.</p>
    public let description: String?
    /// <p>The name of the feature that stores the <code>EventTime</code> of a <code>Record</code>
    ///          in a <code>FeatureGroup</code>.</p>
    ///          <p>An <code>EventTime</code> is a point in time when a new event occurs that corresponds to
    ///          the creation or update of a <code>Record</code> in a <code>FeatureGroup</code>. All
    ///             <code>Records</code> in the <code>FeatureGroup</code> must have a corresponding
    ///             <code>EventTime</code>.</p>
    ///          <p>An <code>EventTime</code> can be a <code>String</code> or <code>Fractional</code>. </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Fractional</code>: <code>EventTime</code> feature values must be a Unix
    ///                timestamp in seconds.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>String</code>: <code>EventTime</code> feature values must be an ISO-8601
    ///                string in the format. The following formats are supported
    ///                   <code>yyyy-MM-dd'T'HH:mm:ssZ</code> and <code>yyyy-MM-dd'T'HH:mm:ss.SSSZ</code>
    ///                where <code>yyyy</code>, <code>MM</code>, and <code>dd</code> represent the year,
    ///                month, and day respectively and <code>HH</code>, <code>mm</code>, <code>ss</code>,
    ///                and if applicable, <code>SSS</code> represent the hour, month, second and
    ///                milliseconds respsectively. <code>'T'</code> and <code>Z</code> are constants.</p>
    ///             </li>
    ///          </ul>
    public let eventTimeFeatureName: String?
    /// <p>A list of <code>Feature</code> names and types. <code>Name</code> and <code>Type</code>
    ///          is compulsory per <code>Feature</code>. </p>
    ///          <p>Valid feature <code>FeatureType</code>s are <code>Integral</code>,
    ///             <code>Fractional</code> and <code>String</code>.</p>
    ///          <p>
    ///             <code>FeatureName</code>s cannot be any of the following: <code>is_deleted</code>,
    ///             <code>write_time</code>, <code>api_invocation_time</code>
    ///          </p>
    ///          <p>You can create up to 2,500 <code>FeatureDefinition</code>s per
    ///          <code>FeatureGroup</code>.</p>
    public let featureDefinitions: [FeatureDefinition]?
    /// <p>The name of the <code>FeatureGroup</code>. The name must be unique within an AWS Region
    ///          in an AWS account. The name:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must start and end with an alphanumeric character.</p>
    ///             </li>
    ///             <li>
    ///                <p>Can only contain alphanumeric character and hyphens. Spaces are not allowed.
    ///             </p>
    ///             </li>
    ///          </ul>
    public let featureGroupName: String?
    /// <p>Use this to configure an <code>OfflineFeatureStore</code>. This parameter allows you to
    ///          specify:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The Amazon Simple Storage Service (Amazon S3) location of an
    ///                   <code>OfflineStore</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>A configuration for an AWS Glue or AWS Hive data cataolgue. </p>
    ///             </li>
    ///             <li>
    ///                <p>An KMS encryption key to encrypt the Amazon S3 location used for
    ///                   <code>OfflineStore</code>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>To learn more about this parameter, see <a>OfflineStoreConfig</a>.</p>
    public let offlineStoreConfig: OfflineStoreConfig?
    /// <p>You can turn the <code>OnlineStore</code> on or off by specifying <code>True</code> for
    ///          the <code>EnableOnlineStore</code> flag in <code>OnlineStoreConfig</code>; the default
    ///          value is <code>False</code>.</p>
    ///          <p>You can also include an AWS KMS key ID (<code>KMSKeyId</code>) for at-rest encryption of
    ///          the <code>OnlineStore</code>.</p>
    public let onlineStoreConfig: OnlineStoreConfig?
    /// <p>The name of the <code>Feature</code> whose value uniquely identifies a
    ///             <code>Record</code> defined in the <code>FeatureStore</code>. Only the latest record per
    ///          identifier value will be stored in the <code>OnlineStore</code>.
    ///             <code>RecordIdentifierFeatureName</code> must be one of feature definitions'
    ///          names.</p>
    ///          <p>You use the <code>RecordIdentifierFeatureName</code> to access data in a
    ///             <code>FeatureStore</code>.</p>
    ///          <p>This name:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must start and end with an alphanumeric character.</p>
    ///             </li>
    ///             <li>
    ///                <p>Can only contains alphanumeric characters, hyphens, underscores. Spaces are not
    ///                allowed. </p>
    ///             </li>
    ///          </ul>
    public let recordIdentifierFeatureName: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the
    ///             <code>OfflineStore</code> if an <code>OfflineStoreConfig</code> is provided.</p>
    public let roleArn: String?
    /// <p>Tags used to identify <code>Features</code> in each <code>FeatureGroup</code>.</p>
    public let tags: [Tag]?

    public init (
        description: String? = nil,
        eventTimeFeatureName: String? = nil,
        featureDefinitions: [FeatureDefinition]? = nil,
        featureGroupName: String? = nil,
        offlineStoreConfig: OfflineStoreConfig? = nil,
        onlineStoreConfig: OnlineStoreConfig? = nil,
        recordIdentifierFeatureName: String? = nil,
        roleArn: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.description = description
        self.eventTimeFeatureName = eventTimeFeatureName
        self.featureDefinitions = featureDefinitions
        self.featureGroupName = featureGroupName
        self.offlineStoreConfig = offlineStoreConfig
        self.onlineStoreConfig = onlineStoreConfig
        self.recordIdentifierFeatureName = recordIdentifierFeatureName
        self.roleArn = roleArn
        self.tags = tags
    }
}
