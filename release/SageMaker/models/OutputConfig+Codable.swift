// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutputConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case compilerOptions = "CompilerOptions"
        case kmsKeyId = "KmsKeyId"
        case s3OutputLocation = "S3OutputLocation"
        case targetDevice = "TargetDevice"
        case targetPlatform = "TargetPlatform"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let compilerOptions = compilerOptions {
            try encodeContainer.encode(compilerOptions, forKey: .compilerOptions)
        }
        if let kmsKeyId = kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
        if let s3OutputLocation = s3OutputLocation {
            try encodeContainer.encode(s3OutputLocation, forKey: .s3OutputLocation)
        }
        if let targetDevice = targetDevice {
            try encodeContainer.encode(targetDevice.rawValue, forKey: .targetDevice)
        }
        if let targetPlatform = targetPlatform {
            try encodeContainer.encode(targetPlatform, forKey: .targetPlatform)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3OutputLocationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3OutputLocation)
        s3OutputLocation = s3OutputLocationDecoded
        let targetDeviceDecoded = try containerValues.decodeIfPresent(TargetDevice.self, forKey: .targetDevice)
        targetDevice = targetDeviceDecoded
        let targetPlatformDecoded = try containerValues.decodeIfPresent(TargetPlatform.self, forKey: .targetPlatform)
        targetPlatform = targetPlatformDecoded
        let compilerOptionsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .compilerOptions)
        compilerOptions = compilerOptionsDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
