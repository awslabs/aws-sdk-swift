// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HumanTaskUiSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case humanTaskUiArn = "HumanTaskUiArn"
        case humanTaskUiName = "HumanTaskUiName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let humanTaskUiArn = humanTaskUiArn {
            try encodeContainer.encode(humanTaskUiArn, forKey: .humanTaskUiArn)
        }
        if let humanTaskUiName = humanTaskUiName {
            try encodeContainer.encode(humanTaskUiName, forKey: .humanTaskUiName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanTaskUiNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanTaskUiName)
        humanTaskUiName = humanTaskUiNameDecoded
        let humanTaskUiArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanTaskUiArn)
        humanTaskUiArn = humanTaskUiArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
