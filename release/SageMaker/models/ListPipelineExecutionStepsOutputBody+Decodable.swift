// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelineExecutionStepsOutputBody: Equatable {
    public let pipelineExecutionSteps: [PipelineExecutionStep]?
    public let nextToken: String?
}

extension ListPipelineExecutionStepsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pipelineExecutionSteps = "PipelineExecutionSteps"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineExecutionStepsContainer = try containerValues.decodeIfPresent([PipelineExecutionStep].self, forKey: .pipelineExecutionSteps)
        var pipelineExecutionStepsDecoded0:[PipelineExecutionStep]? = nil
        if let pipelineExecutionStepsContainer = pipelineExecutionStepsContainer {
            pipelineExecutionStepsDecoded0 = [PipelineExecutionStep]()
            for structure0 in pipelineExecutionStepsContainer {
                pipelineExecutionStepsDecoded0?.append(structure0)
            }
        }
        pipelineExecutionSteps = pipelineExecutionStepsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
