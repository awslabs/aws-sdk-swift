// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AddAssociationInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case associationType = "AssociationType"
        case destinationArn = "DestinationArn"
        case sourceArn = "SourceArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let associationType = associationType {
            try encodeContainer.encode(associationType.rawValue, forKey: .associationType)
        }
        if let destinationArn = destinationArn {
            try encodeContainer.encode(destinationArn, forKey: .destinationArn)
        }
        if let sourceArn = sourceArn {
            try encodeContainer.encode(sourceArn, forKey: .sourceArn)
        }
    }
}
