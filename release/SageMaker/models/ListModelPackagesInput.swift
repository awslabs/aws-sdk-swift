// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListModelPackagesInput: Equatable {
    /// <p>A filter that returns only model packages created after the specified time
    ///             (timestamp).</p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns only model packages created before the specified time
    ///             (timestamp).</p>
    public let creationTimeBefore: Date?
    /// <p>The maximum number of model packages to return in the response.</p>
    public let maxResults: Int?
    /// <p>A filter that returns only the model packages with the specified approval
    ///             status.</p>
    public let modelApprovalStatus: ModelApprovalStatus?
    /// <p>A filter that returns only model versions that belong to the specified model group.</p>
    public let modelPackageGroupName: String?
    /// <p>A filter that returns onlyl the model packages of the specified type. This can be one
    ///             of the following values.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>VERSIONED</code> - List only versioned models.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>UNVERSIONED</code> - List only unversioined models.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>BOTH</code> - List both versioned and unversioned models.</p>
    ///             </li>
    ///          </ul>
    public let modelPackageType: ModelPackageType?
    /// <p>A string in the model package name. This filter returns only model packages whose name
    ///             contains the specified string.</p>
    public let nameContains: String?
    /// <p>If the response to a previous <code>ListModelPackages</code> request was truncated,
    ///             the response includes a <code>NextToken</code>. To retrieve the next set of model
    ///             packages, use the token in the next request.</p>
    public let nextToken: String?
    /// <p>The parameter by which to sort the results. The default is
    ///             <code>CreationTime</code>.</p>
    public let sortBy: ModelPackageSortBy?
    /// <p>The sort order for the results. The default is <code>Ascending</code>.</p>
    public let sortOrder: SortOrder?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        modelApprovalStatus: ModelApprovalStatus? = nil,
        modelPackageGroupName: String? = nil,
        modelPackageType: ModelPackageType? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        sortBy: ModelPackageSortBy? = nil,
        sortOrder: SortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.maxResults = maxResults
        self.modelApprovalStatus = modelApprovalStatus
        self.modelPackageGroupName = modelPackageGroupName
        self.modelPackageType = modelPackageType
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
