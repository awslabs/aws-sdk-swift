// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListHyperParameterTuningJobsOutputBody: Equatable {
    public let hyperParameterTuningJobSummaries: [HyperParameterTuningJobSummary]?
    public let nextToken: String?
}

extension ListHyperParameterTuningJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hyperParameterTuningJobSummaries = "HyperParameterTuningJobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hyperParameterTuningJobSummariesContainer = try containerValues.decodeIfPresent([HyperParameterTuningJobSummary].self, forKey: .hyperParameterTuningJobSummaries)
        var hyperParameterTuningJobSummariesDecoded0:[HyperParameterTuningJobSummary]? = nil
        if let hyperParameterTuningJobSummariesContainer = hyperParameterTuningJobSummariesContainer {
            hyperParameterTuningJobSummariesDecoded0 = [HyperParameterTuningJobSummary]()
            for structure0 in hyperParameterTuningJobSummariesContainer {
                hyperParameterTuningJobSummariesDecoded0?.append(structure0)
            }
        }
        hyperParameterTuningJobSummaries = hyperParameterTuningJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
