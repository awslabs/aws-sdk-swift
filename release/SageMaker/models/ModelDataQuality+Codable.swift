// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModelDataQuality: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case constraints = "Constraints"
        case statistics = "Statistics"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let constraints = constraints {
            try encodeContainer.encode(constraints, forKey: .constraints)
        }
        if let statistics = statistics {
            try encodeContainer.encode(statistics, forKey: .statistics)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statisticsDecoded = try containerValues.decodeIfPresent(MetricsSource.self, forKey: .statistics)
        statistics = statisticsDecoded
        let constraintsDecoded = try containerValues.decodeIfPresent(MetricsSource.self, forKey: .constraints)
        constraints = constraintsDecoded
    }
}
