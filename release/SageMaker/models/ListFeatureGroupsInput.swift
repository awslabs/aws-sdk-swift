// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListFeatureGroupsInput: Equatable {
    /// <p>Use this parameter to search for <code>FeatureGroups</code>s created after a specific
    ///          date and time.</p>
    public let creationTimeAfter: Date?
    /// <p>Use this parameter to search for <code>FeatureGroups</code>s created before a specific
    ///          date and time.</p>
    public let creationTimeBefore: Date?
    /// <p>A <code>FeatureGroup</code> status. Filters by <code>FeatureGroup</code> status. </p>
    public let featureGroupStatusEquals: FeatureGroupStatus?
    /// <p>The maximum number of results returned by <code>ListFeatureGroups</code>.</p>
    public let maxResults: Int?
    /// <p>A string that partially matches one or more <code>FeatureGroup</code>s names. Filters
    ///             <code>FeatureGroup</code>s by name. </p>
    public let nameContains: String?
    /// <p>A token to resume pagination of <code>ListFeatureGroups</code> results.</p>
    public let nextToken: String?
    /// <p>An <code>OfflineStore</code> status. Filters by <code>OfflineStore</code> status. </p>
    public let offlineStoreStatusEquals: OfflineStoreStatusValue?
    /// <p>The value on which the feature group list is sorted.</p>
    public let sortBy: FeatureGroupSortBy?
    /// <p>The order in which feature groups are listed.</p>
    public let sortOrder: FeatureGroupSortOrder?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        featureGroupStatusEquals: FeatureGroupStatus? = nil,
        maxResults: Int? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        offlineStoreStatusEquals: OfflineStoreStatusValue? = nil,
        sortBy: FeatureGroupSortBy? = nil,
        sortOrder: FeatureGroupSortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.featureGroupStatusEquals = featureGroupStatusEquals
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.offlineStoreStatusEquals = offlineStoreStatusEquals
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
