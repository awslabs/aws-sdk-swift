// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeFeatureGroupOutput: Equatable {
    /// <p>A timestamp indicating when SageMaker created the <code>FeatureGroup</code>.</p>
    public let creationTime: Date?
    /// <p>A free form description of the feature group.</p>
    public let description: String?
    /// <p>The name of the feature that stores the <code>EventTime</code> of a Record in a
    ///          <code>FeatureGroup</code>.</p>
    ///          <p> An <code>EventTime</code> is a point in time when a new event occurs that
    ///          corresponds to the creation or update of a <code>Record</code> in a
    ///             <code>FeatureGroup</code>. All <code>Records</code> in the <code>FeatureGroup</code>
    ///          have a corresponding <code>EventTime</code>.</p>
    public let eventTimeFeatureName: String?
    /// <p>The reason that the <code>FeatureGroup</code> failed to be replicated in the
    ///             <code>OfflineStore</code>. This is failure can occur because:</p>
    ///          <ul>
    ///             <li>
    ///                <p>The <code>FeatureGroup</code> could not be created in the
    ///                   <code>OfflineStore</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>The <code>FeatureGroup</code> could not be deleted from the
    ///                   <code>OfflineStore</code>.</p>
    ///             </li>
    ///          </ul>
    public let failureReason: String?
    /// <p>A list of the <code>Features</code> in the <code>FeatureGroup</code>.
    ///          Each feature is defined by a <code>FeatureName</code> and <code>FeatureType</code>.</p>
    public let featureDefinitions: [FeatureDefinition]?
    /// <p>The Amazon Resource Name (ARN) of the <code>FeatureGroup</code>.  </p>
    public let featureGroupArn: String?
    /// <p>he name of the <code>FeatureGroup</code>.</p>
    public let featureGroupName: String?
    /// <p>The status of the feature group.</p>
    public let featureGroupStatus: FeatureGroupStatus?
    /// <p>A token to resume pagination of the list of <code>Features</code>
    ///             (<code>FeatureDefinitions</code>).</p>
    public let nextToken: String?
    /// <p>The configuration of the <code>OfflineStore</code>, inducing the S3 location of the
    ///             <code>OfflineStore</code>, AWS Glue or AWS Hive data catalogue configurations, and the
    ///          security configuration.</p>
    public let offlineStoreConfig: OfflineStoreConfig?
    /// <p>The status of the <code>OfflineStore</code>. Notifies you if replicating data into the
    ///             <code>OfflineStore</code> has failed. Returns either: <code>Active</code> or
    ///             <code>Blocked</code>
    ///          </p>
    public let offlineStoreStatus: OfflineStoreStatus?
    /// <p>The configuration for the <code>OnlineStore</code>.</p>
    public let onlineStoreConfig: OnlineStoreConfig?
    /// <p>The name of the <code>Feature</code> used for <code>RecordIdentifier</code>, whose value
    ///          uniquely identifies a record stored in the feature store.</p>
    public let recordIdentifierFeatureName: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the
    ///          <code>OfflineStore</code> if an <code>OfflineStoreConfig</code> is provided.</p>
    public let roleArn: String?

    public init (
        creationTime: Date? = nil,
        description: String? = nil,
        eventTimeFeatureName: String? = nil,
        failureReason: String? = nil,
        featureDefinitions: [FeatureDefinition]? = nil,
        featureGroupArn: String? = nil,
        featureGroupName: String? = nil,
        featureGroupStatus: FeatureGroupStatus? = nil,
        nextToken: String? = nil,
        offlineStoreConfig: OfflineStoreConfig? = nil,
        offlineStoreStatus: OfflineStoreStatus? = nil,
        onlineStoreConfig: OnlineStoreConfig? = nil,
        recordIdentifierFeatureName: String? = nil,
        roleArn: String? = nil
    )
    {
        self.creationTime = creationTime
        self.description = description
        self.eventTimeFeatureName = eventTimeFeatureName
        self.failureReason = failureReason
        self.featureDefinitions = featureDefinitions
        self.featureGroupArn = featureGroupArn
        self.featureGroupName = featureGroupName
        self.featureGroupStatus = featureGroupStatus
        self.nextToken = nextToken
        self.offlineStoreConfig = offlineStoreConfig
        self.offlineStoreStatus = offlineStoreStatus
        self.onlineStoreConfig = onlineStoreConfig
        self.recordIdentifierFeatureName = recordIdentifierFeatureName
        self.roleArn = roleArn
    }
}
