// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceFleetReportOutputBody: Equatable {
    public let deviceFleetArn: String?
    public let deviceFleetName: String?
    public let outputConfig: EdgeOutputConfig?
    public let description: String?
    public let reportGenerated: Date?
    public let deviceStats: DeviceStats?
    public let agentVersions: [AgentVersion]?
    public let modelStats: [EdgeModelStat]?
}

extension GetDeviceFleetReportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case agentVersions = "AgentVersions"
        case description = "Description"
        case deviceFleetArn = "DeviceFleetArn"
        case deviceFleetName = "DeviceFleetName"
        case deviceStats = "DeviceStats"
        case modelStats = "ModelStats"
        case outputConfig = "OutputConfig"
        case reportGenerated = "ReportGenerated"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceFleetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceFleetArn)
        deviceFleetArn = deviceFleetArnDecoded
        let deviceFleetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceFleetName)
        deviceFleetName = deviceFleetNameDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(EdgeOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let reportGeneratedDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .reportGenerated)
        reportGenerated = reportGeneratedDecoded
        let deviceStatsDecoded = try containerValues.decodeIfPresent(DeviceStats.self, forKey: .deviceStats)
        deviceStats = deviceStatsDecoded
        let agentVersionsContainer = try containerValues.decodeIfPresent([AgentVersion].self, forKey: .agentVersions)
        var agentVersionsDecoded0:[AgentVersion]? = nil
        if let agentVersionsContainer = agentVersionsContainer {
            agentVersionsDecoded0 = [AgentVersion]()
            for structure0 in agentVersionsContainer {
                agentVersionsDecoded0?.append(structure0)
            }
        }
        agentVersions = agentVersionsDecoded0
        let modelStatsContainer = try containerValues.decodeIfPresent([EdgeModelStat].self, forKey: .modelStats)
        var modelStatsDecoded0:[EdgeModelStat]? = nil
        if let modelStatsContainer = modelStatsContainer {
            modelStatsDecoded0 = [EdgeModelStat]()
            for structure0 in modelStatsContainer {
                modelStatsDecoded0?.append(structure0)
            }
        }
        modelStats = modelStatsDecoded0
    }
}
