// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeNotebookInstanceLifecycleConfigOutput: Equatable {
    /// <p>A timestamp that tells when the lifecycle configuration was created.</p>
    public let creationTime: Date?
    /// <p>A timestamp that tells when the lifecycle configuration was last modified.</p>
    public let lastModifiedTime: Date?
    /// <p>The Amazon Resource Name (ARN) of the lifecycle configuration.</p>
    public let notebookInstanceLifecycleConfigArn: String?
    /// <p>The name of the lifecycle configuration.</p>
    public let notebookInstanceLifecycleConfigName: String?
    /// <p>The shell script that runs only once, when you create a notebook instance.</p>
    public let onCreate: [NotebookInstanceLifecycleHook]?
    /// <p>The shell script that runs every time you start a notebook instance, including when
    ///             you create the notebook instance.</p>
    public let onStart: [NotebookInstanceLifecycleHook]?

    public init (
        creationTime: Date? = nil,
        lastModifiedTime: Date? = nil,
        notebookInstanceLifecycleConfigArn: String? = nil,
        notebookInstanceLifecycleConfigName: String? = nil,
        onCreate: [NotebookInstanceLifecycleHook]? = nil,
        onStart: [NotebookInstanceLifecycleHook]? = nil
    )
    {
        self.creationTime = creationTime
        self.lastModifiedTime = lastModifiedTime
        self.notebookInstanceLifecycleConfigArn = notebookInstanceLifecycleConfigArn
        self.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName
        self.onCreate = onCreate
        self.onStart = onStart
    }
}
