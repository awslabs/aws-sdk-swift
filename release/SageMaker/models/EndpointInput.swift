// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Input object for the endpoint</p>
public struct EndpointInput: Equatable {
    /// <p>If specified, monitoring jobs substract this time from the end time. For information
    ///          about using offsets for scheduling monitoring jobs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html">Schedule Model
    ///             Quality Monitoring Jobs</a>.</p>
    public let endTimeOffset: String?
    /// <p>An endpoint in customer's account which has enabled <code>DataCaptureConfig</code>
    ///          enabled.</p>
    public let endpointName: String?
    /// <p>The attributes of the input data that are the input features.</p>
    public let featuresAttribute: String?
    /// <p>The attribute of the input data that represents the ground truth label.</p>
    public let inferenceAttribute: String?
    /// <p>Path to the filesystem where the endpoint data is available to the container.</p>
    public let localPath: String?
    /// <p>In a classification problem, the attribute that represents the class probability.</p>
    public let probabilityAttribute: String?
    /// <p>The threshold for the class probability to be evaluated as a positive result.</p>
    public let probabilityThresholdAttribute: Double?
    /// <p>Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key.
    ///          Defaults to <code>FullyReplicated</code>
    ///          </p>
    public let s3DataDistributionType: ProcessingS3DataDistributionType?
    /// <p>Whether the <code>Pipe</code> or <code>File</code> is used as the input mode for
    ///          transfering data for the monitoring job. <code>Pipe</code> mode is recommended for large
    ///          datasets. <code>File</code> mode is useful for small files that fit in memory. Defaults to
    ///             <code>File</code>.</p>
    public let s3InputMode: ProcessingS3InputMode?
    /// <p>If specified, monitoring jobs substract this time from the start time. For information
    ///          about using offsets for scheduling monitoring jobs, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-model-quality-schedule.html">Schedule Model
    ///             Quality Monitoring Jobs</a>.</p>
    public let startTimeOffset: String?

    public init (
        endTimeOffset: String? = nil,
        endpointName: String? = nil,
        featuresAttribute: String? = nil,
        inferenceAttribute: String? = nil,
        localPath: String? = nil,
        probabilityAttribute: String? = nil,
        probabilityThresholdAttribute: Double? = nil,
        s3DataDistributionType: ProcessingS3DataDistributionType? = nil,
        s3InputMode: ProcessingS3InputMode? = nil,
        startTimeOffset: String? = nil
    )
    {
        self.endTimeOffset = endTimeOffset
        self.endpointName = endpointName
        self.featuresAttribute = featuresAttribute
        self.inferenceAttribute = inferenceAttribute
        self.localPath = localPath
        self.probabilityAttribute = probabilityAttribute
        self.probabilityThresholdAttribute = probabilityThresholdAttribute
        self.s3DataDistributionType = s3DataDistributionType
        self.s3InputMode = s3InputMode
        self.startTimeOffset = startTimeOffset
    }
}
