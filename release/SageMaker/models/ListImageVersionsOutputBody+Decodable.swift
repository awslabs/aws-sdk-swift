// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImageVersionsOutputBody: Equatable {
    public let imageVersions: [ImageVersion]?
    public let nextToken: String?
}

extension ListImageVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case imageVersions = "ImageVersions"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageVersionsContainer = try containerValues.decodeIfPresent([ImageVersion].self, forKey: .imageVersions)
        var imageVersionsDecoded0:[ImageVersion]? = nil
        if let imageVersionsContainer = imageVersionsContainer {
            imageVersionsDecoded0 = [ImageVersion]()
            for structure0 in imageVersionsContainer {
                imageVersionsDecoded0?.append(structure0)
            }
        }
        imageVersions = imageVersionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
