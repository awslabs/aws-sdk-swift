// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Identifies
///             a model that you want to host and the resources to deploy for hosting
///             it. If you are deploying multiple models, tell Amazon SageMaker how to distribute
///             traffic among the models by specifying variant weights. </p>
public struct ProductionVariant: Equatable {
    /// <p>The size of the Elastic Inference (EI) instance to use for the production variant. EI
    ///             instances provide on-demand GPU computing for inference. For more information, see
    ///                 <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html">Using Elastic
    ///                 Inference in Amazon SageMaker</a>.</p>
    public let acceleratorType: ProductionVariantAcceleratorType?
    /// <p>Specifies configuration for a core dump from the model container when the process
    ///             crashes.</p>
    public let coreDumpConfig: ProductionVariantCoreDumpConfig?
    /// <p>Number of instances to launch initially.</p>
    public let initialInstanceCount: Int?
    /// <p>Determines initial traffic distribution among all of the models that you specify in
    ///             the endpoint configuration. The traffic to a production variant is determined by the
    ///             ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code>
    ///             values across all ProductionVariants. If unspecified, it defaults to 1.0.
    ///             </p>
    public let initialVariantWeight: Float?
    /// <p>The ML compute instance type.</p>
    public let instanceType: ProductionVariantInstanceType?
    /// <p>The name of the model that you want to host. This is the name that you specified
    ///             when creating the model.</p>
    public let modelName: String?
    /// <p>The name of the production variant.</p>
    public let variantName: String?

    public init (
        acceleratorType: ProductionVariantAcceleratorType? = nil,
        coreDumpConfig: ProductionVariantCoreDumpConfig? = nil,
        initialInstanceCount: Int? = nil,
        initialVariantWeight: Float? = nil,
        instanceType: ProductionVariantInstanceType? = nil,
        modelName: String? = nil,
        variantName: String? = nil
    )
    {
        self.acceleratorType = acceleratorType
        self.coreDumpConfig = coreDumpConfig
        self.initialInstanceCount = initialInstanceCount
        self.initialVariantWeight = initialVariantWeight
        self.instanceType = instanceType
        self.modelName = modelName
        self.variantName = variantName
    }
}
