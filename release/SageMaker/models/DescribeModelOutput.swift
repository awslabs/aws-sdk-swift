// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeModelOutput: Equatable {
    /// <p>The containers in the inference pipeline.</p>
    public let containers: [ContainerDefinition]?
    /// <p>A timestamp that shows when the model was created.</p>
    public let creationTime: Date?
    /// <p>If <code>True</code>, no inbound or outbound network calls can be made to or from the
    ///             model container.</p>
    public let enableNetworkIsolation: Bool
    /// <p>The Amazon Resource Name (ARN) of the IAM role that you specified for the
    ///             model.</p>
    public let executionRoleArn: String?
    /// <p>Specifies details of how containers in a multi-container endpoint are called.</p>
    public let inferenceExecutionConfig: InferenceExecutionConfig?
    /// <p>The Amazon Resource Name (ARN) of the model.</p>
    public let modelArn: String?
    /// <p>Name of the Amazon SageMaker model.</p>
    public let modelName: String?
    /// <p>The location of the primary inference code, associated artifacts, and custom
    ///             environment map that the inference code uses when it is deployed in production.
    ///         </p>
    public let primaryContainer: ContainerDefinition?
    /// <p>A <a>VpcConfig</a> object that specifies the VPC that this model has access
    ///             to. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual
    ///                 Private Cloud</a>
    ///          </p>
    public let vpcConfig: VpcConfig?

    public init (
        containers: [ContainerDefinition]? = nil,
        creationTime: Date? = nil,
        enableNetworkIsolation: Bool = false,
        executionRoleArn: String? = nil,
        inferenceExecutionConfig: InferenceExecutionConfig? = nil,
        modelArn: String? = nil,
        modelName: String? = nil,
        primaryContainer: ContainerDefinition? = nil,
        vpcConfig: VpcConfig? = nil
    )
    {
        self.containers = containers
        self.creationTime = creationTime
        self.enableNetworkIsolation = enableNetworkIsolation
        self.executionRoleArn = executionRoleArn
        self.inferenceExecutionConfig = inferenceExecutionConfig
        self.modelArn = modelArn
        self.modelName = modelName
        self.primaryContainer = primaryContainer
        self.vpcConfig = vpcConfig
    }
}
