// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The data storage format for Athena query results.</p>
public enum AthenaResultFormat {
    case avro
    case json
    case orc
    case parquet
    case textfile
    case sdkUnknown(String)
}

extension AthenaResultFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AthenaResultFormat] {
        return [
            .avro,
            .json,
            .orc,
            .parquet,
            .textfile,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .avro: return "AVRO"
        case .json: return "JSON"
        case .orc: return "ORC"
        case .parquet: return "PARQUET"
        case .textfile: return "TEXTFILE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AthenaResultFormat(rawValue: rawValue) ?? AthenaResultFormat.sdkUnknown(rawValue)
    }
}
