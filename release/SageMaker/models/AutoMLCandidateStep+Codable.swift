// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoMLCandidateStep: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case candidateStepArn = "CandidateStepArn"
        case candidateStepName = "CandidateStepName"
        case candidateStepType = "CandidateStepType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let candidateStepArn = candidateStepArn {
            try encodeContainer.encode(candidateStepArn, forKey: .candidateStepArn)
        }
        if let candidateStepName = candidateStepName {
            try encodeContainer.encode(candidateStepName, forKey: .candidateStepName)
        }
        if let candidateStepType = candidateStepType {
            try encodeContainer.encode(candidateStepType.rawValue, forKey: .candidateStepType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let candidateStepTypeDecoded = try containerValues.decodeIfPresent(CandidateStepType.self, forKey: .candidateStepType)
        candidateStepType = candidateStepTypeDecoded
        let candidateStepArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .candidateStepArn)
        candidateStepArn = candidateStepArnDecoded
        let candidateStepNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .candidateStepName)
        candidateStepName = candidateStepNameDecoded
    }
}
