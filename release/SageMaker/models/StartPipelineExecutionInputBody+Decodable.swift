// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartPipelineExecutionInputBody: Equatable {
    public let pipelineName: String?
    public let pipelineExecutionDisplayName: String?
    public let pipelineParameters: [Parameter]?
    public let pipelineExecutionDescription: String?
    public let clientRequestToken: String?
}

extension StartPipelineExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientRequestToken = "ClientRequestToken"
        case pipelineExecutionDescription = "PipelineExecutionDescription"
        case pipelineExecutionDisplayName = "PipelineExecutionDisplayName"
        case pipelineName = "PipelineName"
        case pipelineParameters = "PipelineParameters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let pipelineExecutionDisplayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineExecutionDisplayName)
        pipelineExecutionDisplayName = pipelineExecutionDisplayNameDecoded
        let pipelineParametersContainer = try containerValues.decodeIfPresent([Parameter].self, forKey: .pipelineParameters)
        var pipelineParametersDecoded0:[Parameter]? = nil
        if let pipelineParametersContainer = pipelineParametersContainer {
            pipelineParametersDecoded0 = [Parameter]()
            for structure0 in pipelineParametersContainer {
                pipelineParametersDecoded0?.append(structure0)
            }
        }
        pipelineParameters = pipelineParametersDecoded0
        let pipelineExecutionDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineExecutionDescription)
        pipelineExecutionDescription = pipelineExecutionDescriptionDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
