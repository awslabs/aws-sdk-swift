// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeArtifactOutputBody: Equatable {
    public let artifactName: String?
    public let artifactArn: String?
    public let source: ArtifactSource?
    public let artifactType: String?
    public let properties: [String:String]?
    public let creationTime: Date?
    public let createdBy: UserContext?
    public let lastModifiedTime: Date?
    public let lastModifiedBy: UserContext?
    public let metadataProperties: MetadataProperties?
}

extension DescribeArtifactOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case artifactType = "ArtifactType"
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case metadataProperties = "MetadataProperties"
        case properties = "Properties"
        case source = "Source"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let artifactArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactArn)
        artifactArn = artifactArnDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(ArtifactSource.self, forKey: .source)
        source = sourceDecoded
        let artifactTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactType)
        artifactType = artifactTypeDecoded
        let propertiesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .properties)
        var propertiesDecoded0: [String:String]? = nil
        if let propertiesContainer = propertiesContainer {
            propertiesDecoded0 = [String:String]()
            for (key0, stringparametervalue0) in propertiesContainer {
                propertiesDecoded0?[key0] = stringparametervalue0
            }
        }
        properties = propertiesDecoded0
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
    }
}
