// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDomainInputBody: Equatable {
    public let domainName: String?
    public let authMode: AuthMode?
    public let defaultUserSettings: UserSettings?
    public let subnetIds: [String]?
    public let vpcId: String?
    public let tags: [Tag]?
    public let appNetworkAccessType: AppNetworkAccessType?
    public let homeEfsFileSystemKmsKeyId: String?
    public let kmsKeyId: String?
}

extension CreateDomainInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appNetworkAccessType = "AppNetworkAccessType"
        case authMode = "AuthMode"
        case defaultUserSettings = "DefaultUserSettings"
        case domainName = "DomainName"
        case homeEfsFileSystemKmsKeyId = "HomeEfsFileSystemKmsKeyId"
        case kmsKeyId = "KmsKeyId"
        case subnetIds = "SubnetIds"
        case tags = "Tags"
        case vpcId = "VpcId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let authModeDecoded = try containerValues.decodeIfPresent(AuthMode.self, forKey: .authMode)
        authMode = authModeDecoded
        let defaultUserSettingsDecoded = try containerValues.decodeIfPresent(UserSettings.self, forKey: .defaultUserSettings)
        defaultUserSettings = defaultUserSettingsDecoded
        let subnetIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .subnetIds)
        var subnetIdsDecoded0:[String]? = nil
        if let subnetIdsContainer = subnetIdsContainer {
            subnetIdsDecoded0 = [String]()
            for string0 in subnetIdsContainer {
                subnetIdsDecoded0?.append(string0)
            }
        }
        subnetIds = subnetIdsDecoded0
        let vpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpcId)
        vpcId = vpcIdDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let appNetworkAccessTypeDecoded = try containerValues.decodeIfPresent(AppNetworkAccessType.self, forKey: .appNetworkAccessType)
        appNetworkAccessType = appNetworkAccessTypeDecoded
        let homeEfsFileSystemKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .homeEfsFileSystemKmsKeyId)
        homeEfsFileSystemKmsKeyId = homeEfsFileSystemKmsKeyIdDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
