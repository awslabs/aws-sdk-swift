// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListNotebookInstancesOutputBody: Equatable {
    public let nextToken: String?
    public let notebookInstances: [NotebookInstanceSummary]?
}

extension ListNotebookInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case notebookInstances = "NotebookInstances"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let notebookInstancesContainer = try containerValues.decodeIfPresent([NotebookInstanceSummary].self, forKey: .notebookInstances)
        var notebookInstancesDecoded0:[NotebookInstanceSummary]? = nil
        if let notebookInstancesContainer = notebookInstancesContainer {
            notebookInstancesDecoded0 = [NotebookInstanceSummary]()
            for structure0 in notebookInstancesContainer {
                notebookInstancesDecoded0?.append(structure0)
            }
        }
        notebookInstances = notebookInstancesDecoded0
    }
}
