// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserProfilesInputBody: Equatable {
    public let nextToken: String?
    public let maxResults: Int?
    public let sortOrder: SortOrder?
    public let sortBy: UserProfileSortKey?
    public let domainIdEquals: String?
    public let userProfileNameContains: String?
}

extension ListUserProfilesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainIdEquals = "DomainIdEquals"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
        case userProfileNameContains = "UserProfileNameContains"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(UserProfileSortKey.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let domainIdEqualsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainIdEquals)
        domainIdEquals = domainIdEqualsDecoded
        let userProfileNameContainsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userProfileNameContains)
        userProfileNameContains = userProfileNameContainsDecoded
    }
}
