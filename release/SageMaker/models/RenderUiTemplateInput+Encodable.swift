// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RenderUiTemplateInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case humanTaskUiArn = "HumanTaskUiArn"
        case roleArn = "RoleArn"
        case task = "Task"
        case uiTemplate = "UiTemplate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let humanTaskUiArn = humanTaskUiArn {
            try encodeContainer.encode(humanTaskUiArn, forKey: .humanTaskUiArn)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let task = task {
            try encodeContainer.encode(task, forKey: .task)
        }
        if let uiTemplate = uiTemplate {
            try encodeContainer.encode(uiTemplate, forKey: .uiTemplate)
        }
    }
}
