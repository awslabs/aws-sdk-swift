// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateEndpointConfigInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataCaptureConfig = "DataCaptureConfig"
        case endpointConfigName = "EndpointConfigName"
        case kmsKeyId = "KmsKeyId"
        case productionVariants = "ProductionVariants"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataCaptureConfig = dataCaptureConfig {
            try encodeContainer.encode(dataCaptureConfig, forKey: .dataCaptureConfig)
        }
        if let endpointConfigName = endpointConfigName {
            try encodeContainer.encode(endpointConfigName, forKey: .endpointConfigName)
        }
        if let kmsKeyId = kmsKeyId {
            try encodeContainer.encode(kmsKeyId, forKey: .kmsKeyId)
        }
        if let productionVariants = productionVariants {
            var productionVariantsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .productionVariants)
            for productionvariantlist0 in productionVariants {
                try productionVariantsContainer.encode(productionvariantlist0)
            }
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
