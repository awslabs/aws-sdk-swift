// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CaptureContentTypeHeader: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case csvContentTypes = "CsvContentTypes"
        case jsonContentTypes = "JsonContentTypes"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let csvContentTypes = csvContentTypes {
            var csvContentTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .csvContentTypes)
            for csvcontenttypes0 in csvContentTypes {
                try csvContentTypesContainer.encode(csvcontenttypes0)
            }
        }
        if let jsonContentTypes = jsonContentTypes {
            var jsonContentTypesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .jsonContentTypes)
            for jsoncontenttypes0 in jsonContentTypes {
                try jsonContentTypesContainer.encode(jsoncontenttypes0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let csvContentTypesContainer = try containerValues.decodeIfPresent([String].self, forKey: .csvContentTypes)
        var csvContentTypesDecoded0:[String]? = nil
        if let csvContentTypesContainer = csvContentTypesContainer {
            csvContentTypesDecoded0 = [String]()
            for string0 in csvContentTypesContainer {
                csvContentTypesDecoded0?.append(string0)
            }
        }
        csvContentTypes = csvContentTypesDecoded0
        let jsonContentTypesContainer = try containerValues.decodeIfPresent([String].self, forKey: .jsonContentTypes)
        var jsonContentTypesDecoded0:[String]? = nil
        if let jsonContentTypesContainer = jsonContentTypesContainer {
            jsonContentTypesDecoded0 = [String]()
            for string0 in jsonContentTypesContainer {
                jsonContentTypesDecoded0?.append(string0)
            }
        }
        jsonContentTypes = jsonContentTypesDecoded0
    }
}
