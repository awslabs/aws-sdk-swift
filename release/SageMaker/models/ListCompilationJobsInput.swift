// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListCompilationJobsInput: Equatable {
    /// <p>A filter that returns the model compilation jobs that were created after a specified
    ///             time. </p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns the model compilation jobs that were created before a specified
    ///             time.</p>
    public let creationTimeBefore: Date?
    /// <p>A filter that returns the model compilation jobs that were modified after a specified
    ///             time.</p>
    public let lastModifiedTimeAfter: Date?
    /// <p>A filter that returns the model compilation jobs that were modified before a specified
    ///             time.</p>
    public let lastModifiedTimeBefore: Date?
    /// <p>The maximum number of model compilation jobs to return in the response.</p>
    public let maxResults: Int?
    /// <p>A filter that returns the model compilation jobs whose name contains a specified
    ///             string.</p>
    public let nameContains: String?
    /// <p>If the result of the previous <code>ListCompilationJobs</code> request was truncated,
    ///             the response includes a <code>NextToken</code>. To retrieve the next set of model
    ///             compilation jobs, use the token in the next request.</p>
    public let nextToken: String?
    /// <p>The field by which to sort results. The default is <code>CreationTime</code>.</p>
    public let sortBy: ListCompilationJobsSortBy?
    /// <p>The sort order for results. The default is <code>Ascending</code>.</p>
    public let sortOrder: SortOrder?
    /// <p>A filter that retrieves model compilation jobs with a specific <a>DescribeCompilationJobResponse$CompilationJobStatus</a> status.</p>
    public let statusEquals: CompilationJobStatus?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        lastModifiedTimeAfter: Date? = nil,
        lastModifiedTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        sortBy: ListCompilationJobsSortBy? = nil,
        sortOrder: SortOrder? = nil,
        statusEquals: CompilationJobStatus? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.lastModifiedTimeAfter = lastModifiedTimeAfter
        self.lastModifiedTimeBefore = lastModifiedTimeBefore
        self.maxResults = maxResults
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.statusEquals = statusEquals
    }
}
