// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListMonitoringExecutionsInput: Equatable {
    /// <p>A filter that returns only jobs created after a specified time.</p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns only jobs created before a specified time.</p>
    public let creationTimeBefore: Date?
    /// <p>Name of a specific endpoint to fetch jobs for.</p>
    public let endpointName: String?
    /// <p>A filter that returns only jobs modified before a specified time.</p>
    public let lastModifiedTimeAfter: Date?
    /// <p>A filter that returns only jobs modified after a specified time.</p>
    public let lastModifiedTimeBefore: Date?
    /// <p>The maximum number of jobs to return in the response. The default value is 10.</p>
    public let maxResults: Int?
    /// <p>Gets a list of the monitoring job runs of the specified monitoring job
    ///          definitions.</p>
    public let monitoringJobDefinitionName: String?
    /// <p>Name of a specific schedule to fetch jobs for.</p>
    public let monitoringScheduleName: String?
    /// <p>A filter that returns only the monitoring job runs of the specified monitoring
    ///          type.</p>
    public let monitoringTypeEquals: MonitoringType?
    /// <p>The token returned if the response is truncated. To retrieve the next set of job
    ///          executions, use it in the next request.</p>
    public let nextToken: String?
    /// <p>Filter for jobs scheduled after a specified time.</p>
    public let scheduledTimeAfter: Date?
    /// <p>Filter for jobs scheduled before a specified time.</p>
    public let scheduledTimeBefore: Date?
    /// <p>Whether to sort results by <code>Status</code>, <code>CreationTime</code>,
    ///             <code>ScheduledTime</code> field. The default is <code>CreationTime</code>.</p>
    public let sortBy: MonitoringExecutionSortKey?
    /// <p>Whether to sort the results in <code>Ascending</code> or <code>Descending</code> order.
    ///          The default is <code>Descending</code>.</p>
    public let sortOrder: SortOrder?
    /// <p>A filter that retrieves only jobs with a specific status.</p>
    public let statusEquals: ExecutionStatus?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        endpointName: String? = nil,
        lastModifiedTimeAfter: Date? = nil,
        lastModifiedTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        monitoringJobDefinitionName: String? = nil,
        monitoringScheduleName: String? = nil,
        monitoringTypeEquals: MonitoringType? = nil,
        nextToken: String? = nil,
        scheduledTimeAfter: Date? = nil,
        scheduledTimeBefore: Date? = nil,
        sortBy: MonitoringExecutionSortKey? = nil,
        sortOrder: SortOrder? = nil,
        statusEquals: ExecutionStatus? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.endpointName = endpointName
        self.lastModifiedTimeAfter = lastModifiedTimeAfter
        self.lastModifiedTimeBefore = lastModifiedTimeBefore
        self.maxResults = maxResults
        self.monitoringJobDefinitionName = monitoringJobDefinitionName
        self.monitoringScheduleName = monitoringScheduleName
        self.monitoringTypeEquals = monitoringTypeEquals
        self.nextToken = nextToken
        self.scheduledTimeAfter = scheduledTimeAfter
        self.scheduledTimeBefore = scheduledTimeBefore
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.statusEquals = statusEquals
    }
}
