// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelPackagesInputBody: Equatable {
    public let creationTimeAfter: Date?
    public let creationTimeBefore: Date?
    public let maxResults: Int?
    public let nameContains: String?
    public let modelApprovalStatus: ModelApprovalStatus?
    public let modelPackageGroupName: String?
    public let modelPackageType: ModelPackageType?
    public let nextToken: String?
    public let sortBy: ModelPackageSortBy?
    public let sortOrder: SortOrder?
}

extension ListModelPackagesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationTimeAfter = "CreationTimeAfter"
        case creationTimeBefore = "CreationTimeBefore"
        case maxResults = "MaxResults"
        case modelApprovalStatus = "ModelApprovalStatus"
        case modelPackageGroupName = "ModelPackageGroupName"
        case modelPackageType = "ModelPackageType"
        case nameContains = "NameContains"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeAfterDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTimeAfter)
        creationTimeAfter = creationTimeAfterDecoded
        let creationTimeBeforeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTimeBefore)
        creationTimeBefore = creationTimeBeforeDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nameContainsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nameContains)
        nameContains = nameContainsDecoded
        let modelApprovalStatusDecoded = try containerValues.decodeIfPresent(ModelApprovalStatus.self, forKey: .modelApprovalStatus)
        modelApprovalStatus = modelApprovalStatusDecoded
        let modelPackageGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelPackageGroupName)
        modelPackageGroupName = modelPackageGroupNameDecoded
        let modelPackageTypeDecoded = try containerValues.decodeIfPresent(ModelPackageType.self, forKey: .modelPackageType)
        modelPackageType = modelPackageTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(ModelPackageSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
    }
}
