// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMonitoringScheduleOutputBody: Equatable {
    public let monitoringScheduleArn: String?
    public let monitoringScheduleName: String?
    public let monitoringScheduleStatus: ScheduleStatus?
    public let monitoringType: MonitoringType?
    public let failureReason: String?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
    public let monitoringScheduleConfig: MonitoringScheduleConfig?
    public let endpointName: String?
    public let lastMonitoringExecutionSummary: MonitoringExecutionSummary?
}

extension DescribeMonitoringScheduleOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case endpointName = "EndpointName"
        case failureReason = "FailureReason"
        case lastModifiedTime = "LastModifiedTime"
        case lastMonitoringExecutionSummary = "LastMonitoringExecutionSummary"
        case monitoringScheduleArn = "MonitoringScheduleArn"
        case monitoringScheduleConfig = "MonitoringScheduleConfig"
        case monitoringScheduleName = "MonitoringScheduleName"
        case monitoringScheduleStatus = "MonitoringScheduleStatus"
        case monitoringType = "MonitoringType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitoringScheduleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .monitoringScheduleArn)
        monitoringScheduleArn = monitoringScheduleArnDecoded
        let monitoringScheduleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .monitoringScheduleName)
        monitoringScheduleName = monitoringScheduleNameDecoded
        let monitoringScheduleStatusDecoded = try containerValues.decodeIfPresent(ScheduleStatus.self, forKey: .monitoringScheduleStatus)
        monitoringScheduleStatus = monitoringScheduleStatusDecoded
        let monitoringTypeDecoded = try containerValues.decodeIfPresent(MonitoringType.self, forKey: .monitoringType)
        monitoringType = monitoringTypeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let monitoringScheduleConfigDecoded = try containerValues.decodeIfPresent(MonitoringScheduleConfig.self, forKey: .monitoringScheduleConfig)
        monitoringScheduleConfig = monitoringScheduleConfigDecoded
        let endpointNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
        let lastMonitoringExecutionSummaryDecoded = try containerValues.decodeIfPresent(MonitoringExecutionSummary.self, forKey: .lastMonitoringExecutionSummary)
        lastMonitoringExecutionSummary = lastMonitoringExecutionSummaryDecoded
    }
}
