// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDomainOutput: Equatable {
    /// <p>Specifies the VPC used for non-EFS traffic. The default value is
    ///         <code>PublicInternetOnly</code>.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by
    ///             Amazon SageMaker, which allows direct internet access</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p>
    ///             </li>
    ///          </ul>
    public let appNetworkAccessType: AppNetworkAccessType?
    /// <p>The domain's authentication mode.</p>
    public let authMode: AuthMode?
    /// <p>The creation time.</p>
    public let creationTime: Date?
    /// <p>Settings which are applied to UserProfiles in this domain if settings are not explicitly specified
    ///            in a given UserProfile.
    ///        </p>
    public let defaultUserSettings: UserSettings?
    /// <p>The domain's Amazon Resource Name (ARN).</p>
    public let domainArn: String?
    /// <p>The domain ID.</p>
    public let domainId: String?
    /// <p>The domain name.</p>
    public let domainName: String?
    /// <p>The failure reason.</p>
    public let failureReason: String?
    /// <p>The ID of the Amazon Elastic File System (EFS) managed by this Domain.</p>
    public let homeEfsFileSystemId: String?
    /// <p>This member is deprecated and replaced with <code>KmsKeyId</code>.</p>
    @available(*, deprecated, message: "This property is deprecated, use KmsKeyId instead.")
    public let homeEfsFileSystemKmsKeyId: String?
    /// <p>The AWS KMS customer managed CMK used to encrypt
    ///          the EFS volume attached to the domain.</p>
    public let kmsKeyId: String?
    /// <p>The last modified time.</p>
    public let lastModifiedTime: Date?
    /// <p>The SSO managed application instance ID.</p>
    public let singleSignOnManagedApplicationInstanceId: String?
    /// <p>The status.</p>
    public let status: DomainStatus?
    /// <p>The VPC subnets that Studio uses for communication.</p>
    public let subnetIds: [String]?
    /// <p>The domain's URL.</p>
    public let url: String?
    /// <p>The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p>
    public let vpcId: String?

    public init (
        appNetworkAccessType: AppNetworkAccessType? = nil,
        authMode: AuthMode? = nil,
        creationTime: Date? = nil,
        defaultUserSettings: UserSettings? = nil,
        domainArn: String? = nil,
        domainId: String? = nil,
        domainName: String? = nil,
        failureReason: String? = nil,
        homeEfsFileSystemId: String? = nil,
        homeEfsFileSystemKmsKeyId: String? = nil,
        kmsKeyId: String? = nil,
        lastModifiedTime: Date? = nil,
        singleSignOnManagedApplicationInstanceId: String? = nil,
        status: DomainStatus? = nil,
        subnetIds: [String]? = nil,
        url: String? = nil,
        vpcId: String? = nil
    )
    {
        self.appNetworkAccessType = appNetworkAccessType
        self.authMode = authMode
        self.creationTime = creationTime
        self.defaultUserSettings = defaultUserSettings
        self.domainArn = domainArn
        self.domainId = domainId
        self.domainName = domainName
        self.failureReason = failureReason
        self.homeEfsFileSystemId = homeEfsFileSystemId
        self.homeEfsFileSystemKmsKeyId = homeEfsFileSystemKmsKeyId
        self.kmsKeyId = kmsKeyId
        self.lastModifiedTime = lastModifiedTime
        self.singleSignOnManagedApplicationInstanceId = singleSignOnManagedApplicationInstanceId
        self.status = status
        self.subnetIds = subnetIds
        self.url = url
        self.vpcId = vpcId
    }
}
