// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProjectOutputBody: Equatable {
    public let projectArn: String?
    public let projectName: String?
    public let projectId: String?
    public let projectDescription: String?
    public let serviceCatalogProvisioningDetails: ServiceCatalogProvisioningDetails?
    public let serviceCatalogProvisionedProductDetails: ServiceCatalogProvisionedProductDetails?
    public let projectStatus: ProjectStatus?
    public let createdBy: UserContext?
    public let creationTime: Date?
}

extension DescribeProjectOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case projectArn = "ProjectArn"
        case projectDescription = "ProjectDescription"
        case projectId = "ProjectId"
        case projectName = "ProjectName"
        case projectStatus = "ProjectStatus"
        case serviceCatalogProvisionedProductDetails = "ServiceCatalogProvisionedProductDetails"
        case serviceCatalogProvisioningDetails = "ServiceCatalogProvisioningDetails"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectArn)
        projectArn = projectArnDecoded
        let projectNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectName)
        projectName = projectNameDecoded
        let projectIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectId)
        projectId = projectIdDecoded
        let projectDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectDescription)
        projectDescription = projectDescriptionDecoded
        let serviceCatalogProvisioningDetailsDecoded = try containerValues.decodeIfPresent(ServiceCatalogProvisioningDetails.self, forKey: .serviceCatalogProvisioningDetails)
        serviceCatalogProvisioningDetails = serviceCatalogProvisioningDetailsDecoded
        let serviceCatalogProvisionedProductDetailsDecoded = try containerValues.decodeIfPresent(ServiceCatalogProvisionedProductDetails.self, forKey: .serviceCatalogProvisionedProductDetails)
        serviceCatalogProvisionedProductDetails = serviceCatalogProvisionedProductDetailsDecoded
        let projectStatusDecoded = try containerValues.decodeIfPresent(ProjectStatus.self, forKey: .projectStatus)
        projectStatus = projectStatusDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
