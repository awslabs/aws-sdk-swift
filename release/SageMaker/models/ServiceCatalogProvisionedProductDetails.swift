// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Details of a provisioned service catalog product. For information about service catalog,
///             see <a href="https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">What is AWS Service
///                 Catalog</a>.</p>
public struct ServiceCatalogProvisionedProductDetails: Equatable {
    /// <p>The ID of the provisioned product.</p>
    public let provisionedProductId: String?
    /// <p>The current status of the product.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>AVAILABLE</code> - Stable state, ready to perform any operation. The most recent operation succeeded and completed.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>UNDER_CHANGE</code> - Transitive state. Operations performed might not have valid results. Wait for an AVAILABLE status before performing operations.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>TAINTED</code> - Stable state, ready to perform any operation. The stack has completed the requested operation but is not exactly what was requested. For example, a request to update to a new version failed and the stack rolled back to the current version.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ERROR</code> - An unexpected error occurred. The provisioned product exists but the stack is not running. For example, CloudFormation received a parameter value that was not valid and could not launch the stack.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>PLAN_IN_PROGRESS</code> - Transitive state. The plan operations were performed to provision a new product, but resources have not yet been created. After reviewing the list of resources to be created, execute the plan. Wait for an AVAILABLE status before performing operations.</p>
    ///             </li>
    ///          </ul>
    public let provisionedProductStatusMessage: String?

    public init (
        provisionedProductId: String? = nil,
        provisionedProductStatusMessage: String? = nil
    )
    {
        self.provisionedProductId = provisionedProductId
        self.provisionedProductStatusMessage = provisionedProductStatusMessage
    }
}
