// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomImage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case appImageConfigName = "AppImageConfigName"
        case imageName = "ImageName"
        case imageVersionNumber = "ImageVersionNumber"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appImageConfigName = appImageConfigName {
            try encodeContainer.encode(appImageConfigName, forKey: .appImageConfigName)
        }
        if let imageName = imageName {
            try encodeContainer.encode(imageName, forKey: .imageName)
        }
        if let imageVersionNumber = imageVersionNumber {
            try encodeContainer.encode(imageVersionNumber, forKey: .imageVersionNumber)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageName)
        imageName = imageNameDecoded
        let imageVersionNumberDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .imageVersionNumber)
        imageVersionNumber = imageVersionNumberDecoded
        let appImageConfigNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appImageConfigName)
        appImageConfigName = appImageConfigNameDecoded
    }
}
