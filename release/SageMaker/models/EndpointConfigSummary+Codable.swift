// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EndpointConfigSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case endpointConfigArn = "EndpointConfigArn"
        case endpointConfigName = "EndpointConfigName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let endpointConfigArn = endpointConfigArn {
            try encodeContainer.encode(endpointConfigArn, forKey: .endpointConfigArn)
        }
        if let endpointConfigName = endpointConfigName {
            try encodeContainer.encode(endpointConfigName, forKey: .endpointConfigName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointConfigNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointConfigName)
        endpointConfigName = endpointConfigNameDecoded
        let endpointConfigArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointConfigArn)
        endpointConfigArn = endpointConfigArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
    }
}
