// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEdgePackagingJobsOutputBody: Equatable {
    public let edgePackagingJobSummaries: [EdgePackagingJobSummary]?
    public let nextToken: String?
}

extension ListEdgePackagingJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case edgePackagingJobSummaries = "EdgePackagingJobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let edgePackagingJobSummariesContainer = try containerValues.decodeIfPresent([EdgePackagingJobSummary].self, forKey: .edgePackagingJobSummaries)
        var edgePackagingJobSummariesDecoded0:[EdgePackagingJobSummary]? = nil
        if let edgePackagingJobSummariesContainer = edgePackagingJobSummariesContainer {
            edgePackagingJobSummariesDecoded0 = [EdgePackagingJobSummary]()
            for structure0 in edgePackagingJobSummariesContainer {
                edgePackagingJobSummariesDecoded0?.append(structure0)
            }
        }
        edgePackagingJobSummaries = edgePackagingJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
