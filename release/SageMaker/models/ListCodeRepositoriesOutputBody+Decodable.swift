// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCodeRepositoriesOutputBody: Equatable {
    public let codeRepositorySummaryList: [CodeRepositorySummary]?
    public let nextToken: String?
}

extension ListCodeRepositoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeRepositorySummaryList = "CodeRepositorySummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeRepositorySummaryListContainer = try containerValues.decodeIfPresent([CodeRepositorySummary].self, forKey: .codeRepositorySummaryList)
        var codeRepositorySummaryListDecoded0:[CodeRepositorySummary]? = nil
        if let codeRepositorySummaryListContainer = codeRepositorySummaryListContainer {
            codeRepositorySummaryListDecoded0 = [CodeRepositorySummary]()
            for structure0 in codeRepositorySummaryListContainer {
                codeRepositorySummaryListDecoded0?.append(structure0)
            }
        }
        codeRepositorySummaryList = codeRepositorySummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
