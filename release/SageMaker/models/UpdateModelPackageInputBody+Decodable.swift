// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateModelPackageInputBody: Equatable {
    public let modelPackageArn: String?
    public let modelApprovalStatus: ModelApprovalStatus?
    public let approvalDescription: String?
}

extension UpdateModelPackageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case approvalDescription = "ApprovalDescription"
        case modelApprovalStatus = "ModelApprovalStatus"
        case modelPackageArn = "ModelPackageArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelPackageArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelPackageArn)
        modelPackageArn = modelPackageArnDecoded
        let modelApprovalStatusDecoded = try containerValues.decodeIfPresent(ModelApprovalStatus.self, forKey: .modelApprovalStatus)
        modelApprovalStatus = modelApprovalStatusDecoded
        let approvalDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .approvalDescription)
        approvalDescription = approvalDescriptionDecoded
    }
}
