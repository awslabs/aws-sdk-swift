// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFlowDefinitionsOutputBody: Equatable {
    public let flowDefinitionSummaries: [FlowDefinitionSummary]?
    public let nextToken: String?
}

extension ListFlowDefinitionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flowDefinitionSummaries = "FlowDefinitionSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowDefinitionSummariesContainer = try containerValues.decodeIfPresent([FlowDefinitionSummary].self, forKey: .flowDefinitionSummaries)
        var flowDefinitionSummariesDecoded0:[FlowDefinitionSummary]? = nil
        if let flowDefinitionSummariesContainer = flowDefinitionSummariesContainer {
            flowDefinitionSummariesDecoded0 = [FlowDefinitionSummary]()
            for structure0 in flowDefinitionSummariesContainer {
                flowDefinitionSummariesDecoded0?.append(structure0)
            }
        }
        flowDefinitionSummaries = flowDefinitionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
