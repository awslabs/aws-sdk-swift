// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateWorkforceInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cognitoConfig = "CognitoConfig"
        case oidcConfig = "OidcConfig"
        case sourceIpConfig = "SourceIpConfig"
        case tags = "Tags"
        case workforceName = "WorkforceName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cognitoConfig = cognitoConfig {
            try encodeContainer.encode(cognitoConfig, forKey: .cognitoConfig)
        }
        if let oidcConfig = oidcConfig {
            try encodeContainer.encode(oidcConfig, forKey: .oidcConfig)
        }
        if let sourceIpConfig = sourceIpConfig {
            try encodeContainer.encode(sourceIpConfig, forKey: .sourceIpConfig)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let workforceName = workforceName {
            try encodeContainer.encode(workforceName, forKey: .workforceName)
        }
    }
}
