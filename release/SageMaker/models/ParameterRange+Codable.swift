// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ParameterRange: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case categoricalParameterRangeSpecification = "CategoricalParameterRangeSpecification"
        case continuousParameterRangeSpecification = "ContinuousParameterRangeSpecification"
        case integerParameterRangeSpecification = "IntegerParameterRangeSpecification"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let categoricalParameterRangeSpecification = categoricalParameterRangeSpecification {
            try encodeContainer.encode(categoricalParameterRangeSpecification, forKey: .categoricalParameterRangeSpecification)
        }
        if let continuousParameterRangeSpecification = continuousParameterRangeSpecification {
            try encodeContainer.encode(continuousParameterRangeSpecification, forKey: .continuousParameterRangeSpecification)
        }
        if let integerParameterRangeSpecification = integerParameterRangeSpecification {
            try encodeContainer.encode(integerParameterRangeSpecification, forKey: .integerParameterRangeSpecification)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let integerParameterRangeSpecificationDecoded = try containerValues.decodeIfPresent(IntegerParameterRangeSpecification.self, forKey: .integerParameterRangeSpecification)
        integerParameterRangeSpecification = integerParameterRangeSpecificationDecoded
        let continuousParameterRangeSpecificationDecoded = try containerValues.decodeIfPresent(ContinuousParameterRangeSpecification.self, forKey: .continuousParameterRangeSpecification)
        continuousParameterRangeSpecification = continuousParameterRangeSpecificationDecoded
        let categoricalParameterRangeSpecificationDecoded = try containerValues.decodeIfPresent(CategoricalParameterRangeSpecification.self, forKey: .categoricalParameterRangeSpecification)
        categoricalParameterRangeSpecification = categoricalParameterRangeSpecificationDecoded
    }
}
