// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateImageInputBody: Equatable {
    public let deleteProperties: [String]?
    public let description: String?
    public let displayName: String?
    public let imageName: String?
    public let roleArn: String?
}

extension UpdateImageInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deleteProperties = "DeleteProperties"
        case description = "Description"
        case displayName = "DisplayName"
        case imageName = "ImageName"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deletePropertiesContainer = try containerValues.decodeIfPresent([String].self, forKey: .deleteProperties)
        var deletePropertiesDecoded0:[String]? = nil
        if let deletePropertiesContainer = deletePropertiesContainer {
            deletePropertiesDecoded0 = [String]()
            for string0 in deletePropertiesContainer {
                deletePropertiesDecoded0?.append(string0)
            }
        }
        deleteProperties = deletePropertiesDecoded0
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let imageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageName)
        imageName = imageNameDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
