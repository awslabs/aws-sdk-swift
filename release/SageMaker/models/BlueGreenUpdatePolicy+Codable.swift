// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BlueGreenUpdatePolicy: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maximumExecutionTimeoutInSeconds = "MaximumExecutionTimeoutInSeconds"
        case terminationWaitInSeconds = "TerminationWaitInSeconds"
        case trafficRoutingConfiguration = "TrafficRoutingConfiguration"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maximumExecutionTimeoutInSeconds = maximumExecutionTimeoutInSeconds {
            try encodeContainer.encode(maximumExecutionTimeoutInSeconds, forKey: .maximumExecutionTimeoutInSeconds)
        }
        if let terminationWaitInSeconds = terminationWaitInSeconds {
            try encodeContainer.encode(terminationWaitInSeconds, forKey: .terminationWaitInSeconds)
        }
        if let trafficRoutingConfiguration = trafficRoutingConfiguration {
            try encodeContainer.encode(trafficRoutingConfiguration, forKey: .trafficRoutingConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trafficRoutingConfigurationDecoded = try containerValues.decodeIfPresent(TrafficRoutingConfig.self, forKey: .trafficRoutingConfiguration)
        trafficRoutingConfiguration = trafficRoutingConfigurationDecoded
        let terminationWaitInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .terminationWaitInSeconds)
        terminationWaitInSeconds = terminationWaitInSecondsDecoded
        let maximumExecutionTimeoutInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maximumExecutionTimeoutInSeconds)
        maximumExecutionTimeoutInSeconds = maximumExecutionTimeoutInSecondsDecoded
    }
}
