// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateModelInputBody: Equatable {
    public let modelName: String?
    public let primaryContainer: ContainerDefinition?
    public let containers: [ContainerDefinition]?
    public let inferenceExecutionConfig: InferenceExecutionConfig?
    public let executionRoleArn: String?
    public let tags: [Tag]?
    public let vpcConfig: VpcConfig?
    public let enableNetworkIsolation: Bool
}

extension CreateModelInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case containers = "Containers"
        case enableNetworkIsolation = "EnableNetworkIsolation"
        case executionRoleArn = "ExecutionRoleArn"
        case inferenceExecutionConfig = "InferenceExecutionConfig"
        case modelName = "ModelName"
        case primaryContainer = "PrimaryContainer"
        case tags = "Tags"
        case vpcConfig = "VpcConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let primaryContainerDecoded = try containerValues.decodeIfPresent(ContainerDefinition.self, forKey: .primaryContainer)
        primaryContainer = primaryContainerDecoded
        let containersContainer = try containerValues.decodeIfPresent([ContainerDefinition].self, forKey: .containers)
        var containersDecoded0:[ContainerDefinition]? = nil
        if let containersContainer = containersContainer {
            containersDecoded0 = [ContainerDefinition]()
            for structure0 in containersContainer {
                containersDecoded0?.append(structure0)
            }
        }
        containers = containersDecoded0
        let inferenceExecutionConfigDecoded = try containerValues.decodeIfPresent(InferenceExecutionConfig.self, forKey: .inferenceExecutionConfig)
        inferenceExecutionConfig = inferenceExecutionConfigDecoded
        let executionRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionRoleArn)
        executionRoleArn = executionRoleArnDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let vpcConfigDecoded = try containerValues.decodeIfPresent(VpcConfig.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
        let enableNetworkIsolationDecoded = try containerValues.decode(Bool.self, forKey: .enableNetworkIsolation)
        enableNetworkIsolation = enableNetworkIsolationDecoded
    }
}
