// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LabelingJobDataSource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case s3DataSource = "S3DataSource"
        case snsDataSource = "SnsDataSource"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let s3DataSource = s3DataSource {
            try encodeContainer.encode(s3DataSource, forKey: .s3DataSource)
        }
        if let snsDataSource = snsDataSource {
            try encodeContainer.encode(snsDataSource, forKey: .snsDataSource)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3DataSourceDecoded = try containerValues.decodeIfPresent(LabelingJobS3DataSource.self, forKey: .s3DataSource)
        s3DataSource = s3DataSourceDecoded
        let snsDataSourceDecoded = try containerValues.decodeIfPresent(LabelingJobSnsDataSource.self, forKey: .snsDataSource)
        snsDataSource = snsDataSourceDecoded
    }
}
