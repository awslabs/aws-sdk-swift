// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RenderUiTemplateInputBody: Equatable {
    public let uiTemplate: UiTemplate?
    public let task: RenderableTask?
    public let roleArn: String?
    public let humanTaskUiArn: String?
}

extension RenderUiTemplateInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case humanTaskUiArn = "HumanTaskUiArn"
        case roleArn = "RoleArn"
        case task = "Task"
        case uiTemplate = "UiTemplate"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let uiTemplateDecoded = try containerValues.decodeIfPresent(UiTemplate.self, forKey: .uiTemplate)
        uiTemplate = uiTemplateDecoded
        let taskDecoded = try containerValues.decodeIfPresent(RenderableTask.self, forKey: .task)
        task = taskDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let humanTaskUiArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanTaskUiArn)
        humanTaskUiArn = humanTaskUiArnDecoded
    }
}
