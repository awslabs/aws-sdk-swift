// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeviceStats: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case connectedDeviceCount = "ConnectedDeviceCount"
        case registeredDeviceCount = "RegisteredDeviceCount"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if connectedDeviceCount != 0 {
            try encodeContainer.encode(connectedDeviceCount, forKey: .connectedDeviceCount)
        }
        if registeredDeviceCount != 0 {
            try encodeContainer.encode(registeredDeviceCount, forKey: .registeredDeviceCount)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectedDeviceCountDecoded = try containerValues.decode(Int.self, forKey: .connectedDeviceCount)
        connectedDeviceCount = connectedDeviceCountDecoded
        let registeredDeviceCountDecoded = try containerValues.decode(Int.self, forKey: .registeredDeviceCount)
        registeredDeviceCount = registeredDeviceCountDecoded
    }
}
