// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateTrainingJobInputBody: Equatable {
    public let trainingJobName: String?
    public let profilerConfig: ProfilerConfigForUpdate?
    public let profilerRuleConfigurations: [ProfilerRuleConfiguration]?
}

extension UpdateTrainingJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case profilerConfig = "ProfilerConfig"
        case profilerRuleConfigurations = "ProfilerRuleConfigurations"
        case trainingJobName = "TrainingJobName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trainingJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trainingJobName)
        trainingJobName = trainingJobNameDecoded
        let profilerConfigDecoded = try containerValues.decodeIfPresent(ProfilerConfigForUpdate.self, forKey: .profilerConfig)
        profilerConfig = profilerConfigDecoded
        let profilerRuleConfigurationsContainer = try containerValues.decodeIfPresent([ProfilerRuleConfiguration].self, forKey: .profilerRuleConfigurations)
        var profilerRuleConfigurationsDecoded0:[ProfilerRuleConfiguration]? = nil
        if let profilerRuleConfigurationsContainer = profilerRuleConfigurationsContainer {
            profilerRuleConfigurationsDecoded0 = [ProfilerRuleConfiguration]()
            for structure0 in profilerRuleConfigurationsContainer {
                profilerRuleConfigurationsDecoded0?.append(structure0)
            }
        }
        profilerRuleConfigurations = profilerRuleConfigurationsDecoded0
    }
}
