// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateModelPackageInput: Equatable {
    /// <p>Whether to certify the model package for listing on AWS Marketplace.</p>
    ///         <p>This parameter is optional for unversioned models, and does not apply to versioned
    ///             models.</p>
    public let certifyForMarketplace: Bool
    /// <p>A unique token that guarantees that the call to this API is idempotent.</p>
    public var clientToken: String?
    /// <p>Specifies details about inference jobs that can be run with models based on this model
    ///             package, including the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>The Amazon ECR paths of containers that contain the inference code and model
    ///                     artifacts.</p>
    ///             </li>
    ///             <li>
    ///                 <p>The instance types that the model package supports for transform jobs and
    ///                     real-time endpoints used for inference.</p>
    ///             </li>
    ///             <li>
    ///                 <p>The input and output content formats that the model package supports for
    ///                     inference.</p>
    ///             </li>
    ///          </ul>
    public let inferenceSpecification: InferenceSpecification?
    /// <p>Metadata properties of the tracking entity, trial, or trial component.</p>
    public let metadataProperties: MetadataProperties?
    /// <p>Whether the model is approved for deployment.</p>
    ///         <p>This parameter is optional for versioned models, and does not apply to unversioned
    ///             models.</p>
    ///         <p>For versioned models, the value of this parameter must be set to <code>Approved</code>
    ///         to deploy the model.</p>
    public let modelApprovalStatus: ModelApprovalStatus?
    /// <p>A structure that contains model metrics reports.</p>
    public let modelMetrics: ModelMetrics?
    /// <p>A description of the model package.</p>
    public let modelPackageDescription: String?
    /// <p>The name of the model group that this model version belongs to.</p>
    ///         <p>This parameter is required for versioned models, and does not apply to unversioned
    ///             models.</p>
    public let modelPackageGroupName: String?
    /// <p>The name of the model package. The name must have 1 to 63 characters. Valid characters
    ///             are a-z, A-Z, 0-9, and - (hyphen).</p>
    ///         <p>This parameter is required for unversioned models. It is not applicable to versioned
    ///             models.</p>
    public let modelPackageName: String?
    /// <p>Details about the algorithm that was used to create the model package.</p>
    public let sourceAlgorithmSpecification: SourceAlgorithmSpecification?
    /// <p>A list of key value pairs associated with the model. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS
    ///                 resources</a> in the <i>AWS General Reference Guide</i>.</p>
    public let tags: [Tag]?
    /// <p>Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the
    ///             model package.</p>
    public let validationSpecification: ModelPackageValidationSpecification?

    public init (
        certifyForMarketplace: Bool = false,
        clientToken: String? = nil,
        inferenceSpecification: InferenceSpecification? = nil,
        metadataProperties: MetadataProperties? = nil,
        modelApprovalStatus: ModelApprovalStatus? = nil,
        modelMetrics: ModelMetrics? = nil,
        modelPackageDescription: String? = nil,
        modelPackageGroupName: String? = nil,
        modelPackageName: String? = nil,
        sourceAlgorithmSpecification: SourceAlgorithmSpecification? = nil,
        tags: [Tag]? = nil,
        validationSpecification: ModelPackageValidationSpecification? = nil
    )
    {
        self.certifyForMarketplace = certifyForMarketplace
        self.clientToken = clientToken
        self.inferenceSpecification = inferenceSpecification
        self.metadataProperties = metadataProperties
        self.modelApprovalStatus = modelApprovalStatus
        self.modelMetrics = modelMetrics
        self.modelPackageDescription = modelPackageDescription
        self.modelPackageGroupName = modelPackageGroupName
        self.modelPackageName = modelPackageName
        self.sourceAlgorithmSpecification = sourceAlgorithmSpecification
        self.tags = tags
        self.validationSpecification = validationSpecification
    }
}
