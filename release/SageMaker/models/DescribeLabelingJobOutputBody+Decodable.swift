// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLabelingJobOutputBody: Equatable {
    public let labelingJobStatus: LabelingJobStatus?
    public let labelCounters: LabelCounters?
    public let failureReason: String?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
    public let jobReferenceCode: String?
    public let labelingJobName: String?
    public let labelingJobArn: String?
    public let labelAttributeName: String?
    public let inputConfig: LabelingJobInputConfig?
    public let outputConfig: LabelingJobOutputConfig?
    public let roleArn: String?
    public let labelCategoryConfigS3Uri: String?
    public let stoppingConditions: LabelingJobStoppingConditions?
    public let labelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig?
    public let humanTaskConfig: HumanTaskConfig?
    public let tags: [Tag]?
    public let labelingJobOutput: LabelingJobOutput?
}

extension DescribeLabelingJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case failureReason = "FailureReason"
        case humanTaskConfig = "HumanTaskConfig"
        case inputConfig = "InputConfig"
        case jobReferenceCode = "JobReferenceCode"
        case labelAttributeName = "LabelAttributeName"
        case labelCategoryConfigS3Uri = "LabelCategoryConfigS3Uri"
        case labelCounters = "LabelCounters"
        case labelingJobAlgorithmsConfig = "LabelingJobAlgorithmsConfig"
        case labelingJobArn = "LabelingJobArn"
        case labelingJobName = "LabelingJobName"
        case labelingJobOutput = "LabelingJobOutput"
        case labelingJobStatus = "LabelingJobStatus"
        case lastModifiedTime = "LastModifiedTime"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case stoppingConditions = "StoppingConditions"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelingJobStatusDecoded = try containerValues.decodeIfPresent(LabelingJobStatus.self, forKey: .labelingJobStatus)
        labelingJobStatus = labelingJobStatusDecoded
        let labelCountersDecoded = try containerValues.decodeIfPresent(LabelCounters.self, forKey: .labelCounters)
        labelCounters = labelCountersDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let jobReferenceCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobReferenceCode)
        jobReferenceCode = jobReferenceCodeDecoded
        let labelingJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelingJobName)
        labelingJobName = labelingJobNameDecoded
        let labelingJobArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelingJobArn)
        labelingJobArn = labelingJobArnDecoded
        let labelAttributeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelAttributeName)
        labelAttributeName = labelAttributeNameDecoded
        let inputConfigDecoded = try containerValues.decodeIfPresent(LabelingJobInputConfig.self, forKey: .inputConfig)
        inputConfig = inputConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(LabelingJobOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let labelCategoryConfigS3UriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelCategoryConfigS3Uri)
        labelCategoryConfigS3Uri = labelCategoryConfigS3UriDecoded
        let stoppingConditionsDecoded = try containerValues.decodeIfPresent(LabelingJobStoppingConditions.self, forKey: .stoppingConditions)
        stoppingConditions = stoppingConditionsDecoded
        let labelingJobAlgorithmsConfigDecoded = try containerValues.decodeIfPresent(LabelingJobAlgorithmsConfig.self, forKey: .labelingJobAlgorithmsConfig)
        labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfigDecoded
        let humanTaskConfigDecoded = try containerValues.decodeIfPresent(HumanTaskConfig.self, forKey: .humanTaskConfig)
        humanTaskConfig = humanTaskConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
        let labelingJobOutputDecoded = try containerValues.decodeIfPresent(LabelingJobOutput.self, forKey: .labelingJobOutput)
        labelingJobOutput = labelingJobOutputDecoded
    }
}
