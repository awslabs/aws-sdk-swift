// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTrialOutputBody: Equatable {
    public let trialName: String?
    public let trialArn: String?
    public let displayName: String?
    public let experimentName: String?
    public let source: TrialSource?
    public let creationTime: Date?
    public let createdBy: UserContext?
    public let lastModifiedTime: Date?
    public let lastModifiedBy: UserContext?
    public let metadataProperties: MetadataProperties?
}

extension DescribeTrialOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case displayName = "DisplayName"
        case experimentName = "ExperimentName"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case metadataProperties = "MetadataProperties"
        case source = "Source"
        case trialArn = "TrialArn"
        case trialName = "TrialName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trialName)
        trialName = trialNameDecoded
        let trialArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .trialArn)
        trialArn = trialArnDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let experimentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(TrialSource.self, forKey: .source)
        source = sourceDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
        let metadataPropertiesDecoded = try containerValues.decodeIfPresent(MetadataProperties.self, forKey: .metadataProperties)
        metadataProperties = metadataPropertiesDecoded
    }
}
