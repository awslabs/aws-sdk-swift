// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MonitoringJobDefinitionSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case endpointName = "EndpointName"
        case monitoringJobDefinitionArn = "MonitoringJobDefinitionArn"
        case monitoringJobDefinitionName = "MonitoringJobDefinitionName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let endpointName = endpointName {
            try encodeContainer.encode(endpointName, forKey: .endpointName)
        }
        if let monitoringJobDefinitionArn = monitoringJobDefinitionArn {
            try encodeContainer.encode(monitoringJobDefinitionArn, forKey: .monitoringJobDefinitionArn)
        }
        if let monitoringJobDefinitionName = monitoringJobDefinitionName {
            try encodeContainer.encode(monitoringJobDefinitionName, forKey: .monitoringJobDefinitionName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitoringJobDefinitionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .monitoringJobDefinitionName)
        monitoringJobDefinitionName = monitoringJobDefinitionNameDecoded
        let monitoringJobDefinitionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .monitoringJobDefinitionArn)
        monitoringJobDefinitionArn = monitoringJobDefinitionArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let endpointNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointName)
        endpointName = endpointNameDecoded
    }
}
