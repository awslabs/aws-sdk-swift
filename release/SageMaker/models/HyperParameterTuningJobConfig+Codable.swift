// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension HyperParameterTuningJobConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case hyperParameterTuningJobObjective = "HyperParameterTuningJobObjective"
        case parameterRanges = "ParameterRanges"
        case resourceLimits = "ResourceLimits"
        case strategy = "Strategy"
        case trainingJobEarlyStoppingType = "TrainingJobEarlyStoppingType"
        case tuningJobCompletionCriteria = "TuningJobCompletionCriteria"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hyperParameterTuningJobObjective = hyperParameterTuningJobObjective {
            try encodeContainer.encode(hyperParameterTuningJobObjective, forKey: .hyperParameterTuningJobObjective)
        }
        if let parameterRanges = parameterRanges {
            try encodeContainer.encode(parameterRanges, forKey: .parameterRanges)
        }
        if let resourceLimits = resourceLimits {
            try encodeContainer.encode(resourceLimits, forKey: .resourceLimits)
        }
        if let strategy = strategy {
            try encodeContainer.encode(strategy.rawValue, forKey: .strategy)
        }
        if let trainingJobEarlyStoppingType = trainingJobEarlyStoppingType {
            try encodeContainer.encode(trainingJobEarlyStoppingType.rawValue, forKey: .trainingJobEarlyStoppingType)
        }
        if let tuningJobCompletionCriteria = tuningJobCompletionCriteria {
            try encodeContainer.encode(tuningJobCompletionCriteria, forKey: .tuningJobCompletionCriteria)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let strategyDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobStrategyType.self, forKey: .strategy)
        strategy = strategyDecoded
        let hyperParameterTuningJobObjectiveDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobObjective.self, forKey: .hyperParameterTuningJobObjective)
        hyperParameterTuningJobObjective = hyperParameterTuningJobObjectiveDecoded
        let resourceLimitsDecoded = try containerValues.decodeIfPresent(ResourceLimits.self, forKey: .resourceLimits)
        resourceLimits = resourceLimitsDecoded
        let parameterRangesDecoded = try containerValues.decodeIfPresent(ParameterRanges.self, forKey: .parameterRanges)
        parameterRanges = parameterRangesDecoded
        let trainingJobEarlyStoppingTypeDecoded = try containerValues.decodeIfPresent(TrainingJobEarlyStoppingType.self, forKey: .trainingJobEarlyStoppingType)
        trainingJobEarlyStoppingType = trainingJobEarlyStoppingTypeDecoded
        let tuningJobCompletionCriteriaDecoded = try containerValues.decodeIfPresent(TuningJobCompletionCriteria.self, forKey: .tuningJobCompletionCriteria)
        tuningJobCompletionCriteria = tuningJobCompletionCriteriaDecoded
    }
}
