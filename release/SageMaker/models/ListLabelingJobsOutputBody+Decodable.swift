// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListLabelingJobsOutputBody: Equatable {
    public let labelingJobSummaryList: [LabelingJobSummary]?
    public let nextToken: String?
}

extension ListLabelingJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case labelingJobSummaryList = "LabelingJobSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelingJobSummaryListContainer = try containerValues.decodeIfPresent([LabelingJobSummary].self, forKey: .labelingJobSummaryList)
        var labelingJobSummaryListDecoded0:[LabelingJobSummary]? = nil
        if let labelingJobSummaryListContainer = labelingJobSummaryListContainer {
            labelingJobSummaryListDecoded0 = [LabelingJobSummary]()
            for structure0 in labelingJobSummaryListContainer {
                labelingJobSummaryListDecoded0?.append(structure0)
            }
        }
        labelingJobSummaryList = labelingJobSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
