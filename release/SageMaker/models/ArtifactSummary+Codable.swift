// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ArtifactSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case artifactType = "ArtifactType"
        case creationTime = "CreationTime"
        case lastModifiedTime = "LastModifiedTime"
        case source = "Source"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactArn = artifactArn {
            try encodeContainer.encode(artifactArn, forKey: .artifactArn)
        }
        if let artifactName = artifactName {
            try encodeContainer.encode(artifactName, forKey: .artifactName)
        }
        if let artifactType = artifactType {
            try encodeContainer.encode(artifactType, forKey: .artifactType)
        }
        if let creationTime = creationTime {
            try encodeContainer.encode(creationTime.timeIntervalSince1970, forKey: .creationTime)
        }
        if let lastModifiedTime = lastModifiedTime {
            try encodeContainer.encode(lastModifiedTime.timeIntervalSince1970, forKey: .lastModifiedTime)
        }
        if let source = source {
            try encodeContainer.encode(source, forKey: .source)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactArn)
        artifactArn = artifactArnDecoded
        let artifactNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(ArtifactSource.self, forKey: .source)
        source = sourceDecoded
        let artifactTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactType)
        artifactType = artifactTypeDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
