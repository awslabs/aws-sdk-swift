// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModelClientConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case invocationsMaxRetries = "InvocationsMaxRetries"
        case invocationsTimeoutInSeconds = "InvocationsTimeoutInSeconds"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invocationsMaxRetries = invocationsMaxRetries {
            try encodeContainer.encode(invocationsMaxRetries, forKey: .invocationsMaxRetries)
        }
        if let invocationsTimeoutInSeconds = invocationsTimeoutInSeconds {
            try encodeContainer.encode(invocationsTimeoutInSeconds, forKey: .invocationsTimeoutInSeconds)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let invocationsTimeoutInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .invocationsTimeoutInSeconds)
        invocationsTimeoutInSeconds = invocationsTimeoutInSecondsDecoded
        let invocationsMaxRetriesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .invocationsMaxRetries)
        invocationsMaxRetries = invocationsMaxRetriesDecoded
    }
}
