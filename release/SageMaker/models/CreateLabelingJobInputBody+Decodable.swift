// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLabelingJobInputBody: Equatable {
    public let labelingJobName: String?
    public let labelAttributeName: String?
    public let inputConfig: LabelingJobInputConfig?
    public let outputConfig: LabelingJobOutputConfig?
    public let roleArn: String?
    public let labelCategoryConfigS3Uri: String?
    public let stoppingConditions: LabelingJobStoppingConditions?
    public let labelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig?
    public let humanTaskConfig: HumanTaskConfig?
    public let tags: [Tag]?
}

extension CreateLabelingJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case humanTaskConfig = "HumanTaskConfig"
        case inputConfig = "InputConfig"
        case labelAttributeName = "LabelAttributeName"
        case labelCategoryConfigS3Uri = "LabelCategoryConfigS3Uri"
        case labelingJobAlgorithmsConfig = "LabelingJobAlgorithmsConfig"
        case labelingJobName = "LabelingJobName"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case stoppingConditions = "StoppingConditions"
        case tags = "Tags"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let labelingJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelingJobName)
        labelingJobName = labelingJobNameDecoded
        let labelAttributeNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelAttributeName)
        labelAttributeName = labelAttributeNameDecoded
        let inputConfigDecoded = try containerValues.decodeIfPresent(LabelingJobInputConfig.self, forKey: .inputConfig)
        inputConfig = inputConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(LabelingJobOutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let labelCategoryConfigS3UriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .labelCategoryConfigS3Uri)
        labelCategoryConfigS3Uri = labelCategoryConfigS3UriDecoded
        let stoppingConditionsDecoded = try containerValues.decodeIfPresent(LabelingJobStoppingConditions.self, forKey: .stoppingConditions)
        stoppingConditions = stoppingConditionsDecoded
        let labelingJobAlgorithmsConfigDecoded = try containerValues.decodeIfPresent(LabelingJobAlgorithmsConfig.self, forKey: .labelingJobAlgorithmsConfig)
        labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfigDecoded
        let humanTaskConfigDecoded = try containerValues.decodeIfPresent(HumanTaskConfig.self, forKey: .humanTaskConfig)
        humanTaskConfig = humanTaskConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
