// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ProfilerConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case profilingIntervalInMilliseconds = "ProfilingIntervalInMilliseconds"
        case profilingParameters = "ProfilingParameters"
        case s3OutputPath = "S3OutputPath"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let profilingIntervalInMilliseconds = profilingIntervalInMilliseconds {
            try encodeContainer.encode(profilingIntervalInMilliseconds, forKey: .profilingIntervalInMilliseconds)
        }
        if let profilingParameters = profilingParameters {
            var profilingParametersContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .profilingParameters)
            for (dictKey0, profilingparameters0) in profilingParameters {
                try profilingParametersContainer.encode(profilingparameters0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let s3OutputPath = s3OutputPath {
            try encodeContainer.encode(s3OutputPath, forKey: .s3OutputPath)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3OutputPathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3OutputPath)
        s3OutputPath = s3OutputPathDecoded
        let profilingIntervalInMillisecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .profilingIntervalInMilliseconds)
        profilingIntervalInMilliseconds = profilingIntervalInMillisecondsDecoded
        let profilingParametersContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .profilingParameters)
        var profilingParametersDecoded0: [String:String]? = nil
        if let profilingParametersContainer = profilingParametersContainer {
            profilingParametersDecoded0 = [String:String]()
            for (key0, configvalue0) in profilingParametersContainer {
                profilingParametersDecoded0?[key0] = configvalue0
            }
        }
        profilingParameters = profilingParametersDecoded0
    }
}
