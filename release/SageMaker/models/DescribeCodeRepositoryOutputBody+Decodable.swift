// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCodeRepositoryOutputBody: Equatable {
    public let codeRepositoryName: String?
    public let codeRepositoryArn: String?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
    public let gitConfig: GitConfig?
}

extension DescribeCodeRepositoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeRepositoryArn = "CodeRepositoryArn"
        case codeRepositoryName = "CodeRepositoryName"
        case creationTime = "CreationTime"
        case gitConfig = "GitConfig"
        case lastModifiedTime = "LastModifiedTime"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let codeRepositoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .codeRepositoryName)
        codeRepositoryName = codeRepositoryNameDecoded
        let codeRepositoryArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .codeRepositoryArn)
        codeRepositoryArn = codeRepositoryArnDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let gitConfigDecoded = try containerValues.decodeIfPresent(GitConfig.self, forKey: .gitConfig)
        gitConfig = gitConfigDecoded
    }
}
