// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrainingJobsForHyperParameterTuningJobInputBody: Equatable {
    public let hyperParameterTuningJobName: String?
    public let nextToken: String?
    public let maxResults: Int?
    public let statusEquals: TrainingJobStatus?
    public let sortBy: TrainingJobSortByOptions?
    public let sortOrder: SortOrder?
}

extension ListTrainingJobsForHyperParameterTuningJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hyperParameterTuningJobName = "HyperParameterTuningJobName"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
        case statusEquals = "StatusEquals"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hyperParameterTuningJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hyperParameterTuningJobName)
        hyperParameterTuningJobName = hyperParameterTuningJobNameDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statusEqualsDecoded = try containerValues.decodeIfPresent(TrainingJobStatus.self, forKey: .statusEquals)
        statusEquals = statusEqualsDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(TrainingJobSortByOptions.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
    }
}
