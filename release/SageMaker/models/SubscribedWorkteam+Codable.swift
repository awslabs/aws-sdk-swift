// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SubscribedWorkteam: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case listingId = "ListingId"
        case marketplaceDescription = "MarketplaceDescription"
        case marketplaceTitle = "MarketplaceTitle"
        case sellerName = "SellerName"
        case workteamArn = "WorkteamArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let listingId = listingId {
            try encodeContainer.encode(listingId, forKey: .listingId)
        }
        if let marketplaceDescription = marketplaceDescription {
            try encodeContainer.encode(marketplaceDescription, forKey: .marketplaceDescription)
        }
        if let marketplaceTitle = marketplaceTitle {
            try encodeContainer.encode(marketplaceTitle, forKey: .marketplaceTitle)
        }
        if let sellerName = sellerName {
            try encodeContainer.encode(sellerName, forKey: .sellerName)
        }
        if let workteamArn = workteamArn {
            try encodeContainer.encode(workteamArn, forKey: .workteamArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workteamArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workteamArn)
        workteamArn = workteamArnDecoded
        let marketplaceTitleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marketplaceTitle)
        marketplaceTitle = marketplaceTitleDecoded
        let sellerNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sellerName)
        sellerName = sellerNameDecoded
        let marketplaceDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marketplaceDescription)
        marketplaceDescription = marketplaceDescriptionDecoded
        let listingIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .listingId)
        listingId = listingIdDecoded
    }
}
