// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdatePipelineInputBody: Equatable {
    public let pipelineName: String?
    public let pipelineDisplayName: String?
    public let pipelineDefinition: String?
    public let pipelineDescription: String?
    public let roleArn: String?
}

extension UpdatePipelineInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case pipelineDefinition = "PipelineDefinition"
        case pipelineDescription = "PipelineDescription"
        case pipelineDisplayName = "PipelineDisplayName"
        case pipelineName = "PipelineName"
        case roleArn = "RoleArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineName)
        pipelineName = pipelineNameDecoded
        let pipelineDisplayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineDisplayName)
        pipelineDisplayName = pipelineDisplayNameDecoded
        let pipelineDefinitionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineDefinition)
        pipelineDefinition = pipelineDefinitionDecoded
        let pipelineDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .pipelineDescription)
        pipelineDescription = pipelineDescriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
    }
}
