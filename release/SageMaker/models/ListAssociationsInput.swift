// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAssociationsInput: Equatable {
    /// <p>A filter that returns only associations of the specified type.</p>
    public let associationType: AssociationEdgeType?
    /// <p>A filter that returns only associations created on or after the specified time.</p>
    public let createdAfter: Date?
    /// <p>A filter that returns only associations created on or before the specified time.</p>
    public let createdBefore: Date?
    /// <p>A filter that returns only associations with the specified destination Amazon Resource Name (ARN).</p>
    public let destinationArn: String?
    /// <p>A filter that returns only associations with the specified destination type.</p>
    public let destinationType: String?
    /// <p>The maximum number of associations to return in the response. The default value is 10.</p>
    public let maxResults: Int?
    /// <p>If the previous call to <code>ListAssociations</code> didn't return the full set of associations,
    ///         the call returns a token for getting the next set of associations.</p>
    public let nextToken: String?
    /// <p>The property used to sort results. The default value is <code>CreationTime</code>.</p>
    public let sortBy: SortAssociationsBy?
    /// <p>The sort order. The default value is <code>Descending</code>.</p>
    public let sortOrder: SortOrder?
    /// <p>A filter that returns only associations with the specified source ARN.</p>
    public let sourceArn: String?
    /// <p>A filter that returns only associations with the specified source type.</p>
    public let sourceType: String?

    public init (
        associationType: AssociationEdgeType? = nil,
        createdAfter: Date? = nil,
        createdBefore: Date? = nil,
        destinationArn: String? = nil,
        destinationType: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        sortBy: SortAssociationsBy? = nil,
        sortOrder: SortOrder? = nil,
        sourceArn: String? = nil,
        sourceType: String? = nil
    )
    {
        self.associationType = associationType
        self.createdAfter = createdAfter
        self.createdBefore = createdBefore
        self.destinationArn = destinationArn
        self.destinationType = destinationType
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.sourceArn = sourceArn
        self.sourceType = sourceType
    }
}
