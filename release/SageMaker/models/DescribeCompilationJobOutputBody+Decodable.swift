// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCompilationJobOutputBody: Equatable {
    public let compilationJobName: String?
    public let compilationJobArn: String?
    public let compilationJobStatus: CompilationJobStatus?
    public let compilationStartTime: Date?
    public let compilationEndTime: Date?
    public let stoppingCondition: StoppingCondition?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
    public let failureReason: String?
    public let modelArtifacts: ModelArtifacts?
    public let modelDigests: ModelDigests?
    public let roleArn: String?
    public let inputConfig: InputConfig?
    public let outputConfig: OutputConfig?
}

extension DescribeCompilationJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case compilationEndTime = "CompilationEndTime"
        case compilationJobArn = "CompilationJobArn"
        case compilationJobName = "CompilationJobName"
        case compilationJobStatus = "CompilationJobStatus"
        case compilationStartTime = "CompilationStartTime"
        case creationTime = "CreationTime"
        case failureReason = "FailureReason"
        case inputConfig = "InputConfig"
        case lastModifiedTime = "LastModifiedTime"
        case modelArtifacts = "ModelArtifacts"
        case modelDigests = "ModelDigests"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case stoppingCondition = "StoppingCondition"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compilationJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .compilationJobName)
        compilationJobName = compilationJobNameDecoded
        let compilationJobArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .compilationJobArn)
        compilationJobArn = compilationJobArnDecoded
        let compilationJobStatusDecoded = try containerValues.decodeIfPresent(CompilationJobStatus.self, forKey: .compilationJobStatus)
        compilationJobStatus = compilationJobStatusDecoded
        let compilationStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .compilationStartTime)
        compilationStartTime = compilationStartTimeDecoded
        let compilationEndTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .compilationEndTime)
        compilationEndTime = compilationEndTimeDecoded
        let stoppingConditionDecoded = try containerValues.decodeIfPresent(StoppingCondition.self, forKey: .stoppingCondition)
        stoppingCondition = stoppingConditionDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let modelArtifactsDecoded = try containerValues.decodeIfPresent(ModelArtifacts.self, forKey: .modelArtifacts)
        modelArtifacts = modelArtifactsDecoded
        let modelDigestsDecoded = try containerValues.decodeIfPresent(ModelDigests.self, forKey: .modelDigests)
        modelDigests = modelDigestsDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let inputConfigDecoded = try containerValues.decodeIfPresent(InputConfig.self, forKey: .inputConfig)
        inputConfig = inputConfigDecoded
        let outputConfigDecoded = try containerValues.decodeIfPresent(OutputConfig.self, forKey: .outputConfig)
        outputConfig = outputConfigDecoded
    }
}
