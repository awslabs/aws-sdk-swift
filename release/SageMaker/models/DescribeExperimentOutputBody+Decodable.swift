// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExperimentOutputBody: Equatable {
    public let experimentName: String?
    public let experimentArn: String?
    public let displayName: String?
    public let source: ExperimentSource?
    public let description: String?
    public let creationTime: Date?
    public let createdBy: UserContext?
    public let lastModifiedTime: Date?
    public let lastModifiedBy: UserContext?
}

extension DescribeExperimentOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdBy = "CreatedBy"
        case creationTime = "CreationTime"
        case description = "Description"
        case displayName = "DisplayName"
        case experimentArn = "ExperimentArn"
        case experimentName = "ExperimentName"
        case lastModifiedBy = "LastModifiedBy"
        case lastModifiedTime = "LastModifiedTime"
        case source = "Source"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .experimentName)
        experimentName = experimentNameDecoded
        let experimentArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .experimentArn)
        experimentArn = experimentArnDecoded
        let displayNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .displayName)
        displayName = displayNameDecoded
        let sourceDecoded = try containerValues.decodeIfPresent(ExperimentSource.self, forKey: .source)
        source = sourceDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let createdByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .createdBy)
        createdBy = createdByDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
        let lastModifiedByDecoded = try containerValues.decodeIfPresent(UserContext.self, forKey: .lastModifiedBy)
        lastModifiedBy = lastModifiedByDecoded
    }
}
