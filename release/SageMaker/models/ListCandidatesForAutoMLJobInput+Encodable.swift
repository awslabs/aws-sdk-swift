// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListCandidatesForAutoMLJobInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case autoMLJobName = "AutoMLJobName"
        case candidateNameEquals = "CandidateNameEquals"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
        case statusEquals = "StatusEquals"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let autoMLJobName = autoMLJobName {
            try encodeContainer.encode(autoMLJobName, forKey: .autoMLJobName)
        }
        if let candidateNameEquals = candidateNameEquals {
            try encodeContainer.encode(candidateNameEquals, forKey: .candidateNameEquals)
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let sortBy = sortBy {
            try encodeContainer.encode(sortBy.rawValue, forKey: .sortBy)
        }
        if let sortOrder = sortOrder {
            try encodeContainer.encode(sortOrder.rawValue, forKey: .sortOrder)
        }
        if let statusEquals = statusEquals {
            try encodeContainer.encode(statusEquals.rawValue, forKey: .statusEquals)
        }
    }
}
