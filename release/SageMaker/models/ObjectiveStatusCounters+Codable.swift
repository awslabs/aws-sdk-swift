// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ObjectiveStatusCounters: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case failed = "Failed"
        case pending = "Pending"
        case succeeded = "Succeeded"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if failed != 0 {
            try encodeContainer.encode(failed, forKey: .failed)
        }
        if pending != 0 {
            try encodeContainer.encode(pending, forKey: .pending)
        }
        if succeeded != 0 {
            try encodeContainer.encode(succeeded, forKey: .succeeded)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let succeededDecoded = try containerValues.decode(Int.self, forKey: .succeeded)
        succeeded = succeededDecoded
        let pendingDecoded = try containerValues.decode(Int.self, forKey: .pending)
        pending = pendingDecoded
        let failedDecoded = try containerValues.decode(Int.self, forKey: .failed)
        failed = failedDecoded
    }
}
