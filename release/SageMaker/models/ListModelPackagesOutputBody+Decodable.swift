// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelPackagesOutputBody: Equatable {
    public let modelPackageSummaryList: [ModelPackageSummary]?
    public let nextToken: String?
}

extension ListModelPackagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case modelPackageSummaryList = "ModelPackageSummaryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let modelPackageSummaryListContainer = try containerValues.decodeIfPresent([ModelPackageSummary].self, forKey: .modelPackageSummaryList)
        var modelPackageSummaryListDecoded0:[ModelPackageSummary]? = nil
        if let modelPackageSummaryListContainer = modelPackageSummaryListContainer {
            modelPackageSummaryListDecoded0 = [ModelPackageSummary]()
            for structure0 in modelPackageSummaryListContainer {
                modelPackageSummaryListDecoded0?.append(structure0)
            }
        }
        modelPackageSummaryList = modelPackageSummaryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
