// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateHyperParameterTuningJobInputBody: Equatable {
    public let hyperParameterTuningJobName: String?
    public let hyperParameterTuningJobConfig: HyperParameterTuningJobConfig?
    public let trainingJobDefinition: HyperParameterTrainingJobDefinition?
    public let trainingJobDefinitions: [HyperParameterTrainingJobDefinition]?
    public let warmStartConfig: HyperParameterTuningJobWarmStartConfig?
    public let tags: [Tag]?
}

extension CreateHyperParameterTuningJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hyperParameterTuningJobConfig = "HyperParameterTuningJobConfig"
        case hyperParameterTuningJobName = "HyperParameterTuningJobName"
        case tags = "Tags"
        case trainingJobDefinition = "TrainingJobDefinition"
        case trainingJobDefinitions = "TrainingJobDefinitions"
        case warmStartConfig = "WarmStartConfig"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hyperParameterTuningJobNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hyperParameterTuningJobName)
        hyperParameterTuningJobName = hyperParameterTuningJobNameDecoded
        let hyperParameterTuningJobConfigDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobConfig.self, forKey: .hyperParameterTuningJobConfig)
        hyperParameterTuningJobConfig = hyperParameterTuningJobConfigDecoded
        let trainingJobDefinitionDecoded = try containerValues.decodeIfPresent(HyperParameterTrainingJobDefinition.self, forKey: .trainingJobDefinition)
        trainingJobDefinition = trainingJobDefinitionDecoded
        let trainingJobDefinitionsContainer = try containerValues.decodeIfPresent([HyperParameterTrainingJobDefinition].self, forKey: .trainingJobDefinitions)
        var trainingJobDefinitionsDecoded0:[HyperParameterTrainingJobDefinition]? = nil
        if let trainingJobDefinitionsContainer = trainingJobDefinitionsContainer {
            trainingJobDefinitionsDecoded0 = [HyperParameterTrainingJobDefinition]()
            for structure0 in trainingJobDefinitionsContainer {
                trainingJobDefinitionsDecoded0?.append(structure0)
            }
        }
        trainingJobDefinitions = trainingJobDefinitionsDecoded0
        let warmStartConfigDecoded = try containerValues.decodeIfPresent(HyperParameterTuningJobWarmStartConfig.self, forKey: .warmStartConfig)
        warmStartConfig = warmStartConfigDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
