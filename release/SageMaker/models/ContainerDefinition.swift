// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the container, as part of model definition.</p>
public struct ContainerDefinition: Equatable {
    /// <p>This parameter is ignored for models that contain only a
    ///             <code>PrimaryContainer</code>.</p>
    ///         <p>When a <code>ContainerDefinition</code> is part of an inference pipeline, the value of
    ///             the parameter uniquely identifies the container for the purposes of logging and metrics.
    ///             For information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/inference-pipeline-logs-metrics.html">Use Logs and Metrics
    ///                 to Monitor an Inference Pipeline</a>. If you don't specify a value for this
    ///             parameter for a <code>ContainerDefinition</code> that is part of an inference pipeline,
    ///             a unique name is automatically assigned based on the position of the
    ///                 <code>ContainerDefinition</code> in the pipeline. If you specify a value for the
    ///                 <code>ContainerHostName</code> for any <code>ContainerDefinition</code> that is part
    ///             of an inference pipeline, you must specify a value for the
    ///                 <code>ContainerHostName</code> parameter of every <code>ContainerDefinition</code>
    ///             in that pipeline.</p>
    public let containerHostname: String?
    /// <p>The environment variables to set in the Docker container. Each key and value in the
    ///                 <code>Environment</code> string to string map can have length of up to 1024. We
    ///             support up to 16 entries in the map. </p>
    public let environment: [String:String]?
    /// <p>The path where inference code is stored. This can be either in Amazon EC2 Container Registry or in a
    ///             Docker registry that is accessible from the same VPC that you configure for your
    ///             endpoint. If you are using your own custom algorithm instead of an algorithm provided by
    ///             Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. Amazon SageMaker supports both
    ///                 <code>registry/repository[:tag]</code> and <code>registry/repository[@digest]</code>
    ///             image path formats. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html">Using Your Own Algorithms with Amazon
    ///                 SageMaker</a>
    ///         </p>
    public let image: String?
    /// <p>Specifies whether the model container is in Amazon ECR or a private Docker registry
    ///             accessible from your Amazon Virtual Private Cloud (VPC). For information about storing containers in a
    ///             private Docker registry, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-containers-inference-private.html">Use a
    ///                 Private Docker Registry for Real-Time Inference Containers</a>
    ///         </p>
    public let imageConfig: ImageConfig?
    /// <p>Whether the container hosts a single model or multiple models.</p>
    public let mode: ContainerMode?
    /// <p>The S3 path where the model artifacts, which result from model training, are stored.
    ///             This path must point to a single gzip compressed tar archive (.tar.gz suffix). The S3
    ///             path is required for Amazon SageMaker built-in algorithms, but not if you use your own algorithms.
    ///             For more information on built-in algorithms, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-algo-docker-registry-paths.html">Common
    ///                 Parameters</a>. </p>
    ///         <note>
    ///             <p>The model artifacts must be in an S3 bucket that is in the same region as the
    ///                 model or endpoint you are creating.</p>
    ///         </note>
    ///         <p>If you provide a value for this parameter, Amazon SageMaker uses AWS Security Token Service to
    ///             download model artifacts from the S3 path you provide. AWS STS is activated in your
    ///             IAM user account by default. If you previously deactivated AWS STS for a region, you
    ///             need to reactivate AWS STS for that region. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html">Activating and
    ///                 Deactivating AWS STS in an AWS Region</a> in the <i>AWS Identity and Access Management User
    ///                 Guide</i>.</p>
    ///         <important>
    ///             <p>If you use a built-in algorithm to create a model, Amazon SageMaker requires that you provide
    ///                 a S3 path to the model artifacts in <code>ModelDataUrl</code>.</p>
    ///         </important>
    public let modelDataUrl: String?
    /// <p>The name or Amazon Resource Name (ARN) of the model package to use to create the
    ///             model.</p>
    public let modelPackageName: String?
    /// <p>Specifies additional configuration for multi-model endpoints.</p>
    public let multiModelConfig: MultiModelConfig?

    public init (
        containerHostname: String? = nil,
        environment: [String:String]? = nil,
        image: String? = nil,
        imageConfig: ImageConfig? = nil,
        mode: ContainerMode? = nil,
        modelDataUrl: String? = nil,
        modelPackageName: String? = nil,
        multiModelConfig: MultiModelConfig? = nil
    )
    {
        self.containerHostname = containerHostname
        self.environment = environment
        self.image = image
        self.imageConfig = imageConfig
        self.mode = mode
        self.modelDataUrl = modelDataUrl
        self.modelPackageName = modelPackageName
        self.multiModelConfig = multiModelConfig
    }
}
