// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchInputBody: Equatable {
    public let resource: ResourceType?
    public let searchExpression: SearchExpression?
    public let sortBy: String?
    public let sortOrder: SearchSortOrder?
    public let nextToken: String?
    public let maxResults: Int?
}

extension SearchInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resource = "Resource"
        case searchExpression = "SearchExpression"
        case sortBy = "SortBy"
        case sortOrder = "SortOrder"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceDecoded = try containerValues.decodeIfPresent(ResourceType.self, forKey: .resource)
        resource = resourceDecoded
        let searchExpressionDecoded = try containerValues.decodeIfPresent(SearchExpression.self, forKey: .searchExpression)
        searchExpression = searchExpressionDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SearchSortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
