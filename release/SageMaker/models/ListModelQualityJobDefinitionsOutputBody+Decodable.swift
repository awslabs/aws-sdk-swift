// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelQualityJobDefinitionsOutputBody: Equatable {
    public let jobDefinitionSummaries: [MonitoringJobDefinitionSummary]?
    public let nextToken: String?
}

extension ListModelQualityJobDefinitionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobDefinitionSummaries = "JobDefinitionSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobDefinitionSummariesContainer = try containerValues.decodeIfPresent([MonitoringJobDefinitionSummary].self, forKey: .jobDefinitionSummaries)
        var jobDefinitionSummariesDecoded0:[MonitoringJobDefinitionSummary]? = nil
        if let jobDefinitionSummariesContainer = jobDefinitionSummariesContainer {
            jobDefinitionSummariesDecoded0 = [MonitoringJobDefinitionSummary]()
            for structure0 in jobDefinitionSummariesContainer {
                jobDefinitionSummariesDecoded0?.append(structure0)
            }
        }
        jobDefinitionSummaries = jobDefinitionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
