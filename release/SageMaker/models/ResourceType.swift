// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceType {
    case endpoint
    case experiment
    case experimentTrial
    case experimentTrialComponent
    case featureGroup
    case modelPackage
    case modelPackageGroup
    case pipeline
    case pipelineExecution
    case trainingJob
    case sdkUnknown(String)
}

extension ResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceType] {
        return [
            .endpoint,
            .experiment,
            .experimentTrial,
            .experimentTrialComponent,
            .featureGroup,
            .modelPackage,
            .modelPackageGroup,
            .pipeline,
            .pipelineExecution,
            .trainingJob,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .endpoint: return "Endpoint"
        case .experiment: return "Experiment"
        case .experimentTrial: return "ExperimentTrial"
        case .experimentTrialComponent: return "ExperimentTrialComponent"
        case .featureGroup: return "FeatureGroup"
        case .modelPackage: return "ModelPackage"
        case .modelPackageGroup: return "ModelPackageGroup"
        case .pipeline: return "Pipeline"
        case .pipelineExecution: return "PipelineExecution"
        case .trainingJob: return "TrainingJob"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
    }
}
