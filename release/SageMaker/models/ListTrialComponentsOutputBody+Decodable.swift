// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrialComponentsOutputBody: Equatable {
    public let trialComponentSummaries: [TrialComponentSummary]?
    public let nextToken: String?
}

extension ListTrialComponentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case trialComponentSummaries = "TrialComponentSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trialComponentSummariesContainer = try containerValues.decodeIfPresent([TrialComponentSummary].self, forKey: .trialComponentSummaries)
        var trialComponentSummariesDecoded0:[TrialComponentSummary]? = nil
        if let trialComponentSummariesContainer = trialComponentSummariesContainer {
            trialComponentSummariesDecoded0 = [TrialComponentSummary]()
            for structure0 in trialComponentSummariesContainer {
                trialComponentSummariesDecoded0?.append(structure0)
            }
        }
        trialComponentSummaries = trialComponentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
