// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CognitoMemberDefinition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientId = "ClientId"
        case userGroup = "UserGroup"
        case userPool = "UserPool"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientId = clientId {
            try encodeContainer.encode(clientId, forKey: .clientId)
        }
        if let userGroup = userGroup {
            try encodeContainer.encode(userGroup, forKey: .userGroup)
        }
        if let userPool = userPool {
            try encodeContainer.encode(userPool, forKey: .userPool)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userPool)
        userPool = userPoolDecoded
        let userGroupDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userGroup)
        userGroup = userGroupDecoded
        let clientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientId)
        clientId = clientIdDecoded
    }
}
