// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateModelPackageInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case approvalDescription = "ApprovalDescription"
        case modelApprovalStatus = "ModelApprovalStatus"
        case modelPackageArn = "ModelPackageArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let approvalDescription = approvalDescription {
            try encodeContainer.encode(approvalDescription, forKey: .approvalDescription)
        }
        if let modelApprovalStatus = modelApprovalStatus {
            try encodeContainer.encode(modelApprovalStatus.rawValue, forKey: .modelApprovalStatus)
        }
        if let modelPackageArn = modelPackageArn {
            try encodeContainer.encode(modelPackageArn, forKey: .modelPackageArn)
        }
    }
}
