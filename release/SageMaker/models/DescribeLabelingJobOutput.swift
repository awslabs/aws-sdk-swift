// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeLabelingJobOutput: Equatable {
    /// <p>The date and time that the labeling job was created.</p>
    public let creationTime: Date?
    /// <p>If the job failed, the reason that it failed. </p>
    public let failureReason: String?
    /// <p>Configuration information required for human workers to complete a labeling
    ///             task.</p>
    public let humanTaskConfig: HumanTaskConfig?
    /// <p>Input configuration information for the labeling job, such as the Amazon S3 location of the
    ///             data objects and the location of the manifest file that describes the data
    ///             objects.</p>
    public let inputConfig: LabelingJobInputConfig?
    /// <p>A unique identifier for work done as part of a labeling job.</p>
    public let jobReferenceCode: String?
    /// <p>The attribute used as the label in the output manifest file.</p>
    public let labelAttributeName: String?
    /// <p>The S3 location of the JSON file that defines the categories used to label data
    ///             objects. Please note the following label-category limits:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Semantic segmentation labeling jobs using automated labeling: 20 labels</p>
    ///             </li>
    ///             <li>
    ///                 <p>Box bounding labeling jobs (all): 10 labels</p>
    ///             </li>
    ///          </ul>
    ///         <p>The file is a JSON structure in the following format:</p>
    ///         <p>
    ///             <code>{</code>
    ///         </p>
    ///         <p>
    ///             <code> "document-version": "2018-11-28"</code>
    ///         </p>
    ///         <p>
    ///             <code> "labels": [</code>
    ///         </p>
    ///         <p>
    ///             <code> {</code>
    ///         </p>
    ///         <p>
    ///             <code> "label": "<i>label 1</i>"</code>
    ///         </p>
    ///         <p>
    ///             <code> },</code>
    ///         </p>
    ///         <p>
    ///             <code> {</code>
    ///         </p>
    ///         <p>
    ///             <code> "label": "<i>label 2</i>"</code>
    ///         </p>
    ///         <p>
    ///             <code> },</code>
    ///         </p>
    ///         <p>
    ///             <code> ...</code>
    ///         </p>
    ///         <p>
    ///             <code> {</code>
    ///         </p>
    ///         <p>
    ///             <code> "label": "<i>label n</i>"</code>
    ///         </p>
    ///         <p>
    ///             <code> }</code>
    ///         </p>
    ///         <p>
    ///             <code> ]</code>
    ///         </p>
    ///         <p>
    ///             <code>}</code>
    ///         </p>
    public let labelCategoryConfigS3Uri: String?
    /// <p>Provides a breakdown of the number of data objects labeled by humans, the number of
    ///             objects labeled by machine, the number of objects than couldn't be labeled, and the
    ///             total number of objects labeled. </p>
    public let labelCounters: LabelCounters?
    /// <p>Configuration information for automated data labeling.</p>
    public let labelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig?
    /// <p>The Amazon Resource Name (ARN) of the labeling job.</p>
    public let labelingJobArn: String?
    /// <p>The name assigned to the labeling job when it was created.</p>
    public let labelingJobName: String?
    /// <p>The location of the output produced by the labeling job.</p>
    public let labelingJobOutput: LabelingJobOutput?
    /// <p>The processing status of the labeling job. </p>
    public let labelingJobStatus: LabelingJobStatus?
    /// <p>The date and time that the labeling job was last updated.</p>
    public let lastModifiedTime: Date?
    /// <p>The location of the job's output data and the AWS Key Management Service key ID for the key used to
    ///             encrypt the output data, if any.</p>
    public let outputConfig: LabelingJobOutputConfig?
    /// <p>The Amazon Resource Name (ARN) that Amazon SageMaker assumes to perform tasks on your behalf
    ///             during data labeling.</p>
    public let roleArn: String?
    /// <p>A set of conditions for stopping a labeling job. If any of the conditions are met, the
    ///             job is automatically stopped.</p>
    public let stoppingConditions: LabelingJobStoppingConditions?
    /// <p>An array of key-value pairs. You can use tags to categorize your AWS resources in
    ///             different ways, for example, by purpose, owner, or environment. For more information,
    ///             see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS
    ///                 Resources</a>.</p>
    public let tags: [Tag]?

    public init (
        creationTime: Date? = nil,
        failureReason: String? = nil,
        humanTaskConfig: HumanTaskConfig? = nil,
        inputConfig: LabelingJobInputConfig? = nil,
        jobReferenceCode: String? = nil,
        labelAttributeName: String? = nil,
        labelCategoryConfigS3Uri: String? = nil,
        labelCounters: LabelCounters? = nil,
        labelingJobAlgorithmsConfig: LabelingJobAlgorithmsConfig? = nil,
        labelingJobArn: String? = nil,
        labelingJobName: String? = nil,
        labelingJobOutput: LabelingJobOutput? = nil,
        labelingJobStatus: LabelingJobStatus? = nil,
        lastModifiedTime: Date? = nil,
        outputConfig: LabelingJobOutputConfig? = nil,
        roleArn: String? = nil,
        stoppingConditions: LabelingJobStoppingConditions? = nil,
        tags: [Tag]? = nil
    )
    {
        self.creationTime = creationTime
        self.failureReason = failureReason
        self.humanTaskConfig = humanTaskConfig
        self.inputConfig = inputConfig
        self.jobReferenceCode = jobReferenceCode
        self.labelAttributeName = labelAttributeName
        self.labelCategoryConfigS3Uri = labelCategoryConfigS3Uri
        self.labelCounters = labelCounters
        self.labelingJobAlgorithmsConfig = labelingJobAlgorithmsConfig
        self.labelingJobArn = labelingJobArn
        self.labelingJobName = labelingJobName
        self.labelingJobOutput = labelingJobOutput
        self.labelingJobStatus = labelingJobStatus
        self.lastModifiedTime = lastModifiedTime
        self.outputConfig = outputConfig
        self.roleArn = roleArn
        self.stoppingConditions = stoppingConditions
        self.tags = tags
    }
}
