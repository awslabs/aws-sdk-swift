// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ProcessingS3UploadMode {
    case continuous
    case endOfJob
    case sdkUnknown(String)
}

extension ProcessingS3UploadMode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ProcessingS3UploadMode] {
        return [
            .continuous,
            .endOfJob,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .continuous: return "Continuous"
        case .endOfJob: return "EndOfJob"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ProcessingS3UploadMode(rawValue: rawValue) ?? ProcessingS3UploadMode.sdkUnknown(rawValue)
    }
}
