// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SourceIpConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cidrs = "Cidrs"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cidrs = cidrs {
            var cidrsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .cidrs)
            for cidrs0 in cidrs {
                try cidrsContainer.encode(cidrs0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cidrsContainer = try containerValues.decodeIfPresent([String].self, forKey: .cidrs)
        var cidrsDecoded0:[String]? = nil
        if let cidrsContainer = cidrsContainer {
            cidrsDecoded0 = [String]()
            for string0 in cidrsContainer {
                cidrsDecoded0?.append(string0)
            }
        }
        cidrs = cidrsDecoded0
    }
}
