// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListContextsInput: Equatable {
    /// <p>A filter that returns only contexts of the specified type.</p>
    public let contextType: String?
    /// <p>A filter that returns only contexts created on or after the specified time.</p>
    public let createdAfter: Date?
    /// <p>A filter that returns only contexts created on or before the specified time.</p>
    public let createdBefore: Date?
    /// <p>The maximum number of contexts to return in the response. The default value is 10.</p>
    public let maxResults: Int?
    /// <p>If the previous call to <code>ListContexts</code> didn't return the full set of contexts,
    ///         the call returns a token for getting the next set of contexts.</p>
    public let nextToken: String?
    /// <p>The property used to sort results. The default value is <code>CreationTime</code>.</p>
    public let sortBy: SortContextsBy?
    /// <p>The sort order. The default value is <code>Descending</code>.</p>
    public let sortOrder: SortOrder?
    /// <p>A filter that returns only contexts with the specified source URI.</p>
    public let sourceUri: String?

    public init (
        contextType: String? = nil,
        createdAfter: Date? = nil,
        createdBefore: Date? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        sortBy: SortContextsBy? = nil,
        sortOrder: SortOrder? = nil,
        sourceUri: String? = nil
    )
    {
        self.contextType = contextType
        self.createdAfter = createdAfter
        self.createdBefore = createdBefore
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
        self.sourceUri = sourceUri
    }
}
