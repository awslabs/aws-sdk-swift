// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Framework {
    case darknet
    case keras
    case mxnet
    case onnx
    case pytorch
    case sklearn
    case tensorflow
    case tflite
    case xgboost
    case sdkUnknown(String)
}

extension Framework : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Framework] {
        return [
            .darknet,
            .keras,
            .mxnet,
            .onnx,
            .pytorch,
            .sklearn,
            .tensorflow,
            .tflite,
            .xgboost,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .darknet: return "DARKNET"
        case .keras: return "KERAS"
        case .mxnet: return "MXNET"
        case .onnx: return "ONNX"
        case .pytorch: return "PYTORCH"
        case .sklearn: return "SKLEARN"
        case .tensorflow: return "TENSORFLOW"
        case .tflite: return "TFLITE"
        case .xgboost: return "XGBOOST"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Framework(rawValue: rawValue) ?? Framework.sdkUnknown(rawValue)
    }
}
