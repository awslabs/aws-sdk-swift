// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAppOutputBody: Equatable {
    public let appArn: String?
    public let appType: AppType?
    public let appName: String?
    public let domainId: String?
    public let userProfileName: String?
    public let status: AppStatus?
    public let lastHealthCheckTimestamp: Date?
    public let lastUserActivityTimestamp: Date?
    public let creationTime: Date?
    public let failureReason: String?
    public let resourceSpec: ResourceSpec?
}

extension DescribeAppOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appArn = "AppArn"
        case appName = "AppName"
        case appType = "AppType"
        case creationTime = "CreationTime"
        case domainId = "DomainId"
        case failureReason = "FailureReason"
        case lastHealthCheckTimestamp = "LastHealthCheckTimestamp"
        case lastUserActivityTimestamp = "LastUserActivityTimestamp"
        case resourceSpec = "ResourceSpec"
        case status = "Status"
        case userProfileName = "UserProfileName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appArn)
        appArn = appArnDecoded
        let appTypeDecoded = try containerValues.decodeIfPresent(AppType.self, forKey: .appType)
        appType = appTypeDecoded
        let appNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appName)
        appName = appNameDecoded
        let domainIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainId)
        domainId = domainIdDecoded
        let userProfileNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userProfileName)
        userProfileName = userProfileNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(AppStatus.self, forKey: .status)
        status = statusDecoded
        let lastHealthCheckTimestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastHealthCheckTimestamp)
        lastHealthCheckTimestamp = lastHealthCheckTimestampDecoded
        let lastUserActivityTimestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastUserActivityTimestamp)
        lastUserActivityTimestamp = lastUserActivityTimestampDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let failureReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureReason)
        failureReason = failureReasonDecoded
        let resourceSpecDecoded = try containerValues.decodeIfPresent(ResourceSpec.self, forKey: .resourceSpec)
        resourceSpec = resourceSpecDecoded
    }
}
