// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateArtifactInputBody: Equatable {
    public let artifactArn: String?
    public let artifactName: String?
    public let properties: [String:String]?
    public let propertiesToRemove: [String]?
}

extension UpdateArtifactInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case artifactArn = "ArtifactArn"
        case artifactName = "ArtifactName"
        case properties = "Properties"
        case propertiesToRemove = "PropertiesToRemove"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactArn)
        artifactArn = artifactArnDecoded
        let artifactNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let propertiesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .properties)
        var propertiesDecoded0: [String:String]? = nil
        if let propertiesContainer = propertiesContainer {
            propertiesDecoded0 = [String:String]()
            for (key0, stringparametervalue0) in propertiesContainer {
                propertiesDecoded0?[key0] = stringparametervalue0
            }
        }
        properties = propertiesDecoded0
        let propertiesToRemoveContainer = try containerValues.decodeIfPresent([String].self, forKey: .propertiesToRemove)
        var propertiesToRemoveDecoded0:[String]? = nil
        if let propertiesToRemoveContainer = propertiesToRemoveContainer {
            propertiesToRemoveDecoded0 = [String]()
            for string0 in propertiesToRemoveContainer {
                propertiesToRemoveDecoded0?.append(string0)
            }
        }
        propertiesToRemove = propertiesToRemoveDecoded0
    }
}
