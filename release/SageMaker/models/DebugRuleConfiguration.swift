// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Configuration information for SageMaker Debugger rules for debugging. To learn more about
///             how to configure the <code>DebugRuleConfiguration</code> parameter,
///             see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>.</p>
public struct DebugRuleConfiguration: Equatable {
    /// <p>The instance type to deploy a Debugger custom rule for debugging a training job.</p>
    public let instanceType: ProcessingInstanceType?
    /// <p>Path to local storage location for output of rules. Defaults to
    ///                 <code>/opt/ml/processing/output/rule/</code>.</p>
    public let localPath: String?
    /// <p>The name of the rule configuration. It must be unique relative to other rule
    ///             configuration names.</p>
    public let ruleConfigurationName: String?
    /// <p>The Amazon Elastic Container (ECR) Image for the managed rule evaluation.</p>
    public let ruleEvaluatorImage: String?
    /// <p>Runtime configuration for rule container.</p>
    public let ruleParameters: [String:String]?
    /// <p>Path to Amazon S3 storage location for rules.</p>
    public let s3OutputPath: String?
    /// <p>The size, in GB, of the ML storage volume attached to the processing instance.</p>
    public let volumeSizeInGB: Int

    public init (
        instanceType: ProcessingInstanceType? = nil,
        localPath: String? = nil,
        ruleConfigurationName: String? = nil,
        ruleEvaluatorImage: String? = nil,
        ruleParameters: [String:String]? = nil,
        s3OutputPath: String? = nil,
        volumeSizeInGB: Int = 0
    )
    {
        self.instanceType = instanceType
        self.localPath = localPath
        self.ruleConfigurationName = ruleConfigurationName
        self.ruleEvaluatorImage = ruleEvaluatorImage
        self.ruleParameters = ruleParameters
        self.s3OutputPath = s3OutputPath
        self.volumeSizeInGB = volumeSizeInGB
    }
}
