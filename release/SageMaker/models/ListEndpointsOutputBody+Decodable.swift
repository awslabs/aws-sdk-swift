// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEndpointsOutputBody: Equatable {
    public let endpoints: [EndpointSummary]?
    public let nextToken: String?
}

extension ListEndpointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endpoints = "Endpoints"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointsContainer = try containerValues.decodeIfPresent([EndpointSummary].self, forKey: .endpoints)
        var endpointsDecoded0:[EndpointSummary]? = nil
        if let endpointsContainer = endpointsContainer {
            endpointsDecoded0 = [EndpointSummary]()
            for structure0 in endpointsContainer {
                endpointsDecoded0?.append(structure0)
            }
        }
        endpoints = endpointsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
