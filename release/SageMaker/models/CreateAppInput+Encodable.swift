// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateAppInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case appName = "AppName"
        case appType = "AppType"
        case domainId = "DomainId"
        case resourceSpec = "ResourceSpec"
        case tags = "Tags"
        case userProfileName = "UserProfileName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appName = appName {
            try encodeContainer.encode(appName, forKey: .appName)
        }
        if let appType = appType {
            try encodeContainer.encode(appType.rawValue, forKey: .appType)
        }
        if let domainId = domainId {
            try encodeContainer.encode(domainId, forKey: .domainId)
        }
        if let resourceSpec = resourceSpec {
            try encodeContainer.encode(resourceSpec, forKey: .resourceSpec)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let userProfileName = userProfileName {
            try encodeContainer.encode(userProfileName, forKey: .userProfileName)
        }
    }
}
