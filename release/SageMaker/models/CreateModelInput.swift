// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateModelInput: Equatable {
    /// <p>Specifies the containers in the inference pipeline.</p>
    public let containers: [ContainerDefinition]?
    /// <p>Isolates the model container. No inbound or outbound network calls can be made to or
    ///             from the model container.</p>
    public let enableNetworkIsolation: Bool
    /// <p>The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model
    ///             artifacts and docker image for deployment on ML compute instances or for batch transform
    ///             jobs. Deploying on ML compute instances is part of model hosting. For more information,
    ///             see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html">Amazon SageMaker
    ///                 Roles</a>. </p>
    ///         <note>
    ///             <p>To be able to pass this role to Amazon SageMaker, the caller of this API must have the
    ///                     <code>iam:PassRole</code> permission.</p>
    ///         </note>
    public let executionRoleArn: String?
    /// <p>Specifies details of how containers in a multi-container endpoint are called.</p>
    public let inferenceExecutionConfig: InferenceExecutionConfig?
    /// <p>The name of the new model.</p>
    public let modelName: String?
    /// <p>The location of the primary docker image containing inference code, associated
    ///             artifacts, and custom environment map that the inference code uses when the model is
    ///             deployed for predictions. </p>
    public let primaryContainer: ContainerDefinition?
    /// <p>An array of key-value pairs. You can use tags to categorize your AWS resources in
    ///             different ways, for example, by purpose, owner, or environment. For more information,
    ///             see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS
    ///                 Resources</a>.</p>
    public let tags: [Tag]?
    /// <p>A <a>VpcConfig</a> object that specifies the VPC that you want your model
    ///             to connect to. Control access to and from your model container by configuring the VPC.
    ///                 <code>VpcConfig</code> is used in hosting services and in batch transform. For more
    ///             information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-vpc.html">Protect Data in Batch
    ///                 Transform Jobs by Using an Amazon Virtual Private Cloud</a>.</p>
    public let vpcConfig: VpcConfig?

    public init (
        containers: [ContainerDefinition]? = nil,
        enableNetworkIsolation: Bool = false,
        executionRoleArn: String? = nil,
        inferenceExecutionConfig: InferenceExecutionConfig? = nil,
        modelName: String? = nil,
        primaryContainer: ContainerDefinition? = nil,
        tags: [Tag]? = nil,
        vpcConfig: VpcConfig? = nil
    )
    {
        self.containers = containers
        self.enableNetworkIsolation = enableNetworkIsolation
        self.executionRoleArn = executionRoleArn
        self.inferenceExecutionConfig = inferenceExecutionConfig
        self.modelName = modelName
        self.primaryContainer = primaryContainer
        self.tags = tags
        self.vpcConfig = vpcConfig
    }
}
