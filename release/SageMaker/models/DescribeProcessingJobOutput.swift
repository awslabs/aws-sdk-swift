// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeProcessingJobOutput: Equatable {
    /// <p>Configures the processing job to run a specified container image.</p>
    public let appSpecification: AppSpecification?
    /// <p>The ARN of an AutoML job associated with this processing job.</p>
    public let autoMLJobArn: String?
    /// <p>The time at which the processing job was created.</p>
    public let creationTime: Date?
    /// <p>The environment variables set in the Docker container.</p>
    public let environment: [String:String]?
    /// <p>An optional string, up to one KB in size, that contains metadata from the processing
    ///             container when the processing job exits.</p>
    public let exitMessage: String?
    /// <p>The configuration information used to create an experiment.</p>
    public let experimentConfig: ExperimentConfig?
    /// <p>A string, up to one KB in size, that contains the reason a processing job failed, if
    ///             it failed.</p>
    public let failureReason: String?
    /// <p>The time at which the processing job was last modified.</p>
    public let lastModifiedTime: Date?
    /// <p>The ARN of a monitoring schedule for an endpoint associated with this processing
    ///             job.</p>
    public let monitoringScheduleArn: String?
    /// <p>Networking options for a processing job.</p>
    public let networkConfig: NetworkConfig?
    /// <p>The time at which the processing job completed.</p>
    public let processingEndTime: Date?
    /// <p>The inputs for a processing job.</p>
    public let processingInputs: [ProcessingInput]?
    /// <p>The Amazon Resource Name (ARN) of the processing job.</p>
    public let processingJobArn: String?
    /// <p>The name of the processing job. The name must be unique within an AWS Region in the
    ///             AWS account.</p>
    public let processingJobName: String?
    /// <p>Provides the status of a processing job.</p>
    public let processingJobStatus: ProcessingJobStatus?
    /// <p>Output configuration for the processing job.</p>
    public let processingOutputConfig: ProcessingOutputConfig?
    /// <p>Identifies the resources, ML compute instances, and ML storage volumes to deploy for a
    ///             processing job. In distributed training, you specify more than one instance.</p>
    public let processingResources: ProcessingResources?
    /// <p>The time at which the processing job started.</p>
    public let processingStartTime: Date?
    /// <p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on
    ///             your behalf.</p>
    public let roleArn: String?
    /// <p>The time limit for how long the processing job is allowed to run.</p>
    public let stoppingCondition: ProcessingStoppingCondition?
    /// <p>The ARN of a training job associated with this processing job.</p>
    public let trainingJobArn: String?

    public init (
        appSpecification: AppSpecification? = nil,
        autoMLJobArn: String? = nil,
        creationTime: Date? = nil,
        environment: [String:String]? = nil,
        exitMessage: String? = nil,
        experimentConfig: ExperimentConfig? = nil,
        failureReason: String? = nil,
        lastModifiedTime: Date? = nil,
        monitoringScheduleArn: String? = nil,
        networkConfig: NetworkConfig? = nil,
        processingEndTime: Date? = nil,
        processingInputs: [ProcessingInput]? = nil,
        processingJobArn: String? = nil,
        processingJobName: String? = nil,
        processingJobStatus: ProcessingJobStatus? = nil,
        processingOutputConfig: ProcessingOutputConfig? = nil,
        processingResources: ProcessingResources? = nil,
        processingStartTime: Date? = nil,
        roleArn: String? = nil,
        stoppingCondition: ProcessingStoppingCondition? = nil,
        trainingJobArn: String? = nil
    )
    {
        self.appSpecification = appSpecification
        self.autoMLJobArn = autoMLJobArn
        self.creationTime = creationTime
        self.environment = environment
        self.exitMessage = exitMessage
        self.experimentConfig = experimentConfig
        self.failureReason = failureReason
        self.lastModifiedTime = lastModifiedTime
        self.monitoringScheduleArn = monitoringScheduleArn
        self.networkConfig = networkConfig
        self.processingEndTime = processingEndTime
        self.processingInputs = processingInputs
        self.processingJobArn = processingJobArn
        self.processingJobName = processingJobName
        self.processingJobStatus = processingJobStatus
        self.processingOutputConfig = processingOutputConfig
        self.processingResources = processingResources
        self.processingStartTime = processingStartTime
        self.roleArn = roleArn
        self.stoppingCondition = stoppingCondition
        self.trainingJobArn = trainingJobArn
    }
}
