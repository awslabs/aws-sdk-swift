// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Amazon SageMaker Feature Store stores features in a collection called Feature Group.
///          A Feature Group can be visualized as a table which has rows,
///          with a unique identifier for each row where each column in the table is a feature.
///          In principle, a Feature Group is composed of features and values per features.</p>
public struct FeatureGroup: Equatable {
    /// <p>The time a <code>FeatureGroup</code> was created.</p>
    public let creationTime: Date?
    /// <p>A free form description of a <code>FeatureGroup</code>.</p>
    public let description: String?
    /// <p>The name of the feature that stores the <code>EventTime</code> of a Record in a
    ///          <code>FeatureGroup</code>.</p>
    ///          <p>A <code>EventTime</code> is point in time when a new event
    ///          occurs that corresponds to the creation or update of a <code>Record</code> in
    ///          <code>FeatureGroup</code>. All <code>Records</code> in the <code>FeatureGroup</code>
    ///          must have a corresponding <code>EventTime</code>.</p>
    public let eventTimeFeatureName: String?
    /// <p>The reason that the <code>FeatureGroup</code> failed to
    ///          be replicated in the <code>OfflineStore</code>. This is
    ///          failure may be due to a failure to create a <code>FeatureGroup</code> in
    ///          or delete a <code>FeatureGroup</code> from the <code>OfflineStore</code>.</p>
    public let failureReason: String?
    /// <p>A list of <code>Feature</code>s. Each <code>Feature</code> must include a
    ///             <code>FeatureName</code> and a <code>FeatureType</code>. </p>
    ///          <p>Valid <code>FeatureType</code>s are <code>Integral</code>, <code>Fractional</code> and
    ///             <code>String</code>. </p>
    ///          <p>
    ///             <code>FeatureName</code>s cannot be any of the following: <code>is_deleted</code>,
    ///             <code>write_time</code>, <code>api_invocation_time</code>.</p>
    ///          <p>You can create up to 2,500 <code>FeatureDefinition</code>s per
    ///          <code>FeatureGroup</code>.</p>
    public let featureDefinitions: [FeatureDefinition]?
    /// <p>The Amazon Resource Name (ARN) of a <code>FeatureGroup</code>.</p>
    public let featureGroupArn: String?
    /// <p>The name of the <code>FeatureGroup</code>.</p>
    public let featureGroupName: String?
    /// <p>A <code>FeatureGroup</code> status.</p>
    public let featureGroupStatus: FeatureGroupStatus?
    /// <p>The configuration of an <code>OfflineStore</code>.</p>
    ///          <p>Provide an <code>OfflineStoreConfig</code> in a request to
    ///             <code>CreateFeatureGroup</code> to create an <code>OfflineStore</code>.</p>
    ///          <p>To encrypt an <code>OfflineStore</code> using at rest data encryption, specify AWS Key
    ///          Management Service (KMS) key ID, or <code>KMSKeyId</code>, in
    ///          <code>S3StorageConfig</code>.</p>
    public let offlineStoreConfig: OfflineStoreConfig?
    /// <p>The status of <code>OfflineStore</code>.</p>
    public let offlineStoreStatus: OfflineStoreStatus?
    /// <p>Use this to specify the AWS Key Management Service (KMS) Key ID, or
    ///             <code>KMSKeyId</code>, for at rest data encryption. You can turn
    ///             <code>OnlineStore</code> on or off by specifying the <code>EnableOnlineStore</code> flag
    ///          at General Assembly; the default value is <code>False</code>.</p>
    public let onlineStoreConfig: OnlineStoreConfig?
    /// <p>The name of the <code>Feature</code> whose value uniquely identifies a
    ///       <code>Record</code> defined in the <code>FeatureGroup</code>
    ///             <code>FeatureDefinitions</code>.</p>
    public let recordIdentifierFeatureName: String?
    /// <p>The Amazon Resource Name (ARN) of the IAM execution role used to create the feature
    ///          group.</p>
    public let roleArn: String?
    /// <p>Tags used to define a <code>FeatureGroup</code>.</p>
    public let tags: [Tag]?

    public init (
        creationTime: Date? = nil,
        description: String? = nil,
        eventTimeFeatureName: String? = nil,
        failureReason: String? = nil,
        featureDefinitions: [FeatureDefinition]? = nil,
        featureGroupArn: String? = nil,
        featureGroupName: String? = nil,
        featureGroupStatus: FeatureGroupStatus? = nil,
        offlineStoreConfig: OfflineStoreConfig? = nil,
        offlineStoreStatus: OfflineStoreStatus? = nil,
        onlineStoreConfig: OnlineStoreConfig? = nil,
        recordIdentifierFeatureName: String? = nil,
        roleArn: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.creationTime = creationTime
        self.description = description
        self.eventTimeFeatureName = eventTimeFeatureName
        self.failureReason = failureReason
        self.featureDefinitions = featureDefinitions
        self.featureGroupArn = featureGroupArn
        self.featureGroupName = featureGroupName
        self.featureGroupStatus = featureGroupStatus
        self.offlineStoreConfig = offlineStoreConfig
        self.offlineStoreStatus = offlineStoreStatus
        self.onlineStoreConfig = onlineStoreConfig
        self.recordIdentifierFeatureName = recordIdentifierFeatureName
        self.roleArn = roleArn
        self.tags = tags
    }
}
