// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTrainingJobsForHyperParameterTuningJobOutputBody: Equatable {
    public let trainingJobSummaries: [HyperParameterTrainingJobSummary]?
    public let nextToken: String?
}

extension ListTrainingJobsForHyperParameterTuningJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case trainingJobSummaries = "TrainingJobSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let trainingJobSummariesContainer = try containerValues.decodeIfPresent([HyperParameterTrainingJobSummary].self, forKey: .trainingJobSummaries)
        var trainingJobSummariesDecoded0:[HyperParameterTrainingJobSummary]? = nil
        if let trainingJobSummariesContainer = trainingJobSummariesContainer {
            trainingJobSummariesDecoded0 = [HyperParameterTrainingJobSummary]()
            for structure0 in trainingJobSummariesContainer {
                trainingJobSummariesDecoded0?.append(structure0)
            }
        }
        trainingJobSummaries = trainingJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
