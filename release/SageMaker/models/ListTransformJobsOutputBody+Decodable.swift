// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTransformJobsOutputBody: Equatable {
    public let transformJobSummaries: [TransformJobSummary]?
    public let nextToken: String?
}

extension ListTransformJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case transformJobSummaries = "TransformJobSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transformJobSummariesContainer = try containerValues.decodeIfPresent([TransformJobSummary].self, forKey: .transformJobSummaries)
        var transformJobSummariesDecoded0:[TransformJobSummary]? = nil
        if let transformJobSummariesContainer = transformJobSummariesContainer {
            transformJobSummariesDecoded0 = [TransformJobSummary]()
            for structure0 in transformJobSummariesContainer {
                transformJobSummariesDecoded0?.append(structure0)
            }
        }
        transformJobSummaries = transformJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
