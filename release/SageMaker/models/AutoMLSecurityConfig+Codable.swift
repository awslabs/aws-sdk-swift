// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoMLSecurityConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case enableInterContainerTrafficEncryption = "EnableInterContainerTrafficEncryption"
        case volumeKmsKeyId = "VolumeKmsKeyId"
        case vpcConfig = "VpcConfig"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if enableInterContainerTrafficEncryption != false {
            try encodeContainer.encode(enableInterContainerTrafficEncryption, forKey: .enableInterContainerTrafficEncryption)
        }
        if let volumeKmsKeyId = volumeKmsKeyId {
            try encodeContainer.encode(volumeKmsKeyId, forKey: .volumeKmsKeyId)
        }
        if let vpcConfig = vpcConfig {
            try encodeContainer.encode(vpcConfig, forKey: .vpcConfig)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let volumeKmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .volumeKmsKeyId)
        volumeKmsKeyId = volumeKmsKeyIdDecoded
        let enableInterContainerTrafficEncryptionDecoded = try containerValues.decode(Bool.self, forKey: .enableInterContainerTrafficEncryption)
        enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryptionDecoded
        let vpcConfigDecoded = try containerValues.decodeIfPresent(VpcConfig.self, forKey: .vpcConfig)
        vpcConfig = vpcConfigDecoded
    }
}
