// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCompilationJobsOutputBody: Equatable {
    public let compilationJobSummaries: [CompilationJobSummary]?
    public let nextToken: String?
}

extension ListCompilationJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case compilationJobSummaries = "CompilationJobSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let compilationJobSummariesContainer = try containerValues.decodeIfPresent([CompilationJobSummary].self, forKey: .compilationJobSummaries)
        var compilationJobSummariesDecoded0:[CompilationJobSummary]? = nil
        if let compilationJobSummariesContainer = compilationJobSummariesContainer {
            compilationJobSummariesDecoded0 = [CompilationJobSummary]()
            for structure0 in compilationJobSummariesContainer {
                compilationJobSummariesDecoded0?.append(structure0)
            }
        }
        compilationJobSummaries = compilationJobSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
