// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateImageVersionInputBody: Equatable {
    public let baseImage: String?
    public let clientToken: String?
    public let imageName: String?
}

extension CreateImageVersionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case baseImage = "BaseImage"
        case clientToken = "ClientToken"
        case imageName = "ImageName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let baseImageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .baseImage)
        baseImage = baseImageDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let imageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageName)
        imageName = imageNameDecoded
    }
}
