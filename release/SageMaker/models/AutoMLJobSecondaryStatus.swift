// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AutoMLJobSecondaryStatus {
    case analyzingData
    case candidateDefinitionsGenerated
    case completed
    case deployingModel
    case explainabilityError
    case failed
    case featureEngineering
    case generatingExplainabilityReport
    case maxAutoMlJobRuntimeReached
    case maxCandidatesReached
    case modelDeploymentError
    case modelTuning
    case starting
    case stopped
    case stopping
    case sdkUnknown(String)
}

extension AutoMLJobSecondaryStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AutoMLJobSecondaryStatus] {
        return [
            .analyzingData,
            .candidateDefinitionsGenerated,
            .completed,
            .deployingModel,
            .explainabilityError,
            .failed,
            .featureEngineering,
            .generatingExplainabilityReport,
            .maxAutoMlJobRuntimeReached,
            .maxCandidatesReached,
            .modelDeploymentError,
            .modelTuning,
            .starting,
            .stopped,
            .stopping,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .analyzingData: return "AnalyzingData"
        case .candidateDefinitionsGenerated: return "CandidateDefinitionsGenerated"
        case .completed: return "Completed"
        case .deployingModel: return "DeployingModel"
        case .explainabilityError: return "ExplainabilityError"
        case .failed: return "Failed"
        case .featureEngineering: return "FeatureEngineering"
        case .generatingExplainabilityReport: return "GeneratingExplainabilityReport"
        case .maxAutoMlJobRuntimeReached: return "MaxAutoMLJobRuntimeReached"
        case .maxCandidatesReached: return "MaxCandidatesReached"
        case .modelDeploymentError: return "ModelDeploymentError"
        case .modelTuning: return "ModelTuning"
        case .starting: return "Starting"
        case .stopped: return "Stopped"
        case .stopping: return "Stopping"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AutoMLJobSecondaryStatus(rawValue: rawValue) ?? AutoMLJobSecondaryStatus.sdkUnknown(rawValue)
    }
}
