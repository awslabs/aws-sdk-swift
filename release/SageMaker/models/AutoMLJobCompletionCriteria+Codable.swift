// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutoMLJobCompletionCriteria: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maxAutoMLJobRuntimeInSeconds = "MaxAutoMLJobRuntimeInSeconds"
        case maxCandidates = "MaxCandidates"
        case maxRuntimePerTrainingJobInSeconds = "MaxRuntimePerTrainingJobInSeconds"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxAutoMLJobRuntimeInSeconds = maxAutoMLJobRuntimeInSeconds {
            try encodeContainer.encode(maxAutoMLJobRuntimeInSeconds, forKey: .maxAutoMLJobRuntimeInSeconds)
        }
        if let maxCandidates = maxCandidates {
            try encodeContainer.encode(maxCandidates, forKey: .maxCandidates)
        }
        if let maxRuntimePerTrainingJobInSeconds = maxRuntimePerTrainingJobInSeconds {
            try encodeContainer.encode(maxRuntimePerTrainingJobInSeconds, forKey: .maxRuntimePerTrainingJobInSeconds)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxCandidatesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxCandidates)
        maxCandidates = maxCandidatesDecoded
        let maxRuntimePerTrainingJobInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxRuntimePerTrainingJobInSeconds)
        maxRuntimePerTrainingJobInSeconds = maxRuntimePerTrainingJobInSecondsDecoded
        let maxAutoMLJobRuntimeInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxAutoMLJobRuntimeInSeconds)
        maxAutoMLJobRuntimeInSeconds = maxAutoMLJobRuntimeInSecondsDecoded
    }
}
