// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMonitoringSchedulesOutputBody: Equatable {
    public let monitoringScheduleSummaries: [MonitoringScheduleSummary]?
    public let nextToken: String?
}

extension ListMonitoringSchedulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case monitoringScheduleSummaries = "MonitoringScheduleSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitoringScheduleSummariesContainer = try containerValues.decodeIfPresent([MonitoringScheduleSummary].self, forKey: .monitoringScheduleSummaries)
        var monitoringScheduleSummariesDecoded0:[MonitoringScheduleSummary]? = nil
        if let monitoringScheduleSummariesContainer = monitoringScheduleSummariesContainer {
            monitoringScheduleSummariesDecoded0 = [MonitoringScheduleSummary]()
            for structure0 in monitoringScheduleSummariesContainer {
                monitoringScheduleSummariesDecoded0?.append(structure0)
            }
        }
        monitoringScheduleSummaries = monitoringScheduleSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
