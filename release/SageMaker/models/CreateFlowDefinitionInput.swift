// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFlowDefinitionInput: Equatable {
    /// <p>The name of your flow definition.</p>
    public let flowDefinitionName: String?
    /// <p>An object containing information about the events that trigger a human workflow.</p>
    public let humanLoopActivationConfig: HumanLoopActivationConfig?
    /// <p>An object containing information about the tasks the human reviewers will perform.</p>
    public let humanLoopConfig: HumanLoopConfig?
    /// <p>Container for configuring the source of human task requests. Use to specify if
    ///       Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    public let humanLoopRequestSource: HumanLoopRequestSource?
    /// <p>An object containing information about where the human review results will be uploaded.</p>
    public let outputConfig: FlowDefinitionOutputConfig?
    /// <p>The Amazon Resource Name (ARN) of the role needed to call other services on your behalf. For example, <code>arn:aws:iam::1234567890:role/service-role/AmazonSageMaker-ExecutionRole-20180111T151298</code>.</p>
    public let roleArn: String?
    /// <p>An array of key-value pairs that contain metadata to help you categorize and organize a flow definition. Each tag consists of a key and a value, both of which you define.</p>
    public let tags: [Tag]?

    public init (
        flowDefinitionName: String? = nil,
        humanLoopActivationConfig: HumanLoopActivationConfig? = nil,
        humanLoopConfig: HumanLoopConfig? = nil,
        humanLoopRequestSource: HumanLoopRequestSource? = nil,
        outputConfig: FlowDefinitionOutputConfig? = nil,
        roleArn: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.flowDefinitionName = flowDefinitionName
        self.humanLoopActivationConfig = humanLoopActivationConfig
        self.humanLoopConfig = humanLoopConfig
        self.humanLoopRequestSource = humanLoopRequestSource
        self.outputConfig = outputConfig
        self.roleArn = roleArn
        self.tags = tags
    }
}
