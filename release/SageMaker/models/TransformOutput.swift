// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the results of a transform job.</p>
public struct TransformOutput: Equatable {
    /// <p>The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http
    ///             call to transfer data from the transform job.</p>
    public let accept: String?
    /// <p>Defines how to assemble the results of the transform job as a single S3 object. Choose
    ///             a format that is most convenient to you. To concatenate the results in binary format,
    ///             specify <code>None</code>. To add a newline character at the end of every transformed
    ///             record, specify
    ///             <code>Line</code>.</p>
    public let assembleWith: AssemblyType?
    /// <p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using
    ///             Amazon S3 server-side encryption. The <code>KmsKeyId</code> can be any of the following
    ///             formats: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>Key ARN:
    ///                         <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>Alias name: <code>alias/ExampleAlias</code>
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>Alias name ARN:
    ///                         <code>arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias</code>
    ///                 </p>
    ///             </li>
    ///          </ul>
    ///
    ///
    ///         <p>If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your
    ///             role's account. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html">KMS-Managed Encryption Keys</a> in the
    ///                 <i>Amazon Simple Storage Service
    ///                 Developer Guide.</i>
    ///
    ///          </p>
    ///         <p>The KMS key policy must grant permission to the IAM role that you specify in your
    ///                 <a>CreateModel</a> request. For more information, see <a href="http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html">Using
    ///                 Key Policies in AWS KMS</a> in the <i>AWS Key Management Service Developer
    ///                 Guide</i>.</p>
    public let kmsKeyId: String?
    /// <p>The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job. For
    ///             example, <code>s3://bucket-name/key-name-prefix</code>.</p>
    ///         <p>For every S3 object used as input for the transform job, batch transform stores the
    ///             transformed data with an .<code>out</code> suffix in a corresponding subfolder in the
    ///             location in the output prefix. For example, for the input data stored at
    ///                 <code>s3://bucket-name/input-name-prefix/dataset01/data.csv</code>, batch transform
    ///             stores the transformed data at
    ///                 <code>s3://bucket-name/output-name-prefix/input-name-prefix/data.csv.out</code>.
    ///             Batch transform doesn't upload partially processed objects. For an input S3 object that
    ///             contains multiple records, it creates an .<code>out</code> file only if the transform
    ///             job succeeds on the entire file. When the input contains multiple S3 objects, the batch
    ///             transform job processes the listed S3 objects and uploads only the output for
    ///             successfully processed objects. If any object fails in the transform job batch transform
    ///             marks the job as failed to prompt investigation.</p>
    public let s3OutputPath: String?

    public init (
        accept: String? = nil,
        assembleWith: AssemblyType? = nil,
        kmsKeyId: String? = nil,
        s3OutputPath: String? = nil
    )
    {
        self.accept = accept
        self.assembleWith = assembleWith
        self.kmsKeyId = kmsKeyId
        self.s3OutputPath = s3OutputPath
    }
}
