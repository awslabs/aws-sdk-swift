// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AssociationEdgeType {
    case associatedWith
    case contributedTo
    case derivedFrom
    case produced
    case sdkUnknown(String)
}

extension AssociationEdgeType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AssociationEdgeType] {
        return [
            .associatedWith,
            .contributedTo,
            .derivedFrom,
            .produced,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .associatedWith: return "AssociatedWith"
        case .contributedTo: return "ContributedTo"
        case .derivedFrom: return "DerivedFrom"
        case .produced: return "Produced"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AssociationEdgeType(rawValue: rawValue) ?? AssociationEdgeType.sdkUnknown(rawValue)
    }
}
