// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListExperimentsOutputBody: Equatable {
    public let experimentSummaries: [ExperimentSummary]?
    public let nextToken: String?
}

extension ListExperimentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case experimentSummaries = "ExperimentSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let experimentSummariesContainer = try containerValues.decodeIfPresent([ExperimentSummary].self, forKey: .experimentSummaries)
        var experimentSummariesDecoded0:[ExperimentSummary]? = nil
        if let experimentSummariesContainer = experimentSummariesContainer {
            experimentSummariesDecoded0 = [ExperimentSummary]()
            for structure0 in experimentSummariesContainer {
                experimentSummariesDecoded0?.append(structure0)
            }
        }
        experimentSummaries = experimentSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
