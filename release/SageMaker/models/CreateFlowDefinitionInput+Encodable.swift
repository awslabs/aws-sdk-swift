// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateFlowDefinitionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case flowDefinitionName = "FlowDefinitionName"
        case humanLoopActivationConfig = "HumanLoopActivationConfig"
        case humanLoopConfig = "HumanLoopConfig"
        case humanLoopRequestSource = "HumanLoopRequestSource"
        case outputConfig = "OutputConfig"
        case roleArn = "RoleArn"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let flowDefinitionName = flowDefinitionName {
            try encodeContainer.encode(flowDefinitionName, forKey: .flowDefinitionName)
        }
        if let humanLoopActivationConfig = humanLoopActivationConfig {
            try encodeContainer.encode(humanLoopActivationConfig, forKey: .humanLoopActivationConfig)
        }
        if let humanLoopConfig = humanLoopConfig {
            try encodeContainer.encode(humanLoopConfig, forKey: .humanLoopConfig)
        }
        if let humanLoopRequestSource = humanLoopRequestSource {
            try encodeContainer.encode(humanLoopRequestSource, forKey: .humanLoopRequestSource)
        }
        if let outputConfig = outputConfig {
            try encodeContainer.encode(outputConfig, forKey: .outputConfig)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
