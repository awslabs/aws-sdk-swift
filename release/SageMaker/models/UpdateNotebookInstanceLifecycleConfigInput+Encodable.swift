// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateNotebookInstanceLifecycleConfigInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case notebookInstanceLifecycleConfigName = "NotebookInstanceLifecycleConfigName"
        case onCreate = "OnCreate"
        case onStart = "OnStart"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName {
            try encodeContainer.encode(notebookInstanceLifecycleConfigName, forKey: .notebookInstanceLifecycleConfigName)
        }
        if let onCreate = onCreate {
            var onCreateContainer = encodeContainer.nestedUnkeyedContainer(forKey: .onCreate)
            for notebookinstancelifecycleconfiglist0 in onCreate {
                try onCreateContainer.encode(notebookinstancelifecycleconfiglist0)
            }
        }
        if let onStart = onStart {
            var onStartContainer = encodeContainer.nestedUnkeyedContainer(forKey: .onStart)
            for notebookinstancelifecycleconfiglist0 in onStart {
                try onStartContainer.encode(notebookinstancelifecycleconfiglist0)
            }
        }
    }
}
