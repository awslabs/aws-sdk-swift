// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPipelineParametersForExecutionOutputBody: Equatable {
    public let pipelineParameters: [Parameter]?
    public let nextToken: String?
}

extension ListPipelineParametersForExecutionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case pipelineParameters = "PipelineParameters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelineParametersContainer = try containerValues.decodeIfPresent([Parameter].self, forKey: .pipelineParameters)
        var pipelineParametersDecoded0:[Parameter]? = nil
        if let pipelineParametersContainer = pipelineParametersContainer {
            pipelineParametersDecoded0 = [Parameter]()
            for structure0 in pipelineParametersContainer {
                pipelineParametersDecoded0?.append(structure0)
            }
        }
        pipelineParameters = pipelineParametersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
