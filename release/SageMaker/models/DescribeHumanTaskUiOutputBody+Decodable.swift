// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeHumanTaskUiOutputBody: Equatable {
    public let humanTaskUiArn: String?
    public let humanTaskUiName: String?
    public let humanTaskUiStatus: HumanTaskUiStatus?
    public let creationTime: Date?
    public let uiTemplate: UiTemplateInfo?
}

extension DescribeHumanTaskUiOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case creationTime = "CreationTime"
        case humanTaskUiArn = "HumanTaskUiArn"
        case humanTaskUiName = "HumanTaskUiName"
        case humanTaskUiStatus = "HumanTaskUiStatus"
        case uiTemplate = "UiTemplate"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let humanTaskUiArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanTaskUiArn)
        humanTaskUiArn = humanTaskUiArnDecoded
        let humanTaskUiNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .humanTaskUiName)
        humanTaskUiName = humanTaskUiNameDecoded
        let humanTaskUiStatusDecoded = try containerValues.decodeIfPresent(HumanTaskUiStatus.self, forKey: .humanTaskUiStatus)
        humanTaskUiStatus = humanTaskUiStatusDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let uiTemplateDecoded = try containerValues.decodeIfPresent(UiTemplateInfo.self, forKey: .uiTemplate)
        uiTemplate = uiTemplateDecoded
    }
}
