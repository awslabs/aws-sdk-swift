// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EndpointStatus {
    case creating
    case deleting
    case failed
    case inService
    case outOfService
    case rollingBack
    case systemUpdating
    case updating
    case sdkUnknown(String)
}

extension EndpointStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EndpointStatus] {
        return [
            .creating,
            .deleting,
            .failed,
            .inService,
            .outOfService,
            .rollingBack,
            .systemUpdating,
            .updating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .creating: return "Creating"
        case .deleting: return "Deleting"
        case .failed: return "Failed"
        case .inService: return "InService"
        case .outOfService: return "OutOfService"
        case .rollingBack: return "RollingBack"
        case .systemUpdating: return "SystemUpdating"
        case .updating: return "Updating"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EndpointStatus(rawValue: rawValue) ?? EndpointStatus.sdkUnknown(rawValue)
    }
}
