// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListAppImageConfigsInput: Equatable {
    /// <p>A filter that returns only AppImageConfigs created on or after the specified time.</p>
    public let creationTimeAfter: Date?
    /// <p>A filter that returns only AppImageConfigs created on or before the specified time.</p>
    public let creationTimeBefore: Date?
    /// <p>The maximum number of AppImageConfigs to return in the response. The default value is
    ///         10. </p>
    public let maxResults: Int?
    /// <p>A filter that returns only AppImageConfigs modified on or after the specified time.</p>
    public let modifiedTimeAfter: Date?
    /// <p>A filter that returns only AppImageConfigs modified on or before the specified time.</p>
    public let modifiedTimeBefore: Date?
    /// <p>A filter that returns only AppImageConfigs whose name contains the specified string.</p>
    public let nameContains: String?
    /// <p>If the previous call to <code>ListImages</code> didn't return the full set of
    ///         AppImageConfigs, the call returns a token for getting the next set of AppImageConfigs.</p>
    public let nextToken: String?
    /// <p>The property used to sort results. The default value is <code>CreationTime</code>.</p>
    public let sortBy: AppImageConfigSortKey?
    /// <p>The sort order. The default value is <code>Descending</code>.</p>
    public let sortOrder: SortOrder?

    public init (
        creationTimeAfter: Date? = nil,
        creationTimeBefore: Date? = nil,
        maxResults: Int? = nil,
        modifiedTimeAfter: Date? = nil,
        modifiedTimeBefore: Date? = nil,
        nameContains: String? = nil,
        nextToken: String? = nil,
        sortBy: AppImageConfigSortKey? = nil,
        sortOrder: SortOrder? = nil
    )
    {
        self.creationTimeAfter = creationTimeAfter
        self.creationTimeBefore = creationTimeBefore
        self.maxResults = maxResults
        self.modifiedTimeAfter = modifiedTimeAfter
        self.modifiedTimeBefore = modifiedTimeBefore
        self.nameContains = nameContains
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
