// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateAutoMLJobInput: Equatable {
    /// <p>Contains <code>CompletionCriteria</code> and <code>SecurityConfig</code> settings for
    ///          the AutoML job.</p>
    public let autoMLJobConfig: AutoMLJobConfig?
    /// <p>Identifies an Autopilot job. The name must be unique to your account and is
    ///          case-insensitive.</p>
    public let autoMLJobName: String?
    /// <p>Defines the objective metric used to measure the predictive quality of an AutoML job.
    ///          You provide an <a>AutoMLJobObjective$MetricName</a> and Autopilot infers whether to
    ///          minimize or maximize it.</p>
    public let autoMLJobObjective: AutoMLJobObjective?
    /// <p>Generates possible candidates without training the models. A candidate is a combination
    ///          of data preprocessors, algorithms, and algorithm parameter settings.</p>
    public let generateCandidateDefinitionsOnly: Bool
    /// <p>An array of channel objects that describes the input data and its location. Each channel
    ///          is a named input source. Similar to <code>InputDataConfig</code> supported by . Format(s) supported: CSV. Minimum
    ///          of 500 rows.</p>
    public let inputDataConfig: [AutoMLChannel]?
    /// <p>Specifies how to generate the endpoint name for an automatic one-click Autopilot model
    ///          deployment.</p>
    public let modelDeployConfig: ModelDeployConfig?
    /// <p>Provides information about encryption and the Amazon S3 output path needed to store
    ///          artifacts from an AutoML job. Format(s) supported: CSV.</p>
    ///
    ///          <p><para>Specifies whether to automatically deploy the best &ATP; model to an
    ///          endpoint and the name of that endpoint if deployed automatically.</para></p>
    public let outputDataConfig: AutoMLOutputDataConfig?
    /// <p>Defines the type of supervised learning available for the candidates. Options include:
    ///             <code>BinaryClassification</code>, <code>MulticlassClassification</code>, and
    ///             <code>Regression</code>. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-automate-model-development-problem-types.html">
    ///             Amazon SageMaker Autopilot problem types and algorithm support</a>.</p>
    public let problemType: ProblemType?
    /// <p>The ARN of the role that is used to access the data.</p>
    ///
    ///          <p><para>Specifies whether to automatically deploy the best &ATP; model to an
    ///          endpoint and the name of that endpoint if deployed automatically.</para></p>
    public let roleArn: String?
    /// <p>Each tag consists of a key and an optional value. Tag keys must be unique per
    ///          resource.</p>
    public let tags: [Tag]?

    public init (
        autoMLJobConfig: AutoMLJobConfig? = nil,
        autoMLJobName: String? = nil,
        autoMLJobObjective: AutoMLJobObjective? = nil,
        generateCandidateDefinitionsOnly: Bool = false,
        inputDataConfig: [AutoMLChannel]? = nil,
        modelDeployConfig: ModelDeployConfig? = nil,
        outputDataConfig: AutoMLOutputDataConfig? = nil,
        problemType: ProblemType? = nil,
        roleArn: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.autoMLJobConfig = autoMLJobConfig
        self.autoMLJobName = autoMLJobName
        self.autoMLJobObjective = autoMLJobObjective
        self.generateCandidateDefinitionsOnly = generateCandidateDefinitionsOnly
        self.inputDataConfig = inputDataConfig
        self.modelDeployConfig = modelDeployConfig
        self.outputDataConfig = outputDataConfig
        self.problemType = problemType
        self.roleArn = roleArn
        self.tags = tags
    }
}
