// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceInventoryOutputBody: Equatable {
    public let resourceInventoryList: [ResourceInventory]?
    public let nextToken: String?
}

extension ListResourceInventoryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case resourceInventoryList = "ResourceInventoryList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceInventoryListContainer = try containerValues.decodeIfPresent([ResourceInventory].self, forKey: .resourceInventoryList)
        var resourceInventoryListDecoded0:[ResourceInventory]? = nil
        if let resourceInventoryListContainer = resourceInventoryListContainer {
            resourceInventoryListDecoded0 = [ResourceInventory]()
            for structure0 in resourceInventoryListContainer {
                resourceInventoryListDecoded0?.append(structure0)
            }
        }
        resourceInventoryList = resourceInventoryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
