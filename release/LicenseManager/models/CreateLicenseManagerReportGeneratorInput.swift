// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateLicenseManagerReportGeneratorInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    public let clientToken: String?
    /// <p>Description of the report generator.</p>
    public let description: String?
    /// <p>Defines the type of license configuration the report generator tracks.</p>
    public let reportContext: ReportContext?
    /// <p>Frequency by which reports are generated.  Reports can be generated daily, monthly, or weekly.</p>
    public let reportFrequency: ReportFrequency?
    /// <p>Name of the report generator.</p>
    public let reportGeneratorName: String?
    /// <p>Tags to add to the report generator.</p>
    public let tags: [Tag]?
    /// <p>Type of reports to generate. The following report types an be generated:</p>
    ///          <ul>
    ///             <li>
    ///                <p>License configuration report - Reports on the number and details of consumed licenses for a license configuration.</p>
    ///             </li>
    ///             <li>
    ///                <p>Resource report - Reports on the tracked licenses and resource consumption for a license configuration.</p>
    ///             </li>
    ///          </ul>
    public let type: [ReportType]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        reportContext: ReportContext? = nil,
        reportFrequency: ReportFrequency? = nil,
        reportGeneratorName: String? = nil,
        tags: [Tag]? = nil,
        type: [ReportType]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.reportContext = reportContext
        self.reportFrequency = reportFrequency
        self.reportGeneratorName = reportGeneratorName
        self.tags = tags
        self.type = type
    }
}
