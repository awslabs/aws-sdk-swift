// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTokenOutputBody: Equatable {
    public let tokenId: String?
    public let tokenType: TokenType?
    public let token: String?
}

extension CreateTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case token = "Token"
        case tokenId = "TokenId"
        case tokenType = "TokenType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tokenIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tokenId)
        tokenId = tokenIdDecoded
        let tokenTypeDecoded = try containerValues.decodeIfPresent(TokenType.self, forKey: .tokenType)
        tokenType = tokenTypeDecoded
        let tokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .token)
        token = tokenDecoded
    }
}
