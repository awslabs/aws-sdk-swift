// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describe the details of a report generator.</p>
public struct ReportGenerator: Equatable {
    /// <p>Time the report was created.</p>
    public let createTime: String?
    /// <p>Description of the report generator.</p>
    public let description: String?
    /// <p>Time the last report was generated at.</p>
    public let lastReportGenerationTime: String?
    /// <p>Failure message for the last report generation attempt.</p>
    public let lastRunFailureReason: String?
    /// <p>Status of the last report generation attempt.</p>
    public let lastRunStatus: String?
    /// <p>Amazon Resource Number (ARN) of the report generator.</p>
    public let licenseManagerReportGeneratorArn: String?
    /// <p>License configuration type this generator reports on.</p>
    public let reportContext: ReportContext?
    /// <p>The AWS account ID used to create the report generator.</p>
    public let reportCreatorAccount: String?
    /// <p>Details on how frequently reports are generated.</p>
    public let reportFrequency: ReportFrequency?
    /// <p>Name of the report generator.</p>
    public let reportGeneratorName: String?
    /// <p>Type of reports that are generated.</p>
    public let reportType: [ReportType]?
    /// <p>Details of the S3 bucket that report generator reports are published to.</p>
    public let s3Location: S3Location?
    /// <p>Tags associated with the report generator.</p>
    public let tags: [Tag]?

    public init (
        createTime: String? = nil,
        description: String? = nil,
        lastReportGenerationTime: String? = nil,
        lastRunFailureReason: String? = nil,
        lastRunStatus: String? = nil,
        licenseManagerReportGeneratorArn: String? = nil,
        reportContext: ReportContext? = nil,
        reportCreatorAccount: String? = nil,
        reportFrequency: ReportFrequency? = nil,
        reportGeneratorName: String? = nil,
        reportType: [ReportType]? = nil,
        s3Location: S3Location? = nil,
        tags: [Tag]? = nil
    )
    {
        self.createTime = createTime
        self.description = description
        self.lastReportGenerationTime = lastReportGenerationTime
        self.lastRunFailureReason = lastRunFailureReason
        self.lastRunStatus = lastRunStatus
        self.licenseManagerReportGeneratorArn = licenseManagerReportGeneratorArn
        self.reportContext = reportContext
        self.reportCreatorAccount = reportCreatorAccount
        self.reportFrequency = reportFrequency
        self.reportGeneratorName = reportGeneratorName
        self.reportType = reportType
        self.s3Location = s3Location
        self.tags = tags
    }
}
