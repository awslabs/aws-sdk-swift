// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ResourceType {
    case ec2Ami
    case ec2Host
    case ec2Instance
    case rds
    case systemsManagerManagedInstance
    case sdkUnknown(String)
}

extension ResourceType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ResourceType] {
        return [
            .ec2Ami,
            .ec2Host,
            .ec2Instance,
            .rds,
            .systemsManagerManagedInstance,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ec2Ami: return "EC2_AMI"
        case .ec2Host: return "EC2_HOST"
        case .ec2Instance: return "EC2_INSTANCE"
        case .rds: return "RDS"
        case .systemsManagerManagedInstance: return "SYSTEMS_MANAGER_MANAGED_INSTANCE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ResourceType(rawValue: rawValue) ?? ResourceType.sdkUnknown(rawValue)
    }
}
