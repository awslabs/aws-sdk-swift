// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetLicenseConfigurationOutput: Equatable {
    /// <p>Automated discovery information.</p>
    public let automatedDiscoveryInformation: AutomatedDiscoveryInformation?
    /// <p>Summaries of the licenses consumed by resources.</p>
    public let consumedLicenseSummaryList: [ConsumedLicenseSummary]?
    /// <p>Number of licenses assigned to resources.</p>
    public let consumedLicenses: Int?
    /// <p>Description of the license configuration.</p>
    public let description: String?
    /// <p>When true, disassociates a resource when software is uninstalled.</p>
    public let disassociateWhenNotFound: Bool?
    /// <p>Amazon Resource Name (ARN) of the license configuration.</p>
    public let licenseConfigurationArn: String?
    /// <p>Unique ID for the license configuration.</p>
    public let licenseConfigurationId: String?
    /// <p>Number of available licenses.</p>
    public let licenseCount: Int?
    /// <p>Sets the number of available licenses as a hard limit.</p>
    public let licenseCountHardLimit: Bool?
    /// <p>Dimension on which the licenses are counted.</p>
    public let licenseCountingType: LicenseCountingType?
    /// <p>License rules.</p>
    public let licenseRules: [String]?
    /// <p>Summaries of the managed resources.</p>
    public let managedResourceSummaryList: [ManagedResourceSummary]?
    /// <p>Name of the license configuration.</p>
    public let name: String?
    /// <p>Account ID of the owner of the license configuration.</p>
    public let ownerAccountId: String?
    /// <p>Product information.</p>
    public let productInformationList: [ProductInformation]?
    /// <p>License configuration status.</p>
    public let status: String?
    /// <p>Tags for the license configuration.</p>
    public let tags: [Tag]?

    public init (
        automatedDiscoveryInformation: AutomatedDiscoveryInformation? = nil,
        consumedLicenseSummaryList: [ConsumedLicenseSummary]? = nil,
        consumedLicenses: Int? = nil,
        description: String? = nil,
        disassociateWhenNotFound: Bool? = nil,
        licenseConfigurationArn: String? = nil,
        licenseConfigurationId: String? = nil,
        licenseCount: Int? = nil,
        licenseCountHardLimit: Bool? = nil,
        licenseCountingType: LicenseCountingType? = nil,
        licenseRules: [String]? = nil,
        managedResourceSummaryList: [ManagedResourceSummary]? = nil,
        name: String? = nil,
        ownerAccountId: String? = nil,
        productInformationList: [ProductInformation]? = nil,
        status: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.automatedDiscoveryInformation = automatedDiscoveryInformation
        self.consumedLicenseSummaryList = consumedLicenseSummaryList
        self.consumedLicenses = consumedLicenses
        self.description = description
        self.disassociateWhenNotFound = disassociateWhenNotFound
        self.licenseConfigurationArn = licenseConfigurationArn
        self.licenseConfigurationId = licenseConfigurationId
        self.licenseCount = licenseCount
        self.licenseCountHardLimit = licenseCountHardLimit
        self.licenseCountingType = licenseCountingType
        self.licenseRules = licenseRules
        self.managedResourceSummaryList = managedResourceSummaryList
        self.name = name
        self.ownerAccountId = ownerAccountId
        self.productInformationList = productInformationList
        self.status = status
        self.tags = tags
    }
}
