// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLicenseInputBody: Equatable {
    public let licenseArn: String?
    public let version: String?
}

extension GetLicenseInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case licenseArn = "LicenseArn"
        case version = "Version"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let licenseArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .licenseArn)
        licenseArn = licenseArnDecoded
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
    }
}
