// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ExtendLicenseConsumptionOutputBody: Equatable {
    public let licenseConsumptionToken: String?
    public let expiration: String?
}

extension ExtendLicenseConsumptionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case expiration = "Expiration"
        case licenseConsumptionToken = "LicenseConsumptionToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let licenseConsumptionTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .licenseConsumptionToken)
        licenseConsumptionToken = licenseConsumptionTokenDecoded
        let expirationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .expiration)
        expiration = expirationDecoded
    }
}
