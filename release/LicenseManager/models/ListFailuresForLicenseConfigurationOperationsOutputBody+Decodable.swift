// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFailuresForLicenseConfigurationOperationsOutputBody: Equatable {
    public let licenseOperationFailureList: [LicenseOperationFailure]?
    public let nextToken: String?
}

extension ListFailuresForLicenseConfigurationOperationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case licenseOperationFailureList = "LicenseOperationFailureList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let licenseOperationFailureListContainer = try containerValues.decodeIfPresent([LicenseOperationFailure].self, forKey: .licenseOperationFailureList)
        var licenseOperationFailureListDecoded0:[LicenseOperationFailure]? = nil
        if let licenseOperationFailureListContainer = licenseOperationFailureListContainer {
            licenseOperationFailureListDecoded0 = [LicenseOperationFailure]()
            for structure0 in licenseOperationFailureListContainer {
                licenseOperationFailureListDecoded0?.append(structure0)
            }
        }
        licenseOperationFailureList = licenseOperationFailureListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
