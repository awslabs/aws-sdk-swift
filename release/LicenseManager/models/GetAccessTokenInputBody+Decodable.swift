// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccessTokenInputBody: Equatable {
    public let token: String?
    public let tokenProperties: [String]?
}

extension GetAccessTokenInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case token = "Token"
        case tokenProperties = "TokenProperties"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .token)
        token = tokenDecoded
        let tokenPropertiesContainer = try containerValues.decodeIfPresent([String].self, forKey: .tokenProperties)
        var tokenPropertiesDecoded0:[String]? = nil
        if let tokenPropertiesContainer = tokenPropertiesContainer {
            tokenPropertiesDecoded0 = [String]()
            for string0 in tokenPropertiesContainer {
                tokenPropertiesDecoded0?.append(string0)
            }
        }
        tokenProperties = tokenPropertiesDecoded0
    }
}
