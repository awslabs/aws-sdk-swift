// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SuiteRunInformation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case createdAt
        case endAt
        case failed
        case passed
        case startedAt
        case status
        case suiteDefinitionId
        case suiteDefinitionName
        case suiteDefinitionVersion
        case suiteRunId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let endAt = endAt {
            try encodeContainer.encode(endAt.timeIntervalSince1970, forKey: .endAt)
        }
        if failed != 0 {
            try encodeContainer.encode(failed, forKey: .failed)
        }
        if passed != 0 {
            try encodeContainer.encode(passed, forKey: .passed)
        }
        if let startedAt = startedAt {
            try encodeContainer.encode(startedAt.timeIntervalSince1970, forKey: .startedAt)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let suiteDefinitionId = suiteDefinitionId {
            try encodeContainer.encode(suiteDefinitionId, forKey: .suiteDefinitionId)
        }
        if let suiteDefinitionName = suiteDefinitionName {
            try encodeContainer.encode(suiteDefinitionName, forKey: .suiteDefinitionName)
        }
        if let suiteDefinitionVersion = suiteDefinitionVersion {
            try encodeContainer.encode(suiteDefinitionVersion, forKey: .suiteDefinitionVersion)
        }
        if let suiteRunId = suiteRunId {
            try encodeContainer.encode(suiteRunId, forKey: .suiteRunId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let suiteDefinitionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .suiteDefinitionId)
        suiteDefinitionId = suiteDefinitionIdDecoded
        let suiteDefinitionVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .suiteDefinitionVersion)
        suiteDefinitionVersion = suiteDefinitionVersionDecoded
        let suiteDefinitionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .suiteDefinitionName)
        suiteDefinitionName = suiteDefinitionNameDecoded
        let suiteRunIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .suiteRunId)
        suiteRunId = suiteRunIdDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let startedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startedAt)
        startedAt = startedAtDecoded
        let endAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endAt)
        endAt = endAtDecoded
        let statusDecoded = try containerValues.decodeIfPresent(SuiteRunStatus.self, forKey: .status)
        status = statusDecoded
        let passedDecoded = try containerValues.decode(Int.self, forKey: .passed)
        passed = passedDecoded
        let failedDecoded = try containerValues.decode(Int.self, forKey: .failed)
        failed = failedDecoded
    }
}
