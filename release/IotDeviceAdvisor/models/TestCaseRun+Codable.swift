// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TestCaseRun: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case endTime
        case failure
        case logUrl
        case startTime
        case status
        case testCaseDefinitionId
        case testCaseDefinitionName
        case testCaseRunId
        case warnings
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endTime = endTime {
            try encodeContainer.encode(endTime.timeIntervalSince1970, forKey: .endTime)
        }
        if let failure = failure {
            try encodeContainer.encode(failure, forKey: .failure)
        }
        if let logUrl = logUrl {
            try encodeContainer.encode(logUrl, forKey: .logUrl)
        }
        if let startTime = startTime {
            try encodeContainer.encode(startTime.timeIntervalSince1970, forKey: .startTime)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let testCaseDefinitionId = testCaseDefinitionId {
            try encodeContainer.encode(testCaseDefinitionId, forKey: .testCaseDefinitionId)
        }
        if let testCaseDefinitionName = testCaseDefinitionName {
            try encodeContainer.encode(testCaseDefinitionName, forKey: .testCaseDefinitionName)
        }
        if let testCaseRunId = testCaseRunId {
            try encodeContainer.encode(testCaseRunId, forKey: .testCaseRunId)
        }
        if let warnings = warnings {
            try encodeContainer.encode(warnings, forKey: .warnings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let testCaseRunIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .testCaseRunId)
        testCaseRunId = testCaseRunIdDecoded
        let testCaseDefinitionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .testCaseDefinitionId)
        testCaseDefinitionId = testCaseDefinitionIdDecoded
        let testCaseDefinitionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .testCaseDefinitionName)
        testCaseDefinitionName = testCaseDefinitionNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(Status.self, forKey: .status)
        status = statusDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .endTime)
        endTime = endTimeDecoded
        let logUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logUrl)
        logUrl = logUrlDecoded
        let warningsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .warnings)
        warnings = warningsDecoded
        let failureDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failure)
        failure = failureDecoded
    }
}
