// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a service configuration for a VPC endpoint service.</p>
public struct ServiceConfiguration: Equatable {
    /// <p>Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.</p>
    public let acceptanceRequired: Bool
    /// <p>The Availability Zones in which the service is available.</p>
    public let availabilityZones: [String]?
    /// <p>The DNS names for the service.</p>
    public let baseEndpointDnsNames: [String]?
    /// <p>The Amazon Resource Names (ARNs) of the Gateway Load Balancers for the service.</p>
    public let gatewayLoadBalancerArns: [String]?
    /// <p>Indicates whether the service manages its VPC endpoints. Management of the service VPC
    ///             endpoints using the VPC endpoint API is restricted.</p>
    public let managesVpcEndpoints: Bool
    /// <p>The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.</p>
    public let networkLoadBalancerArns: [String]?
    /// <p>The private DNS name for the service.</p>
    public let privateDnsName: String?
    /// <p>Information about the endpoint service private DNS name configuration.</p>
    public let privateDnsNameConfiguration: PrivateDnsNameConfiguration?
    /// <p>The ID of the service.</p>
    public let serviceId: String?
    /// <p>The name of the service.</p>
    public let serviceName: String?
    /// <p>The service state.</p>
    public let serviceState: ServiceState?
    /// <p>The type of service.</p>
    public let serviceType: [ServiceTypeDetail]?
    /// <p>Any tags assigned to the service.</p>
    public let tags: [Tag]?

    public init (
        acceptanceRequired: Bool = false,
        availabilityZones: [String]? = nil,
        baseEndpointDnsNames: [String]? = nil,
        gatewayLoadBalancerArns: [String]? = nil,
        managesVpcEndpoints: Bool = false,
        networkLoadBalancerArns: [String]? = nil,
        privateDnsName: String? = nil,
        privateDnsNameConfiguration: PrivateDnsNameConfiguration? = nil,
        serviceId: String? = nil,
        serviceName: String? = nil,
        serviceState: ServiceState? = nil,
        serviceType: [ServiceTypeDetail]? = nil,
        tags: [Tag]? = nil
    )
    {
        self.acceptanceRequired = acceptanceRequired
        self.availabilityZones = availabilityZones
        self.baseEndpointDnsNames = baseEndpointDnsNames
        self.gatewayLoadBalancerArns = gatewayLoadBalancerArns
        self.managesVpcEndpoints = managesVpcEndpoints
        self.networkLoadBalancerArns = networkLoadBalancerArns
        self.privateDnsName = privateDnsName
        self.privateDnsNameConfiguration = privateDnsNameConfiguration
        self.serviceId = serviceId
        self.serviceName = serviceName
        self.serviceState = serviceState
        self.serviceType = serviceType
        self.tags = tags
    }
}
