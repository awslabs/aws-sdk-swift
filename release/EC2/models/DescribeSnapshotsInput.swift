// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeSnapshotsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>description</code> - A description of the snapshot.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>encrypted</code> - Indicates whether the snapshot is encrypted
    ///             (<code>true</code> | <code>false</code>)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>owner-alias</code> - The owner alias, from an Amazon-maintained list
    ///           (<code>amazon</code>).
    ///           This is not the user-configured AWS account alias set using the IAM console.
    ///           We recommend that you use the related parameter instead of this filter.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>owner-id</code> - The AWS account ID of the owner. We recommend that
    ///           you use the related parameter instead of this filter.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>progress</code> - The progress of the snapshot, as a percentage (for example,
    ///           80%).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>snapshot-id</code> - The snapshot ID.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>start-time</code> - The time stamp when the snapshot was initiated.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>status</code> - The status of the snapshot (<code>pending</code> |
    ///             <code>completed</code> | <code>error</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>volume-id</code> - The ID of the volume the snapshot is for.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>volume-size</code> - The size of the volume, in GiB.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in
    ///       paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns
    ///         <code>MaxResults</code> results in a single page along with a <code>NextToken</code>
    ///       response element. The remaining results of the initial request can be seen by sending another
    ///         <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This
    ///       value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000,
    ///       only 1,000 results are returned. If this parameter is not used, then
    ///         <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and
    ///       the snapshot IDs parameter in the same request.</p>
    public let maxResults: Int
    /// <p>The <code>NextToken</code> value returned from a previous paginated
    ///         <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the
    ///       results exceeded the value of that parameter. Pagination continues from the end of the
    ///       previous results that returned the <code>NextToken</code> value. This value is
    ///         <code>null</code> when there are no more results to return.</p>
    public let nextToken: String?
    /// <p>Scopes the results to snapshots with the specified owners. You can specify a combination of
    ///       AWS account IDs, <code>self</code>, and <code>amazon</code>.</p>
    public let ownerIds: [String]?
    /// <p>The IDs of the AWS accounts that can create volumes from the snapshot.</p>
    public let restorableByUserIds: [String]?
    /// <p>The snapshot IDs.</p>
    ///          <p>Default: Describes the snapshots for which you have create volume permissions.</p>
    public let snapshotIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        ownerIds: [String]? = nil,
        restorableByUserIds: [String]? = nil,
        snapshotIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.ownerIds = ownerIds
        self.restorableByUserIds = restorableByUserIds
        self.snapshotIds = snapshotIds
    }
}
