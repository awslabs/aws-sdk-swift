// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for DescribeScheduledInstances.</p>
public struct DescribeScheduledInstancesInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results to return in a single call.
    ///          This value can be between 5 and 300. The default value is 100.
    ///          To retrieve the remaining results, make another call with the returned
    ///          <code>NextToken</code> value.</p>
    public let maxResults: Int
    /// <p>The token for the next set of results.</p>
    public let nextToken: String?
    /// <p>The Scheduled Instance IDs.</p>
    public let scheduledInstanceIds: [String]?
    /// <p>The time period for the first schedule to start.</p>
    public let slotStartTimeRange: SlotStartTimeRangeRequest?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        scheduledInstanceIds: [String]? = nil,
        slotStartTimeRange: SlotStartTimeRangeRequest? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.scheduledInstanceIds = scheduledInstanceIds
        self.slotStartTimeRange = slotStartTimeRange
    }
}
