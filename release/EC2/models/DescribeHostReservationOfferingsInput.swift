// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeHostReservationOfferingsInput: Equatable {
    /// <p>The filters.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>instance-family</code> - The instance family of the offering (for example,
    ///                         <code>m4</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>payment-option</code> - The payment option (<code>NoUpfront</code> |
    ///                         <code>PartialUpfront</code> | <code>AllUpfront</code>).</p>
    ///             </li>
    ///          </ul>
    public let filter: [Filter]?
    /// <p>This is the maximum duration of the reservation to purchase, specified in seconds.
    ///             Reservations are available in one-year and three-year terms. The number of seconds
    ///             specified must be the number of seconds in a year (365x24x60x60) times one of the
    ///             supported durations (1 or 3). For example, specify 94608000 for three years.</p>
    public let maxDuration: Int
    /// <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p>
    public let maxResults: Int
    /// <p>This is the minimum duration of the reservation you'd like to purchase, specified
    ///             in seconds. Reservations are available in one-year and three-year terms. The number of
    ///             seconds specified must be the number of seconds in a year (365x24x60x60) times one of
    ///             the supported durations (1 or 3). For example, specify 31536000 for one year.</p>
    public let minDuration: Int
    /// <p>The token to use to retrieve the next page of results.</p>
    public let nextToken: String?
    /// <p>The ID of the reservation offering.</p>
    public let offeringId: String?

    public init (
        filter: [Filter]? = nil,
        maxDuration: Int = 0,
        maxResults: Int = 0,
        minDuration: Int = 0,
        nextToken: String? = nil,
        offeringId: String? = nil
    )
    {
        self.filter = filter
        self.maxDuration = maxDuration
        self.maxResults = maxResults
        self.minDuration = minDuration
        self.nextToken = nextToken
        self.offeringId = offeringId
    }
}
