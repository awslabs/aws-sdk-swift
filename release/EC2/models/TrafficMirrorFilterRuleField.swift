// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum TrafficMirrorFilterRuleField {
    case description
    case destinationPortRange
    case `protocol`
    case sourcePortRange
    case sdkUnknown(String)
}

extension TrafficMirrorFilterRuleField : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TrafficMirrorFilterRuleField] {
        return [
            .description,
            .destinationPortRange,
            .protocol,
            .sourcePortRange,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .description: return "description"
        case .destinationPortRange: return "destination-port-range"
        case .protocol: return "protocol"
        case .sourcePortRange: return "source-port-range"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TrafficMirrorFilterRuleField(rawValue: rawValue) ?? TrafficMirrorFilterRuleField.sdkUnknown(rawValue)
    }
}
