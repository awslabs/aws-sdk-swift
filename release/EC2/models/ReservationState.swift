// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ReservationState {
    case active
    case paymentFailed
    case paymentPending
    case retired
    case sdkUnknown(String)
}

extension ReservationState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ReservationState] {
        return [
            .active,
            .paymentFailed,
            .paymentPending,
            .retired,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "active"
        case .paymentFailed: return "payment-failed"
        case .paymentPending: return "payment-pending"
        case .retired: return "retired"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ReservationState(rawValue: rawValue) ?? ReservationState.sdkUnknown(rawValue)
    }
}
