// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a VPC endpoint service.</p>
public struct ServiceDetail: Equatable {
    /// <p>Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.</p>
    public let acceptanceRequired: Bool
    /// <p>The Availability Zones in which the service is available.</p>
    public let availabilityZones: [String]?
    /// <p>The DNS names for the service.</p>
    public let baseEndpointDnsNames: [String]?
    /// <p>Indicates whether the service manages its VPC endpoints. Management of the service VPC
    ///             endpoints using the VPC endpoint API is restricted.</p>
    public let managesVpcEndpoints: Bool
    /// <p>The AWS account ID of the service owner.</p>
    public let owner: String?
    /// <p>The private DNS name for the service.</p>
    public let privateDnsName: String?
    /// <p>The verification state of the VPC endpoint service.</p>
    ///         <p>Consumers of the endpoint service cannot use the private name when the state is not <code>verified</code>.</p>
    public let privateDnsNameVerificationState: DnsNameState?
    /// <p>The private DNS names assigned to the VPC endpoint service. </p>
    public let privateDnsNames: [PrivateDnsDetails]?
    /// <p>The ID of the endpoint service.</p>
    public let serviceId: String?
    /// <p>The Amazon Resource Name (ARN) of the service.</p>
    public let serviceName: String?
    /// <p>The type of service.</p>
    public let serviceType: [ServiceTypeDetail]?
    /// <p>Any tags assigned to the service.</p>
    public let tags: [Tag]?
    /// <p>Indicates whether the service supports endpoint policies.</p>
    public let vpcEndpointPolicySupported: Bool

    public init (
        acceptanceRequired: Bool = false,
        availabilityZones: [String]? = nil,
        baseEndpointDnsNames: [String]? = nil,
        managesVpcEndpoints: Bool = false,
        owner: String? = nil,
        privateDnsName: String? = nil,
        privateDnsNameVerificationState: DnsNameState? = nil,
        privateDnsNames: [PrivateDnsDetails]? = nil,
        serviceId: String? = nil,
        serviceName: String? = nil,
        serviceType: [ServiceTypeDetail]? = nil,
        tags: [Tag]? = nil,
        vpcEndpointPolicySupported: Bool = false
    )
    {
        self.acceptanceRequired = acceptanceRequired
        self.availabilityZones = availabilityZones
        self.baseEndpointDnsNames = baseEndpointDnsNames
        self.managesVpcEndpoints = managesVpcEndpoints
        self.owner = owner
        self.privateDnsName = privateDnsName
        self.privateDnsNameVerificationState = privateDnsNameVerificationState
        self.privateDnsNames = privateDnsNames
        self.serviceId = serviceId
        self.serviceName = serviceName
        self.serviceType = serviceType
        self.tags = tags
        self.vpcEndpointPolicySupported = vpcEndpointPolicySupported
    }
}
