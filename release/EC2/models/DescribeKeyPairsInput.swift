// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeKeyPairsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///          <ul>
    ///             <li>
    ///      		        <p>
    ///      			          <code>key-pair-id</code> - The ID of the key pair.</p>
    ///      	      </li>
    ///             <li>
    ///                <p>
    ///                   <code>fingerprint</code> - The fingerprint of the key pair.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>key-name</code> - The name of the key pair.</p>
    ///             </li>
    ///             <li>
    ///      		        <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///      	      </li>
    ///             <li>
    ///      		        <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///      	      </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The key pair names.</p>
    ///          <p>Default: Describes all your key pairs.</p>
    public let keyNames: [String]?
    /// <p>The IDs of the key pairs.</p>
    public let keyPairIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        keyNames: [String]? = nil,
        keyPairIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.keyNames = keyNames
        self.keyPairIds = keyPairIds
    }
}
