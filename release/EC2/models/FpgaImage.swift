// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an Amazon FPGA image (AFI).</p>
public struct FpgaImage: Equatable {
    /// <p>Indicates whether the AFI is public.</p>
    public let `public`: Bool
    /// <p>The date and time the AFI was created.</p>
    public let createTime: Date?
    /// <p>Indicates whether data retention support is enabled for the AFI.</p>
    public let dataRetentionSupport: Bool
    /// <p>The description of the AFI.</p>
    public let description: String?
    /// <p>The global FPGA image identifier (AGFI ID).</p>
    public let fpgaImageGlobalId: String?
    /// <p>The FPGA image identifier (AFI ID).</p>
    public let fpgaImageId: String?
    /// <p>The name of the AFI.</p>
    public let name: String?
    /// <p>The alias of the AFI owner. Possible values include <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>.</p>
    public let ownerAlias: String?
    /// <p>The AWS account ID of the AFI owner.</p>
    public let ownerId: String?
    /// <p>Information about the PCI bus.</p>
    public let pciId: PciId?
    /// <p>The product codes for the AFI.</p>
    public let productCodes: [ProductCode]?
    /// <p>The version of the AWS Shell that was used to create the bitstream.</p>
    public let shellVersion: String?
    /// <p>Information about the state of the AFI.</p>
    public let state: FpgaImageState?
    /// <p>Any tags assigned to the AFI.</p>
    public let tags: [Tag]?
    /// <p>The time of the most recent update to the AFI.</p>
    public let updateTime: Date?

    public init (
        `public`: Bool = false,
        createTime: Date? = nil,
        dataRetentionSupport: Bool = false,
        description: String? = nil,
        fpgaImageGlobalId: String? = nil,
        fpgaImageId: String? = nil,
        name: String? = nil,
        ownerAlias: String? = nil,
        ownerId: String? = nil,
        pciId: PciId? = nil,
        productCodes: [ProductCode]? = nil,
        shellVersion: String? = nil,
        state: FpgaImageState? = nil,
        tags: [Tag]? = nil,
        updateTime: Date? = nil
    )
    {
        self.`public` = `public`
        self.createTime = createTime
        self.dataRetentionSupport = dataRetentionSupport
        self.description = description
        self.fpgaImageGlobalId = fpgaImageGlobalId
        self.fpgaImageId = fpgaImageId
        self.name = name
        self.ownerAlias = ownerAlias
        self.ownerId = ownerId
        self.pciId = pciId
        self.productCodes = productCodes
        self.shellVersion = shellVersion
        self.state = state
        self.tags = tags
        self.updateTime = updateTime
    }
}
