// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeTagsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>key</code> - The tag key.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>resource-id</code> - The ID of the resource.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dedicated-host</code> | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> | <code>fpga-image</code> | <code>host-reservation</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>key-pair</code> | <code>launch-template</code> | <code>natgateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>placement-group</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>tag</code>:<key> - The key/value combination of the tag. For example,
    ///                 specify "tag:Owner" for the filter name and "TeamA" for the filter value to find
    ///                 resources with the tag "Owner=TeamA".</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>value</code> - The tag value.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results to return in a single call.
    ///       This value can be between 5 and 1000.
    /// 			To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.</p>
    public let maxResults: Int
    /// <p>The token to retrieve the next page of results.</p>
    public let nextToken: String?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
