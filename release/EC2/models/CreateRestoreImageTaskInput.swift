// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRestoreImageTaskInput: Equatable {
    /// <p>The name of the S3 bucket that contains the stored AMI object.</p>
    public let bucket: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///       and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///       Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The name for the restored AMI. The name must be unique for AMIs in the Region for this
    ///       account. If you do not provide a name, the new AMI gets the same name as the original
    ///       AMI.</p>
    public let name: String?
    /// <p>The name of the stored AMI object in the bucket.</p>
    public let objectKey: String?
    /// <p>The tags to apply to the AMI and snapshots on restoration. You can tag the AMI, the
    ///       snapshots, or both.</p>
    ///          <ul>
    ///             <li>
    ///                <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>To
    ///           tag the snapshots, the value for <code>ResourceType</code> must be <code>snapshot</code>. The
    ///           same tag is applied to all of the snapshots that are created.</p>
    ///             </li>
    ///          </ul>
    public let tagSpecifications: [TagSpecification]?

    public init (
        bucket: String? = nil,
        dryRun: Bool = false,
        name: String? = nil,
        objectKey: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.bucket = bucket
        self.dryRun = dryRun
        self.name = name
        self.objectKey = objectKey
        self.tagSpecifications = tagSpecifications
    }
}
