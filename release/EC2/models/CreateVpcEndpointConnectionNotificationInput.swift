// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVpcEndpointConnectionNotificationInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
    ///                 Idempotency</a>.</p>
    public let clientToken: String?
    /// <p>One or more endpoint events for which to receive notifications. Valid values are
    ///                 <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and
    ///                 <code>Reject</code>.</p>
    public let connectionEvents: [String]?
    /// <p>The ARN of the SNS topic for the notifications.</p>
    public let connectionNotificationArn: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The ID of the endpoint service.</p>
    public let serviceId: String?
    /// <p>The ID of the endpoint.</p>
    public let vpcEndpointId: String?

    public init (
        clientToken: String? = nil,
        connectionEvents: [String]? = nil,
        connectionNotificationArn: String? = nil,
        dryRun: Bool = false,
        serviceId: String? = nil,
        vpcEndpointId: String? = nil
    )
    {
        self.clientToken = clientToken
        self.connectionEvents = connectionEvents
        self.connectionNotificationArn = connectionNotificationArn
        self.dryRun = dryRun
        self.serviceId = serviceId
        self.vpcEndpointId = vpcEndpointId
    }
}
