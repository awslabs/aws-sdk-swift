// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes the properties of the Dedicated Host.</p>
public struct Host: Equatable {
    /// <p>The time that the Dedicated Host was allocated.</p>
    public let allocationTime: Date?
    /// <p>Indicates whether the Dedicated Host supports multiple instance types of the same instance family.
    /// 			If the value is <code>on</code>, the Dedicated Host supports multiple instance types in the instance family.
    /// 		    If the value is <code>off</code>, the Dedicated Host supports a single instance type only.</p>
    public let allowsMultipleInstanceTypes: AllowsMultipleInstanceTypes?
    /// <p>Whether auto-placement is on or off.</p>
    public let autoPlacement: AutoPlacement?
    /// <p>The Availability Zone of the Dedicated Host.</p>
    public let availabilityZone: String?
    /// <p>The ID of the Availability Zone in which the Dedicated Host is allocated.</p>
    public let availabilityZoneId: String?
    /// <p>Information about the instances running on the Dedicated Host.</p>
    public let availableCapacity: AvailableCapacity?
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    public let clientToken: String?
    /// <p>The ID of the Dedicated Host.</p>
    public let hostId: String?
    /// <p>The hardware specifications of the Dedicated Host.</p>
    public let hostProperties: HostProperties?
    /// <p>Indicates whether host recovery is enabled or disabled for the Dedicated Host.</p>
    public let hostRecovery: HostRecovery?
    /// <p>The reservation ID of the Dedicated Host. This returns a <code>null</code> response
    ///             if the Dedicated Host doesn't have an associated reservation.</p>
    public let hostReservationId: String?
    /// <p>The IDs and instance type that are currently running on the Dedicated
    ///             Host.</p>
    public let instances: [HostInstance]?
    /// <p>Indicates whether the Dedicated Host is in a host resource group. If
    /// 			<b>memberOfServiceLinkedResourceGroup</b> is
    /// 			<code>true</code>, the host is in a host resource group; otherwise, it is not.</p>
    public let memberOfServiceLinkedResourceGroup: Bool
    /// <p>The ID of the AWS account that owns the Dedicated Host.</p>
    public let ownerId: String?
    /// <p>The time that the Dedicated Host was released.</p>
    public let releaseTime: Date?
    /// <p>The Dedicated Host's state.</p>
    public let state: AllocationState?
    /// <p>Any tags assigned to the Dedicated Host.</p>
    public let tags: [Tag]?

    public init (
        allocationTime: Date? = nil,
        allowsMultipleInstanceTypes: AllowsMultipleInstanceTypes? = nil,
        autoPlacement: AutoPlacement? = nil,
        availabilityZone: String? = nil,
        availabilityZoneId: String? = nil,
        availableCapacity: AvailableCapacity? = nil,
        clientToken: String? = nil,
        hostId: String? = nil,
        hostProperties: HostProperties? = nil,
        hostRecovery: HostRecovery? = nil,
        hostReservationId: String? = nil,
        instances: [HostInstance]? = nil,
        memberOfServiceLinkedResourceGroup: Bool = false,
        ownerId: String? = nil,
        releaseTime: Date? = nil,
        state: AllocationState? = nil,
        tags: [Tag]? = nil
    )
    {
        self.allocationTime = allocationTime
        self.allowsMultipleInstanceTypes = allowsMultipleInstanceTypes
        self.autoPlacement = autoPlacement
        self.availabilityZone = availabilityZone
        self.availabilityZoneId = availabilityZoneId
        self.availableCapacity = availableCapacity
        self.clientToken = clientToken
        self.hostId = hostId
        self.hostProperties = hostProperties
        self.hostRecovery = hostRecovery
        self.hostReservationId = hostReservationId
        self.instances = instances
        self.memberOfServiceLinkedResourceGroup = memberOfServiceLinkedResourceGroup
        self.ownerId = ownerId
        self.releaseTime = releaseTime
        self.state = state
        self.tags = tags
    }
}
