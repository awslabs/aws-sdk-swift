// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeVolumesModificationsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>modification-state</code> - The current modification state (modifying |
    ///           optimizing | completed | failed).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>original-iops</code> - The original IOPS rate of the volume.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>original-size</code> - The original size of the volume, in GiB.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>original-volume-type</code> - The original volume type of the volume (standard |
    ///           io1 | io2 | gp2 | sc1 | st1).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>originalMultiAttachEnabled</code> - Indicates whether Multi-Attach support was enabled (true | false).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>start-time</code> - The modification start time.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>target-iops</code> - The target IOPS rate of the volume.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>target-size</code> - The target size of the volume, in GiB.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>target-volume-type</code> - The target volume type of the volume (standard |
    ///           io1 | io2 | gp2 | sc1 | st1).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>targetMultiAttachEnabled</code> - Indicates whether Multi-Attach support is to be enabled (true | false).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>volume-id</code> - The ID of the volume.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results (up to a limit of 500) to be returned in a paginated
    ///       request.</p>
    public let maxResults: Int
    /// <p>The <code>nextToken</code> value returned by a previous paginated request.</p>
    public let nextToken: String?
    /// <p>The IDs of the volumes.</p>
    public let volumeIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        volumeIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.volumeIds = volumeIds
    }
}
