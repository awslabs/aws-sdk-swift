// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ReleaseAddressInput: Equatable {
    /// <p>[EC2-VPC] The allocation ID. Required for EC2-VPC.</p>
    public let allocationId: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises
    ///       IP addresses.</p>
    ///          <p>If you provide an incorrect network border group, you will receive an <code>InvalidAddress.NotFound</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
    ///          <note>
    ///             <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p>
    ///          </note>
    public let networkBorderGroup: String?
    /// <p>[EC2-Classic] The Elastic IP address. Required for EC2-Classic.</p>
    public let publicIp: String?

    public init (
        allocationId: String? = nil,
        dryRun: Bool = false,
        networkBorderGroup: String? = nil,
        publicIp: String? = nil
    )
    {
        self.allocationId = allocationId
        self.dryRun = dryRun
        self.networkBorderGroup = networkBorderGroup
        self.publicIp = publicIp
    }
}
