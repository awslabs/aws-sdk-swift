// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PrefixListState {
    case createComplete
    case createFailed
    case createInProgress
    case deleteComplete
    case deleteFailed
    case deleteInProgress
    case modifyComplete
    case modifyFailed
    case modifyInProgress
    case restoreComplete
    case restoreFailed
    case restoreInProgress
    case sdkUnknown(String)
}

extension PrefixListState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PrefixListState] {
        return [
            .createComplete,
            .createFailed,
            .createInProgress,
            .deleteComplete,
            .deleteFailed,
            .deleteInProgress,
            .modifyComplete,
            .modifyFailed,
            .modifyInProgress,
            .restoreComplete,
            .restoreFailed,
            .restoreInProgress,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .createComplete: return "create-complete"
        case .createFailed: return "create-failed"
        case .createInProgress: return "create-in-progress"
        case .deleteComplete: return "delete-complete"
        case .deleteFailed: return "delete-failed"
        case .deleteInProgress: return "delete-in-progress"
        case .modifyComplete: return "modify-complete"
        case .modifyFailed: return "modify-failed"
        case .modifyInProgress: return "modify-in-progress"
        case .restoreComplete: return "restore-complete"
        case .restoreFailed: return "restore-failed"
        case .restoreInProgress: return "restore-in-progress"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PrefixListState(rawValue: rawValue) ?? PrefixListState.sdkUnknown(rawValue)
    }
}
