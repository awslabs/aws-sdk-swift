// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeVpcEndpointServicePermissionsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters.</p>
    /// 		       <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>principal</code> - The ARN of the principal.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>principal-type</code> - The principal type (<code>All</code> |
    /// 						<code>Service</code> | <code>OrganizationUnit</code> | <code>Account</code>
    /// 					| <code>User</code> | <code>Role</code>).</p>
    /// 			         </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results to return for the request in a single page. The remaining
    ///             results of the initial request can be seen by sending another request with the returned
    ///                 <code>NextToken</code> value. This value can be between 5 and 1,000; if
    ///                 <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are
    ///             returned.</p>
    public let maxResults: Int
    /// <p>The token to retrieve the next page of results.</p>
    public let nextToken: String?
    /// <p>The ID of the service.</p>
    public let serviceId: String?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        serviceId: String? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.serviceId = serviceId
    }
}
