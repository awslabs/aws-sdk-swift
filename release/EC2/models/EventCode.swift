// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EventCode {
    case instanceReboot
    case instanceRetirement
    case instanceStop
    case systemMaintenance
    case systemReboot
    case sdkUnknown(String)
}

extension EventCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EventCode] {
        return [
            .instanceReboot,
            .instanceRetirement,
            .instanceStop,
            .systemMaintenance,
            .systemReboot,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .instanceReboot: return "instance-reboot"
        case .instanceRetirement: return "instance-retirement"
        case .instanceStop: return "instance-stop"
        case .systemMaintenance: return "system-maintenance"
        case .systemReboot: return "system-reboot"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EventCode(rawValue: rawValue) ?? EventCode.sdkUnknown(rawValue)
    }
}
