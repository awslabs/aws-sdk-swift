// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ReportInstanceReasonCodes {
    case instanceStuckInState
    case notAcceptingCredentials
    case other
    case passwordNotAvailable
    case performanceEbsVolume
    case performanceInstanceStore
    case performanceNetwork
    case performanceOther
    case unresponsive
    case sdkUnknown(String)
}

extension ReportInstanceReasonCodes : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ReportInstanceReasonCodes] {
        return [
            .instanceStuckInState,
            .notAcceptingCredentials,
            .other,
            .passwordNotAvailable,
            .performanceEbsVolume,
            .performanceInstanceStore,
            .performanceNetwork,
            .performanceOther,
            .unresponsive,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .instanceStuckInState: return "instance-stuck-in-state"
        case .notAcceptingCredentials: return "not-accepting-credentials"
        case .other: return "other"
        case .passwordNotAvailable: return "password-not-available"
        case .performanceEbsVolume: return "performance-ebs-volume"
        case .performanceInstanceStore: return "performance-instance-store"
        case .performanceNetwork: return "performance-network"
        case .performanceOther: return "performance-other"
        case .unresponsive: return "unresponsive"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ReportInstanceReasonCodes(rawValue: rawValue) ?? ReportInstanceReasonCodes.sdkUnknown(rawValue)
    }
}
