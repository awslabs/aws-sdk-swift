// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateTrafficMirrorSessionInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.</p>
    public var clientToken: String?
    /// <p>The description of the Traffic Mirror session.</p>
    public let description: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The ID of the source network interface.</p>
    public let networkInterfaceId: String?
    /// <p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do
    ///          not specify this parameter when you want to mirror the entire packet. To mirror a subset of
    ///          the packet, set this to the length (in bytes) that you want to mirror. For example, if you
    ///          set this value to 100, then the first 100 bytes that meet the filter criteria are copied to
    ///          the target.</p>
    ///          <p>If you do not want to mirror the entire packet, use the <code>PacketLength</code> parameter to specify the number of bytes in each packet to mirror.</p>
    public let packetLength: Int
    /// <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p>
    ///          <p>Valid values are 1-32766.</p>
    public let sessionNumber: Int
    /// <p>The tags to assign to a Traffic Mirror session.</p>
    public let tagSpecifications: [TagSpecification]?
    /// <p>The ID of the Traffic Mirror filter.</p>
    public let trafficMirrorFilterId: String?
    /// <p>The ID of the Traffic Mirror target.</p>
    public let trafficMirrorTargetId: String?
    /// <p>The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN
    ///          protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do
    ///          not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at
    ///          random.</p>
    public let virtualNetworkId: Int

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        dryRun: Bool = false,
        networkInterfaceId: String? = nil,
        packetLength: Int = 0,
        sessionNumber: Int = 0,
        tagSpecifications: [TagSpecification]? = nil,
        trafficMirrorFilterId: String? = nil,
        trafficMirrorTargetId: String? = nil,
        virtualNetworkId: Int = 0
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.dryRun = dryRun
        self.networkInterfaceId = networkInterfaceId
        self.packetLength = packetLength
        self.sessionNumber = sessionNumber
        self.tagSpecifications = tagSpecifications
        self.trafficMirrorFilterId = trafficMirrorFilterId
        self.trafficMirrorTargetId = trafficMirrorTargetId
        self.virtualNetworkId = virtualNetworkId
    }
}
