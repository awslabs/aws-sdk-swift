// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a client connection.</p>
public struct ClientVpnConnection: Equatable {
    /// <p>The IP address of the client.</p>
    public let clientIp: String?
    /// <p>The ID of the Client VPN endpoint to which the client is connected.</p>
    public let clientVpnEndpointId: String?
    /// <p>The common name associated with the client. This is either the name of the client certificate,
    /// 			or the Active Directory user name.</p>
    public let commonName: String?
    /// <p>The date and time the client connection was terminated.</p>
    public let connectionEndTime: String?
    /// <p>The date and time the client connection was established.</p>
    public let connectionEstablishedTime: String?
    /// <p>The ID of the client connection.</p>
    public let connectionId: String?
    /// <p>The number of bytes received by the client.</p>
    public let egressBytes: String?
    /// <p>The number of packets received by the client.</p>
    public let egressPackets: String?
    /// <p>The number of bytes sent by the client.</p>
    public let ingressBytes: String?
    /// <p>The number of packets sent by the client.</p>
    public let ingressPackets: String?
    /// <p>The statuses returned by the client connect handler for posture compliance, if applicable.</p>
    public let postureComplianceStatuses: [String]?
    /// <p>The current state of the client connection.</p>
    public let status: ClientVpnConnectionStatus?
    /// <p>The current date and time.</p>
    public let timestamp: String?
    /// <p>The username of the client who established the client connection. This information is only provided
    /// 			if Active Directory client authentication is used.</p>
    public let username: String?

    public init (
        clientIp: String? = nil,
        clientVpnEndpointId: String? = nil,
        commonName: String? = nil,
        connectionEndTime: String? = nil,
        connectionEstablishedTime: String? = nil,
        connectionId: String? = nil,
        egressBytes: String? = nil,
        egressPackets: String? = nil,
        ingressBytes: String? = nil,
        ingressPackets: String? = nil,
        postureComplianceStatuses: [String]? = nil,
        status: ClientVpnConnectionStatus? = nil,
        timestamp: String? = nil,
        username: String? = nil
    )
    {
        self.clientIp = clientIp
        self.clientVpnEndpointId = clientVpnEndpointId
        self.commonName = commonName
        self.connectionEndTime = connectionEndTime
        self.connectionEstablishedTime = connectionEstablishedTime
        self.connectionId = connectionId
        self.egressBytes = egressBytes
        self.egressPackets = egressPackets
        self.ingressBytes = ingressBytes
        self.ingressPackets = ingressPackets
        self.postureComplianceStatuses = postureComplianceStatuses
        self.status = status
        self.timestamp = timestamp
        self.username = username
    }
}
