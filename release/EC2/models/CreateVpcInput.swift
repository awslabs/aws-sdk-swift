// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVpcInput: Equatable {
    /// <p>Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC.
    ///             You cannot specify the range of IP addresses, or the size of the CIDR block.</p>
    public let amazonProvidedIpv6CidrBlock: Bool
    /// <p>The IPv4 network range for the VPC, in CIDR notation. For example,
    /// 		        <code>10.0.0.0/16</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.</p>
    public let cidrBlock: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances
    ///       are launched with shared tenancy by default. You can launch instances with any tenancy into a
    ///       shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy
    ///       instances by default. You can only launch instances with a tenancy of <code>dedicated</code>
    ///       or <code>host</code> into a dedicated tenancy VPC. </p>
    ///          <p>
    ///             <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p>
    ///          <p>Default: <code>default</code>
    ///          </p>
    public let instanceTenancy: Tenancy?
    /// <p>The IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p>
    ///         <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
    public let ipv6CidrBlock: String?
    /// <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.</p>
    ///          <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
    public let ipv6CidrBlockNetworkBorderGroup: String?
    /// <p>The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.</p>
    public let ipv6Pool: String?
    /// <p>The tags to assign to the VPC.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        amazonProvidedIpv6CidrBlock: Bool = false,
        cidrBlock: String? = nil,
        dryRun: Bool = false,
        instanceTenancy: Tenancy? = nil,
        ipv6CidrBlock: String? = nil,
        ipv6CidrBlockNetworkBorderGroup: String? = nil,
        ipv6Pool: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.amazonProvidedIpv6CidrBlock = amazonProvidedIpv6CidrBlock
        self.cidrBlock = cidrBlock
        self.dryRun = dryRun
        self.instanceTenancy = instanceTenancy
        self.ipv6CidrBlock = ipv6CidrBlock
        self.ipv6CidrBlockNetworkBorderGroup = ipv6CidrBlockNetworkBorderGroup
        self.ipv6Pool = ipv6Pool
        self.tagSpecifications = tagSpecifications
    }
}
