// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeVpcsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you
    ///                     specify must exactly match the VPC's CIDR block for information to be returned
    ///                     for the VPC. Must contain the slash followed by one or two digits (for example,
    ///                     <code>/28</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the
    ///                     VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>cidr-block-association.association-id</code> - The association ID for
    ///                     an IPv4 CIDR block associated with the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block
    ///                     associated with the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR
    ///                     block associated with the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ipv6-cidr-block-association.association-id</code> - The association
    ///                     ID for an IPv6 CIDR block associated with the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR
    ///                     block associated with the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>isDefault</code> - Indicates whether the VPC is the default VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>owner-id</code> - The ID of the AWS account that owns the VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>vpc-id</code> - The ID of the VPC.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results to return with a single call.
    /// 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    public let maxResults: Int
    /// <p>The token for the next page of results.</p>
    public let nextToken: String?
    /// <p>One or more VPC IDs.</p>
    /// 		       <p>Default: Describes all your VPCs.</p>
    public let vpcIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        vpcIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.vpcIds = vpcIds
    }
}
