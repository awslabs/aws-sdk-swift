// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeTrafficMirrorSessionsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters. The possible values are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>description</code>: The Traffic Mirror session description.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>packet-length</code>: The assigned number of packets to mirror. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>session-number</code>: The assigned session number. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>traffic-mirror-session-id</code>: The ID of the Traffic Mirror session.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>virtual-network-id</code>: The virtual network ID of the Traffic Mirror session.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The maximum number of results to return with a single call.
    /// 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    public let maxResults: Int
    /// <p>The token for the next page of results.</p>
    public let nextToken: String?
    /// <p>The ID of the Traffic Mirror session.</p>
    public let trafficMirrorSessionIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil,
        trafficMirrorSessionIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.trafficMirrorSessionIds = trafficMirrorSessionIds
    }
}
