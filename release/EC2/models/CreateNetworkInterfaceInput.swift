// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for CreateNetworkInterface.</p>
public struct CreateNetworkInterfaceInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    public var clientToken: String?
    /// <p>A description for the network interface.</p>
    public let description: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The IDs of one or more security groups.</p>
    public let groups: [String]?
    /// <p>Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify
    /// 			<code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">
    /// 		    Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    public let interfaceType: NetworkInterfaceCreationType?
    /// <p>The number of IPv6 addresses to assign to a network interface. Amazon EC2
    ///             automatically selects the IPv6 addresses from the subnet range. You can't use this
    ///             option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set
    ///             to <code>true</code>, you can specify <code>0</code> to override this setting.</p>
    public let ipv6AddressCount: Int
    /// <p>One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet.
    ///             You can't use this option if you're specifying a number of IPv6 addresses.</p>
    public let ipv6Addresses: [InstanceIpv6Address]?
    /// <p>The primary private IPv4 address of the network interface. If you don't specify an
    ///             IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you
    ///             specify an IP address, you cannot indicate any IP addresses specified in
    ///             <code>privateIpAddresses</code> as primary (only one IP address can be designated as
    ///             primary).</p>
    public let privateIpAddress: String?
    /// <p>One or more private IPv4 addresses.</p>
    public let privateIpAddresses: [PrivateIpAddressSpecification]?
    /// <p>The number of secondary private IPv4 addresses to assign to a network interface. When
    ///             you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses
    ///             within the subnet's IPv4 CIDR range. You can't specify this option and specify more than
    ///             one private IP address using <code>privateIpAddresses</code>.</p>
    ///         <p>The number of IP addresses you can assign to a network interface varies by instance
    ///             type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per
    ///                 Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
    public let secondaryPrivateIpAddressCount: Int
    /// <p>The ID of the subnet to associate with the network interface.</p>
    public let subnetId: String?
    /// <p>The tags to apply to the new network interface.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        dryRun: Bool = false,
        groups: [String]? = nil,
        interfaceType: NetworkInterfaceCreationType? = nil,
        ipv6AddressCount: Int = 0,
        ipv6Addresses: [InstanceIpv6Address]? = nil,
        privateIpAddress: String? = nil,
        privateIpAddresses: [PrivateIpAddressSpecification]? = nil,
        secondaryPrivateIpAddressCount: Int = 0,
        subnetId: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.dryRun = dryRun
        self.groups = groups
        self.interfaceType = interfaceType
        self.ipv6AddressCount = ipv6AddressCount
        self.ipv6Addresses = ipv6Addresses
        self.privateIpAddress = privateIpAddress
        self.privateIpAddresses = privateIpAddresses
        self.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount
        self.subnetId = subnetId
        self.tagSpecifications = tagSpecifications
    }
}
