// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateVpcEndpointServiceConfigurationInput: Equatable {
    /// <p>Indicates whether requests from service consumers to create an endpoint to your service must
    ///             be accepted. To accept a request, use <a>AcceptVpcEndpointConnections</a>.</p>
    public let acceptanceRequired: Bool
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    ///             For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure
    ///                 Idempotency</a>.</p>
    public let clientToken: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.</p>
    public let gatewayLoadBalancerArns: [String]?
    /// <p>The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your
    ///             service.</p>
    public let networkLoadBalancerArns: [String]?
    /// <p>(Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.</p>
    public let privateDnsName: String?
    /// <p>The tags to associate with the service.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        acceptanceRequired: Bool = false,
        clientToken: String? = nil,
        dryRun: Bool = false,
        gatewayLoadBalancerArns: [String]? = nil,
        networkLoadBalancerArns: [String]? = nil,
        privateDnsName: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.acceptanceRequired = acceptanceRequired
        self.clientToken = clientToken
        self.dryRun = dryRun
        self.gatewayLoadBalancerArns = gatewayLoadBalancerArns
        self.networkLoadBalancerArns = networkLoadBalancerArns
        self.privateDnsName = privateDnsName
        self.tagSpecifications = tagSpecifications
    }
}
