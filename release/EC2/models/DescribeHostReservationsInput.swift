// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeHostReservationsInput: Equatable {
    /// <p>The filters.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>instance-family</code> - The instance family (for example,
    ///                     <code>m4</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>payment-option</code> - The payment option (<code>NoUpfront</code> |
    ///                         <code>PartialUpfront</code> | <code>AllUpfront</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>state</code> - The state of the reservation (<code>payment-pending</code>
    ///                     | <code>payment-failed</code> | <code>active</code> |
    ///                     <code>retired</code>).</p>
    ///             </li>
    ///             <li>
    ///         		     <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///         	   </li>
    ///             <li>
    ///         		     <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///         	   </li>
    ///          </ul>
    public let filter: [Filter]?
    /// <p>The host reservation IDs.</p>
    public let hostReservationIdSet: [String]?
    /// <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p>
    public let maxResults: Int
    /// <p>The token to use to retrieve the next page of results.</p>
    public let nextToken: String?

    public init (
        filter: [Filter]? = nil,
        hostReservationIdSet: [String]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil
    )
    {
        self.filter = filter
        self.hostReservationIdSet = hostReservationIdSet
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
