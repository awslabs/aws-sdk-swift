// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the recurring schedule for a Scheduled Instance.</p>
public struct ScheduledInstanceRecurrenceRequest: Equatable {
    /// <p>The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).</p>
    public let frequency: String?
    /// <p>The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2
    ///          weeks or every 2 months.</p>
    public let interval: Int
    /// <p>The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.</p>
    public let occurrenceDays: [Int]?
    /// <p>Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.</p>
    public let occurrenceRelativeToEnd: Bool
    /// <p>The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
    ///         This value is required for a monthly schedule.
    ///         You can't specify <code>DayOfWeek</code> with a weekly schedule.
    ///         You can't specify this value with a daily schedule.</p>
    public let occurrenceUnit: String?

    public init (
        frequency: String? = nil,
        interval: Int = 0,
        occurrenceDays: [Int]? = nil,
        occurrenceRelativeToEnd: Bool = false,
        occurrenceUnit: String? = nil
    )
    {
        self.frequency = frequency
        self.interval = interval
        self.occurrenceDays = occurrenceDays
        self.occurrenceRelativeToEnd = occurrenceRelativeToEnd
        self.occurrenceUnit = occurrenceUnit
    }
}
