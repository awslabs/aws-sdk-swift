// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a Client VPN endpoint.</p>
public struct ClientVpnEndpoint: Equatable {
    /// <p>Information about the associated target networks. A target network is a subnet in a VPC.</p>
    @available(*, deprecated, message: "This property is deprecated. To view the target networks associated with a Client VPN endpoint, call DescribeClientVpnTargetNetworks and inspect the clientVpnTargetNetworks response element.")
    public let associatedTargetNetworks: [AssociatedTargetNetwork]?
    /// <p>Information about the authentication method used by the Client VPN endpoint.</p>
    public let authenticationOptions: [ClientVpnAuthentication]?
    /// <p>The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.</p>
    public let clientCidrBlock: String?
    /// <p>The options for managing connection authorization for new client connections.</p>
    public let clientConnectOptions: ClientConnectResponseOptions?
    /// <p>The ID of the Client VPN endpoint.</p>
    public let clientVpnEndpointId: String?
    /// <p>Information about the client connection logging options for the Client VPN endpoint.</p>
    public let connectionLogOptions: ConnectionLogResponseOptions?
    /// <p>The date and time the Client VPN endpoint was created.</p>
    public let creationTime: String?
    /// <p>The date and time the Client VPN endpoint was deleted, if applicable.</p>
    public let deletionTime: String?
    /// <p>A brief description of the endpoint.</p>
    public let description: String?
    /// <p>The DNS name to be used by clients when connecting to the Client VPN endpoint.</p>
    public let dnsName: String?
    /// <p>Information about the DNS servers to be used for DNS resolution. </p>
    public let dnsServers: [String]?
    /// <p>The IDs of the security groups for the target network.</p>
    public let securityGroupIds: [String]?
    /// <p>The URL of the self-service portal.</p>
    public let selfServicePortalUrl: String?
    /// <p>The ARN of the server certificate.</p>
    public let serverCertificateArn: String?
    /// <p>Indicates whether split-tunnel is enabled in the AWS Client VPN endpoint.</p>
    /// 		       <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS
    /// 				Client VPN Administrator Guide</i>.</p>
    public let splitTunnel: Bool
    /// <p>The current state of the Client VPN endpoint.</p>
    public let status: ClientVpnEndpointStatus?
    /// <p>Any tags assigned to the Client VPN endpoint.</p>
    public let tags: [Tag]?
    /// <p>The transport protocol used by the Client VPN endpoint.</p>
    public let transportProtocol: TransportProtocol?
    /// <p>The ID of the VPC.</p>
    public let vpcId: String?
    /// <p>The port number for the  Client VPN endpoint.</p>
    public let vpnPort: Int
    /// <p>The protocol used by the VPN session.</p>
    public let vpnProtocol: VpnProtocol?

    public init (
        associatedTargetNetworks: [AssociatedTargetNetwork]? = nil,
        authenticationOptions: [ClientVpnAuthentication]? = nil,
        clientCidrBlock: String? = nil,
        clientConnectOptions: ClientConnectResponseOptions? = nil,
        clientVpnEndpointId: String? = nil,
        connectionLogOptions: ConnectionLogResponseOptions? = nil,
        creationTime: String? = nil,
        deletionTime: String? = nil,
        description: String? = nil,
        dnsName: String? = nil,
        dnsServers: [String]? = nil,
        securityGroupIds: [String]? = nil,
        selfServicePortalUrl: String? = nil,
        serverCertificateArn: String? = nil,
        splitTunnel: Bool = false,
        status: ClientVpnEndpointStatus? = nil,
        tags: [Tag]? = nil,
        transportProtocol: TransportProtocol? = nil,
        vpcId: String? = nil,
        vpnPort: Int = 0,
        vpnProtocol: VpnProtocol? = nil
    )
    {
        self.associatedTargetNetworks = associatedTargetNetworks
        self.authenticationOptions = authenticationOptions
        self.clientCidrBlock = clientCidrBlock
        self.clientConnectOptions = clientConnectOptions
        self.clientVpnEndpointId = clientVpnEndpointId
        self.connectionLogOptions = connectionLogOptions
        self.creationTime = creationTime
        self.deletionTime = deletionTime
        self.description = description
        self.dnsName = dnsName
        self.dnsServers = dnsServers
        self.securityGroupIds = securityGroupIds
        self.selfServicePortalUrl = selfServicePortalUrl
        self.serverCertificateArn = serverCertificateArn
        self.splitTunnel = splitTunnel
        self.status = status
        self.tags = tags
        self.transportProtocol = transportProtocol
        self.vpcId = vpcId
        self.vpnPort = vpnPort
        self.vpnProtocol = vpnProtocol
    }
}
