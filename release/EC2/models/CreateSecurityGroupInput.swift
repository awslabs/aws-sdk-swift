// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateSecurityGroupInput: Equatable {
    /// <p>A description for the security group. This is informational only.</p>
    /// 		       <p>Constraints: Up to 255 characters in length</p>
    /// 		       <p>Constraints for EC2-Classic: ASCII characters</p>
    /// 		       <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*</p>
    public let description: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The name of the security group.</p>
    ///          <p>Constraints: Up to 255 characters in length. Cannot start with
    ///             <code>sg-</code>.</p>
    ///          <p>Constraints for EC2-Classic: ASCII characters</p>
    ///          <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*</p>
    public let groupName: String?
    /// <p>The tags to assign to the security group.</p>
    public let tagSpecifications: [TagSpecification]?
    /// <p>[EC2-VPC] The ID of the VPC. Required for EC2-VPC.</p>
    public let vpcId: String?

    public init (
        description: String? = nil,
        dryRun: Bool = false,
        groupName: String? = nil,
        tagSpecifications: [TagSpecification]? = nil,
        vpcId: String? = nil
    )
    {
        self.description = description
        self.dryRun = dryRun
        self.groupName = groupName
        self.tagSpecifications = tagSpecifications
        self.vpcId = vpcId
    }
}
