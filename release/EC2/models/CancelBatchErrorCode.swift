// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum CancelBatchErrorCode {
    case fleetRequestIdDoesNotExist
    case fleetRequestIdMalformed
    case fleetRequestNotInCancellableState
    case unexpectedError
    case sdkUnknown(String)
}

extension CancelBatchErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CancelBatchErrorCode] {
        return [
            .fleetRequestIdDoesNotExist,
            .fleetRequestIdMalformed,
            .fleetRequestNotInCancellableState,
            .unexpectedError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fleetRequestIdDoesNotExist: return "fleetRequestIdDoesNotExist"
        case .fleetRequestIdMalformed: return "fleetRequestIdMalformed"
        case .fleetRequestNotInCancellableState: return "fleetRequestNotInCancellableState"
        case .unexpectedError: return "unexpectedError"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CancelBatchErrorCode(rawValue: rawValue) ?? CancelBatchErrorCode.sdkUnknown(rawValue)
    }
}
