// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeClassicLinkInstancesInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters.</p>
    /// 		       <ul>
    ///             <li>
    ///                       <p>
    ///                   <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p>
    ///                   </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>instance-id</code> - The ID of the instance.</p>
    /// 			         </li>
    ///             <li>
    /// 			            <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    /// 			         </li>
    ///             <li>
    /// 				           <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    /// 			         </li>
    ///             <li>
    ///
    /// 				           <p>
    /// 					             <code>vpc-id</code> - The ID of the VPC to which the instance is
    /// 					linked.</p>
    ///
    /// 				           <p>
    ///                   <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p>
    ///
    /// 			         </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>One or more instance IDs. Must be instances linked to a VPC through ClassicLink.</p>
    public let instanceIds: [String]?
    /// <p>The maximum number of results to return with a single call.
    /// 	To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    /// 		       <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>
    public let maxResults: Int
    /// <p>The token for the next page of results.</p>
    public let nextToken: String?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        instanceIds: [String]? = nil,
        maxResults: Int = 0,
        nextToken: String? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.instanceIds = instanceIds
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
