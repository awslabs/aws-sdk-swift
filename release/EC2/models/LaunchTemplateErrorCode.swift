// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum LaunchTemplateErrorCode {
    case launchTemplateIdDoesNotExist
    case launchTemplateIdMalformed
    case launchTemplateNameDoesNotExist
    case launchTemplateNameMalformed
    case launchTemplateVersionDoesNotExist
    case unexpectedError
    case sdkUnknown(String)
}

extension LaunchTemplateErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [LaunchTemplateErrorCode] {
        return [
            .launchTemplateIdDoesNotExist,
            .launchTemplateIdMalformed,
            .launchTemplateNameDoesNotExist,
            .launchTemplateNameMalformed,
            .launchTemplateVersionDoesNotExist,
            .unexpectedError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .launchTemplateIdDoesNotExist: return "launchTemplateIdDoesNotExist"
        case .launchTemplateIdMalformed: return "launchTemplateIdMalformed"
        case .launchTemplateNameDoesNotExist: return "launchTemplateNameDoesNotExist"
        case .launchTemplateNameMalformed: return "launchTemplateNameMalformed"
        case .launchTemplateVersionDoesNotExist: return "launchTemplateVersionDoesNotExist"
        case .unexpectedError: return "unexpectedError"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = LaunchTemplateErrorCode(rawValue: rawValue) ?? LaunchTemplateErrorCode.sdkUnknown(rawValue)
    }
}
