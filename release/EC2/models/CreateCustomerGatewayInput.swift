// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for CreateCustomerGateway.</p>
public struct CreateCustomerGatewayInput: Equatable {
    /// <p>For devices that support BGP, the customer gateway's BGP ASN.</p>
    ///         <p>Default: 65000</p>
    public let bgpAsn: Int
    /// <p>The Amazon Resource Name (ARN) for the customer gateway certificate.</p>
    public let certificateArn: String?
    /// <p>A name for the customer gateway device.</p>
    ///         <p>Length Constraints: Up to 255 characters.</p>
    public let deviceName: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The Internet-routable IP address for the customer gateway's outside interface. The address must be static.</p>
    public let publicIp: String?
    /// <p>The tags to apply to the customer gateway.</p>
    public let tagSpecifications: [TagSpecification]?
    /// <p>The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).</p>
    public let type: GatewayType?

    public init (
        bgpAsn: Int = 0,
        certificateArn: String? = nil,
        deviceName: String? = nil,
        dryRun: Bool = false,
        publicIp: String? = nil,
        tagSpecifications: [TagSpecification]? = nil,
        type: GatewayType? = nil
    )
    {
        self.bgpAsn = bgpAsn
        self.certificateArn = certificateArn
        self.deviceName = deviceName
        self.dryRun = dryRun
        self.publicIp = publicIp
        self.tagSpecifications = tagSpecifications
        self.type = type
    }
}
