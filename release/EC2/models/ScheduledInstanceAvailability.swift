// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a schedule that is available for your Scheduled Instances.</p>
public struct ScheduledInstanceAvailability: Equatable {
    /// <p>The Availability Zone.</p>
    public let availabilityZone: String?
    /// <p>The number of available instances.</p>
    public let availableInstanceCount: Int
    /// <p>The time period for the first schedule to start.</p>
    public let firstSlotStartTime: Date?
    /// <p>The hourly price for a single instance.</p>
    public let hourlyPrice: String?
    /// <p>The instance type. You can specify one of the C3, C4, M4, or R3 instance types.</p>
    public let instanceType: String?
    /// <p>The maximum term. The only possible value is 365 days.</p>
    public let maxTermDurationInDays: Int
    /// <p>The minimum term. The only possible value is 365 days.</p>
    public let minTermDurationInDays: Int
    /// <p>The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p>
    public let networkPlatform: String?
    /// <p>The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p>
    public let platform: String?
    /// <p>The purchase token. This token expires in two hours.</p>
    public let purchaseToken: String?
    /// <p>The schedule recurrence.</p>
    public let recurrence: ScheduledInstanceRecurrence?
    /// <p>The number of hours in the schedule.</p>
    public let slotDurationInHours: Int
    /// <p>The total number of hours for a single instance for the entire term.</p>
    public let totalScheduledInstanceHours: Int

    public init (
        availabilityZone: String? = nil,
        availableInstanceCount: Int = 0,
        firstSlotStartTime: Date? = nil,
        hourlyPrice: String? = nil,
        instanceType: String? = nil,
        maxTermDurationInDays: Int = 0,
        minTermDurationInDays: Int = 0,
        networkPlatform: String? = nil,
        platform: String? = nil,
        purchaseToken: String? = nil,
        recurrence: ScheduledInstanceRecurrence? = nil,
        slotDurationInHours: Int = 0,
        totalScheduledInstanceHours: Int = 0
    )
    {
        self.availabilityZone = availabilityZone
        self.availableInstanceCount = availableInstanceCount
        self.firstSlotStartTime = firstSlotStartTime
        self.hourlyPrice = hourlyPrice
        self.instanceType = instanceType
        self.maxTermDurationInDays = maxTermDurationInDays
        self.minTermDurationInDays = minTermDurationInDays
        self.networkPlatform = networkPlatform
        self.platform = platform
        self.purchaseToken = purchaseToken
        self.recurrence = recurrence
        self.slotDurationInHours = slotDurationInHours
        self.totalScheduledInstanceHours = totalScheduledInstanceHours
    }
}
