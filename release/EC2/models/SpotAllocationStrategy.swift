// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SpotAllocationStrategy {
    case capacityOptimized
    case capacityOptimizedPrioritized
    case diversified
    case lowestPrice
    case sdkUnknown(String)
}

extension SpotAllocationStrategy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SpotAllocationStrategy] {
        return [
            .capacityOptimized,
            .capacityOptimizedPrioritized,
            .diversified,
            .lowestPrice,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .capacityOptimized: return "capacity-optimized"
        case .capacityOptimizedPrioritized: return "capacity-optimized-prioritized"
        case .diversified: return "diversified"
        case .lowestPrice: return "lowest-price"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SpotAllocationStrategy(rawValue: rawValue) ?? SpotAllocationStrategy.sdkUnknown(rawValue)
    }
}
