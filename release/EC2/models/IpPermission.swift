// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a set of permissions for a security group rule.</p>
public struct IpPermission: Equatable {
    /// <p>The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number.
    ///         A value of <code>-1</code> indicates all ICMP/ICMPv6 types. If you specify all
    /// 		ICMP/ICMPv6 types, you must specify all codes.</p>
    public let fromPort: Int
    /// <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>)
    ///         or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>).</p>
    ///          <p>[VPC only] Use <code>-1</code> to specify all protocols. When authorizing
    ///         security group rules, specifying <code>-1</code> or a protocol number other than
    ///         <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows
    ///         traffic on all ports, regardless of any port range you specify. For <code>tcp</code>,
    ///         <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>,
    ///         the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>
    public let ipProtocol: String?
    /// <p>The IPv4 ranges.</p>
    public let ipRanges: [IpRange]?
    /// <p>[VPC only] The IPv6 ranges.</p>
    public let ipv6Ranges: [Ipv6Range]?
    /// <p>[VPC only] The prefix list IDs.</p>
    public let prefixListIds: [PrefixListId]?
    /// <p>The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value
    /// 		of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types,
    ///         you must specify all codes.</p>
    public let toPort: Int
    /// <p>The security group and AWS account ID pairs.</p>
    public let userIdGroupPairs: [UserIdGroupPair]?

    public init (
        fromPort: Int = 0,
        ipProtocol: String? = nil,
        ipRanges: [IpRange]? = nil,
        ipv6Ranges: [Ipv6Range]? = nil,
        prefixListIds: [PrefixListId]? = nil,
        toPort: Int = 0,
        userIdGroupPairs: [UserIdGroupPair]? = nil
    )
    {
        self.fromPort = fromPort
        self.ipProtocol = ipProtocol
        self.ipRanges = ipRanges
        self.ipv6Ranges = ipv6Ranges
        self.prefixListIds = prefixListIds
        self.toPort = toPort
        self.userIdGroupPairs = userIdGroupPairs
    }
}
