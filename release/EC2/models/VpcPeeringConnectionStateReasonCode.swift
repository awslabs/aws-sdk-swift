// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum VpcPeeringConnectionStateReasonCode {
    case active
    case deleted
    case deleting
    case expired
    case failed
    case initiatingRequest
    case pendingAcceptance
    case provisioning
    case rejected
    case sdkUnknown(String)
}

extension VpcPeeringConnectionStateReasonCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [VpcPeeringConnectionStateReasonCode] {
        return [
            .active,
            .deleted,
            .deleting,
            .expired,
            .failed,
            .initiatingRequest,
            .pendingAcceptance,
            .provisioning,
            .rejected,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "active"
        case .deleted: return "deleted"
        case .deleting: return "deleting"
        case .expired: return "expired"
        case .failed: return "failed"
        case .initiatingRequest: return "initiating-request"
        case .pendingAcceptance: return "pending-acceptance"
        case .provisioning: return "provisioning"
        case .rejected: return "rejected"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = VpcPeeringConnectionStateReasonCode(rawValue: rawValue) ?? VpcPeeringConnectionStateReasonCode.sdkUnknown(rawValue)
    }
}
