// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyVpcEndpointServiceConfigurationInput: Equatable {
    /// <p>Indicates whether requests to create an endpoint to your service must be accepted.</p>
    public let acceptanceRequired: Bool
    /// <p>The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service
    ///             configuration.</p>
    public let addGatewayLoadBalancerArns: [String]?
    /// <p>The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service
    ///             configuration.</p>
    public let addNetworkLoadBalancerArns: [String]?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>(Interface endpoint configuration) The private DNS name to assign to the endpoint service.</p>
    public let privateDnsName: String?
    /// <p>The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service
    ///             configuration.</p>
    public let removeGatewayLoadBalancerArns: [String]?
    /// <p>The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service
    ///             configuration.</p>
    public let removeNetworkLoadBalancerArns: [String]?
    /// <p>(Interface endpoint configuration) Removes the private DNS name of the endpoint service.</p>
    public let removePrivateDnsName: Bool
    /// <p>The ID of the service.</p>
    public let serviceId: String?

    public init (
        acceptanceRequired: Bool = false,
        addGatewayLoadBalancerArns: [String]? = nil,
        addNetworkLoadBalancerArns: [String]? = nil,
        dryRun: Bool = false,
        privateDnsName: String? = nil,
        removeGatewayLoadBalancerArns: [String]? = nil,
        removeNetworkLoadBalancerArns: [String]? = nil,
        removePrivateDnsName: Bool = false,
        serviceId: String? = nil
    )
    {
        self.acceptanceRequired = acceptanceRequired
        self.addGatewayLoadBalancerArns = addGatewayLoadBalancerArns
        self.addNetworkLoadBalancerArns = addNetworkLoadBalancerArns
        self.dryRun = dryRun
        self.privateDnsName = privateDnsName
        self.removeGatewayLoadBalancerArns = removeGatewayLoadBalancerArns
        self.removeNetworkLoadBalancerArns = removeNetworkLoadBalancerArns
        self.removePrivateDnsName = removePrivateDnsName
        self.serviceId = serviceId
    }
}
