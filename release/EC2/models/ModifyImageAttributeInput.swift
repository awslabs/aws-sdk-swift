// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for ModifyImageAttribute.</p>
public struct ModifyImageAttributeInput: Equatable {
    /// <p>The name of the attribute to modify.
    ///        The valid values are <code>description</code>, <code>launchPermission</code>, and <code>productCodes</code>.</p>
    public let attribute: String?
    /// <p>A new description for the AMI.</p>
    public let description: AttributeValue?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The ID of the AMI.</p>
    public let imageId: String?
    /// <p>A new launch permission for the AMI.</p>
    public let launchPermission: LaunchPermissionModifications?
    /// <p>The operation type.
    ///        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
    public let operationType: OperationType?
    /// <p>The DevPay product codes. After you add a product code to an AMI, it can't be removed.</p>
    public let productCodes: [String]?
    /// <p>The user groups.
    ///        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
    public let userGroups: [String]?
    /// <p>The AWS account IDs.
    ///        This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.</p>
    public let userIds: [String]?
    /// <p>The value of the attribute being modified.
    ///        This parameter can be used only when the <code>Attribute</code> parameter is <code>description</code> or <code>productCodes</code>.</p>
    public let value: String?

    public init (
        attribute: String? = nil,
        description: AttributeValue? = nil,
        dryRun: Bool = false,
        imageId: String? = nil,
        launchPermission: LaunchPermissionModifications? = nil,
        operationType: OperationType? = nil,
        productCodes: [String]? = nil,
        userGroups: [String]? = nil,
        userIds: [String]? = nil,
        value: String? = nil
    )
    {
        self.attribute = attribute
        self.description = description
        self.dryRun = dryRun
        self.imageId = imageId
        self.launchPermission = launchPermission
        self.operationType = operationType
        self.productCodes = productCodes
        self.userGroups = userGroups
        self.userIds = userIds
        self.value = value
    }
}
