// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum NetworkInterfacePermissionStateCode {
    case granted
    case pending
    case revoked
    case revoking
    case sdkUnknown(String)
}

extension NetworkInterfacePermissionStateCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NetworkInterfacePermissionStateCode] {
        return [
            .granted,
            .pending,
            .revoked,
            .revoking,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .granted: return "granted"
        case .pending: return "pending"
        case .revoked: return "revoked"
        case .revoking: return "revoking"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NetworkInterfacePermissionStateCode(rawValue: rawValue) ?? NetworkInterfacePermissionStateCode.sdkUnknown(rawValue)
    }
}
