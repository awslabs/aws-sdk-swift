// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for DescribeVpnConnections.</p>
public struct DescribeVpnConnectionsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>vpn-connection-id</code> - The ID of the VPN connection.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>transit-gateway-id</code> - The ID of a transit gateway associated with the VPN connection.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>One or more VPN connection IDs.</p>
    ///         <p>Default: Describes your VPN connections.</p>
    public let vpnConnectionIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        vpnConnectionIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.vpnConnectionIds = vpnConnectionIds
    }
}
