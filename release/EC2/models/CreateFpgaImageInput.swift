// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFpgaImageInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    ///          For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    public let clientToken: String?
    /// <p>A description for the AFI.</p>
    public let description: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.</p>
    public let inputStorageLocation: StorageLocation?
    /// <p>The location in Amazon S3 for the output logs.</p>
    public let logsStorageLocation: StorageLocation?
    /// <p>A name for the AFI.</p>
    public let name: String?
    /// <p>The tags to apply to the FPGA image during creation.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        dryRun: Bool = false,
        inputStorageLocation: StorageLocation? = nil,
        logsStorageLocation: StorageLocation? = nil,
        name: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.dryRun = dryRun
        self.inputStorageLocation = inputStorageLocation
        self.logsStorageLocation = logsStorageLocation
        self.name = name
        self.tagSpecifications = tagSpecifications
    }
}
