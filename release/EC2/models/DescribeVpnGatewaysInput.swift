// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for DescribeVpnGateways.</p>
public struct DescribeVpnGatewaysInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///             and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///             Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more filters.</p>
    ///         <ul>
    ///             <li>
    /// 				           <p>
    ///                   <code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon side of the gateway.</p>
    /// 			         </li>
    ///             <li>
    ///                 <p>
    ///                   <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>attachment.vpc-id</code> - The ID of an attached VPC.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>One or more virtual private gateway IDs.</p>
    ///         <p>Default: Describes all your virtual private gateways.</p>
    public let vpnGatewayIds: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        vpnGatewayIds: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.vpnGatewayIds = vpnGatewayIds
    }
}
