// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a Reserved Instance offering.</p>
public struct ReservedInstancesOffering: Equatable {
    /// <p>The Availability Zone in which the Reserved Instance can be used.</p>
    public let availabilityZone: String?
    /// <p>The currency of the Reserved Instance offering you are purchasing. It's
    /// 				specified using ISO 4217 standard currency codes. At this time,
    /// 				the only supported currency is <code>USD</code>.</p>
    public let currencyCode: CurrencyCodeValues?
    /// <p>The duration of the Reserved Instance, in seconds.</p>
    public let duration: Int
    /// <p>The purchase price of the Reserved Instance.</p>
    public let fixedPrice: Float
    /// <p>The tenancy of the instance.</p>
    public let instanceTenancy: Tenancy?
    /// <p>The instance type on which the Reserved Instance can be used.</p>
    public let instanceType: InstanceType?
    /// <p>Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS.
    ///         If it's a Reserved Instance Marketplace offering, this is <code>true</code>.</p>
    public let marketplace: Bool
    /// <p>If <code>convertible</code> it can be exchanged for Reserved Instances of
    ///       the same or higher monetary value, with different configurations. If <code>standard</code>, it is not
    ///       possible to perform an exchange.</p>
    public let offeringClass: OfferingClassType?
    /// <p>The Reserved Instance offering type.</p>
    public let offeringType: OfferingTypeValues?
    /// <p>The pricing details of the Reserved Instance offering.</p>
    public let pricingDetails: [PricingDetail]?
    /// <p>The Reserved Instance product platform description.</p>
    public let productDescription: RIProductDescription?
    /// <p>The recurring charge tag assigned to the resource.</p>
    public let recurringCharges: [RecurringCharge]?
    /// <p>The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a>
    ///      to confirm that an exchange can be made.</p>
    public let reservedInstancesOfferingId: String?
    /// <p>Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.</p>
    public let scope: Scope?
    /// <p>The usage price of the Reserved Instance, per hour.</p>
    public let usagePrice: Float

    public init (
        availabilityZone: String? = nil,
        currencyCode: CurrencyCodeValues? = nil,
        duration: Int = 0,
        fixedPrice: Float = 0.0,
        instanceTenancy: Tenancy? = nil,
        instanceType: InstanceType? = nil,
        marketplace: Bool = false,
        offeringClass: OfferingClassType? = nil,
        offeringType: OfferingTypeValues? = nil,
        pricingDetails: [PricingDetail]? = nil,
        productDescription: RIProductDescription? = nil,
        recurringCharges: [RecurringCharge]? = nil,
        reservedInstancesOfferingId: String? = nil,
        scope: Scope? = nil,
        usagePrice: Float = 0.0
    )
    {
        self.availabilityZone = availabilityZone
        self.currencyCode = currencyCode
        self.duration = duration
        self.fixedPrice = fixedPrice
        self.instanceTenancy = instanceTenancy
        self.instanceType = instanceType
        self.marketplace = marketplace
        self.offeringClass = offeringClass
        self.offeringType = offeringType
        self.pricingDetails = pricingDetails
        self.productDescription = productDescription
        self.recurringCharges = recurringCharges
        self.reservedInstancesOfferingId = reservedInstancesOfferingId
        self.scope = scope
        self.usagePrice = usagePrice
    }
}
