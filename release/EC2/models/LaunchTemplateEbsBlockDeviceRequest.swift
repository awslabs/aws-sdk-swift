// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The parameters for a block device for an EBS volume.</p>
public struct LaunchTemplateEbsBlockDeviceRequest: Equatable {
    /// <p>Indicates whether the EBS volume is deleted on instance termination.</p>
    public let deleteOnTermination: Bool
    /// <p>Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption.
    ///             If you are creating a volume from a snapshot, you can't specify an encryption value.</p>
    public let encrypted: Bool
    /// <p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code>
    ///             volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes,
    ///             this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits
    ///             for bursting.</p>
    ///         <p>The following are the supported values for each volume type:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>gp3</code>: 3,000-16,000 IOPS</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>io1</code>: 100-64,000 IOPS</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>io2</code>: 100-64,000 IOPS</p>
    ///             </li>
    ///          </ul>
    ///         <p>For <code>io1</code> and <code>io2</code> volumes, we guarantee 64,000 IOPS
    ///             only for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families guarantee performance up
    ///             to 32,000 IOPS.</p>
    ///         <p>This parameter is supported for <code>io1</code>, <code>io2</code>, and <code>gp3</code> volumes only. This parameter is not supported for
    ///             <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>
    public let iops: Int
    /// <p>The ARN of the symmetric AWS Key Management Service (AWS KMS) CMK used for
    ///             encryption.</p>
    public let kmsKeyId: String?
    /// <p>The ID of the snapshot.</p>
    public let snapshotId: String?
    /// <p>The throughput to provision for a <code>gp3</code> volume, with a maximum of 1,000 MiB/s.</p>
    ///     	    <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>
    public let throughput: Int
    /// <p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. The following
    ///             are the supported volumes sizes for each volume type:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>gp2</code> and <code>gp3</code>: 1-16,384</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>io1</code> and <code>io2</code>: 4-16,384</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>st1</code> and <code>sc1</code>: 125-16,384</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>standard</code>: 1-1,024</p>
    ///             </li>
    ///          </ul>
    public let volumeSize: Int
    /// <p>The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the
    ///             <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    public let volumeType: VolumeType?

    public init (
        deleteOnTermination: Bool = false,
        encrypted: Bool = false,
        iops: Int = 0,
        kmsKeyId: String? = nil,
        snapshotId: String? = nil,
        throughput: Int = 0,
        volumeSize: Int = 0,
        volumeType: VolumeType? = nil
    )
    {
        self.deleteOnTermination = deleteOnTermination
        self.encrypted = encrypted
        self.iops = iops
        self.kmsKeyId = kmsKeyId
        self.snapshotId = snapshotId
        self.throughput = throughput
        self.volumeSize = volumeSize
        self.volumeType = volumeType
    }
}
