// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateManagedPrefixListInput: Equatable {
    /// <p>The IP address type.</p>
    ///         <p>Valid Values: <code>IPv4</code> | <code>IPv6</code>
    ///          </p>
    public let addressFamily: String?
    /// <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the
    ///             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring
    ///                 Idempotency</a>.</p>
    ///         <p>Constraints: Up to 255 UTF-8 characters in length.</p>
    public var clientToken: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>One or more entries for the prefix list.</p>
    public let entries: [AddPrefixListEntry]?
    /// <p>The maximum number of entries for the prefix list.</p>
    public let maxEntries: Int
    /// <p>A name for the prefix list.</p>
    ///         <p>Constraints: Up to 255 characters in length. The name cannot start with <code>com.amazonaws</code>.</p>
    public let prefixListName: String?
    /// <p>The tags to apply to the prefix list during creation.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        addressFamily: String? = nil,
        clientToken: String? = nil,
        dryRun: Bool = false,
        entries: [AddPrefixListEntry]? = nil,
        maxEntries: Int = 0,
        prefixListName: String? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.addressFamily = addressFamily
        self.clientToken = clientToken
        self.dryRun = dryRun
        self.entries = entries
        self.maxEntries = maxEntries
        self.prefixListName = prefixListName
        self.tagSpecifications = tagSpecifications
    }
}
