// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The number of units to request. You can choose to set the target capacity in terms of
///          instances or a performance characteristic that is important to your application workload,
///          such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can
///          specify a target capacity of 0 and add capacity later.</p>
///          <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance
///             <code>MaxTotalPrice</code>, or both to ensure that your fleet cost does not exceed your
///          budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet
///          will launch instances until it reaches the maximum amount that you're willing to pay. When
///          the maximum amount you're willing to pay is reached, the fleet stops launching instances
///          even if it hasnâ€™t met the target capacity. The <code>MaxTotalPrice</code> parameters are
///          located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptions.html">OnDemandOptions</a>
///          and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptions">SpotOptions</a>.</p>
public struct TargetCapacitySpecification: Equatable {
    /// <p>The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or
    ///             <code>On-Demand</code>.</p>
    public let defaultTargetCapacityType: DefaultTargetCapacityType?
    /// <p>The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.</p>
    public let onDemandTargetCapacity: Int
    /// <p>The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.</p>
    public let spotTargetCapacity: Int
    /// <p>The number of units to request, filled using
    ///          <code>DefaultTargetCapacityType</code>.</p>
    public let totalTargetCapacity: Int

    public init (
        defaultTargetCapacityType: DefaultTargetCapacityType? = nil,
        onDemandTargetCapacity: Int = 0,
        spotTargetCapacity: Int = 0,
        totalTargetCapacity: Int = 0
    )
    {
        self.defaultTargetCapacityType = defaultTargetCapacityType
        self.onDemandTargetCapacity = onDemandTargetCapacity
        self.spotTargetCapacity = spotTargetCapacity
        self.totalTargetCapacity = totalTargetCapacity
    }
}
