// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a Spot Instance request.</p>
public struct SpotInstanceRequest: Equatable {
    /// <p>If you specified a duration and your Spot Instance request was fulfilled, this is the fixed hourly price in effect for the Spot Instance while it runs.</p>
    public let actualBlockHourlyPrice: String?
    /// <p>The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.</p>
    public let availabilityZoneGroup: String?
    /// <p>The duration for the Spot Instance, in minutes.</p>
    public let blockDurationMinutes: Int
    /// <p>The date and time when the Spot Instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
    public let createTime: Date?
    /// <p>The fault codes for the Spot Instance request, if any.</p>
    public let fault: SpotInstanceStateFault?
    /// <p>The instance ID, if an instance has been launched to fulfill the Spot Instance request.</p>
    public let instanceId: String?
    /// <p>The behavior when a Spot Instance is interrupted.</p>
    public let instanceInterruptionBehavior: InstanceInterruptionBehavior?
    /// <p>The instance launch group. Launch groups are Spot Instances that launch together and terminate together.</p>
    public let launchGroup: String?
    /// <p>Additional information for launching instances.</p>
    public let launchSpecification: LaunchSpecification?
    /// <p>The Availability Zone in which the request is launched.</p>
    public let launchedAvailabilityZone: String?
    /// <p>The product description associated with the Spot Instance.</p>
    public let productDescription: RIProductDescription?
    /// <p>The ID of the Spot Instance request.</p>
    public let spotInstanceRequestId: String?
    /// <p>The maximum price per hour that you are willing to pay for a Spot Instance.</p>
    public let spotPrice: String?
    /// <p>The state of the Spot Instance request. Spot status information helps track your Spot
    ///             Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot status</a> in the
    ///                 <i>Amazon EC2 User Guide for Linux Instances</i>.</p>
    public let state: SpotInstanceState?
    /// <p>The status code and status message describing the Spot Instance request.</p>
    public let status: SpotInstanceStatus?
    /// <p>Any tags assigned to the resource.</p>
    public let tags: [Tag]?
    /// <p>The Spot Instance request type.</p>
    public let type: SpotInstanceType?
    /// <p>The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    ///         The request becomes active at this date and time.</p>
    public let validFrom: Date?
    /// <p>The end date of the request, in UTC format
    ///                 (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p>
    ///          <ul>
    ///             <li>
    ///                 <p>For a persistent request, the request remains active until the <code>validUntil</code> date
    ///                     and time is reached. Otherwise, the request remains active until you cancel it.
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                <p>For a one-time request, the request remains active until all instances launch,
    ///                     the request is canceled, or the <code>validUntil</code> date and time is reached. By default, the
    ///                     request is valid for 7 days from the date the request was created.</p>
    ///            </li>
    ///          </ul>
    public let validUntil: Date?

    public init (
        actualBlockHourlyPrice: String? = nil,
        availabilityZoneGroup: String? = nil,
        blockDurationMinutes: Int = 0,
        createTime: Date? = nil,
        fault: SpotInstanceStateFault? = nil,
        instanceId: String? = nil,
        instanceInterruptionBehavior: InstanceInterruptionBehavior? = nil,
        launchGroup: String? = nil,
        launchSpecification: LaunchSpecification? = nil,
        launchedAvailabilityZone: String? = nil,
        productDescription: RIProductDescription? = nil,
        spotInstanceRequestId: String? = nil,
        spotPrice: String? = nil,
        state: SpotInstanceState? = nil,
        status: SpotInstanceStatus? = nil,
        tags: [Tag]? = nil,
        type: SpotInstanceType? = nil,
        validFrom: Date? = nil,
        validUntil: Date? = nil
    )
    {
        self.actualBlockHourlyPrice = actualBlockHourlyPrice
        self.availabilityZoneGroup = availabilityZoneGroup
        self.blockDurationMinutes = blockDurationMinutes
        self.createTime = createTime
        self.fault = fault
        self.instanceId = instanceId
        self.instanceInterruptionBehavior = instanceInterruptionBehavior
        self.launchGroup = launchGroup
        self.launchSpecification = launchSpecification
        self.launchedAvailabilityZone = launchedAvailabilityZone
        self.productDescription = productDescription
        self.spotInstanceRequestId = spotInstanceRequestId
        self.spotPrice = spotPrice
        self.state = state
        self.status = status
        self.tags = tags
        self.type = type
        self.validFrom = validFrom
        self.validUntil = validUntil
    }
}
