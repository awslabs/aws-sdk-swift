// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for CreateVpcEndpoint.</p>
public struct CreateVpcEndpointInput: Equatable {
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///             request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure
    ///                 Idempotency</a>.</p>
    public let clientToken: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>(Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the
    ///             service. The policy must be in valid JSON format. If this parameter is not specified, we
    ///             attach a default policy that allows full access to the service.</p>
    public let policyDocument: String?
    /// <p>(Interface endpoint) Indicates whether to associate a private hosted zone with the
    ///             specified VPC. The private hosted zone contains a record set for the default public DNS
    ///             name for the service for the Region (for example,
    ///                 <code>kinesis.us-east-1.amazonaws.com</code>), which resolves to the private IP
    ///             addresses of the endpoint network interfaces in the VPC. This enables you to make
    ///             requests to the default public DNS name for the service instead of the public DNS names
    ///             that are automatically generated by the VPC endpoint service.</p>
    ///         <p>To use a private hosted zone, you must set the following VPC attributes to
    ///             <code>true</code>: <code>enableDnsHostnames</code> and
    ///             <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a> to set the VPC
    ///             attributes.</p>
    ///         <p>Default: <code>true</code>
    ///          </p>
    public let privateDnsEnabled: Bool
    /// <p>(Gateway endpoint) One or more route table IDs.</p>
    public let routeTableIds: [String]?
    /// <p>(Interface endpoint) The ID of one or more security groups to associate with the
    ///             endpoint network interface.</p>
    public let securityGroupIds: [String]?
    /// <p>The service name. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request, or get the name from the service
    ///             provider.</p>
    public let serviceName: String?
    /// <p>(Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint
    ///             network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.</p>
    public let subnetIds: [String]?
    /// <p>The tags to associate with the endpoint.</p>
    public let tagSpecifications: [TagSpecification]?
    /// <p>The type of endpoint.</p>
    ///         <p>Default: Gateway</p>
    public let vpcEndpointType: VpcEndpointType?
    /// <p>The ID of the VPC in which the endpoint will be used.</p>
    public let vpcId: String?

    public init (
        clientToken: String? = nil,
        dryRun: Bool = false,
        policyDocument: String? = nil,
        privateDnsEnabled: Bool = false,
        routeTableIds: [String]? = nil,
        securityGroupIds: [String]? = nil,
        serviceName: String? = nil,
        subnetIds: [String]? = nil,
        tagSpecifications: [TagSpecification]? = nil,
        vpcEndpointType: VpcEndpointType? = nil,
        vpcId: String? = nil
    )
    {
        self.clientToken = clientToken
        self.dryRun = dryRun
        self.policyDocument = policyDocument
        self.privateDnsEnabled = privateDnsEnabled
        self.routeTableIds = routeTableIds
        self.securityGroupIds = securityGroupIds
        self.serviceName = serviceName
        self.subnetIds = subnetIds
        self.tagSpecifications = tagSpecifications
        self.vpcEndpointType = vpcEndpointType
        self.vpcId = vpcId
    }
}
