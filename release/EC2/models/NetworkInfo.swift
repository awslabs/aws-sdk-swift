// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the networking features of the instance type.</p>
public struct NetworkInfo: Equatable {
    /// <p>The index of the default network card, starting at 0.</p>
    public let defaultNetworkCardIndex: Int?
    /// <p>Describes the Elastic Fabric Adapters for the instance type.</p>
    public let efaInfo: EfaInfo?
    /// <p>Indicates whether Elastic Fabric Adapter (EFA) is supported.</p>
    public let efaSupported: Bool?
    /// <p>Indicates whether Elastic Network Adapter (ENA) is supported.</p>
    public let enaSupport: EnaSupport?
    /// <p>The maximum number of IPv4 addresses per network interface.</p>
    public let ipv4AddressesPerInterface: Int?
    /// <p>The maximum number of IPv6 addresses per network interface.</p>
    public let ipv6AddressesPerInterface: Int?
    /// <p>Indicates whether IPv6 is supported.</p>
    public let ipv6Supported: Bool?
    /// <p>The maximum number of physical network cards that can be allocated to the instance.</p>
    public let maximumNetworkCards: Int?
    /// <p>The maximum number of network interfaces for the instance type.</p>
    public let maximumNetworkInterfaces: Int?
    /// <p>Describes the network cards for the instance type.</p>
    public let networkCards: [NetworkCardInfo]?
    /// <p>The network performance.</p>
    public let networkPerformance: String?

    public init (
        defaultNetworkCardIndex: Int? = nil,
        efaInfo: EfaInfo? = nil,
        efaSupported: Bool? = nil,
        enaSupport: EnaSupport? = nil,
        ipv4AddressesPerInterface: Int? = nil,
        ipv6AddressesPerInterface: Int? = nil,
        ipv6Supported: Bool? = nil,
        maximumNetworkCards: Int? = nil,
        maximumNetworkInterfaces: Int? = nil,
        networkCards: [NetworkCardInfo]? = nil,
        networkPerformance: String? = nil
    )
    {
        self.defaultNetworkCardIndex = defaultNetworkCardIndex
        self.efaInfo = efaInfo
        self.efaSupported = efaSupported
        self.enaSupport = enaSupport
        self.ipv4AddressesPerInterface = ipv4AddressesPerInterface
        self.ipv6AddressesPerInterface = ipv6AddressesPerInterface
        self.ipv6Supported = ipv6Supported
        self.maximumNetworkCards = maximumNetworkCards
        self.maximumNetworkInterfaces = maximumNetworkInterfaces
        self.networkCards = networkCards
        self.networkPerformance = networkPerformance
    }
}
