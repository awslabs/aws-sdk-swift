// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains the output of GetReservedInstancesExchangeQuote.</p>
public struct GetReservedInstancesExchangeQuoteOutput: Equatable {
    /// <p>The currency of the transaction.</p>
    public let currencyCode: String?
    /// <p>If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot be completed.</p>
    public let isValidExchange: Bool
    /// <p>The new end date of the reservation term.</p>
    public let outputReservedInstancesWillExpireAt: Date?
    /// <p>The total true upfront charge for the exchange.</p>
    public let paymentDue: String?
    /// <p>The cost associated with the Reserved Instance.</p>
    public let reservedInstanceValueRollup: ReservationValue?
    /// <p>The configuration of your Convertible Reserved Instances.</p>
    public let reservedInstanceValueSet: [ReservedInstanceReservationValue]?
    /// <p>The cost associated with the Reserved Instance.</p>
    public let targetConfigurationValueRollup: ReservationValue?
    /// <p>The values of the target Convertible Reserved Instances.</p>
    public let targetConfigurationValueSet: [TargetReservationValue]?
    /// <p>Describes the reason why the exchange cannot be completed.</p>
    public let validationFailureReason: String?

    public init (
        currencyCode: String? = nil,
        isValidExchange: Bool = false,
        outputReservedInstancesWillExpireAt: Date? = nil,
        paymentDue: String? = nil,
        reservedInstanceValueRollup: ReservationValue? = nil,
        reservedInstanceValueSet: [ReservedInstanceReservationValue]? = nil,
        targetConfigurationValueRollup: ReservationValue? = nil,
        targetConfigurationValueSet: [TargetReservationValue]? = nil,
        validationFailureReason: String? = nil
    )
    {
        self.currencyCode = currencyCode
        self.isValidExchange = isValidExchange
        self.outputReservedInstancesWillExpireAt = outputReservedInstancesWillExpireAt
        self.paymentDue = paymentDue
        self.reservedInstanceValueRollup = reservedInstanceValueRollup
        self.reservedInstanceValueSet = reservedInstanceValueSet
        self.targetConfigurationValueRollup = targetConfigurationValueRollup
        self.targetConfigurationValueSet = targetConfigurationValueSet
        self.validationFailureReason = validationFailureReason
    }
}
