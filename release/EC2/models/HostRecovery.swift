// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum HostRecovery {
    case off
    case on
    case sdkUnknown(String)
}

extension HostRecovery : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HostRecovery] {
        return [
            .off,
            .on,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .off: return "off"
        case .on: return "on"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HostRecovery(rawValue: rawValue) ?? HostRecovery.sdkUnknown(rawValue)
    }
}
