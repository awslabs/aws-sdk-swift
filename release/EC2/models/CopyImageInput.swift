// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the parameters for CopyImage.</p>
public struct CopyImageInput: Equatable {
    /// <p>Unique, case-sensitive identifier you provide to ensure
    ///        idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>
    ///        in the <i>Amazon EC2 API Reference</i>.</p>
    public let clientToken: String?
    /// <p>A description for the new AMI in the destination Region.</p>
    public let description: String?
    /// <p>The Amazon Resource Name (ARN) of the Outpost to which to copy the AMI. Only
    ///   		specify this parameter when copying an AMI from an AWS Region to an Outpost.
    ///   		The AMI must be in the Region of the destination Outpost. You cannot copy an
    ///   		AMI from an Outpost to a Region, from one Outpost to another, or within the same
    ///   		Outpost.</p>
    ///   	
    ///   	      <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-amis">
    ///   		Copying AMIs from an AWS Region to an Outpost</a> in the
    ///   		<i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    public let destinationOutpostArn: String?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///        and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///        Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>Specifies whether the destination snapshots of the copied image should be encrypted.
    ///        You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted
    ///        copy of an encrypted snapshot. The default CMK for EBS is used unless you specify a non-default
    ///        AWS Key Management Service (AWS KMS) CMK using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
    public let encrypted: Bool
    /// <p>The identifier of the symmetric AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating
    ///       encrypted volumes. If this parameter is not specified, your AWS managed CMK for EBS is used.
    ///       If you specify a CMK, you must also set the encrypted state to <code>true</code>.</p>
    ///    	     <p>You can specify a CMK using any of the following:</p>
    ///    	     <ul>
    ///             <li>
    ///    			         <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p>
    ///    		       </li>
    ///             <li>
    ///    	           <p>Key alias. For example, alias/ExampleAlias.</p>
    ///    	        </li>
    ///             <li>
    ///    	           <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p>
    ///    		       </li>
    ///             <li>
    ///    		          <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p>
    ///    		       </li>
    ///          </ul>
    ///          <p>AWS authenticates the CMK asynchronously. Therefore, if you specify an identifier that is not valid,
    ///       the action can appear to complete, but eventually fails.</p>
    ///          <p>The specified CMK must exist in the destination Region.</p>
    ///          <p>Amazon EBS does not support asymmetric CMKs.</p>
    public let kmsKeyId: String?
    /// <p>The name of the new AMI in the destination Region.</p>
    public let name: String?
    /// <p>The ID of the AMI to copy.</p>
    public let sourceImageId: String?
    /// <p>The name of the Region that contains the AMI to copy.</p>
    public let sourceRegion: String?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        destinationOutpostArn: String? = nil,
        dryRun: Bool = false,
        encrypted: Bool = false,
        kmsKeyId: String? = nil,
        name: String? = nil,
        sourceImageId: String? = nil,
        sourceRegion: String? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.destinationOutpostArn = destinationOutpostArn
        self.dryRun = dryRun
        self.encrypted = encrypted
        self.kmsKeyId = kmsKeyId
        self.name = name
        self.sourceImageId = sourceImageId
        self.sourceRegion = sourceRegion
    }
}
