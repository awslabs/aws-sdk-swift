// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribePlacementGroupsInput: Equatable {
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The filters.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>group-name</code> - The name of the placement group.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>state</code> - The state of the placement group (<code>pending</code> |
    ///                         <code>available</code> | <code>deleting</code> |
    ///                     <code>deleted</code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>strategy</code> - The strategy of the placement group
    ///                         (<code>cluster</code> | <code>spread</code> |
    ///                     <code>partition</code>).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>tag</code>:<key> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value.
    ///     For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>The IDs of the placement groups.</p>
    public let groupIds: [String]?
    /// <p>The names of the placement groups.</p>
    ///         <p>Default: Describes all your placement groups, or only those otherwise
    ///             specified.</p>
    public let groupNames: [String]?

    public init (
        dryRun: Bool = false,
        filters: [Filter]? = nil,
        groupIds: [String]? = nil,
        groupNames: [String]? = nil
    )
    {
        self.dryRun = dryRun
        self.filters = filters
        self.groupIds = groupIds
        self.groupNames = groupNames
    }
}
