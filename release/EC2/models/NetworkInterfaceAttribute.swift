// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum NetworkInterfaceAttribute {
    case attachment
    case description
    case groupset
    case sourcedestcheck
    case sdkUnknown(String)
}

extension NetworkInterfaceAttribute : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NetworkInterfaceAttribute] {
        return [
            .attachment,
            .description,
            .groupset,
            .sourcedestcheck,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .attachment: return "attachment"
        case .description: return "description"
        case .groupset: return "groupSet"
        case .sourcedestcheck: return "sourceDestCheck"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NetworkInterfaceAttribute(rawValue: rawValue) ?? NetworkInterfaceAttribute.sdkUnknown(rawValue)
    }
}
