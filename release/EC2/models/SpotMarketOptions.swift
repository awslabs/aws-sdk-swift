// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The options for Spot Instances.</p>
public struct SpotMarketOptions: Equatable {
    /// <p>The required duration for the Spot Instances (also known as Spot blocks), in minutes.
    ///             This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p>
    ///         <p>The duration period starts as soon as your Spot Instance receives its instance ID. At
    ///             the end of the duration period, Amazon EC2 marks the Spot Instance for termination and
    ///             provides a Spot Instance termination notice, which gives the instance a two-minute
    ///             warning before it terminates.</p>
    ///         <p>You can't specify an Availability Zone group or a launch group if you specify a
    ///             duration.</p>
    ///         <p>New accounts or accounts with no previous billing history with AWS are not eligible
    ///             for Spot Instances with a defined duration (also known as Spot blocks).</p>
    public let blockDurationMinutes: Int
    /// <p>The behavior when a Spot Instance is interrupted. The default is
    ///                 <code>terminate</code>.</p>
    public let instanceInterruptionBehavior: InstanceInterruptionBehavior?
    /// <p>The maximum hourly price you're willing to pay for the Spot Instances. The default is
    ///             the On-Demand price.</p>
    public let maxPrice: String?
    /// <p>The Spot Instance request type. For <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances">RunInstances</a>, persistent Spot
    ///             Instance requests are only supported when the instance interruption behavior is either <code>hibernate</code> or
    ///                 <code>stop</code>.</p>
    public let spotInstanceType: SpotInstanceType?
    /// <p>The end date of the request, in UTC format
    ///                 (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    ///             Supported only for persistent requests.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>For a persistent request, the request remains active until the
    ///                         <code>ValidUntil</code> date and time is reached. Otherwise, the request
    ///                     remains active until you cancel it.</p>
    ///             </li>
    ///             <li>
    ///                 <p>For a one-time request, <code>ValidUntil</code> is not supported. The request
    ///                     remains active until all instances launch or you cancel the request.</p>
    ///             </li>
    ///          </ul>
    public let validUntil: Date?

    public init (
        blockDurationMinutes: Int = 0,
        instanceInterruptionBehavior: InstanceInterruptionBehavior? = nil,
        maxPrice: String? = nil,
        spotInstanceType: SpotInstanceType? = nil,
        validUntil: Date? = nil
    )
    {
        self.blockDurationMinutes = blockDurationMinutes
        self.instanceInterruptionBehavior = instanceInterruptionBehavior
        self.maxPrice = maxPrice
        self.spotInstanceType = spotInstanceType
        self.validUntil = validUntil
    }
}
