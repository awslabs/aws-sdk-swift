// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a security group and AWS account ID pair.</p>
public struct UserIdGroupPair: Equatable {
    /// <p>A description for the security group rule that references this user ID group
    /// 			pair.</p>
    ///          <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9,
    ///       spaces, and ._-:/()#,@[]+=;{}!$*</p>
    public let description: String?
    /// <p>The ID of the security group.</p>
    public let groupId: String?
    /// <p>The name of the security group. In a request, use this parameter for a security group
    ///             in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the
    ///             security group ID. </p>
    ///         <p>For a referenced security group in another VPC, this value is not returned if the
    ///             referenced security group is deleted.</p>
    public let groupName: String?
    /// <p>The status of a VPC peering connection, if applicable.</p>
    public let peeringStatus: String?
    /// <p>The ID of an AWS account.</p>
    ///         <p>For a referenced security group in another VPC, the account ID of the referenced
    ///             security group is returned in the response. If the referenced security group is deleted,
    ///             this value is not returned.</p>
    ///          <p>[EC2-Classic] Required when adding or removing rules that reference a security group
    ///             in another AWS account.</p>
    public let userId: String?
    /// <p>The ID of the VPC for the referenced security group, if applicable.</p>
    public let vpcId: String?
    /// <p>The ID of the VPC peering connection, if applicable.</p>
    public let vpcPeeringConnectionId: String?

    public init (
        description: String? = nil,
        groupId: String? = nil,
        groupName: String? = nil,
        peeringStatus: String? = nil,
        userId: String? = nil,
        vpcId: String? = nil,
        vpcPeeringConnectionId: String? = nil
    )
    {
        self.description = description
        self.groupId = groupId
        self.groupName = groupName
        self.peeringStatus = peeringStatus
        self.userId = userId
        self.vpcId = vpcId
        self.vpcPeeringConnectionId = vpcPeeringConnectionId
    }
}
