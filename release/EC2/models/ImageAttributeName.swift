// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ImageAttributeName {
    case blockdevicemapping
    case bootmode
    case description
    case kernel
    case launchpermission
    case productcodes
    case ramdisk
    case sriovnetsupport
    case sdkUnknown(String)
}

extension ImageAttributeName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ImageAttributeName] {
        return [
            .blockdevicemapping,
            .bootmode,
            .description,
            .kernel,
            .launchpermission,
            .productcodes,
            .ramdisk,
            .sriovnetsupport,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .blockdevicemapping: return "blockDeviceMapping"
        case .bootmode: return "bootMode"
        case .description: return "description"
        case .kernel: return "kernel"
        case .launchpermission: return "launchPermission"
        case .productcodes: return "productCodes"
        case .ramdisk: return "ramdisk"
        case .sriovnetsupport: return "sriovNetSupport"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ImageAttributeName(rawValue: rawValue) ?? ImageAttributeName.sdkUnknown(rawValue)
    }
}
