// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ExportImageInput: Equatable {
    /// <p>Token to enable idempotency for export image requests.</p>
    public var clientToken: String?
    /// <p>A description of the image being exported. The maximum length is 255 characters.</p>
    public let description: String?
    /// <p>The disk image format.</p>
    public let diskImageFormat: DiskImageFormat?
    /// <p>Checks whether you have the required permissions for the action, without actually making the request,
    ///    and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>.
    ///    Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    public let dryRun: Bool
    /// <p>The ID of the image.</p>
    public let imageId: String?
    /// <p>The name of the role that grants VM Import/Export permission to export images to your Amazon
    ///    S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.</p>
    public let roleName: String?
    /// <p>Information about the destination Amazon S3 bucket. The bucket must exist and grant WRITE
    ///    and READ_ACP permissions to the AWS account vm-import-export@amazon.com.</p>
    public let s3ExportLocation: ExportTaskS3LocationRequest?
    /// <p>The tags to apply to the export image task during creation.</p>
    public let tagSpecifications: [TagSpecification]?

    public init (
        clientToken: String? = nil,
        description: String? = nil,
        diskImageFormat: DiskImageFormat? = nil,
        dryRun: Bool = false,
        imageId: String? = nil,
        roleName: String? = nil,
        s3ExportLocation: ExportTaskS3LocationRequest? = nil,
        tagSpecifications: [TagSpecification]? = nil
    )
    {
        self.clientToken = clientToken
        self.description = description
        self.diskImageFormat = diskImageFormat
        self.dryRun = dryRun
        self.imageId = imageId
        self.roleName = roleName
        self.s3ExportLocation = s3ExportLocation
        self.tagSpecifications = tagSpecifications
    }
}
