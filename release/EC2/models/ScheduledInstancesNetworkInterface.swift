// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a network interface for a Scheduled Instance.</p>
public struct ScheduledInstancesNetworkInterface: Equatable {
    /// <p>Indicates whether to assign a public IPv4 address to instances launched in a VPC. The
    ///          public IPv4 address can only be assigned to a network interface for eth0, and can only be
    ///          assigned to a new network interface, not an existing one. You cannot specify more than one
    ///          network interface in the request. If launching into a default subnet, the default value is
    ///          <code>true</code>.</p>
    public let associatePublicIpAddress: Bool
    /// <p>Indicates whether to delete the interface when the instance is terminated.</p>
    public let deleteOnTermination: Bool
    /// <p>The description.</p>
    public let description: String?
    /// <p>The index of the device for the network interface attachment.</p>
    public let deviceIndex: Int
    /// <p>The IDs of the security groups.</p>
    public let groups: [String]?
    /// <p>The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.</p>
    public let ipv6AddressCount: Int
    /// <p>The specific IPv6 addresses from the subnet range.</p>
    public let ipv6Addresses: [ScheduledInstancesIpv6Address]?
    /// <p>The ID of the network interface.</p>
    public let networkInterfaceId: String?
    /// <p>The IPv4 address of the network interface within the subnet.</p>
    public let privateIpAddress: String?
    /// <p>The private IPv4 addresses.</p>
    public let privateIpAddressConfigs: [ScheduledInstancesPrivateIpAddressConfig]?
    /// <p>The number of secondary private IPv4 addresses.</p>
    public let secondaryPrivateIpAddressCount: Int
    /// <p>The ID of the subnet.</p>
    public let subnetId: String?

    public init (
        associatePublicIpAddress: Bool = false,
        deleteOnTermination: Bool = false,
        description: String? = nil,
        deviceIndex: Int = 0,
        groups: [String]? = nil,
        ipv6AddressCount: Int = 0,
        ipv6Addresses: [ScheduledInstancesIpv6Address]? = nil,
        networkInterfaceId: String? = nil,
        privateIpAddress: String? = nil,
        privateIpAddressConfigs: [ScheduledInstancesPrivateIpAddressConfig]? = nil,
        secondaryPrivateIpAddressCount: Int = 0,
        subnetId: String? = nil
    )
    {
        self.associatePublicIpAddress = associatePublicIpAddress
        self.deleteOnTermination = deleteOnTermination
        self.description = description
        self.deviceIndex = deviceIndex
        self.groups = groups
        self.ipv6AddressCount = ipv6AddressCount
        self.ipv6Addresses = ipv6Addresses
        self.networkInterfaceId = networkInterfaceId
        self.privateIpAddress = privateIpAddress
        self.privateIpAddressConfigs = privateIpAddressConfigs
        self.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount
        self.subnetId = subnetId
    }
}
