// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPlacementsOutputBody: Equatable {
    public let placements: [PlacementSummary]?
    public let nextToken: String?
}

extension ListPlacementsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case placements
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let placementsContainer = try containerValues.decodeIfPresent([PlacementSummary].self, forKey: .placements)
        var placementsDecoded0:[PlacementSummary]? = nil
        if let placementsContainer = placementsContainer {
            placementsDecoded0 = [PlacementSummary]()
            for structure0 in placementsContainer {
                placementsDecoded0?.append(structure0)
            }
        }
        placements = placementsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
