// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePlacementInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case attributes
        case placementName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let attributes = attributes {
            var attributesContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .attributes)
            for (dictKey0, placementattributemap0) in attributes {
                try attributesContainer.encode(placementattributemap0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let placementName = placementName {
            try encodeContainer.encode(placementName, forKey: .placementName)
        }
    }
}
