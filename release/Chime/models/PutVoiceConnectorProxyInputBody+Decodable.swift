// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutVoiceConnectorProxyInputBody: Equatable {
    public let defaultSessionExpiryMinutes: Int?
    public let phoneNumberPoolCountries: [String]?
    public let fallBackPhoneNumber: String?
    public let disabled: Bool?
}

extension PutVoiceConnectorProxyInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case defaultSessionExpiryMinutes = "DefaultSessionExpiryMinutes"
        case disabled = "Disabled"
        case fallBackPhoneNumber = "FallBackPhoneNumber"
        case phoneNumberPoolCountries = "PhoneNumberPoolCountries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultSessionExpiryMinutesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .defaultSessionExpiryMinutes)
        defaultSessionExpiryMinutes = defaultSessionExpiryMinutesDecoded
        let phoneNumberPoolCountriesContainer = try containerValues.decodeIfPresent([String].self, forKey: .phoneNumberPoolCountries)
        var phoneNumberPoolCountriesDecoded0:[String]? = nil
        if let phoneNumberPoolCountriesContainer = phoneNumberPoolCountriesContainer {
            phoneNumberPoolCountriesDecoded0 = [String]()
            for string0 in phoneNumberPoolCountriesContainer {
                phoneNumberPoolCountriesDecoded0?.append(string0)
            }
        }
        phoneNumberPoolCountries = phoneNumberPoolCountriesDecoded0
        let fallBackPhoneNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fallBackPhoneNumber)
        fallBackPhoneNumber = fallBackPhoneNumberDecoded
        let disabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .disabled)
        disabled = disabledDecoded
    }
}
