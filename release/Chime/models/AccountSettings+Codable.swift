// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccountSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case disableRemoteControl = "DisableRemoteControl"
        case enableDialOut = "EnableDialOut"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let disableRemoteControl = disableRemoteControl {
            try encodeContainer.encode(disableRemoteControl, forKey: .disableRemoteControl)
        }
        if let enableDialOut = enableDialOut {
            try encodeContainer.encode(enableDialOut, forKey: .enableDialOut)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let disableRemoteControlDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .disableRemoteControl)
        disableRemoteControl = disableRemoteControlDecoded
        let enableDialOutDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enableDialOut)
        enableDialOut = enableDialOutDecoded
    }
}
