// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MembershipItem: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case memberId = "MemberId"
        case role = "Role"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let memberId = memberId {
            try encodeContainer.encode(memberId, forKey: .memberId)
        }
        if let role = role {
            try encodeContainer.encode(role.rawValue, forKey: .role)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let memberIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .memberId)
        memberId = memberIdDecoded
        let roleDecoded = try containerValues.decodeIfPresent(RoomMembershipRole.self, forKey: .role)
        role = roleDecoded
    }
}
