// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateSipMediaApplicationInputBody: Equatable {
    public let awsRegion: String?
    public let name: String?
    public let endpoints: [SipMediaApplicationEndpoint]?
}

extension CreateSipMediaApplicationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case awsRegion = "AwsRegion"
        case endpoints = "Endpoints"
        case name = "Name"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let awsRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsRegion)
        awsRegion = awsRegionDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let endpointsContainer = try containerValues.decodeIfPresent([SipMediaApplicationEndpoint].self, forKey: .endpoints)
        var endpointsDecoded0:[SipMediaApplicationEndpoint]? = nil
        if let endpointsContainer = endpointsContainer {
            endpointsDecoded0 = [SipMediaApplicationEndpoint]()
            for structure0 in endpointsContainer {
                endpointsDecoded0?.append(structure0)
            }
        }
        endpoints = endpointsDecoded0
    }
}
