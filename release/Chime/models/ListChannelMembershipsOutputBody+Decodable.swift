// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListChannelMembershipsOutputBody: Equatable {
    public let channelArn: String?
    public let channelMemberships: [ChannelMembershipSummary]?
    public let nextToken: String?
}

extension ListChannelMembershipsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case channelArn = "ChannelArn"
        case channelMemberships = "ChannelMemberships"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let channelArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .channelArn)
        channelArn = channelArnDecoded
        let channelMembershipsContainer = try containerValues.decodeIfPresent([ChannelMembershipSummary].self, forKey: .channelMemberships)
        var channelMembershipsDecoded0:[ChannelMembershipSummary]? = nil
        if let channelMembershipsContainer = channelMembershipsContainer {
            channelMembershipsDecoded0 = [ChannelMembershipSummary]()
            for structure0 in channelMembershipsContainer {
                channelMembershipsDecoded0?.append(structure0)
            }
        }
        channelMemberships = channelMembershipsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
