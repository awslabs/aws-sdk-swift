// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPhoneNumbersOutputBody: Equatable {
    public let phoneNumbers: [PhoneNumber]?
    public let nextToken: String?
}

extension ListPhoneNumbersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case phoneNumbers = "PhoneNumbers"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let phoneNumbersContainer = try containerValues.decodeIfPresent([PhoneNumber].self, forKey: .phoneNumbers)
        var phoneNumbersDecoded0:[PhoneNumber]? = nil
        if let phoneNumbersContainer = phoneNumbersContainer {
            phoneNumbersDecoded0 = [PhoneNumber]()
            for structure0 in phoneNumbersContainer {
                phoneNumbersDecoded0?.append(structure0)
            }
        }
        phoneNumbers = phoneNumbersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
