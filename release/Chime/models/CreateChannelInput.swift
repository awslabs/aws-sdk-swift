// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateChannelInput: Equatable {
    /// <p>The ARN of the channel request.</p>
    public let appInstanceArn: String?
    /// <p>The <code>AppInstanceUserArn</code> of the user that makes the API call.</p>
    public let chimeBearer: String?
    /// <p>The client token for the request. An <code>Idempotency</code> token.</p>
    public var clientRequestToken: String?
    /// <p>The metadata of the creation request. Limited to 1KB and UTF-8.</p>
    public let metadata: String?
    /// <p>The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves
    ///     and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.</p>
    public let mode: ChannelMode?
    /// <p>The name of the channel.</p>
    public let name: String?
    /// <p>The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel.
    ///     Public channels are discoverable by anyone in the <code>AppInstance</code>.</p>
    public let privacy: ChannelPrivacy?
    /// <p>The tags for the creation request.</p>
    public let tags: [Tag]?

    public init (
        appInstanceArn: String? = nil,
        chimeBearer: String? = nil,
        clientRequestToken: String? = nil,
        metadata: String? = nil,
        mode: ChannelMode? = nil,
        name: String? = nil,
        privacy: ChannelPrivacy? = nil,
        tags: [Tag]? = nil
    )
    {
        self.appInstanceArn = appInstanceArn
        self.chimeBearer = chimeBearer
        self.clientRequestToken = clientRequestToken
        self.metadata = metadata
        self.mode = mode
        self.name = name
        self.privacy = privacy
        self.tags = tags
    }
}
