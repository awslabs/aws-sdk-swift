// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRoomsOutputBody: Equatable {
    public let rooms: [Room]?
    public let nextToken: String?
}

extension ListRoomsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case rooms = "Rooms"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomsContainer = try containerValues.decodeIfPresent([Room].self, forKey: .rooms)
        var roomsDecoded0:[Room]? = nil
        if let roomsContainer = roomsContainer {
            roomsDecoded0 = [Room]()
            for structure0 in roomsContainer {
                roomsDecoded0?.append(structure0)
            }
        }
        rooms = roomsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
