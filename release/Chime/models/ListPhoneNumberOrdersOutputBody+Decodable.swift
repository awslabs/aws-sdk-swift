// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPhoneNumberOrdersOutputBody: Equatable {
    public let phoneNumberOrders: [PhoneNumberOrder]?
    public let nextToken: String?
}

extension ListPhoneNumberOrdersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case phoneNumberOrders = "PhoneNumberOrders"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let phoneNumberOrdersContainer = try containerValues.decodeIfPresent([PhoneNumberOrder].self, forKey: .phoneNumberOrders)
        var phoneNumberOrdersDecoded0:[PhoneNumberOrder]? = nil
        if let phoneNumberOrdersContainer = phoneNumberOrdersContainer {
            phoneNumberOrdersDecoded0 = [PhoneNumberOrder]()
            for structure0 in phoneNumberOrdersContainer {
                phoneNumberOrdersDecoded0?.append(structure0)
            }
        }
        phoneNumberOrders = phoneNumberOrdersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
