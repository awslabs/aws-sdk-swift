// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InviteUsersInputBody: Equatable {
    public let userEmailList: [String]?
    public let userType: UserType?
}

extension InviteUsersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case userEmailList = "UserEmailList"
        case userType = "UserType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userEmailListContainer = try containerValues.decodeIfPresent([String].self, forKey: .userEmailList)
        var userEmailListDecoded0:[String]? = nil
        if let userEmailListContainer = userEmailListContainer {
            userEmailListDecoded0 = [String]()
            for string0 in userEmailListContainer {
                userEmailListDecoded0?.append(string0)
            }
        }
        userEmailList = userEmailListDecoded0
        let userTypeDecoded = try containerValues.decodeIfPresent(UserType.self, forKey: .userType)
        userType = userTypeDecoded
    }
}
