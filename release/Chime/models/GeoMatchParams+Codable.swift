// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GeoMatchParams: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case areaCode = "AreaCode"
        case country = "Country"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let areaCode = areaCode {
            try encodeContainer.encode(areaCode, forKey: .areaCode)
        }
        if let country = country {
            try encodeContainer.encode(country, forKey: .country)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let countryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .country)
        country = countryDecoded
        let areaCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .areaCode)
        areaCode = areaCodeDecoded
    }
}
