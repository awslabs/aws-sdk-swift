// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoomMembership: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case invitedBy = "InvitedBy"
        case member = "Member"
        case role = "Role"
        case roomId = "RoomId"
        case updatedTimestamp = "UpdatedTimestamp"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let invitedBy = invitedBy {
            try encodeContainer.encode(invitedBy, forKey: .invitedBy)
        }
        if let member = member {
            try encodeContainer.encode(member, forKey: .member)
        }
        if let role = role {
            try encodeContainer.encode(role.rawValue, forKey: .role)
        }
        if let roomId = roomId {
            try encodeContainer.encode(roomId, forKey: .roomId)
        }
        if let updatedTimestamp = updatedTimestamp {
            try encodeContainer.encode(updatedTimestamp.timeIntervalSince1970, forKey: .updatedTimestamp)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roomId)
        roomId = roomIdDecoded
        let memberDecoded = try containerValues.decodeIfPresent(Member.self, forKey: .member)
        member = memberDecoded
        let roleDecoded = try containerValues.decodeIfPresent(RoomMembershipRole.self, forKey: .role)
        role = roleDecoded
        let invitedByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .invitedBy)
        invitedBy = invitedByDecoded
        let updatedTimestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .updatedTimestamp)
        updatedTimestamp = updatedTimestampDecoded
    }
}
