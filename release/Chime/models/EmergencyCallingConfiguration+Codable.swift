// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmergencyCallingConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dNIS = "DNIS"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dNIS = dNIS {
            var dNISContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dNIS)
            for dnisemergencycallingconfigurationlist0 in dNIS {
                try dNISContainer.encode(dnisemergencycallingconfigurationlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dNISContainer = try containerValues.decodeIfPresent([DNISEmergencyCallingConfiguration].self, forKey: .dNIS)
        var dNISDecoded0:[DNISEmergencyCallingConfiguration]? = nil
        if let dNISContainer = dNISContainer {
            dNISDecoded0 = [DNISEmergencyCallingConfiguration]()
            for structure0 in dNISContainer {
                dNISDecoded0?.append(structure0)
            }
        }
        dNIS = dNISDecoded0
    }
}
