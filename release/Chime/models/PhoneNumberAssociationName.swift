// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PhoneNumberAssociationName {
    case accountid
    case sipruleid
    case userid
    case voiceconnectorgroupid
    case voiceconnectorid
    case sdkUnknown(String)
}

extension PhoneNumberAssociationName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PhoneNumberAssociationName] {
        return [
            .accountid,
            .sipruleid,
            .userid,
            .voiceconnectorgroupid,
            .voiceconnectorid,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accountid: return "AccountId"
        case .sipruleid: return "SipRuleId"
        case .userid: return "UserId"
        case .voiceconnectorgroupid: return "VoiceConnectorGroupId"
        case .voiceconnectorid: return "VoiceConnectorId"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PhoneNumberAssociationName(rawValue: rawValue) ?? PhoneNumberAssociationName.sdkUnknown(rawValue)
    }
}
