// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListChannelMessagesInputQueryItemMiddleware: Middleware {
    public let id: String = "ListChannelMessagesInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListChannelMessagesInput>,
                  next: H) -> Swift.Result<OperationOutput<ListChannelMessagesOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "next-token".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "max-results".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let sortOrder = input.operationInput.sortOrder {
            let sortOrderQueryItem = URLQueryItem(name: "sort-order".urlPercentEncoding(), value: String(sortOrder.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(sortOrderQueryItem)
        }
        if let notBefore = input.operationInput.notBefore {
            let notBeforeQueryItem = URLQueryItem(name: "not-before".urlPercentEncoding(), value: String(notBefore.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(notBeforeQueryItem)
        }
        if let notAfter = input.operationInput.notAfter {
            let notAfterQueryItem = URLQueryItem(name: "not-after".urlPercentEncoding(), value: String(notAfter.iso8601WithoutFractionalSeconds()).urlPercentEncoding())
            input.builder.withQueryItem(notAfterQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListChannelMessagesInput>
    public typealias MOutput = OperationOutput<ListChannelMessagesOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListChannelMessagesOutputError>
}
