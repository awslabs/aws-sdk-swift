// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppInstanceUsersOutputBody: Equatable {
    public let appInstanceArn: String?
    public let appInstanceUsers: [AppInstanceUserSummary]?
    public let nextToken: String?
}

extension ListAppInstanceUsersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appInstanceArn = "AppInstanceArn"
        case appInstanceUsers = "AppInstanceUsers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appInstanceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appInstanceArn)
        appInstanceArn = appInstanceArnDecoded
        let appInstanceUsersContainer = try containerValues.decodeIfPresent([AppInstanceUserSummary].self, forKey: .appInstanceUsers)
        var appInstanceUsersDecoded0:[AppInstanceUserSummary]? = nil
        if let appInstanceUsersContainer = appInstanceUsersContainer {
            appInstanceUsersDecoded0 = [AppInstanceUserSummary]()
            for structure0 in appInstanceUsersContainer {
                appInstanceUsersDecoded0?.append(structure0)
            }
        }
        appInstanceUsers = appInstanceUsersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
