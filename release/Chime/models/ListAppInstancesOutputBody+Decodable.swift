// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppInstancesOutputBody: Equatable {
    public let appInstances: [AppInstanceSummary]?
    public let nextToken: String?
}

extension ListAppInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appInstances = "AppInstances"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appInstancesContainer = try containerValues.decodeIfPresent([AppInstanceSummary].self, forKey: .appInstances)
        var appInstancesDecoded0:[AppInstanceSummary]? = nil
        if let appInstancesContainer = appInstancesContainer {
            appInstancesDecoded0 = [AppInstanceSummary]()
            for structure0 in appInstancesContainer {
                appInstancesDecoded0?.append(structure0)
            }
        }
        appInstances = appInstancesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
