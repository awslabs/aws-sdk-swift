// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct SearchAvailablePhoneNumbersInputQueryItemMiddleware: Middleware {
    public let id: String = "SearchAvailablePhoneNumbersInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<SearchAvailablePhoneNumbersInput>,
                  next: H) -> Swift.Result<OperationOutput<SearchAvailablePhoneNumbersOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        input.builder.withQueryItem(URLQueryItem(name: "type", value: "phone-numbers"))
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "next-token".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let state = input.operationInput.state {
            let stateQueryItem = URLQueryItem(name: "state".urlPercentEncoding(), value: String(state).urlPercentEncoding())
            input.builder.withQueryItem(stateQueryItem)
        }
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "max-results".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let areaCode = input.operationInput.areaCode {
            let areaCodeQueryItem = URLQueryItem(name: "area-code".urlPercentEncoding(), value: String(areaCode).urlPercentEncoding())
            input.builder.withQueryItem(areaCodeQueryItem)
        }
        if let country = input.operationInput.country {
            let countryQueryItem = URLQueryItem(name: "country".urlPercentEncoding(), value: String(country).urlPercentEncoding())
            input.builder.withQueryItem(countryQueryItem)
        }
        if let city = input.operationInput.city {
            let cityQueryItem = URLQueryItem(name: "city".urlPercentEncoding(), value: String(city).urlPercentEncoding())
            input.builder.withQueryItem(cityQueryItem)
        }
        if let phoneNumberType = input.operationInput.phoneNumberType {
            let phoneNumberTypeQueryItem = URLQueryItem(name: "phone-number-type".urlPercentEncoding(), value: String(phoneNumberType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(phoneNumberTypeQueryItem)
        }
        if let tollFreePrefix = input.operationInput.tollFreePrefix {
            let tollFreePrefixQueryItem = URLQueryItem(name: "toll-free-prefix".urlPercentEncoding(), value: String(tollFreePrefix).urlPercentEncoding())
            input.builder.withQueryItem(tollFreePrefixQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<SearchAvailablePhoneNumbersInput>
    public typealias MOutput = OperationOutput<SearchAvailablePhoneNumbersOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<SearchAvailablePhoneNumbersOutputError>
}
