// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartEntitiesDetectionV2JobInput: Equatable {
    /// <p>A unique identifier for the request. If you don't set the client request token, Amazon Comprehend Medical
    ///       generates one.</p>
    public var clientRequestToken: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that
    ///       grants Amazon Comprehend Medical read access to your input data. For more information, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions-med.html#auth-role-permissions-med"> Role-Based Permissions Required for Asynchronous Operations</a>.</p>
    public let dataAccessRoleArn: String?
    /// <p>Specifies the format and location of the input data for the job.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The identifier of the job.</p>
    public let jobName: String?
    /// <p>An AWS Key Management Service key to encrypt your output files. If you do not specify a
    ///       key, the files are written in plain text.</p>
    public let kMSKey: String?
    /// <p>The language of the input documents. All documents must be in the same language.</p>
    public let languageCode: LanguageCode?
    /// <p>Specifies where to send the output files.</p>
    public let outputDataConfig: OutputDataConfig?

    public init (
        clientRequestToken: String? = nil,
        dataAccessRoleArn: String? = nil,
        inputDataConfig: InputDataConfig? = nil,
        jobName: String? = nil,
        kMSKey: String? = nil,
        languageCode: LanguageCode? = nil,
        outputDataConfig: OutputDataConfig? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.dataAccessRoleArn = dataAccessRoleArn
        self.inputDataConfig = inputDataConfig
        self.jobName = jobName
        self.kMSKey = kMSKey
        self.languageCode = languageCode
        self.outputDataConfig = outputDataConfig
    }
}
