// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The collection of medical entities extracted from the input text and their associated
///       information. For each entity, the response provides the entity text, the entity category,
///       where the entity text begins and ends, and the level of confidence that Amazon Comprehend
///       Medical has in the detection and analysis. Attributes and traits of the entity are also
///       returned. </p>
public struct RxNormEntity: Equatable {
    /// <p>The extracted attributes that relate to the entity. The attributes recognized by
    ///       InferRxNorm are <code>DOSAGE</code>, <code>DURATION</code>, <code>FORM</code>,
    ///         <code>FREQUENCY</code>, <code>RATE</code>, <code>ROUTE_OR_MODE</code>, and
    ///         <code>STRENGTH</code>.</p>
    public let attributes: [RxNormAttribute]?
    /// <p>The 0-based character offset in the input text that shows where the entity begins. The
    ///       offset returns the UTF-8 code point in the string.</p>
    public let beginOffset: Int?
    /// <p>The category of the entity. The recognized categories are <code>GENERIC</code> or
    ///         <code>BRAND_NAME</code>.</p>
    public let category: RxNormEntityCategory?
    /// <p>The 0-based character offset in the input text that shows where the entity ends. The
    ///       offset returns the UTF-8 code point in the string.</p>
    public let endOffset: Int?
    /// <p>The numeric identifier for the entity. This is a monotonically increasing id unique within
    ///       this response rather than a global unique identifier.</p>
    public let id: Int?
    /// <p> The RxNorm concepts that the entity could refer to, along with a score indicating the
    ///       likelihood of the match.</p>
    public let rxNormConcepts: [RxNormConcept]?
    /// <p>The level of confidence that Amazon Comprehend Medical has in the accuracy of the detected
    ///       entity.</p>
    public let score: Float?
    /// <p>The segment of input text extracted from which the entity was detected.</p>
    public let text: String?
    /// <p> Contextual information for the entity.</p>
    public let traits: [RxNormTrait]?
    /// <p> Describes the specific type of entity. For InferRxNorm, the recognized entity type is
    ///         <code>MEDICATION</code>.</p>
    public let type: RxNormEntityType?

    public init (
        attributes: [RxNormAttribute]? = nil,
        beginOffset: Int? = nil,
        category: RxNormEntityCategory? = nil,
        endOffset: Int? = nil,
        id: Int? = nil,
        rxNormConcepts: [RxNormConcept]? = nil,
        score: Float? = nil,
        text: String? = nil,
        traits: [RxNormTrait]? = nil,
        type: RxNormEntityType? = nil
    )
    {
        self.attributes = attributes
        self.beginOffset = beginOffset
        self.category = category
        self.endOffset = endOffset
        self.id = id
        self.rxNormConcepts = rxNormConcepts
        self.score = score
        self.text = text
        self.traits = traits
        self.type = type
    }
}
