// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RxNormAttributeType {
    case dosage
    case duration
    case form
    case frequency
    case rate
    case routeOrMode
    case strength
    case sdkUnknown(String)
}

extension RxNormAttributeType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RxNormAttributeType] {
        return [
            .dosage,
            .duration,
            .form,
            .frequency,
            .rate,
            .routeOrMode,
            .strength,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .dosage: return "DOSAGE"
        case .duration: return "DURATION"
        case .form: return "FORM"
        case .frequency: return "FREQUENCY"
        case .rate: return "RATE"
        case .routeOrMode: return "ROUTE_OR_MODE"
        case .strength: return "STRENGTH"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RxNormAttributeType(rawValue: rawValue) ?? RxNormAttributeType.sdkUnknown(rawValue)
    }
}
