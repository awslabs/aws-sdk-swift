// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetProductsOutputBody: Equatable {
    public let formatVersion: String?
    public let priceList: [String]?
    public let nextToken: String?
}

extension GetProductsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case formatVersion = "FormatVersion"
        case nextToken = "NextToken"
        case priceList = "PriceList"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let formatVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .formatVersion)
        formatVersion = formatVersionDecoded
        let priceListContainer = try containerValues.decodeIfPresent([String].self, forKey: .priceList)
        var priceListDecoded0:[String]? = nil
        if let priceListContainer = priceListContainer {
            priceListDecoded0 = [String]()
            for string0 in priceListContainer {
                priceListDecoded0?.append(string0)
            }
        }
        priceList = priceListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
