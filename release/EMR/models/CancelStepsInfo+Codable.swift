// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CancelStepsInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case reason = "Reason"
        case status = "Status"
        case stepId = "StepId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let reason = reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let stepId = stepId {
            try encodeContainer.encode(stepId, forKey: .stepId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let stepIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stepId)
        stepId = stepIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CancelStepsRequestStatus.self, forKey: .status)
        status = statusDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reason)
        reason = reasonDecoded
    }
}
