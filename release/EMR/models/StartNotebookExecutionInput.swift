// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartNotebookExecutionInput: Equatable {
    /// <p>The unique identifier of the EMR Notebook to use for notebook execution.</p>
    public let editorId: String?
    /// <p>Specifies the execution engine (cluster) that runs the notebook execution.</p>
    public let executionEngine: ExecutionEngineConfig?
    /// <p>An optional name for the notebook execution.</p>
    public let notebookExecutionName: String?
    /// <p>The unique identifier of the Amazon EC2 security group to associate with the EMR
    ///          Notebook for this notebook execution.</p>
    public let notebookInstanceSecurityGroupId: String?
    /// <p>Input parameters in JSON format passed to the EMR Notebook at runtime for
    ///          execution.</p>
    public let notebookParams: String?
    /// <p>The path and file name of the notebook file for this execution, relative to the path
    ///          specified for the EMR Notebook. For example, if you specify a path of
    ///             <code>s3://MyBucket/MyNotebooks</code> when you create an EMR Notebook for a notebook
    ///          with an ID of <code>e-ABCDEFGHIJK1234567890ABCD</code> (the <code>EditorID</code> of this
    ///          request), and you specify a <code>RelativePath</code> of
    ///             <code>my_notebook_executions/notebook_execution.ipynb</code>, the location of the file
    ///          for the notebook execution is
    ///             <code>s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb</code>.</p>
    public let relativePath: String?
    /// <p>The name or ARN of the IAM role that is used as the service role for Amazon EMR (the EMR
    ///          role) for the notebook execution.</p>
    public let serviceRole: String?
    /// <p>A list of tags associated with a notebook execution. Tags are user-defined key-value
    ///          pairs that consist of a required key string with a maximum of 128 characters and an
    ///          optional value string with a maximum of 256 characters.</p>
    public let tags: [Tag]?

    public init (
        editorId: String? = nil,
        executionEngine: ExecutionEngineConfig? = nil,
        notebookExecutionName: String? = nil,
        notebookInstanceSecurityGroupId: String? = nil,
        notebookParams: String? = nil,
        relativePath: String? = nil,
        serviceRole: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.editorId = editorId
        self.executionEngine = executionEngine
        self.notebookExecutionName = notebookExecutionName
        self.notebookInstanceSecurityGroupId = notebookInstanceSecurityGroupId
        self.notebookParams = notebookParams
        self.relativePath = relativePath
        self.serviceRole = serviceRole
        self.tags = tags
    }
}
