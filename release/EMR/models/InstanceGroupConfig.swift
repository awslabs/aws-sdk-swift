// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Configuration defining a new instance group.</p>
public struct InstanceGroupConfig: Equatable {
    /// <p>An automatic scaling policy for a core instance group or task instance group in an
    ///          Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically
    ///          adds and terminates EC2 instances in response to the value of a CloudWatch metric. See
    ///             <a>PutAutoScalingPolicy</a>.</p>
    public let autoScalingPolicy: AutoScalingPolicy?
    /// <p>If specified, indicates that the instance group uses Spot Instances. This is the maximum price you are willing to pay for Spot Instances. Specify <code>OnDemandPrice</code> to set the amount equal to the On-Demand price, or specify an amount in USD.</p>
    public let bidPrice: String?
    /// <note>
    ///             <p>Amazon EMR releases 4.x or later.</p>
    ///          </note>
    ///          <p>The list of configurations supplied for an EMR cluster instance group. You can specify a
    ///          separate configuration for each instance group (master, core, and task).</p>
    public let configurations: [Configuration]?
    /// <p>EBS configurations that will be attached to each EC2 instance in the instance
    ///          group.</p>
    public let ebsConfiguration: EbsConfiguration?
    /// <p>Target number of instances for the instance group.</p>
    public let instanceCount: Int?
    /// <p>The role of the instance group in the cluster.</p>
    public let instanceRole: InstanceRoleType?
    /// <p>The EC2 instance type for all instances in the instance group.</p>
    public let instanceType: String?
    /// <p>Market type of the EC2 instances used to create a cluster node.</p>
    public let market: MarketType?
    /// <p>Friendly name given to the instance group.</p>
    public let name: String?

    public init (
        autoScalingPolicy: AutoScalingPolicy? = nil,
        bidPrice: String? = nil,
        configurations: [Configuration]? = nil,
        ebsConfiguration: EbsConfiguration? = nil,
        instanceCount: Int? = nil,
        instanceRole: InstanceRoleType? = nil,
        instanceType: String? = nil,
        market: MarketType? = nil,
        name: String? = nil
    )
    {
        self.autoScalingPolicy = autoScalingPolicy
        self.bidPrice = bidPrice
        self.configurations = configurations
        self.ebsConfiguration = ebsConfiguration
        self.instanceCount = instanceCount
        self.instanceRole = instanceRole
        self.instanceType = instanceType
        self.market = market
        self.name = name
    }
}
