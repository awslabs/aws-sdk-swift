// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An automatic scaling configuration, which describes how the policy adds or removes
///          instances, the cooldown period, and the number of EC2 instances that will be added each
///          time the CloudWatch metric alarm condition is satisfied.</p>
public struct SimpleScalingPolicyConfiguration: Equatable {
    /// <p>The way in which EC2 instances are added (if <code>ScalingAdjustment</code> is a
    ///          positive number) or terminated (if <code>ScalingAdjustment</code> is a negative number)
    ///          each time the scaling activity is triggered. <code>CHANGE_IN_CAPACITY</code> is the
    ///          default. <code>CHANGE_IN_CAPACITY</code> indicates that the EC2 instance count increments
    ///          or decrements by <code>ScalingAdjustment</code>, which should be expressed as an integer.
    ///             <code>PERCENT_CHANGE_IN_CAPACITY</code> indicates the instance count increments or
    ///          decrements by the percentage specified by <code>ScalingAdjustment</code>, which should be
    ///          expressed as an integer. For example, 20 indicates an increase in 20% increments of cluster
    ///          capacity. <code>EXACT_CAPACITY</code> indicates the scaling activity results in an instance
    ///          group with the number of EC2 instances specified by <code>ScalingAdjustment</code>, which
    ///          should be expressed as a positive integer.</p>
    public let adjustmentType: AdjustmentType?
    /// <p>The amount of time, in seconds, after a scaling activity completes before any further
    ///          trigger-related scaling activities can start. The default value is 0.</p>
    public let coolDown: Int?
    /// <p>The amount by which to scale in or scale out, based on the specified
    ///             <code>AdjustmentType</code>. A positive value adds to the instance group's EC2 instance
    ///          count while a negative number removes instances. If <code>AdjustmentType</code> is set to
    ///             <code>EXACT_CAPACITY</code>, the number should only be a positive integer. If
    ///             <code>AdjustmentType</code> is set to <code>PERCENT_CHANGE_IN_CAPACITY</code>, the value
    ///          should express the percentage as an integer. For example, -20 indicates a decrease in 20%
    ///          increments of cluster capacity.</p>
    public let scalingAdjustment: Int?

    public init (
        adjustmentType: AdjustmentType? = nil,
        coolDown: Int? = nil,
        scalingAdjustment: Int? = nil
    )
    {
        self.adjustmentType = adjustmentType
        self.coolDown = coolDown
        self.scalingAdjustment = scalingAdjustment
    }
}
