// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ComparisonOperator {
    case greaterThan
    case greaterThanOrEqual
    case lessThan
    case lessThanOrEqual
    case sdkUnknown(String)
}

extension ComparisonOperator : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ComparisonOperator] {
        return [
            .greaterThan,
            .greaterThanOrEqual,
            .lessThan,
            .lessThanOrEqual,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .greaterThan: return "GREATER_THAN"
        case .greaterThanOrEqual: return "GREATER_THAN_OR_EQUAL"
        case .lessThan: return "LESS_THAN"
        case .lessThanOrEqual: return "LESS_THAN_OR_EQUAL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ComparisonOperator(rawValue: rawValue) ?? ComparisonOperator.sdkUnknown(rawValue)
    }
}
