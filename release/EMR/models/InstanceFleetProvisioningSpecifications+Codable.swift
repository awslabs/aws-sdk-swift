// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InstanceFleetProvisioningSpecifications: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case onDemandSpecification = "OnDemandSpecification"
        case spotSpecification = "SpotSpecification"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let onDemandSpecification = onDemandSpecification {
            try encodeContainer.encode(onDemandSpecification, forKey: .onDemandSpecification)
        }
        if let spotSpecification = spotSpecification {
            try encodeContainer.encode(spotSpecification, forKey: .spotSpecification)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let spotSpecificationDecoded = try containerValues.decodeIfPresent(SpotProvisioningSpecification.self, forKey: .spotSpecification)
        spotSpecification = spotSpecificationDecoded
        let onDemandSpecificationDecoded = try containerValues.decodeIfPresent(OnDemandProvisioningSpecification.self, forKey: .onDemandSpecification)
        onDemandSpecification = onDemandSpecificationDecoded
    }
}
