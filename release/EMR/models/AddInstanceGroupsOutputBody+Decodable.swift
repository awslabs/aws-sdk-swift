// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddInstanceGroupsOutputBody: Equatable {
    public let jobFlowId: String?
    public let instanceGroupIds: [String]?
    public let clusterArn: String?
}

extension AddInstanceGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterArn = "ClusterArn"
        case instanceGroupIds = "InstanceGroupIds"
        case jobFlowId = "JobFlowId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobFlowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobFlowId)
        jobFlowId = jobFlowIdDecoded
        let instanceGroupIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .instanceGroupIds)
        var instanceGroupIdsDecoded0:[String]? = nil
        if let instanceGroupIdsContainer = instanceGroupIdsContainer {
            instanceGroupIdsDecoded0 = [String]()
            for string0 in instanceGroupIdsContainer {
                instanceGroupIdsDecoded0?.append(string0)
            }
        }
        instanceGroupIds = instanceGroupIdsDecoded0
        let clusterArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
    }
}
