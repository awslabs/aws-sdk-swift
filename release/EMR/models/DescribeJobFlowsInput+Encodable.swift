// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeJobFlowsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case createdAfter = "CreatedAfter"
        case createdBefore = "CreatedBefore"
        case jobFlowIds = "JobFlowIds"
        case jobFlowStates = "JobFlowStates"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAfter = createdAfter {
            try encodeContainer.encode(createdAfter.timeIntervalSince1970, forKey: .createdAfter)
        }
        if let createdBefore = createdBefore {
            try encodeContainer.encode(createdBefore.timeIntervalSince1970, forKey: .createdBefore)
        }
        if let jobFlowIds = jobFlowIds {
            var jobFlowIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .jobFlowIds)
            for xmlstringlist0 in jobFlowIds {
                try jobFlowIdsContainer.encode(xmlstringlist0)
            }
        }
        if let jobFlowStates = jobFlowStates {
            var jobFlowStatesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .jobFlowStates)
            for jobflowexecutionstatelist0 in jobFlowStates {
                try jobFlowStatesContainer.encode(jobflowexecutionstatelist0.rawValue)
            }
        }
    }
}
