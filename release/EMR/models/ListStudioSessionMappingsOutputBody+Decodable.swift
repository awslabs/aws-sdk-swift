// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudioSessionMappingsOutputBody: Equatable {
    public let sessionMappings: [SessionMappingSummary]?
    public let marker: String?
}

extension ListStudioSessionMappingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case sessionMappings = "SessionMappings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionMappingsContainer = try containerValues.decodeIfPresent([SessionMappingSummary].self, forKey: .sessionMappings)
        var sessionMappingsDecoded0:[SessionMappingSummary]? = nil
        if let sessionMappingsContainer = sessionMappingsContainer {
            sessionMappingsDecoded0 = [SessionMappingSummary]()
            for structure0 in sessionMappingsContainer {
                sessionMappingsDecoded0?.append(structure0)
            }
        }
        sessionMappings = sessionMappingsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
