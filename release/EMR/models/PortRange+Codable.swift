// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PortRange: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maxRange = "MaxRange"
        case minRange = "MinRange"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxRange = maxRange {
            try encodeContainer.encode(maxRange, forKey: .maxRange)
        }
        if let minRange = minRange {
            try encodeContainer.encode(minRange, forKey: .minRange)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let minRangeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .minRange)
        minRange = minRangeDecoded
        let maxRangeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxRange)
        maxRange = maxRangeDecoded
    }
}
