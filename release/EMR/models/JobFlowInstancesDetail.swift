// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specify the type of Amazon EC2 instances that the cluster (job flow) runs on.</p>
public struct JobFlowInstancesDetail: Equatable {
    /// <p>The name of an Amazon EC2 key pair that can be used to connect to the master node using
    ///          SSH.</p>
    public let ec2KeyName: String?
    /// <p>For clusters launched within Amazon Virtual Private Cloud, this is the identifier of the
    ///          subnet where the cluster was launched.</p>
    public let ec2SubnetId: String?
    /// <p>The Hadoop version for the cluster.</p>
    public let hadoopVersion: String?
    /// <p>The number of Amazon EC2 instances in the cluster. If the value is 1, the same instance
    ///          serves as both the master and core and task node. If the value is greater than 1, one
    ///          instance is the master node and all others are core and task nodes.</p>
    public let instanceCount: Int?
    /// <p>Details about the instance groups in a cluster.</p>
    public let instanceGroups: [InstanceGroupDetail]?
    /// <p>Specifies whether the cluster should remain available after completing all steps.</p>
    public let keepJobFlowAliveWhenNoSteps: Bool
    /// <p>The Amazon EC2 instance identifier of the master node.</p>
    public let masterInstanceId: String?
    /// <p>The Amazon EC2 master node instance type.</p>
    public let masterInstanceType: String?
    /// <p>The DNS name of the master node. If the cluster is on a private subnet, this is the
    ///          private DNS name. On a public subnet, this is the public DNS name.</p>
    public let masterPublicDnsName: String?
    /// <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value
    ///          is increased one time for every hour that an m1.small instance runs. Larger instances are
    ///          weighted more heavily, so an Amazon EC2 instance that is roughly four times more expensive
    ///          would result in the normalized instance hours being increased incrementally four times.
    ///          This result is only an approximation and does not reflect the actual billing rate.</p>
    public let normalizedInstanceHours: Int?
    /// <p>The Amazon EC2 Availability Zone for the cluster.</p>
    public let placement: PlacementType?
    /// <p>The Amazon EC2 core and task node instance type.</p>
    public let slaveInstanceType: String?
    /// <p>Specifies whether the Amazon EC2 instances in the cluster are protected from termination
    ///          by API calls, user intervention, or in the event of a job-flow error.</p>
    public let terminationProtected: Bool

    public init (
        ec2KeyName: String? = nil,
        ec2SubnetId: String? = nil,
        hadoopVersion: String? = nil,
        instanceCount: Int? = nil,
        instanceGroups: [InstanceGroupDetail]? = nil,
        keepJobFlowAliveWhenNoSteps: Bool = false,
        masterInstanceId: String? = nil,
        masterInstanceType: String? = nil,
        masterPublicDnsName: String? = nil,
        normalizedInstanceHours: Int? = nil,
        placement: PlacementType? = nil,
        slaveInstanceType: String? = nil,
        terminationProtected: Bool = false
    )
    {
        self.ec2KeyName = ec2KeyName
        self.ec2SubnetId = ec2SubnetId
        self.hadoopVersion = hadoopVersion
        self.instanceCount = instanceCount
        self.instanceGroups = instanceGroups
        self.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps
        self.masterInstanceId = masterInstanceId
        self.masterInstanceType = masterInstanceType
        self.masterPublicDnsName = masterPublicDnsName
        self.normalizedInstanceHours = normalizedInstanceHours
        self.placement = placement
        self.slaveInstanceType = slaveInstanceType
        self.terminationProtected = terminationProtected
    }
}
