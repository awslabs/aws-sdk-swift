// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A description of the Amazon EC2 instance on which the cluster (job flow) runs. A valid
///          JobFlowInstancesConfig must contain either InstanceGroups or InstanceFleets. They cannot be
///          used together. You may also have MasterInstanceType, SlaveInstanceType, and InstanceCount
///          (all three must be present), but we don't recommend this configuration.</p>
public struct JobFlowInstancesConfig: Equatable {
    /// <p>A list of additional Amazon EC2 security group IDs for the master node.</p>
    public let additionalMasterSecurityGroups: [String]?
    /// <p>A list of additional Amazon EC2 security group IDs for the core and task nodes.</p>
    public let additionalSlaveSecurityGroups: [String]?
    /// <p>The name of the EC2 key pair that can be used to connect to the master node using SSH as
    ///          the user called "hadoop."</p>
    public let ec2KeyName: String?
    /// <p>Applies to clusters that use the uniform instance group configuration. To launch the
    ///          cluster in Amazon Virtual Private Cloud (Amazon VPC), set this parameter to the identifier
    ///          of the Amazon VPC subnet where you want the cluster to launch. If you do not specify this
    ///          value and your account supports EC2-Classic, the cluster launches in EC2-Classic.</p>
    public let ec2SubnetId: String?
    /// <p>Applies to clusters that use the instance fleet configuration. When multiple EC2 subnet
    ///          IDs are specified, Amazon EMR evaluates them and launches instances in the optimal
    ///          subnet.</p>
    ///          <note>
    ///             <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and
    ///             later, excluding 5.0.x versions.</p>
    ///          </note>
    public let ec2SubnetIds: [String]?
    /// <p>The identifier of the Amazon EC2 security group for the master node.</p>
    public let emrManagedMasterSecurityGroup: String?
    /// <p>The identifier of the Amazon EC2 security group for the core and task nodes.</p>
    public let emrManagedSlaveSecurityGroup: String?
    /// <p>Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the
    ///          cluster. Valid inputs are "0.18" (no longer maintained), "0.20" (no longer maintained),
    ///          "0.20.205" (no longer maintained), "1.0.3", "2.2.0", or "2.4.0". If you do not set this
    ///          value, the default of 0.18 is used, unless the <code>AmiVersion</code> parameter is set in
    ///          the RunJobFlow call, in which case the default version of Hadoop for that AMI version is
    ///          used.</p>
    public let hadoopVersion: String?
    /// <p>The number of EC2 instances in the cluster.</p>
    public let instanceCount: Int?
    /// <note>
    ///             <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and
    ///             later, excluding 5.0.x versions.</p>
    ///          </note>
    ///          <p>Describes the EC2 instances and instance configurations for clusters that use the
    ///          instance fleet configuration.</p>
    public let instanceFleets: [InstanceFleetConfig]?
    /// <p>Configuration for the instance groups in a cluster.</p>
    public let instanceGroups: [InstanceGroupConfig]?
    /// <p>Specifies whether the cluster should remain available after completing all steps.</p>
    public let keepJobFlowAliveWhenNoSteps: Bool
    /// <p>The EC2 instance type of the master node.</p>
    public let masterInstanceType: String?
    /// <p>The Availability Zone in which the cluster runs.</p>
    public let placement: PlacementType?
    /// <p>The identifier of the Amazon EC2 security group for the Amazon EMR service to access
    ///          clusters in VPC private subnets.</p>
    public let serviceAccessSecurityGroup: String?
    /// <p>The EC2 instance type of the core and task nodes.</p>
    public let slaveInstanceType: String?
    /// <p>Specifies whether to lock the cluster to prevent the Amazon EC2 instances from being
    ///          terminated by API call, user intervention, or in the event of a job-flow error.</p>
    public let terminationProtected: Bool

    public init (
        additionalMasterSecurityGroups: [String]? = nil,
        additionalSlaveSecurityGroups: [String]? = nil,
        ec2KeyName: String? = nil,
        ec2SubnetId: String? = nil,
        ec2SubnetIds: [String]? = nil,
        emrManagedMasterSecurityGroup: String? = nil,
        emrManagedSlaveSecurityGroup: String? = nil,
        hadoopVersion: String? = nil,
        instanceCount: Int? = nil,
        instanceFleets: [InstanceFleetConfig]? = nil,
        instanceGroups: [InstanceGroupConfig]? = nil,
        keepJobFlowAliveWhenNoSteps: Bool = false,
        masterInstanceType: String? = nil,
        placement: PlacementType? = nil,
        serviceAccessSecurityGroup: String? = nil,
        slaveInstanceType: String? = nil,
        terminationProtected: Bool = false
    )
    {
        self.additionalMasterSecurityGroups = additionalMasterSecurityGroups
        self.additionalSlaveSecurityGroups = additionalSlaveSecurityGroups
        self.ec2KeyName = ec2KeyName
        self.ec2SubnetId = ec2SubnetId
        self.ec2SubnetIds = ec2SubnetIds
        self.emrManagedMasterSecurityGroup = emrManagedMasterSecurityGroup
        self.emrManagedSlaveSecurityGroup = emrManagedSlaveSecurityGroup
        self.hadoopVersion = hadoopVersion
        self.instanceCount = instanceCount
        self.instanceFleets = instanceFleets
        self.instanceGroups = instanceGroups
        self.keepJobFlowAliveWhenNoSteps = keepJobFlowAliveWhenNoSteps
        self.masterInstanceType = masterInstanceType
        self.placement = placement
        self.serviceAccessSecurityGroup = serviceAccessSecurityGroup
        self.slaveInstanceType = slaveInstanceType
        self.terminationProtected = terminationProtected
    }
}
