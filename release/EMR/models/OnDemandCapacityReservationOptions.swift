// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p>
public struct OnDemandCapacityReservationOptions: Equatable {
    /// <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>open</code> - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.</p>
    ///             </li>
    ///          </ul>
    public let capacityReservationPreference: OnDemandCapacityReservationPreference?
    /// <p>The ARN of the Capacity Reservation resource group in which to run the instance.</p>
    public let capacityReservationResourceGroupArn: String?
    /// <p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p>
    ///          <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code>).</p>
    ///          <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>
    public let usageStrategy: OnDemandCapacityReservationUsageStrategy?

    public init (
        capacityReservationPreference: OnDemandCapacityReservationPreference? = nil,
        capacityReservationResourceGroupArn: String? = nil,
        usageStrategy: OnDemandCapacityReservationUsageStrategy? = nil
    )
    {
        self.capacityReservationPreference = capacityReservationPreference
        self.capacityReservationResourceGroupArn = capacityReservationResourceGroupArn
        self.usageStrategy = usageStrategy
    }
}
