// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EbsConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ebsBlockDeviceConfigs = "EbsBlockDeviceConfigs"
        case ebsOptimized = "EbsOptimized"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ebsBlockDeviceConfigs = ebsBlockDeviceConfigs {
            var ebsBlockDeviceConfigsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .ebsBlockDeviceConfigs)
            for ebsblockdeviceconfiglist0 in ebsBlockDeviceConfigs {
                try ebsBlockDeviceConfigsContainer.encode(ebsblockdeviceconfiglist0)
            }
        }
        if let ebsOptimized = ebsOptimized {
            try encodeContainer.encode(ebsOptimized, forKey: .ebsOptimized)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ebsBlockDeviceConfigsContainer = try containerValues.decodeIfPresent([EbsBlockDeviceConfig].self, forKey: .ebsBlockDeviceConfigs)
        var ebsBlockDeviceConfigsDecoded0:[EbsBlockDeviceConfig]? = nil
        if let ebsBlockDeviceConfigsContainer = ebsBlockDeviceConfigsContainer {
            ebsBlockDeviceConfigsDecoded0 = [EbsBlockDeviceConfig]()
            for structure0 in ebsBlockDeviceConfigsContainer {
                ebsBlockDeviceConfigsDecoded0?.append(structure0)
            }
        }
        ebsBlockDeviceConfigs = ebsBlockDeviceConfigsDecoded0
        let ebsOptimizedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .ebsOptimized)
        ebsOptimized = ebsOptimizedDecoded
    }
}
