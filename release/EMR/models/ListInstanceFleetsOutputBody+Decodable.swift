// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInstanceFleetsOutputBody: Equatable {
    public let instanceFleets: [InstanceFleet]?
    public let marker: String?
}

extension ListInstanceFleetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceFleets = "InstanceFleets"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceFleetsContainer = try containerValues.decodeIfPresent([InstanceFleet].self, forKey: .instanceFleets)
        var instanceFleetsDecoded0:[InstanceFleet]? = nil
        if let instanceFleetsContainer = instanceFleetsContainer {
            instanceFleetsDecoded0 = [InstanceFleet]()
            for structure0 in instanceFleetsContainer {
                instanceFleetsDecoded0?.append(structure0)
            }
        }
        instanceFleets = instanceFleetsDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
