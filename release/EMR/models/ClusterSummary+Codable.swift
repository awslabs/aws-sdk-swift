// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clusterArn = "ClusterArn"
        case id = "Id"
        case name = "Name"
        case normalizedInstanceHours = "NormalizedInstanceHours"
        case outpostArn = "OutpostArn"
        case status = "Status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterArn = clusterArn {
            try encodeContainer.encode(clusterArn, forKey: .clusterArn)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let normalizedInstanceHours = normalizedInstanceHours {
            try encodeContainer.encode(normalizedInstanceHours, forKey: .normalizedInstanceHours)
        }
        if let outpostArn = outpostArn {
            try encodeContainer.encode(outpostArn, forKey: .outpostArn)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ClusterStatus.self, forKey: .status)
        status = statusDecoded
        let normalizedInstanceHoursDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .normalizedInstanceHours)
        normalizedInstanceHours = normalizedInstanceHoursDecoded
        let clusterArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterArn)
        clusterArn = clusterArnDecoded
        let outpostArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outpostArn)
        outpostArn = outpostArnDecoded
    }
}
