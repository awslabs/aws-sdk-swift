// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The detailed description of the cluster.</p>
public struct Cluster: Equatable {
    /// <p>The applications installed on this cluster.</p>
    public let applications: [Application]?
    /// <p>An IAM role for automatic scaling policies. The default role is
    ///             <code>EMR_AutoScaling_DefaultRole</code>. The IAM role provides permissions that the
    ///          automatic scaling feature requires to launch and terminate EC2 instances in an instance
    ///          group.</p>
    public let autoScalingRole: String?
    /// <p>Specifies whether the cluster should terminate after completing all steps.</p>
    public let autoTerminate: Bool
    /// <p>The Amazon Resource Name of the cluster.</p>
    public let clusterArn: String?
    /// <p>Applies only to Amazon EMR releases 4.x and later. The list of Configurations supplied
    ///          to the EMR cluster.</p>
    public let configurations: [Configuration]?
    /// <p>Available only in Amazon EMR version 5.7.0 and later. The ID of a custom Amazon
    ///          EBS-backed Linux AMI if the cluster uses a custom AMI.</p>
    public let customAmiId: String?
    /// <p>The size, in GiB, of the Amazon EBS root device volume of the Linux AMI that is used for
    ///          each EC2 instance. Available in Amazon EMR version 4.x and later.</p>
    public let ebsRootVolumeSize: Int?
    /// <p>Provides information about the EC2 instances in a cluster grouped by category. For
    ///          example, key name, subnet ID, IAM instance profile, and so on.</p>
    public let ec2InstanceAttributes: Ec2InstanceAttributes?
    /// <p>The unique identifier for the cluster.</p>
    public let id: String?
    /// <note>
    ///             <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and
    ///             later, excluding 5.0.x versions.</p>
    ///          </note>
    ///          <p>The instance group configuration of the cluster. A value of <code>INSTANCE_GROUP</code>
    ///          indicates a uniform instance group configuration. A value of <code>INSTANCE_FLEET</code>
    ///          indicates an instance fleets configuration.</p>
    public let instanceCollectionType: InstanceCollectionType?
    /// <p>Attributes for Kerberos configuration when Kerberos authentication is enabled using a
    ///          security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a>
    ///          in the <i>Amazon EMR Management Guide</i>.</p>
    public let kerberosAttributes: KerberosAttributes?
    /// <p> The AWS KMS customer master key (CMK) used for encrypting log files. This attribute is
    ///          only available with EMR version 5.30.0 and later, excluding EMR 6.0.0. </p>
    public let logEncryptionKmsKeyId: String?
    /// <p>The path to the Amazon S3 location where logs for this cluster are stored.</p>
    public let logUri: String?
    /// <p>The DNS name of the master node. If the cluster is on a private subnet, this is the
    ///          private DNS name. On a public subnet, this is the public DNS name.</p>
    public let masterPublicDnsName: String?
    /// <p>The name of the cluster.</p>
    public let name: String?
    /// <p>An approximation of the cost of the cluster, represented in m1.small/hours. This value
    ///          is incremented one time for every hour an m1.small instance runs. Larger instances are
    ///          weighted more, so an EC2 instance that is roughly four times more expensive would result in
    ///          the normalized instance hours being incremented by four. This result is only an
    ///          approximation and does not reflect the actual billing rate.</p>
    public let normalizedInstanceHours: Int?
    /// <p> The Amazon Resource Name (ARN) of the Outpost where the cluster is launched. </p>
    public let outpostArn: String?
    /// <p>Placement group configured for an Amazon EMR cluster.</p>
    public let placementGroups: [PlacementGroupConfig]?
    /// <p>The Amazon EMR release label, which determines the version of open-source application
    ///          packages installed on the cluster. Release labels are in the form <code>emr-x.x.x</code>,
    ///          where x.x.x is an Amazon EMR release version such as <code>emr-5.14.0</code>. For more
    ///          information about Amazon EMR release versions and included application versions and
    ///          features, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/">https://docs.aws.amazon.com/emr/latest/ReleaseGuide/</a>. The release
    ///          label applies only to Amazon EMR releases version 4.0 and later. Earlier versions use
    ///             <code>AmiVersion</code>.</p>
    public let releaseLabel: String?
    /// <p>Applies only when <code>CustomAmiID</code> is used. Specifies the type of updates that
    ///          are applied from the Amazon Linux AMI package repositories when an instance boots using the
    ///          AMI.</p>
    public let repoUpgradeOnBoot: RepoUpgradeOnBoot?
    /// <p>The AMI version requested for this cluster.</p>
    public let requestedAmiVersion: String?
    /// <p>The AMI version running on this cluster.</p>
    public let runningAmiVersion: String?
    /// <p>The way that individual Amazon EC2 instances terminate when an automatic scale-in
    ///          activity occurs or an instance group is resized. <code>TERMINATE_AT_INSTANCE_HOUR</code>
    ///          indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of
    ///          when the request to terminate the instance was submitted. This option is only available
    ///          with Amazon EMR 5.1.0 and later and is the default for clusters created using that version.
    ///             <code>TERMINATE_AT_TASK_COMPLETION</code> indicates that Amazon EMR adds nodes to a deny
    ///          list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of
    ///          the instance-hour boundary. With either behavior, Amazon EMR removes the least active nodes
    ///          first and blocks instance termination if it could lead to HDFS corruption.
    ///             <code>TERMINATE_AT_TASK_COMPLETION</code> is available only in Amazon EMR version 4.1.0
    ///          and later, and is the default for versions of Amazon EMR earlier than 5.1.0.</p>
    public let scaleDownBehavior: ScaleDownBehavior?
    /// <p>The name of the security configuration applied to the cluster.</p>
    public let securityConfiguration: String?
    /// <p>The IAM role that will be assumed by the Amazon EMR service to access AWS resources on
    ///          your behalf.</p>
    public let serviceRole: String?
    /// <p>The current status details about the cluster.</p>
    public let status: ClusterStatus?
    /// <p>Specifies the number of steps that can be executed concurrently.</p>
    public let stepConcurrencyLevel: Int?
    /// <p>A list of tags associated with a cluster.</p>
    public let tags: [Tag]?
    /// <p>Indicates whether Amazon EMR will lock the cluster to prevent the EC2 instances from
    ///          being terminated by an API call or user intervention, or in the event of a cluster
    ///          error.</p>
    public let terminationProtected: Bool
    /// <p>Indicates whether the cluster is visible to all IAM users of the AWS account associated
    ///          with the cluster. The default value, <code>true</code>, indicates that all IAM users in the
    ///          AWS account can perform cluster actions if they have the proper IAM policy permissions. If
    ///          this value is <code>false</code>, only the IAM user that created the cluster can perform
    ///          actions. This value can be changed on a running cluster by using the <a>SetVisibleToAllUsers</a> action. You can override the default value of
    ///             <code>true</code> when you create a cluster by using the <code>VisibleToAllUsers</code>
    ///          parameter of the <code>RunJobFlow</code> action.</p>
    public let visibleToAllUsers: Bool

    public init (
        applications: [Application]? = nil,
        autoScalingRole: String? = nil,
        autoTerminate: Bool = false,
        clusterArn: String? = nil,
        configurations: [Configuration]? = nil,
        customAmiId: String? = nil,
        ebsRootVolumeSize: Int? = nil,
        ec2InstanceAttributes: Ec2InstanceAttributes? = nil,
        id: String? = nil,
        instanceCollectionType: InstanceCollectionType? = nil,
        kerberosAttributes: KerberosAttributes? = nil,
        logEncryptionKmsKeyId: String? = nil,
        logUri: String? = nil,
        masterPublicDnsName: String? = nil,
        name: String? = nil,
        normalizedInstanceHours: Int? = nil,
        outpostArn: String? = nil,
        placementGroups: [PlacementGroupConfig]? = nil,
        releaseLabel: String? = nil,
        repoUpgradeOnBoot: RepoUpgradeOnBoot? = nil,
        requestedAmiVersion: String? = nil,
        runningAmiVersion: String? = nil,
        scaleDownBehavior: ScaleDownBehavior? = nil,
        securityConfiguration: String? = nil,
        serviceRole: String? = nil,
        status: ClusterStatus? = nil,
        stepConcurrencyLevel: Int? = nil,
        tags: [Tag]? = nil,
        terminationProtected: Bool = false,
        visibleToAllUsers: Bool = false
    )
    {
        self.applications = applications
        self.autoScalingRole = autoScalingRole
        self.autoTerminate = autoTerminate
        self.clusterArn = clusterArn
        self.configurations = configurations
        self.customAmiId = customAmiId
        self.ebsRootVolumeSize = ebsRootVolumeSize
        self.ec2InstanceAttributes = ec2InstanceAttributes
        self.id = id
        self.instanceCollectionType = instanceCollectionType
        self.kerberosAttributes = kerberosAttributes
        self.logEncryptionKmsKeyId = logEncryptionKmsKeyId
        self.logUri = logUri
        self.masterPublicDnsName = masterPublicDnsName
        self.name = name
        self.normalizedInstanceHours = normalizedInstanceHours
        self.outpostArn = outpostArn
        self.placementGroups = placementGroups
        self.releaseLabel = releaseLabel
        self.repoUpgradeOnBoot = repoUpgradeOnBoot
        self.requestedAmiVersion = requestedAmiVersion
        self.runningAmiVersion = runningAmiVersion
        self.scaleDownBehavior = scaleDownBehavior
        self.securityConfiguration = securityConfiguration
        self.serviceRole = serviceRole
        self.status = status
        self.stepConcurrencyLevel = stepConcurrencyLevel
        self.tags = tags
        self.terminationProtected = terminationProtected
        self.visibleToAllUsers = visibleToAllUsers
    }
}
