// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Attributes for Kerberos configuration when Kerberos authentication is enabled using a
///          security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a>
///          in the <i>Amazon EMR Management Guide</i>.</p>
public struct KerberosAttributes: Equatable {
    /// <p>The Active Directory password for <code>ADDomainJoinUser</code>.</p>
    public let aDDomainJoinPassword: String?
    /// <p>Required only when establishing a cross-realm trust with an Active Directory domain. A
    ///          user with sufficient privileges to join resources to the domain.</p>
    public let aDDomainJoinUser: String?
    /// <p>Required only when establishing a cross-realm trust with a KDC in a different realm. The
    ///          cross-realm principal password, which must be identical across realms.</p>
    public let crossRealmTrustPrincipalPassword: String?
    /// <p>The password used within the cluster for the kadmin service on the cluster-dedicated
    ///          KDC, which maintains Kerberos principals, password policies, and keytabs for the
    ///          cluster.</p>
    public let kdcAdminPassword: String?
    /// <p>The name of the Kerberos realm to which all nodes in a cluster belong. For example,
    ///             <code>EC2.INTERNAL</code>. </p>
    public let realm: String?

    public init (
        aDDomainJoinPassword: String? = nil,
        aDDomainJoinUser: String? = nil,
        crossRealmTrustPrincipalPassword: String? = nil,
        kdcAdminPassword: String? = nil,
        realm: String? = nil
    )
    {
        self.aDDomainJoinPassword = aDDomainJoinPassword
        self.aDDomainJoinUser = aDDomainJoinUser
        self.crossRealmTrustPrincipalPassword = crossRealmTrustPrincipalPassword
        self.kdcAdminPassword = kdcAdminPassword
        self.realm = realm
    }
}
