// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddJobFlowStepsInputBody: Equatable {
    public let jobFlowId: String?
    public let steps: [StepConfig]?
}

extension AddJobFlowStepsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobFlowId = "JobFlowId"
        case steps = "Steps"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobFlowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobFlowId)
        jobFlowId = jobFlowIdDecoded
        let stepsContainer = try containerValues.decodeIfPresent([StepConfig].self, forKey: .steps)
        var stepsDecoded0:[StepConfig]? = nil
        if let stepsContainer = stepsContainer {
            stepsDecoded0 = [StepConfig]()
            for structure0 in stepsContainer {
                stepsDecoded0?.append(structure0)
            }
        }
        steps = stepsDecoded0
    }
}
