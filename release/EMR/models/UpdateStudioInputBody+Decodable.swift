// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateStudioInputBody: Equatable {
    public let studioId: String?
    public let name: String?
    public let description: String?
    public let subnetIds: [String]?
    public let defaultS3Location: String?
}

extension UpdateStudioInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case defaultS3Location = "DefaultS3Location"
        case description = "Description"
        case name = "Name"
        case studioId = "StudioId"
        case subnetIds = "SubnetIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .studioId)
        studioId = studioIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let subnetIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .subnetIds)
        var subnetIdsDecoded0:[String]? = nil
        if let subnetIdsContainer = subnetIdsContainer {
            subnetIdsDecoded0 = [String]()
            for string0 in subnetIdsContainer {
                subnetIdsDecoded0?.append(string0)
            }
        }
        subnetIds = subnetIdsDecoded0
        let defaultS3LocationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultS3Location)
        defaultS3Location = defaultS3LocationDecoded
    }
}
