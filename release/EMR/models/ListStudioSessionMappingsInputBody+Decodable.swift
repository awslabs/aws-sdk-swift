// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStudioSessionMappingsInputBody: Equatable {
    public let studioId: String?
    public let identityType: IdentityType?
    public let marker: String?
}

extension ListStudioSessionMappingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case identityType = "IdentityType"
        case marker = "Marker"
        case studioId = "StudioId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let studioIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .studioId)
        studioId = studioIdDecoded
        let identityTypeDecoded = try containerValues.decodeIfPresent(IdentityType.self, forKey: .identityType)
        identityType = identityTypeDecoded
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
