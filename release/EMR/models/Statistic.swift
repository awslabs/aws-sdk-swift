// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Statistic {
    case average
    case maximum
    case minimum
    case sampleCount
    case sum
    case sdkUnknown(String)
}

extension Statistic : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Statistic] {
        return [
            .average,
            .maximum,
            .minimum,
            .sampleCount,
            .sum,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .average: return "AVERAGE"
        case .maximum: return "MAXIMUM"
        case .minimum: return "MINIMUM"
        case .sampleCount: return "SAMPLE_COUNT"
        case .sum: return "SUM"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Statistic(rawValue: rawValue) ?? Statistic.sdkUnknown(rawValue)
    }
}
