// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelStepsInputBody: Equatable {
    public let clusterId: String?
    public let stepIds: [String]?
    public let stepCancellationOption: StepCancellationOption?
}

extension CancelStepsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clusterId = "ClusterId"
        case stepCancellationOption = "StepCancellationOption"
        case stepIds = "StepIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterId)
        clusterId = clusterIdDecoded
        let stepIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .stepIds)
        var stepIdsDecoded0:[String]? = nil
        if let stepIdsContainer = stepIdsContainer {
            stepIdsDecoded0 = [String]()
            for string0 in stepIdsContainer {
                stepIdsDecoded0?.append(string0)
            }
        }
        stepIds = stepIdsDecoded0
        let stepCancellationOptionDecoded = try containerValues.decodeIfPresent(StepCancellationOption.self, forKey: .stepCancellationOption)
        stepCancellationOption = stepCancellationOptionDecoded
    }
}
