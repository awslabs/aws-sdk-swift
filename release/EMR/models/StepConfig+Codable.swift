// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StepConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case actionOnFailure = "ActionOnFailure"
        case hadoopJarStep = "HadoopJarStep"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionOnFailure = actionOnFailure {
            try encodeContainer.encode(actionOnFailure.rawValue, forKey: .actionOnFailure)
        }
        if let hadoopJarStep = hadoopJarStep {
            try encodeContainer.encode(hadoopJarStep, forKey: .hadoopJarStep)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let actionOnFailureDecoded = try containerValues.decodeIfPresent(ActionOnFailure.self, forKey: .actionOnFailure)
        actionOnFailure = actionOnFailureDecoded
        let hadoopJarStepDecoded = try containerValues.decodeIfPresent(HadoopJarStepConfig.self, forKey: .hadoopJarStep)
        hadoopJarStep = hadoopJarStepDecoded
    }
}
