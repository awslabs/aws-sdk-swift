// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ScriptBootstrapActionConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case args = "Args"
        case path = "Path"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let args = args {
            var argsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .args)
            for xmlstringlist0 in args {
                try argsContainer.encode(xmlstringlist0)
            }
        }
        if let path = path {
            try encodeContainer.encode(path, forKey: .path)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .path)
        path = pathDecoded
        let argsContainer = try containerValues.decodeIfPresent([String].self, forKey: .args)
        var argsDecoded0:[String]? = nil
        if let argsContainer = argsContainer {
            argsDecoded0 = [String]()
            for string0 in argsContainer {
                argsDecoded0?.append(string0)
            }
        }
        args = argsDecoded0
    }
}
