// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCertificatesInputBody: Equatable {
    public let certificateStatuses: [CertificateStatus]?
    public let includeCertificateDetails: Bool
    public let certificateName: String?
}

extension GetCertificatesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateName
        case certificateStatuses
        case includeCertificateDetails
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateStatusesContainer = try containerValues.decodeIfPresent([CertificateStatus].self, forKey: .certificateStatuses)
        var certificateStatusesDecoded0:[CertificateStatus]? = nil
        if let certificateStatusesContainer = certificateStatusesContainer {
            certificateStatusesDecoded0 = [CertificateStatus]()
            for string0 in certificateStatusesContainer {
                certificateStatusesDecoded0?.append(string0)
            }
        }
        certificateStatuses = certificateStatusesDecoded0
        let includeCertificateDetailsDecoded = try containerValues.decode(Bool.self, forKey: .includeCertificateDetails)
        includeCertificateDetails = includeCertificateDetailsDecoded
        let certificateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateName)
        certificateName = certificateNameDecoded
    }
}
