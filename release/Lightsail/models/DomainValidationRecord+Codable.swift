// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DomainValidationRecord: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domainName
        case resourceRecord
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domainName = domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let resourceRecord = resourceRecord {
            try encodeContainer.encode(resourceRecord, forKey: .resourceRecord)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let resourceRecordDecoded = try containerValues.decodeIfPresent(ResourceRecord.self, forKey: .resourceRecord)
        resourceRecord = resourceRecordDecoded
    }
}
