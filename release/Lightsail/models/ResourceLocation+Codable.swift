// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResourceLocation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case availabilityZone
        case regionName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let availabilityZone = availabilityZone {
            try encodeContainer.encode(availabilityZone, forKey: .availabilityZone)
        }
        if let regionName = regionName {
            try encodeContainer.encode(regionName.rawValue, forKey: .regionName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let availabilityZoneDecoded = try containerValues.decodeIfPresent(String.self, forKey: .availabilityZone)
        availabilityZone = availabilityZoneDecoded
        let regionNameDecoded = try containerValues.decodeIfPresent(RegionName.self, forKey: .regionName)
        regionName = regionNameDecoded
    }
}
