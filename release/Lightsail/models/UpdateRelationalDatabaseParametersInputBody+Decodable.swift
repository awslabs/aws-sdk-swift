// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateRelationalDatabaseParametersInputBody: Equatable {
    public let relationalDatabaseName: String?
    public let parameters: [RelationalDatabaseParameter]?
}

extension UpdateRelationalDatabaseParametersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case parameters
        case relationalDatabaseName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .relationalDatabaseName)
        relationalDatabaseName = relationalDatabaseNameDecoded
        let parametersContainer = try containerValues.decodeIfPresent([RelationalDatabaseParameter].self, forKey: .parameters)
        var parametersDecoded0:[RelationalDatabaseParameter]? = nil
        if let parametersContainer = parametersContainer {
            parametersDecoded0 = [RelationalDatabaseParameter]()
            for structure0 in parametersContainer {
                parametersDecoded0?.append(structure0)
            }
        }
        parameters = parametersDecoded0
    }
}
