// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CopySnapshotInputBody: Equatable {
    public let sourceSnapshotName: String?
    public let sourceResourceName: String?
    public let restoreDate: String?
    public let useLatestRestorableAutoSnapshot: Bool?
    public let targetSnapshotName: String?
    public let sourceRegion: RegionName?
}

extension CopySnapshotInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case restoreDate
        case sourceRegion
        case sourceResourceName
        case sourceSnapshotName
        case targetSnapshotName
        case useLatestRestorableAutoSnapshot
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceSnapshotNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceSnapshotName)
        sourceSnapshotName = sourceSnapshotNameDecoded
        let sourceResourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceResourceName)
        sourceResourceName = sourceResourceNameDecoded
        let restoreDateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .restoreDate)
        restoreDate = restoreDateDecoded
        let useLatestRestorableAutoSnapshotDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .useLatestRestorableAutoSnapshot)
        useLatestRestorableAutoSnapshot = useLatestRestorableAutoSnapshotDecoded
        let targetSnapshotNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetSnapshotName)
        targetSnapshotName = targetSnapshotNameDecoded
        let sourceRegionDecoded = try containerValues.decodeIfPresent(RegionName.self, forKey: .sourceRegion)
        sourceRegion = sourceRegionDecoded
    }
}
