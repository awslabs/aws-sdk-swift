// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an Amazon Lightsail content delivery network (CDN) distribution.</p>
public struct LightsailDistribution: Equatable {
    /// <p>Indicates whether the bundle that is currently applied to your distribution, specified
    ///       using the <code>distributionName</code> parameter, can be changed to another bundle.</p>
    ///          <p>Use the <code>UpdateDistributionBundle</code> action to change your distribution's
    ///       bundle.</p>
    public let ableToUpdateBundle: Bool?
    /// <p>The alternate domain names of the distribution.</p>
    public let alternativeDomainNames: [String]?
    /// <p>The Amazon Resource Name (ARN) of the distribution.</p>
    public let arn: String?
    /// <p>The ID of the bundle currently applied to the distribution.</p>
    public let bundleId: String?
    /// <p>An object that describes the cache behavior settings of the distribution.</p>
    public let cacheBehaviorSettings: CacheSettings?
    /// <p>An array of objects that describe the per-path cache behavior of the distribution.</p>
    public let cacheBehaviors: [CacheBehaviorPerPath]?
    /// <p>The name of the SSL/TLS certificate attached to the distribution, if any.</p>
    public let certificateName: String?
    /// <p>The timestamp when the distribution was created.</p>
    public let createdAt: Date?
    /// <p>An object that describes the default cache behavior of the distribution.</p>
    public let defaultCacheBehavior: CacheBehavior?
    /// <p>The domain name of the distribution.</p>
    public let domainName: String?
    /// <p>The IP address type of the distribution.</p>
    ///
    ///          <p>The possible values are <code>ipv4</code> for IPv4 only, and <code>dualstack</code> for
    ///       IPv4 and IPv6.</p>
    public let ipAddressType: IpAddressType?
    /// <p>Indicates whether the distribution is enabled.</p>
    public let isEnabled: Bool?
    /// <p>An object that describes the location of the distribution, such as the AWS Region and
    ///       Availability Zone.</p>
    ///          <note>
    ///             <p>Lightsail distributions are global resources that can reference an origin in any AWS
    ///         Region, and distribute its content globally. However, all distributions are located in the
    ///           <code>us-east-1</code> Region.</p>
    ///          </note>
    public let location: ResourceLocation?
    /// <p>The name of the distribution.</p>
    public let name: String?
    /// <p>An object that describes the origin resource of the distribution, such as a Lightsail
    ///       instance or load balancer.</p>
    ///          <p>The distribution pulls, caches, and serves content from the origin.</p>
    public let origin: Origin?
    /// <p>The public DNS of the origin.</p>
    public let originPublicDNS: String?
    /// <p>The Lightsail resource type (e.g., <code>Distribution</code>).</p>
    public let resourceType: ResourceType?
    /// <p>The status of the distribution.</p>
    public let status: String?
    /// <p>The support code. Include this code in your email to support when you have questions about
    ///       your Lightsail distribution. This code enables our support team to look up your Lightsail
    ///       information more easily.</p>
    public let supportCode: String?
    /// <p>The tag keys and optional values for the resource. For more information about tags in
    ///       Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail
    ///         Dev Guide</a>.</p>
    public let tags: [Tag]?

    public init (
        ableToUpdateBundle: Bool? = nil,
        alternativeDomainNames: [String]? = nil,
        arn: String? = nil,
        bundleId: String? = nil,
        cacheBehaviorSettings: CacheSettings? = nil,
        cacheBehaviors: [CacheBehaviorPerPath]? = nil,
        certificateName: String? = nil,
        createdAt: Date? = nil,
        defaultCacheBehavior: CacheBehavior? = nil,
        domainName: String? = nil,
        ipAddressType: IpAddressType? = nil,
        isEnabled: Bool? = nil,
        location: ResourceLocation? = nil,
        name: String? = nil,
        origin: Origin? = nil,
        originPublicDNS: String? = nil,
        resourceType: ResourceType? = nil,
        status: String? = nil,
        supportCode: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.ableToUpdateBundle = ableToUpdateBundle
        self.alternativeDomainNames = alternativeDomainNames
        self.arn = arn
        self.bundleId = bundleId
        self.cacheBehaviorSettings = cacheBehaviorSettings
        self.cacheBehaviors = cacheBehaviors
        self.certificateName = certificateName
        self.createdAt = createdAt
        self.defaultCacheBehavior = defaultCacheBehavior
        self.domainName = domainName
        self.ipAddressType = ipAddressType
        self.isEnabled = isEnabled
        self.location = location
        self.name = name
        self.origin = origin
        self.originPublicDNS = originPublicDNS
        self.resourceType = resourceType
        self.status = status
        self.supportCode = supportCode
        self.tags = tags
    }
}
