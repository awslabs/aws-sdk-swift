// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDistributionInput: Equatable {
    /// <p>An object that describes the cache behavior settings for the distribution.</p>
    ///          <note>
    ///             <p>The <code>cacheBehaviorSettings</code> specified in your
    ///           <code>UpdateDistributionRequest</code> will replace your distribution's existing
    ///         settings.</p>
    ///          </note>
    public let cacheBehaviorSettings: CacheSettings?
    /// <p>An array of objects that describe the per-path cache behavior for the distribution.</p>
    public let cacheBehaviors: [CacheBehaviorPerPath]?
    /// <p>An object that describes the default cache behavior for the distribution.</p>
    public let defaultCacheBehavior: CacheBehavior?
    /// <p>The name of the distribution to update.</p>
    ///          <p>Use the <code>GetDistributions</code> action to get a list of distribution names that you
    ///       can specify.</p>
    public let distributionName: String?
    /// <p>Indicates whether to enable the distribution.</p>
    public let isEnabled: Bool?
    /// <p>An object that describes the origin resource for the distribution, such as a Lightsail
    ///       instance or load balancer.</p>
    ///          <p>The distribution pulls, caches, and serves content from the origin.</p>
    public let origin: InputOrigin?

    public init (
        cacheBehaviorSettings: CacheSettings? = nil,
        cacheBehaviors: [CacheBehaviorPerPath]? = nil,
        defaultCacheBehavior: CacheBehavior? = nil,
        distributionName: String? = nil,
        isEnabled: Bool? = nil,
        origin: InputOrigin? = nil
    )
    {
        self.cacheBehaviorSettings = cacheBehaviorSettings
        self.cacheBehaviors = cacheBehaviors
        self.defaultCacheBehavior = defaultCacheBehavior
        self.distributionName = distributionName
        self.isEnabled = isEnabled
        self.origin = origin
    }
}
