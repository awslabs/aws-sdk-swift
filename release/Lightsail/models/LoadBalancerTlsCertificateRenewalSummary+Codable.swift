// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LoadBalancerTlsCertificateRenewalSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domainValidationOptions
        case renewalStatus
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domainValidationOptions = domainValidationOptions {
            var domainValidationOptionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .domainValidationOptions)
            for loadbalancertlscertificatedomainvalidationoptionlist0 in domainValidationOptions {
                try domainValidationOptionsContainer.encode(loadbalancertlscertificatedomainvalidationoptionlist0)
            }
        }
        if let renewalStatus = renewalStatus {
            try encodeContainer.encode(renewalStatus.rawValue, forKey: .renewalStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let renewalStatusDecoded = try containerValues.decodeIfPresent(LoadBalancerTlsCertificateRenewalStatus.self, forKey: .renewalStatus)
        renewalStatus = renewalStatusDecoded
        let domainValidationOptionsContainer = try containerValues.decodeIfPresent([LoadBalancerTlsCertificateDomainValidationOption].self, forKey: .domainValidationOptions)
        var domainValidationOptionsDecoded0:[LoadBalancerTlsCertificateDomainValidationOption]? = nil
        if let domainValidationOptionsContainer = domainValidationOptionsContainer {
            domainValidationOptionsDecoded0 = [LoadBalancerTlsCertificateDomainValidationOption]()
            for structure0 in domainValidationOptionsContainer {
                domainValidationOptionsDecoded0?.append(structure0)
            }
        }
        domainValidationOptions = domainValidationOptionsDecoded0
    }
}
