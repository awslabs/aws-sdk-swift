// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RelationalDatabaseBlueprint: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case blueprintId
        case engine
        case engineDescription
        case engineVersion
        case engineVersionDescription
        case isEngineDefault
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let blueprintId = blueprintId {
            try encodeContainer.encode(blueprintId, forKey: .blueprintId)
        }
        if let engine = engine {
            try encodeContainer.encode(engine.rawValue, forKey: .engine)
        }
        if let engineDescription = engineDescription {
            try encodeContainer.encode(engineDescription, forKey: .engineDescription)
        }
        if let engineVersion = engineVersion {
            try encodeContainer.encode(engineVersion, forKey: .engineVersion)
        }
        if let engineVersionDescription = engineVersionDescription {
            try encodeContainer.encode(engineVersionDescription, forKey: .engineVersionDescription)
        }
        if let isEngineDefault = isEngineDefault {
            try encodeContainer.encode(isEngineDefault, forKey: .isEngineDefault)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let blueprintIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .blueprintId)
        blueprintId = blueprintIdDecoded
        let engineDecoded = try containerValues.decodeIfPresent(RelationalDatabaseEngine.self, forKey: .engine)
        engine = engineDecoded
        let engineVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .engineVersion)
        engineVersion = engineVersionDecoded
        let engineDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .engineDescription)
        engineDescription = engineDescriptionDecoded
        let engineVersionDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .engineVersionDescription)
        engineVersionDescription = engineVersionDescriptionDecoded
        let isEngineDefaultDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .isEngineDefault)
        isEngineDefault = isEngineDefaultDecoded
    }
}
