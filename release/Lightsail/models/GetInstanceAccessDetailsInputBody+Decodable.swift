// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInstanceAccessDetailsInputBody: Equatable {
    public let instanceName: String?
    public let `protocol`: InstanceAccessProtocol?
}

extension GetInstanceAccessDetailsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceName
        case `protocol` = "protocol"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceName)
        instanceName = instanceNameDecoded
        let protocolDecoded = try containerValues.decodeIfPresent(InstanceAccessProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
    }
}
