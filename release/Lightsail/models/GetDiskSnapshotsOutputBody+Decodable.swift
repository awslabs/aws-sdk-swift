// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiskSnapshotsOutputBody: Equatable {
    public let diskSnapshots: [DiskSnapshot]?
    public let nextPageToken: String?
}

extension GetDiskSnapshotsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case diskSnapshots
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let diskSnapshotsContainer = try containerValues.decodeIfPresent([DiskSnapshot].self, forKey: .diskSnapshots)
        var diskSnapshotsDecoded0:[DiskSnapshot]? = nil
        if let diskSnapshotsContainer = diskSnapshotsContainer {
            diskSnapshotsDecoded0 = [DiskSnapshot]()
            for structure0 in diskSnapshotsContainer {
                diskSnapshotsDecoded0?.append(structure0)
            }
        }
        diskSnapshots = diskSnapshotsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
