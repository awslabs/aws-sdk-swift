// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateInstanceSnapshotInputBody: Equatable {
    public let instanceSnapshotName: String?
    public let instanceName: String?
    public let tags: [Tag]?
}

extension CreateInstanceSnapshotInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceName
        case instanceSnapshotName
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceSnapshotNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceSnapshotName)
        instanceSnapshotName = instanceSnapshotNameDecoded
        let instanceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceName)
        instanceName = instanceNameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
