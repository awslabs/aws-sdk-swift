// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateInstancesInput: Equatable {
    /// <p>An array of objects representing the add-ons to enable for the new instance.</p>
    public let addOns: [AddOnRequest]?
    /// <p>The Availability Zone in which to create your instance. Use the following format:
    ///         <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones by using
    ///       the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get
    ///         regions</a> operation. Be sure to add the <code>include Availability Zones</code>
    ///       parameter to your request.</p>
    public let availabilityZone: String?
    /// <p>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or
    ///         <code>app_lamp_7_0</code>). Use the <code>get blueprints</code> operation to return a list
    ///       of available images (or <i>blueprints</i>).</p>
    ///          <note>
    ///             <p>Use active blueprints when creating new instances. Inactive blueprints are listed to
    ///         support customers with existing instances and are not necessarily available to create new
    ///         instances. Blueprints are marked inactive when they become outdated due to operating system
    ///         updates or new application releases.</p>
    ///          </note>
    public let blueprintId: String?
    /// <p>The bundle of specification information for your virtual private server (or
    ///         <i>instance</i>), including the pricing plan (e.g.,
    ///       <code>micro_1_0</code>).</p>
    public let bundleId: String?
    /// <p>(Deprecated) The name for your custom image.</p>
    ///          <note>
    ///             <p>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now
    ///         deprecated.</p>
    ///          </note>
    @available(*, deprecated)
    public let customImageName: String?
    /// <p>The names to use for your new Lightsail instances. Separate multiple values using
    ///       quotation marks and commas, for example:
    ///       <code>["MyFirstInstance","MySecondInstance"]</code>
    ///          </p>
    public let instanceNames: [String]?
    /// <p>The IP address type for the instance.</p>
    ///
    ///          <p>The possible values are <code>ipv4</code> for IPv4 only, and <code>dualstack</code> for
    ///       IPv4 and IPv6.</p>
    ///
    ///          <p>The default value is <code>dualstack</code>.</p>
    public let ipAddressType: IpAddressType?
    /// <p>The name of your key pair.</p>
    public let keyPairName: String?
    /// <p>The tag keys and optional values to add to the resource during create.</p>
    ///          <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p>
    public let tags: [Tag]?
    /// <p>A launch script you can create that configures a server with additional user data. For
    ///       example, you might want to run <code>apt-get -y update</code>.</p>
    ///          <note>
    ///             <p>Depending on the machine image you choose, the command to get software on your instance
    ///         varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use
    ///           <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the
    ///           <a href="https://lightsail.aws.amazon.com/ls/docs/getting-started/article/compare-options-choose-lightsail-instance-image">Dev Guide</a>.</p>
    ///          </note>
    public let userData: String?

    public init (
        addOns: [AddOnRequest]? = nil,
        availabilityZone: String? = nil,
        blueprintId: String? = nil,
        bundleId: String? = nil,
        customImageName: String? = nil,
        instanceNames: [String]? = nil,
        ipAddressType: IpAddressType? = nil,
        keyPairName: String? = nil,
        tags: [Tag]? = nil,
        userData: String? = nil
    )
    {
        self.addOns = addOns
        self.availabilityZone = availabilityZone
        self.blueprintId = blueprintId
        self.bundleId = bundleId
        self.customImageName = customImageName
        self.instanceNames = instanceNames
        self.ipAddressType = ipAddressType
        self.keyPairName = keyPairName
        self.tags = tags
        self.userData = userData
    }
}
