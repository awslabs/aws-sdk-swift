// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RegionName {
    case apNortheast1
    case apNortheast2
    case apSoutheast1
    case apSoutheast2
    case apSouth1
    case caCentral1
    case euCentral1
    case euWest1
    case euWest2
    case euWest3
    case usEast1
    case usEast2
    case usWest1
    case usWest2
    case sdkUnknown(String)
}

extension RegionName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RegionName] {
        return [
            .apNortheast1,
            .apNortheast2,
            .apSoutheast1,
            .apSoutheast2,
            .apSouth1,
            .caCentral1,
            .euCentral1,
            .euWest1,
            .euWest2,
            .euWest3,
            .usEast1,
            .usEast2,
            .usWest1,
            .usWest2,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .apNortheast1: return "ap-northeast-1"
        case .apNortheast2: return "ap-northeast-2"
        case .apSoutheast1: return "ap-southeast-1"
        case .apSoutheast2: return "ap-southeast-2"
        case .apSouth1: return "ap-south-1"
        case .caCentral1: return "ca-central-1"
        case .euCentral1: return "eu-central-1"
        case .euWest1: return "eu-west-1"
        case .euWest2: return "eu-west-2"
        case .euWest3: return "eu-west-3"
        case .usEast1: return "us-east-1"
        case .usEast2: return "us-east-2"
        case .usWest1: return "us-west-1"
        case .usWest2: return "us-west-2"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RegionName(rawValue: rawValue) ?? RegionName.sdkUnknown(rawValue)
    }
}
