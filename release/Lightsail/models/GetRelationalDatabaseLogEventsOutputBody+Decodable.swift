// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabaseLogEventsOutputBody: Equatable {
    public let resourceLogEvents: [LogEvent]?
    public let nextBackwardToken: String?
    public let nextForwardToken: String?
}

extension GetRelationalDatabaseLogEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextBackwardToken
        case nextForwardToken
        case resourceLogEvents
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceLogEventsContainer = try containerValues.decodeIfPresent([LogEvent].self, forKey: .resourceLogEvents)
        var resourceLogEventsDecoded0:[LogEvent]? = nil
        if let resourceLogEventsContainer = resourceLogEventsContainer {
            resourceLogEventsDecoded0 = [LogEvent]()
            for structure0 in resourceLogEventsContainer {
                resourceLogEventsDecoded0?.append(structure0)
            }
        }
        resourceLogEvents = resourceLogEventsDecoded0
        let nextBackwardTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextBackwardToken)
        nextBackwardToken = nextBackwardTokenDecoded
        let nextForwardTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextForwardToken)
        nextForwardToken = nextForwardTokenDecoded
    }
}
