// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabaseSnapshotsOutputBody: Equatable {
    public let relationalDatabaseSnapshots: [RelationalDatabaseSnapshot]?
    public let nextPageToken: String?
}

extension GetRelationalDatabaseSnapshotsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken
        case relationalDatabaseSnapshots
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseSnapshotsContainer = try containerValues.decodeIfPresent([RelationalDatabaseSnapshot].self, forKey: .relationalDatabaseSnapshots)
        var relationalDatabaseSnapshotsDecoded0:[RelationalDatabaseSnapshot]? = nil
        if let relationalDatabaseSnapshotsContainer = relationalDatabaseSnapshotsContainer {
            relationalDatabaseSnapshotsDecoded0 = [RelationalDatabaseSnapshot]()
            for structure0 in relationalDatabaseSnapshotsContainer {
                relationalDatabaseSnapshotsDecoded0?.append(structure0)
            }
        }
        relationalDatabaseSnapshots = relationalDatabaseSnapshotsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
