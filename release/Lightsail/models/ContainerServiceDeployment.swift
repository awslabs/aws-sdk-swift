// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a container deployment configuration of an Amazon Lightsail container
///       service.</p>
///
///          <p>A deployment specifies the settings, such as the ports and launch command, of containers
///       that are deployed to your container service.</p>
public struct ContainerServiceDeployment: Equatable {
    /// <p>An object that describes the configuration for the containers of the deployment.</p>
    public let containers: [String:Container]?
    /// <p>The timestamp when the deployment was created.</p>
    public let createdAt: Date?
    /// <p>An object that describes the endpoint of the deployment.</p>
    public let publicEndpoint: ContainerServiceEndpoint?
    /// <p>The state of the deployment.</p>
    ///
    ///          <p>A deployment can be in one of the following states:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Activating</code> - The deployment is being created.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Active</code> - The deployment was successfully created, and it's currently
    ///           running on the container service. The container service can have only one deployment in an
    ///           active state at a time.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Inactive</code> - The deployment was previously successfully created, but it is
    ///           not currently running on the container service.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Failed</code> - The deployment failed. Use the <code>GetContainerLog</code>
    ///           action to view the log events for the containers in the deployment to try to determine the
    ///           reason for the failure.</p>
    ///             </li>
    ///          </ul>
    public let state: ContainerServiceDeploymentState?
    /// <p>The version number of the deployment.</p>
    public let version: Int?

    public init (
        containers: [String:Container]? = nil,
        createdAt: Date? = nil,
        publicEndpoint: ContainerServiceEndpoint? = nil,
        state: ContainerServiceDeploymentState? = nil,
        version: Int? = nil
    )
    {
        self.containers = containers
        self.createdAt = createdAt
        self.publicEndpoint = publicEndpoint
        self.state = state
        self.version = version
    }
}
