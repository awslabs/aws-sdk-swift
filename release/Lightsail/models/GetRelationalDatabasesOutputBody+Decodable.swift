// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRelationalDatabasesOutputBody: Equatable {
    public let relationalDatabases: [RelationalDatabase]?
    public let nextPageToken: String?
}

extension GetRelationalDatabasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken
        case relationalDatabases
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabasesContainer = try containerValues.decodeIfPresent([RelationalDatabase].self, forKey: .relationalDatabases)
        var relationalDatabasesDecoded0:[RelationalDatabase]? = nil
        if let relationalDatabasesContainer = relationalDatabasesContainer {
            relationalDatabasesDecoded0 = [RelationalDatabase]()
            for structure0 in relationalDatabasesContainer {
                relationalDatabasesDecoded0?.append(structure0)
            }
        }
        relationalDatabases = relationalDatabasesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
