// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCertificatesOutputBody: Equatable {
    public let certificates: [CertificateSummary]?
}

extension GetCertificatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificates
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificatesContainer = try containerValues.decodeIfPresent([CertificateSummary].self, forKey: .certificates)
        var certificatesDecoded0:[CertificateSummary]? = nil
        if let certificatesContainer = certificatesContainer {
            certificatesDecoded0 = [CertificateSummary]()
            for structure0 in certificatesContainer {
                certificatesDecoded0?.append(structure0)
            }
        }
        certificates = certificatesDecoded0
    }
}
