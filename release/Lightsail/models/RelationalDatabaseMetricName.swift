// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum RelationalDatabaseMetricName {
    case cpuutilization
    case databaseconnections
    case diskqueuedepth
    case freestoragespace
    case networkreceivethroughput
    case networktransmitthroughput
    case sdkUnknown(String)
}

extension RelationalDatabaseMetricName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [RelationalDatabaseMetricName] {
        return [
            .cpuutilization,
            .databaseconnections,
            .diskqueuedepth,
            .freestoragespace,
            .networkreceivethroughput,
            .networktransmitthroughput,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cpuutilization: return "CPUUtilization"
        case .databaseconnections: return "DatabaseConnections"
        case .diskqueuedepth: return "DiskQueueDepth"
        case .freestoragespace: return "FreeStorageSpace"
        case .networkreceivethroughput: return "NetworkReceiveThroughput"
        case .networktransmitthroughput: return "NetworkTransmitThroughput"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = RelationalDatabaseMetricName(rawValue: rawValue) ?? RelationalDatabaseMetricName.sdkUnknown(rawValue)
    }
}
