// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAlarmsOutputBody: Equatable {
    public let alarms: [Alarm]?
    public let nextPageToken: String?
}

extension GetAlarmsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarms
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmsContainer = try containerValues.decodeIfPresent([Alarm].self, forKey: .alarms)
        var alarmsDecoded0:[Alarm]? = nil
        if let alarmsContainer = alarmsContainer {
            alarmsDecoded0 = [Alarm]()
            for structure0 in alarmsContainer {
                alarmsDecoded0?.append(structure0)
            }
        }
        alarms = alarmsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
