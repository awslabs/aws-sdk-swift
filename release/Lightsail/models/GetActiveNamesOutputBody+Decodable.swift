// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetActiveNamesOutputBody: Equatable {
    public let activeNames: [String]?
    public let nextPageToken: String?
}

extension GetActiveNamesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activeNames
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .activeNames)
        var activeNamesDecoded0:[String]? = nil
        if let activeNamesContainer = activeNamesContainer {
            activeNamesDecoded0 = [String]()
            for string0 in activeNamesContainer {
                activeNamesDecoded0?.append(string0)
            }
        }
        activeNames = activeNamesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
