// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateContainerServiceInput: Equatable {
    /// <p>A Boolean value to indicate whether the container service is disabled.</p>
    public let isDisabled: Bool?
    /// <p>The power for the container service.</p>
    ///
    ///          <p>The power specifies the amount of memory, vCPUs, and base monthly cost of each node of the
    ///       container service. The <code>power</code> and <code>scale</code> of a container service makes
    ///       up its configured capacity. To determine the monthly price of your container service, multiply
    ///       the base price of the <code>power</code> with the <code>scale</code> (the number of nodes) of
    ///       the service.</p>
    ///
    ///          <p>Use the <code>GetContainerServicePowers</code> action to view the specifications of each
    ///       power option.</p>
    public let power: ContainerServicePowerName?
    /// <p>The public domain names to use with the container service, such as
    ///         <code>example.com</code> and <code>www.example.com</code>.</p>
    ///
    ///          <p>You can specify up to four public domain names for a container service. The domain names
    ///       that you specify are used when you create a deployment with a container configured as the
    ///       public endpoint of your container service.</p>
    ///
    ///          <p>If you don't specify public domain names, then you can use the default domain of the
    ///       container service.</p>
    ///
    ///          <important>
    ///             <p>You must create and validate an SSL/TLS certificate before you can use public domain
    ///         names with your container service. Use the <code>CreateCertificate</code> action to create a
    ///         certificate for the public domain names you want to use with your container service.</p>
    ///          </important>
    ///
    ///          <p>You can specify public domain names using a string to array map as shown in the example
    ///       later on this page.</p>
    public let publicDomainNames: [String:[String]?]?
    /// <p>The scale for the container service.</p>
    ///
    ///          <p>The scale specifies the allocated compute nodes of the container service. The
    ///         <code>power</code> and <code>scale</code> of a container service makes up its configured
    ///       capacity. To determine the monthly price of your container service, multiply the base price of
    ///       the <code>power</code> with the <code>scale</code> (the number of nodes) of the
    ///       service.</p>
    public let scale: Int?
    /// <p>The name of the container service to update.</p>
    public let serviceName: String?

    public init (
        isDisabled: Bool? = nil,
        power: ContainerServicePowerName? = nil,
        publicDomainNames: [String:[String]?]? = nil,
        scale: Int? = nil,
        serviceName: String? = nil
    )
    {
        self.isDisabled = isDisabled
        self.power = power
        self.publicDomainNames = publicDomainNames
        self.scale = scale
        self.serviceName = serviceName
    }
}
