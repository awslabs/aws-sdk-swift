// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AttachDiskInputBody: Equatable {
    public let diskName: String?
    public let instanceName: String?
    public let diskPath: String?
}

extension AttachDiskInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case diskName
        case diskPath
        case instanceName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let diskNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .diskName)
        diskName = diskNameDecoded
        let instanceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceName)
        instanceName = instanceNameDecoded
        let diskPathDecoded = try containerValues.decodeIfPresent(String.self, forKey: .diskPath)
        diskPath = diskPathDecoded
    }
}
