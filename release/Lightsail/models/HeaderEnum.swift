// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum HeaderEnum {
    case accept
    case acceptcharset
    case acceptdatetime
    case acceptencoding
    case acceptlanguage
    case authorization
    case cloudfrontforwardedproto
    case cloudfrontisdesktopviewer
    case cloudfrontismobileviewer
    case cloudfrontissmarttvviewer
    case cloudfrontistabletviewer
    case cloudfrontviewercountry
    case host
    case origin
    case referer
    case sdkUnknown(String)
}

extension HeaderEnum : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [HeaderEnum] {
        return [
            .accept,
            .acceptcharset,
            .acceptdatetime,
            .acceptencoding,
            .acceptlanguage,
            .authorization,
            .cloudfrontforwardedproto,
            .cloudfrontisdesktopviewer,
            .cloudfrontismobileviewer,
            .cloudfrontissmarttvviewer,
            .cloudfrontistabletviewer,
            .cloudfrontviewercountry,
            .host,
            .origin,
            .referer,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accept: return "Accept"
        case .acceptcharset: return "Accept-Charset"
        case .acceptdatetime: return "Accept-Datetime"
        case .acceptencoding: return "Accept-Encoding"
        case .acceptlanguage: return "Accept-Language"
        case .authorization: return "Authorization"
        case .cloudfrontforwardedproto: return "CloudFront-Forwarded-Proto"
        case .cloudfrontisdesktopviewer: return "CloudFront-Is-Desktop-Viewer"
        case .cloudfrontismobileviewer: return "CloudFront-Is-Mobile-Viewer"
        case .cloudfrontissmarttvviewer: return "CloudFront-Is-SmartTV-Viewer"
        case .cloudfrontistabletviewer: return "CloudFront-Is-Tablet-Viewer"
        case .cloudfrontviewercountry: return "CloudFront-Viewer-Country"
        case .host: return "Host"
        case .origin: return "Origin"
        case .referer: return "Referer"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = HeaderEnum(rawValue: rawValue) ?? HeaderEnum.sdkUnknown(rawValue)
    }
}
