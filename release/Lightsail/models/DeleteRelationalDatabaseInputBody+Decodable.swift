// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteRelationalDatabaseInputBody: Equatable {
    public let relationalDatabaseName: String?
    public let skipFinalSnapshot: Bool?
    public let finalRelationalDatabaseSnapshotName: String?
}

extension DeleteRelationalDatabaseInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case finalRelationalDatabaseSnapshotName
        case relationalDatabaseName
        case skipFinalSnapshot
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let relationalDatabaseNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .relationalDatabaseName)
        relationalDatabaseName = relationalDatabaseNameDecoded
        let skipFinalSnapshotDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .skipFinalSnapshot)
        skipFinalSnapshot = skipFinalSnapshotDecoded
        let finalRelationalDatabaseSnapshotNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .finalRelationalDatabaseSnapshotName)
        finalRelationalDatabaseSnapshotName = finalRelationalDatabaseSnapshotNameDecoded
    }
}
