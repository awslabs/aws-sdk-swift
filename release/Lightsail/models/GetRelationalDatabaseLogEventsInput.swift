// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetRelationalDatabaseLogEventsInput: Equatable {
    /// <p>The end of the time interval from which to get log events.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Specified in Coordinated Universal Time (UTC).</p>
    ///             </li>
    ///             <li>
    ///                <p>Specified in the Unix time format.</p>
    ///                <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you
    ///           input <code>1538424000</code> as the end time.</p>
    ///
    ///             </li>
    ///          </ul>
    public let endTime: Date?
    /// <p>The name of the log stream.</p>
    ///          <p>Use the <code>get relational database log streams</code> operation to get a list of
    ///       available log streams.</p>
    public let logStreamName: String?
    /// <p>The token to advance to the next or previous page of results from your request.</p>
    ///          <p>To get a page token, perform an initial <code>GetRelationalDatabaseLogEvents</code>
    ///       request. If your results are paginated, the response will return a next forward token and/or
    ///       next backward token that you can specify as the page token in a subsequent request.</p>
    public let pageToken: String?
    /// <p>The name of your database for which to get log events.</p>
    public let relationalDatabaseName: String?
    /// <p>Parameter to specify if the log should start from head or tail. If <code>true</code> is
    ///       specified, the log event starts from the head of the log. If <code>false</code> is specified,
    ///       the log event starts from the tail of the log.</p>
    ///          <note>
    ///             <p>For PostgreSQL, the default value of <code>false</code> is the only option
    ///         available.</p>
    ///          </note>
    public let startFromHead: Bool?
    /// <p>The start of the time interval from which to get log events.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Specified in Coordinated Universal Time (UTC).</p>
    ///             </li>
    ///             <li>
    ///                <p>Specified in the Unix time format.</p>
    ///                <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you
    ///           input <code>1538424000</code> as the start time.</p>
    ///             </li>
    ///          </ul>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        logStreamName: String? = nil,
        pageToken: String? = nil,
        relationalDatabaseName: String? = nil,
        startFromHead: Bool? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.logStreamName = logStreamName
        self.pageToken = pageToken
        self.relationalDatabaseName = relationalDatabaseName
        self.startFromHead = startFromHead
        self.startTime = startTime
    }
}
