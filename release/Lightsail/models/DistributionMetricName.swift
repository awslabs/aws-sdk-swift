// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DistributionMetricName {
    case bytesdownloaded
    case bytesuploaded
    case http4xxerrorrate
    case http5xxerrorrate
    case requests
    case totalerrorrate
    case sdkUnknown(String)
}

extension DistributionMetricName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DistributionMetricName] {
        return [
            .bytesdownloaded,
            .bytesuploaded,
            .http4xxerrorrate,
            .http5xxerrorrate,
            .requests,
            .totalerrorrate,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bytesdownloaded: return "BytesDownloaded"
        case .bytesuploaded: return "BytesUploaded"
        case .http4xxerrorrate: return "Http4xxErrorRate"
        case .http5xxerrorrate: return "Http5xxErrorRate"
        case .requests: return "Requests"
        case .totalerrorrate: return "TotalErrorRate"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DistributionMetricName(rawValue: rawValue) ?? DistributionMetricName.sdkUnknown(rawValue)
    }
}
