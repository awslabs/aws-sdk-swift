// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateContactMethodInputBody: Equatable {
    public let `protocol`: ContactProtocol?
    public let contactEndpoint: String?
}

extension CreateContactMethodInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactEndpoint
        case `protocol` = "protocol"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let protocolDecoded = try containerValues.decodeIfPresent(ContactProtocol.self, forKey: .protocol)
        `protocol` = protocolDecoded
        let contactEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactEndpoint)
        contactEndpoint = contactEndpointDecoded
    }
}
