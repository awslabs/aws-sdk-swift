// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RegisterContainerImageInput: Equatable {
    /// <p>The digest of the container image to be registered.</p>
    public let digest: String?
    /// <p>The label for the container image when it's registered to the container service.</p>
    ///
    ///          <p>Use a descriptive label that you can use to track the different versions of your
    ///       registered container images.</p>
    ///
    ///          <p>Use the <code>GetContainerImages</code> action to return the container images registered
    ///       to a Lightsail container service. The label is the <code><imagelabel></code> portion
    ///       of the following image name example:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>:container-service-1.<imagelabel>.1</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>If the name of your container service is <code>mycontainerservice</code>, and the label
    ///       that you specify is <code>mystaticwebsite</code>, then the name of the registered container
    ///       image will be <code>:mycontainerservice.mystaticwebsite.1</code>.</p>
    ///
    ///          <p>The number at the end of these image name examples represents the version of the
    ///       registered container image. If you push and register another container image to the same
    ///       Lightsail container service, with the same label, then the version number for the new
    ///       registered container image will be <code>2</code>. If you push and register another container
    ///       image, the version number will be <code>3</code>, and so on.</p>
    public let label: String?
    /// <p>The name of the container service for which to register a container image.</p>
    public let serviceName: String?

    public init (
        digest: String? = nil,
        label: String? = nil,
        serviceName: String? = nil
    )
    {
        self.digest = digest
        self.label = label
        self.serviceName = serviceName
    }
}
