// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRegionsOutputBody: Equatable {
    public let regions: [Region]?
}

extension GetRegionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case regions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regionsContainer = try containerValues.decodeIfPresent([Region].self, forKey: .regions)
        var regionsDecoded0:[Region]? = nil
        if let regionsContainer = regionsContainer {
            regionsDecoded0 = [Region]()
            for structure0 in regionsContainer {
                regionsDecoded0?.append(structure0)
            }
        }
        regions = regionsDecoded0
    }
}
