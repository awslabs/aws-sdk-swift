// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAccessPointsOutputBody: Equatable {
    public let accessPoints: [AccessPointDescription]?
    public let nextToken: String?
}

extension DescribeAccessPointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessPoints = "AccessPoints"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessPointsContainer = try containerValues.decodeIfPresent([AccessPointDescription].self, forKey: .accessPoints)
        var accessPointsDecoded0:[AccessPointDescription]? = nil
        if let accessPointsContainer = accessPointsContainer {
            accessPointsDecoded0 = [AccessPointDescription]()
            for structure0 in accessPointsContainer {
                accessPointsDecoded0?.append(structure0)
            }
        }
        accessPoints = accessPointsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
