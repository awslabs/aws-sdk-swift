// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A description of the file system.</p>
public struct FileSystemDescription: Equatable {
    /// <p>The unique and consistent identifier of the Availability Zone in which the file system's
    ///       One Zone storage classes exist. For example, <code>use1-az1</code> is an Availability Zone ID
    ///       for the us-east-1 AWS Region, and it has the same location in every AWS account.</p>
    public let availabilityZoneId: String?
    /// <p>Describes the AWS Availability Zone in which the file system is located, and is valid only
    ///       for file systems using One Zone storage classes. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using EFS storage classes</a>
    ///       in the <i>Amazon EFS User Guide</i>.</p>
    public let availabilityZoneName: String?
    /// <p>The time that the file system was created, in seconds (since
    ///       1970-01-01T00:00:00Z).</p>
    public let creationTime: Date?
    /// <p>The opaque string specified in the request.</p>
    public let creationToken: String?
    /// <p>A Boolean value that, if true, indicates that the file system is encrypted.</p>
    public let encrypted: Bool?
    /// <p>The Amazon Resource Name (ARN) for the EFS file system, in the format
    ///       <code>arn:aws:elasticfilesystem:<i>region</i>:<i>account-id</i>:file-system/<i>file-system-id</i>
    ///             </code>.
    ///       Example with sample data: <code>arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567</code>
    ///          </p>
    public let fileSystemArn: String?
    /// <p>The ID of the file system, assigned by Amazon EFS.</p>
    public let fileSystemId: String?
    /// <p>The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was
    ///       used to protect the encrypted file system.</p>
    public let kmsKeyId: String?
    /// <p>The lifecycle phase of the file system.</p>
    public let lifeCycleState: LifeCycleState?
    /// <p>You can add tags to a file system, including a <code>Name</code> tag. For more
    ///       information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns
    ///       the value in this field. </p>
    public let name: String?
    /// <p>The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.</p>
    public let numberOfMountTargets: Int
    /// <p>The AWS account that created the file system. If the file system was created by an IAM
    ///       user, the parent account to which the user belongs is the owner.</p>
    public let ownerId: String?
    /// <p>The performance mode of the file system.</p>
    public let performanceMode: PerformanceMode?
    /// <p>The amount of provisioned throughput, measured in MiB/s, for the file system. Valid for
    ///       file systems using <code>ThroughputMode</code> set to <code>provisioned</code>.</p>
    public let provisionedThroughputInMibps: Double?
    /// <p>The latest known metered size (in bytes) of data stored in the file system, in its
    ///         <code>Value</code> field, and the time at which that size was determined in its
    ///         <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of
    ///       seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent
    ///       the size of a consistent snapshot of the file system, but it is eventually consistent when
    ///       there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual
    ///       size only if the file system is not modified for a period longer than a couple of hours.
    ///       Otherwise, the value is not the exact size that the file system was at any point in time.
    ///     </p>
    public let sizeInBytes: FileSystemSize?
    /// <p>The tags associated with the file system, presented as an array of <code>Tag</code>
    ///       objects.</p>
    public let tags: [Tag]?
    /// <p>Displays the file system's throughput mode. For more information, see
    ///       <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes">Throughput modes</a>
    ///       in the <i>Amazon EFS User Guide</i>.
    ///     </p>
    public let throughputMode: ThroughputMode?

    public init (
        availabilityZoneId: String? = nil,
        availabilityZoneName: String? = nil,
        creationTime: Date? = nil,
        creationToken: String? = nil,
        encrypted: Bool? = nil,
        fileSystemArn: String? = nil,
        fileSystemId: String? = nil,
        kmsKeyId: String? = nil,
        lifeCycleState: LifeCycleState? = nil,
        name: String? = nil,
        numberOfMountTargets: Int = 0,
        ownerId: String? = nil,
        performanceMode: PerformanceMode? = nil,
        provisionedThroughputInMibps: Double? = nil,
        sizeInBytes: FileSystemSize? = nil,
        tags: [Tag]? = nil,
        throughputMode: ThroughputMode? = nil
    )
    {
        self.availabilityZoneId = availabilityZoneId
        self.availabilityZoneName = availabilityZoneName
        self.creationTime = creationTime
        self.creationToken = creationToken
        self.encrypted = encrypted
        self.fileSystemArn = fileSystemArn
        self.fileSystemId = fileSystemId
        self.kmsKeyId = kmsKeyId
        self.lifeCycleState = lifeCycleState
        self.name = name
        self.numberOfMountTargets = numberOfMountTargets
        self.ownerId = ownerId
        self.performanceMode = performanceMode
        self.provisionedThroughputInMibps = provisionedThroughputInMibps
        self.sizeInBytes = sizeInBytes
        self.tags = tags
        self.throughputMode = throughputMode
    }
}
