// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum TransitionToIARules {
    case after14Days
    case after30Days
    case after60Days
    case after7Days
    case after90Days
    case sdkUnknown(String)
}

extension TransitionToIARules : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TransitionToIARules] {
        return [
            .after14Days,
            .after30Days,
            .after60Days,
            .after7Days,
            .after90Days,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .after14Days: return "AFTER_14_DAYS"
        case .after30Days: return "AFTER_30_DAYS"
        case .after60Days: return "AFTER_60_DAYS"
        case .after7Days: return "AFTER_7_DAYS"
        case .after90Days: return "AFTER_90_DAYS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TransitionToIARules(rawValue: rawValue) ?? TransitionToIARules.sdkUnknown(rawValue)
    }
}
