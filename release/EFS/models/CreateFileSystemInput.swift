// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateFileSystemInput: Equatable {
    /// <p>Used to create a file system that uses One Zone storage classes. It specifies the AWS
    ///       Availability Zone in which to create the file system. Use the format <code>us-east-1a</code>
    ///       to specify the Availability Zone. For
    ///       more information about One Zone storage classes, see <a href="https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html">Using EFS storage classes</a> in the <i>Amazon EFS User Guide</i>.</p>
    ///          <note>
    ///             <p>One Zone storage classes are not available in all Availability Zones in AWS Regions where
    ///         Amazon EFS is available.</p>
    ///          </note>
    public let availabilityZoneName: String?
    /// <p>Specifies whether automatic backups are enabled on the file system that you are creating.
    ///       Set the value to <code>true</code> to enable automatic backups. If you are creating a file
    ///       system that uses One Zone storage classes, automatic backups are enabled by default. For more
    ///       information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic backups</a> in the
    ///         <i>Amazon EFS User Guide</i>.</p>
    ///          <p>Default is <code>false</code>. However, if you specify an <code>AvailabilityZoneName</code>,
    ///       the default is <code>true</code>.</p>
    ///          <note>
    ///             <p>AWS Backup is not available in all AWS Regions where Amazon EFS is available.</p>
    ///          </note>
    public let backup: Bool?
    /// <p>A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent
    ///       creation.</p>
    public var creationToken: String?
    /// <p>A Boolean value that, if true, creates an encrypted file system. When creating an
    ///       encrypted file system, you have the option of specifying <a>CreateFileSystemRequest$KmsKeyId</a> for an existing AWS Key Management Service (AWS
    ///       KMS) customer master key (CMK). If you don't specify a CMK, then the default CMK for
    ///       Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system.
    ///     </p>
    public let encrypted: Bool?
    /// <p>The ID of the AWS KMS CMK that you want to use to protect the encrypted file system. This
    ///       parameter is only required if you want to use a non-default KMS key. If this parameter is not
    ///       specified, the default CMK for Amazon EFS is used. This ID can be in one of the following
    ///       formats:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Key ID - A unique identifier of the key, for example
    ///             <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>ARN - An Amazon Resource Name (ARN) for the key, for example
    ///             <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Key alias - A previously created display name for a key, for example
    ///             <code>alias/projectKey1</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Key alias ARN - An ARN for a key alias, for example
    ///             <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p>
    ///             </li>
    ///          </ul>
    ///          <p>If <code>KmsKeyId</code> is specified, the <a>CreateFileSystemRequest$Encrypted</a> parameter must be set to true.</p>
    ///          <important>
    ///             <p>EFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with EFS file systems.</p>
    ///          </important>
    public let kmsKeyId: String?
    /// <p>The performance mode of the file system. We recommend <code>generalPurpose</code>
    ///       performance mode for most file systems. File systems using the <code>maxIO</code> performance
    ///       mode can scale to higher levels of aggregate throughput and operations per second with a
    ///       tradeoff of slightly higher latencies for most file operations. The performance mode
    ///       can't be changed after the file system has been created.</p>
    ///          <note>
    ///             <p>The <code>maxIO</code> mode is not supported on file systems using One Zone storage classes.</p>
    ///          </note>
    public let performanceMode: PerformanceMode?
    /// <p>The throughput, measured in MiB/s, that you want to provision for a file system that
    ///       you're creating. Valid values are 1-1024. Required if <code>ThroughputMode</code> is set
    ///       to <code>provisioned</code>. The upper limit for throughput is 1024 MiB/s. To increase this
    ///       limit, contact AWS Support. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits">Amazon EFS quotas that you can increase</a>
    ///       in the <i>Amazon EFS User Guide</i>.</p>
    public let provisionedThroughputInMibps: Double?
    /// <p>A value that specifies to create one or more tags associated with the file system. Each
    ///         tag is a user-defined key-value pair. Name your file system on creation by including a
    ///           <code>"Key":"Name","Value":"{value}"</code> key-value pair.</p>
    public let tags: [Tag]?
    /// <p>Specifies the throughput mode for the file system, either <code>bursting</code> or
    ///         <code>provisioned</code>. If you set <code>ThroughputMode</code> to
    ///       <code>provisioned</code>, you must also set a value for
    ///         <code>ProvisionedThroughputInMibps</code>. After you create the file system, you can
    ///       decrease your file system's throughput in Provisioned Throughput mode or change between
    ///       the throughput modes, as long as itâ€™s been more than 24 hours since the last decrease or
    ///       throughput mode change. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput">Specifying throughput with
    ///         provisioned mode</a> in the <i>Amazon EFS User Guide</i>. </p>
    ///          <p>Default is <code>bursting</code>.</p>
    public let throughputMode: ThroughputMode?

    public init (
        availabilityZoneName: String? = nil,
        backup: Bool? = nil,
        creationToken: String? = nil,
        encrypted: Bool? = nil,
        kmsKeyId: String? = nil,
        performanceMode: PerformanceMode? = nil,
        provisionedThroughputInMibps: Double? = nil,
        tags: [Tag]? = nil,
        throughputMode: ThroughputMode? = nil
    )
    {
        self.availabilityZoneName = availabilityZoneName
        self.backup = backup
        self.creationToken = creationToken
        self.encrypted = encrypted
        self.kmsKeyId = kmsKeyId
        self.performanceMode = performanceMode
        self.provisionedThroughputInMibps = provisionedThroughputInMibps
        self.tags = tags
        self.throughputMode = throughputMode
    }
}
