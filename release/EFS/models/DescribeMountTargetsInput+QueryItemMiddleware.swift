// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeMountTargetsInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeMountTargetsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeMountTargetsInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeMountTargetsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let accessPointId = input.operationInput.accessPointId {
            let accessPointIdQueryItem = URLQueryItem(name: "AccessPointId".urlPercentEncoding(), value: String(accessPointId).urlPercentEncoding())
            input.builder.withQueryItem(accessPointIdQueryItem)
        }
        if let fileSystemId = input.operationInput.fileSystemId {
            let fileSystemIdQueryItem = URLQueryItem(name: "FileSystemId".urlPercentEncoding(), value: String(fileSystemId).urlPercentEncoding())
            input.builder.withQueryItem(fileSystemIdQueryItem)
        }
        if let maxItems = input.operationInput.maxItems {
            let maxItemsQueryItem = URLQueryItem(name: "MaxItems".urlPercentEncoding(), value: String(maxItems).urlPercentEncoding())
            input.builder.withQueryItem(maxItemsQueryItem)
        }
        if let marker = input.operationInput.marker {
            let markerQueryItem = URLQueryItem(name: "Marker".urlPercentEncoding(), value: String(marker).urlPercentEncoding())
            input.builder.withQueryItem(markerQueryItem)
        }
        if let mountTargetId = input.operationInput.mountTargetId {
            let mountTargetIdQueryItem = URLQueryItem(name: "MountTargetId".urlPercentEncoding(), value: String(mountTargetId).urlPercentEncoding())
            input.builder.withQueryItem(mountTargetIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeMountTargetsInput>
    public typealias MOutput = OperationOutput<DescribeMountTargetsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DescribeMountTargetsOutputError>
}
