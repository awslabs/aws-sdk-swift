// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateFileSystemInputBody: Equatable {
    public let throughputMode: ThroughputMode?
    public let provisionedThroughputInMibps: Double?
}

extension UpdateFileSystemInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case provisionedThroughputInMibps = "ProvisionedThroughputInMibps"
        case throughputMode = "ThroughputMode"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let throughputModeDecoded = try containerValues.decodeIfPresent(ThroughputMode.self, forKey: .throughputMode)
        throughputMode = throughputModeDecoded
        let provisionedThroughputInMibpsDecoded = try containerValues.decodeIfPresent(Double.self, forKey: .provisionedThroughputInMibps)
        provisionedThroughputInMibps = provisionedThroughputInMibpsDecoded
    }
}
