// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The latest known metered size (in bytes) of data stored in the file system, in its
///         <code>Value</code> field, and the time at which that size was determined in its
///         <code>Timestamp</code> field. The value doesn't represent the size of a consistent
///       snapshot of the file system, but it is eventually consistent when there are no writes to the
///       file system. That is, the value represents the actual size only if the file system is not
///       modified for a period longer than a couple of hours. Otherwise, the value is not necessarily
///       the exact size the file system was at any instant in time.</p>
public struct FileSystemSize: Equatable {
    /// <p>The time at which the size of data, returned in the <code>Value</code> field, was
    ///       determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.</p>
    public let timestamp: Date?
    /// <p>The latest known metered size (in bytes) of data stored in the file system.</p>
    public let value: Int
    /// <p>The latest known metered size (in bytes) of data stored in the Infrequent Access
    ///       storage class.</p>
    public let valueInIA: Int?
    /// <p>The latest known metered size (in bytes) of data stored in the Standard storage
    ///       class.</p>
    public let valueInStandard: Int?

    public init (
        timestamp: Date? = nil,
        value: Int = 0,
        valueInIA: Int? = nil,
        valueInStandard: Int? = nil
    )
    {
        self.timestamp = timestamp
        self.value = value
        self.valueInIA = valueInIA
        self.valueInStandard = valueInStandard
    }
}
