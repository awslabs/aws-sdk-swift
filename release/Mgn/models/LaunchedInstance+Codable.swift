// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LaunchedInstance: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ec2InstanceID
        case firstBoot
        case jobID
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ec2InstanceID = ec2InstanceID {
            try encodeContainer.encode(ec2InstanceID, forKey: .ec2InstanceID)
        }
        if let firstBoot = firstBoot {
            try encodeContainer.encode(firstBoot.rawValue, forKey: .firstBoot)
        }
        if let jobID = jobID {
            try encodeContainer.encode(jobID, forKey: .jobID)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ec2InstanceIDDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ec2InstanceID)
        ec2InstanceID = ec2InstanceIDDecoded
        let jobIDDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobID)
        jobID = jobIDDecoded
        let firstBootDecoded = try containerValues.decodeIfPresent(FirstBoot.self, forKey: .firstBoot)
        firstBoot = firstBootDecoded
    }
}
