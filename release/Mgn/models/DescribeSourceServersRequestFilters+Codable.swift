// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeSourceServersRequestFilters: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isArchived
        case sourceServerIDs
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let isArchived = isArchived {
            try encodeContainer.encode(isArchived, forKey: .isArchived)
        }
        if let sourceServerIDs = sourceServerIDs {
            var sourceServerIDsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sourceServerIDs)
            for describesourceserversrequestfiltersids0 in sourceServerIDs {
                try sourceServerIDsContainer.encode(describesourceserversrequestfiltersids0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDsContainer = try containerValues.decodeIfPresent([String].self, forKey: .sourceServerIDs)
        var sourceServerIDsDecoded0:[String]? = nil
        if let sourceServerIDsContainer = sourceServerIDsContainer {
            sourceServerIDsDecoded0 = [String]()
            for string0 in sourceServerIDsContainer {
                sourceServerIDsDecoded0?.append(string0)
            }
        }
        sourceServerIDs = sourceServerIDsDecoded0
        let isArchivedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .isArchived)
        isArchived = isArchivedDecoded
    }
}
