// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateReplicationConfigurationOutput: Equatable {
    /// <p>Replication Configuration associate default Application Migration Service Security Group.</p>
    public let associateDefaultSecurityGroup: Bool?
    /// <p>Replication Configuration set bandwidth throttling.</p>
    public let bandwidthThrottling: Int
    /// <p>Replication Configuration create Public IP.</p>
    public let createPublicIP: Bool?
    /// <p>Replication Configuration data plane routing.</p>
    public let dataPlaneRouting: ReplicationConfigurationDataPlaneRouting?
    /// <p>Replication Configuration use default large Staging Disks.</p>
    public let defaultLargeStagingDiskType: ReplicationConfigurationDefaultLargeStagingDiskType?
    /// <p>Replication Configuration EBS encryption.</p>
    public let ebsEncryption: ReplicationConfigurationEbsEncryption?
    /// <p>Replication Configuration EBS encryption key ARN.</p>
    public let ebsEncryptionKeyArn: String?
    /// <p>Replication Configuration name.</p>
    public let name: String?
    /// <p>Replication Configuration replicated disks.</p>
    public let replicatedDisks: [ReplicationConfigurationReplicatedDisk]?
    /// <p>Replication Configuration Replication Server instance type.</p>
    public let replicationServerInstanceType: String?
    /// <p>Replication Configuration Replication Server Security Group IDs.</p>
    public let replicationServersSecurityGroupsIDs: [String]?
    /// <p>Replication Configuration Source Server ID.</p>
    public let sourceServerID: String?
    /// <p>Replication Configuration Staging Area subnet ID.</p>
    public let stagingAreaSubnetId: String?
    /// <p>Replication Configuration Staging Area tags.</p>
    public let stagingAreaTags: [String:String]?
    /// <p>Replication Configuration use Dedicated Replication Server.</p>
    public let useDedicatedReplicationServer: Bool?

    public init (
        associateDefaultSecurityGroup: Bool? = nil,
        bandwidthThrottling: Int = 0,
        createPublicIP: Bool? = nil,
        dataPlaneRouting: ReplicationConfigurationDataPlaneRouting? = nil,
        defaultLargeStagingDiskType: ReplicationConfigurationDefaultLargeStagingDiskType? = nil,
        ebsEncryption: ReplicationConfigurationEbsEncryption? = nil,
        ebsEncryptionKeyArn: String? = nil,
        name: String? = nil,
        replicatedDisks: [ReplicationConfigurationReplicatedDisk]? = nil,
        replicationServerInstanceType: String? = nil,
        replicationServersSecurityGroupsIDs: [String]? = nil,
        sourceServerID: String? = nil,
        stagingAreaSubnetId: String? = nil,
        stagingAreaTags: [String:String]? = nil,
        useDedicatedReplicationServer: Bool? = nil
    )
    {
        self.associateDefaultSecurityGroup = associateDefaultSecurityGroup
        self.bandwidthThrottling = bandwidthThrottling
        self.createPublicIP = createPublicIP
        self.dataPlaneRouting = dataPlaneRouting
        self.defaultLargeStagingDiskType = defaultLargeStagingDiskType
        self.ebsEncryption = ebsEncryption
        self.ebsEncryptionKeyArn = ebsEncryptionKeyArn
        self.name = name
        self.replicatedDisks = replicatedDisks
        self.replicationServerInstanceType = replicationServerInstanceType
        self.replicationServersSecurityGroupsIDs = replicationServersSecurityGroupsIDs
        self.sourceServerID = sourceServerID
        self.stagingAreaSubnetId = stagingAreaSubnetId
        self.stagingAreaTags = stagingAreaTags
        self.useDedicatedReplicationServer = useDedicatedReplicationServer
    }
}
