// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LifeCycleLastCutoverInitiated: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case apiCallDateTime
        case jobID
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiCallDateTime = apiCallDateTime {
            try encodeContainer.encode(apiCallDateTime, forKey: .apiCallDateTime)
        }
        if let jobID = jobID {
            try encodeContainer.encode(jobID, forKey: .jobID)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiCallDateTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .apiCallDateTime)
        apiCallDateTime = apiCallDateTimeDecoded
        let jobIDDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobID)
        jobID = jobIDDecoded
    }
}
