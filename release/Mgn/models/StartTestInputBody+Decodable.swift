// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartTestInputBody: Equatable {
    public let sourceServerIDs: [String]?
    public let tags: [String:String]?
}

extension StartTestInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case sourceServerIDs
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceServerIDsContainer = try containerValues.decodeIfPresent([String].self, forKey: .sourceServerIDs)
        var sourceServerIDsDecoded0:[String]? = nil
        if let sourceServerIDsContainer = sourceServerIDsContainer {
            sourceServerIDsDecoded0 = [String]()
            for string0 in sourceServerIDsContainer {
                sourceServerIDsDecoded0?.append(string0)
            }
        }
        sourceServerIDs = sourceServerIDsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .tags)
        var tagsDecoded0: [String:String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String:String]()
            for (key0, tagvalue0) in tagsContainer {
                tagsDecoded0?[key0] = tagvalue0
            }
        }
        tags = tagsDecoded0
    }
}
