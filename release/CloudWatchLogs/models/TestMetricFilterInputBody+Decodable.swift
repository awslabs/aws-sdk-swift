// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestMetricFilterInputBody: Equatable {
    public let filterPattern: String?
    public let logEventMessages: [String]?
}

extension TestMetricFilterInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case filterPattern
        case logEventMessages
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterPatternDecoded = try containerValues.decodeIfPresent(String.self, forKey: .filterPattern)
        filterPattern = filterPatternDecoded
        let logEventMessagesContainer = try containerValues.decodeIfPresent([String].self, forKey: .logEventMessages)
        var logEventMessagesDecoded0:[String]? = nil
        if let logEventMessagesContainer = logEventMessagesContainer {
            logEventMessagesDecoded0 = [String]()
            for string0 in logEventMessagesContainer {
                logEventMessagesDecoded0?.append(string0)
            }
        }
        logEventMessages = logEventMessagesDecoded0
    }
}
