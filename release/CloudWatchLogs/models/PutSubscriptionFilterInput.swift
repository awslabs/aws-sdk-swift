// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutSubscriptionFilterInput: Equatable {
    /// <p>The ARN of the destination to deliver matching log events to. Currently, the supported
    ///       destinations are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,
    ///           for same-account delivery.</p>
    ///             </li>
    ///             <li>
    ///                <p>A logical destination (specified using an ARN) belonging to a different account,
    ///           for cross-account delivery.</p>
    ///                <p>If you are setting up a cross-account subscription, the destination must have an
    ///         IAM policy associated with it that allows the sender to send logs to the destination.
    ///         For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutDestinationPolicy.html">PutDestinationPolicy</a>.</p>
    ///             </li>
    ///             <li>
    ///                <p>An Amazon Kinesis Firehose delivery stream belonging to the same account as the
    ///           subscription filter, for same-account delivery.</p>
    ///             </li>
    ///             <li>
    ///                <p>An AWS Lambda function belonging to the same account as the subscription filter,
    ///           for same-account delivery.</p>
    ///             </li>
    ///          </ul>
    public let destinationArn: String?
    /// <p>The method used to distribute log data to the destination. By default, log data is
    ///       grouped by log stream, but the grouping can be set to random for a more even distribution.
    ///       This property is only applicable when the destination is an Amazon Kinesis stream. </p>
    public let distribution: Distribution?
    /// <p>A name for the subscription filter. If you are updating an existing filter, you must
    ///       specify the correct name in <code>filterName</code>. To find the name of the filter currently
    ///       associated with a log group, use <a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html">DescribeSubscriptionFilters</a>.</p>
    public let filterName: String?
    /// <p>A filter pattern for subscribing to a filtered stream of log events.</p>
    public let filterPattern: String?
    /// <p>The name of the log group.</p>
    public let logGroupName: String?
    /// <p>The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log
    ///       events to the destination stream. You don't need to provide the ARN when you are working with
    ///       a logical destination for cross-account delivery.</p>
    public let roleArn: String?

    public init (
        destinationArn: String? = nil,
        distribution: Distribution? = nil,
        filterName: String? = nil,
        filterPattern: String? = nil,
        logGroupName: String? = nil,
        roleArn: String? = nil
    )
    {
        self.destinationArn = destinationArn
        self.distribution = distribution
        self.filterName = filterName
        self.filterPattern = filterPattern
        self.logGroupName = logGroupName
        self.roleArn = roleArn
    }
}
