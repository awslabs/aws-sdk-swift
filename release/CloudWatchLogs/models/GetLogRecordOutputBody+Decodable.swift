// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLogRecordOutputBody: Equatable {
    public let logRecord: [String:String]?
}

extension GetLogRecordOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logRecord
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logRecordContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .logRecord)
        var logRecordDecoded0: [String:String]? = nil
        if let logRecordContainer = logRecordContainer {
            logRecordDecoded0 = [String:String]()
            for (key0, value0) in logRecordContainer {
                logRecordDecoded0?[key0] = value0
            }
        }
        logRecord = logRecordDecoded0
    }
}
