// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExportTasksInputBody: Equatable {
    public let taskId: String?
    public let statusCode: ExportTaskStatusCode?
    public let nextToken: String?
    public let limit: Int?
}

extension DescribeExportTasksInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case limit
        case nextToken
        case statusCode
        case taskId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskId)
        taskId = taskIdDecoded
        let statusCodeDecoded = try containerValues.decodeIfPresent(ExportTaskStatusCode.self, forKey: .statusCode)
        statusCode = statusCodeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
