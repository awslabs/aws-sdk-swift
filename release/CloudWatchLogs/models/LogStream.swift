// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a log stream, which is a sequence of log events from
///       a single emitter of logs.</p>
public struct LogStream: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the log stream.</p>
    public let arn: String?
    /// <p>The creation time of the stream, expressed as the number of milliseconds after Jan 1,
    ///       1970 00:00:00 UTC.</p>
    public let creationTime: Int?
    /// <p>The time of the first event, expressed as the number of milliseconds after Jan 1, 1970
    ///       00:00:00 UTC.</p>
    public let firstEventTimestamp: Int?
    /// <p>The time of the most recent log event in the log stream in CloudWatch Logs. This number
    ///       is expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The
    ///         <code>lastEventTime</code> value updates on an eventual consistency basis. It typically
    ///       updates in less than an hour from ingestion, but in rare situations might take
    ///       longer.</p>
    public let lastEventTimestamp: Int?
    /// <p>The ingestion time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00
    ///       UTC.</p>
    public let lastIngestionTime: Int?
    /// <p>The name of the log stream.</p>
    public let logStreamName: String?
    /// <p>The number of bytes stored.</p>
    ///          <p>
    ///             <b>Important:</b> On June 17, 2019, this parameter was
    ///       deprecated for log streams, and is always reported as zero. This change applies only to log
    ///       streams. The <code>storedBytes</code> parameter for log groups is not affected.</p>
    @available(*, deprecated, message: "Starting on June 17, 2019, this parameter will be deprecated for log streams, and will be reported as zero. This change applies only to log streams. The storedBytes parameter for log groups is not affected.")
    public let storedBytes: Int?
    /// <p>The sequence token.</p>
    public let uploadSequenceToken: String?

    public init (
        arn: String? = nil,
        creationTime: Int? = nil,
        firstEventTimestamp: Int? = nil,
        lastEventTimestamp: Int? = nil,
        lastIngestionTime: Int? = nil,
        logStreamName: String? = nil,
        storedBytes: Int? = nil,
        uploadSequenceToken: String? = nil
    )
    {
        self.arn = arn
        self.creationTime = creationTime
        self.firstEventTimestamp = firstEventTimestamp
        self.lastEventTimestamp = lastEventTimestamp
        self.lastIngestionTime = lastIngestionTime
        self.logStreamName = logStreamName
        self.storedBytes = storedBytes
        self.uploadSequenceToken = uploadSequenceToken
    }
}
