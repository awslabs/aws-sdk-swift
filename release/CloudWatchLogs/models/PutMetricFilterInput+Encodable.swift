// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutMetricFilterInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filterName
        case filterPattern
        case logGroupName
        case metricTransformations
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let filterName = filterName {
            try encodeContainer.encode(filterName, forKey: .filterName)
        }
        if let filterPattern = filterPattern {
            try encodeContainer.encode(filterPattern, forKey: .filterPattern)
        }
        if let logGroupName = logGroupName {
            try encodeContainer.encode(logGroupName, forKey: .logGroupName)
        }
        if let metricTransformations = metricTransformations {
            var metricTransformationsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .metricTransformations)
            for metrictransformations0 in metricTransformations {
                try metricTransformationsContainer.encode(metrictransformations0)
            }
        }
    }
}
