// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeLogStreamsInput: Equatable {
    /// <p>If the value is true, results are returned in descending order.
    ///       If the value is to false, results are returned in ascending order.
    ///       The default value is false.</p>
    public let descending: Bool?
    /// <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>
    public let limit: Int?
    /// <p>The name of the log group.</p>
    public let logGroupName: String?
    /// <p>The prefix to match.</p>
    ///          <p>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this
    ///       parameter.</p>
    public let logStreamNamePrefix: String?
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    public let nextToken: String?
    /// <p>If the value is <code>LogStreamName</code>, the results are ordered by log stream name.
    ///       If the value is <code>LastEventTime</code>, the results are ordered by the event time.
    ///       The default value is <code>LogStreamName</code>.</p>
    ///          <p>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code> parameter.</p>
    ///          <p>
    ///             <code>lastEventTimestamp</code> represents the time of the most recent log event in the
    ///       log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after
    ///       Jan 1, 1970 00:00:00 UTC. <code>lastEventTimestamp</code> updates on an eventual consistency
    ///       basis. It typically updates in less than an hour from ingestion, but in rare situations might
    ///       take longer.</p>
    public let orderBy: OrderBy?

    public init (
        descending: Bool? = nil,
        limit: Int? = nil,
        logGroupName: String? = nil,
        logStreamNamePrefix: String? = nil,
        nextToken: String? = nil,
        orderBy: OrderBy? = nil
    )
    {
        self.descending = descending
        self.limit = limit
        self.logGroupName = logGroupName
        self.logStreamNamePrefix = logStreamNamePrefix
        self.nextToken = nextToken
        self.orderBy = orderBy
    }
}
