// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension QueryStatistics: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bytesScanned
        case recordsMatched
        case recordsScanned
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if bytesScanned != 0.0 {
            try encodeContainer.encode(bytesScanned, forKey: .bytesScanned)
        }
        if recordsMatched != 0.0 {
            try encodeContainer.encode(recordsMatched, forKey: .recordsMatched)
        }
        if recordsScanned != 0.0 {
            try encodeContainer.encode(recordsScanned, forKey: .recordsScanned)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recordsMatchedDecoded = try containerValues.decode(Double.self, forKey: .recordsMatched)
        recordsMatched = recordsMatchedDecoded
        let recordsScannedDecoded = try containerValues.decode(Double.self, forKey: .recordsScanned)
        recordsScanned = recordsScannedDecoded
        let bytesScannedDecoded = try containerValues.decode(Double.self, forKey: .bytesScanned)
        bytesScanned = bytesScannedDecoded
    }
}
