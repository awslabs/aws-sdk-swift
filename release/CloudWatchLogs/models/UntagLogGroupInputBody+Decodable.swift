// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UntagLogGroupInputBody: Equatable {
    public let logGroupName: String?
    public let tags: [String]?
}

extension UntagLogGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logGroupName
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logGroupName)
        logGroupName = logGroupNameDecoded
        let tagsContainer = try containerValues.decodeIfPresent([String].self, forKey: .tags)
        var tagsDecoded0:[String]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [String]()
            for string0 in tagsContainer {
                tagsDecoded0?.append(string0)
            }
        }
        tags = tagsDecoded0
    }
}
