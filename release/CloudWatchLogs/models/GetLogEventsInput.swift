// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetLogEventsInput: Equatable {
    /// <p>The end of the time range, expressed as the number of milliseconds after Jan 1, 1970
    ///       00:00:00 UTC. Events with a timestamp equal to or later than this time are not
    ///       included.</p>
    public let endTime: Int?
    /// <p>The maximum number of log events returned. If you don't specify a value, the maximum is
    ///       as many log events as can fit in a response size of 1 MB, up to 10,000 log events.</p>
    public let limit: Int?
    /// <p>The name of the log group.</p>
    public let logGroupName: String?
    /// <p>The name of the log stream.</p>
    public let logStreamName: String?
    /// <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    ///          <p>Using this token works only when you specify <code>true</code> for <code>startFromHead</code>.</p>
    public let nextToken: String?
    /// <p>If the value is true, the earliest log events are returned first.
    ///       If the value is false, the latest log events are returned first.
    ///       The default value is false.</p>
    ///          <p>If you are using <code>nextToken</code> in this operation, you must specify <code>true</code> for <code>startFromHead</code>.</p>
    public let startFromHead: Bool?
    /// <p>The start of the time range, expressed as the number of milliseconds after Jan 1, 1970
    ///       00:00:00 UTC. Events with a timestamp equal to this time or later than this time are included.
    ///       Events with a timestamp earlier than this time are not included.</p>
    public let startTime: Int?

    public init (
        endTime: Int? = nil,
        limit: Int? = nil,
        logGroupName: String? = nil,
        logStreamName: String? = nil,
        nextToken: String? = nil,
        startFromHead: Bool? = nil,
        startTime: Int? = nil
    )
    {
        self.endTime = endTime
        self.limit = limit
        self.logGroupName = logGroupName
        self.logStreamName = logStreamName
        self.nextToken = nextToken
        self.startFromHead = startFromHead
        self.startTime = startTime
    }
}
