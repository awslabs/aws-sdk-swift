// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeMetricFiltersOutputBody: Equatable {
    public let metricFilters: [MetricFilter]?
    public let nextToken: String?
}

extension DescribeMetricFiltersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case metricFilters
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let metricFiltersContainer = try containerValues.decodeIfPresent([MetricFilter].self, forKey: .metricFilters)
        var metricFiltersDecoded0:[MetricFilter]? = nil
        if let metricFiltersContainer = metricFiltersContainer {
            metricFiltersDecoded0 = [MetricFilter]()
            for structure0 in metricFiltersContainer {
                metricFiltersDecoded0?.append(structure0)
            }
        }
        metricFilters = metricFiltersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
