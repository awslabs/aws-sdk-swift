// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetQueryResultsOutputBody: Equatable {
    public let results: [[ResultField]?]?
    public let statistics: QueryStatistics?
    public let status: QueryStatus?
}

extension GetQueryResultsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case results
        case statistics
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([[ResultField]?].self, forKey: .results)
        var resultsDecoded0:[[ResultField]?]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [[ResultField]?]()
            for list0 in resultsContainer {
                var list0Decoded0 = [ResultField]()
                if let list0 = list0 {
                    for structure1 in list0 {
                        list0Decoded0.append(structure1)
                    }
                }
                resultsDecoded0?.append(list0Decoded0)
            }
        }
        results = resultsDecoded0
        let statisticsDecoded = try containerValues.decodeIfPresent(QueryStatistics.self, forKey: .statistics)
        statistics = statisticsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(QueryStatus.self, forKey: .status)
        status = statusDecoded
    }
}
