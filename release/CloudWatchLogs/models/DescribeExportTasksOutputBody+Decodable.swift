// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExportTasksOutputBody: Equatable {
    public let exportTasks: [ExportTask]?
    public let nextToken: String?
}

extension DescribeExportTasksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exportTasks
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportTasksContainer = try containerValues.decodeIfPresent([ExportTask].self, forKey: .exportTasks)
        var exportTasksDecoded0:[ExportTask]? = nil
        if let exportTasksContainer = exportTasksContainer {
            exportTasksDecoded0 = [ExportTask]()
            for structure0 in exportTasksContainer {
                exportTasksDecoded0?.append(structure0)
            }
        }
        exportTasks = exportTasksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
