// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLogGroupsOutputBody: Equatable {
    public let logGroups: [LogGroup]?
    public let nextToken: String?
}

extension DescribeLogGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logGroups
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logGroupsContainer = try containerValues.decodeIfPresent([LogGroup].self, forKey: .logGroups)
        var logGroupsDecoded0:[LogGroup]? = nil
        if let logGroupsContainer = logGroupsContainer {
            logGroupsDecoded0 = [LogGroup]()
            for structure0 in logGroupsContainer {
                logGroupsDecoded0?.append(structure0)
            }
        }
        logGroups = logGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
