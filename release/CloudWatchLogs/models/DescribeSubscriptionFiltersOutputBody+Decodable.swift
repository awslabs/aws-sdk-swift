// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSubscriptionFiltersOutputBody: Equatable {
    public let subscriptionFilters: [SubscriptionFilter]?
    public let nextToken: String?
}

extension DescribeSubscriptionFiltersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case subscriptionFilters
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subscriptionFiltersContainer = try containerValues.decodeIfPresent([SubscriptionFilter].self, forKey: .subscriptionFilters)
        var subscriptionFiltersDecoded0:[SubscriptionFilter]? = nil
        if let subscriptionFiltersContainer = subscriptionFiltersContainer {
            subscriptionFiltersDecoded0 = [SubscriptionFilter]()
            for structure0 in subscriptionFiltersContainer {
                subscriptionFiltersDecoded0?.append(structure0)
            }
        }
        subscriptionFilters = subscriptionFiltersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
