// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeLogStreamsOutputBody: Equatable {
    public let logStreams: [LogStream]?
    public let nextToken: String?
}

extension DescribeLogStreamsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logStreams
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let logStreamsContainer = try containerValues.decodeIfPresent([LogStream].self, forKey: .logStreams)
        var logStreamsDecoded0:[LogStream]? = nil
        if let logStreamsContainer = logStreamsContainer {
            logStreamsDecoded0 = [LogStream]()
            for structure0 in logStreamsContainer {
                logStreamsDecoded0?.append(structure0)
            }
        }
        logStreams = logStreamsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
