// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FailureType {
    case cancellationfailed
    case internalfailure
    case invalidenvironmentstate
    case permissionserror
    case rollbackfailed
    case rollbacksuccessful
    case updatecancelled
    case sdkUnknown(String)
}

extension FailureType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FailureType] {
        return [
            .cancellationfailed,
            .internalfailure,
            .invalidenvironmentstate,
            .permissionserror,
            .rollbackfailed,
            .rollbacksuccessful,
            .updatecancelled,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .cancellationfailed: return "CancellationFailed"
        case .internalfailure: return "InternalFailure"
        case .invalidenvironmentstate: return "InvalidEnvironmentState"
        case .permissionserror: return "PermissionsError"
        case .rollbackfailed: return "RollbackFailed"
        case .rollbacksuccessful: return "RollbackSuccessful"
        case .updatecancelled: return "UpdateCancelled"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FailureType(rawValue: rawValue) ?? FailureType.sdkUnknown(rawValue)
    }
}
