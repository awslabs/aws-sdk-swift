// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ComposeEnvironmentsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let applicationName = applicationName {
            try container.encode(applicationName, forKey: Key("ApplicationName"))
        }
        if let groupName = groupName {
            try container.encode(groupName, forKey: Key("GroupName"))
        }
        if let versionLabels = versionLabels {
            var versionLabelsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("VersionLabels"))
            for (index0, versionlabel0) in versionLabels.enumerated() {
                try versionLabelsContainer.encode(versionlabel0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("ComposeEnvironments", forKey:Key("Action"))
        try container.encode("2010-12-01", forKey:Key("Version"))
    }
}
