// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Request to terminate an environment.</p>
public struct TerminateEnvironmentInput: Equatable {
    /// <p>The ID of the environment to terminate.</p>
    ///          <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not
    ///       specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.
    ///     </p>
    public let environmentId: String?
    /// <p>The name of the environment to terminate.</p>
    ///          <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not
    ///       specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error.
    ///     </p>
    public let environmentName: String?
    /// <p>Terminates the target environment even if another environment in the same group is
    ///       dependent on it.</p>
    public let forceTerminate: Bool?
    /// <p>Indicates whether the associated AWS resources should shut down when the environment is
    ///       terminated:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>true</code>: The specified environment as well as the associated AWS resources, such
    ///           as Auto Scaling group and LoadBalancer, are terminated.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>false</code>: AWS Elastic Beanstalk resource management is removed from the
    ///           environment, but the AWS resources continue to operate.</p>
    ///             </li>
    ///          </ul>
    ///          <p> For more information, see the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS Elastic Beanstalk User Guide. </a>
    ///          </p>
    ///          <p> Default: <code>true</code>
    ///          </p>
    ///          <p> Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let terminateResources: Bool?

    public init (
        environmentId: String? = nil,
        environmentName: String? = nil,
        forceTerminate: Bool? = nil,
        terminateResources: Bool? = nil
    )
    {
        self.environmentId = environmentId
        self.environmentName = environmentName
        self.forceTerminate = forceTerminate
        self.terminateResources = terminateResources
    }
}
