// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension S3Location: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case s3Bucket = "S3Bucket"
        case s3Key = "S3Key"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let s3Bucket = s3Bucket {
            try container.encode(s3Bucket, forKey: Key("S3Bucket"))
        }
        if let s3Key = s3Key {
            try container.encode(s3Key, forKey: Key("S3Key"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3BucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let s3KeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Key)
        s3Key = s3KeyDecoded
    }
}
