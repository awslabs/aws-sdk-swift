// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StatusCodes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case status2xx = "Status2xx"
        case status3xx = "Status3xx"
        case status4xx = "Status4xx"
        case status5xx = "Status5xx"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let status2xx = status2xx {
            try container.encode(status2xx, forKey: Key("Status2xx"))
        }
        if let status3xx = status3xx {
            try container.encode(status3xx, forKey: Key("Status3xx"))
        }
        if let status4xx = status4xx {
            try container.encode(status4xx, forKey: Key("Status4xx"))
        }
        if let status5xx = status5xx {
            try container.encode(status5xx, forKey: Key("Status5xx"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let status2xxDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .status2xx)
        status2xx = status2xxDecoded
        let status3xxDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .status3xx)
        status3xx = status3xxDecoded
        let status4xxDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .status4xx)
        status4xx = status4xxDecoded
        let status5xxDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .status5xx)
        status5xx = status5xxDecoded
    }
}
