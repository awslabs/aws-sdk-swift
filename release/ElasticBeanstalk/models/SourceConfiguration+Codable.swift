// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SourceConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationName = "ApplicationName"
        case templateName = "TemplateName"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let applicationName = applicationName {
            try container.encode(applicationName, forKey: Key("ApplicationName"))
        }
        if let templateName = templateName {
            try container.encode(templateName, forKey: Key("TemplateName"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let templateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateName)
        templateName = templateNameDecoded
    }
}
