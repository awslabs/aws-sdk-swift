// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomAmi: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case imageId = "ImageId"
        case virtualizationType = "VirtualizationType"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let imageId = imageId {
            try container.encode(imageId, forKey: Key("ImageId"))
        }
        if let virtualizationType = virtualizationType {
            try container.encode(virtualizationType, forKey: Key("VirtualizationType"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let virtualizationTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .virtualizationType)
        virtualizationType = virtualizationTypeDecoded
        let imageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageId)
        imageId = imageIdDecoded
    }
}
