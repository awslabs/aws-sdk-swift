// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BuildConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactName = "ArtifactName"
        case codeBuildServiceRole = "CodeBuildServiceRole"
        case computeType = "ComputeType"
        case image = "Image"
        case timeoutInMinutes = "TimeoutInMinutes"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let artifactName = artifactName {
            try container.encode(artifactName, forKey: Key("ArtifactName"))
        }
        if let codeBuildServiceRole = codeBuildServiceRole {
            try container.encode(codeBuildServiceRole, forKey: Key("CodeBuildServiceRole"))
        }
        if let computeType = computeType {
            try container.encode(computeType, forKey: Key("ComputeType"))
        }
        if let image = image {
            try container.encode(image, forKey: Key("Image"))
        }
        if let timeoutInMinutes = timeoutInMinutes {
            try container.encode(timeoutInMinutes, forKey: Key("TimeoutInMinutes"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let artifactNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactName)
        artifactName = artifactNameDecoded
        let codeBuildServiceRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .codeBuildServiceRole)
        codeBuildServiceRole = codeBuildServiceRoleDecoded
        let computeTypeDecoded = try containerValues.decodeIfPresent(ComputeType.self, forKey: .computeType)
        computeType = computeTypeDecoded
        let imageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .image)
        image = imageDecoded
        let timeoutInMinutesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .timeoutInMinutes)
        timeoutInMinutes = timeoutInMinutesDecoded
    }
}
