// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes criteria to restrict the results when listing platform versions.</p>
///          <p>The filter is evaluated as follows: <code>Type Operator Values[1]</code>
///          </p>
public struct PlatformFilter: Equatable {
    /// <p>The operator to apply to the <code>Type</code> with each of the
    ///       <code>Values</code>.</p>
    ///          <p>Valid values: <code>=</code> | <code>!=</code> |
    ///         <code><</code> | <code><=</code> |
    ///         <code>></code> | <code>>=</code> |
    ///         <code>contains</code> | <code>begins_with</code> | <code>ends_with</code>
    ///          </p>
    public let `operator`: String?
    /// <p>The platform version attribute to which the filter values are applied.</p>
    ///          <p>Valid values: <code>PlatformName</code> | <code>PlatformVersion</code> |
    ///         <code>PlatformStatus</code> | <code>PlatformBranchName</code> |
    ///         <code>PlatformLifecycleState</code> | <code>PlatformOwner</code> |
    ///         <code>SupportedTier</code> | <code>SupportedAddon</code> |
    ///         <code>ProgrammingLanguageName</code> | <code>OperatingSystemName</code>
    ///          </p>
    public let type: String?
    /// <p>The list of values applied to the filtering platform version attribute. Only one value is supported
    ///       for all current operators.</p>
    ///          <p>The following list shows valid filter values for some filter attributes.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PlatformStatus</code>: <code>Creating</code> | <code>Failed</code> |
    ///             <code>Ready</code> | <code>Deleting</code> | <code>Deleted</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PlatformLifecycleState</code>: <code>recommended</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SupportedTier</code>: <code>WebServer/Standard</code> |
    ///             <code>Worker/SQS/HTTP</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SupportedAddon</code>: <code>Log/S3</code> | <code>Monitoring/Healthd</code> |
    ///             <code>WorkerDaemon/SQSD</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let values: [String]?

    public init (
        `operator`: String? = nil,
        type: String? = nil,
        values: [String]? = nil
    )
    {
        self.`operator` = `operator`
        self.type = type
        self.values = values
    }
}
