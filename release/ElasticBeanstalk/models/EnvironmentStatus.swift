// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EnvironmentStatus {
    case aborting
    case launching
    case linkingfrom
    case linkingto
    case ready
    case terminated
    case terminating
    case updating
    case sdkUnknown(String)
}

extension EnvironmentStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EnvironmentStatus] {
        return [
            .aborting,
            .launching,
            .linkingfrom,
            .linkingto,
            .ready,
            .terminated,
            .terminating,
            .updating,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .aborting: return "Aborting"
        case .launching: return "Launching"
        case .linkingfrom: return "LinkingFrom"
        case .linkingto: return "LinkingTo"
        case .ready: return "Ready"
        case .terminated: return "Terminated"
        case .terminating: return "Terminating"
        case .updating: return "Updating"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EnvironmentStatus(rawValue: rawValue) ?? EnvironmentStatus.sdkUnknown(rawValue)
    }
}
