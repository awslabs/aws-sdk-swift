// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeEventsInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let applicationName = applicationName {
            try container.encode(applicationName, forKey: Key("ApplicationName"))
        }
        if let endTime = endTime {
            try container.encode(TimestampWrapper(endTime, format: .dateTime), forKey: Key("endTime"))
        }
        if let environmentId = environmentId {
            try container.encode(environmentId, forKey: Key("EnvironmentId"))
        }
        if let environmentName = environmentName {
            try container.encode(environmentName, forKey: Key("EnvironmentName"))
        }
        if let maxRecords = maxRecords {
            try container.encode(maxRecords, forKey: Key("MaxRecords"))
        }
        if let nextToken = nextToken {
            try container.encode(nextToken, forKey: Key("NextToken"))
        }
        if let platformArn = platformArn {
            try container.encode(platformArn, forKey: Key("PlatformArn"))
        }
        if let requestId = requestId {
            try container.encode(requestId, forKey: Key("RequestId"))
        }
        if let severity = severity {
            try container.encode(severity, forKey: Key("Severity"))
        }
        if let startTime = startTime {
            try container.encode(TimestampWrapper(startTime, format: .dateTime), forKey: Key("startTime"))
        }
        if let templateName = templateName {
            try container.encode(templateName, forKey: Key("TemplateName"))
        }
        if let versionLabel = versionLabel {
            try container.encode(versionLabel, forKey: Key("VersionLabel"))
        }
        try container.encode("DescribeEvents", forKey:Key("Action"))
        try container.encode("2010-12-01", forKey:Key("Version"))
    }
}
