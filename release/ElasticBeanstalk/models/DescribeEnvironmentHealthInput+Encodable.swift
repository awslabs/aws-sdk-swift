// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeEnvironmentHealthInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let attributeNames = attributeNames {
            var attributeNamesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("AttributeNames"))
            for (index0, environmenthealthattribute0) in attributeNames.enumerated() {
                try attributeNamesContainer.encode(environmenthealthattribute0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let environmentId = environmentId {
            try container.encode(environmentId, forKey: Key("EnvironmentId"))
        }
        if let environmentName = environmentName {
            try container.encode(environmentName, forKey: Key("EnvironmentName"))
        }
        try container.encode("DescribeEnvironmentHealth", forKey:Key("Action"))
        try container.encode("2010-12-01", forKey:Key("Version"))
    }
}
