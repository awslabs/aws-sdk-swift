// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ApplicationVersionStatus {
    case building
    case failed
    case processed
    case processing
    case unprocessed
    case sdkUnknown(String)
}

extension ApplicationVersionStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ApplicationVersionStatus] {
        return [
            .building,
            .failed,
            .processed,
            .processing,
            .unprocessed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .building: return "Building"
        case .failed: return "Failed"
        case .processed: return "Processed"
        case .processing: return "Processing"
        case .unprocessed: return "Unprocessed"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ApplicationVersionStatus(rawValue: rawValue) ?? ApplicationVersionStatus.sdkUnknown(rawValue)
    }
}
