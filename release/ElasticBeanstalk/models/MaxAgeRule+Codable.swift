// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MaxAgeRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deleteSourceFromS3 = "DeleteSourceFromS3"
        case enabled = "Enabled"
        case maxAgeInDays = "MaxAgeInDays"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let deleteSourceFromS3 = deleteSourceFromS3 {
            try container.encode(deleteSourceFromS3, forKey: Key("DeleteSourceFromS3"))
        }
        if let enabled = enabled {
            try container.encode(enabled, forKey: Key("Enabled"))
        }
        if let maxAgeInDays = maxAgeInDays {
            try container.encode(maxAgeInDays, forKey: Key("MaxAgeInDays"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let enabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let maxAgeInDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxAgeInDays)
        maxAgeInDays = maxAgeInDaysDecoded
        let deleteSourceFromS3Decoded = try containerValues.decodeIfPresent(Bool.self, forKey: .deleteSourceFromS3)
        deleteSourceFromS3 = deleteSourceFromS3Decoded
    }
}
