// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ApplyEnvironmentManagedActionOutputBody: Equatable {
    public let actionId: String?
    public let actionDescription: String?
    public let actionType: ActionType?
    public let status: String?
}

extension ApplyEnvironmentManagedActionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionDescription = "ActionDescription"
        case actionId = "ActionId"
        case actionType = "ActionType"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("ApplyEnvironmentManagedActionResult"))
        let actionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .actionId)
        actionId = actionIdDecoded
        let actionDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .actionDescription)
        actionDescription = actionDescriptionDecoded
        let actionTypeDecoded = try containerValues.decodeIfPresent(ActionType.self, forKey: .actionType)
        actionType = actionTypeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
    }
}
