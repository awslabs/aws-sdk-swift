// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes the properties of an environment.</p>
public struct EnvironmentDescription: Equatable {
    /// <p>Indicates if there is an in-progress environment configuration update or application
    ///       version deployment that you can cancel.</p>
    ///          <p>
    ///             <code>true:</code> There is an update in progress. </p>
    ///          <p>
    ///             <code>false:</code> There are no updates currently in progress. </p>
    public let abortableOperationInProgress: Bool?
    /// <p>The name of the application associated with this environment.</p>
    public let applicationName: String?
    /// <p>The URL to the CNAME for this environment.</p>
    public let cNAME: String?
    /// <p>The creation date for this environment.</p>
    public let dateCreated: Date?
    /// <p>The last modified date for this environment.</p>
    public let dateUpdated: Date?
    /// <p>Describes this environment.</p>
    public let description: String?
    /// <p>For load-balanced, autoscaling environments, the URL to the LoadBalancer. For
    ///       single-instance environments, the IP address of the instance.</p>
    public let endpointURL: String?
    /// <p>The environment's Amazon Resource Name (ARN), which can be used in other API requests that require an ARN.</p>
    public let environmentArn: String?
    /// <p>The ID of this environment.</p>
    public let environmentId: String?
    /// <p>A list of links to other environments in the same group.</p>
    public let environmentLinks: [EnvironmentLink]?
    /// <p>The name of this environment.</p>
    public let environmentName: String?
    /// <p>Describes the health status of the environment. AWS Elastic Beanstalk indicates the
    ///       failure levels for a running environment:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more
    ///           consecutive failures occur for an environment.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive
    ///           failures occur for an environment.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Green</code>: Indicates the environment is healthy and fully functional.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Grey</code>: Default health for a new environment. The environment is not fully
    ///           launched and health checks have not started or health checks are suspended during an
    ///             <code>UpdateEnvironment</code> or <code>RestartEnvironment</code> request.</p>
    ///             </li>
    ///          </ul>
    ///          <p> Default: <code>Grey</code>
    ///          </p>
    public let health: EnvironmentHealth?
    /// <p>Returns the health status of the application running in your environment. For more
    ///       information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and
    ///         Statuses</a>.</p>
    public let healthStatus: EnvironmentHealthStatus?
    /// <p>The Amazon Resource Name (ARN) of the environment's operations role. For more information,
    ///       see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p>
    public let operationsRole: String?
    /// <p>The ARN of the platform version.</p>
    public let platformArn: String?
    /// <p>The description of the AWS resources used by this environment.</p>
    public let resources: EnvironmentResourcesDescription?
    /// <p> The name of the <code>SolutionStack</code> deployed with this environment. </p>
    public let solutionStackName: String?
    /// <p>The current operational status of the environment:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Launching</code>: Environment is in the process of initial deployment.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Updating</code>: Environment is in the process of updating its configuration
    ///           settings or application version.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Ready</code>: Environment is available to have an action performed on it, such as
    ///           update or terminate.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Terminating</code>: Environment is in the shut-down process.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Terminated</code>: Environment is not running.</p>
    ///             </li>
    ///          </ul>
    public let status: EnvironmentStatus?
    /// <p>The name of the configuration template used to originally launch this
    ///       environment.</p>
    public let templateName: String?
    /// <p>Describes the current tier of this environment.</p>
    public let tier: EnvironmentTier?
    /// <p>The application version deployed in this environment.</p>
    public let versionLabel: String?

    public init (
        abortableOperationInProgress: Bool? = nil,
        applicationName: String? = nil,
        cNAME: String? = nil,
        dateCreated: Date? = nil,
        dateUpdated: Date? = nil,
        description: String? = nil,
        endpointURL: String? = nil,
        environmentArn: String? = nil,
        environmentId: String? = nil,
        environmentLinks: [EnvironmentLink]? = nil,
        environmentName: String? = nil,
        health: EnvironmentHealth? = nil,
        healthStatus: EnvironmentHealthStatus? = nil,
        operationsRole: String? = nil,
        platformArn: String? = nil,
        resources: EnvironmentResourcesDescription? = nil,
        solutionStackName: String? = nil,
        status: EnvironmentStatus? = nil,
        templateName: String? = nil,
        tier: EnvironmentTier? = nil,
        versionLabel: String? = nil
    )
    {
        self.abortableOperationInProgress = abortableOperationInProgress
        self.applicationName = applicationName
        self.cNAME = cNAME
        self.dateCreated = dateCreated
        self.dateUpdated = dateUpdated
        self.description = description
        self.endpointURL = endpointURL
        self.environmentArn = environmentArn
        self.environmentId = environmentId
        self.environmentLinks = environmentLinks
        self.environmentName = environmentName
        self.health = health
        self.healthStatus = healthStatus
        self.operationsRole = operationsRole
        self.platformArn = platformArn
        self.resources = resources
        self.solutionStackName = solutionStackName
        self.status = status
        self.templateName = templateName
        self.tier = tier
        self.versionLabel = versionLabel
    }
}
