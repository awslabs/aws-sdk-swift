// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Catalog API actions allow you to manage your entities through list, describe, and update
///             capabilities. An entity can be a product or an offer on AWS Marketplace. </p>
///
///         <p>You can automate your entity update process by integrating the AWS Marketplace Catalog
///             API with your AWS Marketplace product build or deployment pipelines. You can also create
///             your own applications on top of the Catalog API to manage your products on AWS
///             Marketplace.</p>
public protocol MarketplaceCatalogClientProtocol {
    /// <p>Used to cancel an open change request. Must be sent before the status of the request
    ///             changes to <code>APPLYING</code>, the final stage of completing your change request. You
    ///             can describe a change during the 60-day request history retention period for API
    ///             calls.</p>
    func cancelChangeSet(input: CancelChangeSetInput, completion: @escaping (SdkResult<CancelChangeSetOutputResponse, CancelChangeSetOutputError>) -> Void)
    /// <p>Provides information about a given change set.</p>
    func describeChangeSet(input: DescribeChangeSetInput, completion: @escaping (SdkResult<DescribeChangeSetOutputResponse, DescribeChangeSetOutputError>) -> Void)
    /// <p>Returns the metadata and content of the entity.</p>
    func describeEntity(input: DescribeEntityInput, completion: @escaping (SdkResult<DescribeEntityOutputResponse, DescribeEntityOutputError>) -> Void)
    /// <p>Returns the list of change sets owned by the account being used to make the call. You
    ///             can filter this list by providing any combination of <code>entityId</code>,
    ///                 <code>ChangeSetName</code>, and status. If you provide more than one filter, the API
    ///             operation applies a logical AND between the filters.</p>
    ///
    ///         <p>You can describe a change during the 60-day request history retention period for API
    ///             calls.</p>
    func listChangeSets(input: ListChangeSetsInput, completion: @escaping (SdkResult<ListChangeSetsOutputResponse, ListChangeSetsOutputError>) -> Void)
    /// <p>Provides the list of entities of a given type.</p>
    func listEntities(input: ListEntitiesInput, completion: @escaping (SdkResult<ListEntitiesOutputResponse, ListEntitiesOutputError>) -> Void)
    /// <p>This operation allows you to request changes for your entities. Within a single
    ///             ChangeSet, you cannot start the same change type against the same entity multiple times.
    ///             Additionally, when a ChangeSet is running, all the entities targeted by the different
    ///             changes are locked until the ChangeSet has completed (either succeeded, cancelled, or failed). If
    ///             you try to start a ChangeSet containing a change against an entity that is already
    ///             locked, you will receive a <code>ResourceInUseException</code>.</p>
    ///
    ///         <p>For example, you cannot start the ChangeSet described in the <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/API_StartChangeSet.html#API_StartChangeSet_Examples">example</a> later in this topic, because it contains two changes to execute the same change
    ///             type (<code>AddRevisions</code>) against the same entity
    ///             (<code>entity-id@1)</code>.</p>
    ///
    ///         <p>For more information about working with change sets, see <a href="https://docs.aws.amazon.com/marketplace-catalog/latest/api-reference/welcome.html#working-with-change-sets">
    ///             Working with change sets</a>.</p>
    func startChangeSet(input: StartChangeSetInput, completion: @escaping (SdkResult<StartChangeSetOutputResponse, StartChangeSetOutputError>) -> Void)
}
