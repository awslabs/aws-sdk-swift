// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeChangeSetOutputBody: Equatable {
    public let changeSetId: String?
    public let changeSetArn: String?
    public let changeSetName: String?
    public let startTime: String?
    public let endTime: String?
    public let status: ChangeStatus?
    public let failureCode: FailureCode?
    public let failureDescription: String?
    public let changeSet: [ChangeSummary]?
}

extension DescribeChangeSetOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case changeSet = "ChangeSet"
        case changeSetArn = "ChangeSetArn"
        case changeSetId = "ChangeSetId"
        case changeSetName = "ChangeSetName"
        case endTime = "EndTime"
        case failureCode = "FailureCode"
        case failureDescription = "FailureDescription"
        case startTime = "StartTime"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let changeSetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .changeSetId)
        changeSetId = changeSetIdDecoded
        let changeSetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .changeSetArn)
        changeSetArn = changeSetArnDecoded
        let changeSetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .changeSetName)
        changeSetName = changeSetNameDecoded
        let startTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .startTime)
        startTime = startTimeDecoded
        let endTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endTime)
        endTime = endTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ChangeStatus.self, forKey: .status)
        status = statusDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(FailureCode.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let failureDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failureDescription)
        failureDescription = failureDescriptionDecoded
        let changeSetContainer = try containerValues.decodeIfPresent([ChangeSummary].self, forKey: .changeSet)
        var changeSetDecoded0:[ChangeSummary]? = nil
        if let changeSetContainer = changeSetContainer {
            changeSetDecoded0 = [ChangeSummary]()
            for structure0 in changeSetContainer {
                changeSetDecoded0?.append(structure0)
            }
        }
        changeSet = changeSetDecoded0
    }
}
