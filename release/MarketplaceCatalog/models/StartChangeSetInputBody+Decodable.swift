// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartChangeSetInputBody: Equatable {
    public let catalog: String?
    public let changeSet: [Change]?
    public let changeSetName: String?
    public let clientRequestToken: String?
}

extension StartChangeSetInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case catalog = "Catalog"
        case changeSet = "ChangeSet"
        case changeSetName = "ChangeSetName"
        case clientRequestToken = "ClientRequestToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let catalogDecoded = try containerValues.decodeIfPresent(String.self, forKey: .catalog)
        catalog = catalogDecoded
        let changeSetContainer = try containerValues.decodeIfPresent([Change].self, forKey: .changeSet)
        var changeSetDecoded0:[Change]? = nil
        if let changeSetContainer = changeSetContainer {
            changeSetDecoded0 = [Change]()
            for structure0 in changeSetContainer {
                changeSetDecoded0?.append(structure0)
            }
        }
        changeSet = changeSetDecoded0
        let changeSetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .changeSetName)
        changeSetName = changeSetNameDecoded
        let clientRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientRequestToken)
        clientRequestToken = clientRequestTokenDecoded
    }
}
