// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeEntityInputQueryItemMiddleware: Middleware {
    public let id: String = "DescribeEntityInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DescribeEntityInput>,
                  next: H) -> Swift.Result<OperationOutput<DescribeEntityOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let entityId = input.operationInput.entityId {
            let entityIdQueryItem = URLQueryItem(name: "entityId".urlPercentEncoding(), value: String(entityId).urlPercentEncoding())
            input.builder.withQueryItem(entityIdQueryItem)
        }
        if let catalog = input.operationInput.catalog {
            let catalogQueryItem = URLQueryItem(name: "catalog".urlPercentEncoding(), value: String(catalog).urlPercentEncoding())
            input.builder.withQueryItem(catalogQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DescribeEntityInput>
    public typealias MOutput = OperationOutput<DescribeEntityOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DescribeEntityOutputError>
}
