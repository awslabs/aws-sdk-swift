// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSigningProfilesOutputBody: Equatable {
    public let profiles: [SigningProfile]?
    public let nextToken: String?
}

extension ListSigningProfilesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case profiles
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profilesContainer = try containerValues.decodeIfPresent([SigningProfile].self, forKey: .profiles)
        var profilesDecoded0:[SigningProfile]? = nil
        if let profilesContainer = profilesContainer {
            profilesDecoded0 = [SigningProfile]()
            for structure0 in profilesContainer {
                profilesDecoded0?.append(structure0)
            }
        }
        profiles = profilesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
