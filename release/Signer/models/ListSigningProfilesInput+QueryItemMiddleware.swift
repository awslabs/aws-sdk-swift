// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListSigningProfilesInputQueryItemMiddleware: Middleware {
    public let id: String = "ListSigningProfilesInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListSigningProfilesInput>,
                  next: H) -> Swift.Result<OperationOutput<ListSigningProfilesOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        let includeCanceledQueryItem = URLQueryItem(name: "includeCanceled".urlPercentEncoding(), value: String(input.operationInput.includeCanceled).urlPercentEncoding())
        input.builder.withQueryItem(includeCanceledQueryItem)
        if let maxResults = input.operationInput.maxResults {
            let maxResultsQueryItem = URLQueryItem(name: "maxResults".urlPercentEncoding(), value: String(maxResults).urlPercentEncoding())
            input.builder.withQueryItem(maxResultsQueryItem)
        }
        if let nextToken = input.operationInput.nextToken {
            let nextTokenQueryItem = URLQueryItem(name: "nextToken".urlPercentEncoding(), value: String(nextToken).urlPercentEncoding())
            input.builder.withQueryItem(nextTokenQueryItem)
        }
        if let statuses = input.operationInput.statuses {
            statuses.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "statuses".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let platformId = input.operationInput.platformId {
            let platformIdQueryItem = URLQueryItem(name: "platformId".urlPercentEncoding(), value: String(platformId).urlPercentEncoding())
            input.builder.withQueryItem(platformIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListSigningProfilesInput>
    public typealias MOutput = OperationOutput<ListSigningProfilesOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListSigningProfilesOutputError>
}
