// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutSigningProfileInput: Equatable {
    /// <p>A subfield of <code>platform</code>. This specifies any different configuration
    /// 			options that you want to apply to the chosen platform (such as a different
    /// 				<code>hash-algorithm</code> or <code>signing-algorithm</code>).</p>
    public let overrides: SigningPlatformOverrides?
    /// <p>The ID of the signing platform to be created.</p>
    public let platformId: String?
    /// <p>The name of the signing profile to be created.</p>
    public let profileName: String?
    /// <p>The default validity period override for any signature generated using this signing
    /// 			profile. If unspecified, the default is 135 months.</p>
    public let signatureValidityPeriod: SignatureValidityPeriod?
    /// <p>The AWS Certificate Manager certificate that will be used to sign code with the new signing
    /// 			profile.</p>
    public let signingMaterial: SigningMaterial?
    /// <p>Map of key-value pairs for signing. These can include any information that you want to
    /// 			use during signing.</p>
    public let signingParameters: [String:String]?
    /// <p>Tags to be associated with the signing profile that is being created.</p>
    public let tags: [String:String]?

    public init (
        overrides: SigningPlatformOverrides? = nil,
        platformId: String? = nil,
        profileName: String? = nil,
        signatureValidityPeriod: SignatureValidityPeriod? = nil,
        signingMaterial: SigningMaterial? = nil,
        signingParameters: [String:String]? = nil,
        tags: [String:String]? = nil
    )
    {
        self.overrides = overrides
        self.platformId = platformId
        self.profileName = profileName
        self.signatureValidityPeriod = signatureValidityPeriod
        self.signingMaterial = signingMaterial
        self.signingParameters = signingParameters
        self.tags = tags
    }
}
