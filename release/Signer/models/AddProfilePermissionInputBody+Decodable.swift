// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddProfilePermissionInputBody: Equatable {
    public let profileVersion: String?
    public let action: String?
    public let principal: String?
    public let revisionId: String?
    public let statementId: String?
}

extension AddProfilePermissionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case action
        case principal
        case profileVersion
        case revisionId
        case statementId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let profileVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .profileVersion)
        profileVersion = profileVersionDecoded
        let actionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .action)
        action = actionDecoded
        let principalDecoded = try containerValues.decodeIfPresent(String.self, forKey: .principal)
        principal = principalDecoded
        let revisionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .revisionId)
        revisionId = revisionIdDecoded
        let statementIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .statementId)
        statementId = statementIdDecoded
    }
}
