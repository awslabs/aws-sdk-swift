// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the signing configurations and parameters that are used to
/// 			perform a code signing job.</p>
public struct SigningPlatform: Equatable {
    /// <p>The category of a code signing platform.</p>
    public let category: Category?
    /// <p>The display name of a code signing platform.</p>
    public let displayName: String?
    /// <p>The maximum size (in MB) of code that can be signed by a code signing platform.</p>
    public let maxSizeInMB: Int
    /// <p>Any partner entities linked to a code signing platform.</p>
    public let partner: String?
    /// <p>The ID of a code signing; platform.</p>
    public let platformId: String?
    /// <p>Indicates whether revocation is supported for the platform.</p>
    public let revocationSupported: Bool
    /// <p>The configuration of a code signing platform. This includes the designated hash algorithm
    /// 			and encryption algorithm of a signing platform.</p>
    public let signingConfiguration: SigningConfiguration?
    /// <p>The image format of a code signing platform or profile.</p>
    public let signingImageFormat: SigningImageFormat?
    /// <p>The types of targets that can be signed by a code signing platform.</p>
    public let target: String?

    public init (
        category: Category? = nil,
        displayName: String? = nil,
        maxSizeInMB: Int = 0,
        partner: String? = nil,
        platformId: String? = nil,
        revocationSupported: Bool = false,
        signingConfiguration: SigningConfiguration? = nil,
        signingImageFormat: SigningImageFormat? = nil,
        target: String? = nil
    )
    {
        self.category = category
        self.displayName = displayName
        self.maxSizeInMB = maxSizeInMB
        self.partner = partner
        self.platformId = platformId
        self.revocationSupported = revocationSupported
        self.signingConfiguration = signingConfiguration
        self.signingImageFormat = signingImageFormat
        self.target = target
    }
}
