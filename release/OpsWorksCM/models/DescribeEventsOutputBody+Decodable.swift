// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEventsOutputBody: Equatable {
    public let serverEvents: [ServerEvent]?
    public let nextToken: String?
}

extension DescribeEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case serverEvents = "ServerEvents"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverEventsContainer = try containerValues.decodeIfPresent([ServerEvent].self, forKey: .serverEvents)
        var serverEventsDecoded0:[ServerEvent]? = nil
        if let serverEventsContainer = serverEventsContainer {
            serverEventsDecoded0 = [ServerEvent]()
            for structure0 in serverEventsContainer {
                serverEventsDecoded0?.append(structure0)
            }
        }
        serverEvents = serverEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
