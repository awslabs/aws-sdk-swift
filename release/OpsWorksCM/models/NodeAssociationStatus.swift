// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The status of the association or disassociation request.
///     </p>
///          <p class="title">
///             <b>Possible values:</b>
///          </p>
///          <ul>
///             <li>
///                <p>
///                   <code>SUCCESS</code>: The association or disassociation succeeded.
///       </p>
///             </li>
///             <li>
///                <p>
///                   <code>FAILED</code>: The association or disassociation failed.
///       </p>
///             </li>
///             <li>
///                <p>
///                   <code>IN_PROGRESS</code>: The association or disassociation is still in progress.
///       </p>
///             </li>
///          </ul>
public enum NodeAssociationStatus {
    case failed
    case inProgress
    case success
    case sdkUnknown(String)
}

extension NodeAssociationStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NodeAssociationStatus] {
        return [
            .failed,
            .inProgress,
            .success,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .failed: return "FAILED"
        case .inProgress: return "IN_PROGRESS"
        case .success: return "SUCCESS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NodeAssociationStatus(rawValue: rawValue) ?? NodeAssociationStatus.sdkUnknown(rawValue)
    }
}
