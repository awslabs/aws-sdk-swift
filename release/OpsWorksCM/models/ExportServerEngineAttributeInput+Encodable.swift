// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExportServerEngineAttributeInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exportAttributeName = "ExportAttributeName"
        case inputAttributes = "InputAttributes"
        case serverName = "ServerName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exportAttributeName = exportAttributeName {
            try encodeContainer.encode(exportAttributeName, forKey: .exportAttributeName)
        }
        if let inputAttributes = inputAttributes {
            var inputAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .inputAttributes)
            for engineattributes0 in inputAttributes {
                try inputAttributesContainer.encode(engineattributes0)
            }
        }
        if let serverName = serverName {
            try encodeContainer.encode(serverName, forKey: .serverName)
        }
    }
}
