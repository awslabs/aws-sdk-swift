// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateServerInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case backupRetentionCount = "BackupRetentionCount"
        case disableAutomatedBackup = "DisableAutomatedBackup"
        case preferredBackupWindow = "PreferredBackupWindow"
        case preferredMaintenanceWindow = "PreferredMaintenanceWindow"
        case serverName = "ServerName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let backupRetentionCount = backupRetentionCount {
            try encodeContainer.encode(backupRetentionCount, forKey: .backupRetentionCount)
        }
        if let disableAutomatedBackup = disableAutomatedBackup {
            try encodeContainer.encode(disableAutomatedBackup, forKey: .disableAutomatedBackup)
        }
        if let preferredBackupWindow = preferredBackupWindow {
            try encodeContainer.encode(preferredBackupWindow, forKey: .preferredBackupWindow)
        }
        if let preferredMaintenanceWindow = preferredMaintenanceWindow {
            try encodeContainer.encode(preferredMaintenanceWindow, forKey: .preferredMaintenanceWindow)
        }
        if let serverName = serverName {
            try encodeContainer.encode(serverName, forKey: .serverName)
        }
    }
}
