// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartMaintenanceInputBody: Equatable {
    public let serverName: String?
    public let engineAttributes: [EngineAttribute]?
}

extension StartMaintenanceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case engineAttributes = "EngineAttributes"
        case serverName = "ServerName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serverName)
        serverName = serverNameDecoded
        let engineAttributesContainer = try containerValues.decodeIfPresent([EngineAttribute].self, forKey: .engineAttributes)
        var engineAttributesDecoded0:[EngineAttribute]? = nil
        if let engineAttributesContainer = engineAttributesContainer {
            engineAttributesDecoded0 = [EngineAttribute]()
            for structure0 in engineAttributesContainer {
                engineAttributesDecoded0?.append(structure0)
            }
        }
        engineAttributes = engineAttributesDecoded0
    }
}
