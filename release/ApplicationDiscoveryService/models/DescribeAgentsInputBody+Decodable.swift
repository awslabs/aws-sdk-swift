// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAgentsInputBody: Equatable {
    public let agentIds: [String]?
    public let filters: [Filter]?
    public let maxResults: Int
    public let nextToken: String?
}

extension DescribeAgentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case agentIds
        case filters
        case maxResults
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .agentIds)
        var agentIdsDecoded0:[String]? = nil
        if let agentIdsContainer = agentIdsContainer {
            agentIdsDecoded0 = [String]()
            for string0 in agentIdsContainer {
                agentIdsDecoded0?.append(string0)
            }
        }
        agentIds = agentIdsDecoded0
        let filtersContainer = try containerValues.decodeIfPresent([Filter].self, forKey: .filters)
        var filtersDecoded0:[Filter]? = nil
        if let filtersContainer = filtersContainer {
            filtersDecoded0 = [Filter]()
            for structure0 in filtersContainer {
                filtersDecoded0?.append(structure0)
            }
        }
        filters = filtersDecoded0
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
