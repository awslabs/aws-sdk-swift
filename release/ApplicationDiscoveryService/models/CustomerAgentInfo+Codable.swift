// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomerAgentInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case activeAgents
        case blackListedAgents
        case healthyAgents
        case shutdownAgents
        case totalAgents
        case unhealthyAgents
        case unknownAgents
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if activeAgents != 0 {
            try encodeContainer.encode(activeAgents, forKey: .activeAgents)
        }
        if blackListedAgents != 0 {
            try encodeContainer.encode(blackListedAgents, forKey: .blackListedAgents)
        }
        if healthyAgents != 0 {
            try encodeContainer.encode(healthyAgents, forKey: .healthyAgents)
        }
        if shutdownAgents != 0 {
            try encodeContainer.encode(shutdownAgents, forKey: .shutdownAgents)
        }
        if totalAgents != 0 {
            try encodeContainer.encode(totalAgents, forKey: .totalAgents)
        }
        if unhealthyAgents != 0 {
            try encodeContainer.encode(unhealthyAgents, forKey: .unhealthyAgents)
        }
        if unknownAgents != 0 {
            try encodeContainer.encode(unknownAgents, forKey: .unknownAgents)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let activeAgentsDecoded = try containerValues.decode(Int.self, forKey: .activeAgents)
        activeAgents = activeAgentsDecoded
        let healthyAgentsDecoded = try containerValues.decode(Int.self, forKey: .healthyAgents)
        healthyAgents = healthyAgentsDecoded
        let blackListedAgentsDecoded = try containerValues.decode(Int.self, forKey: .blackListedAgents)
        blackListedAgents = blackListedAgentsDecoded
        let shutdownAgentsDecoded = try containerValues.decode(Int.self, forKey: .shutdownAgents)
        shutdownAgents = shutdownAgentsDecoded
        let unhealthyAgentsDecoded = try containerValues.decode(Int.self, forKey: .unhealthyAgents)
        unhealthyAgents = unhealthyAgentsDecoded
        let totalAgentsDecoded = try containerValues.decode(Int.self, forKey: .totalAgents)
        totalAgents = totalAgentsDecoded
        let unknownAgentsDecoded = try containerValues.decode(Int.self, forKey: .unknownAgents)
        unknownAgents = unknownAgentsDecoded
    }
}
