// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AgentStatus {
    case blacklisted
    case healthy
    case running
    case shutdown
    case unhealthy
    case unknown
    case sdkUnknown(String)
}

extension AgentStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AgentStatus] {
        return [
            .blacklisted,
            .healthy,
            .running,
            .shutdown,
            .unhealthy,
            .unknown,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .blacklisted: return "BLACKLISTED"
        case .healthy: return "HEALTHY"
        case .running: return "RUNNING"
        case .shutdown: return "SHUTDOWN"
        case .unhealthy: return "UNHEALTHY"
        case .unknown: return "UNKNOWN"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AgentStatus(rawValue: rawValue) ?? AgentStatus.sdkUnknown(rawValue)
    }
}
