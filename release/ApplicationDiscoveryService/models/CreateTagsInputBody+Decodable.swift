// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTagsInputBody: Equatable {
    public let configurationIds: [String]?
    public let tags: [Tag]?
}

extension CreateTagsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurationIds
        case tags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .configurationIds)
        var configurationIdsDecoded0:[String]? = nil
        if let configurationIdsContainer = configurationIdsContainer {
            configurationIdsDecoded0 = [String]()
            for string0 in configurationIdsContainer {
                configurationIdsDecoded0?.append(string0)
            }
        }
        configurationIds = configurationIdsDecoded0
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
