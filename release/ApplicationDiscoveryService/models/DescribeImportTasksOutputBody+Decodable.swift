// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeImportTasksOutputBody: Equatable {
    public let nextToken: String?
    public let tasks: [ImportTask]?
}

extension DescribeImportTasksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case tasks
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let tasksContainer = try containerValues.decodeIfPresent([ImportTask].self, forKey: .tasks)
        var tasksDecoded0:[ImportTask]? = nil
        if let tasksContainer = tasksContainer {
            tasksDecoded0 = [ImportTask]()
            for structure0 in tasksContainer {
                tasksDecoded0?.append(structure0)
            }
        }
        tasks = tasksDecoded0
    }
}
