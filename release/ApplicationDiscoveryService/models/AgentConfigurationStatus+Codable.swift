// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AgentConfigurationStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case agentId
        case description
        case operationSucceeded
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let agentId = agentId {
            try encodeContainer.encode(agentId, forKey: .agentId)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if operationSucceeded != false {
            try encodeContainer.encode(operationSucceeded, forKey: .operationSucceeded)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let agentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .agentId)
        agentId = agentIdDecoded
        let operationSucceededDecoded = try containerValues.decode(Bool.self, forKey: .operationSucceeded)
        operationSucceeded = operationSucceededDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
