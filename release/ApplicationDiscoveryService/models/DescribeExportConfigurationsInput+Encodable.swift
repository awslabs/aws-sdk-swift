// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeExportConfigurationsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case exportIds
        case maxResults
        case nextToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let exportIds = exportIds {
            var exportIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .exportIds)
            for exportids0 in exportIds {
                try exportIdsContainer.encode(exportids0)
            }
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
