// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListServerNeighborsOutputBody: Equatable {
    public let neighbors: [NeighborConnectionDetail]?
    public let nextToken: String?
    public let knownDependencyCount: Int
}

extension ListServerNeighborsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case knownDependencyCount
        case neighbors
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let neighborsContainer = try containerValues.decodeIfPresent([NeighborConnectionDetail].self, forKey: .neighbors)
        var neighborsDecoded0:[NeighborConnectionDetail]? = nil
        if let neighborsContainer = neighborsContainer {
            neighborsDecoded0 = [NeighborConnectionDetail]()
            for structure0 in neighborsContainer {
                neighborsDecoded0?.append(structure0)
            }
        }
        neighbors = neighborsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let knownDependencyCountDecoded = try containerValues.decode(Int.self, forKey: .knownDependencyCount)
        knownDependencyCount = knownDependencyCountDecoded
    }
}
