// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiscoverySummaryOutputBody: Equatable {
    public let servers: Int
    public let applications: Int
    public let serversMappedToApplications: Int
    public let serversMappedtoTags: Int
    public let agentSummary: CustomerAgentInfo?
    public let connectorSummary: CustomerConnectorInfo?
}

extension GetDiscoverySummaryOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case agentSummary
        case applications
        case connectorSummary
        case servers
        case serversMappedToApplications
        case serversMappedtoTags
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serversDecoded = try containerValues.decode(Int.self, forKey: .servers)
        servers = serversDecoded
        let applicationsDecoded = try containerValues.decode(Int.self, forKey: .applications)
        applications = applicationsDecoded
        let serversMappedToApplicationsDecoded = try containerValues.decode(Int.self, forKey: .serversMappedToApplications)
        serversMappedToApplications = serversMappedToApplicationsDecoded
        let serversMappedtoTagsDecoded = try containerValues.decode(Int.self, forKey: .serversMappedtoTags)
        serversMappedtoTags = serversMappedtoTagsDecoded
        let agentSummaryDecoded = try containerValues.decodeIfPresent(CustomerAgentInfo.self, forKey: .agentSummary)
        agentSummary = agentSummaryDecoded
        let connectorSummaryDecoded = try containerValues.decodeIfPresent(CustomerConnectorInfo.self, forKey: .connectorSummary)
        connectorSummary = connectorSummaryDecoded
    }
}
