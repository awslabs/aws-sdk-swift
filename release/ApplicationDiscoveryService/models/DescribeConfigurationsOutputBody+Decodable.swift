// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConfigurationsOutputBody: Equatable {
    public let configurations: [[String:String]?]?
}

extension DescribeConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurations
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let configurationsContainer = try containerValues.decodeIfPresent([[String:String]?].self, forKey: .configurations)
        var configurationsDecoded0:[[String:String]?]? = nil
        if let configurationsContainer = configurationsContainer {
            configurationsDecoded0 = [[String:String]?]()
            for map0 in configurationsContainer {
                var configurationsContainerDecoded0 = [String:String]()
                if let map0 = map0 {
                    for (key1, string1) in map0 {
                        configurationsContainerDecoded0[key1] = string1
                    }
                }
                configurationsDecoded0?.append(configurationsContainerDecoded0)
            }
        }
        configurations = configurationsDecoded0
    }
}
