// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeExportConfigurationsOutputBody: Equatable {
    public let exportsInfo: [ExportInfo]?
    public let nextToken: String?
}

extension DescribeExportConfigurationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exportsInfo
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportsInfoContainer = try containerValues.decodeIfPresent([ExportInfo].self, forKey: .exportsInfo)
        var exportsInfoDecoded0:[ExportInfo]? = nil
        if let exportsInfoContainer = exportsInfoContainer {
            exportsInfoDecoded0 = [ExportInfo]()
            for structure0 in exportsInfoContainer {
                exportsInfoDecoded0?.append(structure0)
            }
        }
        exportsInfo = exportsInfoDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
