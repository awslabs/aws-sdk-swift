// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ContinuousExportStatus {
    case active
    case error
    case inactive
    case startFailed
    case startInProgress
    case stopFailed
    case stopInProgress
    case sdkUnknown(String)
}

extension ContinuousExportStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ContinuousExportStatus] {
        return [
            .active,
            .error,
            .inactive,
            .startFailed,
            .startInProgress,
            .stopFailed,
            .stopInProgress,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "ACTIVE"
        case .error: return "ERROR"
        case .inactive: return "INACTIVE"
        case .startFailed: return "START_FAILED"
        case .startInProgress: return "START_IN_PROGRESS"
        case .stopFailed: return "STOP_FAILED"
        case .stopInProgress: return "STOP_IN_PROGRESS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ContinuousExportStatus(rawValue: rawValue) ?? ContinuousExportStatus.sdkUnknown(rawValue)
    }
}
