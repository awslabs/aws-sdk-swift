// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchDeleteImportDataError: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case errorCode
        case errorDescription
        case importTaskId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let errorCode = errorCode {
            try encodeContainer.encode(errorCode.rawValue, forKey: .errorCode)
        }
        if let errorDescription = errorDescription {
            try encodeContainer.encode(errorDescription, forKey: .errorDescription)
        }
        if let importTaskId = importTaskId {
            try encodeContainer.encode(importTaskId, forKey: .importTaskId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importTaskIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .importTaskId)
        importTaskId = importTaskIdDecoded
        let errorCodeDecoded = try containerValues.decodeIfPresent(BatchDeleteImportDataErrorCode.self, forKey: .errorCode)
        errorCode = errorCodeDecoded
        let errorDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .errorDescription)
        errorDescription = errorDescriptionDecoded
    }
}
