// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An array of information related to the import task request that includes status
///       information, times, IDs, the Amazon S3 Object URL for the import file, and more.</p>
public struct ImportTask: Equatable {
    /// <p>The total number of application records in the import file that failed to be
    ///       imported.</p>
    public let applicationImportFailure: Int
    /// <p>The total number of application records in the import file that were successfully
    ///       imported.</p>
    public let applicationImportSuccess: Int
    /// <p>A unique token used to prevent the same import request from occurring more than once. If
    ///       you didn't provide a token, a token was automatically generated when the import task request
    ///       was sent.</p>
    public let clientRequestToken: String?
    /// <p>A link to a compressed archive folder (in the ZIP format) that contains an error log and a
    ///       file of failed records. You can use these two files to quickly identify records that failed,
    ///       why they failed, and correct those records. Afterward, you can upload the corrected file to
    ///       your Amazon S3 bucket and create another import task request.</p>
    ///
    ///          <p>This field also includes authorization information so you can confirm the authenticity of
    ///       the compressed archive before you download it.</p>
    ///
    ///          <p>If some records failed to be imported we recommend that you correct the records in the
    ///       failed entries file and then imports that failed entries file. This prevents you from having
    ///       to correct and update the larger original file and attempt importing it again.</p>
    public let errorsAndFailedEntriesZip: String?
    /// <p>The time that the import task request finished, presented in the Unix time stamp
    ///       format.</p>
    public let importCompletionTime: Date?
    /// <p>The time that the import task request was deleted, presented in the Unix time stamp
    ///       format.</p>
    public let importDeletedTime: Date?
    /// <p>The time that the import task request was made, presented in the Unix time stamp
    ///       format.</p>
    public let importRequestTime: Date?
    /// <p>The unique ID for a specific import task. These IDs aren't globally unique, but they are
    ///       unique within an AWS account.</p>
    public let importTaskId: String?
    /// <p>The URL for your import file that you've uploaded to Amazon S3.</p>
    public let importUrl: String?
    /// <p>A descriptive name for an import task. You can use this name to filter future requests
    ///       related to this import task, such as identifying applications and servers that were included
    ///       in this import task. We recommend that you use a meaningful name for each import task.</p>
    public let name: String?
    /// <p>The total number of server records in the import file that failed to be imported.</p>
    public let serverImportFailure: Int
    /// <p>The total number of server records in the import file that were successfully
    ///       imported.</p>
    public let serverImportSuccess: Int
    /// <p>The status of the import task. An import can have the status of
    ///         <code>IMPORT_COMPLETE</code> and still have some records fail to import from the overall
    ///       request. More information can be found in the downloadable archive defined in the
    ///         <code>errorsAndFailedEntriesZip</code> field, or in the Migration Hub management
    ///       console.</p>
    public let status: ImportStatus?

    public init (
        applicationImportFailure: Int = 0,
        applicationImportSuccess: Int = 0,
        clientRequestToken: String? = nil,
        errorsAndFailedEntriesZip: String? = nil,
        importCompletionTime: Date? = nil,
        importDeletedTime: Date? = nil,
        importRequestTime: Date? = nil,
        importTaskId: String? = nil,
        importUrl: String? = nil,
        name: String? = nil,
        serverImportFailure: Int = 0,
        serverImportSuccess: Int = 0,
        status: ImportStatus? = nil
    )
    {
        self.applicationImportFailure = applicationImportFailure
        self.applicationImportSuccess = applicationImportSuccess
        self.clientRequestToken = clientRequestToken
        self.errorsAndFailedEntriesZip = errorsAndFailedEntriesZip
        self.importCompletionTime = importCompletionTime
        self.importDeletedTime = importDeletedTime
        self.importRequestTime = importRequestTime
        self.importTaskId = importTaskId
        self.importUrl = importUrl
        self.name = name
        self.serverImportFailure = serverImportFailure
        self.serverImportSuccess = serverImportSuccess
        self.status = status
    }
}
