// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeContinuousExportsInputBody: Equatable {
    public let exportIds: [String]?
    public let maxResults: Int?
    public let nextToken: String?
}

extension DescribeContinuousExportsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exportIds
        case maxResults
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exportIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .exportIds)
        var exportIdsDecoded0:[String]? = nil
        if let exportIdsContainer = exportIdsContainer {
            exportIdsDecoded0 = [String]()
            for string0 in exportIdsContainer {
                exportIdsDecoded0?.append(string0)
            }
        }
        exportIds = exportIdsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
