// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDiscoveredSchemaInputBody: Equatable {
    public let events: [String]?
    public let type: `Type`?
}

extension GetDiscoveredSchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case events = "Events"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventsContainer = try containerValues.decodeIfPresent([String].self, forKey: .events)
        var eventsDecoded0:[String]? = nil
        if let eventsContainer = eventsContainer {
            eventsDecoded0 = [String]()
            for string0 in eventsContainer {
                eventsDecoded0?.append(string0)
            }
        }
        events = eventsDecoded0
        let typeDecoded = try containerValues.decodeIfPresent(`Type`.self, forKey: .type)
        type = typeDecoded
    }
}
