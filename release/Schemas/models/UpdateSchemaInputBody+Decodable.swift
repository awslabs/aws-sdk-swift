// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateSchemaInputBody: Equatable {
    public let clientTokenId: String?
    public let content: String?
    public let description: String?
    public let type: `Type`?
}

extension UpdateSchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientTokenId = "ClientTokenId"
        case content = "Content"
        case description = "Description"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clientTokenIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientTokenId)
        clientTokenId = clientTokenIdDecoded
        let contentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .content)
        content = contentDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let typeDecoded = try containerValues.decodeIfPresent(`Type`.self, forKey: .type)
        type = typeDecoded
    }
}
