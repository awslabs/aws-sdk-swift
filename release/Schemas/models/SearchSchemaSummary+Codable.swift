// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SearchSchemaSummary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case registryName = "RegistryName"
        case schemaArn = "SchemaArn"
        case schemaName = "SchemaName"
        case schemaVersions = "SchemaVersions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let registryName = registryName {
            try encodeContainer.encode(registryName, forKey: .registryName)
        }
        if let schemaArn = schemaArn {
            try encodeContainer.encode(schemaArn, forKey: .schemaArn)
        }
        if let schemaName = schemaName {
            try encodeContainer.encode(schemaName, forKey: .schemaName)
        }
        if let schemaVersions = schemaVersions {
            var schemaVersionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .schemaVersions)
            for __listofsearchschemaversionsummary0 in schemaVersions {
                try schemaVersionsContainer.encode(__listofsearchschemaversionsummary0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let registryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .registryName)
        registryName = registryNameDecoded
        let schemaArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaArn)
        schemaArn = schemaArnDecoded
        let schemaNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .schemaName)
        schemaName = schemaNameDecoded
        let schemaVersionsContainer = try containerValues.decodeIfPresent([SearchSchemaVersionSummary].self, forKey: .schemaVersions)
        var schemaVersionsDecoded0:[SearchSchemaVersionSummary]? = nil
        if let schemaVersionsContainer = schemaVersionsContainer {
            schemaVersionsDecoded0 = [SearchSchemaVersionSummary]()
            for structure0 in schemaVersionsContainer {
                schemaVersionsDecoded0?.append(structure0)
            }
        }
        schemaVersions = schemaVersionsDecoded0
    }
}
