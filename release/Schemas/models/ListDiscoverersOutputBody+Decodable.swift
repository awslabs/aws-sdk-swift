// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDiscoverersOutputBody: Equatable {
    public let discoverers: [DiscovererSummary]?
    public let nextToken: String?
}

extension ListDiscoverersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case discoverers = "Discoverers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let discoverersContainer = try containerValues.decodeIfPresent([DiscovererSummary].self, forKey: .discoverers)
        var discoverersDecoded0:[DiscovererSummary]? = nil
        if let discoverersContainer = discoverersContainer {
            discoverersDecoded0 = [DiscovererSummary]()
            for structure0 in discoverersContainer {
                discoverersDecoded0?.append(structure0)
            }
        }
        discoverers = discoverersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
