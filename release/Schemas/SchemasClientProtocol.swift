// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Amazon EventBridge Schema Registry</p>
public protocol SchemasClientProtocol {
    /// <p>Creates a discoverer.</p>
    func createDiscoverer(input: CreateDiscovererInput, completion: @escaping (SdkResult<CreateDiscovererOutput, CreateDiscovererOutputError>) -> Void)
    /// <p>Creates a registry.</p>
    func createRegistry(input: CreateRegistryInput, completion: @escaping (SdkResult<CreateRegistryOutput, CreateRegistryOutputError>) -> Void)
    /// <p>Creates a schema definition.</p> <note><p>Inactive schemas will be deleted after two years.</p></note>
    func createSchema(input: CreateSchemaInput, completion: @escaping (SdkResult<CreateSchemaOutput, CreateSchemaOutputError>) -> Void)
    /// <p>Deletes a discoverer.</p>
    func deleteDiscoverer(input: DeleteDiscovererInput, completion: @escaping (SdkResult<DeleteDiscovererOutput, DeleteDiscovererOutputError>) -> Void)
    /// <p>Deletes a Registry.</p>
    func deleteRegistry(input: DeleteRegistryInput, completion: @escaping (SdkResult<DeleteRegistryOutput, DeleteRegistryOutputError>) -> Void)
    /// <p>Delete the resource-based policy attached to the specified registry.</p>
    func deleteResourcePolicy(input: DeleteResourcePolicyInput, completion: @escaping (SdkResult<DeleteResourcePolicyOutput, DeleteResourcePolicyOutputError>) -> Void)
    /// <p>Delete a schema definition.</p>
    func deleteSchema(input: DeleteSchemaInput, completion: @escaping (SdkResult<DeleteSchemaOutput, DeleteSchemaOutputError>) -> Void)
    /// <p>Delete the schema version definition</p>
    func deleteSchemaVersion(input: DeleteSchemaVersionInput, completion: @escaping (SdkResult<DeleteSchemaVersionOutput, DeleteSchemaVersionOutputError>) -> Void)
    /// <p>Describe the code binding URI.</p>
    func describeCodeBinding(input: DescribeCodeBindingInput, completion: @escaping (SdkResult<DescribeCodeBindingOutput, DescribeCodeBindingOutputError>) -> Void)
    /// <p>Describes the discoverer.</p>
    func describeDiscoverer(input: DescribeDiscovererInput, completion: @escaping (SdkResult<DescribeDiscovererOutput, DescribeDiscovererOutputError>) -> Void)
    /// <p>Describes the registry.</p>
    func describeRegistry(input: DescribeRegistryInput, completion: @escaping (SdkResult<DescribeRegistryOutput, DescribeRegistryOutputError>) -> Void)
    /// <p>Retrieve the schema definition.</p>
    func describeSchema(input: DescribeSchemaInput, completion: @escaping (SdkResult<DescribeSchemaOutput, DescribeSchemaOutputError>) -> Void)
    func exportSchema(input: ExportSchemaInput, completion: @escaping (SdkResult<ExportSchemaOutput, ExportSchemaOutputError>) -> Void)
    /// <p>Get the code binding source URI.</p>
    func getCodeBindingSource(input: GetCodeBindingSourceInput, completion: @escaping (SdkResult<GetCodeBindingSourceOutput, GetCodeBindingSourceOutputError>) -> Void)
    /// <p>Get the discovered schema that was generated based on sampled events.</p>
    func getDiscoveredSchema(input: GetDiscoveredSchemaInput, completion: @escaping (SdkResult<GetDiscoveredSchemaOutput, GetDiscoveredSchemaOutputError>) -> Void)
    /// <p>Retrieves the resource-based policy attached to a given registry.</p>
    func getResourcePolicy(input: GetResourcePolicyInput, completion: @escaping (SdkResult<GetResourcePolicyOutput, GetResourcePolicyOutputError>) -> Void)
    /// <p>List the discoverers.</p>
    func listDiscoverers(input: ListDiscoverersInput, completion: @escaping (SdkResult<ListDiscoverersOutput, ListDiscoverersOutputError>) -> Void)
    /// <p>List the registries.</p>
    func listRegistries(input: ListRegistriesInput, completion: @escaping (SdkResult<ListRegistriesOutput, ListRegistriesOutputError>) -> Void)
    /// <p>List the schemas.</p>
    func listSchemas(input: ListSchemasInput, completion: @escaping (SdkResult<ListSchemasOutput, ListSchemasOutputError>) -> Void)
    /// <p>Provides a list of the schema versions and related information.</p>
    func listSchemaVersions(input: ListSchemaVersionsInput, completion: @escaping (SdkResult<ListSchemaVersionsOutput, ListSchemaVersionsOutputError>) -> Void)
    /// <p>Get tags for resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutput, ListTagsForResourceOutputError>) -> Void)
    /// <p>Put code binding URI</p>
    func putCodeBinding(input: PutCodeBindingInput, completion: @escaping (SdkResult<PutCodeBindingOutput, PutCodeBindingOutputError>) -> Void)
    /// <p>The name of the policy.</p>
    func putResourcePolicy(input: PutResourcePolicyInput, completion: @escaping (SdkResult<PutResourcePolicyOutput, PutResourcePolicyOutputError>) -> Void)
    /// <p>Search the schemas</p>
    func searchSchemas(input: SearchSchemasInput, completion: @escaping (SdkResult<SearchSchemasOutput, SearchSchemasOutputError>) -> Void)
    /// <p>Starts the discoverer</p>
    func startDiscoverer(input: StartDiscovererInput, completion: @escaping (SdkResult<StartDiscovererOutput, StartDiscovererOutputError>) -> Void)
    /// <p>Stops the discoverer</p>
    func stopDiscoverer(input: StopDiscovererInput, completion: @escaping (SdkResult<StopDiscovererOutput, StopDiscovererOutputError>) -> Void)
    /// <p>Add tags to a resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutput, TagResourceOutputError>) -> Void)
    /// <p>Removes tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutput, UntagResourceOutputError>) -> Void)
    /// <p>Updates the discoverer</p>
    func updateDiscoverer(input: UpdateDiscovererInput, completion: @escaping (SdkResult<UpdateDiscovererOutput, UpdateDiscovererOutputError>) -> Void)
    /// <p>Updates a registry.</p>
    func updateRegistry(input: UpdateRegistryInput, completion: @escaping (SdkResult<UpdateRegistryOutput, UpdateRegistryOutputError>) -> Void)
    /// <p>Updates the schema definition</p> <note><p>Inactive schemas will be deleted after two years.</p></note>
    func updateSchema(input: UpdateSchemaInput, completion: @escaping (SdkResult<UpdateSchemaOutput, UpdateSchemaOutputError>) -> Void)
}
