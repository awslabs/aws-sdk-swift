// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateHsmConfigurationInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
        if let hsmConfigurationIdentifier = hsmConfigurationIdentifier {
            try container.encode(hsmConfigurationIdentifier, forKey: Key("HsmConfigurationIdentifier"))
        }
        if let hsmIpAddress = hsmIpAddress {
            try container.encode(hsmIpAddress, forKey: Key("HsmIpAddress"))
        }
        if let hsmPartitionName = hsmPartitionName {
            try container.encode(hsmPartitionName, forKey: Key("HsmPartitionName"))
        }
        if let hsmPartitionPassword = hsmPartitionPassword {
            try container.encode(hsmPartitionPassword, forKey: Key("HsmPartitionPassword"))
        }
        if let hsmServerPublicCertificate = hsmServerPublicCertificate {
            try container.encode(hsmServerPublicCertificate, forKey: Key("HsmServerPublicCertificate"))
        }
        if let tags = tags {
            var tagsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Tags"))
            for (index0, tag0) in tags.enumerated() {
                try tagsContainer.encode(tag0, forKey: Key("Tag.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("CreateHsmConfiguration", forKey:Key("Action"))
        try container.encode("2012-12-01", forKey:Key("Version"))
    }
}
