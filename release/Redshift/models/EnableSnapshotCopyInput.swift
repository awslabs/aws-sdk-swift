// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct EnableSnapshotCopyInput: Equatable {
    /// <p>The unique identifier of the source cluster to copy snapshots from.</p>
    ///         <p>Constraints: Must be the valid name of an existing cluster that does not already
    ///             have cross-region snapshot copy enabled.</p>
    public let clusterIdentifier: String?
    /// <p>The destination AWS Region that you want to copy snapshots to.</p>
    ///         <p>Constraints: Must be the name of a valid AWS Region. For more information, see
    ///                 <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions and Endpoints</a> in the Amazon Web Services General Reference.
    ///         </p>
    public let destinationRegion: String?
    /// <p>The number of days to retain newly copied snapshots in the destination AWS Region
    ///             after they are copied from the source AWS Region. If the value is -1, the manual
    ///             snapshot is retained indefinitely. </p>
    ///         <p>The value must be either -1 or an integer between 1 and 3,653.</p>
    public let manualSnapshotRetentionPeriod: Int?
    /// <p>The number of days to retain automated snapshots in the destination region after
    ///             they are copied from the source region.</p>
    ///         <p>Default: 7.</p>
    ///         <p>Constraints: Must be at least 1 and no more than 35.</p>
    public let retentionPeriod: Int?
    /// <p>The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted
    ///             cluster are copied to the destination region.</p>
    public let snapshotCopyGrantName: String?

    public init (
        clusterIdentifier: String? = nil,
        destinationRegion: String? = nil,
        manualSnapshotRetentionPeriod: Int? = nil,
        retentionPeriod: Int? = nil,
        snapshotCopyGrantName: String? = nil
    )
    {
        self.clusterIdentifier = clusterIdentifier
        self.destinationRegion = destinationRegion
        self.manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriod
        self.retentionPeriod = retentionPeriod
        self.snapshotCopyGrantName = snapshotCopyGrantName
    }
}
