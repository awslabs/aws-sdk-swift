// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterAssociatedToSchedule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clusterIdentifier = "ClusterIdentifier"
        case scheduleAssociationState = "ScheduleAssociationState"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let clusterIdentifier = clusterIdentifier {
            try container.encode(clusterIdentifier, forKey: Key("ClusterIdentifier"))
        }
        if let scheduleAssociationState = scheduleAssociationState {
            try container.encode(scheduleAssociationState, forKey: Key("ScheduleAssociationState"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterIdentifier)
        clusterIdentifier = clusterIdentifierDecoded
        let scheduleAssociationStateDecoded = try containerValues.decodeIfPresent(ScheduleState.self, forKey: .scheduleAssociationState)
        scheduleAssociationState = scheduleAssociationStateDecoded
    }
}
