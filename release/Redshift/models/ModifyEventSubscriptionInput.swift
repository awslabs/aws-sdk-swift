// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct ModifyEventSubscriptionInput: Equatable {
    /// <p>A Boolean value indicating if the subscription is enabled. <code>true</code>
    ///             indicates the subscription is enabled </p>
    public let enabled: Bool?
    /// <p>Specifies the Amazon Redshift event categories to be published by the event notification
    ///             subscription.</p>
    ///         <p>Values: configuration, management, monitoring, security</p>
    public let eventCategories: [String]?
    /// <p>Specifies the Amazon Redshift event severity to be published by the event notification
    ///             subscription.</p>
    ///         <p>Values: ERROR, INFO</p>
    public let severity: String?
    /// <p>The Amazon Resource Name (ARN) of the SNS topic to be used by the event
    ///             notification subscription.</p>
    public let snsTopicArn: String?
    /// <p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects
    ///             must be of the same type as was specified in the source type parameter. The event
    ///             subscription will return only events generated by the specified objects. If not
    ///             specified, then events are returned for all objects within the source type
    ///             specified.</p>
    ///         <p>Example: my-cluster-1, my-cluster-2</p>
    ///         <p>Example: my-snapshot-20131010</p>
    public let sourceIds: [String]?
    /// <p>The type of source that will be generating the events. For example, if you want to
    ///             be notified of events generated by a cluster, you would set this parameter to cluster.
    ///             If this value is not specified, events are returned for all Amazon Redshift objects in your
    ///             AWS account. You must specify a source type in order to specify source IDs.</p>
    ///         <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>
    public let sourceType: String?
    /// <p>The name of the modified Amazon Redshift event notification subscription.</p>
    public let subscriptionName: String?

    public init (
        enabled: Bool? = nil,
        eventCategories: [String]? = nil,
        severity: String? = nil,
        snsTopicArn: String? = nil,
        sourceIds: [String]? = nil,
        sourceType: String? = nil,
        subscriptionName: String? = nil
    )
    {
        self.enabled = enabled
        self.eventCategories = eventCategories
        self.severity = severity
        self.snsTopicArn = snsTopicArn
        self.sourceIds = sourceIds
        self.sourceType = sourceType
        self.subscriptionName = subscriptionName
    }
}
