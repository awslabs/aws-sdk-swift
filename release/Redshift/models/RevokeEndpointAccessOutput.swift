// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across AWS accounts.</p>
public struct RevokeEndpointAccessOutput: Equatable {
    /// <p>Indicates whether all VPCs in the grantee account are allowed access to the cluster.</p>
    public let allowedAllVPCs: Bool
    /// <p>The VPCs allowed access to the cluster.</p>
    public let allowedVPCs: [String]?
    /// <p>The time (UTC) when the authorization was created.</p>
    public let authorizeTime: Date?
    /// <p>The cluster identifier.</p>
    public let clusterIdentifier: String?
    /// <p>The status of the cluster.</p>
    public let clusterStatus: String?
    /// <p>The number of Redshift-managed VPC endpoints created for the authorization.</p>
    public let endpointCount: Int
    /// <p>The AWS account ID of the grantee of the cluster.</p>
    public let grantee: String?
    /// <p>The AWS account ID of the cluster owner.</p>
    public let grantor: String?
    /// <p>The status of the authorization action.</p>
    public let status: AuthorizationStatus?

    public init (
        allowedAllVPCs: Bool = false,
        allowedVPCs: [String]? = nil,
        authorizeTime: Date? = nil,
        clusterIdentifier: String? = nil,
        clusterStatus: String? = nil,
        endpointCount: Int = 0,
        grantee: String? = nil,
        grantor: String? = nil,
        status: AuthorizationStatus? = nil
    )
    {
        self.allowedAllVPCs = allowedAllVPCs
        self.allowedVPCs = allowedVPCs
        self.authorizeTime = authorizeTime
        self.clusterIdentifier = clusterIdentifier
        self.clusterStatus = clusterStatus
        self.endpointCount = endpointCount
        self.grantee = grantee
        self.grantor = grantor
        self.status = status
    }
}
