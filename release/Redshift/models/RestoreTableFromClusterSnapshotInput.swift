// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct RestoreTableFromClusterSnapshotInput: Equatable {
    /// <p>The identifier of the Amazon Redshift cluster to restore the table to.</p>
    public let clusterIdentifier: String?
    /// <p>Indicates whether name identifiers for database, schema, and table are case sensitive.
    ///             If <code>true</code>, the names are case sensitive.
    ///             If <code>false</code> (default), the names are not case sensitive.</p>
    public let enableCaseSensitiveIdentifier: Bool?
    /// <p>The name of the table to create as a result of the current request.</p>
    public let newTableName: String?
    /// <p>The identifier of the snapshot to restore the table from. This snapshot must have
    ///             been created from the Amazon Redshift cluster specified by the
    ///                 <code>ClusterIdentifier</code> parameter.</p>
    public let snapshotIdentifier: String?
    /// <p>The name of the source database that contains the table to restore from.</p>
    public let sourceDatabaseName: String?
    /// <p>The name of the source schema that contains the table to restore from. If you do
    ///             not specify a <code>SourceSchemaName</code> value, the default is
    ///             <code>public</code>.</p>
    public let sourceSchemaName: String?
    /// <p>The name of the source table to restore from.</p>
    public let sourceTableName: String?
    /// <p>The name of the database to restore the table to.</p>
    public let targetDatabaseName: String?
    /// <p>The name of the schema to restore the table to.</p>
    public let targetSchemaName: String?

    public init (
        clusterIdentifier: String? = nil,
        enableCaseSensitiveIdentifier: Bool? = nil,
        newTableName: String? = nil,
        snapshotIdentifier: String? = nil,
        sourceDatabaseName: String? = nil,
        sourceSchemaName: String? = nil,
        sourceTableName: String? = nil,
        targetDatabaseName: String? = nil,
        targetSchemaName: String? = nil
    )
    {
        self.clusterIdentifier = clusterIdentifier
        self.enableCaseSensitiveIdentifier = enableCaseSensitiveIdentifier
        self.newTableName = newTableName
        self.snapshotIdentifier = snapshotIdentifier
        self.sourceDatabaseName = sourceDatabaseName
        self.sourceSchemaName = sourceSchemaName
        self.sourceTableName = sourceTableName
        self.targetDatabaseName = targetDatabaseName
        self.targetSchemaName = targetSchemaName
    }
}
