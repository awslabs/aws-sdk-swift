// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeAccountAttributesOutputBody: Equatable {
    public let accountAttributes: [AccountAttribute]?
}

extension DescribeAccountAttributesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountAttributes = "AccountAttributes"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DescribeAccountAttributesResult"))
        if containerValues.contains(.accountAttributes) {
            struct KeyVal0{struct AccountAttribute{}}
            let accountAttributesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.AccountAttribute>.CodingKeys.self, forKey: .accountAttributes)
            if let accountAttributesWrappedContainer = accountAttributesWrappedContainer {
                let accountAttributesContainer = try accountAttributesWrappedContainer.decodeIfPresent([AccountAttribute].self, forKey: .member)
                var accountAttributesBuffer:[AccountAttribute]? = nil
                if let accountAttributesContainer = accountAttributesContainer {
                    accountAttributesBuffer = [AccountAttribute]()
                    for structureContainer0 in accountAttributesContainer {
                        accountAttributesBuffer?.append(structureContainer0)
                    }
                }
                accountAttributes = accountAttributesBuffer
            } else {
                accountAttributes = []
            }
        } else {
            accountAttributes = nil
        }
    }
}
