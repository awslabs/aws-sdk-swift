// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateScheduledActionInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let enable = enable {
            try container.encode(enable, forKey: Key("Enable"))
        }
        if let endTime = endTime {
            try container.encode(TimestampWrapper(endTime, format: .dateTime), forKey: Key("endTime"))
        }
        if let iamRole = iamRole {
            try container.encode(iamRole, forKey: Key("IamRole"))
        }
        if let schedule = schedule {
            try container.encode(schedule, forKey: Key("Schedule"))
        }
        if let scheduledActionDescription = scheduledActionDescription {
            try container.encode(scheduledActionDescription, forKey: Key("ScheduledActionDescription"))
        }
        if let scheduledActionName = scheduledActionName {
            try container.encode(scheduledActionName, forKey: Key("ScheduledActionName"))
        }
        if let startTime = startTime {
            try container.encode(TimestampWrapper(startTime, format: .dateTime), forKey: Key("startTime"))
        }
        if let targetAction = targetAction {
            try container.encode(targetAction, forKey: Key("TargetAction"))
        }
        try container.encode("CreateScheduledAction", forKey:Key("Action"))
        try container.encode("2012-12-01", forKey:Key("Version"))
    }
}
