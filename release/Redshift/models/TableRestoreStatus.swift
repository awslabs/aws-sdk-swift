// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes the status of a <a>RestoreTableFromClusterSnapshot</a>
///             operation.</p>
public struct TableRestoreStatus: Equatable {
    /// <p>The identifier of the Amazon Redshift cluster that the table is being restored
    ///             to.</p>
    public let clusterIdentifier: String?
    /// <p>A description of the status of the table restore request. Status values include
    ///                 <code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELED</code>,
    ///                 <code>PENDING</code>, <code>IN_PROGRESS</code>.</p>
    public let message: String?
    /// <p>The name of the table to create as a result of the table restore request.</p>
    public let newTableName: String?
    /// <p>The amount of data restored to the new table so far, in megabytes (MB).</p>
    public let progressInMegaBytes: Int?
    /// <p>The time that the table restore request was made, in Universal Coordinated Time
    ///             (UTC).</p>
    public let requestTime: Date?
    /// <p>The identifier of the snapshot that the table is being restored from.</p>
    public let snapshotIdentifier: String?
    /// <p>The name of the source database that contains the table being restored.</p>
    public let sourceDatabaseName: String?
    /// <p>The name of the source schema that contains the table being restored.</p>
    public let sourceSchemaName: String?
    /// <p>The name of the source table being restored.</p>
    public let sourceTableName: String?
    /// <p>A value that describes the current state of the table restore request.</p>
    ///         <p>Valid Values: <code>SUCCEEDED</code>, <code>FAILED</code>, <code>CANCELED</code>,
    ///                 <code>PENDING</code>, <code>IN_PROGRESS</code>
    ///         </p>
    public let status: TableRestoreStatusType?
    /// <p>The unique identifier for the table restore request.</p>
    public let tableRestoreRequestId: String?
    /// <p>The name of the database to restore the table to.</p>
    public let targetDatabaseName: String?
    /// <p>The name of the schema to restore the table to.</p>
    public let targetSchemaName: String?
    /// <p>The total amount of data to restore to the new table, in megabytes (MB).</p>
    public let totalDataInMegaBytes: Int?

    public init (
        clusterIdentifier: String? = nil,
        message: String? = nil,
        newTableName: String? = nil,
        progressInMegaBytes: Int? = nil,
        requestTime: Date? = nil,
        snapshotIdentifier: String? = nil,
        sourceDatabaseName: String? = nil,
        sourceSchemaName: String? = nil,
        sourceTableName: String? = nil,
        status: TableRestoreStatusType? = nil,
        tableRestoreRequestId: String? = nil,
        targetDatabaseName: String? = nil,
        targetSchemaName: String? = nil,
        totalDataInMegaBytes: Int? = nil
    )
    {
        self.clusterIdentifier = clusterIdentifier
        self.message = message
        self.newTableName = newTableName
        self.progressInMegaBytes = progressInMegaBytes
        self.requestTime = requestTime
        self.snapshotIdentifier = snapshotIdentifier
        self.sourceDatabaseName = sourceDatabaseName
        self.sourceSchemaName = sourceSchemaName
        self.sourceTableName = sourceTableName
        self.status = status
        self.tableRestoreRequestId = tableRestoreRequestId
        self.targetDatabaseName = targetDatabaseName
        self.targetSchemaName = targetSchemaName
        self.totalDataInMegaBytes = totalDataInMegaBytes
    }
}
