// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetClusterCredentialsOutputBody: Equatable {
    public let dbUser: String?
    public let dbPassword: String?
    public let expiration: Date?
}

extension GetClusterCredentialsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dbPassword = "DbPassword"
        case dbUser = "DbUser"
        case expiration = "Expiration"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetClusterCredentialsResult"))
        let dbUserDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbUser)
        dbUser = dbUserDecoded
        let dbPasswordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbPassword)
        dbPassword = dbPasswordDecoded
        let expirationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .expiration)
        var expirationBuffer:Date? = nil
        if let expirationDecoded = expirationDecoded {
            expirationBuffer = try TimestampWrapperDecoder.parseDateStringValue(expirationDecoded, format: .dateTime)
        }
        expiration = expirationBuffer
    }
}
