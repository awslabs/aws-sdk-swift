// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeSnapshotSchedulesInput: Equatable {
    /// <p>The unique identifier for the cluster whose snapshot schedules you want to
    ///             view.</p>
    public let clusterIdentifier: String?
    /// <p>A value that indicates the starting point for the next set of response records in a
    ///             subsequent request. If a value is returned in a response, you can retrieve the next set
    ///             of records by providing this returned marker value in the <code>marker</code> parameter
    ///             and retrying the command. If the <code>marker</code> field is empty, all response
    ///             records have been retrieved for the request.</p>
    public let marker: String?
    /// <p>The maximum number or response records to return in each call. If the number of
    ///             remaining response records exceeds the specified <code>MaxRecords</code> value, a value
    ///             is returned in a <code>marker</code> field of the response. You can retrieve the next
    ///             set of records by retrying the command with the returned <code>marker</code>
    ///             value.</p>
    public let maxRecords: Int?
    /// <p>A unique identifier for a snapshot schedule.</p>
    public let scheduleIdentifier: String?
    /// <p>The key value for a snapshot schedule tag.</p>
    public let tagKeys: [String]?
    /// <p>The value corresponding to the key of the snapshot schedule tag.</p>
    public let tagValues: [String]?

    public init (
        clusterIdentifier: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        scheduleIdentifier: String? = nil,
        tagKeys: [String]? = nil,
        tagValues: [String]? = nil
    )
    {
        self.clusterIdentifier = clusterIdentifier
        self.marker = marker
        self.maxRecords = maxRecords
        self.scheduleIdentifier = scheduleIdentifier
        self.tagKeys = tagKeys
        self.tagValues = tagValues
    }
}
