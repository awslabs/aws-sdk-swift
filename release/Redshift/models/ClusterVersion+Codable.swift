// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clusterParameterGroupFamily = "ClusterParameterGroupFamily"
        case clusterVersion = "ClusterVersion"
        case description = "Description"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let clusterParameterGroupFamily = clusterParameterGroupFamily {
            try container.encode(clusterParameterGroupFamily, forKey: Key("ClusterParameterGroupFamily"))
        }
        if let clusterVersion = clusterVersion {
            try container.encode(clusterVersion, forKey: Key("ClusterVersion"))
        }
        if let description = description {
            try container.encode(description, forKey: Key("Description"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterVersion)
        clusterVersion = clusterVersionDecoded
        let clusterParameterGroupFamilyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterParameterGroupFamily)
        clusterParameterGroupFamily = clusterParameterGroupFamilyDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
    }
}
