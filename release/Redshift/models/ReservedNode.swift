// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a reserved node. You can call the <a>DescribeReservedNodeOfferings</a> API to obtain the available reserved node
///             offerings. </p>
public struct ReservedNode: Equatable {
    /// <p>The currency code for the reserved cluster.</p>
    public let currencyCode: String?
    /// <p>The duration of the node reservation in seconds.</p>
    public let duration: Int
    /// <p>The fixed cost Amazon Redshift charges you for this reserved node.</p>
    public let fixedPrice: Double
    /// <p>The number of reserved compute nodes.</p>
    public let nodeCount: Int
    /// <p>The node type of the reserved node.</p>
    public let nodeType: String?
    /// <p>The anticipated utilization of the reserved node, as defined in the reserved node
    ///             offering.</p>
    public let offeringType: String?
    /// <p>The recurring charges for the reserved node.</p>
    public let recurringCharges: [RecurringCharge]?
    /// <p>The unique identifier for the reservation.</p>
    public let reservedNodeId: String?
    /// <p>The identifier for the reserved node offering.</p>
    public let reservedNodeOfferingId: String?
    /// <p></p>
    public let reservedNodeOfferingType: ReservedNodeOfferingType?
    /// <p>The time the reservation started. You purchase a reserved node offering for a
    ///             duration. This is the start time of that duration.</p>
    public let startTime: Date?
    /// <p>The state of the reserved compute node.</p>
    ///         <p>Possible Values:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>pending-payment-This reserved node has recently been purchased, and the
    ///                     sale has been approved, but payment has not yet been confirmed.</p>
    ///             </li>
    ///             <li>
    ///                 <p>active-This reserved node is owned by the caller and is available for
    ///                     use.</p>
    ///             </li>
    ///             <li>
    ///                 <p>payment-failed-Payment failed for the purchase attempt.</p>
    ///             </li>
    ///             <li>
    ///                 <p>retired-The reserved node is no longer available. </p>
    ///             </li>
    ///             <li>
    ///                 <p>exchanging-The owner is exchanging the reserved node for another reserved
    ///                     node.</p>
    ///             </li>
    ///          </ul>
    public let state: String?
    /// <p>The hourly rate Amazon Redshift charges you for this reserved node.</p>
    public let usagePrice: Double

    public init (
        currencyCode: String? = nil,
        duration: Int = 0,
        fixedPrice: Double = 0.0,
        nodeCount: Int = 0,
        nodeType: String? = nil,
        offeringType: String? = nil,
        recurringCharges: [RecurringCharge]? = nil,
        reservedNodeId: String? = nil,
        reservedNodeOfferingId: String? = nil,
        reservedNodeOfferingType: ReservedNodeOfferingType? = nil,
        startTime: Date? = nil,
        state: String? = nil,
        usagePrice: Double = 0.0
    )
    {
        self.currencyCode = currencyCode
        self.duration = duration
        self.fixedPrice = fixedPrice
        self.nodeCount = nodeCount
        self.nodeType = nodeType
        self.offeringType = offeringType
        self.recurringCharges = recurringCharges
        self.reservedNodeId = reservedNodeId
        self.reservedNodeOfferingId = reservedNodeOfferingId
        self.reservedNodeOfferingType = reservedNodeOfferingType
        self.startTime = startTime
        self.state = state
        self.usagePrice = usagePrice
    }
}
