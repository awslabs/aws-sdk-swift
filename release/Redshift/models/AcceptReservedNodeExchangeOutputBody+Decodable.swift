// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AcceptReservedNodeExchangeOutputBody: Equatable {
    public let exchangedReservedNode: ReservedNode?
}

extension AcceptReservedNodeExchangeOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exchangedReservedNode = "ExchangedReservedNode"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("AcceptReservedNodeExchangeResult"))
        let exchangedReservedNodeDecoded = try containerValues.decodeIfPresent(ReservedNode.self, forKey: .exchangedReservedNode)
        exchangedReservedNode = exchangedReservedNodeDecoded
    }
}
