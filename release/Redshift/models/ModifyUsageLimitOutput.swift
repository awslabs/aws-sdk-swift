// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a usage limit object for a cluster. </p>
public struct ModifyUsageLimitOutput: Equatable {
    /// <p>The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB).</p>
    public let amount: Int
    /// <p>The action that Amazon Redshift takes when the limit is reached. Possible values are: </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>log</b> - To log an event in a system table. The default is log.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>emit-metric</b> - To emit CloudWatch metrics.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>disable</b> - To disable the feature until the next usage period begins.</p>
    ///             </li>
    ///          </ul>
    public let breachAction: UsageLimitBreachAction?
    /// <p>The identifier of the cluster with a usage limit.</p>
    public let clusterIdentifier: String?
    /// <p>The Amazon Redshift feature to which the limit applies.</p>
    public let featureType: UsageLimitFeatureType?
    /// <p>The type of limit. Depending on the feature type, this can be based on a time duration or data size.</p>
    public let limitType: UsageLimitLimitType?
    /// <p>The time period that the amount applies to. A <code>weekly</code> period begins on Sunday. The default is <code>monthly</code>. </p>
    public let period: UsageLimitPeriod?
    /// <p>A list of tag instances.</p>
    public let tags: [Tag]?
    /// <p>The identifier of the usage limit.</p>
    public let usageLimitId: String?

    public init (
        amount: Int = 0,
        breachAction: UsageLimitBreachAction? = nil,
        clusterIdentifier: String? = nil,
        featureType: UsageLimitFeatureType? = nil,
        limitType: UsageLimitLimitType? = nil,
        period: UsageLimitPeriod? = nil,
        tags: [Tag]? = nil,
        usageLimitId: String? = nil
    )
    {
        self.amount = amount
        self.breachAction = breachAction
        self.clusterIdentifier = clusterIdentifier
        self.featureType = featureType
        self.limitType = limitType
        self.period = period
        self.tags = tags
        self.usageLimitId = usageLimitId
    }
}
