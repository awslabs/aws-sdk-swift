// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum NodeConfigurationOptionsFilterName {
    case estimatedDiskUtilizationPercent
    case mode
    case nodeType
    case numNodes
    case sdkUnknown(String)
}

extension NodeConfigurationOptionsFilterName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NodeConfigurationOptionsFilterName] {
        return [
            .estimatedDiskUtilizationPercent,
            .mode,
            .nodeType,
            .numNodes,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .estimatedDiskUtilizationPercent: return "EstimatedDiskUtilizationPercent"
        case .mode: return "Mode"
        case .nodeType: return "NodeType"
        case .numNodes: return "NumberOfNodes"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NodeConfigurationOptionsFilterName(rawValue: rawValue) ?? NodeConfigurationOptionsFilterName.sdkUnknown(rawValue)
    }
}
