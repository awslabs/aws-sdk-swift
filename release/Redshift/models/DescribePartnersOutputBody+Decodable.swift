// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribePartnersOutputBody: Equatable {
    public let partnerIntegrationInfoList: [PartnerIntegrationInfo]?
}

extension DescribePartnersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case partnerIntegrationInfoList = "PartnerIntegrationInfoList"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DescribePartnersResult"))
        if containerValues.contains(.partnerIntegrationInfoList) {
            struct KeyVal0{struct PartnerIntegrationInfo{}}
            let partnerIntegrationInfoListWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.PartnerIntegrationInfo>.CodingKeys.self, forKey: .partnerIntegrationInfoList)
            if let partnerIntegrationInfoListWrappedContainer = partnerIntegrationInfoListWrappedContainer {
                let partnerIntegrationInfoListContainer = try partnerIntegrationInfoListWrappedContainer.decodeIfPresent([PartnerIntegrationInfo].self, forKey: .member)
                var partnerIntegrationInfoListBuffer:[PartnerIntegrationInfo]? = nil
                if let partnerIntegrationInfoListContainer = partnerIntegrationInfoListContainer {
                    partnerIntegrationInfoListBuffer = [PartnerIntegrationInfo]()
                    for structureContainer0 in partnerIntegrationInfoListContainer {
                        partnerIntegrationInfoListBuffer?.append(structureContainer0)
                    }
                }
                partnerIntegrationInfoList = partnerIntegrationInfoListBuffer
            } else {
                partnerIntegrationInfoList = []
            }
        } else {
            partnerIntegrationInfoList = nil
        }
    }
}
