// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a reserved node offering.</p>
public struct ReservedNodeOffering: Equatable {
    /// <p>The currency code for the compute nodes offering.</p>
    public let currencyCode: String?
    /// <p>The duration, in seconds, for which the offering will reserve the node.</p>
    public let duration: Int
    /// <p>The upfront fixed charge you will pay to purchase the specific reserved node
    ///             offering.</p>
    public let fixedPrice: Double
    /// <p>The node type offered by the reserved node offering.</p>
    public let nodeType: String?
    /// <p>The anticipated utilization of the reserved node, as defined in the reserved node
    ///             offering.</p>
    public let offeringType: String?
    /// <p>The charge to your account regardless of whether you are creating any clusters
    ///             using the node offering. Recurring charges are only in effect for heavy-utilization
    ///             reserved nodes.</p>
    public let recurringCharges: [RecurringCharge]?
    /// <p>The offering identifier.</p>
    public let reservedNodeOfferingId: String?
    /// <p></p>
    public let reservedNodeOfferingType: ReservedNodeOfferingType?
    /// <p>The rate you are charged for each hour the cluster that is using the offering is
    ///             running.</p>
    public let usagePrice: Double

    public init (
        currencyCode: String? = nil,
        duration: Int = 0,
        fixedPrice: Double = 0.0,
        nodeType: String? = nil,
        offeringType: String? = nil,
        recurringCharges: [RecurringCharge]? = nil,
        reservedNodeOfferingId: String? = nil,
        reservedNodeOfferingType: ReservedNodeOfferingType? = nil,
        usagePrice: Double = 0.0
    )
    {
        self.currencyCode = currencyCode
        self.duration = duration
        self.fixedPrice = fixedPrice
        self.nodeType = nodeType
        self.offeringType = offeringType
        self.recurringCharges = recurringCharges
        self.reservedNodeOfferingId = reservedNodeOfferingId
        self.reservedNodeOfferingType = reservedNodeOfferingType
        self.usagePrice = usagePrice
    }
}
