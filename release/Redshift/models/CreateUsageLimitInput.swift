// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUsageLimitInput: Equatable {
    /// <p>The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB).
    ///             The value must be a positive number.
    ///             </p>
    public let amount: Int
    /// <p>The action that Amazon Redshift takes when the limit is reached. The default is log.
    ///             For more information about this parameter, see <a>UsageLimit</a>.</p>
    public let breachAction: UsageLimitBreachAction?
    /// <p>The identifier of the cluster that you want to limit usage.</p>
    public let clusterIdentifier: String?
    /// <p>The Amazon Redshift feature that you want to limit.</p>
    public let featureType: UsageLimitFeatureType?
    /// <p>The type of limit. Depending on the feature type, this can be based on a time duration or data size.
    ///             If <code>FeatureType</code> is <code>spectrum</code>, then <code>LimitType</code> must be <code>data-scanned</code>.
    ///             If <code>FeatureType</code> is <code>concurrency-scaling</code>, then <code>LimitType</code> must be <code>time</code>.
    ///            </p>
    public let limitType: UsageLimitLimitType?
    /// <p>The time period that the amount applies to. A <code>weekly</code> period begins on Sunday. The default is <code>monthly</code>.
    ///             </p>
    public let period: UsageLimitPeriod?
    /// <p>A list of tag instances.</p>
    public let tags: [Tag]?

    public init (
        amount: Int = 0,
        breachAction: UsageLimitBreachAction? = nil,
        clusterIdentifier: String? = nil,
        featureType: UsageLimitFeatureType? = nil,
        limitType: UsageLimitLimitType? = nil,
        period: UsageLimitPeriod? = nil,
        tags: [Tag]? = nil
    )
    {
        self.amount = amount
        self.breachAction = breachAction
        self.clusterIdentifier = clusterIdentifier
        self.featureType = featureType
        self.limitType = limitType
        self.period = period
        self.tags = tags
    }
}
