// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a parameter in a cluster parameter group.</p>
public struct Parameter: Equatable {
    /// <p>The valid range of values for the parameter.</p>
    public let allowedValues: String?
    /// <p>Specifies how to apply the WLM configuration parameter. Some properties can be
    ///             applied dynamically, while other properties require that any associated clusters be
    ///             rebooted for the configuration changes to be applied.
    /// For more information about parameters and parameter groups, go to
    /// <a href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon Redshift Parameter Groups</a>
    /// in the <i>Amazon Redshift Cluster Management Guide</i>.</p>
    public let applyType: ParameterApplyType?
    /// <p>The data type of the parameter.</p>
    public let dataType: String?
    /// <p>A description of the parameter.</p>
    public let description: String?
    /// <p>If <code>true</code>, the parameter can be modified. Some parameters have security
    ///             or operational implications that prevent them from being changed. </p>
    public let isModifiable: Bool
    /// <p>The earliest engine version to which the parameter can apply.</p>
    public let minimumEngineVersion: String?
    /// <p>The name of the parameter.</p>
    public let parameterName: String?
    /// <p>The value of the parameter. If <code>ParameterName</code> is <code>wlm_json_configuration</code>,
    ///             then the maximum size of <code>ParameterValue</code> is 8000 characters.</p>
    public let parameterValue: String?
    /// <p>The source of the parameter value, such as "engine-default" or "user".</p>
    public let source: String?

    public init (
        allowedValues: String? = nil,
        applyType: ParameterApplyType? = nil,
        dataType: String? = nil,
        description: String? = nil,
        isModifiable: Bool = false,
        minimumEngineVersion: String? = nil,
        parameterName: String? = nil,
        parameterValue: String? = nil,
        source: String? = nil
    )
    {
        self.allowedValues = allowedValues
        self.applyType = applyType
        self.dataType = dataType
        self.description = description
        self.isModifiable = isModifiable
        self.minimumEngineVersion = minimumEngineVersion
        self.parameterName = parameterName
        self.parameterValue = parameterValue
        self.source = source
    }
}
