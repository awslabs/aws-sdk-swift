// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeEndpointAuthorizationInput: Equatable {
    /// <p>The AWS account ID of either the cluster owner (grantor) or grantee.
    ///        If <code>Grantee</code> parameter is true, then the <code>Account</code> value is of the grantor.</p>
    public let account: String?
    /// <p>The cluster identifier of the cluster to access.</p>
    public let clusterIdentifier: String?
    /// <p>Indicates whether to check authorization from a grantor or grantee point of view.
    ///            If true, Amazon Redshift returns endpoint authorizations that you've been granted.
    ///            If false (default), checks authorization from a grantor point of view.</p>
    public let grantee: Bool?
    /// <p>An optional pagination token provided by a previous
    ///             <code>DescribeEndpointAuthorization</code> request. If this parameter is specified, the
    ///             response includes only records beyond the marker, up to the value specified by the
    ///             <code>MaxRecords</code> parameter.</p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response. If more records exist
    ///             than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is
    ///             included in the response so that the remaining results can be retrieved.</p>
    public let maxRecords: Int?

    public init (
        account: String? = nil,
        clusterIdentifier: String? = nil,
        grantee: Bool? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.account = account
        self.clusterIdentifier = clusterIdentifier
        self.grantee = grantee
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
