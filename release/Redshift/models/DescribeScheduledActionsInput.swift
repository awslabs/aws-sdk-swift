// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeScheduledActionsInput: Equatable {
    /// <p>If true, retrieve only active scheduled actions.
    ///            If false, retrieve only disabled scheduled actions. </p>
    public let active: Bool?
    /// <p>The end time in UTC of the scheduled action to retrieve.
    ///             Only active scheduled actions that have invocations before this time are retrieved.</p>
    public let endTime: Date?
    /// <p>List of scheduled action filters. </p>
    public let filters: [ScheduledActionFilter]?
    /// <p>An optional parameter that specifies the starting point to return a set of response
    ///             records. When the results of a <a>DescribeScheduledActions</a> request
    ///             exceed the value specified in <code>MaxRecords</code>, AWS returns a value in the
    ///             <code>Marker</code> field of the response. You can retrieve the next set of response
    ///             records by providing the returned marker value in the <code>Marker</code> parameter and
    ///             retrying the request. </p>
    public let marker: String?
    /// <p>The maximum number of response records to return in each call. If the number of
    ///             remaining response records exceeds the specified <code>MaxRecords</code> value, a value
    ///             is returned in a <code>marker</code> field of the response. You can retrieve the next
    ///             set of records by retrying the command with the returned marker value. </p>
    ///             <p>Default: <code>100</code>
    ///             </p>
    ///             <p>Constraints: minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The name of the scheduled action to retrieve. </p>
    public let scheduledActionName: String?
    /// <p>The start time in UTC of the scheduled actions to retrieve.
    ///             Only active scheduled actions that have invocations after this time are retrieved.</p>
    public let startTime: Date?
    /// <p>The type of the scheduled actions to retrieve. </p>
    public let targetActionType: ScheduledActionTypeValues?

    public init (
        active: Bool? = nil,
        endTime: Date? = nil,
        filters: [ScheduledActionFilter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        scheduledActionName: String? = nil,
        startTime: Date? = nil,
        targetActionType: ScheduledActionTypeValues? = nil
    )
    {
        self.active = active
        self.endTime = endTime
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.scheduledActionName = scheduledActionName
        self.startTime = startTime
        self.targetActionType = targetActionType
    }
}
