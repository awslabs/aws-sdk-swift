// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ClusterSnapshotCopyStatus: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destinationRegion = "DestinationRegion"
        case manualSnapshotRetentionPeriod = "ManualSnapshotRetentionPeriod"
        case retentionPeriod = "RetentionPeriod"
        case snapshotCopyGrantName = "SnapshotCopyGrantName"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let destinationRegion = destinationRegion {
            try container.encode(destinationRegion, forKey: Key("DestinationRegion"))
        }
        if manualSnapshotRetentionPeriod != 0 {
            try container.encode(manualSnapshotRetentionPeriod, forKey: Key("ManualSnapshotRetentionPeriod"))
        }
        if retentionPeriod != 0 {
            try container.encode(retentionPeriod, forKey: Key("RetentionPeriod"))
        }
        if let snapshotCopyGrantName = snapshotCopyGrantName {
            try container.encode(snapshotCopyGrantName, forKey: Key("SnapshotCopyGrantName"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationRegion)
        destinationRegion = destinationRegionDecoded
        let retentionPeriodDecoded = try containerValues.decode(Int.self, forKey: .retentionPeriod)
        retentionPeriod = retentionPeriodDecoded
        let manualSnapshotRetentionPeriodDecoded = try containerValues.decode(Int.self, forKey: .manualSnapshotRetentionPeriod)
        manualSnapshotRetentionPeriod = manualSnapshotRetentionPeriodDecoded
        let snapshotCopyGrantNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .snapshotCopyGrantName)
        snapshotCopyGrantName = snapshotCopyGrantNameDecoded
    }
}
