// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeBatchPredictionsOutputBody: Equatable {
    public let results: [BatchPrediction]?
    public let nextToken: String?
}

extension DescribeBatchPredictionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case results = "Results"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resultsContainer = try containerValues.decodeIfPresent([BatchPrediction].self, forKey: .results)
        var resultsDecoded0:[BatchPrediction]? = nil
        if let resultsContainer = resultsContainer {
            resultsDecoded0 = [BatchPrediction]()
            for structure0 in resultsContainer {
                resultsDecoded0?.append(structure0)
            }
        }
        results = resultsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
