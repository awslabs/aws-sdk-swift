// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the output of a <code>GetDataSource</code> operation and describes a <code>DataSource</code>.</p>
public struct GetDataSourceOutput: Equatable {
    /// <p>
    ///             The parameter is <code>true</code> if statistics need to be generated from the observation data.
    ///         </p>
    public let computeStatistics: Bool
    /// <p>The approximate CPU time in milliseconds that Amazon Machine Learning spent processing the <code>DataSource</code>, normalized and scaled on computation resources. <code>ComputeTime</code> is only available if the <code>DataSource</code> is in the <code>COMPLETED</code> state and the <code>ComputeStatistics</code> is set to true.</p>
    public let computeTime: Int?
    /// <p>The time that the <code>DataSource</code> was created. The time is expressed in epoch time.</p>
    public let createdAt: Date?
    /// <p>The AWS user account from which the <code>DataSource</code> was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.</p>
    public let createdByIamUser: String?
    /// <p>The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).</p>
    public let dataLocationS3: String?
    /// <p>A JSON string that represents the splitting and rearrangement requirement used when this <code>DataSource</code>
    ///             was created.</p>
    public let dataRearrangement: String?
    /// <p>The total size of observations in the data files.</p>
    public let dataSizeInBytes: Int?
    /// <p>The ID assigned to the <code>DataSource</code> at creation.  This value should be identical to the value of the <code>DataSourceId</code> in the request.</p>
    public let dataSourceId: String?
    /// <p>The schema used by all of the data files of this <code>DataSource</code>.</p>
    ///         <p>
    ///             <b>Note:</b> This parameter is provided as part of the verbose format.</p>
    public let dataSourceSchema: String?
    /// <p>The epoch time when Amazon Machine Learning marked the <code>DataSource</code> as <code>COMPLETED</code> or <code>FAILED</code>. <code>FinishedAt</code> is only available when the <code>DataSource</code> is in the <code>COMPLETED</code> or <code>FAILED</code> state.</p>
    public let finishedAt: Date?
    /// <p>The time of the most recent edit to the <code>DataSource</code>. The time is expressed in epoch time.</p>
    public let lastUpdatedAt: Date?
    /// <p>A link to the file containing logs of <code>CreateDataSourceFrom*</code> operations.</p>
    public let logUri: String?
    /// <p>The user-supplied description of the most recent details about creating the <code>DataSource</code>.</p>
    public let message: String?
    /// <p>A user-supplied name or description of the <code>DataSource</code>.</p>
    public let name: String?
    /// <p>The number of data files referenced by the <code>DataSource</code>.</p>
    public let numberOfFiles: Int?
    /// <p>The datasource details that are specific to Amazon RDS.</p>
    public let rDSMetadata: RDSMetadata?
    /// <p>Describes the <code>DataSource</code> details specific to Amazon Redshift.</p>
    public let redshiftMetadata: RedshiftMetadata?
    /// <p>The Amazon Resource Name (ARN) of an <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html#roles-about-termsandconcepts">AWS IAM Role</a>, such as the following: arn:aws:iam::account:role/rolename. </p>
    public let roleARN: String?
    /// <p>The epoch time when Amazon Machine Learning marked the <code>DataSource</code> as <code>INPROGRESS</code>. <code>StartedAt</code> isn't available if the <code>DataSource</code> is in the <code>PENDING</code> state.</p>
    public let startedAt: Date?
    /// <p>The current status of the <code>DataSource</code>. This element can have one of the following values:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PENDING</code> - Amazon ML submitted a request to create a <code>DataSource</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>INPROGRESS</code> - The creation process is underway.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> - The request to create a <code>DataSource</code> did not run to completion. It is not usable.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>COMPLETED</code> - The creation process completed successfully.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETED</code> - The <code>DataSource</code> is marked as deleted. It is not usable.</p>
    ///             </li>
    ///          </ul>
    public let status: EntityStatus?

    public init (
        computeStatistics: Bool = false,
        computeTime: Int? = nil,
        createdAt: Date? = nil,
        createdByIamUser: String? = nil,
        dataLocationS3: String? = nil,
        dataRearrangement: String? = nil,
        dataSizeInBytes: Int? = nil,
        dataSourceId: String? = nil,
        dataSourceSchema: String? = nil,
        finishedAt: Date? = nil,
        lastUpdatedAt: Date? = nil,
        logUri: String? = nil,
        message: String? = nil,
        name: String? = nil,
        numberOfFiles: Int? = nil,
        rDSMetadata: RDSMetadata? = nil,
        redshiftMetadata: RedshiftMetadata? = nil,
        roleARN: String? = nil,
        startedAt: Date? = nil,
        status: EntityStatus? = nil
    )
    {
        self.computeStatistics = computeStatistics
        self.computeTime = computeTime
        self.createdAt = createdAt
        self.createdByIamUser = createdByIamUser
        self.dataLocationS3 = dataLocationS3
        self.dataRearrangement = dataRearrangement
        self.dataSizeInBytes = dataSizeInBytes
        self.dataSourceId = dataSourceId
        self.dataSourceSchema = dataSourceSchema
        self.finishedAt = finishedAt
        self.lastUpdatedAt = lastUpdatedAt
        self.logUri = logUri
        self.message = message
        self.name = name
        self.numberOfFiles = numberOfFiles
        self.rDSMetadata = rDSMetadata
        self.redshiftMetadata = redshiftMetadata
        self.roleARN = roleARN
        self.startedAt = startedAt
        self.status = status
    }
}
