// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateBatchPredictionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case batchPredictionDataSourceId = "BatchPredictionDataSourceId"
        case batchPredictionId = "BatchPredictionId"
        case batchPredictionName = "BatchPredictionName"
        case mLModelId = "MLModelId"
        case outputUri = "OutputUri"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let batchPredictionDataSourceId = batchPredictionDataSourceId {
            try encodeContainer.encode(batchPredictionDataSourceId, forKey: .batchPredictionDataSourceId)
        }
        if let batchPredictionId = batchPredictionId {
            try encodeContainer.encode(batchPredictionId, forKey: .batchPredictionId)
        }
        if let batchPredictionName = batchPredictionName {
            try encodeContainer.encode(batchPredictionName, forKey: .batchPredictionName)
        }
        if let mLModelId = mLModelId {
            try encodeContainer.encode(mLModelId, forKey: .mLModelId)
        }
        if let outputUri = outputUri {
            try encodeContainer.encode(outputUri, forKey: .outputUri)
        }
    }
}
