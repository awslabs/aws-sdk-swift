// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDataSourceFromS3InputBody: Equatable {
    public let dataSourceId: String?
    public let dataSourceName: String?
    public let dataSpec: S3DataSpec?
    public let computeStatistics: Bool
}

extension CreateDataSourceFromS3InputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computeStatistics = "ComputeStatistics"
        case dataSourceId = "DataSourceId"
        case dataSourceName = "DataSourceName"
        case dataSpec = "DataSpec"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dataSourceIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataSourceId)
        dataSourceId = dataSourceIdDecoded
        let dataSourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataSourceName)
        dataSourceName = dataSourceNameDecoded
        let dataSpecDecoded = try containerValues.decodeIfPresent(S3DataSpec.self, forKey: .dataSpec)
        dataSpec = dataSpecDecoded
        let computeStatisticsDecoded = try containerValues.decode(Bool.self, forKey: .computeStatistics)
        computeStatistics = computeStatisticsDecoded
    }
}
