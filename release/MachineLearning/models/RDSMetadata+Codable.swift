// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RDSMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataPipelineId = "DataPipelineId"
        case database = "Database"
        case databaseUserName = "DatabaseUserName"
        case resourceRole = "ResourceRole"
        case selectSqlQuery = "SelectSqlQuery"
        case serviceRole = "ServiceRole"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataPipelineId = dataPipelineId {
            try encodeContainer.encode(dataPipelineId, forKey: .dataPipelineId)
        }
        if let database = database {
            try encodeContainer.encode(database, forKey: .database)
        }
        if let databaseUserName = databaseUserName {
            try encodeContainer.encode(databaseUserName, forKey: .databaseUserName)
        }
        if let resourceRole = resourceRole {
            try encodeContainer.encode(resourceRole, forKey: .resourceRole)
        }
        if let selectSqlQuery = selectSqlQuery {
            try encodeContainer.encode(selectSqlQuery, forKey: .selectSqlQuery)
        }
        if let serviceRole = serviceRole {
            try encodeContainer.encode(serviceRole, forKey: .serviceRole)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let databaseDecoded = try containerValues.decodeIfPresent(RDSDatabase.self, forKey: .database)
        database = databaseDecoded
        let databaseUserNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .databaseUserName)
        databaseUserName = databaseUserNameDecoded
        let selectSqlQueryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .selectSqlQuery)
        selectSqlQuery = selectSqlQueryDecoded
        let resourceRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceRole)
        resourceRole = resourceRoleDecoded
        let serviceRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serviceRole)
        serviceRole = serviceRoleDecoded
        let dataPipelineIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dataPipelineId)
        dataPipelineId = dataPipelineIdDecoded
    }
}
