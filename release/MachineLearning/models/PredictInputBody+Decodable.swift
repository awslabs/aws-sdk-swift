// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PredictInputBody: Equatable {
    public let mLModelId: String?
    public let record: [String:String]?
    public let predictEndpoint: String?
}

extension PredictInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case mLModelId = "MLModelId"
        case predictEndpoint = "PredictEndpoint"
        case record = "Record"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mLModelIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mLModelId)
        mLModelId = mLModelIdDecoded
        let recordContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .record)
        var recordDecoded0: [String:String]? = nil
        if let recordContainer = recordContainer {
            recordDecoded0 = [String:String]()
            for (key0, variablevalue0) in recordContainer {
                recordDecoded0?[key0] = variablevalue0
            }
        }
        record = recordDecoded0
        let predictEndpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .predictEndpoint)
        predictEndpoint = predictEndpointDecoded
    }
}
