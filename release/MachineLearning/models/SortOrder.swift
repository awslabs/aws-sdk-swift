// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The sort order specified in a listing condition. Possible values include the following:</p>
///         <ul>
///             <li>
///                <p>
///                   <code>asc</code> - Present the information in ascending order (from A-Z).</p>
///             </li>
///             <li>
///                <p>
///                   <code>dsc</code> - Present the information in descending order (from Z-A).</p>
///             </li>
///          </ul>
public enum SortOrder {
    case asc
    case dsc
    case sdkUnknown(String)
}

extension SortOrder : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SortOrder] {
        return [
            .asc,
            .dsc,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .asc: return "asc"
        case .dsc: return "dsc"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SortOrder(rawValue: rawValue) ?? SortOrder.sdkUnknown(rawValue)
    }
}
