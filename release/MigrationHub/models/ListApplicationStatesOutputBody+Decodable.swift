// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationStatesOutputBody: Equatable {
    public let applicationStateList: [ApplicationState]?
    public let nextToken: String?
}

extension ListApplicationStatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationStateList = "ApplicationStateList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationStateListContainer = try containerValues.decodeIfPresent([ApplicationState].self, forKey: .applicationStateList)
        var applicationStateListDecoded0:[ApplicationState]? = nil
        if let applicationStateListContainer = applicationStateListContainer {
            applicationStateListDecoded0 = [ApplicationState]()
            for structure0 in applicationStateListContainer {
                applicationStateListDecoded0?.append(structure0)
            }
        }
        applicationStateList = applicationStateListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
