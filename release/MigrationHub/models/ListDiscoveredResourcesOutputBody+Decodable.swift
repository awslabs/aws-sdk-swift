// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDiscoveredResourcesOutputBody: Equatable {
    public let nextToken: String?
    public let discoveredResourceList: [DiscoveredResource]?
}

extension ListDiscoveredResourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case discoveredResourceList = "DiscoveredResourceList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let discoveredResourceListContainer = try containerValues.decodeIfPresent([DiscoveredResource].self, forKey: .discoveredResourceList)
        var discoveredResourceListDecoded0:[DiscoveredResource]? = nil
        if let discoveredResourceListContainer = discoveredResourceListContainer {
            discoveredResourceListDecoded0 = [DiscoveredResource]()
            for structure0 in discoveredResourceListContainer {
                discoveredResourceListDecoded0?.append(structure0)
            }
        }
        discoveredResourceList = discoveredResourceListDecoded0
    }
}
