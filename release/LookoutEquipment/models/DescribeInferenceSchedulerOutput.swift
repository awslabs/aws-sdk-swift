// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeInferenceSchedulerOutput: Equatable {
    /// <p>Specifies the time at which the inference scheduler was created. </p>
    public let createdAt: Date?
    /// <p> A period of time (in minutes) by which inference on the data is delayed after the data
    ///          starts. For instance, if you select an offset delay time of five minutes, inference will
    ///          not begin on the data until the first data measurement after the five minute mark. For example, if
    ///          five minutes is selected, the inference scheduler will wake up at the configured frequency with the
    ///          additional five minute delay time to check the customer S3 bucket. The customer can upload data at
    ///          the same frequency and they don't need to stop and restart the scheduler when uploading new data.</p>
    public let dataDelayOffsetInMinutes: Int?
    /// <p> Specifies configuration information for the input data for the inference scheduler,
    ///          including delimiter, format, and dataset location. </p>
    public let dataInputConfiguration: InferenceInputConfiguration?
    /// <p> Specifies information for the output results for the inference scheduler,
    ///          including the output S3 location. </p>
    public let dataOutputConfiguration: InferenceOutputConfiguration?
    /// <p>Specifies how often data is uploaded to the source S3 bucket for the input data. This
    ///          value is the length of time between data uploads. For instance, if you select 5 minutes,
    ///          Amazon Lookout for Equipment will upload the real-time data to the source bucket once every 5 minutes. This
    ///          frequency also determines how often Amazon Lookout for Equipment starts a scheduled inference on your data.
    ///          In this example, it starts once every 5 minutes. </p>
    public let dataUploadFrequency: DataUploadFrequency?
    /// <p>The Amazon Resource Name (ARN) of the inference scheduler being described. </p>
    public let inferenceSchedulerArn: String?
    /// <p>The name of the inference scheduler being described. </p>
    public let inferenceSchedulerName: String?
    /// <p>The Amazon Resource Name (ARN) of the ML model of the inference scheduler being
    ///          described. </p>
    public let modelArn: String?
    /// <p>The name of the ML model of the inference scheduler being described. </p>
    public let modelName: String?
    /// <p> The Amazon Resource Name (ARN) of a role with permission to access the data source for
    ///          the inference scheduler being described. </p>
    public let roleArn: String?
    /// <p>Provides the identifier of the AWS KMS customer master key (CMK) used to encrypt inference scheduler data by Amazon Lookout for Equipment. </p>
    public let serverSideKmsKeyId: String?
    /// <p>Indicates the status of the inference scheduler. </p>
    public let status: InferenceSchedulerStatus?
    /// <p>Specifies the time at which the inference scheduler was last updated, if it was. </p>
    public let updatedAt: Date?

    public init (
        createdAt: Date? = nil,
        dataDelayOffsetInMinutes: Int? = nil,
        dataInputConfiguration: InferenceInputConfiguration? = nil,
        dataOutputConfiguration: InferenceOutputConfiguration? = nil,
        dataUploadFrequency: DataUploadFrequency? = nil,
        inferenceSchedulerArn: String? = nil,
        inferenceSchedulerName: String? = nil,
        modelArn: String? = nil,
        modelName: String? = nil,
        roleArn: String? = nil,
        serverSideKmsKeyId: String? = nil,
        status: InferenceSchedulerStatus? = nil,
        updatedAt: Date? = nil
    )
    {
        self.createdAt = createdAt
        self.dataDelayOffsetInMinutes = dataDelayOffsetInMinutes
        self.dataInputConfiguration = dataInputConfiguration
        self.dataOutputConfiguration = dataOutputConfiguration
        self.dataUploadFrequency = dataUploadFrequency
        self.inferenceSchedulerArn = inferenceSchedulerArn
        self.inferenceSchedulerName = inferenceSchedulerName
        self.modelArn = modelArn
        self.modelName = modelName
        self.roleArn = roleArn
        self.serverSideKmsKeyId = serverSideKmsKeyId
        self.status = status
        self.updatedAt = updatedAt
    }
}
