// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDataIngestionJobOutputBody: Equatable {
    public let jobId: String?
    public let datasetArn: String?
    public let ingestionInputConfiguration: IngestionInputConfiguration?
    public let roleArn: String?
    public let createdAt: Date?
    public let status: IngestionJobStatus?
    public let failedReason: String?
}

extension DescribeDataIngestionJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case createdAt = "CreatedAt"
        case datasetArn = "DatasetArn"
        case failedReason = "FailedReason"
        case ingestionInputConfiguration = "IngestionInputConfiguration"
        case jobId = "JobId"
        case roleArn = "RoleArn"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let datasetArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetArn)
        datasetArn = datasetArnDecoded
        let ingestionInputConfigurationDecoded = try containerValues.decodeIfPresent(IngestionInputConfiguration.self, forKey: .ingestionInputConfiguration)
        ingestionInputConfiguration = ingestionInputConfigurationDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let statusDecoded = try containerValues.decodeIfPresent(IngestionJobStatus.self, forKey: .status)
        status = statusDecoded
        let failedReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .failedReason)
        failedReason = failedReasonDecoded
    }
}
