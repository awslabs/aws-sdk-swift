// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelsInputBody: Equatable {
    public let nextToken: String?
    public let maxResults: Int?
    public let status: ModelStatus?
    public let modelNameBeginsWith: String?
    public let datasetNameBeginsWith: String?
}

extension ListModelsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetNameBeginsWith = "DatasetNameBeginsWith"
        case maxResults = "MaxResults"
        case modelNameBeginsWith = "ModelNameBeginsWith"
        case nextToken = "NextToken"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let statusDecoded = try containerValues.decodeIfPresent(ModelStatus.self, forKey: .status)
        status = statusDecoded
        let modelNameBeginsWithDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelNameBeginsWith)
        modelNameBeginsWith = modelNameBeginsWithDecoded
        let datasetNameBeginsWithDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetNameBeginsWith)
        datasetNameBeginsWith = datasetNameBeginsWithDecoded
    }
}
