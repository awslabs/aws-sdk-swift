// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListModelsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case datasetNameBeginsWith = "DatasetNameBeginsWith"
        case maxResults = "MaxResults"
        case modelNameBeginsWith = "ModelNameBeginsWith"
        case nextToken = "NextToken"
        case status = "Status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let datasetNameBeginsWith = datasetNameBeginsWith {
            try encodeContainer.encode(datasetNameBeginsWith, forKey: .datasetNameBeginsWith)
        }
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let modelNameBeginsWith = modelNameBeginsWith {
            try encodeContainer.encode(modelNameBeginsWith, forKey: .modelNameBeginsWith)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }
}
