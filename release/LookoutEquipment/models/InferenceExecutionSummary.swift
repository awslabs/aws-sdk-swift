// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about the specific inference execution, including input and output
///          data configuration, inference scheduling information, status, and so on. </p>
public struct InferenceExecutionSummary: Equatable {
    /// <p>
    ///       </p>
    public let customerResultObject: S3Object?
    /// <p>Indicates the time reference in the dataset at which the inference execution stopped.
    ///       </p>
    public let dataEndTime: Date?
    /// <p> Specifies configuration information for the input data for the inference scheduler,
    ///          including delimiter, format, and dataset location. </p>
    public let dataInputConfiguration: InferenceInputConfiguration?
    /// <p> Specifies configuration information for the output results from for the inference
    ///          execution, including the output S3 location. </p>
    public let dataOutputConfiguration: InferenceOutputConfiguration?
    /// <p>Indicates the time reference in the dataset at which the inference execution began.
    ///       </p>
    public let dataStartTime: Date?
    /// <p> Specifies the reason for failure when an inference execution has failed. </p>
    public let failedReason: String?
    /// <p> The Amazon Resource Name (ARN) of the inference scheduler being used for the inference
    ///          execution. </p>
    public let inferenceSchedulerArn: String?
    /// <p>The name of the inference scheduler being used for the inference execution. </p>
    public let inferenceSchedulerName: String?
    /// <p>The Amazon Resource Name (ARN) of the ML model used for the inference execution. </p>
    public let modelArn: String?
    /// <p>The name of the ML model being used for the inference execution. </p>
    public let modelName: String?
    /// <p>Indicates the start time at which the inference scheduler began the specific inference
    ///          execution. </p>
    public let scheduledStartTime: Date?
    /// <p>Indicates the status of the inference execution. </p>
    public let status: InferenceExecutionStatus?

    public init (
        customerResultObject: S3Object? = nil,
        dataEndTime: Date? = nil,
        dataInputConfiguration: InferenceInputConfiguration? = nil,
        dataOutputConfiguration: InferenceOutputConfiguration? = nil,
        dataStartTime: Date? = nil,
        failedReason: String? = nil,
        inferenceSchedulerArn: String? = nil,
        inferenceSchedulerName: String? = nil,
        modelArn: String? = nil,
        modelName: String? = nil,
        scheduledStartTime: Date? = nil,
        status: InferenceExecutionStatus? = nil
    )
    {
        self.customerResultObject = customerResultObject
        self.dataEndTime = dataEndTime
        self.dataInputConfiguration = dataInputConfiguration
        self.dataOutputConfiguration = dataOutputConfiguration
        self.dataStartTime = dataStartTime
        self.failedReason = failedReason
        self.inferenceSchedulerArn = inferenceSchedulerArn
        self.inferenceSchedulerName = inferenceSchedulerName
        self.modelArn = modelArn
        self.modelName = modelName
        self.scheduledStartTime = scheduledStartTime
        self.status = status
    }
}
