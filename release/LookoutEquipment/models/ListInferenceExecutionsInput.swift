// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListInferenceExecutionsInput: Equatable {
    /// <p>The time reference in the inferenced dataset before which Amazon Lookout for Equipment stopped the
    ///          inference execution. </p>
    public let dataEndTimeBefore: Date?
    /// <p>The time reference in the inferenced dataset after which Amazon Lookout for Equipment started the
    ///          inference execution. </p>
    public let dataStartTimeAfter: Date?
    /// <p>The name of the inference scheduler for the inference execution listed. </p>
    public let inferenceSchedulerName: String?
    /// <p>Specifies the maximum number of inference executions to list. </p>
    public let maxResults: Int?
    /// <p>An opaque pagination token indicating where to continue the listing of inference
    ///          executions.</p>
    public let nextToken: String?
    /// <p>The status of the inference execution. </p>
    public let status: InferenceExecutionStatus?

    public init (
        dataEndTimeBefore: Date? = nil,
        dataStartTimeAfter: Date? = nil,
        inferenceSchedulerName: String? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil,
        status: InferenceExecutionStatus? = nil
    )
    {
        self.dataEndTimeBefore = dataEndTimeBefore
        self.dataStartTimeAfter = dataStartTimeAfter
        self.inferenceSchedulerName = inferenceSchedulerName
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.status = status
    }
}
