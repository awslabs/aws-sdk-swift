// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListModelsOutputBody: Equatable {
    public let nextToken: String?
    public let modelSummaries: [ModelSummary]?
}

extension ListModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case modelSummaries = "ModelSummaries"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let modelSummariesContainer = try containerValues.decodeIfPresent([ModelSummary].self, forKey: .modelSummaries)
        var modelSummariesDecoded0:[ModelSummary]? = nil
        if let modelSummariesContainer = modelSummariesContainer {
            modelSummariesDecoded0 = [ModelSummary]()
            for structure0 in modelSummariesContainer {
                modelSummariesDecoded0?.append(structure0)
            }
        }
        modelSummaries = modelSummariesDecoded0
    }
}
