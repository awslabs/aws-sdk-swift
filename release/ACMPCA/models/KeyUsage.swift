// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Defines one or more purposes for which the key contained in the certificate can be
/// 			used. Default value for each option is false.</p>
public struct KeyUsage: Equatable {
    /// <p>Key can be used to sign CRLs.</p>
    public let cRLSign: Bool
    /// <p>Key can be used to decipher data.</p>
    public let dataEncipherment: Bool
    /// <p>Key can be used only to decipher data.</p>
    public let decipherOnly: Bool
    /// <p> Key can be used for digital signing.</p>
    public let digitalSignature: Bool
    /// <p>Key can be used only to encipher data.</p>
    public let encipherOnly: Bool
    /// <p>Key can be used in a key-agreement protocol.</p>
    public let keyAgreement: Bool
    /// <p>Key can be used to sign certificates.</p>
    public let keyCertSign: Bool
    /// <p>Key can be used to encipher data.</p>
    public let keyEncipherment: Bool
    /// <p>Key can be used for non-repudiation.</p>
    public let nonRepudiation: Bool

    public init (
        cRLSign: Bool = false,
        dataEncipherment: Bool = false,
        decipherOnly: Bool = false,
        digitalSignature: Bool = false,
        encipherOnly: Bool = false,
        keyAgreement: Bool = false,
        keyCertSign: Bool = false,
        keyEncipherment: Bool = false,
        nonRepudiation: Bool = false
    )
    {
        self.cRLSign = cRLSign
        self.dataEncipherment = dataEncipherment
        self.decipherOnly = decipherOnly
        self.digitalSignature = digitalSignature
        self.encipherOnly = encipherOnly
        self.keyAgreement = keyAgreement
        self.keyCertSign = keyCertSign
        self.keyEncipherment = keyEncipherment
        self.nonRepudiation = nonRepudiation
    }
}
