// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum KeyAlgorithm {
    case ecPrime256v1
    case ecSecp384r1
    case rsa2048
    case rsa4096
    case sdkUnknown(String)
}

extension KeyAlgorithm : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [KeyAlgorithm] {
        return [
            .ecPrime256v1,
            .ecSecp384r1,
            .rsa2048,
            .rsa4096,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ecPrime256v1: return "EC_prime256v1"
        case .ecSecp384r1: return "EC_secp384r1"
        case .rsa2048: return "RSA_2048"
        case .rsa4096: return "RSA_4096"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = KeyAlgorithm(rawValue: rawValue) ?? KeyAlgorithm.sdkUnknown(rawValue)
    }
}
