// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCertificateOutputBody: Equatable {
    public let certificate: String?
    public let certificateChain: String?
}

extension GetCertificateOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificate = "Certificate"
        case certificateChain = "CertificateChain"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificate)
        certificate = certificateDecoded
        let certificateChainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateChain)
        certificateChain = certificateChainDecoded
    }
}
