// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCertificateAuthorityAuditReportInputBody: Equatable {
    public let certificateAuthorityArn: String?
    public let s3BucketName: String?
    public let auditReportResponseFormat: AuditReportResponseFormat?
}

extension CreateCertificateAuthorityAuditReportInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case auditReportResponseFormat = "AuditReportResponseFormat"
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case s3BucketName = "S3BucketName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateAuthorityArn)
        certificateAuthorityArn = certificateAuthorityArnDecoded
        let s3BucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3BucketName)
        s3BucketName = s3BucketNameDecoded
        let auditReportResponseFormatDecoded = try containerValues.decodeIfPresent(AuditReportResponseFormat.self, forKey: .auditReportResponseFormat)
        auditReportResponseFormat = auditReportResponseFormatDecoded
    }
}
