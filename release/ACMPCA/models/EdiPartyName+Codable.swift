// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EdiPartyName: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case nameAssigner = "NameAssigner"
        case partyName = "PartyName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nameAssigner = nameAssigner {
            try encodeContainer.encode(nameAssigner, forKey: .nameAssigner)
        }
        if let partyName = partyName {
            try encodeContainer.encode(partyName, forKey: .partyName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .partyName)
        partyName = partyNameDecoded
        let nameAssignerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nameAssigner)
        nameAssigner = nameAssignerDecoded
    }
}
