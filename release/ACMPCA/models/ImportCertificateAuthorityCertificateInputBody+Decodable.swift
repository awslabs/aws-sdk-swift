// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ImportCertificateAuthorityCertificateInputBody: Equatable {
    public let certificateAuthorityArn: String?
    public let certificate: Data?
    public let certificateChain: Data?
}

extension ImportCertificateAuthorityCertificateInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificate = "Certificate"
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case certificateChain = "CertificateChain"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateAuthorityArn)
        certificateAuthorityArn = certificateAuthorityArnDecoded
        let certificateDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .certificate)
        certificate = certificateDecoded
        let certificateChainDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .certificateChain)
        certificateChain = certificateChainDecoded
    }
}
