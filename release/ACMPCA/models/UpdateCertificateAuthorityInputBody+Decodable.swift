// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateCertificateAuthorityInputBody: Equatable {
    public let certificateAuthorityArn: String?
    public let revocationConfiguration: RevocationConfiguration?
    public let status: CertificateAuthorityStatus?
}

extension UpdateCertificateAuthorityInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case revocationConfiguration = "RevocationConfiguration"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let certificateAuthorityArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .certificateAuthorityArn)
        certificateAuthorityArn = certificateAuthorityArnDecoded
        let revocationConfigurationDecoded = try containerValues.decodeIfPresent(RevocationConfiguration.self, forKey: .revocationConfiguration)
        revocationConfiguration = revocationConfigurationDecoded
        let statusDecoded = try containerValues.decodeIfPresent(CertificateAuthorityStatus.self, forKey: .status)
        status = statusDecoded
    }
}
