// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportCertificateAuthorityCertificateInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case certificate = "Certificate"
        case certificateAuthorityArn = "CertificateAuthorityArn"
        case certificateChain = "CertificateChain"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let certificate = certificate {
            try encodeContainer.encode(certificate.base64EncodedString(), forKey: .certificate)
        }
        if let certificateAuthorityArn = certificateAuthorityArn {
            try encodeContainer.encode(certificateAuthorityArn, forKey: .certificateAuthorityArn)
        }
        if let certificateChain = certificateChain {
            try encodeContainer.encode(certificateChain.base64EncodedString(), forKey: .certificateChain)
        }
    }
}
