// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the certificate subject. The <code>Subject</code> field in
/// 			the certificate identifies the entity that owns or controls the public key in the
/// 			certificate. The entity can be a user, computer, device, or service. The <code>Subject
/// 			</code>must contain an X.500 distinguished name (DN). A DN is a sequence of relative
/// 			distinguished names (RDNs). The RDNs are separated by commas in the certificate.</p>
public struct ASN1Subject: Equatable {
    /// <p>For CA and end-entity certificates in a private PKI, the common name (CN) can be any
    /// 			string within the length limit. </p>
    /// 		       <p>Note: In publicly trusted certificates, the common name must be a fully qualified
    /// 			domain name (FQDN) associated with the certificate subject.</p>
    public let commonName: String?
    /// <p>Two-digit code that specifies the country in which the certificate subject
    /// 			located.</p>
    public let country: String?
    /// <p>Disambiguating information for the certificate subject.</p>
    public let distinguishedNameQualifier: String?
    /// <p>Typically a qualifier appended to the name of an individual. Examples include Jr. for
    /// 			junior, Sr. for senior, and III for third.</p>
    public let generationQualifier: String?
    /// <p>First name.</p>
    public let givenName: String?
    /// <p>Concatenation that typically contains the first letter of the <b>GivenName</b>, the first letter of the middle name if one exists, and the
    /// 			first letter of the <b>Surname</b>.</p>
    public let initials: String?
    /// <p>The locality (such as a city or town) in which the certificate subject is
    /// 			located.</p>
    public let locality: String?
    /// <p>Legal name of the organization with which the certificate subject is affiliated.
    /// 		</p>
    public let organization: String?
    /// <p>A subdivision or unit of the organization (such as sales or finance) with which the
    /// 			certificate subject is affiliated.</p>
    public let organizationalUnit: String?
    /// <p>Typically a shortened version of a longer <b>GivenName</b>.
    /// 			For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth,
    /// 			Liz, or Eliza.</p>
    public let pseudonym: String?
    /// <p>The certificate serial number.</p>
    public let serialNumber: String?
    /// <p>State in which the subject of the certificate is located.</p>
    public let state: String?
    /// <p>Family name. In the US and the UK, for example, the surname of an individual is
    /// 			ordered last. In Asian cultures the surname is typically ordered first.</p>
    public let surname: String?
    /// <p>A title such as Mr. or Ms., which is pre-pended to the name to refer formally to the
    /// 			certificate subject.</p>
    public let title: String?

    public init (
        commonName: String? = nil,
        country: String? = nil,
        distinguishedNameQualifier: String? = nil,
        generationQualifier: String? = nil,
        givenName: String? = nil,
        initials: String? = nil,
        locality: String? = nil,
        organization: String? = nil,
        organizationalUnit: String? = nil,
        pseudonym: String? = nil,
        serialNumber: String? = nil,
        state: String? = nil,
        surname: String? = nil,
        title: String? = nil
    )
    {
        self.commonName = commonName
        self.country = country
        self.distinguishedNameQualifier = distinguishedNameQualifier
        self.generationQualifier = generationQualifier
        self.givenName = givenName
        self.initials = initials
        self.locality = locality
        self.organization = organization
        self.organizationalUnit = organizationalUnit
        self.pseudonym = pseudonym
        self.serialNumber = serialNumber
        self.state = state
        self.surname = surname
        self.title = title
    }
}
