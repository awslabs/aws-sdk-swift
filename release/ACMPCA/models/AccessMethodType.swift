// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum AccessMethodType {
    case caRepository
    case resourcePkiManifest
    case resourcePkiNotify
    case sdkUnknown(String)
}

extension AccessMethodType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AccessMethodType] {
        return [
            .caRepository,
            .resourcePkiManifest,
            .resourcePkiNotify,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .caRepository: return "CA_REPOSITORY"
        case .resourcePkiManifest: return "RESOURCE_PKI_MANIFEST"
        case .resourcePkiNotify: return "RESOURCE_PKI_NOTIFY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AccessMethodType(rawValue: rawValue) ?? AccessMethodType.sdkUnknown(rawValue)
    }
}
