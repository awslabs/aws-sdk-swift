// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListResourceDelegatesOutputBody: Equatable {
    public let delegates: [Delegate]?
    public let nextToken: String?
}

extension ListResourceDelegatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case delegates = "Delegates"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let delegatesContainer = try containerValues.decodeIfPresent([Delegate].self, forKey: .delegates)
        var delegatesDecoded0:[Delegate]? = nil
        if let delegatesContainer = delegatesContainer {
            delegatesDecoded0 = [Delegate]()
            for structure0 in delegatesContainer {
                delegatesDecoded0?.append(structure0)
            }
        }
        delegates = delegatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
