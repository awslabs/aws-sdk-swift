// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOrganizationsOutputBody: Equatable {
    public let organizationSummaries: [OrganizationSummary]?
    public let nextToken: String?
}

extension ListOrganizationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case organizationSummaries = "OrganizationSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationSummariesContainer = try containerValues.decodeIfPresent([OrganizationSummary].self, forKey: .organizationSummaries)
        var organizationSummariesDecoded0:[OrganizationSummary]? = nil
        if let organizationSummariesContainer = organizationSummariesContainer {
            organizationSummariesDecoded0 = [OrganizationSummary]()
            for structure0 in organizationSummariesContainer {
                organizationSummariesDecoded0?.append(structure0)
            }
        }
        organizationSummaries = organizationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
