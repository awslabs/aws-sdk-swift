// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMobileDeviceAccessEffectOutputBody: Equatable {
    public let effect: MobileDeviceAccessRuleEffect?
    public let matchedRules: [MobileDeviceAccessMatchedRule]?
}

extension GetMobileDeviceAccessEffectOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case effect = "Effect"
        case matchedRules = "MatchedRules"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectDecoded = try containerValues.decodeIfPresent(MobileDeviceAccessRuleEffect.self, forKey: .effect)
        effect = effectDecoded
        let matchedRulesContainer = try containerValues.decodeIfPresent([MobileDeviceAccessMatchedRule].self, forKey: .matchedRules)
        var matchedRulesDecoded0:[MobileDeviceAccessMatchedRule]? = nil
        if let matchedRulesContainer = matchedRulesContainer {
            matchedRulesDecoded0 = [MobileDeviceAccessMatchedRule]()
            for structure0 in matchedRulesContainer {
                matchedRulesDecoded0?.append(structure0)
            }
        }
        matchedRules = matchedRulesDecoded0
    }
}
