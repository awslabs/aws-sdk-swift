// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccessControlEffectOutputBody: Equatable {
    public let effect: AccessControlRuleEffect?
    public let matchedRules: [String]?
}

extension GetAccessControlEffectOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case effect = "Effect"
        case matchedRules = "MatchedRules"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let effectDecoded = try containerValues.decodeIfPresent(AccessControlRuleEffect.self, forKey: .effect)
        effect = effectDecoded
        let matchedRulesContainer = try containerValues.decodeIfPresent([String].self, forKey: .matchedRules)
        var matchedRulesDecoded0:[String]? = nil
        if let matchedRulesContainer = matchedRulesContainer {
            matchedRulesDecoded0 = [String]()
            for string0 in matchedRulesContainer {
                matchedRulesDecoded0?.append(string0)
            }
        }
        matchedRules = matchedRulesDecoded0
    }
}
