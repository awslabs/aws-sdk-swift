// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccessControlRulesOutputBody: Equatable {
    public let rules: [AccessControlRule]?
}

extension ListAccessControlRulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case rules = "Rules"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rulesContainer = try containerValues.decodeIfPresent([AccessControlRule].self, forKey: .rules)
        var rulesDecoded0:[AccessControlRule]? = nil
        if let rulesContainer = rulesContainer {
            rulesDecoded0 = [AccessControlRule]()
            for structure0 in rulesContainer {
                rulesDecoded0?.append(structure0)
            }
        }
        rules = rulesDecoded0
    }
}
