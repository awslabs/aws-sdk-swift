// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FolderName {
    case deletedItems
    case drafts
    case inbox
    case junkEmail
    case sentItems
    case sdkUnknown(String)
}

extension FolderName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FolderName] {
        return [
            .deletedItems,
            .drafts,
            .inbox,
            .junkEmail,
            .sentItems,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .deletedItems: return "DELETED_ITEMS"
        case .drafts: return "DRAFTS"
        case .inbox: return "INBOX"
        case .junkEmail: return "JUNK_EMAIL"
        case .sentItems: return "SENT_ITEMS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FolderName(rawValue: rawValue) ?? FolderName.sdkUnknown(rawValue)
    }
}
