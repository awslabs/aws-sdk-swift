// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMailboxExportJobsOutputBody: Equatable {
    public let jobs: [MailboxExportJob]?
    public let nextToken: String?
}

extension ListMailboxExportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobs = "Jobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobsContainer = try containerValues.decodeIfPresent([MailboxExportJob].self, forKey: .jobs)
        var jobsDecoded0:[MailboxExportJob]? = nil
        if let jobsContainer = jobsContainer {
            jobsDecoded0 = [MailboxExportJob]()
            for structure0 in jobsContainer {
                jobsDecoded0?.append(structure0)
            }
        }
        jobs = jobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
