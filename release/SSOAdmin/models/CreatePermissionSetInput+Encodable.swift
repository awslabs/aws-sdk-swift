// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreatePermissionSetInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case instanceArn = "InstanceArn"
        case name = "Name"
        case relayState = "RelayState"
        case sessionDuration = "SessionDuration"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let instanceArn = instanceArn {
            try encodeContainer.encode(instanceArn, forKey: .instanceArn)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let relayState = relayState {
            try encodeContainer.encode(relayState, forKey: .relayState)
        }
        if let sessionDuration = sessionDuration {
            try encodeContainer.encode(sessionDuration, forKey: .sessionDuration)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
