// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAccountAssignmentsOutputBody: Equatable {
    public let accountAssignments: [AccountAssignment]?
    public let nextToken: String?
}

extension ListAccountAssignmentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountAssignments = "AccountAssignments"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountAssignmentsContainer = try containerValues.decodeIfPresent([AccountAssignment].self, forKey: .accountAssignments)
        var accountAssignmentsDecoded0:[AccountAssignment]? = nil
        if let accountAssignmentsContainer = accountAssignmentsContainer {
            accountAssignmentsDecoded0 = [AccountAssignment]()
            for structure0 in accountAssignmentsContainer {
                accountAssignmentsDecoded0?.append(structure0)
            }
        }
        accountAssignments = accountAssignmentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
