// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies when to create snapshots of EBS volumes.</p>
/// 		       <p>You must specify either a Cron expression or an interval, interval unit, and start
/// 			time. You cannot specify both.</p>
public struct CreateRule: Equatable {
    /// <p>The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1
    /// 			year. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html#CronExpressions">Cron
    /// 				expressions</a> in the <i>Amazon CloudWatch User Guide</i>.</p>
    public let cronExpression: String?
    /// <p>The interval between snapshots. The supported values are 1, 2, 3, 4, 6, 8, 12, and
    /// 			24.</p>
    public let interval: Int
    /// <p>The interval unit.</p>
    public let intervalUnit: IntervalUnitValues?
    /// <p>Specifies the destination for snapshots created by the policy. To create snapshots in the same
    /// 			Region as the source resource, specify <code>CLOUD</code>. To create snapshots on the same
    /// 			Outpost as the source resource, specify <code>OUTPOST_LOCAL</code>. If you omit this
    /// 			parameter, <code>CLOUD</code> is used by default.</p>
    /// 		       <p>If the policy targets resources in an AWS Region, then you must create snapshots in the same
    /// 			Region as the source resource. </p>
    /// 		       <p>If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost
    /// 			as the source resource, or in the Region of that Outpost.</p>
    public let location: LocationValues?
    /// <p>The time, in UTC, to start the operation. The supported format is hh:mm.</p>
    /// 		       <p>The operation occurs within a one-hour window following the specified time. If you do
    /// 			not specify a time, Amazon DLM selects a time within the next 24 hours.</p>
    public let times: [String]?

    public init (
        cronExpression: String? = nil,
        interval: Int = 0,
        intervalUnit: IntervalUnitValues? = nil,
        location: LocationValues? = nil,
        times: [String]? = nil
    )
    {
        self.cronExpression = cronExpression
        self.interval = interval
        self.intervalUnit = intervalUnit
        self.location = location
        self.times = times
    }
}
