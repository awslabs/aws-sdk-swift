// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum GettablePolicyStateValues {
    case disabled
    case enabled
    case error
    case sdkUnknown(String)
}

extension GettablePolicyStateValues : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [GettablePolicyStateValues] {
        return [
            .disabled,
            .enabled,
            .error,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .disabled: return "DISABLED"
        case .enabled: return "ENABLED"
        case .error: return "ERROR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = GettablePolicyStateValues(rawValue: rawValue) ?? GettablePolicyStateValues.sdkUnknown(rawValue)
    }
}
