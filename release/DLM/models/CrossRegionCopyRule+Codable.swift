// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CrossRegionCopyRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cmkArn = "CmkArn"
        case copyTags = "CopyTags"
        case encrypted = "Encrypted"
        case retainRule = "RetainRule"
        case target = "Target"
        case targetRegion = "TargetRegion"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cmkArn = cmkArn {
            try encodeContainer.encode(cmkArn, forKey: .cmkArn)
        }
        if let copyTags = copyTags {
            try encodeContainer.encode(copyTags, forKey: .copyTags)
        }
        if let encrypted = encrypted {
            try encodeContainer.encode(encrypted, forKey: .encrypted)
        }
        if let retainRule = retainRule {
            try encodeContainer.encode(retainRule, forKey: .retainRule)
        }
        if let target = target {
            try encodeContainer.encode(target, forKey: .target)
        }
        if let targetRegion = targetRegion {
            try encodeContainer.encode(targetRegion, forKey: .targetRegion)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetRegion)
        targetRegion = targetRegionDecoded
        let targetDecoded = try containerValues.decodeIfPresent(String.self, forKey: .target)
        target = targetDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
        let cmkArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cmkArn)
        cmkArn = cmkArnDecoded
        let copyTagsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .copyTags)
        copyTags = copyTagsDecoded
        let retainRuleDecoded = try containerValues.decodeIfPresent(CrossRegionCopyRetainRule.self, forKey: .retainRule)
        retainRule = retainRuleDecoded
    }
}
