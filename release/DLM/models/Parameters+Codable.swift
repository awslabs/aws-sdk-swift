// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Parameters: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case excludeBootVolume = "ExcludeBootVolume"
        case noReboot = "NoReboot"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let excludeBootVolume = excludeBootVolume {
            try encodeContainer.encode(excludeBootVolume, forKey: .excludeBootVolume)
        }
        if let noReboot = noReboot {
            try encodeContainer.encode(noReboot, forKey: .noReboot)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let excludeBootVolumeDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .excludeBootVolume)
        excludeBootVolume = excludeBootVolumeDecoded
        let noRebootDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .noReboot)
        noReboot = noRebootDecoded
    }
}
