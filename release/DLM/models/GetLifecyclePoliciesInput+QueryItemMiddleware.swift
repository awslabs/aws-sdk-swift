// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetLifecyclePoliciesInputQueryItemMiddleware: Middleware {
    public let id: String = "GetLifecyclePoliciesInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetLifecyclePoliciesInput>,
                  next: H) -> Swift.Result<OperationOutput<GetLifecyclePoliciesOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let resourceTypes = input.operationInput.resourceTypes {
            resourceTypes.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "resourceTypes".urlPercentEncoding(), value: String(queryItemValue.rawValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let tagsToAdd = input.operationInput.tagsToAdd {
            tagsToAdd.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "tagsToAdd".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let state = input.operationInput.state {
            let stateQueryItem = URLQueryItem(name: "state".urlPercentEncoding(), value: String(state.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(stateQueryItem)
        }
        if let policyIds = input.operationInput.policyIds {
            policyIds.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "policyIds".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        if let targetTags = input.operationInput.targetTags {
            targetTags.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "targetTags".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetLifecyclePoliciesInput>
    public typealias MOutput = OperationOutput<GetLifecyclePoliciesOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetLifecyclePoliciesOutputError>
}
