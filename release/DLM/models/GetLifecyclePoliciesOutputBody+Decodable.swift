// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetLifecyclePoliciesOutputBody: Equatable {
    public let policies: [LifecyclePolicySummary]?
}

extension GetLifecyclePoliciesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case policies = "Policies"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policiesContainer = try containerValues.decodeIfPresent([LifecyclePolicySummary].self, forKey: .policies)
        var policiesDecoded0:[LifecyclePolicySummary]? = nil
        if let policiesContainer = policiesContainer {
            policiesDecoded0 = [LifecyclePolicySummary]()
            for structure0 in policiesContainer {
                policiesDecoded0?.append(structure0)
            }
        }
        policies = policiesDecoded0
    }
}
