// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetDeviceMethodsOutputBody: Equatable {
    public let deviceMethods: [DeviceMethod]?
}

extension GetDeviceMethodsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceMethods = "deviceMethods"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceMethodsContainer = try containerValues.decodeIfPresent([DeviceMethod].self, forKey: .deviceMethods)
        var deviceMethodsDecoded0:[DeviceMethod]? = nil
        if let deviceMethodsContainer = deviceMethodsContainer {
            deviceMethodsDecoded0 = [DeviceMethod]()
            for structure0 in deviceMethodsContainer {
                deviceMethodsDecoded0?.append(structure0)
            }
        }
        deviceMethods = deviceMethodsDecoded0
    }
}
