// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct InvokeDeviceMethodInputBody: Equatable {
    public let deviceMethod: DeviceMethod?
    public let deviceMethodParameters: String?
}

extension InvokeDeviceMethodInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceMethod = "deviceMethod"
        case deviceMethodParameters = "deviceMethodParameters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deviceMethodDecoded = try containerValues.decodeIfPresent(DeviceMethod.self, forKey: .deviceMethod)
        deviceMethod = deviceMethodDecoded
        let deviceMethodParametersDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceMethodParameters)
        deviceMethodParameters = deviceMethodParametersDecoded
    }
}
