// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyDBClusterInput: Equatable {
    /// <p>A value that specifies whether the modifications in this request and any pending
    ///       modifications are asynchronously applied as soon as possible, regardless of the
    ///       <code>PreferredMaintenanceWindow</code> setting for the DB cluster. If this parameter is set
    ///       to <code>false</code>, changes to the DB cluster are applied during the next maintenance
    ///       window.</p>
    ///          <p>The <code>ApplyImmediately</code> parameter only affects <code>NewDBClusterIdentifier</code>
    ///       values. If you set the <code>ApplyImmediately</code> parameter value to false, then changes to
    ///       <code>NewDBClusterIdentifier</code> values are applied during the next maintenance window.
    ///       All other changes are applied immediately, regardless of the value of the
    ///       <code>ApplyImmediately</code> parameter.</p>
    ///          <p>Default: <code>false</code>
    ///          </p>
    public let applyImmediately: Bool
    /// <p>The number of days for which automated backups are retained. You must specify a minimum
    ///       value of 1.</p>
    ///          <p>Default: 1</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be a value from 1 to 35</p>
    ///             </li>
    ///          </ul>
    public let backupRetentionPeriod: Int?
    /// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs
    ///       for a specific DB cluster.</p>
    public let cloudwatchLogsExportConfiguration: CloudwatchLogsExportConfiguration?
    /// <p>
    ///             <i>If set to <code>true</code>, tags are copied to any snapshot of
    ///       the DB cluster that is created.</i>
    ///          </p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The DB cluster identifier for the cluster being modified. This parameter is not
    ///       case-sensitive.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match the identifier of an existing DBCluster.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterIdentifier: String?
    /// <p>The name of the DB cluster parameter group to use for the DB cluster.</p>
    public let dBClusterParameterGroupName: String?
    /// <p>A value that indicates whether the DB cluster has deletion protection enabled.
    ///       The database can't be deleted when deletion protection is enabled. By default,
    ///       deletion protection is disabled.</p>
    public let deletionProtection: Bool?
    /// <p>True to enable mapping of Amazon Identity and Access Management (IAM) accounts to database
    ///       accounts, and otherwise false.</p>
    ///          <p>Default: <code>false</code>
    ///          </p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>The version number of the database engine to which you want to upgrade. Changing this
    ///       parameter results in an outage. The change is applied during the next maintenance window
    ///       unless the <code>ApplyImmediately</code> parameter is set to true.</p>
    ///          <p>For a list of valid engine versions, see <a href="https://docs.aws.amazon.com/neptune/latest/userguide/engine-releases.html">Engine Releases for Amazon
    ///       Neptune</a>, or call <a href="https://docs.aws.amazon.com/neptune/latest/userguide/api-other-apis.html#DescribeDBEngineVersions">DescribeDBEngineVersions</a>.</p>
    public let engineVersion: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUserPassword: String?
    /// <p>The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is
    ///       stored as a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>
    ///             </li>
    ///             <li>
    ///                <p>The first character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>my-cluster2</code>
    ///          </p>
    public let newDBClusterIdentifier: String?
    /// <p>
    ///             <i>Not supported by Neptune.</i>
    ///          </p>
    public let optionGroupName: String?
    /// <p>The port number on which the DB cluster accepts connections.</p>
    ///          <p>Constraints: Value must be <code>1150-65535</code>
    ///          </p>
    ///          <p>Default: The same port as the original DB cluster.</p>
    public let port: Int?
    /// <p>The daily time range during which automated backups are created if automated backups are
    ///       enabled, using the <code>BackupRetentionPeriod</code> parameter.</p>
    ///          <p>The default is a 30-minute window selected at random from an 8-hour block of time for each
    ///       Amazon Region.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be in Universal Coordinated Time (UTC).</p>
    ///             </li>
    ///             <li>
    ///                <p>Must not conflict with the preferred maintenance window.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be at least 30 minutes.</p>
    ///             </li>
    ///          </ul>
    public let preferredBackupWindow: String?
    /// <p>The weekly time range during which system maintenance can occur, in Universal Coordinated
    ///       Time (UTC).</p>
    ///          <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
    ///          </p>
    ///          <p>The default is a 30-minute window selected at random from an 8-hour block of time for each
    ///       Amazon Region, occurring on a random day of the
    ///       week.</p>
    ///          <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>
    ///          <p>Constraints: Minimum 30-minute window.</p>
    public let preferredMaintenanceWindow: String?
    /// <p>A list of VPC security groups that the DB cluster will belong to.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        applyImmediately: Bool = false,
        backupRetentionPeriod: Int? = nil,
        cloudwatchLogsExportConfiguration: CloudwatchLogsExportConfiguration? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterParameterGroupName: String? = nil,
        deletionProtection: Bool? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        engineVersion: String? = nil,
        masterUserPassword: String? = nil,
        newDBClusterIdentifier: String? = nil,
        optionGroupName: String? = nil,
        port: Int? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.applyImmediately = applyImmediately
        self.backupRetentionPeriod = backupRetentionPeriod
        self.cloudwatchLogsExportConfiguration = cloudwatchLogsExportConfiguration
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.deletionProtection = deletionProtection
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engineVersion = engineVersion
        self.masterUserPassword = masterUserPassword
        self.newDBClusterIdentifier = newDBClusterIdentifier
        self.optionGroupName = optionGroupName
        self.port = port
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
