// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDBInstanceInput: Equatable {
    /// <p>Not supported by Neptune.</p>
    public let allocatedStorage: Int?
    /// <p>Indicates that minor engine upgrades are applied automatically to the DB instance during
    ///       the maintenance window.</p>
    ///          <p>Default: <code>true</code>
    ///          </p>
    public let autoMinorVersionUpgrade: Bool?
    /// <p> The EC2 Availability Zone that the DB instance is created in</p>
    ///          <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Region.</p>
    ///          <p> Example: <code>us-east-1d</code>
    ///          </p>
    ///          <p> Constraint: The AvailabilityZone parameter can't be specified if the MultiAZ parameter is
    ///       set to <code>true</code>. The specified Availability Zone must be in the same Amazon Region as
    ///       the current endpoint.</p>
    public let availabilityZone: String?
    /// <p>The number of days for which automated backups are
    ///       retained.</p>
    ///          <p>Not applicable. The retention period for automated backups is managed by the DB cluster.
    ///       For more information, see <a>CreateDBCluster</a>.</p>
    ///          <p>Default: 1</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be a value from 0 to 35</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot be set to 0 if the DB instance is a source to Read Replicas</p>
    ///             </li>
    ///          </ul>
    public let backupRetentionPeriod: Int?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let characterSetName: String?
    /// <p>True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
    ///       false. The default is false.</p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The identifier of the DB cluster that the instance will belong to.</p>
    ///          <p>For information on creating a DB cluster, see <a>CreateDBCluster</a>.</p>
    ///          <p>Type: String</p>
    public let dBClusterIdentifier: String?
    /// <p>The compute and memory capacity of the DB instance, for example, <code>db.m4.large</code>.
    ///       Not all DB instance classes are available in all Amazon Regions.</p>
    public let dBInstanceClass: String?
    /// <p>The DB instance identifier. This parameter is stored as a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>mydbinstance</code>
    ///          </p>
    public let dBInstanceIdentifier: String?
    /// <p>Not supported.</p>
    public let dBName: String?
    /// <p>The name of the DB parameter group to associate with this DB instance. If this argument is
    ///       omitted, the default DBParameterGroup for the specified engine is used.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be 1 to 255 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    public let dBParameterGroupName: String?
    /// <p>A list of DB security groups to associate with this DB instance.</p>
    ///          <p>Default: The default DB security group for the database engine.</p>
    public let dBSecurityGroups: [String]?
    /// <p>A DB subnet group to associate with this DB instance.</p>
    ///          <p>If there is no DB subnet group, then it is a non-VPC DB instance.</p>
    public let dBSubnetGroupName: String?
    /// <p>A value that indicates whether the DB instance has deletion protection enabled.
    ///       The database can't be deleted when deletion protection is enabled. By default,
    ///       deletion protection is disabled. See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
    ///       a DB Instance</a>.</p>
    ///
    ///          <p>DB instances in a DB cluster can be deleted even when deletion
    ///       protection is enabled in their parent DB cluster.</p>
    public let deletionProtection: Bool?
    /// <p>Specify the Active Directory Domain to create the instance in.</p>
    public let domain: String?
    /// <p>Specify the name of the IAM role to be used when making API calls to the Directory
    ///       Service.</p>
    public let domainIAMRoleName: String?
    /// <p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>Not supported by Neptune (ignored).</p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let enablePerformanceInsights: Bool?
    /// <p>The name of the database engine to be used for this instance.</p>
    ///          <p>Valid Values: <code>neptune</code>
    ///          </p>
    public let engine: String?
    /// <p>The version number of the database engine to use. Currently, setting this
    ///       parameter has no effect.</p>
    public let engineVersion: String?
    /// <p>The amount of Provisioned IOPS (input/output operations per second) to be initially
    ///       allocated for the DB instance.</p>
    public let iops: Int?
    /// <p>The Amazon KMS key identifier for an encrypted DB instance.</p>
    ///          <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If
    ///       you are creating a DB instance with the same Amazon account that owns the KMS encryption key used
    ///       to encrypt the new DB instance, then you can use the KMS key alias instead of the ARN for the
    ///       KM encryption key.</p>
    ///          <p>Not applicable. The KMS key identifier is managed by the DB cluster. For more information,
    ///       see <a>CreateDBCluster</a>.</p>
    ///          <p>If the <code>StorageEncrypted</code> parameter is true, and you do not specify a value for
    ///       the <code>KmsKeyId</code> parameter, then Amazon Neptune will use your default encryption key.
    ///       Amazon KMS creates the default encryption key for your Amazon account. Your Amazon account has a
    ///       different default encryption key for each Amazon Region.</p>
    public let kmsKeyId: String?
    /// <p>License model information for this DB instance.</p>
    ///          <p> Valid values: <code>license-included</code> | <code>bring-your-own-license</code> |
    ///       <code>general-public-license</code>
    ///          </p>
    public let licenseModel: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUserPassword: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUsername: String?
    /// <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
    ///       for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default
    ///       is 0.</p>
    ///          <p>If <code>MonitoringRoleArn</code> is specified, then you must also set
    ///       <code>MonitoringInterval</code> to a value other than 0.</p>
    ///          <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code>
    ///          </p>
    public let monitoringInterval: Int?
    /// <p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to
    ///       Amazon CloudWatch Logs. For example,
    ///       <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>
    ///          <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a
    ///       <code>MonitoringRoleArn</code> value.</p>
    public let monitoringRoleArn: String?
    /// <p>Specifies if the DB instance is a Multi-AZ deployment. You can't set the AvailabilityZone
    ///       parameter if the MultiAZ parameter is set to true.</p>
    public let multiAZ: Bool?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let optionGroupName: String?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let performanceInsightsKMSKeyId: String?
    /// <p>The port number on which the database accepts connections.</p>
    ///          <p>Not applicable. The port is managed by the DB cluster. For more information, see <a>CreateDBCluster</a>.</p>
    ///          <p> Default: <code>8182</code>
    ///          </p>
    ///          <p>Type: Integer</p>
    public let port: Int?
    /// <p> The daily time range during which automated backups are created.</p>
    ///          <p>Not applicable. The daily time range for creating automated backups is managed by the DB
    ///       cluster. For more information, see <a>CreateDBCluster</a>.</p>
    public let preferredBackupWindow: String?
    /// <p>The time range each week during which system maintenance can occur, in Universal
    ///       Coordinated Time (UTC).</p>
    ///          <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
    ///          </p>
    ///          <p>The default is a 30-minute window selected at random from an 8-hour block of time for each
    ///       Amazon Region, occurring on a random day of the week.</p>
    ///          <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>
    ///          <p>Constraints: Minimum 30-minute window.</p>
    public let preferredMaintenanceWindow: String?
    /// <p>A value that specifies the order in which an Read Replica is promoted to the primary
    ///       instance after a failure of the existing primary instance.
    ///       </p>
    ///          <p>Default: 1</p>
    ///          <p>Valid Values: 0 - 15</p>
    public let promotionTier: Int?
    /// <p>This flag should no longer be used.</p>
    @available(*, deprecated)
    public let publiclyAccessible: Bool?
    /// <p>Specifies whether the DB instance is encrypted.</p>
    ///          <p>Not applicable. The encryption for DB instances is managed by the DB cluster. For more
    ///       information, see <a>CreateDBCluster</a>.</p>
    ///          <p>Default: false</p>
    public let storageEncrypted: Bool?
    /// <p>Specifies the storage type to be associated with the DB instance.</p>
    ///          <p>Not applicable. Storage is managed by the DB Cluster.</p>
    public let storageType: String?
    /// <p>The tags to assign to the new instance.</p>
    public let tags: [Tag]?
    /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
    public let tdeCredentialArn: String?
    /// <p>The password for the given ARN from the key store in order to access the device.</p>
    public let tdeCredentialPassword: String?
    /// <p>The time zone of the DB instance.</p>
    public let timezone: String?
    /// <p>A list of EC2 VPC security groups to associate with this DB instance.</p>
    ///          <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
    ///       cluster. For more information, see <a>CreateDBCluster</a>.</p>
    ///          <p>Default: The default EC2 VPC security group for the DB subnet group's VPC.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        allocatedStorage: Int? = nil,
        autoMinorVersionUpgrade: Bool? = nil,
        availabilityZone: String? = nil,
        backupRetentionPeriod: Int? = nil,
        characterSetName: String? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBClusterIdentifier: String? = nil,
        dBInstanceClass: String? = nil,
        dBInstanceIdentifier: String? = nil,
        dBName: String? = nil,
        dBParameterGroupName: String? = nil,
        dBSecurityGroups: [String]? = nil,
        dBSubnetGroupName: String? = nil,
        deletionProtection: Bool? = nil,
        domain: String? = nil,
        domainIAMRoleName: String? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        enablePerformanceInsights: Bool? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        iops: Int? = nil,
        kmsKeyId: String? = nil,
        licenseModel: String? = nil,
        masterUserPassword: String? = nil,
        masterUsername: String? = nil,
        monitoringInterval: Int? = nil,
        monitoringRoleArn: String? = nil,
        multiAZ: Bool? = nil,
        optionGroupName: String? = nil,
        performanceInsightsKMSKeyId: String? = nil,
        port: Int? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        promotionTier: Int? = nil,
        publiclyAccessible: Bool? = nil,
        storageEncrypted: Bool? = nil,
        storageType: String? = nil,
        tags: [Tag]? = nil,
        tdeCredentialArn: String? = nil,
        tdeCredentialPassword: String? = nil,
        timezone: String? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.availabilityZone = availabilityZone
        self.backupRetentionPeriod = backupRetentionPeriod
        self.characterSetName = characterSetName
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBName = dBName
        self.dBParameterGroupName = dBParameterGroupName
        self.dBSecurityGroups = dBSecurityGroups
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.domain = domain
        self.domainIAMRoleName = domainIAMRoleName
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.enablePerformanceInsights = enablePerformanceInsights
        self.engine = engine
        self.engineVersion = engineVersion
        self.iops = iops
        self.kmsKeyId = kmsKeyId
        self.licenseModel = licenseModel
        self.masterUserPassword = masterUserPassword
        self.masterUsername = masterUsername
        self.monitoringInterval = monitoringInterval
        self.monitoringRoleArn = monitoringRoleArn
        self.multiAZ = multiAZ
        self.optionGroupName = optionGroupName
        self.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId
        self.port = port
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.promotionTier = promotionTier
        self.publiclyAccessible = publiclyAccessible
        self.storageEncrypted = storageEncrypted
        self.storageType = storageType
        self.tags = tags
        self.tdeCredentialArn = tdeCredentialArn
        self.tdeCredentialPassword = tdeCredentialPassword
        self.timezone = timezone
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
