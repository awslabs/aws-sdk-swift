// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyDBInstanceInput: Equatable {
    /// <p>Not supported by Neptune.</p>
    public let allocatedStorage: Int?
    /// <p>Indicates that major version upgrades are allowed. Changing this parameter doesn't result
    ///       in an outage and the change is asynchronously applied as soon as possible.</p>
    public let allowMajorVersionUpgrade: Bool
    /// <p>Specifies whether the modifications in this request and any pending modifications are
    ///       asynchronously applied as soon as possible, regardless of the
    ///       <code>PreferredMaintenanceWindow</code> setting for the DB instance.</p>
    ///          <p> If this parameter is set to <code>false</code>, changes to the DB instance are applied
    ///       during the next maintenance window. Some parameter changes can cause an outage and are applied
    ///       on the next call to <a>RebootDBInstance</a>, or the next
    ///       failure reboot.</p>
    ///          <p>Default: <code>false</code>
    ///          </p>
    public let applyImmediately: Bool
    /// <p> Indicates that minor version upgrades are applied automatically to the DB instance during
    ///       the maintenance window. Changing this parameter doesn't result in an outage except in the
    ///       following case and the change is asynchronously applied as soon as possible. An outage will
    ///       result if this parameter is set to <code>true</code> during the maintenance window, and a
    ///       newer minor version is available, and Neptune has enabled auto patching for that engine
    ///       version.</p>
    public let autoMinorVersionUpgrade: Bool?
    /// <p>Not applicable. The retention period for automated backups is managed by the DB cluster.
    ///       For more information, see <a>ModifyDBCluster</a>.</p>
    ///          <p>Default: Uses existing setting</p>
    public let backupRetentionPeriod: Int?
    /// <p>Indicates the certificate that needs to be associated with the instance.</p>
    public let cACertificateIdentifier: String?
    /// <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs
    ///       for a specific DB instance or DB cluster.</p>
    public let cloudwatchLogsExportConfiguration: CloudwatchLogsExportConfiguration?
    /// <p>True to copy all tags from the DB instance to snapshots of the DB instance, and otherwise
    ///       false. The default is false.</p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The new compute and memory capacity of the DB instance, for example,
    ///       <code>db.m4.large</code>. Not all DB instance classes are available in all AWS
    ///       Regions.</p>
    ///          <p>If you modify the DB instance class, an outage occurs during the change. The change is
    ///       applied during the next maintenance window, unless <code>ApplyImmediately</code> is specified
    ///       as <code>true</code> for this request.</p>
    ///          <p>Default: Uses existing setting</p>
    public let dBInstanceClass: String?
    /// <p>The DB instance identifier. This value is stored as a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match the identifier of an existing DBInstance.</p>
    ///             </li>
    ///          </ul>
    public let dBInstanceIdentifier: String?
    /// <p>The name of the DB parameter group to apply to the DB instance. Changing this setting
    ///       doesn't result in an outage. The parameter group name itself is changed immediately, but the
    ///       actual parameter changes are not applied until you reboot the instance without failover. The
    ///       db instance will NOT be rebooted automatically and the parameter changes will NOT be applied
    ///       during the next maintenance window.</p>
    ///          <p>Default: Uses existing setting</p>
    ///          <p>Constraints: The DB parameter group must be in the same DB parameter group family as this
    ///       DB instance.</p>
    public let dBParameterGroupName: String?
    /// <p>The port number on which the database accepts connections.</p>
    ///          <p>The value of the <code>DBPortNumber</code> parameter must not match any of the port values
    ///       specified for options in the option group for the DB instance.</p>
    ///          <p>Your database will restart when you change the <code>DBPortNumber</code> value regardless
    ///       of the value of the <code>ApplyImmediately</code> parameter.</p>
    ///          <p> Default: <code>8182</code>
    ///          </p>
    public let dBPortNumber: Int?
    /// <p>A list of DB security groups to authorize on this DB instance. Changing this setting
    ///       doesn't result in an outage and the change is asynchronously applied as soon as
    ///       possible.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match existing DBSecurityGroups.</p>
    ///             </li>
    ///          </ul>
    public let dBSecurityGroups: [String]?
    /// <p>The new DB subnet group for the DB instance. You can use this parameter to move your DB
    ///       instance to a different VPC.</p>
    ///          <p>Changing the subnet group causes an outage during the change. The change is applied during
    ///       the next maintenance window, unless you specify <code>true</code> for the
    ///       <code>ApplyImmediately</code> parameter.</p>
    ///          <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>
    ///          <p>Example: <code>mySubnetGroup</code>
    ///          </p>
    public let dBSubnetGroupName: String?
    /// <p>A value that indicates whether the DB instance has deletion protection enabled.
    ///       The database can't be deleted when deletion protection is enabled. By default,
    ///       deletion protection is disabled.  See <a href="https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-instances-delete.html">Deleting
    ///       a DB Instance</a>.</p>
    public let deletionProtection: Bool?
    /// <p>Not supported.</p>
    public let domain: String?
    /// <p>Not supported</p>
    public let domainIAMRoleName: String?
    /// <p>True to enable mapping of Amazon Identity and Access Management (IAM) accounts to database
    ///       accounts, and otherwise false.</p>
    ///          <p>You can enable IAM database authentication for the following database engines</p>
    ///          <p>Not applicable. Mapping Amazon IAM accounts to database accounts is managed by the DB
    ///       cluster. For more information, see <a>ModifyDBCluster</a>.</p>
    ///          <p>Default: <code>false</code>
    ///          </p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let enablePerformanceInsights: Bool?
    /// <p>The version number of the database engine to upgrade to. Currently, setting this
    ///       parameter has no effect. To upgrade your database engine to the most recent release,
    ///       use the <a>ApplyPendingMaintenanceAction</a> API.</p>
    public let engineVersion: String?
    /// <p>The new Provisioned IOPS (I/O operations per second) value for the instance.</p>
    ///          <p>Changing this setting doesn't result in an outage and the change is applied during the
    ///       next maintenance window unless the <code>ApplyImmediately</code> parameter is set to
    ///       <code>true</code> for this request.</p>
    ///          <p>Default: Uses existing setting</p>
    public let iops: Int?
    /// <p>Not supported by Neptune.</p>
    public let licenseModel: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUserPassword: String?
    /// <p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected
    ///       for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default
    ///       is 0.</p>
    ///          <p>If <code>MonitoringRoleArn</code> is specified, then you must also set
    ///       <code>MonitoringInterval</code> to a value other than 0.</p>
    ///          <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code>
    ///          </p>
    public let monitoringInterval: Int?
    /// <p>The ARN for the IAM role that permits Neptune to send enhanced monitoring metrics to
    ///       Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>
    ///          <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a
    ///       <code>MonitoringRoleArn</code> value.</p>
    public let monitoringRoleArn: String?
    /// <p>Specifies if the DB instance is a Multi-AZ deployment. Changing this parameter doesn't
    ///       result in an outage and the change is applied during the next maintenance window unless the
    ///       <code>ApplyImmediately</code> parameter is set to <code>true</code> for this request.</p>
    public let multiAZ: Bool?
    /// <p> The new DB instance identifier for the DB instance when renaming a DB instance. When you
    ///       change the DB instance identifier, an instance reboot will occur immediately if you set
    ///       <code>Apply Immediately</code> to true, or will occur during the next maintenance window if
    ///       <code>Apply Immediately</code> to false. This value is stored as a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>The first character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>mydbinstance</code>
    ///          </p>
    public let newDBInstanceIdentifier: String?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let optionGroupName: String?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let performanceInsightsKMSKeyId: String?
    /// <p> The daily time range during which automated backups are created if automated backups are
    ///       enabled.</p>
    ///          <p>Not applicable. The daily time range for creating automated backups is managed by the DB
    ///       cluster. For more information, see <a>ModifyDBCluster</a>.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be in the format hh24:mi-hh24:mi</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be in Universal Time Coordinated (UTC)</p>
    ///             </li>
    ///             <li>
    ///                <p>Must not conflict with the preferred maintenance window</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be at least 30 minutes</p>
    ///             </li>
    ///          </ul>
    public let preferredBackupWindow: String?
    /// <p>The weekly time range (in UTC) during which system maintenance can occur, which might
    ///       result in an outage. Changing this parameter doesn't result in an outage, except in the
    ///       following situation, and the change is asynchronously applied as soon as possible. If there
    ///       are pending actions that cause a reboot, and the maintenance window is changed to include the
    ///       current time, then changing this parameter will cause a reboot of the DB instance. If moving
    ///       this window to the current time, there must be at least 30 minutes between the current time
    ///       and end of the window to ensure pending changes are applied.</p>
    ///          <p>Default: Uses existing setting</p>
    ///          <p>Format: ddd:hh24:mi-ddd:hh24:mi</p>
    ///          <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>
    ///          <p>Constraints: Must be at least 30 minutes</p>
    public let preferredMaintenanceWindow: String?
    /// <p>A value that specifies the order in which a Read Replica is promoted to the primary
    ///       instance after a failure of the existing primary instance.</p>
    ///          <p>Default: 1</p>
    ///          <p>Valid Values: 0 - 15</p>
    public let promotionTier: Int?
    /// <p>This flag should no longer be used.</p>
    @available(*, deprecated)
    public let publiclyAccessible: Bool?
    /// <p>Not supported.</p>
    public let storageType: String?
    /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
    public let tdeCredentialArn: String?
    /// <p>The password for the given ARN from the key store in order to access the device.</p>
    public let tdeCredentialPassword: String?
    /// <p>A list of EC2 VPC security groups to authorize on this DB instance. This change is
    ///       asynchronously applied as soon as possible.</p>
    ///          <p>Not applicable. The associated list of EC2 VPC security groups is managed by the DB
    ///       cluster. For more information, see <a>ModifyDBCluster</a>.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match existing VpcSecurityGroupIds.</p>
    ///             </li>
    ///          </ul>
    public let vpcSecurityGroupIds: [String]?

    public init (
        allocatedStorage: Int? = nil,
        allowMajorVersionUpgrade: Bool = false,
        applyImmediately: Bool = false,
        autoMinorVersionUpgrade: Bool? = nil,
        backupRetentionPeriod: Int? = nil,
        cACertificateIdentifier: String? = nil,
        cloudwatchLogsExportConfiguration: CloudwatchLogsExportConfiguration? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBInstanceClass: String? = nil,
        dBInstanceIdentifier: String? = nil,
        dBParameterGroupName: String? = nil,
        dBPortNumber: Int? = nil,
        dBSecurityGroups: [String]? = nil,
        dBSubnetGroupName: String? = nil,
        deletionProtection: Bool? = nil,
        domain: String? = nil,
        domainIAMRoleName: String? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        enablePerformanceInsights: Bool? = nil,
        engineVersion: String? = nil,
        iops: Int? = nil,
        licenseModel: String? = nil,
        masterUserPassword: String? = nil,
        monitoringInterval: Int? = nil,
        monitoringRoleArn: String? = nil,
        multiAZ: Bool? = nil,
        newDBInstanceIdentifier: String? = nil,
        optionGroupName: String? = nil,
        performanceInsightsKMSKeyId: String? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        promotionTier: Int? = nil,
        publiclyAccessible: Bool? = nil,
        storageType: String? = nil,
        tdeCredentialArn: String? = nil,
        tdeCredentialPassword: String? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.allowMajorVersionUpgrade = allowMajorVersionUpgrade
        self.applyImmediately = applyImmediately
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.backupRetentionPeriod = backupRetentionPeriod
        self.cACertificateIdentifier = cACertificateIdentifier
        self.cloudwatchLogsExportConfiguration = cloudwatchLogsExportConfiguration
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBParameterGroupName = dBParameterGroupName
        self.dBPortNumber = dBPortNumber
        self.dBSecurityGroups = dBSecurityGroups
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.domain = domain
        self.domainIAMRoleName = domainIAMRoleName
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.enablePerformanceInsights = enablePerformanceInsights
        self.engineVersion = engineVersion
        self.iops = iops
        self.licenseModel = licenseModel
        self.masterUserPassword = masterUserPassword
        self.monitoringInterval = monitoringInterval
        self.monitoringRoleArn = monitoringRoleArn
        self.multiAZ = multiAZ
        self.newDBInstanceIdentifier = newDBInstanceIdentifier
        self.optionGroupName = optionGroupName
        self.performanceInsightsKMSKeyId = performanceInsightsKMSKeyId
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.promotionTier = promotionTier
        self.publiclyAccessible = publiclyAccessible
        self.storageType = storageType
        self.tdeCredentialArn = tdeCredentialArn
        self.tdeCredentialPassword = tdeCredentialPassword
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
