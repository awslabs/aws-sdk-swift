// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateDBClusterInput: Equatable {
    /// <p>A list of EC2 Availability Zones that instances in the DB cluster can be created
    ///       in.</p>
    public let availabilityZones: [String]?
    /// <p>The number of days for which automated backups are retained. You must specify a minimum
    ///       value of 1.</p>
    ///          <p>Default: 1</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be a value from 1 to 35</p>
    ///             </li>
    ///          </ul>
    public let backupRetentionPeriod: Int?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let characterSetName: String?
    /// <p>
    ///             <i>If set to <code>true</code>, tags are copied to any snapshot of
    ///       the DB cluster that is created.</i>
    ///          </p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The DB cluster identifier. This parameter is stored as a lowercase string.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>my-cluster1</code>
    ///          </p>
    public let dBClusterIdentifier: String?
    /// <p> The name of the DB cluster parameter group to associate with this DB cluster. If this
    ///       argument is omitted, the default is used.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterParameterGroupName: String?
    /// <p>A DB subnet group to associate with this DB cluster.</p>
    ///          <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p>
    ///          <p>Example: <code>mySubnetgroup</code>
    ///          </p>
    public let dBSubnetGroupName: String?
    /// <p>The name for your database of up to 64 alpha-numeric characters. If you do not provide a
    ///       name, Amazon Neptune will not create a database in the DB cluster you are creating.</p>
    public let databaseName: String?
    /// <p>A value that indicates whether the DB cluster has deletion protection enabled.
    ///       The database can't be deleted when deletion protection is enabled. By default,
    ///       deletion protection is enabled.</p>
    public let deletionProtection: Bool?
    /// <p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>If set to <code>true</code>, enables Amazon Identity and Access Management
    ///       (IAM) authentication for the entire DB cluster (this cannot be set at an
    ///       instance level).</p>
    ///          <p>Default: <code>false</code>.</p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>The name of the database engine to be used for this DB cluster.</p>
    ///          <p>Valid Values: <code>neptune</code>
    ///          </p>
    public let engine: String?
    /// <p>The version number of the database engine to use for the new DB cluster.</p>
    ///          <p>Example: <code>1.0.2.1</code>
    ///          </p>
    public let engineVersion: String?
    /// <p>The Amazon KMS key identifier for an encrypted DB cluster.</p>
    ///          <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If
    ///       you are creating a DB cluster with the same Amazon account that owns the KMS encryption key used
    ///       to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the
    ///       KMS encryption key.</p>
    ///          <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then
    ///           Amazon Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon
    ///           Neptune will use your default encryption key.</p>
    ///             </li>
    ///             <li>
    ///                <p>If the <code>StorageEncrypted</code> parameter is true and
    ///           <code>ReplicationSourceIdentifier</code> is not specified, then Amazon Neptune will use
    ///           your default encryption key.</p>
    ///             </li>
    ///          </ul>
    ///          <p>Amazon KMS creates the default encryption key for your Amazon account. Your Amazon account has a
    ///       different default encryption key for each Amazon Region.</p>
    ///          <p>If you create a Read Replica of an encrypted DB cluster in another Amazon Region, you must
    ///       set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination Amazon Region. This
    ///       key is used to encrypt the Read Replica in that Amazon Region.</p>
    public let kmsKeyId: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUserPassword: String?
    /// <p>Not supported by Neptune.</p>
    public let masterUsername: String?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let optionGroupName: String?
    /// <p>The port number on which the instances in the DB cluster accept connections.</p>
    ///          <p> Default: <code>8182</code>
    ///          </p>
    public let port: Int?
    /// <p>This parameter is not currently supported.</p>
    public let preSignedUrl: String?
    /// <p>The daily time range during which automated backups are created if automated backups are
    ///       enabled using the <code>BackupRetentionPeriod</code> parameter.</p>
    ///          <p>The default is a 30-minute window selected at random from an 8-hour block of time for each
    ///       Amazon Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred
    ///       Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i>
    ///          </p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be in Universal Coordinated Time (UTC).</p>
    ///             </li>
    ///             <li>
    ///                <p>Must not conflict with the preferred maintenance window.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be at least 30 minutes.</p>
    ///             </li>
    ///          </ul>
    public let preferredBackupWindow: String?
    /// <p>The weekly time range during which system maintenance can occur, in Universal Coordinated
    ///       Time (UTC).</p>
    ///          <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
    ///          </p>
    ///          <p>The default is a 30-minute window selected at random from an 8-hour block of time for each
    ///       Amazon Region, occurring on a random day of the week. To see the time blocks available, see
    ///       <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred
    ///       Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i>
    ///          </p>
    ///          <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>
    ///          <p>Constraints: Minimum 30-minute window.</p>
    public let preferredMaintenanceWindow: String?
    /// <p>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster
    ///       is created as a Read Replica.</p>
    public let replicationSourceIdentifier: String?
    /// <p>Specifies whether the DB cluster is encrypted.</p>
    public let storageEncrypted: Bool?
    /// <p>The tags to assign to the new DB cluster.</p>
    public let tags: [Tag]?
    /// <p>A list of EC2 VPC security groups to associate with this DB cluster.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        availabilityZones: [String]? = nil,
        backupRetentionPeriod: Int? = nil,
        characterSetName: String? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterParameterGroupName: String? = nil,
        dBSubnetGroupName: String? = nil,
        databaseName: String? = nil,
        deletionProtection: Bool? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        kmsKeyId: String? = nil,
        masterUserPassword: String? = nil,
        masterUsername: String? = nil,
        optionGroupName: String? = nil,
        port: Int? = nil,
        preSignedUrl: String? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        replicationSourceIdentifier: String? = nil,
        storageEncrypted: Bool? = nil,
        tags: [Tag]? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.backupRetentionPeriod = backupRetentionPeriod
        self.characterSetName = characterSetName
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.dBSubnetGroupName = dBSubnetGroupName
        self.databaseName = databaseName
        self.deletionProtection = deletionProtection
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engine = engine
        self.engineVersion = engineVersion
        self.kmsKeyId = kmsKeyId
        self.masterUserPassword = masterUserPassword
        self.masterUsername = masterUsername
        self.optionGroupName = optionGroupName
        self.port = port
        self.preSignedUrl = preSignedUrl
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.replicationSourceIdentifier = replicationSourceIdentifier
        self.storageEncrypted = storageEncrypted
        self.tags = tags
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
