// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> This data type is used as a response element in the action <a>DescribeDBEngineVersions</a>.</p>
public struct DBEngineVersion: Equatable {
    /// <p>The description of the database engine.</p>
    public let dBEngineDescription: String?
    /// <p>The description of the database engine version.</p>
    public let dBEngineVersionDescription: String?
    /// <p>The name of the DB parameter group family for the database engine.</p>
    public let dBParameterGroupFamily: String?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let defaultCharacterSet: CharacterSet?
    /// <p>The name of the database engine.</p>
    public let engine: String?
    /// <p>The version number of the database engine.</p>
    public let engineVersion: String?
    /// <p>The types of logs that the database engine has available for export to CloudWatch
    ///       Logs.</p>
    public let exportableLogTypes: [String]?
    /// <p>
    ///             <i>(Not supported by Neptune)</i>
    ///          </p>
    public let supportedCharacterSets: [CharacterSet]?
    /// <p>A list of the time zones supported by this engine for the <code>Timezone</code> parameter
    ///       of the <code>CreateDBInstance</code> action.</p>
    public let supportedTimezones: [Timezone]?
    /// <p>A value that indicates whether the engine version supports exporting the log types
    ///       specified by ExportableLogTypes to CloudWatch Logs.</p>
    public let supportsLogExportsToCloudwatchLogs: Bool
    /// <p>Indicates whether the database engine version supports read replicas.</p>
    public let supportsReadReplica: Bool
    /// <p>A list of engine versions that this database engine version can be upgraded to.</p>
    public let validUpgradeTarget: [UpgradeTarget]?

    public init (
        dBEngineDescription: String? = nil,
        dBEngineVersionDescription: String? = nil,
        dBParameterGroupFamily: String? = nil,
        defaultCharacterSet: CharacterSet? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        exportableLogTypes: [String]? = nil,
        supportedCharacterSets: [CharacterSet]? = nil,
        supportedTimezones: [Timezone]? = nil,
        supportsLogExportsToCloudwatchLogs: Bool = false,
        supportsReadReplica: Bool = false,
        validUpgradeTarget: [UpgradeTarget]? = nil
    )
    {
        self.dBEngineDescription = dBEngineDescription
        self.dBEngineVersionDescription = dBEngineVersionDescription
        self.dBParameterGroupFamily = dBParameterGroupFamily
        self.defaultCharacterSet = defaultCharacterSet
        self.engine = engine
        self.engineVersion = engineVersion
        self.exportableLogTypes = exportableLogTypes
        self.supportedCharacterSets = supportedCharacterSets
        self.supportedTimezones = supportedTimezones
        self.supportsLogExportsToCloudwatchLogs = supportsLogExportsToCloudwatchLogs
        self.supportsReadReplica = supportsReadReplica
        self.validUpgradeTarget = validUpgradeTarget
    }
}
