// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeDBClusterEndpointsInput: Equatable {
    /// <p>The identifier of the endpoint to describe. This parameter is stored as a lowercase string.</p>
    public let dBClusterEndpointIdentifier: String?
    /// <p>The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is
    ///       stored as a lowercase string.</p>
    public let dBClusterIdentifier: String?
    /// <p>A set of name-value pairs that define which endpoints to include in the output.
    ///       The filters are specified as name-value pairs, in the format
    ///       <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>.
    ///       <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>.
    ///       <code>Values</code> for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>, <code>writer</code>, <code>custom</code>.
    ///       <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code> filter can be one or more of: <code>reader</code>, <code>any</code>.
    ///       <code>Values</code> for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>.
    ///     </p>
    public let filters: [Filter]?
    /// <p> An optional pagination token provided by a previous
    ///       <code>DescribeDBClusterEndpoints</code> request.
    ///       If this parameter is specified, the response includes
    ///       only records beyond the marker,
    ///       up to the value specified by <code>MaxRecords</code>.
    ///     </p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response.
    ///       If more records exist than the specified <code>MaxRecords</code> value,
    ///       a pagination token called a marker is included in the response so you can retrieve the remaining results.
    ///     </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?

    public init (
        dBClusterEndpointIdentifier: String? = nil,
        dBClusterIdentifier: String? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.dBClusterEndpointIdentifier = dBClusterEndpointIdentifier
        self.dBClusterIdentifier = dBClusterIdentifier
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
