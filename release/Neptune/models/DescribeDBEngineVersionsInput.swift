// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeDBEngineVersionsInput: Equatable {
    /// <p>The name of a specific DB parameter group family to return details for.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match an existing DBParameterGroupFamily.</p>
    ///             </li>
    ///          </ul>
    public let dBParameterGroupFamily: String?
    /// <p>Indicates that only the default version of the specified engine or engine and major
    ///       version combination is returned.</p>
    public let defaultOnly: Bool
    /// <p>The database engine to return.</p>
    public let engine: String?
    /// <p>The database engine version to return.</p>
    ///          <p>Example: <code>5.1.49</code>
    ///          </p>
    public let engineVersion: String?
    /// <p>Not currently supported.</p>
    public let filters: [Filter]?
    /// <p>If this parameter is specified and the requested engine supports the
    ///       <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response
    ///       includes a list of supported character sets for each engine version.</p>
    public let listSupportedCharacterSets: Bool?
    /// <p>If this parameter is specified and the requested engine supports the <code>TimeZone</code>
    ///       parameter for <code>CreateDBInstance</code>, the response includes a list of supported time
    ///       zones for each engine version.</p>
    public let listSupportedTimezones: Bool?
    /// <p> An optional pagination token provided by a previous request. If this parameter is
    ///       specified, the response includes only records beyond the marker, up to the value specified by
    ///       <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p> The maximum number of records to include in the response. If more than the
    ///       <code>MaxRecords</code> value is available, a pagination token called a marker is included in
    ///       the response so that the following results can be retrieved.</p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?

    public init (
        dBParameterGroupFamily: String? = nil,
        defaultOnly: Bool = false,
        engine: String? = nil,
        engineVersion: String? = nil,
        filters: [Filter]? = nil,
        listSupportedCharacterSets: Bool? = nil,
        listSupportedTimezones: Bool? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.dBParameterGroupFamily = dBParameterGroupFamily
        self.defaultOnly = defaultOnly
        self.engine = engine
        self.engineVersion = engineVersion
        self.filters = filters
        self.listSupportedCharacterSets = listSupportedCharacterSets
        self.listSupportedTimezones = listSupportedTimezones
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
