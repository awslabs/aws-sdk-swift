// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsRedshiftClusterClusterSecurityGroup: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clusterSecurityGroupName = "ClusterSecurityGroupName"
        case status = "Status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clusterSecurityGroupName = clusterSecurityGroupName {
            try encodeContainer.encode(clusterSecurityGroupName, forKey: .clusterSecurityGroupName)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let clusterSecurityGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clusterSecurityGroupName)
        clusterSecurityGroupName = clusterSecurityGroupNameDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
    }
}
