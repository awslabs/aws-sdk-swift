// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsRedshiftClusterIamRole: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applyStatus = "ApplyStatus"
        case iamRoleArn = "IamRoleArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applyStatus = applyStatus {
            try encodeContainer.encode(applyStatus, forKey: .applyStatus)
        }
        if let iamRoleArn = iamRoleArn {
            try encodeContainer.encode(iamRoleArn, forKey: .iamRoleArn)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applyStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applyStatus)
        applyStatus = applyStatusDecoded
        let iamRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .iamRoleArn)
        iamRoleArn = iamRoleArnDecoded
    }
}
