// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about an Elasticsearch domain.</p>
public struct AwsElasticsearchDomainDetails: Equatable {
    /// <p>IAM policy document specifying the access policies for the new Amazon ES domain.</p>
    public let accessPolicies: String?
    /// <p>Additional options for the domain endpoint.</p>
    public let domainEndpointOptions: AwsElasticsearchDomainDomainEndpointOptions?
    /// <p>Unique identifier for an Amazon ES domain.</p>
    public let domainId: String?
    /// <p>Name of an Amazon ES domain.</p>
    ///          <p>Domain names are unique across all domains owned by the same account within an AWS
    ///          Region.</p>
    ///          <p>Domain names must start with a lowercase letter and must be between 3 and 28
    ///          characters.</p>
    ///          <p>Valid characters are a-z (lowercase only), 0-9, and â€“ (hyphen). </p>
    public let domainName: String?
    /// <p>Elasticsearch version.</p>
    public let elasticsearchVersion: String?
    /// <p>Details about the configuration for encryption at rest.</p>
    public let encryptionAtRestOptions: AwsElasticsearchDomainEncryptionAtRestOptions?
    /// <p>Domain-specific endpoint used to submit index, search, and data upload requests to an
    ///          Amazon ES domain.</p>
    ///          <p>The endpoint is a service URL. </p>
    public let endpoint: String?
    /// <p>The key-value pair that exists if the Amazon ES domain uses VPC endpoints.</p>
    public let endpoints: [String:String]?
    /// <p>Details about the configuration for node-to-node encryption.</p>
    public let nodeToNodeEncryptionOptions: AwsElasticsearchDomainNodeToNodeEncryptionOptions?
    /// <p>Information that Amazon ES derives based on <code>VPCOptions</code> for the
    ///          domain.</p>
    public let vPCOptions: AwsElasticsearchDomainVPCOptions?

    public init (
        accessPolicies: String? = nil,
        domainEndpointOptions: AwsElasticsearchDomainDomainEndpointOptions? = nil,
        domainId: String? = nil,
        domainName: String? = nil,
        elasticsearchVersion: String? = nil,
        encryptionAtRestOptions: AwsElasticsearchDomainEncryptionAtRestOptions? = nil,
        endpoint: String? = nil,
        endpoints: [String:String]? = nil,
        nodeToNodeEncryptionOptions: AwsElasticsearchDomainNodeToNodeEncryptionOptions? = nil,
        vPCOptions: AwsElasticsearchDomainVPCOptions? = nil
    )
    {
        self.accessPolicies = accessPolicies
        self.domainEndpointOptions = domainEndpointOptions
        self.domainId = domainId
        self.domainName = domainName
        self.elasticsearchVersion = elasticsearchVersion
        self.encryptionAtRestOptions = encryptionAtRestOptions
        self.endpoint = endpoint
        self.endpoints = endpoints
        self.nodeToNodeEncryptionOptions = nodeToNodeEncryptionOptions
        self.vPCOptions = vPCOptions
    }
}
