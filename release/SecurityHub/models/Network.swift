// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The details of network-related information about a finding.</p>
public struct Network: Equatable {
    /// <p>The protocol of network-related information about a finding.</p>
    public let `protocol`: String?
    /// <p>The destination domain of network-related information about a finding.</p>
    public let destinationDomain: String?
    /// <p>The destination IPv4 address of network-related information about a finding.</p>
    public let destinationIpV4: String?
    /// <p>The destination IPv6 address of network-related information about a finding.</p>
    public let destinationIpV6: String?
    /// <p>The destination port of network-related information about a finding.</p>
    public let destinationPort: Int
    /// <p>The direction of network traffic associated with a finding.</p>
    public let direction: NetworkDirection?
    /// <p>The range of open ports that is present on the network.</p>
    public let openPortRange: PortRange?
    /// <p>The source domain of network-related information about a finding.</p>
    public let sourceDomain: String?
    /// <p>The source IPv4 address of network-related information about a finding.</p>
    public let sourceIpV4: String?
    /// <p>The source IPv6 address of network-related information about a finding.</p>
    public let sourceIpV6: String?
    /// <p>The source media access control (MAC) address of network-related information about a
    ///          finding.</p>
    public let sourceMac: String?
    /// <p>The source port of network-related information about a finding.</p>
    public let sourcePort: Int

    public init (
        `protocol`: String? = nil,
        destinationDomain: String? = nil,
        destinationIpV4: String? = nil,
        destinationIpV6: String? = nil,
        destinationPort: Int = 0,
        direction: NetworkDirection? = nil,
        openPortRange: PortRange? = nil,
        sourceDomain: String? = nil,
        sourceIpV4: String? = nil,
        sourceIpV6: String? = nil,
        sourceMac: String? = nil,
        sourcePort: Int = 0
    )
    {
        self.`protocol` = `protocol`
        self.destinationDomain = destinationDomain
        self.destinationIpV4 = destinationIpV4
        self.destinationIpV6 = destinationIpV6
        self.destinationPort = destinationPort
        self.direction = direction
        self.openPortRange = openPortRange
        self.sourceDomain = sourceDomain
        self.sourceIpV4 = sourceIpV4
        self.sourceIpV6 = sourceIpV6
        self.sourceMac = sourceMac
        self.sourcePort = sourcePort
    }
}
