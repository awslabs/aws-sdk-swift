// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the health checks that are conducted on the load
///          balancer.</p>
public struct AwsElbLoadBalancerHealthCheck: Equatable {
    /// <p>The number of consecutive health check successes required before the instance is moved
    ///          to the Healthy state.</p>
    public let healthyThreshold: Int
    /// <p>The approximate interval, in seconds, between health checks of an individual
    ///          instance.</p>
    public let interval: Int
    /// <p>The instance that is being checked. The target specifies the protocol and port. The
    ///          available protocols are TCP, SSL, HTTP, and HTTPS. The range of valid ports is 1 through
    ///          65535.</p>
    ///          <p>For the HTTP and HTTPS protocols, the target also specifies the ping path.</p>
    ///          <p>For the TCP protocol, the target is specified as <code>TCP:
    ///                <i><port></i>
    ///             </code>.</p>
    ///          <p>For the SSL protocol, the target is specified as
    ///                <code>SSL.<i><port></i>
    ///             </code>.</p>
    ///          <p>For the HTTP and HTTPS protocols, the target is specified as
    ///                <code>
    ///                <i><protocol></i>:<i><port></i>/<i><path
    ///                to ping></i>
    ///             </code>.</p>
    public let target: String?
    /// <p>The amount of time, in seconds, during which no response means a failed health
    ///          check.</p>
    public let timeout: Int
    /// <p>The number of consecutive health check failures that must occur before the instance is
    ///          moved to the Unhealthy state.</p>
    public let unhealthyThreshold: Int

    public init (
        healthyThreshold: Int = 0,
        interval: Int = 0,
        target: String? = nil,
        timeout: Int = 0,
        unhealthyThreshold: Int = 0
    )
    {
        self.healthyThreshold = healthyThreshold
        self.interval = interval
        self.target = target
        self.timeout = timeout
        self.unhealthyThreshold = unhealthyThreshold
    }
}
