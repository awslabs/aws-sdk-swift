// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeActionTargetsOutputBody: Equatable {
    public let actionTargets: [ActionTarget]?
    public let nextToken: String?
}

extension DescribeActionTargetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case actionTargets = "ActionTargets"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionTargetsContainer = try containerValues.decodeIfPresent([ActionTarget].self, forKey: .actionTargets)
        var actionTargetsDecoded0:[ActionTarget]? = nil
        if let actionTargetsContainer = actionTargetsContainer {
            actionTargetsDecoded0 = [ActionTarget]()
            for structure0 in actionTargetsContainer {
                actionTargetsDecoded0?.append(structure0)
            }
        }
        actionTargets = actionTargetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
