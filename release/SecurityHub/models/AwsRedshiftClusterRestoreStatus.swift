// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about the status of a cluster restore action. It only applies if the cluster
///          was created by restoring a snapshot.</p>
public struct AwsRedshiftClusterRestoreStatus: Equatable {
    /// <p>The number of megabytes per second being transferred from the backup storage. Returns
    ///          the average rate for a completed backup.</p>
    ///          <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
    public let currentRestoreRateInMegaBytesPerSecond: Double
    /// <p>The amount of time an in-progress restore has been running, or the amount of time it
    ///          took a completed restore to finish.</p>
    ///          <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
    public let elapsedTimeInSeconds: Int
    /// <p>The estimate of the time remaining before the restore is complete. Returns 0 for a
    ///          completed restore.</p>
    ///          <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
    public let estimatedTimeToCompletionInSeconds: Int
    /// <p>The number of megabytes that were transferred from snapshot storage.</p>
    ///          <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
    public let progressInMegaBytes: Int
    /// <p>The size of the set of snapshot data that was used to restore the cluster.</p>
    ///          <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
    public let snapshotSizeInMegaBytes: Int
    /// <p>The status of the restore action.</p>
    ///          <p>Valid values: <code>starting</code> | <code>restoring</code> | <code>completed</code> |
    ///             <code>failed</code>
    ///          </p>
    public let status: String?

    public init (
        currentRestoreRateInMegaBytesPerSecond: Double = 0.0,
        elapsedTimeInSeconds: Int = 0,
        estimatedTimeToCompletionInSeconds: Int = 0,
        progressInMegaBytes: Int = 0,
        snapshotSizeInMegaBytes: Int = 0,
        status: String? = nil
    )
    {
        self.currentRestoreRateInMegaBytesPerSecond = currentRestoreRateInMegaBytesPerSecond
        self.elapsedTimeInSeconds = elapsedTimeInSeconds
        self.estimatedTimeToCompletionInSeconds = estimatedTimeToCompletionInSeconds
        self.progressInMegaBytes = progressInMegaBytes
        self.snapshotSizeInMegaBytes = snapshotSizeInMegaBytes
        self.status = status
    }
}
