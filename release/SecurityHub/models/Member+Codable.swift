// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Member: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case administratorId = "AdministratorId"
        case email = "Email"
        case invitedAt = "InvitedAt"
        case masterId = "MasterId"
        case memberStatus = "MemberStatus"
        case updatedAt = "UpdatedAt"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountId = accountId {
            try encodeContainer.encode(accountId, forKey: .accountId)
        }
        if let administratorId = administratorId {
            try encodeContainer.encode(administratorId, forKey: .administratorId)
        }
        if let email = email {
            try encodeContainer.encode(email, forKey: .email)
        }
        if let invitedAt = invitedAt {
            try encodeContainer.encode(invitedAt.timeIntervalSince1970, forKey: .invitedAt)
        }
        if let masterId = masterId {
            try encodeContainer.encode(masterId, forKey: .masterId)
        }
        if let memberStatus = memberStatus {
            try encodeContainer.encode(memberStatus, forKey: .memberStatus)
        }
        if let updatedAt = updatedAt {
            try encodeContainer.encode(updatedAt.timeIntervalSince1970, forKey: .updatedAt)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let emailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .email)
        email = emailDecoded
        let masterIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .masterId)
        masterId = masterIdDecoded
        let administratorIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .administratorId)
        administratorId = administratorIdDecoded
        let memberStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .memberStatus)
        memberStatus = memberStatusDecoded
        let invitedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .invitedAt)
        invitedAt = invitedAtDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
