// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about an IAM role, including all of the role's policies.</p>
public struct AwsIamRoleDetails: Equatable {
    /// <p>The trust policy that grants permission to assume the role.</p>
    public let assumeRolePolicyDocument: String?
    /// <p>The list of the managed policies that are attached to the role.</p>
    public let attachedManagedPolicies: [AwsIamAttachedManagedPolicy]?
    /// <p>Indicates when the role was created.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let createDate: String?
    /// <p>The list of instance profiles that contain this role.</p>
    public let instanceProfileList: [AwsIamInstanceProfile]?
    /// <p>The maximum session duration (in seconds) that you want to set for the specified role.</p>
    public let maxSessionDuration: Int
    /// <p>The path to the role.</p>
    public let path: String?
    /// <p>Information about the policy used to set the permissions boundary for an IAM
    ///          principal.</p>
    public let permissionsBoundary: AwsIamPermissionsBoundary?
    /// <p>The stable and unique string identifying the role.</p>
    public let roleId: String?
    /// <p>The friendly name that identifies the role.</p>
    public let roleName: String?
    /// <p>The list of inline policies that are embedded in the role.</p>
    public let rolePolicyList: [AwsIamRolePolicy]?

    public init (
        assumeRolePolicyDocument: String? = nil,
        attachedManagedPolicies: [AwsIamAttachedManagedPolicy]? = nil,
        createDate: String? = nil,
        instanceProfileList: [AwsIamInstanceProfile]? = nil,
        maxSessionDuration: Int = 0,
        path: String? = nil,
        permissionsBoundary: AwsIamPermissionsBoundary? = nil,
        roleId: String? = nil,
        roleName: String? = nil,
        rolePolicyList: [AwsIamRolePolicy]? = nil
    )
    {
        self.assumeRolePolicyDocument = assumeRolePolicyDocument
        self.attachedManagedPolicies = attachedManagedPolicies
        self.createDate = createDate
        self.instanceProfileList = instanceProfileList
        self.maxSessionDuration = maxSessionDuration
        self.path = path
        self.permissionsBoundary = permissionsBoundary
        self.roleId = roleId
        self.roleName = roleName
        self.rolePolicyList = rolePolicyList
    }
}
