// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsApiGatewayEndpointConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case types = "Types"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let types = types {
            var typesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .types)
            for nonemptystringlist0 in types {
                try typesContainer.encode(nonemptystringlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typesContainer = try containerValues.decodeIfPresent([String].self, forKey: .types)
        var typesDecoded0:[String]? = nil
        if let typesContainer = typesContainer {
            typesDecoded0 = [String]()
            for string0 in typesContainer {
                typesDecoded0?.append(string0)
            }
        }
        types = typesDecoded0
    }
}
