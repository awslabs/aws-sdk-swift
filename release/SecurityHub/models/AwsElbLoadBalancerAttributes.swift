// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains attributes for the load balancer.</p>
public struct AwsElbLoadBalancerAttributes: Equatable {
    /// <p>Information about the access log configuration for the load balancer.</p>
    ///          <p>If the access log is enabled, the load balancer captures detailed information about all
    ///          requests. It delivers the information to a specified S3 bucket.</p>
    public let accessLog: AwsElbLoadBalancerAccessLog?
    /// <p>Information about the connection draining configuration for the load balancer.</p>
    ///          <p>If connection draining is enabled, the load balancer allows existing requests to
    ///          complete before it shifts traffic away from a deregistered or unhealthy instance.</p>
    public let connectionDraining: AwsElbLoadBalancerConnectionDraining?
    /// <p>Connection settings for the load balancer.</p>
    ///          <p>If an idle timeout is configured, the load balancer allows connections to remain idle
    ///          for the specified duration. When a connection is idle, no data is sent over the
    ///          connection.</p>
    public let connectionSettings: AwsElbLoadBalancerConnectionSettings?
    /// <p>Cross-zone load balancing settings for the load balancer.</p>
    ///          <p>If cross-zone load balancing is enabled, the load balancer routes the request traffic
    ///          evenly across all instances regardless of the Availability Zones.</p>
    public let crossZoneLoadBalancing: AwsElbLoadBalancerCrossZoneLoadBalancing?

    public init (
        accessLog: AwsElbLoadBalancerAccessLog? = nil,
        connectionDraining: AwsElbLoadBalancerConnectionDraining? = nil,
        connectionSettings: AwsElbLoadBalancerConnectionSettings? = nil,
        crossZoneLoadBalancing: AwsElbLoadBalancerCrossZoneLoadBalancing? = nil
    )
    {
        self.accessLog = accessLog
        self.connectionDraining = connectionDraining
        self.connectionSettings = connectionSettings
        self.crossZoneLoadBalancing = crossZoneLoadBalancing
    }
}
