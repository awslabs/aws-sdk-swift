// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsWafWebAclDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultAction = "DefaultAction"
        case name = "Name"
        case rules = "Rules"
        case webAclId = "WebAclId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultAction = defaultAction {
            try encodeContainer.encode(defaultAction, forKey: .defaultAction)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let rules = rules {
            var rulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rules)
            for awswafwebaclrulelist0 in rules {
                try rulesContainer.encode(awswafwebaclrulelist0)
            }
        }
        if let webAclId = webAclId {
            try encodeContainer.encode(webAclId, forKey: .webAclId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let defaultActionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultAction)
        defaultAction = defaultActionDecoded
        let rulesContainer = try containerValues.decodeIfPresent([AwsWafWebAclRule].self, forKey: .rules)
        var rulesDecoded0:[AwsWafWebAclRule]? = nil
        if let rulesContainer = rulesContainer {
            rulesDecoded0 = [AwsWafWebAclRule]()
            for structure0 in rulesContainer {
                rulesDecoded0?.append(structure0)
            }
        }
        rules = rulesDecoded0
        let webAclIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .webAclId)
        webAclId = webAclIdDecoded
    }
}
