// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeProductsOutputBody: Equatable {
    public let products: [Product]?
    public let nextToken: String?
}

extension DescribeProductsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case products = "Products"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productsContainer = try containerValues.decodeIfPresent([Product].self, forKey: .products)
        var productsDecoded0:[Product]? = nil
        if let productsContainer = productsContainer {
            productsDecoded0 = [Product]()
            for structure0 in productsContainer {
                productsDecoded0?.append(structure0)
            }
        }
        products = productsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
