// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ThreatIntelIndicatorType {
    case domain
    case emailAddress
    case hashMd5
    case hashSha1
    case hashSha256
    case hashSha512
    case ipv4Address
    case ipv6Address
    case mutex
    case process
    case url
    case sdkUnknown(String)
}

extension ThreatIntelIndicatorType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ThreatIntelIndicatorType] {
        return [
            .domain,
            .emailAddress,
            .hashMd5,
            .hashSha1,
            .hashSha256,
            .hashSha512,
            .ipv4Address,
            .ipv6Address,
            .mutex,
            .process,
            .url,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .domain: return "DOMAIN"
        case .emailAddress: return "EMAIL_ADDRESS"
        case .hashMd5: return "HASH_MD5"
        case .hashSha1: return "HASH_SHA1"
        case .hashSha256: return "HASH_SHA256"
        case .hashSha512: return "HASH_SHA512"
        case .ipv4Address: return "IPV4_ADDRESS"
        case .ipv6Address: return "IPV6_ADDRESS"
        case .mutex: return "MUTEX"
        case .process: return "PROCESS"
        case .url: return "URL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ThreatIntelIndicatorType(rawValue: rawValue) ?? ThreatIntelIndicatorType.sdkUnknown(rawValue)
    }
}
