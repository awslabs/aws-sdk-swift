// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsRdsDbSubnetGroup: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dbSubnetGroupArn = "DbSubnetGroupArn"
        case dbSubnetGroupDescription = "DbSubnetGroupDescription"
        case dbSubnetGroupName = "DbSubnetGroupName"
        case subnetGroupStatus = "SubnetGroupStatus"
        case subnets = "Subnets"
        case vpcId = "VpcId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dbSubnetGroupArn = dbSubnetGroupArn {
            try encodeContainer.encode(dbSubnetGroupArn, forKey: .dbSubnetGroupArn)
        }
        if let dbSubnetGroupDescription = dbSubnetGroupDescription {
            try encodeContainer.encode(dbSubnetGroupDescription, forKey: .dbSubnetGroupDescription)
        }
        if let dbSubnetGroupName = dbSubnetGroupName {
            try encodeContainer.encode(dbSubnetGroupName, forKey: .dbSubnetGroupName)
        }
        if let subnetGroupStatus = subnetGroupStatus {
            try encodeContainer.encode(subnetGroupStatus, forKey: .subnetGroupStatus)
        }
        if let subnets = subnets {
            var subnetsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .subnets)
            for awsrdsdbsubnetgroupsubnets0 in subnets {
                try subnetsContainer.encode(awsrdsdbsubnetgroupsubnets0)
            }
        }
        if let vpcId = vpcId {
            try encodeContainer.encode(vpcId, forKey: .vpcId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dbSubnetGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbSubnetGroupName)
        dbSubnetGroupName = dbSubnetGroupNameDecoded
        let dbSubnetGroupDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbSubnetGroupDescription)
        dbSubnetGroupDescription = dbSubnetGroupDescriptionDecoded
        let vpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpcId)
        vpcId = vpcIdDecoded
        let subnetGroupStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subnetGroupStatus)
        subnetGroupStatus = subnetGroupStatusDecoded
        let subnetsContainer = try containerValues.decodeIfPresent([AwsRdsDbSubnetGroupSubnet].self, forKey: .subnets)
        var subnetsDecoded0:[AwsRdsDbSubnetGroupSubnet]? = nil
        if let subnetsContainer = subnetsContainer {
            subnetsDecoded0 = [AwsRdsDbSubnetGroupSubnet]()
            for structure0 in subnetsContainer {
                subnetsDecoded0?.append(structure0)
            }
        }
        subnets = subnetsDecoded0
        let dbSubnetGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbSubnetGroupArn)
        dbSubnetGroupArn = dbSubnetGroupArnDecoded
    }
}
