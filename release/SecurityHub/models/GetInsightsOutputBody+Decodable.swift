// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetInsightsOutputBody: Equatable {
    public let insights: [Insight]?
    public let nextToken: String?
}

extension GetInsightsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case insights = "Insights"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let insightsContainer = try containerValues.decodeIfPresent([Insight].self, forKey: .insights)
        var insightsDecoded0:[Insight]? = nil
        if let insightsContainer = insightsContainer {
            insightsDecoded0 = [Insight]()
            for structure0 in insightsContainer {
                insightsDecoded0?.append(structure0)
            }
        }
        insights = insightsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
