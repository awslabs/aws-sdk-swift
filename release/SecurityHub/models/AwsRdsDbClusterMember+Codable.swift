// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsRdsDbClusterMember: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dbClusterParameterGroupStatus = "DbClusterParameterGroupStatus"
        case dbInstanceIdentifier = "DbInstanceIdentifier"
        case isClusterWriter = "IsClusterWriter"
        case promotionTier = "PromotionTier"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dbClusterParameterGroupStatus = dbClusterParameterGroupStatus {
            try encodeContainer.encode(dbClusterParameterGroupStatus, forKey: .dbClusterParameterGroupStatus)
        }
        if let dbInstanceIdentifier = dbInstanceIdentifier {
            try encodeContainer.encode(dbInstanceIdentifier, forKey: .dbInstanceIdentifier)
        }
        if isClusterWriter != false {
            try encodeContainer.encode(isClusterWriter, forKey: .isClusterWriter)
        }
        if promotionTier != 0 {
            try encodeContainer.encode(promotionTier, forKey: .promotionTier)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let isClusterWriterDecoded = try containerValues.decode(Bool.self, forKey: .isClusterWriter)
        isClusterWriter = isClusterWriterDecoded
        let promotionTierDecoded = try containerValues.decode(Int.self, forKey: .promotionTier)
        promotionTier = promotionTierDecoded
        let dbInstanceIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbInstanceIdentifier)
        dbInstanceIdentifier = dbInstanceIdentifierDecoded
        let dbClusterParameterGroupStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .dbClusterParameterGroupStatus)
        dbClusterParameterGroupStatus = dbClusterParameterGroupStatusDecoded
    }
}
