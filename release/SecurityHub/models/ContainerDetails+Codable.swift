// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ContainerDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case imageId = "ImageId"
        case imageName = "ImageName"
        case launchedAt = "LaunchedAt"
        case name = "Name"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let imageId = imageId {
            try encodeContainer.encode(imageId, forKey: .imageId)
        }
        if let imageName = imageName {
            try encodeContainer.encode(imageName, forKey: .imageName)
        }
        if let launchedAt = launchedAt {
            try encodeContainer.encode(launchedAt, forKey: .launchedAt)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let imageIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageId)
        imageId = imageIdDecoded
        let imageNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageName)
        imageName = imageNameDecoded
        let launchedAtDecoded = try containerValues.decodeIfPresent(String.self, forKey: .launchedAt)
        launchedAt = launchedAtDecoded
    }
}
