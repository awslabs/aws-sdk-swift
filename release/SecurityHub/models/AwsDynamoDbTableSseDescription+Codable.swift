// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsDynamoDbTableSseDescription: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case inaccessibleEncryptionDateTime = "InaccessibleEncryptionDateTime"
        case kmsMasterKeyArn = "KmsMasterKeyArn"
        case sseType = "SseType"
        case status = "Status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inaccessibleEncryptionDateTime = inaccessibleEncryptionDateTime {
            try encodeContainer.encode(inaccessibleEncryptionDateTime, forKey: .inaccessibleEncryptionDateTime)
        }
        if let kmsMasterKeyArn = kmsMasterKeyArn {
            try encodeContainer.encode(kmsMasterKeyArn, forKey: .kmsMasterKeyArn)
        }
        if let sseType = sseType {
            try encodeContainer.encode(sseType, forKey: .sseType)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inaccessibleEncryptionDateTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .inaccessibleEncryptionDateTime)
        inaccessibleEncryptionDateTime = inaccessibleEncryptionDateTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let sseTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sseType)
        sseType = sseTypeDecoded
        let kmsMasterKeyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsMasterKeyArn)
        kmsMasterKeyArn = kmsMasterKeyArnDecoded
    }
}
