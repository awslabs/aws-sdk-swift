// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information abut a global secondary index for the table.</p>
public struct AwsDynamoDbTableGlobalSecondaryIndex: Equatable {
    /// <p>Whether the index is currently backfilling.</p>
    public let backfilling: Bool
    /// <p>The ARN of the index.</p>
    public let indexArn: String?
    /// <p>The name of the index.</p>
    public let indexName: String?
    /// <p>The total size in bytes of the index.</p>
    public let indexSizeBytes: Int
    /// <p>The current status of the index.</p>
    public let indexStatus: String?
    /// <p>The number of items in the index.</p>
    public let itemCount: Int
    /// <p>The key schema for the index.</p>
    public let keySchema: [AwsDynamoDbTableKeySchema]?
    /// <p>Attributes that are copied from the table into an index.</p>
    public let projection: AwsDynamoDbTableProjection?
    /// <p>Information about the provisioned throughput settings for the indexes.</p>
    public let provisionedThroughput: AwsDynamoDbTableProvisionedThroughput?

    public init (
        backfilling: Bool = false,
        indexArn: String? = nil,
        indexName: String? = nil,
        indexSizeBytes: Int = 0,
        indexStatus: String? = nil,
        itemCount: Int = 0,
        keySchema: [AwsDynamoDbTableKeySchema]? = nil,
        projection: AwsDynamoDbTableProjection? = nil,
        provisionedThroughput: AwsDynamoDbTableProvisionedThroughput? = nil
    )
    {
        self.backfilling = backfilling
        self.indexArn = indexArn
        self.indexName = indexName
        self.indexSizeBytes = indexSizeBytes
        self.indexStatus = indexStatus
        self.itemCount = itemCount
        self.keySchema = keySchema
        self.projection = projection
        self.provisionedThroughput = provisionedThroughput
    }
}
