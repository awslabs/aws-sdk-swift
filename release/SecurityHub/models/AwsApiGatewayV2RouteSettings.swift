// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains route settings for a stage.</p>
public struct AwsApiGatewayV2RouteSettings: Equatable {
    /// <p>Indicates whether data trace logging is enabled. Data trace logging affects the log
    ///          entries that are pushed to CloudWatch Logs. Supported only for WebSocket APIs.</p>
    public let dataTraceEnabled: Bool
    /// <p>Indicates whether detailed metrics are enabled.</p>
    public let detailedMetricsEnabled: Bool
    /// <p>The logging level. The logging level affects the log entries that are pushed to
    ///          CloudWatch Logs. Supported only for WebSocket APIs.</p>
    ///          <p>If the logging level is <code>ERROR</code>, then the logs only include error-level
    ///          entries.</p>
    ///          <p>If the logging level is <code>INFO</code>, then the logs include both <code>ERROR</code>
    ///          events and extra informational events.</p>
    ///          <p>Valid values: <code>OFF</code> | <code>ERROR</code> | <code>INFO</code>
    ///          </p>
    public let loggingLevel: String?
    /// <p>The throttling burst limit.</p>
    public let throttlingBurstLimit: Int
    /// <p>The throttling rate limit.</p>
    public let throttlingRateLimit: Double

    public init (
        dataTraceEnabled: Bool = false,
        detailedMetricsEnabled: Bool = false,
        loggingLevel: String? = nil,
        throttlingBurstLimit: Int = 0,
        throttlingRateLimit: Double = 0.0
    )
    {
        self.dataTraceEnabled = dataTraceEnabled
        self.detailedMetricsEnabled = detailedMetricsEnabled
        self.loggingLevel = loggingLevel
        self.throttlingBurstLimit = throttlingBurstLimit
        self.throttlingRateLimit = throttlingRateLimit
    }
}
