// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsS3ObjectDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case contentType = "ContentType"
        case eTag = "ETag"
        case lastModified = "LastModified"
        case sSEKMSKeyId = "SSEKMSKeyId"
        case serverSideEncryption = "ServerSideEncryption"
        case versionId = "VersionId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contentType = contentType {
            try encodeContainer.encode(contentType, forKey: .contentType)
        }
        if let eTag = eTag {
            try encodeContainer.encode(eTag, forKey: .eTag)
        }
        if let lastModified = lastModified {
            try encodeContainer.encode(lastModified, forKey: .lastModified)
        }
        if let sSEKMSKeyId = sSEKMSKeyId {
            try encodeContainer.encode(sSEKMSKeyId, forKey: .sSEKMSKeyId)
        }
        if let serverSideEncryption = serverSideEncryption {
            try encodeContainer.encode(serverSideEncryption, forKey: .serverSideEncryption)
        }
        if let versionId = versionId {
            try encodeContainer.encode(versionId, forKey: .versionId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastModifiedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastModified)
        lastModified = lastModifiedDecoded
        let eTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eTag)
        eTag = eTagDecoded
        let versionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .versionId)
        versionId = versionIdDecoded
        let contentTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contentType)
        contentType = contentTypeDecoded
        let serverSideEncryptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .serverSideEncryption)
        serverSideEncryption = serverSideEncryptionDecoded
        let sSEKMSKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sSEKMSKeyId)
        sSEKMSKeyId = sSEKMSKeyIdDecoded
    }
}
