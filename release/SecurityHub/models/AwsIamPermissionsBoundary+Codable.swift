// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsIamPermissionsBoundary: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case permissionsBoundaryArn = "PermissionsBoundaryArn"
        case permissionsBoundaryType = "PermissionsBoundaryType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let permissionsBoundaryArn = permissionsBoundaryArn {
            try encodeContainer.encode(permissionsBoundaryArn, forKey: .permissionsBoundaryArn)
        }
        if let permissionsBoundaryType = permissionsBoundaryType {
            try encodeContainer.encode(permissionsBoundaryType, forKey: .permissionsBoundaryType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let permissionsBoundaryArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .permissionsBoundaryArn)
        permissionsBoundaryArn = permissionsBoundaryArnDecoded
        let permissionsBoundaryTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .permissionsBoundaryType)
        permissionsBoundaryType = permissionsBoundaryTypeDecoded
    }
}
