// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about a subnet in EC2.</p>
public struct AwsEc2SubnetDetails: Equatable {
    /// <p>Whether to assign an IPV6 address to a network interface that is created in this subnet.</p>
    public let assignIpv6AddressOnCreation: Bool
    /// <p>The Availability Zone for the subnet.</p>
    public let availabilityZone: String?
    /// <p>The identifier of the Availability Zone for the subnet.</p>
    public let availabilityZoneId: String?
    /// <p>The number of available IPV4 addresses in the subnet. Does not include addresses for stopped instances.</p>
    public let availableIpAddressCount: Int
    /// <p>The IPV4 CIDR block that is assigned to the subnet.</p>
    public let cidrBlock: String?
    /// <p>Whether this subnet is the default subnet for the Availability Zone.</p>
    public let defaultForAz: Bool
    /// <p>The IPV6 CIDR blocks that are associated with the subnet.</p>
    public let ipv6CidrBlockAssociationSet: [Ipv6CidrBlockAssociation]?
    /// <p>Whether instances in this subnet receive a public IP address.</p>
    public let mapPublicIpOnLaunch: Bool
    /// <p>The identifier of the AWS account that owns the subnet.</p>
    public let ownerId: String?
    /// <p>The current state of the subnet.</p>
    public let state: String?
    /// <p>The ARN of the subnet.</p>
    public let subnetArn: String?
    /// <p>The identifier of the subnet.</p>
    public let subnetId: String?
    /// <p>The identifier of the VPC that contains the subnet.</p>
    public let vpcId: String?

    public init (
        assignIpv6AddressOnCreation: Bool = false,
        availabilityZone: String? = nil,
        availabilityZoneId: String? = nil,
        availableIpAddressCount: Int = 0,
        cidrBlock: String? = nil,
        defaultForAz: Bool = false,
        ipv6CidrBlockAssociationSet: [Ipv6CidrBlockAssociation]? = nil,
        mapPublicIpOnLaunch: Bool = false,
        ownerId: String? = nil,
        state: String? = nil,
        subnetArn: String? = nil,
        subnetId: String? = nil,
        vpcId: String? = nil
    )
    {
        self.assignIpv6AddressOnCreation = assignIpv6AddressOnCreation
        self.availabilityZone = availabilityZone
        self.availabilityZoneId = availabilityZoneId
        self.availableIpAddressCount = availableIpAddressCount
        self.cidrBlock = cidrBlock
        self.defaultForAz = defaultForAz
        self.ipv6CidrBlockAssociationSet = ipv6CidrBlockAssociationSet
        self.mapPublicIpOnLaunch = mapPublicIpOnLaunch
        self.ownerId = ownerId
        self.state = state
        self.subnetArn = subnetArn
        self.subnetId = subnetId
        self.vpcId = vpcId
    }
}
