// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsDynamoDbTableProjection: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case nonKeyAttributes = "NonKeyAttributes"
        case projectionType = "ProjectionType"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let nonKeyAttributes = nonKeyAttributes {
            var nonKeyAttributesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .nonKeyAttributes)
            for stringlist0 in nonKeyAttributes {
                try nonKeyAttributesContainer.encode(stringlist0)
            }
        }
        if let projectionType = projectionType {
            try encodeContainer.encode(projectionType, forKey: .projectionType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nonKeyAttributesContainer = try containerValues.decodeIfPresent([String].self, forKey: .nonKeyAttributes)
        var nonKeyAttributesDecoded0:[String]? = nil
        if let nonKeyAttributesContainer = nonKeyAttributesContainer {
            nonKeyAttributesDecoded0 = [String]()
            for string0 in nonKeyAttributesContainer {
                nonKeyAttributesDecoded0?.append(string0)
            }
        }
        nonKeyAttributes = nonKeyAttributesDecoded0
        let projectionTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .projectionType)
        projectionType = projectionTypeDecoded
    }
}
