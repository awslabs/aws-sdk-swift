// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides details about an AWS Certificate Manager certificate.</p>
public struct AwsCertificateManagerCertificateDetails: Equatable {
    /// <p>The ARN of the private certificate authority (CA) that will be used to issue the
    ///          certificate.</p>
    public let certificateAuthorityArn: String?
    /// <p>Indicates when the certificate was requested.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let createdAt: String?
    /// <p>The fully qualified domain name (FQDN), such as www.example.com, that is secured by the
    ///          certificate.</p>
    public let domainName: String?
    /// <p>Contains information about the initial validation of each domain name that occurs as a
    ///          result of the <code>RequestCertificate</code> request.</p>
    ///          <p>Only provided if the certificate type is <code>AMAZON_ISSUED</code>.</p>
    public let domainValidationOptions: [AwsCertificateManagerCertificateDomainValidationOption]?
    /// <p>Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies
    ///          a purpose for which the certificate public key can be used and consists of a name and an
    ///          object identifier (OID).</p>
    public let extendedKeyUsages: [AwsCertificateManagerCertificateExtendedKeyUsage]?
    /// <p>For a failed certificate request, the reason for the failure.</p>
    ///          <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> |
    ///             <code>ADDITIONAL_VERIFICATION_REQUIRED</code> | <code>DOMAIN_NOT_ALLOWED</code> |
    ///             <code>INVALID_PUBLIC_DOMAIN</code> | <code>DOMAIN_VALIDATION_DENIED</code> |
    ///             <code>CAA_ERROR</code> | <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code>
    ///          | <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> |
    ///             <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> | <code>PCA_RESOURCE_NOT_FOUND</code> |
    ///             <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code> |
    ///             <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> | <code>OTHER</code>
    ///          </p>
    public let failureReason: String?
    /// <p>Indicates when the certificate was imported. Provided if the certificate type is
    ///             <code>IMPORTED</code>.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let importedAt: String?
    /// <p>The list of ARNs for the AWS resources that use the certificate.</p>
    public let inUseBy: [String]?
    /// <p>Indicates when the certificate was issued. Provided if the certificate type is
    ///             <code>AMAZON_ISSUED</code>.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let issuedAt: String?
    /// <p>The name of the certificate authority that issued and signed the certificate.</p>
    public let issuer: String?
    /// <p>The algorithm that was used to generate the public-private key pair.</p>
    ///          <p>Valid values: <code>RSA_2048</code> | <code>RSA_1024</code> |<code> RSA_4096</code> |
    ///             <code>EC_prime256v1</code> | <code>EC_secp384r1</code> |
    ///          <code>EC_secp521r1</code>
    ///          </p>
    public let keyAlgorithm: String?
    /// <p>A list of key usage X.509 v3 extension objects.</p>
    public let keyUsages: [AwsCertificateManagerCertificateKeyUsage]?
    /// <p>The time after which the certificate becomes invalid.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let notAfter: String?
    /// <p>The time before which the certificate is not valid.</p>
    ///          <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet
    ///             Date/Time Format</a>. The value cannot contain spaces. For example,
    ///             <code>2020-03-22T13:22:13.933Z</code>.</p>
    public let notBefore: String?
    /// <p>Provides a value that specifies whether to add the certificate to a transparency
    ///          log.</p>
    public let options: AwsCertificateManagerCertificateOptions?
    /// <p>Whether the certificate is eligible for renewal.</p>
    ///          <p>Valid values: <code>ELIGIBLE</code> | <code>INELIGIBLE</code>
    ///          </p>
    public let renewalEligibility: String?
    /// <p>Information about the status of the AWS Certificate Manager managed renewal for the
    ///          certificate. Provided only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
    public let renewalSummary: AwsCertificateManagerCertificateRenewalSummary?
    /// <p>The serial number of the certificate.</p>
    public let serial: String?
    /// <p>The algorithm that was used to sign the certificate.</p>
    public let signatureAlgorithm: String?
    /// <p>The status of the certificate.</p>
    ///          <p>Valid values: <code>PENDING_VALIDATION</code> | <code>ISSUED</code> |
    ///             <code>INACTIVE</code> | <code>EXPIRED</code> | <code>VALIDATION_TIMED_OUT</code> |
    ///             <code>REVOKED</code> | <code>FAILED</code>
    ///          </p>
    public let status: String?
    /// <p>The name of the entity that is associated with the public key contained in the
    ///          certificate.</p>
    public let subject: String?
    /// <p>One or more domain names (subject alternative names) included in the certificate. This
    ///          list contains the domain names that are bound to the public key that is contained in the
    ///          certificate.</p>
    ///          <p>The subject alternative names include the canonical domain name (CN) of the certificate
    ///          and additional domain names that can be used to connect to the website.</p>
    public let subjectAlternativeNames: [String]?
    /// <p>The source of the certificate. For certificates that AWS Certificate Manager provides,
    ///             <code>Type</code> is <code>AMAZON_ISSUED</code>. For certificates that are imported with
    ///             <code>ImportCertificate</code>, <code>Type</code> is <code>IMPORTED</code>.</p>
    ///          <p>Valid values: <code>IMPORTED</code> | <code>AMAZON_ISSUED</code> |
    ///          <code>PRIVATE</code>
    ///          </p>
    public let type: String?

    public init (
        certificateAuthorityArn: String? = nil,
        createdAt: String? = nil,
        domainName: String? = nil,
        domainValidationOptions: [AwsCertificateManagerCertificateDomainValidationOption]? = nil,
        extendedKeyUsages: [AwsCertificateManagerCertificateExtendedKeyUsage]? = nil,
        failureReason: String? = nil,
        importedAt: String? = nil,
        inUseBy: [String]? = nil,
        issuedAt: String? = nil,
        issuer: String? = nil,
        keyAlgorithm: String? = nil,
        keyUsages: [AwsCertificateManagerCertificateKeyUsage]? = nil,
        notAfter: String? = nil,
        notBefore: String? = nil,
        options: AwsCertificateManagerCertificateOptions? = nil,
        renewalEligibility: String? = nil,
        renewalSummary: AwsCertificateManagerCertificateRenewalSummary? = nil,
        serial: String? = nil,
        signatureAlgorithm: String? = nil,
        status: String? = nil,
        subject: String? = nil,
        subjectAlternativeNames: [String]? = nil,
        type: String? = nil
    )
    {
        self.certificateAuthorityArn = certificateAuthorityArn
        self.createdAt = createdAt
        self.domainName = domainName
        self.domainValidationOptions = domainValidationOptions
        self.extendedKeyUsages = extendedKeyUsages
        self.failureReason = failureReason
        self.importedAt = importedAt
        self.inUseBy = inUseBy
        self.issuedAt = issuedAt
        self.issuer = issuer
        self.keyAlgorithm = keyAlgorithm
        self.keyUsages = keyUsages
        self.notAfter = notAfter
        self.notBefore = notBefore
        self.options = options
        self.renewalEligibility = renewalEligibility
        self.renewalSummary = renewalSummary
        self.serial = serial
        self.signatureAlgorithm = signatureAlgorithm
        self.status = status
        self.subject = subject
        self.subjectAlternativeNames = subjectAlternativeNames
        self.type = type
    }
}
