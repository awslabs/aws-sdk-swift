// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ThreatIntelIndicatorCategory {
    case backdoor
    case cardStealer
    case commandAndControl
    case dropSite
    case exploitSite
    case keylogger
    case sdkUnknown(String)
}

extension ThreatIntelIndicatorCategory : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ThreatIntelIndicatorCategory] {
        return [
            .backdoor,
            .cardStealer,
            .commandAndControl,
            .dropSite,
            .exploitSite,
            .keylogger,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .backdoor: return "BACKDOOR"
        case .cardStealer: return "CARD_STEALER"
        case .commandAndControl: return "COMMAND_AND_CONTROL"
        case .dropSite: return "DROP_SITE"
        case .exploitSite: return "EXPLOIT_SITE"
        case .keylogger: return "KEYLOGGER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ThreatIntelIndicatorCategory(rawValue: rawValue) ?? ThreatIntelIndicatorCategory.sdkUnknown(rawValue)
    }
}
