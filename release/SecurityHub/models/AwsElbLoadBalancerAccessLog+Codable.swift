// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsElbLoadBalancerAccessLog: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case emitInterval = "EmitInterval"
        case enabled = "Enabled"
        case s3BucketName = "S3BucketName"
        case s3BucketPrefix = "S3BucketPrefix"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if emitInterval != 0 {
            try encodeContainer.encode(emitInterval, forKey: .emitInterval)
        }
        if enabled != false {
            try encodeContainer.encode(enabled, forKey: .enabled)
        }
        if let s3BucketName = s3BucketName {
            try encodeContainer.encode(s3BucketName, forKey: .s3BucketName)
        }
        if let s3BucketPrefix = s3BucketPrefix {
            try encodeContainer.encode(s3BucketPrefix, forKey: .s3BucketPrefix)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let emitIntervalDecoded = try containerValues.decode(Int.self, forKey: .emitInterval)
        emitInterval = emitIntervalDecoded
        let enabledDecoded = try containerValues.decode(Bool.self, forKey: .enabled)
        enabled = enabledDecoded
        let s3BucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3BucketName)
        s3BucketName = s3BucketNameDecoded
        let s3BucketPrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3BucketPrefix)
        s3BucketPrefix = s3BucketPrefixDecoded
    }
}
