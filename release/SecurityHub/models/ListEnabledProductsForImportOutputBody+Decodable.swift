// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEnabledProductsForImportOutputBody: Equatable {
    public let productSubscriptions: [String]?
    public let nextToken: String?
}

extension ListEnabledProductsForImportOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case productSubscriptions = "ProductSubscriptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let productSubscriptionsContainer = try containerValues.decodeIfPresent([String].self, forKey: .productSubscriptions)
        var productSubscriptionsDecoded0:[String]? = nil
        if let productSubscriptionsContainer = productSubscriptionsContainer {
            productSubscriptionsDecoded0 = [String]()
            for string0 in productSubscriptionsContainer {
                productSubscriptionsDecoded0?.append(string0)
            }
        }
        productSubscriptions = productSubscriptionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
