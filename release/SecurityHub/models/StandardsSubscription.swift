// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A resource that represents your subscription to a supported standard.</p>
public struct StandardsSubscription: Equatable {
    /// <p>The ARN of a standard.</p>
    public let standardsArn: String?
    /// <p>A key-value pair of input for the standard.</p>
    public let standardsInput: [String:String]?
    /// <p>The status of the standard subscription.</p>
    ///          <p>The status values are as follows:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PENDING</code> - Standard is in the process of being enabled.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>READY</code> - Standard is enabled.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>INCOMPLETE</code> - Standard could not be enabled completely. Some controls may not be available.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETING</code> - Standard is in the process of being disabled.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> - Standard could not be disabled.</p>
    ///             </li>
    ///          </ul>
    public let standardsStatus: StandardsStatus?
    /// <p>The ARN of a resource that represents your subscription to a supported standard.</p>
    public let standardsSubscriptionArn: String?

    public init (
        standardsArn: String? = nil,
        standardsInput: [String:String]? = nil,
        standardsStatus: StandardsStatus? = nil,
        standardsSubscriptionArn: String? = nil
    )
    {
        self.standardsArn = standardsArn
        self.standardsInput = standardsInput
        self.standardsStatus = standardsStatus
        self.standardsSubscriptionArn = standardsSubscriptionArn
    }
}
