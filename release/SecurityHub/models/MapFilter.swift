// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A map filter for querying findings. Each map filter provides the field to check, the
///          value to look for, and the comparison operator.</p>
public struct MapFilter: Equatable {
    /// <p>The condition to apply to the key value when querying for findings with a map
    ///          filter.</p>
    ///          <p>To search for values that exactly match the filter value, use <code>EQUALS</code>. For
    ///          example, for the <code>ResourceTags</code> field, the filter <code>Department EQUALS
    ///             Security</code> matches findings that have the value <code>Security</code> for the tag
    ///             <code>Department</code>.</p>
    ///          <p>To search for values other than the filter value, use <code>NOT_EQUALS</code>. For
    ///          example, for the <code>ResourceTags</code> field, the filter <code>Department NOT_EQUALS
    ///             Finance</code> matches findings that do not have the value <code>Finance</code> for the
    ///          tag <code>Department</code>.</p>
    ///          <p>
    ///             <code>EQUALS</code> filters on the same field are joined by <code>OR</code>. A finding
    ///          matches if it matches any one of those filters.</p>
    ///          <p>
    ///             <code>NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A
    ///          finding matches only if it matches all of those filters.</p>
    ///          <p>You cannot have both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> filter
    ///          on the same field.</p>
    public let comparison: MapFilterComparison?
    /// <p>The key of the map filter. For example, for <code>ResourceTags</code>, <code>Key</code>
    ///          identifies the name of the tag. For <code>UserDefinedFields</code>, <code>Key</code> is the
    ///          name of the field.</p>
    public let key: String?
    /// <p>The value for the key in the map filter. Filter values are case sensitive. For example,
    ///          one of the values for a tag called <code>Department</code> might be <code>Security</code>.
    ///          If you provide <code>security</code> as the filter value, then there is no match.</p>
    public let value: String?

    public init (
        comparison: MapFilterComparison? = nil,
        key: String? = nil,
        value: String? = nil
    )
    {
        self.comparison = comparison
        self.key = key
        self.value = value
    }
}
