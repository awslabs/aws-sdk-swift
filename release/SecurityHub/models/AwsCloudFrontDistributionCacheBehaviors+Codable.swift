// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AwsCloudFrontDistributionCacheBehaviors: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case items = "Items"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let items = items {
            var itemsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .items)
            for awscloudfrontdistributioncachebehaviorsitemlist0 in items {
                try itemsContainer.encode(awscloudfrontdistributioncachebehaviorsitemlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let itemsContainer = try containerValues.decodeIfPresent([AwsCloudFrontDistributionCacheBehavior].self, forKey: .items)
        var itemsDecoded0:[AwsCloudFrontDistributionCacheBehavior]? = nil
        if let itemsContainer = itemsContainer {
            itemsDecoded0 = [AwsCloudFrontDistributionCacheBehavior]()
            for structure0 in itemsContainer {
                itemsDecoded0?.append(structure0)
            }
        }
        items = itemsDecoded0
    }
}
