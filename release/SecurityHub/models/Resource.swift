// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A resource related to a finding.</p>
public struct Resource: Equatable {
    /// <p>Contains information about sensitive data that was detected on the resource.</p>
    public let dataClassification: DataClassificationDetails?
    /// <p>Additional details about the resource related to a finding.</p>
    public let details: ResourceDetails?
    /// <p>The canonical identifier for the given resource type.</p>
    public let id: String?
    /// <p>The canonical AWS partition name that the Region is assigned to.</p>
    public let partition: Partition?
    /// <p>The canonical AWS external Region name where this resource is located.</p>
    public let region: String?
    /// <p>Identifies the role of the resource in the finding. A resource is either the actor or target of the finding activity,</p>
    public let resourceRole: String?
    /// <p>A list of AWS tags associated with a resource at the time the finding was
    ///          processed.</p>
    public let tags: [String:String]?
    /// <p>The type of the resource that details are provided for. If possible, set
    ///             <code>Type</code> to one of the supported resource types. For example, if the resource
    ///          is an EC2 instance, then set <code>Type</code> to <code>AwsEc2Instance</code>.</p>
    ///          <p>If the resource does not match any of the provided types, then set <code>Type</code> to
    ///             <code>Other</code>. </p>
    public let type: String?

    public init (
        dataClassification: DataClassificationDetails? = nil,
        details: ResourceDetails? = nil,
        id: String? = nil,
        partition: Partition? = nil,
        region: String? = nil,
        resourceRole: String? = nil,
        tags: [String:String]? = nil,
        type: String? = nil
    )
    {
        self.dataClassification = dataClassification
        self.details = details
        self.id = id
        self.partition = partition
        self.region = region
        self.resourceRole = resourceRole
        self.tags = tags
        self.type = type
    }
}
