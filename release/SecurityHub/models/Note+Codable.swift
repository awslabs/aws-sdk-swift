// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Note: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case text = "Text"
        case updatedAt = "UpdatedAt"
        case updatedBy = "UpdatedBy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let text = text {
            try encodeContainer.encode(text, forKey: .text)
        }
        if let updatedAt = updatedAt {
            try encodeContainer.encode(updatedAt, forKey: .updatedAt)
        }
        if let updatedBy = updatedBy {
            try encodeContainer.encode(updatedBy, forKey: .updatedBy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let textDecoded = try containerValues.decodeIfPresent(String.self, forKey: .text)
        text = textDecoded
        let updatedByDecoded = try containerValues.decodeIfPresent(String.self, forKey: .updatedBy)
        updatedBy = updatedByDecoded
        let updatedAtDecoded = try containerValues.decodeIfPresent(String.self, forKey: .updatedAt)
        updatedAt = updatedAtDecoded
    }
}
