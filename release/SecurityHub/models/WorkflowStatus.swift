// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum WorkflowStatus {
    case new
    case notified
    case resolved
    case suppressed
    case sdkUnknown(String)
}

extension WorkflowStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [WorkflowStatus] {
        return [
            .new,
            .notified,
            .resolved,
            .suppressed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .new: return "NEW"
        case .notified: return "NOTIFIED"
        case .resolved: return "RESOLVED"
        case .suppressed: return "SUPPRESSED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = WorkflowStatus(rawValue: rawValue) ?? WorkflowStatus.sdkUnknown(rawValue)
    }
}
