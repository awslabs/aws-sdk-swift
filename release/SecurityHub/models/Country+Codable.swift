// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Country: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case countryCode = "CountryCode"
        case countryName = "CountryName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let countryCode = countryCode {
            try encodeContainer.encode(countryCode, forKey: .countryCode)
        }
        if let countryName = countryName {
            try encodeContainer.encode(countryName, forKey: .countryName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let countryCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .countryCode)
        countryCode = countryCodeDecoded
        let countryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .countryName)
        countryName = countryNameDecoded
    }
}
