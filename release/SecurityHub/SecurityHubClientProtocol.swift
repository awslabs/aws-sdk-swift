// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Security Hub provides you with a comprehensive view of the security state of your AWS
///          environment and resources. It also provides you with the readiness status of your
///          environment based on controls from supported security standards. Security Hub collects security
///          data from AWS accounts, services, and integrated third-party products and helps you analyze
///          security trends in your environment to identify the highest priority security issues. For
///          more information about Security Hub, see the <i>
///                <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html">AWS Security Hub User
///                Guide</a>
///             </i>.</p>
///          <p>When you use operations in the Security Hub API, the requests are executed only in the AWS
///          Region that is currently active or in the specific AWS Region that you specify in your
///          request. Any configuration or settings change that results from the operation is applied
///          only to that Region. To make the same change in other Regions, execute the same command for
///          each Region to apply the change to.</p>
///          <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>
///                <a>CreateMembers</a>
///             </code> to add a member account to Security Hub, the association of
///          the member account with the administrator account is created only in the <code>us-west-2</code>
///          Region. Security Hub must be enabled for the member account in the same Region that the invitation
///          was sent from.</p>
///          <p>The following throttling limits apply to using Security Hub API operations.</p>
///          <ul>
///             <li>
///                <p>
///                   <code>
///                      <a>BatchEnableStandards</a>
///                   </code> - <code>RateLimit</code> of 1
///                request per second, <code>BurstLimit</code> of 1 request per second.</p>
///             </li>
///             <li>
///                <p>
///                   <code>
///                      <a>GetFindings</a>
///                   </code> - <code>RateLimit</code> of 3 requests per second.
///                   <code>BurstLimit</code> of 6 requests per second.</p>
///             </li>
///             <li>
///                <p>
///                   <code>
///                      <a>UpdateFindings</a>
///                   </code> - <code>RateLimit</code> of 1 request per
///                second. <code>BurstLimit</code> of 5 requests per second.</p>
///             </li>
///             <li>
///                <p>
///                   <code>
///                      <a>UpdateStandardsControl</a>
///                   </code> - <code>RateLimit</code> of
///                1 request per second, <code>BurstLimit</code> of 5 requests per second.</p>
///             </li>
///             <li>
///                <p>All other operations - <code>RateLimit</code> of 10 requests per second.
///                   <code>BurstLimit</code> of 30 requests per second.</p>
///             </li>
///          </ul>
public protocol SecurityHubClientProtocol {
    /// <p>Accepts the invitation to be a member account and be monitored by the Security Hub administrator
    ///          account that the invitation was sent from.</p>
    ///          <p>This operation is only used by member accounts that are not added through
    ///          Organizations.</p>
    ///          <p>When the member account accepts the invitation, permission is granted to the administrator
    ///          account to view findings generated in the member account.</p>
    func acceptAdministratorInvitation(input: AcceptAdministratorInvitationInput, completion: @escaping (SdkResult<AcceptAdministratorInvitationOutputResponse, AcceptAdministratorInvitationOutputError>) -> Void)
    /// <p>This method is deprecated. Instead, use <code>AcceptAdministratorInvitation</code>.</p>
    ///          <p>The Security Hub console continues to use <code>AcceptInvitation</code>. It will eventually change to use <code>AcceptAdministratorInvitation</code>. Any IAM policies that specifically control access to this function must continue to use <code>AcceptInvitation</code>. You should also add <code>AcceptAdministratorInvitation</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>AcceptAdministratorInvitation</code>.</p>
    ///          <p>Accepts the invitation to be a member account and be monitored by the Security Hub administrator
    ///          account that the invitation was sent from.</p>
    ///          <p>This operation is only used by member accounts that are not added through
    ///          Organizations.</p>
    ///          <p>When the member account accepts the invitation, permission is granted to the administrator
    ///          account to view findings generated in the member account.</p>
    @available(*, deprecated, message: "This API has been deprecated, use AcceptAdministratorInvitation API instead.")
    func acceptInvitation(input: AcceptInvitationInput, completion: @escaping (SdkResult<AcceptInvitationOutputResponse, AcceptInvitationOutputError>) -> Void)
    /// <p>Disables the standards specified by the provided
    ///          <code>StandardsSubscriptionArns</code>.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a> section of the <i>AWS Security Hub User
    ///          Guide</i>.</p>
    func batchDisableStandards(input: BatchDisableStandardsInput, completion: @escaping (SdkResult<BatchDisableStandardsOutputResponse, BatchDisableStandardsOutputError>) -> Void)
    /// <p>Enables the standards specified by the provided <code>StandardsArn</code>. To obtain the
    ///          ARN for a standard, use the <code>
    ///                <a>DescribeStandards</a>
    ///             </code>
    ///          operation.</p>
    ///          <p>For more information, see the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a>
    ///          section of the <i>AWS Security Hub User Guide</i>.</p>
    func batchEnableStandards(input: BatchEnableStandardsInput, completion: @escaping (SdkResult<BatchEnableStandardsOutputResponse, BatchEnableStandardsOutputError>) -> Void)
    /// <p>Imports security findings generated from an integrated product into Security Hub.
    ///          This action is requested by the integrated product to import its findings into
    ///          Security Hub.</p>
    ///          <p>The maximum allowed size for a finding is 240 Kb. An error is returned for any finding
    ///          larger than 240 Kb.</p>
    ///          <p>After a finding is created, <code>BatchImportFindings</code> cannot be used to update
    ///          the following finding fields and objects, which Security Hub customers use to manage their
    ///          investigation workflow.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Note</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>UserDefinedFields</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VerificationState</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Workflow</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>Finding providers also should not use <code>BatchImportFindings</code> to update the following attributes.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Confidence</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Criticality</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>RelatedFindings</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Severity</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Types</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>Instead, finding providers use <code>FindingProviderFields</code> to provide values for these attributes.</p>
    func batchImportFindings(input: BatchImportFindingsInput, completion: @escaping (SdkResult<BatchImportFindingsOutputResponse, BatchImportFindingsOutputError>) -> Void)
    /// <p>Used by Security Hub customers to update information about their investigation into a finding.
    ///          Requested by administrator accounts or member accounts. Administrator accounts can update findings for
    ///          their account and their member accounts. Member accounts can update findings for their
    ///          account.</p>
    ///          <p>Updates from <code>BatchUpdateFindings</code> do not affect the value of
    ///             <code>UpdatedAt</code> for a finding.</p>
    ///          <p>Administrator and member accounts can use <code>BatchUpdateFindings</code> to update the
    ///          following finding fields and objects.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>Confidence</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Criticality</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Note</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>RelatedFindings</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Severity</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Types</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>UserDefinedFields</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>VerificationState</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>Workflow</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <p>You can configure IAM policies to restrict access to fields and field values. For
    ///          example, you might not want member accounts to be able to suppress findings or change the
    ///          finding severity. See <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchupdatefindings.html#batchupdatefindings-configure-access">Configuring access to BatchUpdateFindings</a> in the
    ///             <i>AWS Security Hub User Guide</i>.</p>
    func batchUpdateFindings(input: BatchUpdateFindingsInput, completion: @escaping (SdkResult<BatchUpdateFindingsOutputResponse, BatchUpdateFindingsOutputError>) -> Void)
    /// <p>Creates a custom action target in Security Hub.</p>
    ///          <p>You can use custom actions on findings and insights in Security Hub to trigger target actions
    ///          in Amazon CloudWatch Events.</p>
    func createActionTarget(input: CreateActionTargetInput, completion: @escaping (SdkResult<CreateActionTargetOutputResponse, CreateActionTargetOutputError>) -> Void)
    /// <p>Creates a custom insight in Security Hub. An insight is a consolidation of findings that relate
    ///          to a security issue that requires attention or remediation.</p>
    ///          <p>To group the related findings in the insight, use the
    ///          <code>GroupByAttribute</code>.</p>
    func createInsight(input: CreateInsightInput, completion: @escaping (SdkResult<CreateInsightOutputResponse, CreateInsightOutputError>) -> Void)
    /// <p>Creates a member association in Security Hub between the specified accounts and the account
    ///          used to make the request, which is the administrator account. If you are integrated with
    ///          Organizations, then the administrator account is designated by the organization management account.</p>
    ///          <p>
    ///             <code>CreateMembers</code> is always used to add accounts that are not organization
    ///          members.</p>
    ///          <p>For accounts that are part of an organization, <code>CreateMembers</code> is only used
    ///          in the following cases:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Security Hub is not configured to automatically add new accounts in an
    ///                organization.</p>
    ///             </li>
    ///             <li>
    ///                <p>The account was disassociated or deleted in Security Hub.</p>
    ///             </li>
    ///          </ul>
    ///          <p>This action can only be used by an account that has Security Hub enabled. To enable Security Hub, you
    ///          can use the <code>
    ///                <a>EnableSecurityHub</a>
    ///             </code> operation.</p>
    ///          <p>For accounts that are not organization members, you create the account association and
    ///          then send an invitation to the member account. To send the invitation, you use the
    ///                <code>
    ///                <a>InviteMembers</a>
    ///             </code> operation. If the account owner accepts
    ///          the invitation, the account becomes a member account in Security Hub.</p>
    ///          <p>Accounts that are part of an organization do not receive an invitation. They
    ///          automatically become a member account in Security Hub.</p>
    ///          <p>A permissions policy is added that permits the administrator account to view the findings
    ///          generated in the member account. When Security Hub is enabled in a member account, the member account findings are
    ///          also visible to the administrator account. </p>
    ///          <p>To remove the association between the administrator and member accounts, use the <code>
    ///                <a>DisassociateFromMasterAccount</a>
    ///             </code> or <code>
    ///                <a>DisassociateMembers</a>
    ///             </code> operation.</p>
    func createMembers(input: CreateMembersInput, completion: @escaping (SdkResult<CreateMembersOutputResponse, CreateMembersOutputError>) -> Void)
    /// <p>Declines invitations to become a member account.</p>
    ///          <p>This operation is only used by accounts that are not part of an organization.
    ///          Organization accounts do not receive invitations.</p>
    func declineInvitations(input: DeclineInvitationsInput, completion: @escaping (SdkResult<DeclineInvitationsOutputResponse, DeclineInvitationsOutputError>) -> Void)
    /// <p>Deletes a custom action target from Security Hub.</p>
    ///          <p>Deleting a custom action target does not affect any findings or insights that were
    ///          already sent to Amazon CloudWatch Events using the custom action.</p>
    func deleteActionTarget(input: DeleteActionTargetInput, completion: @escaping (SdkResult<DeleteActionTargetOutputResponse, DeleteActionTargetOutputError>) -> Void)
    /// <p>Deletes the insight specified by the <code>InsightArn</code>.</p>
    func deleteInsight(input: DeleteInsightInput, completion: @escaping (SdkResult<DeleteInsightOutputResponse, DeleteInsightOutputError>) -> Void)
    /// <p>Deletes invitations received by the AWS account to become a member account.</p>
    ///          <p>This operation is only used by accounts that are not part of an organization.
    ///          Organization accounts do not receive invitations.</p>
    func deleteInvitations(input: DeleteInvitationsInput, completion: @escaping (SdkResult<DeleteInvitationsOutputResponse, DeleteInvitationsOutputError>) -> Void)
    /// <p>Deletes the specified member accounts from Security Hub.</p>
    ///          <p>Can be used to delete member accounts that belong to an organization as well as member
    ///          accounts that were invited manually.</p>
    func deleteMembers(input: DeleteMembersInput, completion: @escaping (SdkResult<DeleteMembersOutputResponse, DeleteMembersOutputError>) -> Void)
    /// <p>Returns a list of the custom action targets in Security Hub in your account.</p>
    func describeActionTargets(input: DescribeActionTargetsInput, completion: @escaping (SdkResult<DescribeActionTargetsOutputResponse, DescribeActionTargetsOutputError>) -> Void)
    /// <p>Returns details about the Hub resource in your account, including the
    ///             <code>HubArn</code> and the time when you enabled Security Hub.</p>
    func describeHub(input: DescribeHubInput, completion: @escaping (SdkResult<DescribeHubOutputResponse, DescribeHubOutputError>) -> Void)
    /// <p>Returns information about the Organizations configuration for Security Hub. Can only be
    ///          called from a Security Hub administrator account.</p>
    func describeOrganizationConfiguration(input: DescribeOrganizationConfigurationInput, completion: @escaping (SdkResult<DescribeOrganizationConfigurationOutputResponse, DescribeOrganizationConfigurationOutputError>) -> Void)
    /// <p>Returns information about product integrations in Security Hub.</p>
    ///          <p>You can optionally provide an integration ARN. If you provide an integration ARN, then
    ///          the results only include that integration.</p>
    ///          <p>If you do not provide an integration ARN, then the results include all of the available
    ///          product integrations. </p>
    func describeProducts(input: DescribeProductsInput, completion: @escaping (SdkResult<DescribeProductsOutputResponse, DescribeProductsOutputError>) -> Void)
    /// <p>Returns a list of the available standards in Security Hub.</p>
    ///          <p>For each standard, the results include the standard ARN, the name, and a description. </p>
    func describeStandards(input: DescribeStandardsInput, completion: @escaping (SdkResult<DescribeStandardsOutputResponse, DescribeStandardsOutputError>) -> Void)
    /// <p>Returns a list of security standards controls.</p>
    ///          <p>For each control, the results include information about whether it is currently enabled,
    ///          the severity, and a link to remediation information.</p>
    func describeStandardsControls(input: DescribeStandardsControlsInput, completion: @escaping (SdkResult<DescribeStandardsControlsOutputResponse, DescribeStandardsControlsOutputError>) -> Void)
    /// <p>Disables the integration of the specified product with Security Hub. After the integration is
    ///          disabled, findings from that product are no longer sent to Security Hub.</p>
    func disableImportFindingsForProduct(input: DisableImportFindingsForProductInput, completion: @escaping (SdkResult<DisableImportFindingsForProductOutputResponse, DisableImportFindingsForProductOutputError>) -> Void)
    /// <p>Disables a Security Hub administrator account. Can only be called by the organization
    ///          management account.</p>
    func disableOrganizationAdminAccount(input: DisableOrganizationAdminAccountInput, completion: @escaping (SdkResult<DisableOrganizationAdminAccountOutputResponse, DisableOrganizationAdminAccountOutputError>) -> Void)
    /// <p>Disables Security Hub in your account only in the current Region. To disable Security Hub in all
    ///          Regions, you must submit one request per Region where you have enabled Security Hub.</p>
    ///          <p>When you disable Security Hub for an administrator account, it doesn't disable Security Hub for any associated
    ///          member accounts.</p>
    ///          <p>When you disable Security Hub, your existing findings and insights and any Security Hub configuration
    ///          settings are deleted after 90 days and cannot be recovered. Any standards that were enabled
    ///          are disabled, and your administrator and member account associations are removed.</p>
    ///          <p>If you want to save your existing findings, you must export them before you disable
    ///          Security Hub.</p>
    func disableSecurityHub(input: DisableSecurityHubInput, completion: @escaping (SdkResult<DisableSecurityHubOutputResponse, DisableSecurityHubOutputError>) -> Void)
    /// <p>Disassociates the current Security Hub member account from the associated administrator
    ///          account.</p>
    ///          <p>This operation is only used by accounts that are not part of an organization. For
    ///          organization accounts, only the administrator account can
    ///          disassociate a member account.</p>
    func disassociateFromAdministratorAccount(input: DisassociateFromAdministratorAccountInput, completion: @escaping (SdkResult<DisassociateFromAdministratorAccountOutputResponse, DisassociateFromAdministratorAccountOutputError>) -> Void)
    /// <p>This method is deprecated. Instead, use <code>DisassociateFromAdministratorAccount</code>.</p>
    ///          <p>The Security Hub console continues to use <code>DisassociateFromMasterAccount</code>. It will eventually change to use <code>DisassociateFromAdministratorAccount</code>. Any IAM policies that specifically control access to this function must continue to use <code>DisassociateFromMasterAccount</code>. You should also add <code>DisassociateFromAdministratorAccount</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>DisassociateFromAdministratorAccount</code>.</p>
    ///          <p>Disassociates the current Security Hub member account from the associated administrator
    ///          account.</p>
    ///          <p>This operation is only used by accounts that are not part of an organization. For
    ///          organization accounts, only the administrator account can
    ///          disassociate a member account.</p>
    @available(*, deprecated, message: "This API has been deprecated, use DisassociateFromAdministratorAccount API instead.")
    func disassociateFromMasterAccount(input: DisassociateFromMasterAccountInput, completion: @escaping (SdkResult<DisassociateFromMasterAccountOutputResponse, DisassociateFromMasterAccountOutputError>) -> Void)
    /// <p>Disassociates the specified member accounts from the associated administrator account.</p>
    ///          <p>Can be used to disassociate both accounts that are managed using Organizations and accounts that
    ///          were invited manually.</p>
    func disassociateMembers(input: DisassociateMembersInput, completion: @escaping (SdkResult<DisassociateMembersOutputResponse, DisassociateMembersOutputError>) -> Void)
    /// <p>Enables the integration of a partner product with Security Hub. Integrated products send
    ///          findings to Security Hub.</p>
    ///          <p>When you enable a product integration, a permissions policy that grants permission for
    ///          the product to send findings to Security Hub is applied.</p>
    func enableImportFindingsForProduct(input: EnableImportFindingsForProductInput, completion: @escaping (SdkResult<EnableImportFindingsForProductOutputResponse, EnableImportFindingsForProductOutputError>) -> Void)
    /// <p>Designates the Security Hub administrator account for an organization. Can only be called by
    ///          the organization management account.</p>
    func enableOrganizationAdminAccount(input: EnableOrganizationAdminAccountInput, completion: @escaping (SdkResult<EnableOrganizationAdminAccountOutputResponse, EnableOrganizationAdminAccountOutputError>) -> Void)
    /// <p>Enables Security Hub for your account in the current Region or the Region you specify in the
    ///          request.</p>
    ///          <p>When you enable Security Hub, you grant to Security Hub the permissions necessary to gather findings
    ///          from other services that are integrated with Security Hub.</p>
    ///          <p>When you use the <code>EnableSecurityHub</code> operation to enable Security Hub, you also
    ///          automatically enable the following standards.</p>
    ///          <ul>
    ///             <li>
    ///                <p>CIS AWS Foundations</p>
    ///             </li>
    ///             <li>
    ///                <p>AWS Foundational Security Best Practices</p>
    ///             </li>
    ///          </ul>
    ///          <p>You do not enable the Payment Card Industry Data Security Standard (PCI DSS) standard. </p>
    ///          <p>To not enable the automatically enabled standards, set
    ///             <code>EnableDefaultStandards</code> to <code>false</code>.</p>
    ///          <p>After you enable Security Hub, to enable a standard, use the <code>
    ///                <a>BatchEnableStandards</a>
    ///             </code> operation. To disable a standard, use the
    ///                <code>
    ///                <a>BatchDisableStandards</a>
    ///             </code> operation.</p>
    ///          <p>To learn more, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html">Setting Up
    ///             AWS Security Hub</a> in the <i>AWS Security Hub User Guide</i>.</p>
    func enableSecurityHub(input: EnableSecurityHubInput, completion: @escaping (SdkResult<EnableSecurityHubOutputResponse, EnableSecurityHubOutputError>) -> Void)
    /// <p>Provides the details for the Security Hub administrator account for the current member account.</p>
    ///          <p>Can be used by both member accounts that are managed using Organizations and accounts that were
    ///          invited manually.</p>
    func getAdministratorAccount(input: GetAdministratorAccountInput, completion: @escaping (SdkResult<GetAdministratorAccountOutputResponse, GetAdministratorAccountOutputError>) -> Void)
    /// <p>Returns a list of the standards that are currently enabled.</p>
    func getEnabledStandards(input: GetEnabledStandardsInput, completion: @escaping (SdkResult<GetEnabledStandardsOutputResponse, GetEnabledStandardsOutputError>) -> Void)
    /// <p>Returns a list of findings that match the specified criteria.</p>
    func getFindings(input: GetFindingsInput, completion: @escaping (SdkResult<GetFindingsOutputResponse, GetFindingsOutputError>) -> Void)
    /// <p>Lists the results of the Security Hub insight specified by the insight ARN.</p>
    func getInsightResults(input: GetInsightResultsInput, completion: @escaping (SdkResult<GetInsightResultsOutputResponse, GetInsightResultsOutputError>) -> Void)
    /// <p>Lists and describes insights for the specified insight ARNs.</p>
    func getInsights(input: GetInsightsInput, completion: @escaping (SdkResult<GetInsightsOutputResponse, GetInsightsOutputError>) -> Void)
    /// <p>Returns the count of all Security Hub membership invitations that were sent to the
    ///          current member account, not including the currently accepted invitation. </p>
    func getInvitationsCount(input: GetInvitationsCountInput, completion: @escaping (SdkResult<GetInvitationsCountOutputResponse, GetInvitationsCountOutputError>) -> Void)
    /// <p>This method is deprecated. Instead, use <code>GetAdministratorAccount</code>.</p>
    ///          <p>The Security Hub console continues to use <code>GetMasterAccount</code>. It will eventually change to use <code>GetAdministratorAccount</code>. Any IAM policies that specifically control access to this function must continue to use <code>GetMasterAccount</code>. You should also add <code>GetAdministratorAccount</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>GetAdministratorAccount</code>.</p>
    ///          <p>Provides the details for the Security Hub administrator account for the current member account.</p>
    ///          <p>Can be used by both member accounts that are managed using Organizations and accounts that were
    ///          invited manually.</p>
    @available(*, deprecated, message: "This API has been deprecated, use GetAdministratorAccount API instead.")
    func getMasterAccount(input: GetMasterAccountInput, completion: @escaping (SdkResult<GetMasterAccountOutputResponse, GetMasterAccountOutputError>) -> Void)
    /// <p>Returns the details for the Security Hub member accounts for the specified account IDs.</p>
    ///          <p>An administrator account can be either the delegated Security Hub administrator account for an
    ///          organization or an administrator account that enabled Security Hub manually.</p>
    ///          <p>The results include both member accounts that are managed using Organizations and accounts that
    ///          were invited manually.</p>
    func getMembers(input: GetMembersInput, completion: @escaping (SdkResult<GetMembersOutputResponse, GetMembersOutputError>) -> Void)
    /// <p>Invites other AWS accounts to become member accounts for the Security Hub administrator account that
    ///          the invitation is sent from.</p>
    ///          <p>This operation is only used to invite accounts that do not belong to an organization.
    ///          Organization accounts do not receive invitations.</p>
    ///          <p>Before you can use this action to invite a member, you must first use the <code>
    ///                <a>CreateMembers</a>
    ///             </code> action to create the member account in Security Hub.</p>
    ///          <p>When the account owner enables Security Hub and accepts the invitation to become a member
    ///          account, the administrator account can view the findings generated from the member account.</p>
    func inviteMembers(input: InviteMembersInput, completion: @escaping (SdkResult<InviteMembersOutputResponse, InviteMembersOutputError>) -> Void)
    /// <p>Lists all findings-generating solutions (products) that you are subscribed to receive
    ///          findings from in Security Hub.</p>
    func listEnabledProductsForImport(input: ListEnabledProductsForImportInput, completion: @escaping (SdkResult<ListEnabledProductsForImportOutputResponse, ListEnabledProductsForImportOutputError>) -> Void)
    /// <p>Lists all Security Hub membership invitations that were sent to the current AWS account.</p>
    ///          <p>This operation is only used by accounts that are managed by invitation.
    ///          Accounts that are managed using the integration with AWS Organizations do not receive invitations.</p>
    func listInvitations(input: ListInvitationsInput, completion: @escaping (SdkResult<ListInvitationsOutputResponse, ListInvitationsOutputError>) -> Void)
    /// <p>Lists details about all member accounts for the current Security Hub administrator
    ///          account.</p>
    ///          <p>The results include both member accounts that belong to an organization and member
    ///          accounts that were invited manually.</p>
    func listMembers(input: ListMembersInput, completion: @escaping (SdkResult<ListMembersOutputResponse, ListMembersOutputError>) -> Void)
    /// <p>Lists the Security Hub administrator accounts. Can only be called by the organization
    ///          management account.</p>
    func listOrganizationAdminAccounts(input: ListOrganizationAdminAccountsInput, completion: @escaping (SdkResult<ListOrganizationAdminAccountsOutputResponse, ListOrganizationAdminAccountsOutputError>) -> Void)
    /// <p>Returns a list of tags associated with a resource.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Adds one or more tags to a resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes one or more tags from a resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates the name and description of a custom action target in Security Hub.</p>
    func updateActionTarget(input: UpdateActionTargetInput, completion: @escaping (SdkResult<UpdateActionTargetOutputResponse, UpdateActionTargetOutputError>) -> Void)
    /// <p>
    ///             <code>UpdateFindings</code> is deprecated. Instead of <code>UpdateFindings</code>, use
    ///             <code>BatchUpdateFindings</code>.</p>
    ///          <p>Updates the <code>Note</code> and <code>RecordState</code> of the Security Hub-aggregated
    ///          findings that the filter attributes specify. Any member account that can view the finding
    ///          also sees the update to the finding.</p>
    func updateFindings(input: UpdateFindingsInput, completion: @escaping (SdkResult<UpdateFindingsOutputResponse, UpdateFindingsOutputError>) -> Void)
    /// <p>Updates the Security Hub insight identified by the specified insight ARN.</p>
    func updateInsight(input: UpdateInsightInput, completion: @escaping (SdkResult<UpdateInsightOutputResponse, UpdateInsightOutputError>) -> Void)
    /// <p>Used to update the configuration related to Organizations. Can only be called from a
    ///          Security Hub administrator account.</p>
    func updateOrganizationConfiguration(input: UpdateOrganizationConfigurationInput, completion: @escaping (SdkResult<UpdateOrganizationConfigurationOutputResponse, UpdateOrganizationConfigurationOutputError>) -> Void)
    /// <p>Updates configuration options for Security Hub.</p>
    func updateSecurityHubConfiguration(input: UpdateSecurityHubConfigurationInput, completion: @escaping (SdkResult<UpdateSecurityHubConfigurationOutputResponse, UpdateSecurityHubConfigurationOutputError>) -> Void)
    /// <p>Used to control whether an individual security standard control is enabled or
    ///          disabled.</p>
    func updateStandardsControl(input: UpdateStandardsControlInput, completion: @escaping (SdkResult<UpdateStandardsControlOutputResponse, UpdateStandardsControlOutputError>) -> Void)
}
