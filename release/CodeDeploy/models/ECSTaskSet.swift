// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> Information about a set of Amazon ECS tasks in an AWS CodeDeploy deployment. An
///             Amazon ECS task set includes details such as the desired number of tasks, how many tasks
///             are running, and whether the task set serves production traffic. An AWS CodeDeploy
///             application that uses the Amazon ECS compute platform deploys a containerized
///             application in an Amazon ECS service as a task set. </p>
public struct ECSTaskSet: Equatable {
    /// <p> The number of tasks in a task set. During a deployment that uses the Amazon ECS
    ///             compute type, CodeDeploy instructs Amazon ECS to create a new task set and uses this
    ///             value to determine how many tasks to create. After the updated task set is created,
    ///             CodeDeploy shifts traffic to the new task set. </p>
    public let desiredCount: Int
    /// <p> A unique ID of an <code>ECSTaskSet</code>. </p>
    public let identifer: String?
    /// <p> The number of tasks in the task set that are in the <code>PENDING</code> status
    ///             during an Amazon ECS deployment. A task in the <code>PENDING</code> state is preparing
    ///             to enter the <code>RUNNING</code> state. A task set enters the <code>PENDING</code>
    ///             status when it launches for the first time, or when it is restarted after being in the
    ///                 <code>STOPPED</code> state. </p>
    public let pendingCount: Int
    /// <p> The number of tasks in the task set that are in the <code>RUNNING</code> status
    ///             during an Amazon ECS deployment. A task in the <code>RUNNING</code> state is running and
    ///             ready for use. </p>
    public let runningCount: Int
    /// <p> The status of the task set. There are three valid task set statuses: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>PRIMARY</code>: Indicates the task set is serving production traffic.
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>ACTIVE</code>: Indicates the task set is not serving production traffic.
    ///                 </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>DRAINING</code>: Indicates the tasks in the task set are being stopped and
    ///                     their corresponding targets are being deregistered from their target group.
    ///                 </p>
    ///             </li>
    ///          </ul>
    public let status: String?
    /// <p> The target group associated with the task set. The target group is used by AWS
    ///             CodeDeploy to manage traffic to a task set. </p>
    public let targetGroup: TargetGroupInfo?
    /// <p> A label that identifies whether the ECS task set is an original target
    ///                 (<code>BLUE</code>) or a replacement target (<code>GREEN</code>). </p>
    public let taskSetLabel: TargetLabel?
    /// <p> The percentage of traffic served by this task set. </p>
    public let trafficWeight: Double

    public init (
        desiredCount: Int = 0,
        identifer: String? = nil,
        pendingCount: Int = 0,
        runningCount: Int = 0,
        status: String? = nil,
        targetGroup: TargetGroupInfo? = nil,
        taskSetLabel: TargetLabel? = nil,
        trafficWeight: Double = 0.0
    )
    {
        self.desiredCount = desiredCount
        self.identifer = identifer
        self.pendingCount = pendingCount
        self.runningCount = runningCount
        self.status = status
        self.targetGroup = targetGroup
        self.taskSetLabel = taskSetLabel
        self.trafficWeight = trafficWeight
    }
}
