// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TargetGroupPairInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case prodTrafficRoute
        case targetGroups
        case testTrafficRoute
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let prodTrafficRoute = prodTrafficRoute {
            try encodeContainer.encode(prodTrafficRoute, forKey: .prodTrafficRoute)
        }
        if let targetGroups = targetGroups {
            var targetGroupsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .targetGroups)
            for targetgroupinfolist0 in targetGroups {
                try targetGroupsContainer.encode(targetgroupinfolist0)
            }
        }
        if let testTrafficRoute = testTrafficRoute {
            try encodeContainer.encode(testTrafficRoute, forKey: .testTrafficRoute)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetGroupsContainer = try containerValues.decodeIfPresent([TargetGroupInfo].self, forKey: .targetGroups)
        var targetGroupsDecoded0:[TargetGroupInfo]? = nil
        if let targetGroupsContainer = targetGroupsContainer {
            targetGroupsDecoded0 = [TargetGroupInfo]()
            for structure0 in targetGroupsContainer {
                targetGroupsDecoded0?.append(structure0)
            }
        }
        targetGroups = targetGroupsDecoded0
        let prodTrafficRouteDecoded = try containerValues.decodeIfPresent(TrafficRoute.self, forKey: .prodTrafficRoute)
        prodTrafficRoute = prodTrafficRouteDecoded
        let testTrafficRouteDecoded = try containerValues.decodeIfPresent(TrafficRoute.self, forKey: .testTrafficRoute)
        testTrafficRoute = testTrafficRouteDecoded
    }
}
