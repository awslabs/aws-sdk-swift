// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeploymentGroupsOutputBody: Equatable {
    public let applicationName: String?
    public let deploymentGroups: [String]?
    public let nextToken: String?
}

extension ListDeploymentGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationName
        case deploymentGroups
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let deploymentGroupsContainer = try containerValues.decodeIfPresent([String].self, forKey: .deploymentGroups)
        var deploymentGroupsDecoded0:[String]? = nil
        if let deploymentGroupsContainer = deploymentGroupsContainer {
            deploymentGroupsDecoded0 = [String]()
            for string0 in deploymentGroupsContainer {
                deploymentGroupsDecoded0?.append(string0)
            }
        }
        deploymentGroups = deploymentGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
