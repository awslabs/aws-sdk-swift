// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeploymentStyle: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deploymentOption
        case deploymentType
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentOption = deploymentOption {
            try encodeContainer.encode(deploymentOption.rawValue, forKey: .deploymentOption)
        }
        if let deploymentType = deploymentType {
            try encodeContainer.encode(deploymentType.rawValue, forKey: .deploymentType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentTypeDecoded = try containerValues.decodeIfPresent(DeploymentType.self, forKey: .deploymentType)
        deploymentType = deploymentTypeDecoded
        let deploymentOptionDecoded = try containerValues.decodeIfPresent(DeploymentOption.self, forKey: .deploymentOption)
        deploymentOption = deploymentOptionDecoded
    }
}
