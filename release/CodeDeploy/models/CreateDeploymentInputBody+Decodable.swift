// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDeploymentInputBody: Equatable {
    public let applicationName: String?
    public let deploymentGroupName: String?
    public let revision: RevisionLocation?
    public let deploymentConfigName: String?
    public let description: String?
    public let ignoreApplicationStopFailures: Bool
    public let targetInstances: TargetInstances?
    public let autoRollbackConfiguration: AutoRollbackConfiguration?
    public let updateOutdatedInstancesOnly: Bool
    public let fileExistsBehavior: FileExistsBehavior?
}

extension CreateDeploymentInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationName
        case autoRollbackConfiguration
        case deploymentConfigName
        case deploymentGroupName
        case description
        case fileExistsBehavior
        case ignoreApplicationStopFailures
        case revision
        case targetInstances
        case updateOutdatedInstancesOnly
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let deploymentGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentGroupName)
        deploymentGroupName = deploymentGroupNameDecoded
        let revisionDecoded = try containerValues.decodeIfPresent(RevisionLocation.self, forKey: .revision)
        revision = revisionDecoded
        let deploymentConfigNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentConfigName)
        deploymentConfigName = deploymentConfigNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let ignoreApplicationStopFailuresDecoded = try containerValues.decode(Bool.self, forKey: .ignoreApplicationStopFailures)
        ignoreApplicationStopFailures = ignoreApplicationStopFailuresDecoded
        let targetInstancesDecoded = try containerValues.decodeIfPresent(TargetInstances.self, forKey: .targetInstances)
        targetInstances = targetInstancesDecoded
        let autoRollbackConfigurationDecoded = try containerValues.decodeIfPresent(AutoRollbackConfiguration.self, forKey: .autoRollbackConfiguration)
        autoRollbackConfiguration = autoRollbackConfigurationDecoded
        let updateOutdatedInstancesOnlyDecoded = try containerValues.decode(Bool.self, forKey: .updateOutdatedInstancesOnly)
        updateOutdatedInstancesOnly = updateOutdatedInstancesOnlyDecoded
        let fileExistsBehaviorDecoded = try containerValues.decodeIfPresent(FileExistsBehavior.self, forKey: .fileExistsBehavior)
        fileExistsBehavior = fileExistsBehaviorDecoded
    }
}
