// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListDeploymentsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case applicationName
        case createTimeRange
        case deploymentGroupName
        case externalId
        case includeOnlyStatuses
        case nextToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let applicationName = applicationName {
            try encodeContainer.encode(applicationName, forKey: .applicationName)
        }
        if let createTimeRange = createTimeRange {
            try encodeContainer.encode(createTimeRange, forKey: .createTimeRange)
        }
        if let deploymentGroupName = deploymentGroupName {
            try encodeContainer.encode(deploymentGroupName, forKey: .deploymentGroupName)
        }
        if let externalId = externalId {
            try encodeContainer.encode(externalId, forKey: .externalId)
        }
        if let includeOnlyStatuses = includeOnlyStatuses {
            var includeOnlyStatusesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .includeOnlyStatuses)
            for deploymentstatuslist0 in includeOnlyStatuses {
                try includeOnlyStatusesContainer.encode(deploymentstatuslist0.rawValue)
            }
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
    }
}
