// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TrafficRoute: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case listenerArns
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let listenerArns = listenerArns {
            var listenerArnsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .listenerArns)
            for listenerarnlist0 in listenerArns {
                try listenerArnsContainer.encode(listenerarnlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let listenerArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .listenerArns)
        var listenerArnsDecoded0:[String]? = nil
        if let listenerArnsContainer = listenerArnsContainer {
            listenerArnsDecoded0 = [String]()
            for string0 in listenerArnsContainer {
                listenerArnsDecoded0?.append(string0)
            }
        }
        listenerArns = listenerArnsDecoded0
    }
}
