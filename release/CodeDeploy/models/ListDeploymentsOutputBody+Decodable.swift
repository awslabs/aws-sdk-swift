// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeploymentsOutputBody: Equatable {
    public let deployments: [String]?
    public let nextToken: String?
}

extension ListDeploymentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deployments
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentsContainer = try containerValues.decodeIfPresent([String].self, forKey: .deployments)
        var deploymentsDecoded0:[String]? = nil
        if let deploymentsContainer = deploymentsContainer {
            deploymentsDecoded0 = [String]()
            for string0 in deploymentsContainer {
                deploymentsDecoded0?.append(string0)
            }
        }
        deployments = deploymentsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
