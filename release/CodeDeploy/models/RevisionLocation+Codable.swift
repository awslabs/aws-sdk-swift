// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RevisionLocation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case appSpecContent
        case gitHubLocation
        case revisionType
        case s3Location
        case string
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appSpecContent = appSpecContent {
            try encodeContainer.encode(appSpecContent, forKey: .appSpecContent)
        }
        if let gitHubLocation = gitHubLocation {
            try encodeContainer.encode(gitHubLocation, forKey: .gitHubLocation)
        }
        if let revisionType = revisionType {
            try encodeContainer.encode(revisionType.rawValue, forKey: .revisionType)
        }
        if let s3Location = s3Location {
            try encodeContainer.encode(s3Location, forKey: .s3Location)
        }
        if let string = string {
            try encodeContainer.encode(string, forKey: .string)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionTypeDecoded = try containerValues.decodeIfPresent(RevisionLocationType.self, forKey: .revisionType)
        revisionType = revisionTypeDecoded
        let s3LocationDecoded = try containerValues.decodeIfPresent(S3Location.self, forKey: .s3Location)
        s3Location = s3LocationDecoded
        let gitHubLocationDecoded = try containerValues.decodeIfPresent(GitHubLocation.self, forKey: .gitHubLocation)
        gitHubLocation = gitHubLocationDecoded
        let stringDecoded = try containerValues.decodeIfPresent(RawString.self, forKey: .string)
        string = stringDecoded
        let appSpecContentDecoded = try containerValues.decodeIfPresent(AppSpecContent.self, forKey: .appSpecContent)
        appSpecContent = appSpecContentDecoded
    }
}
