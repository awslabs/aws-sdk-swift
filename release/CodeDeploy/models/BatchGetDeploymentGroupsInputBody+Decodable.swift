// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetDeploymentGroupsInputBody: Equatable {
    public let applicationName: String?
    public let deploymentGroupNames: [String]?
}

extension BatchGetDeploymentGroupsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationName
        case deploymentGroupNames
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let deploymentGroupNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .deploymentGroupNames)
        var deploymentGroupNamesDecoded0:[String]? = nil
        if let deploymentGroupNamesContainer = deploymentGroupNamesContainer {
            deploymentGroupNamesDecoded0 = [String]()
            for string0 in deploymentGroupNamesContainer {
                deploymentGroupNamesDecoded0?.append(string0)
            }
        }
        deploymentGroupNames = deploymentGroupNamesDecoded0
    }
}
