// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationRevisionsOutputBody: Equatable {
    public let revisions: [RevisionLocation]?
    public let nextToken: String?
}

extension ListApplicationRevisionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case revisions
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionsContainer = try containerValues.decodeIfPresent([RevisionLocation].self, forKey: .revisions)
        var revisionsDecoded0:[RevisionLocation]? = nil
        if let revisionsContainer = revisionsContainer {
            revisionsDecoded0 = [RevisionLocation]()
            for structure0 in revisionsContainer {
                revisionsDecoded0?.append(structure0)
            }
        }
        revisions = revisionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
