// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListDeploymentTargetsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deploymentId
        case nextToken
        case targetFilters
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentId = deploymentId {
            try encodeContainer.encode(deploymentId, forKey: .deploymentId)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let targetFilters = targetFilters {
            var targetFiltersContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .targetFilters)
            for (dictKey0, targetfilters0) in targetFilters {
                try targetFiltersContainer.encode(targetfilters0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
