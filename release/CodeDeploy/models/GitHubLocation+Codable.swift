// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GitHubLocation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case commitId
        case repository
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let commitId = commitId {
            try encodeContainer.encode(commitId, forKey: .commitId)
        }
        if let repository = repository {
            try encodeContainer.encode(repository, forKey: .repository)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let repositoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .repository)
        repository = repositoryDecoded
        let commitIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .commitId)
        commitId = commitIdDecoded
    }
}
