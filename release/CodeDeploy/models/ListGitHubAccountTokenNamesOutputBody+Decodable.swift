// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGitHubAccountTokenNamesOutputBody: Equatable {
    public let tokenNameList: [String]?
    public let nextToken: String?
}

extension ListGitHubAccountTokenNamesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case tokenNameList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tokenNameListContainer = try containerValues.decodeIfPresent([String].self, forKey: .tokenNameList)
        var tokenNameListDecoded0:[String]? = nil
        if let tokenNameListContainer = tokenNameListContainer {
            tokenNameListDecoded0 = [String]()
            for string0 in tokenNameListContainer {
                tokenNameListDecoded0?.append(string0)
            }
        }
        tokenNameList = tokenNameListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
