// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateDeploymentConfigInputBody: Equatable {
    public let deploymentConfigName: String?
    public let minimumHealthyHosts: MinimumHealthyHosts?
    public let trafficRoutingConfig: TrafficRoutingConfig?
    public let computePlatform: ComputePlatform?
}

extension CreateDeploymentConfigInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case computePlatform
        case deploymentConfigName
        case minimumHealthyHosts
        case trafficRoutingConfig
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentConfigNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentConfigName)
        deploymentConfigName = deploymentConfigNameDecoded
        let minimumHealthyHostsDecoded = try containerValues.decodeIfPresent(MinimumHealthyHosts.self, forKey: .minimumHealthyHosts)
        minimumHealthyHosts = minimumHealthyHostsDecoded
        let trafficRoutingConfigDecoded = try containerValues.decodeIfPresent(TrafficRoutingConfig.self, forKey: .trafficRoutingConfig)
        trafficRoutingConfig = trafficRoutingConfigDecoded
        let computePlatformDecoded = try containerValues.decodeIfPresent(ComputePlatform.self, forKey: .computePlatform)
        computePlatform = computePlatformDecoded
    }
}
