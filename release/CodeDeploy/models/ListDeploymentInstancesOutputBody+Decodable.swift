// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeploymentInstancesOutputBody: Equatable {
    public let instancesList: [String]?
    public let nextToken: String?
}

extension ListDeploymentInstancesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instancesList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instancesListContainer = try containerValues.decodeIfPresent([String].self, forKey: .instancesList)
        var instancesListDecoded0:[String]? = nil
        if let instancesListContainer = instancesListContainer {
            instancesListDecoded0 = [String]()
            for string0 in instancesListContainer {
                instancesListDecoded0?.append(string0)
            }
        }
        instancesList = instancesListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
