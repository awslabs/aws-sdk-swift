// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DeploymentReadyOption: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case actionOnTimeout
        case waitTimeInMinutes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionOnTimeout = actionOnTimeout {
            try encodeContainer.encode(actionOnTimeout.rawValue, forKey: .actionOnTimeout)
        }
        if waitTimeInMinutes != 0 {
            try encodeContainer.encode(waitTimeInMinutes, forKey: .waitTimeInMinutes)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionOnTimeoutDecoded = try containerValues.decodeIfPresent(DeploymentReadyAction.self, forKey: .actionOnTimeout)
        actionOnTimeout = actionOnTimeoutDecoded
        let waitTimeInMinutesDecoded = try containerValues.decode(Int.self, forKey: .waitTimeInMinutes)
        waitTimeInMinutes = waitTimeInMinutesDecoded
    }
}
