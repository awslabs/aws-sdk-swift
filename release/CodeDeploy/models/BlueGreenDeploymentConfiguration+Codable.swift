// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BlueGreenDeploymentConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deploymentReadyOption
        case greenFleetProvisioningOption
        case terminateBlueInstancesOnDeploymentSuccess
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deploymentReadyOption = deploymentReadyOption {
            try encodeContainer.encode(deploymentReadyOption, forKey: .deploymentReadyOption)
        }
        if let greenFleetProvisioningOption = greenFleetProvisioningOption {
            try encodeContainer.encode(greenFleetProvisioningOption, forKey: .greenFleetProvisioningOption)
        }
        if let terminateBlueInstancesOnDeploymentSuccess = terminateBlueInstancesOnDeploymentSuccess {
            try encodeContainer.encode(terminateBlueInstancesOnDeploymentSuccess, forKey: .terminateBlueInstancesOnDeploymentSuccess)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let terminateBlueInstancesOnDeploymentSuccessDecoded = try containerValues.decodeIfPresent(BlueInstanceTerminationOption.self, forKey: .terminateBlueInstancesOnDeploymentSuccess)
        terminateBlueInstancesOnDeploymentSuccess = terminateBlueInstancesOnDeploymentSuccessDecoded
        let deploymentReadyOptionDecoded = try containerValues.decodeIfPresent(DeploymentReadyOption.self, forKey: .deploymentReadyOption)
        deploymentReadyOption = deploymentReadyOptionDecoded
        let greenFleetProvisioningOptionDecoded = try containerValues.decodeIfPresent(GreenFleetProvisioningOption.self, forKey: .greenFleetProvisioningOption)
        greenFleetProvisioningOption = greenFleetProvisioningOptionDecoded
    }
}
