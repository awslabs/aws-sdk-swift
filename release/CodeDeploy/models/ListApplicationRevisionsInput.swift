// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> Represents the input of a <code>ListApplicationRevisions</code> operation. </p>
public struct ListApplicationRevisionsInput: Equatable {
    /// <p> The name of an AWS CodeDeploy application associated with the IAM user or AWS
    ///             account. </p>
    public let applicationName: String?
    /// <p> Whether to list revisions based on whether the revision is the target revision of a
    ///             deployment group: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>include</code>: List revisions that are target revisions of a deployment
    ///                     group.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>exclude</code>: Do not list revisions that are target revisions of a
    ///                     deployment group.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ignore</code>: List all revisions.</p>
    ///             </li>
    ///          </ul>
    public let deployed: ListStateFilterAction?
    /// <p>An identifier returned from the previous <code>ListApplicationRevisions</code> call.
    ///             It can be used to return the next set of applications in the list.</p>
    public let nextToken: String?
    /// <p> An Amazon S3 bucket name to limit the search for revisions. </p>
    ///         <p> If set to null, all of the user's buckets are searched. </p>
    public let s3Bucket: String?
    /// <p> A key prefix for the set of Amazon S3 objects to limit the search for revisions.
    ///         </p>
    public let s3KeyPrefix: String?
    /// <p>The column name to use to sort the list results:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>registerTime</code>: Sort by the time the revisions were registered with
    ///                     AWS CodeDeploy.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>firstUsedTime</code>: Sort by the time the revisions were first used in
    ///                     a deployment.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>lastUsedTime</code>: Sort by the time the revisions were last used in a
    ///                     deployment.</p>
    ///             </li>
    ///          </ul>
    ///         <p> If not specified or set to null, the results are returned in an arbitrary order.
    ///         </p>
    public let sortBy: ApplicationRevisionSortBy?
    /// <p> The order in which to sort the list results: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>ascending</code>: ascending order.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>descending</code>: descending order.</p>
    ///             </li>
    ///          </ul>
    ///         <p>If not specified, the results are sorted in ascending order.</p>
    ///         <p>If set to null, the results are sorted in an arbitrary order.</p>
    public let sortOrder: SortOrder?

    public init (
        applicationName: String? = nil,
        deployed: ListStateFilterAction? = nil,
        nextToken: String? = nil,
        s3Bucket: String? = nil,
        s3KeyPrefix: String? = nil,
        sortBy: ApplicationRevisionSortBy? = nil,
        sortOrder: SortOrder? = nil
    )
    {
        self.applicationName = applicationName
        self.deployed = deployed
        self.nextToken = nextToken
        self.s3Bucket = s3Bucket
        self.s3KeyPrefix = s3KeyPrefix
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
