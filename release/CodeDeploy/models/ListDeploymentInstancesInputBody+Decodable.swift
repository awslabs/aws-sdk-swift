// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDeploymentInstancesInputBody: Equatable {
    public let deploymentId: String?
    public let nextToken: String?
    public let instanceStatusFilter: [InstanceStatus]?
    public let instanceTypeFilter: [InstanceType]?
}

extension ListDeploymentInstancesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deploymentId
        case instanceStatusFilter
        case instanceTypeFilter
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let deploymentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deploymentId)
        deploymentId = deploymentIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let instanceStatusFilterContainer = try containerValues.decodeIfPresent([InstanceStatus].self, forKey: .instanceStatusFilter)
        var instanceStatusFilterDecoded0:[InstanceStatus]? = nil
        if let instanceStatusFilterContainer = instanceStatusFilterContainer {
            instanceStatusFilterDecoded0 = [InstanceStatus]()
            for string0 in instanceStatusFilterContainer {
                instanceStatusFilterDecoded0?.append(string0)
            }
        }
        instanceStatusFilter = instanceStatusFilterDecoded0
        let instanceTypeFilterContainer = try containerValues.decodeIfPresent([InstanceType].self, forKey: .instanceTypeFilter)
        var instanceTypeFilterDecoded0:[InstanceType]? = nil
        if let instanceTypeFilterContainer = instanceTypeFilterContainer {
            instanceTypeFilterDecoded0 = [InstanceType]()
            for string0 in instanceTypeFilterContainer {
                instanceTypeFilterDecoded0?.append(string0)
            }
        }
        instanceTypeFilter = instanceTypeFilterDecoded0
    }
}
