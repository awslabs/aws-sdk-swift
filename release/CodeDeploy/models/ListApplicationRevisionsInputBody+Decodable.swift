// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationRevisionsInputBody: Equatable {
    public let applicationName: String?
    public let sortBy: ApplicationRevisionSortBy?
    public let sortOrder: SortOrder?
    public let s3Bucket: String?
    public let s3KeyPrefix: String?
    public let deployed: ListStateFilterAction?
    public let nextToken: String?
}

extension ListApplicationRevisionsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationName
        case deployed
        case nextToken
        case s3Bucket
        case s3KeyPrefix
        case sortBy
        case sortOrder
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(ApplicationRevisionSortBy.self, forKey: .sortBy)
        sortBy = sortByDecoded
        let sortOrderDecoded = try containerValues.decodeIfPresent(SortOrder.self, forKey: .sortOrder)
        sortOrder = sortOrderDecoded
        let s3BucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Bucket)
        s3Bucket = s3BucketDecoded
        let s3KeyPrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3KeyPrefix)
        s3KeyPrefix = s3KeyPrefixDecoded
        let deployedDecoded = try containerValues.decodeIfPresent(ListStateFilterAction.self, forKey: .deployed)
        deployed = deployedDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
