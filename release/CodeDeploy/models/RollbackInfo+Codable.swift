// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RollbackInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case rollbackDeploymentId
        case rollbackMessage
        case rollbackTriggeringDeploymentId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let rollbackDeploymentId = rollbackDeploymentId {
            try encodeContainer.encode(rollbackDeploymentId, forKey: .rollbackDeploymentId)
        }
        if let rollbackMessage = rollbackMessage {
            try encodeContainer.encode(rollbackMessage, forKey: .rollbackMessage)
        }
        if let rollbackTriggeringDeploymentId = rollbackTriggeringDeploymentId {
            try encodeContainer.encode(rollbackTriggeringDeploymentId, forKey: .rollbackTriggeringDeploymentId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let rollbackDeploymentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .rollbackDeploymentId)
        rollbackDeploymentId = rollbackDeploymentIdDecoded
        let rollbackTriggeringDeploymentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .rollbackTriggeringDeploymentId)
        rollbackTriggeringDeploymentId = rollbackTriggeringDeploymentIdDecoded
        let rollbackMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .rollbackMessage)
        rollbackMessage = rollbackMessageDecoded
    }
}
