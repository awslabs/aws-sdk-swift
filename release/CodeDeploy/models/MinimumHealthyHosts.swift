// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about minimum healthy instance.</p>
public struct MinimumHealthyHosts: Equatable {
    /// <p>The minimum healthy instance type:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>HOST_COUNT</code>: The minimum number of healthy instances as an
    ///                     absolute value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>FLEET_PERCENT</code>: The minimum number of healthy instances as a
    ///                     percentage of the total number of instances in the deployment.</p>
    ///             </li>
    ///          </ul>
    ///         <p>In an example of nine instances, if a HOST_COUNT of six is specified, deploy to up to
    ///             three instances at a time. The deployment is successful if six or more instances are
    ///             deployed to successfully. Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
    ///             specified, deploy to up to five instances at a time. The deployment is successful if
    ///             four or more instances are deployed to successfully. Otherwise, the deployment
    ///             fails.</p>
    ///         <note>
    ///             <p>In a call to the <code>GetDeploymentConfig</code>, CodeDeployDefault.OneAtATime
    ///                 returns a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This
    ///                 means a deployment to only one instance at a time. (You cannot set the type to
    ///                 MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with
    ///                 CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that all instances
    ///                 but one are kept in a healthy state during the deployment. Although this allows one
    ///                 instance at a time to be taken offline for a new deployment, it also means that if
    ///                 the deployment to the last instance fails, the overall deployment is still
    ///                 successful.</p>
    ///         </note>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html">AWS CodeDeploy Instance
    ///                 Health</a> in the <i>AWS CodeDeploy User Guide</i>.</p>
    public let type: MinimumHealthyHostsType?
    /// <p>The minimum healthy instance value.</p>
    public let value: Int

    public init (
        type: MinimumHealthyHostsType? = nil,
        value: Int = 0
    )
    {
        self.type = type
        self.value = value
    }
}
