// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum LifecycleErrorCode {
    case scriptFailed
    case scriptMissing
    case scriptNotExecutable
    case scriptTimedOut
    case success
    case unknownError
    case sdkUnknown(String)
}

extension LifecycleErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [LifecycleErrorCode] {
        return [
            .scriptFailed,
            .scriptMissing,
            .scriptNotExecutable,
            .scriptTimedOut,
            .success,
            .unknownError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .scriptFailed: return "ScriptFailed"
        case .scriptMissing: return "ScriptMissing"
        case .scriptNotExecutable: return "ScriptNotExecutable"
        case .scriptTimedOut: return "ScriptTimedOut"
        case .success: return "Success"
        case .unknownError: return "UnknownError"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = LifecycleErrorCode(rawValue: rawValue) ?? LifecycleErrorCode.sdkUnknown(rawValue)
    }
}
