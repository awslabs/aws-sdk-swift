// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RevisionInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case genericRevisionInfo
        case revisionLocation
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let genericRevisionInfo = genericRevisionInfo {
            try encodeContainer.encode(genericRevisionInfo, forKey: .genericRevisionInfo)
        }
        if let revisionLocation = revisionLocation {
            try encodeContainer.encode(revisionLocation, forKey: .revisionLocation)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let revisionLocationDecoded = try containerValues.decodeIfPresent(RevisionLocation.self, forKey: .revisionLocation)
        revisionLocation = revisionLocationDecoded
        let genericRevisionInfoDecoded = try containerValues.decodeIfPresent(GenericRevisionInfo.self, forKey: .genericRevisionInfo)
        genericRevisionInfo = genericRevisionInfoDecoded
    }
}
