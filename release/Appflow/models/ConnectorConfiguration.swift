// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
/// The configuration settings related to a given connector.
/// </p>
public struct ConnectorConfiguration: Equatable {
    /// <p>
    /// Specifies whether the connector can be used as a destination.
    /// </p>
    public let canUseAsDestination: Bool
    /// <p>
    ///   Specifies whether the connector can be used as a source.
    /// </p>
    public let canUseAsSource: Bool
    /// <p>
    /// Specifies connector-specific metadata such as <code>oAuthScopes</code>, <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and so on.
    /// </p>
    public let connectorMetadata: ConnectorMetadata?
    /// <p>
    /// Specifies if PrivateLink is enabled for that connector.
    /// </p>
    public let isPrivateLinkEnabled: Bool
    /// <p>
    /// Specifies if a PrivateLink endpoint URL is required.
    /// </p>
    public let isPrivateLinkEndpointUrlRequired: Bool
    /// <p>
    /// Lists the connectors that are available for use as destinations.
    /// </p>
    public let supportedDestinationConnectors: [ConnectorType]?
    /// <p>
    ///     Specifies the supported flow frequency for that connector.
    ///     </p>
    public let supportedSchedulingFrequencies: [ScheduleFrequencyType]?
    /// <p>
    /// Specifies the supported trigger types for the flow.
    /// </p>
    public let supportedTriggerTypes: [TriggerType]?

    public init (
        canUseAsDestination: Bool = false,
        canUseAsSource: Bool = false,
        connectorMetadata: ConnectorMetadata? = nil,
        isPrivateLinkEnabled: Bool = false,
        isPrivateLinkEndpointUrlRequired: Bool = false,
        supportedDestinationConnectors: [ConnectorType]? = nil,
        supportedSchedulingFrequencies: [ScheduleFrequencyType]? = nil,
        supportedTriggerTypes: [TriggerType]? = nil
    )
    {
        self.canUseAsDestination = canUseAsDestination
        self.canUseAsSource = canUseAsSource
        self.connectorMetadata = connectorMetadata
        self.isPrivateLinkEnabled = isPrivateLinkEnabled
        self.isPrivateLinkEndpointUrlRequired = isPrivateLinkEndpointUrlRequired
        self.supportedDestinationConnectors = supportedDestinationConnectors
        self.supportedSchedulingFrequencies = supportedSchedulingFrequencies
        self.supportedTriggerTypes = supportedTriggerTypes
    }
}
