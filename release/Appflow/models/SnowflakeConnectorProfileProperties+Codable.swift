// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SnowflakeConnectorProfileProperties: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountName
        case bucketName
        case bucketPrefix
        case privateLinkServiceName
        case region
        case stage
        case warehouse
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountName = accountName {
            try encodeContainer.encode(accountName, forKey: .accountName)
        }
        if let bucketName = bucketName {
            try encodeContainer.encode(bucketName, forKey: .bucketName)
        }
        if let bucketPrefix = bucketPrefix {
            try encodeContainer.encode(bucketPrefix, forKey: .bucketPrefix)
        }
        if let privateLinkServiceName = privateLinkServiceName {
            try encodeContainer.encode(privateLinkServiceName, forKey: .privateLinkServiceName)
        }
        if let region = region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if let stage = stage {
            try encodeContainer.encode(stage, forKey: .stage)
        }
        if let warehouse = warehouse {
            try encodeContainer.encode(warehouse, forKey: .warehouse)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let warehouseDecoded = try containerValues.decodeIfPresent(String.self, forKey: .warehouse)
        warehouse = warehouseDecoded
        let stageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stage)
        stage = stageDecoded
        let bucketNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketName)
        bucketName = bucketNameDecoded
        let bucketPrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucketPrefix)
        bucketPrefix = bucketPrefixDecoded
        let privateLinkServiceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .privateLinkServiceName)
        privateLinkServiceName = privateLinkServiceNameDecoded
        let accountNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountName)
        accountName = accountNameDecoded
        let regionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .region)
        region = regionDecoded
    }
}
