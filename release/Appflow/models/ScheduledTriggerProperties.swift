// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>
///   Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type.
/// </p>
public struct ScheduledTriggerProperties: Equatable {
    /// <p>
    ///  Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run.
    /// </p>
    public let dataPullMode: DataPullMode?
    /// <p>
    ///       Specifies the date range for the records to import from the connector in the first flow run.
    ///     </p>
    public let firstExecutionFrom: Date?
    /// <p>
    ///  Specifies the scheduled end time for a schedule-triggered flow.
    /// </p>
    public let scheduleEndTime: Date?
    /// <p>
    ///   The scheduling expression that determines the rate at which the schedule will run, for example <code>rate(5minutes)</code>.
    /// </p>
    public let scheduleExpression: String?
    /// <p>
    /// Specifies the optional offset that is added to the time interval for a schedule-triggered flow.
    /// </p>
    public let scheduleOffset: Int
    /// <p>
    /// Specifies the scheduled start time for a schedule-triggered flow.
    /// </p>
    public let scheduleStartTime: Date?
    /// <p>
    ///   Specifies the time zone used when referring to the date and time of a scheduled-triggered flow, such as <code>America/New_York</code>.
    /// </p>
    public let timezone: String?

    public init (
        dataPullMode: DataPullMode? = nil,
        firstExecutionFrom: Date? = nil,
        scheduleEndTime: Date? = nil,
        scheduleExpression: String? = nil,
        scheduleOffset: Int = 0,
        scheduleStartTime: Date? = nil,
        timezone: String? = nil
    )
    {
        self.dataPullMode = dataPullMode
        self.firstExecutionFrom = firstExecutionFrom
        self.scheduleEndTime = scheduleEndTime
        self.scheduleExpression = scheduleExpression
        self.scheduleOffset = scheduleOffset
        self.scheduleStartTime = scheduleStartTime
        self.timezone = timezone
    }
}
