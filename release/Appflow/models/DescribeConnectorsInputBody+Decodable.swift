// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeConnectorsInputBody: Equatable {
    public let connectorTypes: [ConnectorType]?
    public let nextToken: String?
}

extension DescribeConnectorsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectorTypes
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectorTypesContainer = try containerValues.decodeIfPresent([ConnectorType].self, forKey: .connectorTypes)
        var connectorTypesDecoded0:[ConnectorType]? = nil
        if let connectorTypesContainer = connectorTypesContainer {
            connectorTypesDecoded0 = [ConnectorType]()
            for string0 in connectorTypesContainer {
                connectorTypesDecoded0?.append(string0)
            }
        }
        connectorTypes = connectorTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
