// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectorOAuthRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case authCode
        case redirectUri
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authCode = authCode {
            try encodeContainer.encode(authCode, forKey: .authCode)
        }
        if let redirectUri = redirectUri {
            try encodeContainer.encode(redirectUri, forKey: .redirectUri)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .authCode)
        authCode = authCodeDecoded
        let redirectUriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .redirectUri)
        redirectUri = redirectUriDecoded
    }
}
