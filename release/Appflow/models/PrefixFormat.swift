// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum PrefixFormat {
    case day
    case hour
    case minute
    case month
    case year
    case sdkUnknown(String)
}

extension PrefixFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PrefixFormat] {
        return [
            .day,
            .hour,
            .minute,
            .month,
            .year,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .day: return "DAY"
        case .hour: return "HOUR"
        case .minute: return "MINUTE"
        case .month: return "MONTH"
        case .year: return "YEAR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PrefixFormat(rawValue: rawValue) ?? PrefixFormat.sdkUnknown(rawValue)
    }
}
