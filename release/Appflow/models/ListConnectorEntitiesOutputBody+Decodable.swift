// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConnectorEntitiesOutputBody: Equatable {
    public let connectorEntityMap: [String:[ConnectorEntity]?]?
}

extension ListConnectorEntitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectorEntityMap
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectorEntityMapContainer = try containerValues.decodeIfPresent([String:[ConnectorEntity]?].self, forKey: .connectorEntityMap)
        var connectorEntityMapDecoded0: [String:[ConnectorEntity]?]? = nil
        if let connectorEntityMapContainer = connectorEntityMapContainer {
            connectorEntityMapDecoded0 = [String:[ConnectorEntity]?]()
            for (key0, connectorentitylist0) in connectorEntityMapContainer {
                var connectorentitylist0Decoded0 = [ConnectorEntity]()
                if let connectorentitylist0 = connectorentitylist0 {
                    for structure1 in connectorentitylist0 {
                        connectorentitylist0Decoded0.append(structure1)
                    }
                }
                connectorEntityMapDecoded0?[key0] = connectorentitylist0Decoded0
            }
        }
        connectorEntityMap = connectorEntityMapDecoded0
    }
}
