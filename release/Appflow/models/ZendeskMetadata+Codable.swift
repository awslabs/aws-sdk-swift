// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ZendeskMetadata: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case oAuthScopes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let oAuthScopes = oAuthScopes {
            var oAuthScopesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .oAuthScopes)
            for oauthscopelist0 in oAuthScopes {
                try oAuthScopesContainer.encode(oauthscopelist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let oAuthScopesContainer = try containerValues.decodeIfPresent([String].self, forKey: .oAuthScopes)
        var oAuthScopesDecoded0:[String]? = nil
        if let oAuthScopesContainer = oAuthScopesContainer {
            oAuthScopesDecoded0 = [String]()
            for string0 in oAuthScopesContainer {
                oAuthScopesDecoded0?.append(string0)
            }
        }
        oAuthScopes = oAuthScopesDecoded0
    }
}
