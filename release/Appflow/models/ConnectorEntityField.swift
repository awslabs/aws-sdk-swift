// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
/// Describes the data model of a connector field. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on.
/// </p>
public struct ConnectorEntityField: Equatable {
    /// <p>
    ///   A description of the connector entity field.
    /// </p>
    public let description: String?
    /// <p>
    ///   The properties applied to a field when the connector is being used as a destination.
    /// </p>
    public let destinationProperties: DestinationFieldProperties?
    /// <p>
    /// The unique identifier of the connector field.
    /// </p>
    public let identifier: String?
    /// <p>
    /// The label applied to a connector entity field.
    /// </p>
    public let label: String?
    /// <p>
    ///   The properties that can be applied to a field when the connector is being used as a source.
    /// </p>
    public let sourceProperties: SourceFieldProperties?
    /// <p>
    ///  Contains details regarding the supported <code>FieldType</code>, including the corresponding <code>filterOperators</code> and <code>supportedValues</code>.
    /// </p>
    public let supportedFieldTypeDetails: SupportedFieldTypeDetails?

    public init (
        description: String? = nil,
        destinationProperties: DestinationFieldProperties? = nil,
        identifier: String? = nil,
        label: String? = nil,
        sourceProperties: SourceFieldProperties? = nil,
        supportedFieldTypeDetails: SupportedFieldTypeDetails? = nil
    )
    {
        self.description = description
        self.destinationProperties = destinationProperties
        self.identifier = identifier
        self.label = label
        self.sourceProperties = sourceProperties
        self.supportedFieldTypeDetails = supportedFieldTypeDetails
    }
}
