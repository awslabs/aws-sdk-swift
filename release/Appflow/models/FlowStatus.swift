// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FlowStatus {
    case active
    case deleted
    case deprecated
    case draft
    case errored
    case suspended
    case sdkUnknown(String)
}

extension FlowStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FlowStatus] {
        return [
            .active,
            .deleted,
            .deprecated,
            .draft,
            .errored,
            .suspended,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .active: return "Active"
        case .deleted: return "Deleted"
        case .deprecated: return "Deprecated"
        case .draft: return "Draft"
        case .errored: return "Errored"
        case .suspended: return "Suspended"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FlowStatus(rawValue: rawValue) ?? FlowStatus.sdkUnknown(rawValue)
    }
}
