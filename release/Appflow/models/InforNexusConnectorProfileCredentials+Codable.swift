// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InforNexusConnectorProfileCredentials: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accessKeyId
        case datakey
        case secretAccessKey
        case userId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessKeyId = accessKeyId {
            try encodeContainer.encode(accessKeyId, forKey: .accessKeyId)
        }
        if let datakey = datakey {
            try encodeContainer.encode(datakey, forKey: .datakey)
        }
        if let secretAccessKey = secretAccessKey {
            try encodeContainer.encode(secretAccessKey, forKey: .secretAccessKey)
        }
        if let userId = userId {
            try encodeContainer.encode(userId, forKey: .userId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessKeyId)
        accessKeyId = accessKeyIdDecoded
        let userIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userId)
        userId = userIdDecoded
        let secretAccessKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .secretAccessKey)
        secretAccessKey = secretAccessKeyDecoded
        let datakeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datakey)
        datakey = datakeyDecoded
    }
}
