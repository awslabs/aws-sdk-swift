// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFlowsOutputBody: Equatable {
    public let flows: [FlowDefinition]?
    public let nextToken: String?
}

extension ListFlowsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case flows
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let flowsContainer = try containerValues.decodeIfPresent([FlowDefinition].self, forKey: .flows)
        var flowsDecoded0:[FlowDefinition]? = nil
        if let flowsContainer = flowsContainer {
            flowsDecoded0 = [FlowDefinition]()
            for structure0 in flowsContainer {
                flowsDecoded0?.append(structure0)
            }
        }
        flows = flowsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
