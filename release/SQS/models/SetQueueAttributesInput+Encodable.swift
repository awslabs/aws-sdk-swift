// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetQueueAttributesInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let attributes = attributes {
            if !attributes.isEmpty {
                for (index0, element0) in attributes.sorted(by: { $0.key < $1.key }).enumerated() {
                    let queueattributenameKey0 = element0.key
                    let stringValue0 = element0.value
                    var nestedContainer0 = container.nestedContainer(keyedBy: Key.self, forKey: Key("Attribute.\(index0.advanced(by: 1))"))
                    var keyContainer0 = nestedContainer0.nestedContainer(keyedBy: Key.self, forKey: Key("Name"))
                    try keyContainer0.encode(queueattributenameKey0, forKey: Key(""))
                    var valueContainer0 = nestedContainer0.nestedContainer(keyedBy: Key.self, forKey: Key("Value"))
                    try valueContainer0.encode(stringValue0, forKey: Key(""))
                }
            }
        }
        if let queueUrl = queueUrl {
            try container.encode(queueUrl, forKey: Key("QueueUrl"))
        }
        try container.encode("SetQueueAttributes", forKey:Key("Action"))
        try container.encode("2012-11-05", forKey:Key("Version"))
    }
}
