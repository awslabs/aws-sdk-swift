// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MessageSystemAttributeName {
    case awstraceheader
    case approximatefirstreceivetimestamp
    case approximatereceivecount
    case messagededuplicationid
    case messagegroupid
    case senderid
    case senttimestamp
    case sequencenumber
    case sdkUnknown(String)
}

extension MessageSystemAttributeName : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MessageSystemAttributeName] {
        return [
            .awstraceheader,
            .approximatefirstreceivetimestamp,
            .approximatereceivecount,
            .messagededuplicationid,
            .messagegroupid,
            .senderid,
            .senttimestamp,
            .sequencenumber,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awstraceheader: return "AWSTraceHeader"
        case .approximatefirstreceivetimestamp: return "ApproximateFirstReceiveTimestamp"
        case .approximatereceivecount: return "ApproximateReceiveCount"
        case .messagededuplicationid: return "MessageDeduplicationId"
        case .messagegroupid: return "MessageGroupId"
        case .senderid: return "SenderId"
        case .senttimestamp: return "SentTimestamp"
        case .sequencenumber: return "SequenceNumber"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MessageSystemAttributeName(rawValue: rawValue) ?? MessageSystemAttributeName.sdkUnknown(rawValue)
    }
}
