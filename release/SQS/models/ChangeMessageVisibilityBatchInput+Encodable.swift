// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ChangeMessageVisibilityBatchInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let entries = entries {
            if !entries.isEmpty {
                for (index0, changemessagevisibilitybatchrequestentry0) in entries.enumerated() {
                    var entriesContainer0 = container.nestedContainer(keyedBy: Key.self, forKey: Key("ChangeMessageVisibilityBatchRequestEntry.\(index0.advanced(by: 1))"))
                    try entriesContainer0.encode(changemessagevisibilitybatchrequestentry0, forKey: Key(""))
                }
            }
        }
        if let queueUrl = queueUrl {
            try container.encode(queueUrl, forKey: Key("QueueUrl"))
        }
        try container.encode("ChangeMessageVisibilityBatch", forKey:Key("Action"))
        try container.encode("2012-11-05", forKey:Key("Version"))
    }
}
