// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>This AWS CodeStar Notifications API Reference provides descriptions and usage examples of the
///       operations and data types for the AWS CodeStar Notifications API. You can use the AWS CodeStar Notifications API
///       to work with the following objects:</p>
///
///          <p>Notification rules, by calling the following: </p>
///          <ul>
///             <li>
///                <p>
///                   <a>CreateNotificationRule</a>, which creates a notification rule for a
///                     resource in your account. </p>
///             </li>
///             <li>
///                <p>
///                   <a>DeleteNotificationRule</a>, which deletes a notification rule. </p>
///             </li>
///             <li>
///                <p>
///                   <a>DescribeNotificationRule</a>, which provides information about a notification rule. </p>
///             </li>
///             <li>
///                <p>
///                   <a>ListNotificationRules</a>, which lists the notification rules associated with
///           your account. </p>
///             </li>
///             <li>
///                <p>
///                   <a>UpdateNotificationRule</a>, which changes the name, events, or targets associated with a
///           notification rule. </p>
///             </li>
///             <li>
///                <p>
///                   <a>Subscribe</a>, which subscribes a target to a notification rule. </p>
///             </li>
///             <li>
///                <p>
///                   <a>Unsubscribe</a>, which removes a target from a notification rule. </p>
///             </li>
///          </ul>
///
///          <p>Targets, by calling the following: </p>
///          <ul>
///             <li>
///                <p>
///                   <a>DeleteTarget</a>, which removes a notification rule target (SNS topic) from a
///           notification rule. </p>
///             </li>
///             <li>
///                <p>
///                   <a>ListTargets</a>, which lists the targets associated with a
///                     notification rule. </p>
///             </li>
///          </ul>
///
///          <p>Events, by calling the following: </p>
///          <ul>
///             <li>
///                <p>
///                   <a>ListEventTypes</a>, which lists the event types you can include in
///                     a notification rule. </p>
///             </li>
///          </ul>
///          <p>Tags, by calling the following: </p>
///          <ul>
///             <li>
///                <p>
///                   <a>ListTagsForResource</a>, which lists the tags already associated
///                     with a notification rule in your account. </p>
///             </li>
///             <li>
///                <p>
///                   <a>TagResource</a>, which associates a tag you provide with a
///                     notification rule in your account. </p>
///             </li>
///             <li>
///                <p>
///                   <a>UntagResource</a>, which removes a tag from a notification rule in
///                     your account. </p>
///             </li>
///          </ul>
///
///
///
///          <p> For information about how to use AWS CodeStar Notifications, see link in the CodeStarNotifications User Guide.
///     </p>
public protocol CodestarNotificationsClientProtocol {
    /// <p>Creates a notification rule for a resource. The rule specifies the events you want
    ///             notifications about and the targets (such as SNS topics) where you want to receive
    ///             them.</p>
    func createNotificationRule(input: CreateNotificationRuleInput, completion: @escaping (SdkResult<CreateNotificationRuleOutputResponse, CreateNotificationRuleOutputError>) -> Void)
    /// <p>Deletes a notification rule for a resource.</p>
    func deleteNotificationRule(input: DeleteNotificationRuleInput, completion: @escaping (SdkResult<DeleteNotificationRuleOutputResponse, DeleteNotificationRuleOutputError>) -> Void)
    /// <p>Deletes a specified target for notifications.</p>
    func deleteTarget(input: DeleteTargetInput, completion: @escaping (SdkResult<DeleteTargetOutputResponse, DeleteTargetOutputError>) -> Void)
    /// <p>Returns information about a specified notification rule.</p>
    func describeNotificationRule(input: DescribeNotificationRuleInput, completion: @escaping (SdkResult<DescribeNotificationRuleOutputResponse, DescribeNotificationRuleOutputError>) -> Void)
    /// <p>Returns information about the event types available for configuring notifications.</p>
    func listEventTypes(input: ListEventTypesInput, completion: @escaping (SdkResult<ListEventTypesOutputResponse, ListEventTypesOutputError>) -> Void)
    /// <p>Returns a list of the notification rules for an AWS account.</p>
    func listNotificationRules(input: ListNotificationRulesInput, completion: @escaping (SdkResult<ListNotificationRulesOutputResponse, ListNotificationRulesOutputError>) -> Void)
    /// <p>Returns a list of the tags associated with a notification rule.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Returns a list of the notification rule targets for an AWS account.</p>
    func listTargets(input: ListTargetsInput, completion: @escaping (SdkResult<ListTargetsOutputResponse, ListTargetsOutputError>) -> Void)
    /// <p>Creates an association between a notification rule and an SNS topic so that the
    ///             associated target can receive notifications when the events described in the rule are
    ///             triggered.</p>
    func subscribe(input: SubscribeInput, completion: @escaping (SdkResult<SubscribeOutputResponse, SubscribeOutputError>) -> Void)
    /// <p>Associates a set of provided tags with a notification rule.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Removes an association between a notification rule and an Amazon SNS topic so that
    ///             subscribers to that topic stop receiving notifications when the events described in the
    ///             rule are triggered.</p>
    func unsubscribe(input: UnsubscribeInput, completion: @escaping (SdkResult<UnsubscribeOutputResponse, UnsubscribeOutputError>) -> Void)
    /// <p>Removes the association between one or more provided tags and a notification
    ///             rule.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Updates a notification rule for a resource. You can change the events that trigger the
    ///             notification rule, the status of the rule, and the targets that receive the
    ///             notifications.</p>
    ///          <note>
    ///             <p>To add or remove tags for a notification rule, you must use <a>TagResource</a> and <a>UntagResource</a>.</p>
    ///          </note>
    func updateNotificationRule(input: UpdateNotificationRuleInput, completion: @escaping (SdkResult<UpdateNotificationRuleOutputResponse, UpdateNotificationRuleOutputError>) -> Void)
}
