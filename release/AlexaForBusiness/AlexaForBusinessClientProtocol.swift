// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Alexa for Business helps you use Alexa in your organization. Alexa for Business provides you with the tools
///          to manage Alexa devices, enroll your users, and assign skills, at scale. You can build your
///          own context-aware voice skills using the Alexa Skills Kit and the Alexa for Business API operations.
///          You can also make these available as private skills for your organization. Alexa for Business makes it
///          efficient to voice-enable your products and services, thus providing context-aware voice
///          experiences for your customers. Device makers building with the Alexa Voice Service (AVS)
///          can create fully integrated solutions, register their products with Alexa for Business, and manage them
///          as shared devices in their organization. </p>
public protocol AlexaForBusinessClientProtocol {
    /// <p>Associates a skill with the organization under the customer's AWS account. If a skill
    ///          is private, the user implicitly accepts access to this skill during enablement.</p>
    func approveSkill(input: ApproveSkillInput, completion: @escaping (SdkResult<ApproveSkillOutput, ApproveSkillOutputError>) -> Void)
    /// <p>Associates a contact with a given address book.</p>
    func associateContactWithAddressBook(input: AssociateContactWithAddressBookInput, completion: @escaping (SdkResult<AssociateContactWithAddressBookOutput, AssociateContactWithAddressBookOutputError>) -> Void)
    /// <p>Associates a device with the specified network profile.</p>
    func associateDeviceWithNetworkProfile(input: AssociateDeviceWithNetworkProfileInput, completion: @escaping (SdkResult<AssociateDeviceWithNetworkProfileOutput, AssociateDeviceWithNetworkProfileOutputError>) -> Void)
    /// <p>Associates a device with a given room. This applies all the settings from the room
    ///          profile to the device, and all the skills in any skill groups added to that room. This
    ///          operation requires the device to be online, or else a manual sync is required. </p>
    func associateDeviceWithRoom(input: AssociateDeviceWithRoomInput, completion: @escaping (SdkResult<AssociateDeviceWithRoomOutput, AssociateDeviceWithRoomOutputError>) -> Void)
    /// <p>Associates a skill group with a given room. This enables all skills in the associated
    ///          skill group on all devices in the room.</p>
    func associateSkillGroupWithRoom(input: AssociateSkillGroupWithRoomInput, completion: @escaping (SdkResult<AssociateSkillGroupWithRoomOutput, AssociateSkillGroupWithRoomOutputError>) -> Void)
    /// <p>Associates a skill with a skill group.</p>
    func associateSkillWithSkillGroup(input: AssociateSkillWithSkillGroupInput, completion: @escaping (SdkResult<AssociateSkillWithSkillGroupOutput, AssociateSkillWithSkillGroupOutputError>) -> Void)
    /// <p>Makes a private skill available for enrolled users to enable on their devices.</p>
    func associateSkillWithUsers(input: AssociateSkillWithUsersInput, completion: @escaping (SdkResult<AssociateSkillWithUsersOutput, AssociateSkillWithUsersOutputError>) -> Void)
    /// <p>Creates an address book with the specified details.</p>
    func createAddressBook(input: CreateAddressBookInput, completion: @escaping (SdkResult<CreateAddressBookOutput, CreateAddressBookOutputError>) -> Void)
    /// <p>Creates a recurring schedule for usage reports to deliver to the specified S3
    ///          location with a specified daily or weekly interval.</p>
    func createBusinessReportSchedule(input: CreateBusinessReportScheduleInput, completion: @escaping (SdkResult<CreateBusinessReportScheduleOutput, CreateBusinessReportScheduleOutputError>) -> Void)
    /// <p>Adds a new conference provider under the user's AWS account.</p>
    func createConferenceProvider(input: CreateConferenceProviderInput, completion: @escaping (SdkResult<CreateConferenceProviderOutput, CreateConferenceProviderOutputError>) -> Void)
    /// <p>Creates a contact with the specified details.</p>
    func createContact(input: CreateContactInput, completion: @escaping (SdkResult<CreateContactOutput, CreateContactOutputError>) -> Void)
    /// <p>Creates a gateway group with the specified details.</p>
    func createGatewayGroup(input: CreateGatewayGroupInput, completion: @escaping (SdkResult<CreateGatewayGroupOutput, CreateGatewayGroupOutputError>) -> Void)
    /// <p>Creates a network profile with the specified details.</p>
    func createNetworkProfile(input: CreateNetworkProfileInput, completion: @escaping (SdkResult<CreateNetworkProfileOutput, CreateNetworkProfileOutputError>) -> Void)
    /// <p>Creates a new room profile with the specified details.</p>
    func createProfile(input: CreateProfileInput, completion: @escaping (SdkResult<CreateProfileOutput, CreateProfileOutputError>) -> Void)
    /// <p>Creates a room with the specified details.</p>
    func createRoom(input: CreateRoomInput, completion: @escaping (SdkResult<CreateRoomOutput, CreateRoomOutputError>) -> Void)
    /// <p>Creates a skill group with a specified name and description.</p>
    func createSkillGroup(input: CreateSkillGroupInput, completion: @escaping (SdkResult<CreateSkillGroupOutput, CreateSkillGroupOutputError>) -> Void)
    /// <p>Creates a user.</p>
    func createUser(input: CreateUserInput, completion: @escaping (SdkResult<CreateUserOutput, CreateUserOutputError>) -> Void)
    /// <p>Deletes an address book by the address book ARN.</p>
    func deleteAddressBook(input: DeleteAddressBookInput, completion: @escaping (SdkResult<DeleteAddressBookOutput, DeleteAddressBookOutputError>) -> Void)
    /// <p>Deletes the recurring report delivery schedule with the specified schedule
    ///          ARN.</p>
    func deleteBusinessReportSchedule(input: DeleteBusinessReportScheduleInput, completion: @escaping (SdkResult<DeleteBusinessReportScheduleOutput, DeleteBusinessReportScheduleOutputError>) -> Void)
    /// <p>Deletes a conference provider.</p>
    func deleteConferenceProvider(input: DeleteConferenceProviderInput, completion: @escaping (SdkResult<DeleteConferenceProviderOutput, DeleteConferenceProviderOutputError>) -> Void)
    /// <p>Deletes a contact by the contact ARN.</p>
    func deleteContact(input: DeleteContactInput, completion: @escaping (SdkResult<DeleteContactOutput, DeleteContactOutputError>) -> Void)
    /// <p>Removes a device from Alexa For Business.</p>
    func deleteDevice(input: DeleteDeviceInput, completion: @escaping (SdkResult<DeleteDeviceOutput, DeleteDeviceOutputError>) -> Void)
    /// <p>When this action is called for a specified shared device, it allows authorized users to
    ///          delete the device's entire previous history of voice input data and associated response
    ///          data. This action can be called once every 24 hours for a specific shared device.</p>
    func deleteDeviceUsageData(input: DeleteDeviceUsageDataInput, completion: @escaping (SdkResult<DeleteDeviceUsageDataOutput, DeleteDeviceUsageDataOutputError>) -> Void)
    /// <p>Deletes a gateway group.</p>
    func deleteGatewayGroup(input: DeleteGatewayGroupInput, completion: @escaping (SdkResult<DeleteGatewayGroupOutput, DeleteGatewayGroupOutputError>) -> Void)
    /// <p>Deletes a network profile by the network profile ARN.</p>
    func deleteNetworkProfile(input: DeleteNetworkProfileInput, completion: @escaping (SdkResult<DeleteNetworkProfileOutput, DeleteNetworkProfileOutputError>) -> Void)
    /// <p>Deletes a room profile by the profile ARN.</p>
    func deleteProfile(input: DeleteProfileInput, completion: @escaping (SdkResult<DeleteProfileOutput, DeleteProfileOutputError>) -> Void)
    /// <p>Deletes a room by the room ARN.</p>
    func deleteRoom(input: DeleteRoomInput, completion: @escaping (SdkResult<DeleteRoomOutput, DeleteRoomOutputError>) -> Void)
    /// <p>Deletes room skill parameter details by room, skill, and parameter key ID.</p>
    func deleteRoomSkillParameter(input: DeleteRoomSkillParameterInput, completion: @escaping (SdkResult<DeleteRoomSkillParameterOutput, DeleteRoomSkillParameterOutputError>) -> Void)
    /// <p>Unlinks a third-party account from a skill.</p>
    func deleteSkillAuthorization(input: DeleteSkillAuthorizationInput, completion: @escaping (SdkResult<DeleteSkillAuthorizationOutput, DeleteSkillAuthorizationOutputError>) -> Void)
    /// <p>Deletes a skill group by skill group ARN.</p>
    func deleteSkillGroup(input: DeleteSkillGroupInput, completion: @escaping (SdkResult<DeleteSkillGroupOutput, DeleteSkillGroupOutputError>) -> Void)
    /// <p>Deletes a specified user by user ARN and enrollment ARN.</p>
    func deleteUser(input: DeleteUserInput, completion: @escaping (SdkResult<DeleteUserOutput, DeleteUserOutputError>) -> Void)
    /// <p>Disassociates a contact from a given address book.</p>
    func disassociateContactFromAddressBook(input: DisassociateContactFromAddressBookInput, completion: @escaping (SdkResult<DisassociateContactFromAddressBookOutput, DisassociateContactFromAddressBookOutputError>) -> Void)
    /// <p>Disassociates a device from its current room. The device continues to be connected to
    ///          the Wi-Fi network and is still registered to the account. The device settings and skills
    ///          are removed from the room.</p>
    func disassociateDeviceFromRoom(input: DisassociateDeviceFromRoomInput, completion: @escaping (SdkResult<DisassociateDeviceFromRoomOutput, DisassociateDeviceFromRoomOutputError>) -> Void)
    /// <p>Disassociates a skill from a skill group.</p>
    func disassociateSkillFromSkillGroup(input: DisassociateSkillFromSkillGroupInput, completion: @escaping (SdkResult<DisassociateSkillFromSkillGroupOutput, DisassociateSkillFromSkillGroupOutputError>) -> Void)
    /// <p>Makes a private skill unavailable for enrolled users and prevents them from enabling it
    ///          on their devices.</p>
    func disassociateSkillFromUsers(input: DisassociateSkillFromUsersInput, completion: @escaping (SdkResult<DisassociateSkillFromUsersOutput, DisassociateSkillFromUsersOutputError>) -> Void)
    /// <p>Disassociates a skill group from a specified room. This disables all skills in the
    ///          skill group on all devices in the room.</p>
    func disassociateSkillGroupFromRoom(input: DisassociateSkillGroupFromRoomInput, completion: @escaping (SdkResult<DisassociateSkillGroupFromRoomOutput, DisassociateSkillGroupFromRoomOutputError>) -> Void)
    /// <p>Forgets smart home appliances associated to a room.</p>
    func forgetSmartHomeAppliances(input: ForgetSmartHomeAppliancesInput, completion: @escaping (SdkResult<ForgetSmartHomeAppliancesOutput, ForgetSmartHomeAppliancesOutputError>) -> Void)
    /// <p>Gets address the book details by the address book ARN.</p>
    func getAddressBook(input: GetAddressBookInput, completion: @escaping (SdkResult<GetAddressBookOutput, GetAddressBookOutputError>) -> Void)
    /// <p>Retrieves the existing conference preferences.</p>
    func getConferencePreference(input: GetConferencePreferenceInput, completion: @escaping (SdkResult<GetConferencePreferenceOutput, GetConferencePreferenceOutputError>) -> Void)
    /// <p>Gets details about a specific conference provider.</p>
    func getConferenceProvider(input: GetConferenceProviderInput, completion: @escaping (SdkResult<GetConferenceProviderOutput, GetConferenceProviderOutputError>) -> Void)
    /// <p>Gets the contact details by the contact ARN.</p>
    func getContact(input: GetContactInput, completion: @escaping (SdkResult<GetContactOutput, GetContactOutputError>) -> Void)
    /// <p>Gets the details of a device by device ARN.</p>
    func getDevice(input: GetDeviceInput, completion: @escaping (SdkResult<GetDeviceOutput, GetDeviceOutputError>) -> Void)
    /// <p>Retrieves the details of a gateway.</p>
    func getGateway(input: GetGatewayInput, completion: @escaping (SdkResult<GetGatewayOutput, GetGatewayOutputError>) -> Void)
    /// <p>Retrieves the details of a gateway group.</p>
    func getGatewayGroup(input: GetGatewayGroupInput, completion: @escaping (SdkResult<GetGatewayGroupOutput, GetGatewayGroupOutputError>) -> Void)
    /// <p>Retrieves the configured values for the user enrollment invitation email
    ///          template.</p>
    func getInvitationConfiguration(input: GetInvitationConfigurationInput, completion: @escaping (SdkResult<GetInvitationConfigurationOutput, GetInvitationConfigurationOutputError>) -> Void)
    /// <p>Gets the network profile details by the network profile ARN.</p>
    func getNetworkProfile(input: GetNetworkProfileInput, completion: @escaping (SdkResult<GetNetworkProfileOutput, GetNetworkProfileOutputError>) -> Void)
    /// <p>Gets the details of a room profile by profile ARN.</p>
    func getProfile(input: GetProfileInput, completion: @escaping (SdkResult<GetProfileOutput, GetProfileOutputError>) -> Void)
    /// <p>Gets room details by room ARN.</p>
    func getRoom(input: GetRoomInput, completion: @escaping (SdkResult<GetRoomOutput, GetRoomOutputError>) -> Void)
    /// <p>Gets room skill parameter details by room, skill, and parameter key ARN.</p>
    func getRoomSkillParameter(input: GetRoomSkillParameterInput, completion: @escaping (SdkResult<GetRoomSkillParameterOutput, GetRoomSkillParameterOutputError>) -> Void)
    /// <p>Gets skill group details by skill group ARN.</p>
    func getSkillGroup(input: GetSkillGroupInput, completion: @escaping (SdkResult<GetSkillGroupOutput, GetSkillGroupOutputError>) -> Void)
    /// <p>Lists the details of the schedules that a user configured. A download URL of the report associated with each schedule is returned every time this action is called. A new download URL is returned each time, and is valid for 24 hours.</p>
    func listBusinessReportSchedules(input: ListBusinessReportSchedulesInput, completion: @escaping (SdkResult<ListBusinessReportSchedulesOutput, ListBusinessReportSchedulesOutputError>) -> Void)
    /// <p>Lists conference providers under a specific AWS account.</p>
    func listConferenceProviders(input: ListConferenceProvidersInput, completion: @escaping (SdkResult<ListConferenceProvidersOutput, ListConferenceProvidersOutputError>) -> Void)
    /// <p>Lists the device event history, including device connection status, for up to 30
    ///          days.</p>
    func listDeviceEvents(input: ListDeviceEventsInput, completion: @escaping (SdkResult<ListDeviceEventsOutput, ListDeviceEventsOutputError>) -> Void)
    /// <p>Retrieves a list of gateway group summaries. Use GetGatewayGroup to retrieve details of
    ///          a specific gateway group.</p>
    func listGatewayGroups(input: ListGatewayGroupsInput, completion: @escaping (SdkResult<ListGatewayGroupsOutput, ListGatewayGroupsOutputError>) -> Void)
    /// <p>Retrieves a list of gateway summaries. Use GetGateway to retrieve details of a specific
    ///          gateway. An optional gateway group ARN can be provided to only retrieve gateway summaries
    ///          of gateways that are associated with that gateway group ARN.</p>
    func listGateways(input: ListGatewaysInput, completion: @escaping (SdkResult<ListGatewaysOutput, ListGatewaysOutputError>) -> Void)
    /// <p>Lists all enabled skills in a specific skill group.</p>
    func listSkills(input: ListSkillsInput, completion: @escaping (SdkResult<ListSkillsOutput, ListSkillsOutputError>) -> Void)
    /// <p>Lists all categories in the Alexa skill store.</p>
    func listSkillsStoreCategories(input: ListSkillsStoreCategoriesInput, completion: @escaping (SdkResult<ListSkillsStoreCategoriesOutput, ListSkillsStoreCategoriesOutputError>) -> Void)
    /// <p>Lists all skills in the Alexa skill store by category.</p>
    func listSkillsStoreSkillsByCategory(input: ListSkillsStoreSkillsByCategoryInput, completion: @escaping (SdkResult<ListSkillsStoreSkillsByCategoryOutput, ListSkillsStoreSkillsByCategoryOutputError>) -> Void)
    /// <p>Lists all of the smart home appliances associated with a room.</p>
    func listSmartHomeAppliances(input: ListSmartHomeAppliancesInput, completion: @escaping (SdkResult<ListSmartHomeAppliancesOutput, ListSmartHomeAppliancesOutputError>) -> Void)
    /// <p>Lists all tags for the specified resource.</p>
    func listTags(input: ListTagsInput, completion: @escaping (SdkResult<ListTagsOutput, ListTagsOutputError>) -> Void)
    /// <p>Sets the conference preferences on a specific conference provider at the account
    ///          level.</p>
    func putConferencePreference(input: PutConferencePreferenceInput, completion: @escaping (SdkResult<PutConferencePreferenceOutput, PutConferencePreferenceOutputError>) -> Void)
    /// <p>Configures the email template for the user enrollment invitation with the specified
    ///          attributes.</p>
    func putInvitationConfiguration(input: PutInvitationConfigurationInput, completion: @escaping (SdkResult<PutInvitationConfigurationOutput, PutInvitationConfigurationOutputError>) -> Void)
    /// <p>Updates room skill parameter details by room, skill, and parameter key ID. Not all
    ///          skills have a room skill parameter.</p>
    func putRoomSkillParameter(input: PutRoomSkillParameterInput, completion: @escaping (SdkResult<PutRoomSkillParameterOutput, PutRoomSkillParameterOutputError>) -> Void)
    /// <p>Links a user's account to a third-party skill provider. If this API operation is
    ///          called by an assumed IAM role, the skill being linked must be a private skill. Also, the
    ///          skill must be owned by the AWS account that assumed the IAM role.</p>
    func putSkillAuthorization(input: PutSkillAuthorizationInput, completion: @escaping (SdkResult<PutSkillAuthorizationOutput, PutSkillAuthorizationOutputError>) -> Void)
    /// <p>Registers an Alexa-enabled device built by an Original Equipment Manufacturer (OEM)
    ///          using Alexa Voice Service (AVS).</p>
    func registerAVSDevice(input: RegisterAVSDeviceInput, completion: @escaping (SdkResult<RegisterAVSDeviceOutput, RegisterAVSDeviceOutputError>) -> Void)
    /// <p>Disassociates a skill from the organization under a user's AWS account. If the skill
    ///          is a private skill, it moves to an AcceptStatus of PENDING. Any private or public skill
    ///          that is rejected can be added later by calling the ApproveSkill API. </p>
    func rejectSkill(input: RejectSkillInput, completion: @escaping (SdkResult<RejectSkillOutput, RejectSkillOutputError>) -> Void)
    /// <p>Determines the details for the room from which a skill request was invoked. This
    ///          operation is used by skill developers.</p>
    ///          <p>To query ResolveRoom from an Alexa skill, the skill ID needs to be authorized. When
    ///          the skill is using an AWS Lambda function, the skill is automatically authorized when you
    ///          publish your skill as a private skill to your AWS account. Skills that are hosted using a
    ///          custom web service must be manually authorized. To get your skill authorized, contact AWS
    ///          Support with your AWS account ID that queries the ResolveRoom API and skill ID. </p>
    func resolveRoom(input: ResolveRoomInput, completion: @escaping (SdkResult<ResolveRoomOutput, ResolveRoomOutputError>) -> Void)
    /// <p>Revokes an invitation and invalidates the enrollment URL.</p>
    func revokeInvitation(input: RevokeInvitationInput, completion: @escaping (SdkResult<RevokeInvitationOutput, RevokeInvitationOutputError>) -> Void)
    /// <p>Searches address books and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchAddressBooks(input: SearchAddressBooksInput, completion: @escaping (SdkResult<SearchAddressBooksOutput, SearchAddressBooksOutputError>) -> Void)
    /// <p>Searches contacts and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchContacts(input: SearchContactsInput, completion: @escaping (SdkResult<SearchContactsOutput, SearchContactsOutputError>) -> Void)
    /// <p>Searches devices and lists the ones that meet a set of filter criteria.</p>
    func searchDevices(input: SearchDevicesInput, completion: @escaping (SdkResult<SearchDevicesOutput, SearchDevicesOutputError>) -> Void)
    /// <p>Searches network profiles and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchNetworkProfiles(input: SearchNetworkProfilesInput, completion: @escaping (SdkResult<SearchNetworkProfilesOutput, SearchNetworkProfilesOutputError>) -> Void)
    /// <p>Searches room profiles and lists the ones that meet a set of filter
    ///          criteria.</p>
    func searchProfiles(input: SearchProfilesInput, completion: @escaping (SdkResult<SearchProfilesOutput, SearchProfilesOutputError>) -> Void)
    /// <p>Searches rooms and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchRooms(input: SearchRoomsInput, completion: @escaping (SdkResult<SearchRoomsOutput, SearchRoomsOutputError>) -> Void)
    /// <p>Searches skill groups and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchSkillGroups(input: SearchSkillGroupsInput, completion: @escaping (SdkResult<SearchSkillGroupsOutput, SearchSkillGroupsOutputError>) -> Void)
    /// <p>Searches users and lists the ones that meet a set of filter and sort
    ///          criteria.</p>
    func searchUsers(input: SearchUsersInput, completion: @escaping (SdkResult<SearchUsersOutput, SearchUsersOutputError>) -> Void)
    /// <p>Triggers an asynchronous flow to send text, SSML, or audio announcements to rooms that
    ///          are identified by a search or filter. </p>
    func sendAnnouncement(input: SendAnnouncementInput, completion: @escaping (SdkResult<SendAnnouncementOutput, SendAnnouncementOutputError>) -> Void)
    /// <p>Sends an enrollment invitation email with a URL to a user. The URL is valid for 30
    ///          days or until you call this operation again, whichever comes first. </p>
    func sendInvitation(input: SendInvitationInput, completion: @escaping (SdkResult<SendInvitationOutput, SendInvitationOutputError>) -> Void)
    /// <p>Resets a device and its account to the known default settings. This clears all
    ///          information and settings set by previous users in the following ways:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Bluetooth - This unpairs all bluetooth devices paired with your echo
    ///                device.</p>
    ///             </li>
    ///             <li>
    ///                <p>Volume - This resets the echo device's volume to the default value.</p>
    ///             </li>
    ///             <li>
    ///                <p>Notifications - This clears all notifications from your echo device.</p>
    ///             </li>
    ///             <li>
    ///                <p>Lists - This clears all to-do items from your echo device.</p>
    ///             </li>
    ///             <li>
    ///                <p>Settings - This internally syncs the room's profile (if the device is assigned to
    ///                a room), contacts, address books, delegation access for account linking, and
    ///                communications (if enabled on the room profile).</p>
    ///             </li>
    ///          </ul>
    func startDeviceSync(input: StartDeviceSyncInput, completion: @escaping (SdkResult<StartDeviceSyncOutput, StartDeviceSyncOutputError>) -> Void)
    /// <p>Initiates the discovery of any smart home appliances associated with the
    ///          room.</p>
    func startSmartHomeApplianceDiscovery(input: StartSmartHomeApplianceDiscoveryInput, completion: @escaping (SdkResult<StartSmartHomeApplianceDiscoveryOutput, StartSmartHomeApplianceDiscoveryOutputError>) -> Void)
    /// <p>Adds metadata tags to a specified resource.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutput, TagResourceOutputError>) -> Void)
    /// <p>Removes metadata tags from a specified resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutput, UntagResourceOutputError>) -> Void)
    /// <p>Updates address book details by the address book ARN.</p>
    func updateAddressBook(input: UpdateAddressBookInput, completion: @escaping (SdkResult<UpdateAddressBookOutput, UpdateAddressBookOutputError>) -> Void)
    /// <p>Updates the configuration of the report delivery schedule with the specified schedule
    ///          ARN.</p>
    func updateBusinessReportSchedule(input: UpdateBusinessReportScheduleInput, completion: @escaping (SdkResult<UpdateBusinessReportScheduleOutput, UpdateBusinessReportScheduleOutputError>) -> Void)
    /// <p>Updates an existing conference provider's settings.</p>
    func updateConferenceProvider(input: UpdateConferenceProviderInput, completion: @escaping (SdkResult<UpdateConferenceProviderOutput, UpdateConferenceProviderOutputError>) -> Void)
    /// <p>Updates the contact details by the contact ARN.</p>
    func updateContact(input: UpdateContactInput, completion: @escaping (SdkResult<UpdateContactOutput, UpdateContactOutputError>) -> Void)
    /// <p>Updates the device name by device ARN.</p>
    func updateDevice(input: UpdateDeviceInput, completion: @escaping (SdkResult<UpdateDeviceOutput, UpdateDeviceOutputError>) -> Void)
    /// <p>Updates the details of a gateway. If any optional field is not provided, the existing
    ///          corresponding value is left unmodified.</p>
    func updateGateway(input: UpdateGatewayInput, completion: @escaping (SdkResult<UpdateGatewayOutput, UpdateGatewayOutputError>) -> Void)
    /// <p>Updates the details of a gateway group. If any optional field is not provided, the
    ///          existing corresponding value is left unmodified.</p>
    func updateGatewayGroup(input: UpdateGatewayGroupInput, completion: @escaping (SdkResult<UpdateGatewayGroupOutput, UpdateGatewayGroupOutputError>) -> Void)
    /// <p>Updates a network profile by the network profile ARN.</p>
    func updateNetworkProfile(input: UpdateNetworkProfileInput, completion: @escaping (SdkResult<UpdateNetworkProfileOutput, UpdateNetworkProfileOutputError>) -> Void)
    /// <p>Updates an existing room profile by room profile ARN.</p>
    func updateProfile(input: UpdateProfileInput, completion: @escaping (SdkResult<UpdateProfileOutput, UpdateProfileOutputError>) -> Void)
    /// <p>Updates room details by room ARN.</p>
    func updateRoom(input: UpdateRoomInput, completion: @escaping (SdkResult<UpdateRoomOutput, UpdateRoomOutputError>) -> Void)
    /// <p>Updates skill group details by skill group ARN.</p>
    func updateSkillGroup(input: UpdateSkillGroupInput, completion: @escaping (SdkResult<UpdateSkillGroupOutput, UpdateSkillGroupOutputError>) -> Void)
}
