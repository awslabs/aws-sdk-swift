// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EndOfMeetingReminderType {
    case announcementTimeCheck
    case announcementVariableTimeLeft
    case chime
    case knock
    case sdkUnknown(String)
}

extension EndOfMeetingReminderType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EndOfMeetingReminderType] {
        return [
            .announcementTimeCheck,
            .announcementVariableTimeLeft,
            .chime,
            .knock,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .announcementTimeCheck: return "ANNOUNCEMENT_TIME_CHECK"
        case .announcementVariableTimeLeft: return "ANNOUNCEMENT_VARIABLE_TIME_LEFT"
        case .chime: return "CHIME"
        case .knock: return "KNOCK"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EndOfMeetingReminderType(rawValue: rawValue) ?? EndOfMeetingReminderType.sdkUnknown(rawValue)
    }
}
