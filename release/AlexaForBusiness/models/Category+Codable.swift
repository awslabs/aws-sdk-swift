// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Category: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case categoryId = "CategoryId"
        case categoryName = "CategoryName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let categoryId = categoryId {
            try encodeContainer.encode(categoryId, forKey: .categoryId)
        }
        if let categoryName = categoryName {
            try encodeContainer.encode(categoryName, forKey: .categoryName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryIdDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .categoryId)
        categoryId = categoryIdDecoded
        let categoryNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .categoryName)
        categoryName = categoryNameDecoded
    }
}
