// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RegisterAVSDeviceInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case amazonId = "AmazonId"
        case clientId = "ClientId"
        case deviceSerialNumber = "DeviceSerialNumber"
        case productId = "ProductId"
        case roomArn = "RoomArn"
        case tags = "Tags"
        case userCode = "UserCode"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let amazonId = amazonId {
            try encodeContainer.encode(amazonId, forKey: .amazonId)
        }
        if let clientId = clientId {
            try encodeContainer.encode(clientId, forKey: .clientId)
        }
        if let deviceSerialNumber = deviceSerialNumber {
            try encodeContainer.encode(deviceSerialNumber, forKey: .deviceSerialNumber)
        }
        if let productId = productId {
            try encodeContainer.encode(productId, forKey: .productId)
        }
        if let roomArn = roomArn {
            try encodeContainer.encode(roomArn, forKey: .roomArn)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
        if let userCode = userCode {
            try encodeContainer.encode(userCode, forKey: .userCode)
        }
    }
}
