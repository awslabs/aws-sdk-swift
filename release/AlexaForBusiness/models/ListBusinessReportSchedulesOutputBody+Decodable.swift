// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBusinessReportSchedulesOutputBody: Equatable {
    public let businessReportSchedules: [BusinessReportSchedule]?
    public let nextToken: String?
}

extension ListBusinessReportSchedulesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case businessReportSchedules = "BusinessReportSchedules"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let businessReportSchedulesContainer = try containerValues.decodeIfPresent([BusinessReportSchedule].self, forKey: .businessReportSchedules)
        var businessReportSchedulesDecoded0:[BusinessReportSchedule]? = nil
        if let businessReportSchedulesContainer = businessReportSchedulesContainer {
            businessReportSchedulesDecoded0 = [BusinessReportSchedule]()
            for structure0 in businessReportSchedulesContainer {
                businessReportSchedulesDecoded0?.append(structure0)
            }
        }
        businessReportSchedules = businessReportSchedulesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
