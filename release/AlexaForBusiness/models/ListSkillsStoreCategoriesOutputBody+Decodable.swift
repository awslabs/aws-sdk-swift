// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsStoreCategoriesOutputBody: Equatable {
    public let categoryList: [Category]?
    public let nextToken: String?
}

extension ListSkillsStoreCategoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case categoryList = "CategoryList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let categoryListContainer = try containerValues.decodeIfPresent([Category].self, forKey: .categoryList)
        var categoryListDecoded0:[Category]? = nil
        if let categoryListContainer = categoryListContainer {
            categoryListDecoded0 = [Category]()
            for structure0 in categoryListContainer {
                categoryListDecoded0?.append(structure0)
            }
        }
        categoryList = categoryListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
