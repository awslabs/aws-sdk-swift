// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchAddressBooksOutputBody: Equatable {
    public let addressBooks: [AddressBookData]?
    public let nextToken: String?
    public let totalCount: Int?
}

extension SearchAddressBooksOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case addressBooks = "AddressBooks"
        case nextToken = "NextToken"
        case totalCount = "TotalCount"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let addressBooksContainer = try containerValues.decodeIfPresent([AddressBookData].self, forKey: .addressBooks)
        var addressBooksDecoded0:[AddressBookData]? = nil
        if let addressBooksContainer = addressBooksContainer {
            addressBooksDecoded0 = [AddressBookData]()
            for structure0 in addressBooksContainer {
                addressBooksDecoded0?.append(structure0)
            }
        }
        addressBooks = addressBooksDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let totalCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalCount)
        totalCount = totalCountDecoded
    }
}
