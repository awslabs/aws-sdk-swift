// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutInvitationConfigurationInputBody: Equatable {
    public let organizationName: String?
    public let contactEmail: String?
    public let privateSkillIds: [String]?
}

extension PutInvitationConfigurationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contactEmail = "ContactEmail"
        case organizationName = "OrganizationName"
        case privateSkillIds = "PrivateSkillIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let organizationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .organizationName)
        organizationName = organizationNameDecoded
        let contactEmailDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactEmail)
        contactEmail = contactEmailDecoded
        let privateSkillIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .privateSkillIds)
        var privateSkillIdsDecoded0:[String]? = nil
        if let privateSkillIdsContainer = privateSkillIdsContainer {
            privateSkillIdsDecoded0 = [String]()
            for string0 in privateSkillIdsContainer {
                privateSkillIdsDecoded0?.append(string0)
            }
        }
        privateSkillIds = privateSkillIdsDecoded0
    }
}
