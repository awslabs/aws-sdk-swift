// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsInputBody: Equatable {
    public let skillGroupArn: String?
    public let enablementType: EnablementTypeFilter?
    public let skillType: SkillTypeFilter?
    public let nextToken: String?
    public let maxResults: Int?
}

extension ListSkillsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case enablementType = "EnablementType"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case skillGroupArn = "SkillGroupArn"
        case skillType = "SkillType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skillGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .skillGroupArn)
        skillGroupArn = skillGroupArnDecoded
        let enablementTypeDecoded = try containerValues.decodeIfPresent(EnablementTypeFilter.self, forKey: .enablementType)
        enablementType = enablementTypeDecoded
        let skillTypeDecoded = try containerValues.decodeIfPresent(SkillTypeFilter.self, forKey: .skillType)
        skillType = skillTypeDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
