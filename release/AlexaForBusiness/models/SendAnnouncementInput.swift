// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SendAnnouncementInput: Equatable {
    /// <p>The unique, user-specified identifier for the request that ensures idempotency.</p>
    public var clientRequestToken: String?
    /// <p>The announcement content. This can contain only one of the three possible announcement types (text, SSML or audio).</p>
    public let content: Content?
    /// <p>The filters to use to send an announcement to a specified list of rooms. The supported filter keys are RoomName, ProfileName, RoomArn, and ProfileArn. To send to all rooms, specify an empty RoomFilters list.</p>
    public let roomFilters: [Filter]?
    /// <p>The time to live for an announcement. Default is 300. If delivery doesn't occur within this time, the
    ///          announcement is not delivered.</p>
    public let timeToLiveInSeconds: Int?

    public init (
        clientRequestToken: String? = nil,
        content: Content? = nil,
        roomFilters: [Filter]? = nil,
        timeToLiveInSeconds: Int? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.content = content
        self.roomFilters = roomFilters
        self.timeToLiveInSeconds = timeToLiveInSeconds
    }
}
