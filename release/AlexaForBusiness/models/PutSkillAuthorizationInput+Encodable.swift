// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PutSkillAuthorizationInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case authorizationResult = "AuthorizationResult"
        case roomArn = "RoomArn"
        case skillId = "SkillId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let authorizationResult = authorizationResult {
            var authorizationResultContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .authorizationResult)
            for (dictKey0, authorizationresult0) in authorizationResult {
                try authorizationResultContainer.encode(authorizationresult0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let roomArn = roomArn {
            try encodeContainer.encode(roomArn, forKey: .roomArn)
        }
        if let skillId = skillId {
            try encodeContainer.encode(skillId, forKey: .skillId)
        }
    }
}
