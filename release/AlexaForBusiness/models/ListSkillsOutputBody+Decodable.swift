// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSkillsOutputBody: Equatable {
    public let skillSummaries: [SkillSummary]?
    public let nextToken: String?
}

extension ListSkillsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case skillSummaries = "SkillSummaries"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let skillSummariesContainer = try containerValues.decodeIfPresent([SkillSummary].self, forKey: .skillSummaries)
        var skillSummariesDecoded0:[SkillSummary]? = nil
        if let skillSummariesContainer = skillSummariesContainer {
            skillSummariesDecoded0 = [SkillSummary]()
            for structure0 in skillSummariesContainer {
                skillSummariesDecoded0?.append(structure0)
            }
        }
        skillSummaries = skillSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
