// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartDeviceSyncInputBody: Equatable {
    public let roomArn: String?
    public let deviceArn: String?
    public let features: [Feature]?
}

extension StartDeviceSyncInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceArn = "DeviceArn"
        case features = "Features"
        case roomArn = "RoomArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roomArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roomArn)
        roomArn = roomArnDecoded
        let deviceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceArn)
        deviceArn = deviceArnDecoded
        let featuresContainer = try containerValues.decodeIfPresent([Feature].self, forKey: .features)
        var featuresDecoded0:[Feature]? = nil
        if let featuresContainer = featuresContainer {
            featuresDecoded0 = [Feature]()
            for string0 in featuresContainer {
                featuresDecoded0?.append(string0)
            }
        }
        features = featuresDecoded0
    }
}
