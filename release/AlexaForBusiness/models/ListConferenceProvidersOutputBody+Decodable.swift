// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConferenceProvidersOutputBody: Equatable {
    public let conferenceProviders: [ConferenceProvider]?
    public let nextToken: String?
}

extension ListConferenceProvidersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case conferenceProviders = "ConferenceProviders"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conferenceProvidersContainer = try containerValues.decodeIfPresent([ConferenceProvider].self, forKey: .conferenceProviders)
        var conferenceProvidersDecoded0:[ConferenceProvider]? = nil
        if let conferenceProvidersContainer = conferenceProvidersContainer {
            conferenceProvidersDecoded0 = [ConferenceProvider]()
            for structure0 in conferenceProvidersContainer {
                conferenceProvidersDecoded0?.append(structure0)
            }
        }
        conferenceProviders = conferenceProvidersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
