// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BusinessReport: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case deliveryTime = "DeliveryTime"
        case downloadUrl = "DownloadUrl"
        case failureCode = "FailureCode"
        case s3Location = "S3Location"
        case status = "Status"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let deliveryTime = deliveryTime {
            try encodeContainer.encode(deliveryTime.timeIntervalSince1970, forKey: .deliveryTime)
        }
        if let downloadUrl = downloadUrl {
            try encodeContainer.encode(downloadUrl, forKey: .downloadUrl)
        }
        if let failureCode = failureCode {
            try encodeContainer.encode(failureCode.rawValue, forKey: .failureCode)
        }
        if let s3Location = s3Location {
            try encodeContainer.encode(s3Location, forKey: .s3Location)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(BusinessReportStatus.self, forKey: .status)
        status = statusDecoded
        let failureCodeDecoded = try containerValues.decodeIfPresent(BusinessReportFailureCode.self, forKey: .failureCode)
        failureCode = failureCodeDecoded
        let s3LocationDecoded = try containerValues.decodeIfPresent(BusinessReportS3Location.self, forKey: .s3Location)
        s3Location = s3LocationDecoded
        let deliveryTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .deliveryTime)
        deliveryTime = deliveryTimeDecoded
        let downloadUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .downloadUrl)
        downloadUrl = downloadUrlDecoded
    }
}
