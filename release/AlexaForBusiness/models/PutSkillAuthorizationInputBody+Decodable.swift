// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutSkillAuthorizationInputBody: Equatable {
    public let authorizationResult: [String:String]?
    public let skillId: String?
    public let roomArn: String?
}

extension PutSkillAuthorizationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authorizationResult = "AuthorizationResult"
        case roomArn = "RoomArn"
        case skillId = "SkillId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authorizationResultContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .authorizationResult)
        var authorizationResultDecoded0: [String:String]? = nil
        if let authorizationResultContainer = authorizationResultContainer {
            authorizationResultDecoded0 = [String:String]()
            for (key0, value0) in authorizationResultContainer {
                authorizationResultDecoded0?[key0] = value0
            }
        }
        authorizationResult = authorizationResultDecoded0
        let skillIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .skillId)
        skillId = skillIdDecoded
        let roomArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roomArn)
        roomArn = roomArnDecoded
    }
}
