// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateContactInput: Equatable {
    /// <p>A unique, user-specified identifier for this request that ensures
    ///          idempotency.</p>
    public var clientRequestToken: String?
    /// <p>The name of the contact to display on the console.</p>
    public let displayName: String?
    /// <p>The first name of the contact that is used to call the contact on the
    ///          device.</p>
    public let firstName: String?
    /// <p>The last name of the contact that is used to call the contact on the
    ///          device.</p>
    public let lastName: String?
    /// <p>The phone number of the contact in E.164 format. The phone number type defaults to
    ///          WORK. You can specify PhoneNumber or PhoneNumbers. We recommend that you use PhoneNumbers,
    ///          which lets you specify the phone number type and multiple numbers.</p>
    public let phoneNumber: String?
    /// <p>The list of phone numbers for the contact.</p>
    public let phoneNumbers: [PhoneNumber]?
    /// <p>The list of SIP addresses for the contact.</p>
    public let sipAddresses: [SipAddress]?
    /// <p>The tags to be added to the specified resource. Do not provide system tags.</p>
    public let tags: [Tag]?

    public init (
        clientRequestToken: String? = nil,
        displayName: String? = nil,
        firstName: String? = nil,
        lastName: String? = nil,
        phoneNumber: String? = nil,
        phoneNumbers: [PhoneNumber]? = nil,
        sipAddresses: [SipAddress]? = nil,
        tags: [Tag]? = nil
    )
    {
        self.clientRequestToken = clientRequestToken
        self.displayName = displayName
        self.firstName = firstName
        self.lastName = lastName
        self.phoneNumber = phoneNumber
        self.phoneNumbers = phoneNumbers
        self.sipAddresses = sipAddresses
        self.tags = tags
    }
}
