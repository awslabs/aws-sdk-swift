// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateNetworkProfileInput: Equatable {
    /// <p>The ARN of the Private Certificate Authority (PCA) created in AWS Certificate Manager
    ///          (ACM). This is used to issue certificates to the devices. </p>
    public let certificateAuthorityArn: String?
    /// <p>A unique, user-specified identifier for the request that ensures idempotency.</p>
    public var clientRequestToken: String?
    /// <p>The current password of the Wi-Fi network.</p>
    public let currentPassword: String?
    /// <p>Detailed information about a device's network profile.</p>
    public let description: String?
    /// <p>The authentication standard that is used in the EAP framework. Currently, EAP_TLS is
    ///          supported.</p>
    public let eapMethod: NetworkEapMethod?
    /// <p>The name of the network profile associated with a device.</p>
    public let networkProfileName: String?
    /// <p>The next, or subsequent, password of the Wi-Fi network. This password is asynchronously
    ///          transmitted to the device and is used when the password of the network changes to
    ///          NextPassword. </p>
    public let nextPassword: String?
    /// <p>The security type of the Wi-Fi network. This can be WPA2_ENTERPRISE, WPA2_PSK, WPA_PSK,
    ///          WEP, or OPEN.</p>
    public let securityType: NetworkSecurityType?
    /// <p>The SSID of the Wi-Fi network.</p>
    public let ssid: String?
    /// <p>The tags to be added to the specified resource. Do not provide system tags. </p>
    public let tags: [Tag]?
    /// <p>The root certificates of your authentication server that is installed on your devices
    ///          and used to trust your authentication server during EAP negotiation. </p>
    public let trustAnchors: [String]?

    public init (
        certificateAuthorityArn: String? = nil,
        clientRequestToken: String? = nil,
        currentPassword: String? = nil,
        description: String? = nil,
        eapMethod: NetworkEapMethod? = nil,
        networkProfileName: String? = nil,
        nextPassword: String? = nil,
        securityType: NetworkSecurityType? = nil,
        ssid: String? = nil,
        tags: [Tag]? = nil,
        trustAnchors: [String]? = nil
    )
    {
        self.certificateAuthorityArn = certificateAuthorityArn
        self.clientRequestToken = clientRequestToken
        self.currentPassword = currentPassword
        self.description = description
        self.eapMethod = eapMethod
        self.networkProfileName = networkProfileName
        self.nextPassword = nextPassword
        self.securityType = securityType
        self.ssid = ssid
        self.tags = tags
        self.trustAnchors = trustAnchors
    }
}
