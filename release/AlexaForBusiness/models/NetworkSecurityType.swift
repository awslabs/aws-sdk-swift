// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum NetworkSecurityType {
    case `open`
    case wep
    case wpa2Enterprise
    case wpa2Psk
    case wpaPsk
    case sdkUnknown(String)
}

extension NetworkSecurityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [NetworkSecurityType] {
        return [
            .open,
            .wep,
            .wpa2Enterprise,
            .wpa2Psk,
            .wpaPsk,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .open: return "OPEN"
        case .wep: return "WEP"
        case .wpa2Enterprise: return "WPA2_ENTERPRISE"
        case .wpa2Psk: return "WPA2_PSK"
        case .wpaPsk: return "WPA_PSK"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = NetworkSecurityType(rawValue: rawValue) ?? NetworkSecurityType.sdkUnknown(rawValue)
    }
}
