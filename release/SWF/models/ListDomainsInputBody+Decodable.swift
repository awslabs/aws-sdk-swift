// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainsInputBody: Equatable {
    public let nextPageToken: String?
    public let registrationStatus: RegistrationStatus?
    public let maximumPageSize: Int
    public let reverseOrder: Bool
}

extension ListDomainsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maximumPageSize
        case nextPageToken
        case registrationStatus
        case reverseOrder
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let registrationStatusDecoded = try containerValues.decodeIfPresent(RegistrationStatus.self, forKey: .registrationStatus)
        registrationStatus = registrationStatusDecoded
        let maximumPageSizeDecoded = try containerValues.decode(Int.self, forKey: .maximumPageSize)
        maximumPageSize = maximumPageSizeDecoded
        let reverseOrderDecoded = try containerValues.decode(Bool.self, forKey: .reverseOrder)
        reverseOrder = reverseOrderDecoded
    }
}
