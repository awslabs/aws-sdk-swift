// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PollForActivityTaskOutputBody: Equatable {
    public let taskToken: String?
    public let activityId: String?
    public let startedEventId: Int
    public let workflowExecution: WorkflowExecution?
    public let activityType: ActivityType?
    public let input: String?
}

extension PollForActivityTaskOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activityId
        case activityType
        case input
        case startedEventId
        case taskToken
        case workflowExecution
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskToken)
        taskToken = taskTokenDecoded
        let activityIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .activityId)
        activityId = activityIdDecoded
        let startedEventIdDecoded = try containerValues.decode(Int.self, forKey: .startedEventId)
        startedEventId = startedEventIdDecoded
        let workflowExecutionDecoded = try containerValues.decodeIfPresent(WorkflowExecution.self, forKey: .workflowExecution)
        workflowExecution = workflowExecutionDecoded
        let activityTypeDecoded = try containerValues.decodeIfPresent(ActivityType.self, forKey: .activityType)
        activityType = activityTypeDecoded
        let inputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .input)
        input = inputDecoded
    }
}
