// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActivityTypeConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultTaskHeartbeatTimeout
        case defaultTaskList
        case defaultTaskPriority
        case defaultTaskScheduleToCloseTimeout
        case defaultTaskScheduleToStartTimeout
        case defaultTaskStartToCloseTimeout
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultTaskHeartbeatTimeout = defaultTaskHeartbeatTimeout {
            try encodeContainer.encode(defaultTaskHeartbeatTimeout, forKey: .defaultTaskHeartbeatTimeout)
        }
        if let defaultTaskList = defaultTaskList {
            try encodeContainer.encode(defaultTaskList, forKey: .defaultTaskList)
        }
        if let defaultTaskPriority = defaultTaskPriority {
            try encodeContainer.encode(defaultTaskPriority, forKey: .defaultTaskPriority)
        }
        if let defaultTaskScheduleToCloseTimeout = defaultTaskScheduleToCloseTimeout {
            try encodeContainer.encode(defaultTaskScheduleToCloseTimeout, forKey: .defaultTaskScheduleToCloseTimeout)
        }
        if let defaultTaskScheduleToStartTimeout = defaultTaskScheduleToStartTimeout {
            try encodeContainer.encode(defaultTaskScheduleToStartTimeout, forKey: .defaultTaskScheduleToStartTimeout)
        }
        if let defaultTaskStartToCloseTimeout = defaultTaskStartToCloseTimeout {
            try encodeContainer.encode(defaultTaskStartToCloseTimeout, forKey: .defaultTaskStartToCloseTimeout)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultTaskStartToCloseTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskStartToCloseTimeout)
        defaultTaskStartToCloseTimeout = defaultTaskStartToCloseTimeoutDecoded
        let defaultTaskHeartbeatTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskHeartbeatTimeout)
        defaultTaskHeartbeatTimeout = defaultTaskHeartbeatTimeoutDecoded
        let defaultTaskListDecoded = try containerValues.decodeIfPresent(TaskList.self, forKey: .defaultTaskList)
        defaultTaskList = defaultTaskListDecoded
        let defaultTaskPriorityDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskPriority)
        defaultTaskPriority = defaultTaskPriorityDecoded
        let defaultTaskScheduleToStartTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskScheduleToStartTimeout)
        defaultTaskScheduleToStartTimeout = defaultTaskScheduleToStartTimeoutDecoded
        let defaultTaskScheduleToCloseTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskScheduleToCloseTimeout)
        defaultTaskScheduleToCloseTimeout = defaultTaskScheduleToCloseTimeoutDecoded
    }
}
