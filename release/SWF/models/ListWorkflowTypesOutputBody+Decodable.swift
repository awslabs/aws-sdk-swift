// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorkflowTypesOutputBody: Equatable {
    public let typeInfos: [WorkflowTypeInfo]?
    public let nextPageToken: String?
}

extension ListWorkflowTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextPageToken
        case typeInfos
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeInfosContainer = try containerValues.decodeIfPresent([WorkflowTypeInfo].self, forKey: .typeInfos)
        var typeInfosDecoded0:[WorkflowTypeInfo]? = nil
        if let typeInfosContainer = typeInfosContainer {
            typeInfosDecoded0 = [WorkflowTypeInfo]()
            for structure0 in typeInfosContainer {
                typeInfosDecoded0?.append(structure0)
            }
        }
        typeInfos = typeInfosDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
