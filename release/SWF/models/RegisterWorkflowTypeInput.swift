// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RegisterWorkflowTypeInput: Equatable {
    /// <p>If set, specifies the default policy to use for the child workflow executions when a
    ///       workflow execution of this type is terminated, by calling the <a>TerminateWorkflowExecution</a> action explicitly or due to an expired timeout. This
    ///       default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
    ///             <a>Decision</a>.</p>
    ///          <p>The supported child policies are:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>TERMINATE</code> – The child executions are terminated.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>REQUEST_CANCEL</code> – A request to cancel is attempted for each child
    ///           execution by recording a <code>WorkflowExecutionCancelRequested</code> event in its
    ///           history. It is up to the decider to take appropriate actions when it receives an execution
    ///           history with this event.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ABANDON</code> – No action is taken. The child executions continue to
    ///           run.</p>
    ///             </li>
    ///          </ul>
    public let defaultChildPolicy: ChildPolicy?
    /// <p>If set, specifies the default maximum duration for executions of this workflow type.
    ///       You can override this default when starting an execution through the <a>StartWorkflowExecution</a> Action or <code>StartChildWorkflowExecution</code>
    ///             <a>Decision</a>.</p>
    ///
    ///          <p>The duration is specified in seconds; an integer greater than or equal to 0. Unlike
    ///       some of the other timeout parameters in Amazon SWF, you cannot specify a value of "NONE" for
    ///         <code>defaultExecutionStartToCloseTimeout</code>; there is a one-year max limit on the time
    ///       that a workflow execution can run. Exceeding this limit always causes the workflow execution
    ///       to time out.</p>
    public let defaultExecutionStartToCloseTimeout: String?
    /// <p>The default IAM role attached to this workflow type.</p>
    ///          <note>
    ///             <p>Executions of this workflow type need IAM roles to invoke Lambda functions. If you
    ///         don't specify an IAM role when you start this workflow type, the default Lambda role is
    ///         attached to the execution. For more information, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html">https://docs.aws.amazon.com/amazonswf/latest/developerguide/lambda-task.html</a> in the
    ///           <i>Amazon SWF Developer Guide</i>.</p>
    ///          </note>
    public let defaultLambdaRole: String?
    /// <p>If set, specifies the default task list to use for scheduling decision tasks for
    ///       executions of this workflow type. This default is used only if a task list isn't provided when
    ///       starting the execution through the <a>StartWorkflowExecution</a> Action or
    ///         <code>StartChildWorkflowExecution</code>
    ///             <a>Decision</a>.</p>
    public let defaultTaskList: TaskList?
    /// <p>The default task priority to assign to the workflow type. If not assigned, then
    ///         <code>0</code> is used. Valid values are integers that range from Java's
    ///         <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647).
    ///       Higher numbers indicate higher priority.</p>
    ///          <p>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task
    ///         Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>
    public let defaultTaskPriority: String?
    /// <p>If set, specifies the default maximum duration of decision tasks for this workflow
    ///       type. This default can be overridden when starting a workflow execution using the <a>StartWorkflowExecution</a> action or the <code>StartChildWorkflowExecution</code>
    ///             <a>Decision</a>.</p>
    ///          <p>The duration is specified in seconds, an integer greater than or equal to
    ///         <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    public let defaultTaskStartToCloseTimeout: String?
    /// <p>Textual description of the workflow type.</p>
    public let description: String?
    /// <p>The name of the domain in which to register the workflow type.</p>
    public let domain: String?
    /// <p>The name of the workflow type.</p>
    ///
    ///          <p>The specified string must not start or end with whitespace. It must not contain a
    ///         <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any
    ///       control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>). Also, it must
    ///       not <i>be</i> the literal string <code>arn</code>.</p>
    public let name: String?
    /// <p>The version of the workflow type.</p>
    ///          <note>
    ///             <p>The workflow type consists of the name and version, the combination of which must be
    ///         unique within the domain. To get a list of all currently registered workflow types, use the
    ///           <a>ListWorkflowTypes</a> action.</p>
    ///          </note>
    ///
    ///          <p>The specified string must not start or end with whitespace. It must not contain a
    ///         <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any
    ///       control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>). Also, it must
    ///       not <i>be</i> the literal string <code>arn</code>.</p>
    public let version: String?

    public init (
        defaultChildPolicy: ChildPolicy? = nil,
        defaultExecutionStartToCloseTimeout: String? = nil,
        defaultLambdaRole: String? = nil,
        defaultTaskList: TaskList? = nil,
        defaultTaskPriority: String? = nil,
        defaultTaskStartToCloseTimeout: String? = nil,
        description: String? = nil,
        domain: String? = nil,
        name: String? = nil,
        version: String? = nil
    )
    {
        self.defaultChildPolicy = defaultChildPolicy
        self.defaultExecutionStartToCloseTimeout = defaultExecutionStartToCloseTimeout
        self.defaultLambdaRole = defaultLambdaRole
        self.defaultTaskList = defaultTaskList
        self.defaultTaskPriority = defaultTaskPriority
        self.defaultTaskStartToCloseTimeout = defaultTaskStartToCloseTimeout
        self.description = description
        self.domain = domain
        self.name = name
        self.version = version
    }
}
