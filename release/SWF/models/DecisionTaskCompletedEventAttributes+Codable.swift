// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DecisionTaskCompletedEventAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case executionContext
        case scheduledEventId
        case startedEventId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let executionContext = executionContext {
            try encodeContainer.encode(executionContext, forKey: .executionContext)
        }
        if scheduledEventId != 0 {
            try encodeContainer.encode(scheduledEventId, forKey: .scheduledEventId)
        }
        if startedEventId != 0 {
            try encodeContainer.encode(startedEventId, forKey: .startedEventId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let executionContextDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionContext)
        executionContext = executionContextDecoded
        let scheduledEventIdDecoded = try containerValues.decode(Int.self, forKey: .scheduledEventId)
        scheduledEventId = scheduledEventIdDecoded
        let startedEventIdDecoded = try containerValues.decode(Int.self, forKey: .startedEventId)
        startedEventId = startedEventIdDecoded
    }
}
