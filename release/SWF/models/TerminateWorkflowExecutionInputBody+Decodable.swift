// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TerminateWorkflowExecutionInputBody: Equatable {
    public let domain: String?
    public let workflowId: String?
    public let runId: String?
    public let reason: String?
    public let details: String?
    public let childPolicy: ChildPolicy?
}

extension TerminateWorkflowExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case childPolicy
        case details
        case domain
        case reason
        case runId
        case workflowId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domain)
        domain = domainDecoded
        let workflowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workflowId)
        workflowId = workflowIdDecoded
        let runIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .runId)
        runId = runIdDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reason)
        reason = reasonDecoded
        let detailsDecoded = try containerValues.decodeIfPresent(String.self, forKey: .details)
        details = detailsDecoded
        let childPolicyDecoded = try containerValues.decodeIfPresent(ChildPolicy.self, forKey: .childPolicy)
        childPolicy = childPolicyDecoded
    }
}
