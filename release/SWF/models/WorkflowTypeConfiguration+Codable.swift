// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WorkflowTypeConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case defaultChildPolicy
        case defaultExecutionStartToCloseTimeout
        case defaultLambdaRole
        case defaultTaskList
        case defaultTaskPriority
        case defaultTaskStartToCloseTimeout
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let defaultChildPolicy = defaultChildPolicy {
            try encodeContainer.encode(defaultChildPolicy.rawValue, forKey: .defaultChildPolicy)
        }
        if let defaultExecutionStartToCloseTimeout = defaultExecutionStartToCloseTimeout {
            try encodeContainer.encode(defaultExecutionStartToCloseTimeout, forKey: .defaultExecutionStartToCloseTimeout)
        }
        if let defaultLambdaRole = defaultLambdaRole {
            try encodeContainer.encode(defaultLambdaRole, forKey: .defaultLambdaRole)
        }
        if let defaultTaskList = defaultTaskList {
            try encodeContainer.encode(defaultTaskList, forKey: .defaultTaskList)
        }
        if let defaultTaskPriority = defaultTaskPriority {
            try encodeContainer.encode(defaultTaskPriority, forKey: .defaultTaskPriority)
        }
        if let defaultTaskStartToCloseTimeout = defaultTaskStartToCloseTimeout {
            try encodeContainer.encode(defaultTaskStartToCloseTimeout, forKey: .defaultTaskStartToCloseTimeout)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let defaultTaskStartToCloseTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskStartToCloseTimeout)
        defaultTaskStartToCloseTimeout = defaultTaskStartToCloseTimeoutDecoded
        let defaultExecutionStartToCloseTimeoutDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultExecutionStartToCloseTimeout)
        defaultExecutionStartToCloseTimeout = defaultExecutionStartToCloseTimeoutDecoded
        let defaultTaskListDecoded = try containerValues.decodeIfPresent(TaskList.self, forKey: .defaultTaskList)
        defaultTaskList = defaultTaskListDecoded
        let defaultTaskPriorityDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultTaskPriority)
        defaultTaskPriority = defaultTaskPriorityDecoded
        let defaultChildPolicyDecoded = try containerValues.decodeIfPresent(ChildPolicy.self, forKey: .defaultChildPolicy)
        defaultChildPolicy = defaultChildPolicyDecoded
        let defaultLambdaRoleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .defaultLambdaRole)
        defaultLambdaRole = defaultLambdaRoleDecoded
    }
}
