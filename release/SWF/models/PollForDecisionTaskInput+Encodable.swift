// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PollForDecisionTaskInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domain
        case identity
        case maximumPageSize
        case nextPageToken
        case reverseOrder
        case taskList
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domain = domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if let identity = identity {
            try encodeContainer.encode(identity, forKey: .identity)
        }
        if maximumPageSize != 0 {
            try encodeContainer.encode(maximumPageSize, forKey: .maximumPageSize)
        }
        if let nextPageToken = nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
        if reverseOrder != false {
            try encodeContainer.encode(reverseOrder, forKey: .reverseOrder)
        }
        if let taskList = taskList {
            try encodeContainer.encode(taskList, forKey: .taskList)
        }
    }
}
