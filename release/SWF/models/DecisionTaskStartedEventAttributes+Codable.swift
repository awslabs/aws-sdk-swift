// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DecisionTaskStartedEventAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case identity
        case scheduledEventId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identity = identity {
            try encodeContainer.encode(identity, forKey: .identity)
        }
        if scheduledEventId != 0 {
            try encodeContainer.encode(scheduledEventId, forKey: .scheduledEventId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identity)
        identity = identityDecoded
        let scheduledEventIdDecoded = try containerValues.decode(Int.self, forKey: .scheduledEventId)
        scheduledEventId = scheduledEventIdDecoded
    }
}
