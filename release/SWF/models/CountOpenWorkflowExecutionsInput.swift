// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CountOpenWorkflowExecutionsInput: Equatable {
    /// <p>The name of the domain containing the workflow executions to count.</p>
    public let domain: String?
    /// <p>If specified, only workflow executions matching the <code>WorkflowId</code> in the
    ///       filter are counted.</p>
    ///          <note>
    ///             <p>
    ///                <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are
    ///         mutually exclusive. You can specify at most one of these in a request.</p>
    ///          </note>
    public let executionFilter: WorkflowExecutionFilter?
    /// <p>Specifies the start time criteria that workflow executions must meet in order to be
    ///       counted.</p>
    public let startTimeFilter: ExecutionTimeFilter?
    /// <p>If specified, only executions that have a tag that matches the filter are
    ///       counted.</p>
    ///          <note>
    ///             <p>
    ///                <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are
    ///         mutually exclusive. You can specify at most one of these in a request.</p>
    ///          </note>
    public let tagFilter: TagFilter?
    /// <p>Specifies the type of the workflow executions to be counted.</p>
    ///          <note>
    ///             <p>
    ///                <code>executionFilter</code>, <code>typeFilter</code> and <code>tagFilter</code> are
    ///         mutually exclusive. You can specify at most one of these in a request.</p>
    ///          </note>
    public let typeFilter: WorkflowTypeFilter?

    public init (
        domain: String? = nil,
        executionFilter: WorkflowExecutionFilter? = nil,
        startTimeFilter: ExecutionTimeFilter? = nil,
        tagFilter: TagFilter? = nil,
        typeFilter: WorkflowTypeFilter? = nil
    )
    {
        self.domain = domain
        self.executionFilter = executionFilter
        self.startTimeFilter = startTimeFilter
        self.tagFilter = tagFilter
        self.typeFilter = typeFilter
    }
}
