// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RespondDecisionTaskCompletedInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case decisions
        case executionContext
        case taskToken
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let decisions = decisions {
            var decisionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .decisions)
            for decisionlist0 in decisions {
                try decisionsContainer.encode(decisionlist0)
            }
        }
        if let executionContext = executionContext {
            try encodeContainer.encode(executionContext, forKey: .executionContext)
        }
        if let taskToken = taskToken {
            try encodeContainer.encode(taskToken, forKey: .taskToken)
        }
    }
}
