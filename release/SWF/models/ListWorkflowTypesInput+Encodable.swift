// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListWorkflowTypesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domain
        case maximumPageSize
        case name
        case nextPageToken
        case registrationStatus
        case reverseOrder
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domain = domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if maximumPageSize != 0 {
            try encodeContainer.encode(maximumPageSize, forKey: .maximumPageSize)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let nextPageToken = nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
        if let registrationStatus = registrationStatus {
            try encodeContainer.encode(registrationStatus.rawValue, forKey: .registrationStatus)
        }
        if reverseOrder != false {
            try encodeContainer.encode(reverseOrder, forKey: .reverseOrder)
        }
    }
}
