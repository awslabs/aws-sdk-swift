// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CountClosedWorkflowExecutionsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case closeStatusFilter
        case closeTimeFilter
        case domain
        case executionFilter
        case startTimeFilter
        case tagFilter
        case typeFilter
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let closeStatusFilter = closeStatusFilter {
            try encodeContainer.encode(closeStatusFilter, forKey: .closeStatusFilter)
        }
        if let closeTimeFilter = closeTimeFilter {
            try encodeContainer.encode(closeTimeFilter, forKey: .closeTimeFilter)
        }
        if let domain = domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if let executionFilter = executionFilter {
            try encodeContainer.encode(executionFilter, forKey: .executionFilter)
        }
        if let startTimeFilter = startTimeFilter {
            try encodeContainer.encode(startTimeFilter, forKey: .startTimeFilter)
        }
        if let tagFilter = tagFilter {
            try encodeContainer.encode(tagFilter, forKey: .tagFilter)
        }
        if let typeFilter = typeFilter {
            try encodeContainer.encode(typeFilter, forKey: .typeFilter)
        }
    }
}
