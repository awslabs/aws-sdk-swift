// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RespondDecisionTaskCompletedInputBody: Equatable {
    public let taskToken: String?
    public let decisions: [Decision]?
    public let executionContext: String?
}

extension RespondDecisionTaskCompletedInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case decisions
        case executionContext
        case taskToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let taskTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .taskToken)
        taskToken = taskTokenDecoded
        let decisionsContainer = try containerValues.decodeIfPresent([Decision].self, forKey: .decisions)
        var decisionsDecoded0:[Decision]? = nil
        if let decisionsContainer = decisionsContainer {
            decisionsDecoded0 = [Decision]()
            for structure0 in decisionsContainer {
                decisionsDecoded0?.append(structure0)
            }
        }
        decisions = decisionsDecoded0
        let executionContextDecoded = try containerValues.decodeIfPresent(String.self, forKey: .executionContext)
        executionContext = executionContextDecoded
    }
}
