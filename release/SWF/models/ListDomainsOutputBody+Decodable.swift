// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainsOutputBody: Equatable {
    public let domainInfos: [DomainInfo]?
    public let nextPageToken: String?
}

extension ListDomainsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainInfos
        case nextPageToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainInfosContainer = try containerValues.decodeIfPresent([DomainInfo].self, forKey: .domainInfos)
        var domainInfosDecoded0:[DomainInfo]? = nil
        if let domainInfosContainer = domainInfosContainer {
            domainInfosDecoded0 = [DomainInfo]()
            for structure0 in domainInfosContainer {
                domainInfosDecoded0?.append(structure0)
            }
        }
        domainInfos = domainInfosDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
