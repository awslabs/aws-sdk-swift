// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SignalWorkflowExecutionInputBody: Equatable {
    public let domain: String?
    public let workflowId: String?
    public let runId: String?
    public let signalName: String?
    public let input: String?
}

extension SignalWorkflowExecutionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domain
        case input
        case runId
        case signalName
        case workflowId
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domain)
        domain = domainDecoded
        let workflowIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workflowId)
        workflowId = workflowIdDecoded
        let runIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .runId)
        runId = runIdDecoded
        let signalNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .signalName)
        signalName = signalNameDecoded
        let inputDecoded = try containerValues.decodeIfPresent(String.self, forKey: .input)
        input = inputDecoded
    }
}
