// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension TerminateWorkflowExecutionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case childPolicy
        case details
        case domain
        case reason
        case runId
        case workflowId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let childPolicy = childPolicy {
            try encodeContainer.encode(childPolicy.rawValue, forKey: .childPolicy)
        }
        if let details = details {
            try encodeContainer.encode(details, forKey: .details)
        }
        if let domain = domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if let reason = reason {
            try encodeContainer.encode(reason, forKey: .reason)
        }
        if let runId = runId {
            try encodeContainer.encode(runId, forKey: .runId)
        }
        if let workflowId = workflowId {
            try encodeContainer.encode(workflowId, forKey: .workflowId)
        }
    }
}
