// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SignalWorkflowExecutionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domain
        case input
        case runId
        case signalName
        case workflowId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domain = domain {
            try encodeContainer.encode(domain, forKey: .domain)
        }
        if let input = input {
            try encodeContainer.encode(input, forKey: .input)
        }
        if let runId = runId {
            try encodeContainer.encode(runId, forKey: .runId)
        }
        if let signalName = signalName {
            try encodeContainer.encode(signalName, forKey: .signalName)
        }
        if let workflowId = workflowId {
            try encodeContainer.encode(workflowId, forKey: .workflowId)
        }
    }
}
