// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomalyMonitorsOutputBody: Equatable {
    public let anomalyMonitors: [AnomalyMonitor]?
    public let nextPageToken: String?
}

extension GetAnomalyMonitorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalyMonitors = "AnomalyMonitors"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalyMonitorsContainer = try containerValues.decodeIfPresent([AnomalyMonitor].self, forKey: .anomalyMonitors)
        var anomalyMonitorsDecoded0:[AnomalyMonitor]? = nil
        if let anomalyMonitorsContainer = anomalyMonitorsContainer {
            anomalyMonitorsDecoded0 = [AnomalyMonitor]()
            for structure0 in anomalyMonitorsContainer {
                anomalyMonitorsDecoded0?.append(structure0)
            }
        }
        anomalyMonitors = anomalyMonitorsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
