// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ESInstanceDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case currentGeneration = "CurrentGeneration"
        case instanceClass = "InstanceClass"
        case instanceSize = "InstanceSize"
        case region = "Region"
        case sizeFlexEligible = "SizeFlexEligible"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if currentGeneration != false {
            try encodeContainer.encode(currentGeneration, forKey: .currentGeneration)
        }
        if let instanceClass = instanceClass {
            try encodeContainer.encode(instanceClass, forKey: .instanceClass)
        }
        if let instanceSize = instanceSize {
            try encodeContainer.encode(instanceSize, forKey: .instanceSize)
        }
        if let region = region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if sizeFlexEligible != false {
            try encodeContainer.encode(sizeFlexEligible, forKey: .sizeFlexEligible)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceClassDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceClass)
        instanceClass = instanceClassDecoded
        let instanceSizeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceSize)
        instanceSize = instanceSizeDecoded
        let regionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .region)
        region = regionDecoded
        let currentGenerationDecoded = try containerValues.decode(Bool.self, forKey: .currentGeneration)
        currentGeneration = currentGenerationDecoded
        let sizeFlexEligibleDecoded = try containerValues.decode(Bool.self, forKey: .sizeFlexEligible)
        sizeFlexEligible = sizeFlexEligibleDecoded
    }
}
