// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetSavingsPlansUtilizationDetailsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataType = "DataType"
        case filter = "Filter"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case timePeriod = "TimePeriod"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataType = dataType {
            var dataTypeContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dataType)
            for savingsplansdatatypes0 in dataType {
                try dataTypeContainer.encode(savingsplansdatatypes0.rawValue)
            }
        }
        if let filter = filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let sortBy = sortBy {
            try encodeContainer.encode(sortBy, forKey: .sortBy)
        }
        if let timePeriod = timePeriod {
            try encodeContainer.encode(timePeriod, forKey: .timePeriod)
        }
    }
}
