// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomaliesOutputBody: Equatable {
    public let anomalies: [Anomaly]?
    public let nextPageToken: String?
}

extension GetAnomaliesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalies = "Anomalies"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomaliesContainer = try containerValues.decodeIfPresent([Anomaly].self, forKey: .anomalies)
        var anomaliesDecoded0:[Anomaly]? = nil
        if let anomaliesContainer = anomaliesContainer {
            anomaliesDecoded0 = [Anomaly]()
            for structure0 in anomaliesContainer {
                anomaliesDecoded0?.append(structure0)
            }
        }
        anomalies = anomaliesDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
