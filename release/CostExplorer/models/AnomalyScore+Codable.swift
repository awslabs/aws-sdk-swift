// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnomalyScore: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case currentScore = "CurrentScore"
        case maxScore = "MaxScore"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if currentScore != 0.0 {
            try encodeContainer.encode(currentScore, forKey: .currentScore)
        }
        if maxScore != 0.0 {
            try encodeContainer.encode(maxScore, forKey: .maxScore)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxScoreDecoded = try containerValues.decode(Double.self, forKey: .maxScore)
        maxScore = maxScoreDecoded
        let currentScoreDecoded = try containerValues.decode(Double.self, forKey: .currentScore)
        currentScore = currentScoreDecoded
    }
}
