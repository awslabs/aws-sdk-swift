// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SavingsPlansAmortizedCommitment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case amortizedRecurringCommitment = "AmortizedRecurringCommitment"
        case amortizedUpfrontCommitment = "AmortizedUpfrontCommitment"
        case totalAmortizedCommitment = "TotalAmortizedCommitment"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let amortizedRecurringCommitment = amortizedRecurringCommitment {
            try encodeContainer.encode(amortizedRecurringCommitment, forKey: .amortizedRecurringCommitment)
        }
        if let amortizedUpfrontCommitment = amortizedUpfrontCommitment {
            try encodeContainer.encode(amortizedUpfrontCommitment, forKey: .amortizedUpfrontCommitment)
        }
        if let totalAmortizedCommitment = totalAmortizedCommitment {
            try encodeContainer.encode(totalAmortizedCommitment, forKey: .totalAmortizedCommitment)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let amortizedRecurringCommitmentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .amortizedRecurringCommitment)
        amortizedRecurringCommitment = amortizedRecurringCommitmentDecoded
        let amortizedUpfrontCommitmentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .amortizedUpfrontCommitment)
        amortizedUpfrontCommitment = amortizedUpfrontCommitmentDecoded
        let totalAmortizedCommitmentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .totalAmortizedCommitment)
        totalAmortizedCommitment = totalAmortizedCommitmentDecoded
    }
}
