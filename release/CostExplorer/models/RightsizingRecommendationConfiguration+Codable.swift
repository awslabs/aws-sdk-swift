// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RightsizingRecommendationConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case benefitsConsidered = "BenefitsConsidered"
        case recommendationTarget = "RecommendationTarget"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if benefitsConsidered != false {
            try encodeContainer.encode(benefitsConsidered, forKey: .benefitsConsidered)
        }
        if let recommendationTarget = recommendationTarget {
            try encodeContainer.encode(recommendationTarget.rawValue, forKey: .recommendationTarget)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recommendationTargetDecoded = try containerValues.decodeIfPresent(RecommendationTarget.self, forKey: .recommendationTarget)
        recommendationTarget = recommendationTargetDecoded
        let benefitsConsideredDecoded = try containerValues.decode(Bool.self, forKey: .benefitsConsidered)
        benefitsConsidered = benefitsConsideredDecoded
    }
}
