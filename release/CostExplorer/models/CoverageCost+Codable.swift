// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CoverageCost: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case onDemandCost = "OnDemandCost"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let onDemandCost = onDemandCost {
            try encodeContainer.encode(onDemandCost, forKey: .onDemandCost)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let onDemandCostDecoded = try containerValues.decodeIfPresent(String.self, forKey: .onDemandCost)
        onDemandCost = onDemandCostDecoded
    }
}
