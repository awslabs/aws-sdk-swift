// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A reference to a Cost Category containing only enough information to identify the Cost Category.</p>
///         <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>
public struct CostCategoryReference: Equatable {
    /// <p>
    ///             The unique identifier for your Cost Category.
    ///         </p>
    public let costCategoryArn: String?
    /// <p>The default value for the cost category.</p>
    public let defaultValue: String?
    /// <p>
    ///             The Cost Category's effective end date.</p>
    public let effectiveEnd: String?
    /// <p>
    ///             The Cost Category's effective start date.</p>
    public let effectiveStart: String?
    /// <p>The unique name of the Cost Category.</p>
    public let name: String?
    /// <p>
    ///             The number of rules associated with a specific Cost Category.
    ///         </p>
    public let numberOfRules: Int
    /// <p>
    ///             The list of processing statuses for Cost Management products for a specific cost category.
    ///         </p>
    public let processingStatus: [CostCategoryProcessingStatus]?
    /// <p>
    ///             A list of unique cost category values in a specific cost category.
    ///         </p>
    public let values: [String]?

    public init (
        costCategoryArn: String? = nil,
        defaultValue: String? = nil,
        effectiveEnd: String? = nil,
        effectiveStart: String? = nil,
        name: String? = nil,
        numberOfRules: Int = 0,
        processingStatus: [CostCategoryProcessingStatus]? = nil,
        values: [String]? = nil
    )
    {
        self.costCategoryArn = costCategoryArn
        self.defaultValue = defaultValue
        self.effectiveEnd = effectiveEnd
        self.effectiveStart = effectiveStart
        self.name = name
        self.numberOfRules = numberOfRules
        self.processingStatus = processingStatus
        self.values = values
    }
}
