// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetDimensionValuesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case context = "Context"
        case dimension = "Dimension"
        case filter = "Filter"
        case maxResults = "MaxResults"
        case nextPageToken = "NextPageToken"
        case searchString = "SearchString"
        case sortBy = "SortBy"
        case timePeriod = "TimePeriod"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let context = context {
            try encodeContainer.encode(context.rawValue, forKey: .context)
        }
        if let dimension = dimension {
            try encodeContainer.encode(dimension.rawValue, forKey: .dimension)
        }
        if let filter = filter {
            try encodeContainer.encode(filter, forKey: .filter)
        }
        if maxResults != 0 {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextPageToken = nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
        if let searchString = searchString {
            try encodeContainer.encode(searchString, forKey: .searchString)
        }
        if let sortBy = sortBy {
            var sortByContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sortBy)
            for sortdefinitions0 in sortBy {
                try sortByContainer.encode(sortdefinitions0)
            }
        }
        if let timePeriod = timePeriod {
            try encodeContainer.encode(timePeriod, forKey: .timePeriod)
        }
    }
}
