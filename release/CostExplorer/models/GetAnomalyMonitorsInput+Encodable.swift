// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetAnomalyMonitorsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case monitorArnList = "MonitorArnList"
        case nextPageToken = "NextPageToken"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let monitorArnList = monitorArnList {
            var monitorArnListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .monitorArnList)
            for values0 in monitorArnList {
                try monitorArnListContainer.encode(values0)
            }
        }
        if let nextPageToken = nextPageToken {
            try encodeContainer.encode(nextPageToken, forKey: .nextPageToken)
        }
    }
}
