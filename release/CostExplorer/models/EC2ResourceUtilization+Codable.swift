// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ResourceUtilization: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case diskResourceUtilization = "DiskResourceUtilization"
        case eBSResourceUtilization = "EBSResourceUtilization"
        case maxCpuUtilizationPercentage = "MaxCpuUtilizationPercentage"
        case maxMemoryUtilizationPercentage = "MaxMemoryUtilizationPercentage"
        case maxStorageUtilizationPercentage = "MaxStorageUtilizationPercentage"
        case networkResourceUtilization = "NetworkResourceUtilization"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let diskResourceUtilization = diskResourceUtilization {
            try encodeContainer.encode(diskResourceUtilization, forKey: .diskResourceUtilization)
        }
        if let eBSResourceUtilization = eBSResourceUtilization {
            try encodeContainer.encode(eBSResourceUtilization, forKey: .eBSResourceUtilization)
        }
        if let maxCpuUtilizationPercentage = maxCpuUtilizationPercentage {
            try encodeContainer.encode(maxCpuUtilizationPercentage, forKey: .maxCpuUtilizationPercentage)
        }
        if let maxMemoryUtilizationPercentage = maxMemoryUtilizationPercentage {
            try encodeContainer.encode(maxMemoryUtilizationPercentage, forKey: .maxMemoryUtilizationPercentage)
        }
        if let maxStorageUtilizationPercentage = maxStorageUtilizationPercentage {
            try encodeContainer.encode(maxStorageUtilizationPercentage, forKey: .maxStorageUtilizationPercentage)
        }
        if let networkResourceUtilization = networkResourceUtilization {
            try encodeContainer.encode(networkResourceUtilization, forKey: .networkResourceUtilization)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maxCpuUtilizationPercentageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .maxCpuUtilizationPercentage)
        maxCpuUtilizationPercentage = maxCpuUtilizationPercentageDecoded
        let maxMemoryUtilizationPercentageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .maxMemoryUtilizationPercentage)
        maxMemoryUtilizationPercentage = maxMemoryUtilizationPercentageDecoded
        let maxStorageUtilizationPercentageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .maxStorageUtilizationPercentage)
        maxStorageUtilizationPercentage = maxStorageUtilizationPercentageDecoded
        let eBSResourceUtilizationDecoded = try containerValues.decodeIfPresent(EBSResourceUtilization.self, forKey: .eBSResourceUtilization)
        eBSResourceUtilization = eBSResourceUtilizationDecoded
        let diskResourceUtilizationDecoded = try containerValues.decodeIfPresent(DiskResourceUtilization.self, forKey: .diskResourceUtilization)
        diskResourceUtilization = diskResourceUtilizationDecoded
        let networkResourceUtilizationDecoded = try containerValues.decodeIfPresent(NetworkResourceUtilization.self, forKey: .networkResourceUtilization)
        networkResourceUtilization = networkResourceUtilizationDecoded
    }
}
