// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EC2ResourceDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case hourlyOnDemandRate = "HourlyOnDemandRate"
        case instanceType = "InstanceType"
        case memory = "Memory"
        case networkPerformance = "NetworkPerformance"
        case platform = "Platform"
        case region = "Region"
        case sku = "Sku"
        case storage = "Storage"
        case vcpu = "Vcpu"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let hourlyOnDemandRate = hourlyOnDemandRate {
            try encodeContainer.encode(hourlyOnDemandRate, forKey: .hourlyOnDemandRate)
        }
        if let instanceType = instanceType {
            try encodeContainer.encode(instanceType, forKey: .instanceType)
        }
        if let memory = memory {
            try encodeContainer.encode(memory, forKey: .memory)
        }
        if let networkPerformance = networkPerformance {
            try encodeContainer.encode(networkPerformance, forKey: .networkPerformance)
        }
        if let platform = platform {
            try encodeContainer.encode(platform, forKey: .platform)
        }
        if let region = region {
            try encodeContainer.encode(region, forKey: .region)
        }
        if let sku = sku {
            try encodeContainer.encode(sku, forKey: .sku)
        }
        if let storage = storage {
            try encodeContainer.encode(storage, forKey: .storage)
        }
        if let vcpu = vcpu {
            try encodeContainer.encode(vcpu, forKey: .vcpu)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hourlyOnDemandRateDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hourlyOnDemandRate)
        hourlyOnDemandRate = hourlyOnDemandRateDecoded
        let instanceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .instanceType)
        instanceType = instanceTypeDecoded
        let platformDecoded = try containerValues.decodeIfPresent(String.self, forKey: .platform)
        platform = platformDecoded
        let regionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .region)
        region = regionDecoded
        let skuDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sku)
        sku = skuDecoded
        let memoryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .memory)
        memory = memoryDecoded
        let networkPerformanceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .networkPerformance)
        networkPerformance = networkPerformanceDecoded
        let storageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .storage)
        storage = storageDecoded
        let vcpuDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vcpu)
        vcpu = vcpuDecoded
    }
}
