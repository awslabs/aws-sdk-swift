// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansCoverageOutputBody: Equatable {
    public let savingsPlansCoverages: [SavingsPlansCoverage]?
    public let nextToken: String?
}

extension GetSavingsPlansCoverageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case savingsPlansCoverages = "SavingsPlansCoverages"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlansCoveragesContainer = try containerValues.decodeIfPresent([SavingsPlansCoverage].self, forKey: .savingsPlansCoverages)
        var savingsPlansCoveragesDecoded0:[SavingsPlansCoverage]? = nil
        if let savingsPlansCoveragesContainer = savingsPlansCoveragesContainer {
            savingsPlansCoveragesDecoded0 = [SavingsPlansCoverage]()
            for structure0 in savingsPlansCoveragesContainer {
                savingsPlansCoveragesDecoded0?.append(structure0)
            }
        }
        savingsPlansCoverages = savingsPlansCoveragesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
