// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomalyMonitorsInputBody: Equatable {
    public let monitorArnList: [String]?
    public let nextPageToken: String?
    public let maxResults: Int?
}

extension GetAnomalyMonitorsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case monitorArnList = "MonitorArnList"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitorArnListContainer = try containerValues.decodeIfPresent([String].self, forKey: .monitorArnList)
        var monitorArnListDecoded0:[String]? = nil
        if let monitorArnListContainer = monitorArnListContainer {
            monitorArnListDecoded0 = [String]()
            for string0 in monitorArnListContainer {
                monitorArnListDecoded0?.append(string0)
            }
        }
        monitorArnList = monitorArnListDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
