// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAnomalySubscriptionsOutputBody: Equatable {
    public let anomalySubscriptions: [AnomalySubscription]?
    public let nextPageToken: String?
}

extension GetAnomalySubscriptionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case anomalySubscriptions = "AnomalySubscriptions"
        case nextPageToken = "NextPageToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let anomalySubscriptionsContainer = try containerValues.decodeIfPresent([AnomalySubscription].self, forKey: .anomalySubscriptions)
        var anomalySubscriptionsDecoded0:[AnomalySubscription]? = nil
        if let anomalySubscriptionsContainer = anomalySubscriptionsContainer {
            anomalySubscriptionsDecoded0 = [AnomalySubscription]()
            for structure0 in anomalySubscriptionsContainer {
                anomalySubscriptionsDecoded0?.append(structure0)
            }
        }
        anomalySubscriptions = anomalySubscriptionsDecoded0
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
