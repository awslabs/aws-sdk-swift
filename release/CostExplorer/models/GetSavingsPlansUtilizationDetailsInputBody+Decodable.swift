// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansUtilizationDetailsInputBody: Equatable {
    public let timePeriod: DateInterval?
    public let filter: Expression?
    public let dataType: [SavingsPlansDataType]?
    public let nextToken: String?
    public let maxResults: Int
    public let sortBy: SortDefinition?
}

extension GetSavingsPlansUtilizationDetailsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dataType = "DataType"
        case filter = "Filter"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case sortBy = "SortBy"
        case timePeriod = "TimePeriod"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let timePeriodDecoded = try containerValues.decodeIfPresent(DateInterval.self, forKey: .timePeriod)
        timePeriod = timePeriodDecoded
        let filterDecoded = try containerValues.decodeIfPresent(Expression.self, forKey: .filter)
        filter = filterDecoded
        let dataTypeContainer = try containerValues.decodeIfPresent([SavingsPlansDataType].self, forKey: .dataType)
        var dataTypeDecoded0:[SavingsPlansDataType]? = nil
        if let dataTypeContainer = dataTypeContainer {
            dataTypeDecoded0 = [SavingsPlansDataType]()
            for string0 in dataTypeContainer {
                dataTypeDecoded0?.append(string0)
            }
        }
        dataType = dataTypeDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let sortByDecoded = try containerValues.decodeIfPresent(SortDefinition.self, forKey: .sortBy)
        sortBy = sortByDecoded
    }
}
