// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCostCategoriesOutputBody: Equatable {
    public let nextPageToken: String?
    public let costCategoryNames: [String]?
    public let costCategoryValues: [String]?
    public let returnSize: Int?
    public let totalSize: Int?
}

extension GetCostCategoriesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case costCategoryNames = "CostCategoryNames"
        case costCategoryValues = "CostCategoryValues"
        case nextPageToken = "NextPageToken"
        case returnSize = "ReturnSize"
        case totalSize = "TotalSize"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
        let costCategoryNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .costCategoryNames)
        var costCategoryNamesDecoded0:[String]? = nil
        if let costCategoryNamesContainer = costCategoryNamesContainer {
            costCategoryNamesDecoded0 = [String]()
            for string0 in costCategoryNamesContainer {
                costCategoryNamesDecoded0?.append(string0)
            }
        }
        costCategoryNames = costCategoryNamesDecoded0
        let costCategoryValuesContainer = try containerValues.decodeIfPresent([String].self, forKey: .costCategoryValues)
        var costCategoryValuesDecoded0:[String]? = nil
        if let costCategoryValuesContainer = costCategoryValuesContainer {
            costCategoryValuesDecoded0 = [String]()
            for string0 in costCategoryValuesContainer {
                costCategoryValuesDecoded0?.append(string0)
            }
        }
        costCategoryValues = costCategoryValuesDecoded0
        let returnSizeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .returnSize)
        returnSize = returnSizeDecoded
        let totalSizeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .totalSize)
        totalSize = totalSizeDecoded
    }
}
