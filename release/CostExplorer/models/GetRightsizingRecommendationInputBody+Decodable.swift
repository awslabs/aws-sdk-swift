// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetRightsizingRecommendationInputBody: Equatable {
    public let filter: Expression?
    public let configuration: RightsizingRecommendationConfiguration?
    public let service: String?
    public let pageSize: Int
    public let nextPageToken: String?
}

extension GetRightsizingRecommendationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configuration = "Configuration"
        case filter = "Filter"
        case nextPageToken = "NextPageToken"
        case pageSize = "PageSize"
        case service = "Service"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let filterDecoded = try containerValues.decodeIfPresent(Expression.self, forKey: .filter)
        filter = filterDecoded
        let configurationDecoded = try containerValues.decodeIfPresent(RightsizingRecommendationConfiguration.self, forKey: .configuration)
        configuration = configurationDecoded
        let serviceDecoded = try containerValues.decodeIfPresent(String.self, forKey: .service)
        service = serviceDecoded
        let pageSizeDecoded = try containerValues.decode(Int.self, forKey: .pageSize)
        pageSize = pageSizeDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
