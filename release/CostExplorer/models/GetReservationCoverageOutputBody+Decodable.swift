// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReservationCoverageOutputBody: Equatable {
    public let coveragesByTime: [CoverageByTime]?
    public let total: Coverage?
    public let nextPageToken: String?
}

extension GetReservationCoverageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case coveragesByTime = "CoveragesByTime"
        case nextPageToken = "NextPageToken"
        case total = "Total"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let coveragesByTimeContainer = try containerValues.decodeIfPresent([CoverageByTime].self, forKey: .coveragesByTime)
        var coveragesByTimeDecoded0:[CoverageByTime]? = nil
        if let coveragesByTimeContainer = coveragesByTimeContainer {
            coveragesByTimeDecoded0 = [CoverageByTime]()
            for structure0 in coveragesByTimeContainer {
                coveragesByTimeDecoded0?.append(structure0)
            }
        }
        coveragesByTime = coveragesByTimeDecoded0
        let totalDecoded = try containerValues.decodeIfPresent(Coverage.self, forKey: .total)
        total = totalDecoded
        let nextPageTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextPageToken)
        nextPageToken = nextPageTokenDecoded
    }
}
