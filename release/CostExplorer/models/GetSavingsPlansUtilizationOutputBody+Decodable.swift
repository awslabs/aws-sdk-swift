// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetSavingsPlansUtilizationOutputBody: Equatable {
    public let savingsPlansUtilizationsByTime: [SavingsPlansUtilizationByTime]?
    public let total: SavingsPlansUtilizationAggregates?
}

extension GetSavingsPlansUtilizationOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case savingsPlansUtilizationsByTime = "SavingsPlansUtilizationsByTime"
        case total = "Total"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let savingsPlansUtilizationsByTimeContainer = try containerValues.decodeIfPresent([SavingsPlansUtilizationByTime].self, forKey: .savingsPlansUtilizationsByTime)
        var savingsPlansUtilizationsByTimeDecoded0:[SavingsPlansUtilizationByTime]? = nil
        if let savingsPlansUtilizationsByTimeContainer = savingsPlansUtilizationsByTimeContainer {
            savingsPlansUtilizationsByTimeDecoded0 = [SavingsPlansUtilizationByTime]()
            for structure0 in savingsPlansUtilizationsByTimeContainer {
                savingsPlansUtilizationsByTimeDecoded0?.append(structure0)
            }
        }
        savingsPlansUtilizationsByTime = savingsPlansUtilizationsByTimeDecoded0
        let totalDecoded = try containerValues.decodeIfPresent(SavingsPlansUtilizationAggregates.self, forKey: .total)
        total = totalDecoded
    }
}
