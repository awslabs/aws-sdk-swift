// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetRightsizingRecommendationInput: Equatable {
    /// <p> Enables you to customize recommendations across two attributes. You can choose to view
    ///       recommendations for instances within the same instance families or across different instance
    ///       families. You can also choose to view your estimated savings associated with recommendations
    ///       with consideration of existing Savings Plans or RI benefits, or
    ///       neither. </p>
    public let configuration: RightsizingRecommendationConfiguration?
    /// <p>Use <code>Expression</code> to filter by cost or by usage. There are two patterns: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>Simple dimension values - You can set the dimension name and values for the
    ///                     filters that you plan to use. For example, you can filter for
    ///                     <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>. The
    ///                         <code>Expression</code> example looks like:</p>
    ///                 <p>
    ///                   <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1",
    ///                         “us-west-1” ] } }</code>
    ///                 </p>
    ///                 <p>The list of dimension values are OR'd together to retrieve cost or usage
    ///                     data. You can create <code>Expression</code> and <code>DimensionValues</code>
    ///                     objects using either <code>with*</code> methods or <code>set*</code> methods in
    ///                     multiple lines. </p>
    ///             </li>
    ///             <li>
    ///                 <p>Compound dimension values with logical operations - You can use multiple
    ///                         <code>Expression</code> types and the logical operators
    ///                         <code>AND/OR/NOT</code> to create a list of one or more
    ///                         <code>Expression</code> objects. This allows you to filter on more advanced
    ///                     options. For example, you can filter on <code>((REGION == us-east-1 OR
    ///                         REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE !=
    ///                         DataTransfer)</code>. The <code>Expression</code> for that looks like
    ///                     this:</p>
    ///                 <p>
    ///                   <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION",
    ///                         "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName",
    ///                         "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE",
    ///                         "Values": ["DataTransfer"] }}} ] } </code>
    ///                </p>
    ///                 <note>
    ///                     <p>Because each <code>Expression</code> can have only one operator, the
    ///                         service returns an error if more than one is specified. The following
    ///                         example shows an <code>Expression</code> object that creates an
    ///                         error.</p>
    ///                 </note>
    ///                 <p>
    ///                     <code> { "And": [ ... ], "DimensionValues": { "Dimension": "USAGE_TYPE",
    ///                         "Values": [ "DataTransfer" ] } } </code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///         <note>
    ///             <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT is not
    ///                 supported. OR is not supported between different dimensions, or dimensions and tags.
    ///                 NOT operators aren't supported.
    ///                 Dimensions
    ///                 are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or
    ///                     <code>RIGHTSIZING_TYPE</code>.</p>
    /// 					
    /// 					       <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR are not supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p>
    /// 					
    /// 					
    /// 					
    ///          </note>
    public let filter: Expression?
    /// <p>The pagination token that indicates the next set of results that you want to retrieve.</p>
    public let nextPageToken: String?
    /// <p>The number of recommendations that you want returned in a single response object.</p>
    public let pageSize: Int
    /// <p>The specific service that you want recommendations for. The only valid value for <code>GetRightsizingRecommendation</code> is
    ///     	"<code>AmazonEC2</code>".</p>
    public let service: String?

    public init (
        configuration: RightsizingRecommendationConfiguration? = nil,
        filter: Expression? = nil,
        nextPageToken: String? = nil,
        pageSize: Int = 0,
        service: String? = nil
    )
    {
        self.configuration = configuration
        self.filter = filter
        self.nextPageToken = nextPageToken
        self.pageSize = pageSize
        self.service = service
    }
}
