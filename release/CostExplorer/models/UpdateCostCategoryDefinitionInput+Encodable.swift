// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateCostCategoryDefinitionInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case costCategoryArn = "CostCategoryArn"
        case defaultValue = "DefaultValue"
        case ruleVersion = "RuleVersion"
        case rules = "Rules"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let costCategoryArn = costCategoryArn {
            try encodeContainer.encode(costCategoryArn, forKey: .costCategoryArn)
        }
        if let defaultValue = defaultValue {
            try encodeContainer.encode(defaultValue, forKey: .defaultValue)
        }
        if let ruleVersion = ruleVersion {
            try encodeContainer.encode(ruleVersion.rawValue, forKey: .ruleVersion)
        }
        if let rules = rules {
            var rulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rules)
            for costcategoryruleslist0 in rules {
                try rulesContainer.encode(costcategoryruleslist0)
            }
        }
    }
}
