// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DeploymentEventType {
    case bakeTimeStarted
    case deploymentCompleted
    case deploymentStarted
    case percentageUpdated
    case rollbackCompleted
    case rollbackStarted
    case sdkUnknown(String)
}

extension DeploymentEventType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DeploymentEventType] {
        return [
            .bakeTimeStarted,
            .deploymentCompleted,
            .deploymentStarted,
            .percentageUpdated,
            .rollbackCompleted,
            .rollbackStarted,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .bakeTimeStarted: return "BAKE_TIME_STARTED"
        case .deploymentCompleted: return "DEPLOYMENT_COMPLETED"
        case .deploymentStarted: return "DEPLOYMENT_STARTED"
        case .percentageUpdated: return "PERCENTAGE_UPDATED"
        case .rollbackCompleted: return "ROLLBACK_COMPLETED"
        case .rollbackStarted: return "ROLLBACK_STARTED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DeploymentEventType(rawValue: rawValue) ?? DeploymentEventType.sdkUnknown(rawValue)
    }
}
