// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EnvironmentState {
    case deploying
    case readyForDeployment
    case rolledBack
    case rollingBack
    case sdkUnknown(String)
}

extension EnvironmentState : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EnvironmentState] {
        return [
            .deploying,
            .readyForDeployment,
            .rolledBack,
            .rollingBack,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .deploying: return "DEPLOYING"
        case .readyForDeployment: return "READY_FOR_DEPLOYMENT"
        case .rolledBack: return "ROLLED_BACK"
        case .rollingBack: return "ROLLING_BACK"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EnvironmentState(rawValue: rawValue) ?? EnvironmentState.sdkUnknown(rawValue)
    }
}
