// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct StartDeploymentOutput: Equatable {
    /// <p>The ID of the application that was deployed.</p>
    public let applicationId: String?
    /// <p>The time the deployment completed. </p>
    public let completedAt: Date?
    /// <p>Information about the source location of the configuration.</p>
    public let configurationLocationUri: String?
    /// <p>The name of the configuration.</p>
    public let configurationName: String?
    /// <p>The ID of the configuration profile that was deployed.</p>
    public let configurationProfileId: String?
    /// <p>The configuration version that was deployed.</p>
    public let configurationVersion: String?
    /// <p>Total amount of time the deployment lasted.</p>
    public let deploymentDurationInMinutes: Int
    /// <p>The sequence number of the deployment.</p>
    public let deploymentNumber: Int
    /// <p>The ID of the deployment strategy that was deployed.</p>
    public let deploymentStrategyId: String?
    /// <p>The description of the deployment.</p>
    public let description: String?
    /// <p>The ID of the environment that was deployed.</p>
    public let environmentId: String?
    /// <p>A list containing all events related to a deployment. The most recent events are
    ///          displayed first.</p>
    public let eventLog: [DeploymentEvent]?
    /// <p>The amount of time AppConfig monitored for alarms before considering the deployment to be
    ///          complete and no longer eligible for automatic roll back.</p>
    public let finalBakeTimeInMinutes: Int
    /// <p>The percentage of targets to receive a deployed configuration during each
    ///          interval.</p>
    public let growthFactor: Float
    /// <p>The algorithm used to define how percentage grew over time.</p>
    public let growthType: GrowthType?
    /// <p>The percentage of targets for which the deployment is available.</p>
    public let percentageComplete: Float
    /// <p>The time the deployment started.</p>
    public let startedAt: Date?
    /// <p>The state of the deployment.</p>
    public let state: DeploymentState?

    public init (
        applicationId: String? = nil,
        completedAt: Date? = nil,
        configurationLocationUri: String? = nil,
        configurationName: String? = nil,
        configurationProfileId: String? = nil,
        configurationVersion: String? = nil,
        deploymentDurationInMinutes: Int = 0,
        deploymentNumber: Int = 0,
        deploymentStrategyId: String? = nil,
        description: String? = nil,
        environmentId: String? = nil,
        eventLog: [DeploymentEvent]? = nil,
        finalBakeTimeInMinutes: Int = 0,
        growthFactor: Float = 0.0,
        growthType: GrowthType? = nil,
        percentageComplete: Float = 0.0,
        startedAt: Date? = nil,
        state: DeploymentState? = nil
    )
    {
        self.applicationId = applicationId
        self.completedAt = completedAt
        self.configurationLocationUri = configurationLocationUri
        self.configurationName = configurationName
        self.configurationProfileId = configurationProfileId
        self.configurationVersion = configurationVersion
        self.deploymentDurationInMinutes = deploymentDurationInMinutes
        self.deploymentNumber = deploymentNumber
        self.deploymentStrategyId = deploymentStrategyId
        self.description = description
        self.environmentId = environmentId
        self.eventLog = eventLog
        self.finalBakeTimeInMinutes = finalBakeTimeInMinutes
        self.growthFactor = growthFactor
        self.growthType = growthType
        self.percentageComplete = percentageComplete
        self.startedAt = startedAt
        self.state = state
    }
}
