// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateConfigurationProfileInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let retrievalRoleArn: String?
    public let validators: [Validator]?
}

extension UpdateConfigurationProfileInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case name = "Name"
        case retrievalRoleArn = "RetrievalRoleArn"
        case validators = "Validators"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let retrievalRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .retrievalRoleArn)
        retrievalRoleArn = retrievalRoleArnDecoded
        let validatorsContainer = try containerValues.decodeIfPresent([Validator].self, forKey: .validators)
        var validatorsDecoded0:[Validator]? = nil
        if let validatorsContainer = validatorsContainer {
            validatorsDecoded0 = [Validator]()
            for structure0 in validatorsContainer {
                validatorsDecoded0?.append(structure0)
            }
        }
        validators = validatorsDecoded0
    }
}
