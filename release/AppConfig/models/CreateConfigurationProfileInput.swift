// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateConfigurationProfileInput: Equatable {
    /// <p>The application ID.</p>
    public let applicationId: String?
    /// <p>A description of the configuration profile.</p>
    public let description: String?
    /// <p>A URI to locate the configuration. You can specify a Systems Manager (SSM) document, an SSM
    ///          Parameter Store parameter, or an Amazon S3 object. For an SSM document, specify either the
    ///          document name in the format <code>ssm-document://<Document_name></code> or the Amazon
    ///          Resource Name (ARN). For a parameter, specify either the parameter name in the format
    ///             <code>ssm-parameter://<Parameter_name></code> or the ARN. For an Amazon S3 object,
    ///          specify the URI in the following format: <code>s3://<bucket>/<objectKey>
    ///          </code>. Here is an example: s3://my-bucket/my-app/us-east-1/my-config.json</p>
    public let locationUri: String?
    /// <p>A name for the configuration profile.</p>
    public let name: String?
    /// <p>The ARN of an IAM role with permission to access the configuration at the specified
    ///          LocationUri.</p>
    public let retrievalRoleArn: String?
    /// <p>Metadata to assign to the configuration profile. Tags help organize and categorize your
    ///          AppConfig resources. Each tag consists of a key and an optional value, both of which you
    ///          define.</p>
    public let tags: [String:String]?
    /// <p>A list of methods for validating the configuration.</p>
    public let validators: [Validator]?

    public init (
        applicationId: String? = nil,
        description: String? = nil,
        locationUri: String? = nil,
        name: String? = nil,
        retrievalRoleArn: String? = nil,
        tags: [String:String]? = nil,
        validators: [Validator]? = nil
    )
    {
        self.applicationId = applicationId
        self.description = description
        self.locationUri = locationUri
        self.name = name
        self.retrievalRoleArn = retrievalRoleArn
        self.tags = tags
        self.validators = validators
    }
}
