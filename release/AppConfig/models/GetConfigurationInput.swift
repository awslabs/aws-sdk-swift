// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct GetConfigurationInput: Equatable {
    /// <p>The application to get. Specify either the application name or the application
    ///          ID.</p>
    public let application: String?
    /// <p>The configuration version returned in the most recent <code>GetConfiguration</code>
    ///          response.</p>
    ///          <important>
    ///             <p>AWS AppConfig uses the value of the <code>ClientConfigurationVersion</code> parameter
    ///             to identify the configuration version on your clients. If you donâ€™t send
    ///                <code>ClientConfigurationVersion</code> with each call to
    ///                <code>GetConfiguration</code>, your clients receive the current configuration. You
    ///             are charged each time your clients receive a configuration.</p>
    ///             <p>To avoid excess charges, we recommend that you include the
    ///                <code>ClientConfigurationVersion</code> value with every call to
    ///                <code>GetConfiguration</code>. This value must be saved on your client. Subsequent
    ///             calls to <code>GetConfiguration</code> must pass this value by using the
    ///                <code>ClientConfigurationVersion</code> parameter. </p>
    ///          </important>
    ///          <p>For more information about working with configurations, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/appconfig-retrieving-the-configuration.html">Retrieving the Configuration</a> in the
    ///          <i>AWS AppConfig User Guide</i>.</p>
    public let clientConfigurationVersion: String?
    /// <p>A unique ID to identify the client for the configuration. This ID enables AppConfig to
    ///          deploy the configuration in intervals, as defined in the deployment strategy.</p>
    public let clientId: String?
    /// <p>The configuration to get. Specify either the configuration name or the configuration
    ///          ID.</p>
    public let configuration: String?
    /// <p>The environment to get. Specify either the environment name or the environment
    ///          ID.</p>
    public let environment: String?

    public init (
        application: String? = nil,
        clientConfigurationVersion: String? = nil,
        clientId: String? = nil,
        configuration: String? = nil,
        environment: String? = nil
    )
    {
        self.application = application
        self.clientConfigurationVersion = clientConfigurationVersion
        self.clientId = clientId
        self.configuration = configuration
        self.environment = environment
    }
}
