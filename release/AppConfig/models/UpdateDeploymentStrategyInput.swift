// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateDeploymentStrategyInput: Equatable {
    /// <p>Total amount of time for a deployment to last.</p>
    public let deploymentDurationInMinutes: Int
    /// <p>The deployment strategy ID.</p>
    public let deploymentStrategyId: String?
    /// <p>A description of the deployment strategy.</p>
    public let description: String?
    /// <p>The amount of time AppConfig monitors for alarms before considering the deployment to be
    ///          complete and no longer eligible for automatic roll back.</p>
    public let finalBakeTimeInMinutes: Int
    /// <p>The percentage of targets to receive a deployed configuration during each
    ///          interval.</p>
    public let growthFactor: Float
    /// <p>The algorithm used to define how percentage grows over time. AWS AppConfig supports the
    ///          following growth types:</p>
    ///          <p>
    ///             <b>Linear</b>: For this type, AppConfig processes the
    ///          deployment by increments of the growth factor evenly distributed over the deployment time.
    ///          For example, a linear deployment that uses a growth factor of 20 initially makes the
    ///          configuration available to 20 percent of the targets. After 1/5th of the deployment time
    ///          has passed, the system updates the percentage to 40 percent. This continues until 100% of
    ///          the targets are set to receive the deployed configuration.</p>
    ///
    ///          <p>
    ///             <b>Exponential</b>: For this type, AppConfig processes the
    ///          deployment exponentially using the following formula: <code>G*(2^N)</code>. In this
    ///          formula, <code>G</code> is the growth factor specified by the user and <code>N</code> is
    ///          the number of steps until the configuration is deployed to all targets. For example, if you
    ///          specify a growth factor of 2, then the system rolls out the configuration as
    ///          follows:</p>
    ///          <p>
    ///             <code>2*(2^0)</code>
    ///          </p>
    ///          <p>
    ///             <code>2*(2^1)</code>
    ///          </p>
    ///          <p>
    ///             <code>2*(2^2)</code>
    ///          </p>
    ///          <p>Expressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the
    ///          targets, 8% of the targets, and continues until the configuration has been deployed to all
    ///          targets.</p>
    public let growthType: GrowthType?

    public init (
        deploymentDurationInMinutes: Int = 0,
        deploymentStrategyId: String? = nil,
        description: String? = nil,
        finalBakeTimeInMinutes: Int = 0,
        growthFactor: Float = 0.0,
        growthType: GrowthType? = nil
    )
    {
        self.deploymentDurationInMinutes = deploymentDurationInMinutes
        self.deploymentStrategyId = deploymentStrategyId
        self.description = description
        self.finalBakeTimeInMinutes = finalBakeTimeInMinutes
        self.growthFactor = growthFactor
        self.growthType = growthType
    }
}
