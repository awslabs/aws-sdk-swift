// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServerReplicationConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case server
        case serverReplicationParameters
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let server = server {
            try encodeContainer.encode(server, forKey: .server)
        }
        if let serverReplicationParameters = serverReplicationParameters {
            try encodeContainer.encode(serverReplicationParameters, forKey: .serverReplicationParameters)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverDecoded = try containerValues.decodeIfPresent(Server.self, forKey: .server)
        server = serverDecoded
        let serverReplicationParametersDecoded = try containerValues.decodeIfPresent(ServerReplicationParameters.self, forKey: .serverReplicationParameters)
        serverReplicationParameters = serverReplicationParametersDecoded
    }
}
