// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAppsOutputBody: Equatable {
    public let apps: [AppSummary]?
    public let nextToken: String?
}

extension ListAppsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case apps
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appsContainer = try containerValues.decodeIfPresent([AppSummary].self, forKey: .apps)
        var appsDecoded0:[AppSummary]? = nil
        if let appsContainer = appsContainer {
            appsDecoded0 = [AppSummary]()
            for structure0 in appsContainer {
                appsDecoded0?.append(structure0)
            }
        }
        apps = appsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
