// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateReplicationJobInputBody: Equatable {
    public let replicationJobId: String?
    public let frequency: Int?
    public let nextReplicationRunStartTime: Date?
    public let licenseType: LicenseType?
    public let roleName: String?
    public let description: String?
    public let numberOfRecentAmisToKeep: Int?
    public let encrypted: Bool?
    public let kmsKeyId: String?
}

extension UpdateReplicationJobInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description
        case encrypted
        case frequency
        case kmsKeyId
        case licenseType
        case nextReplicationRunStartTime
        case numberOfRecentAmisToKeep
        case replicationJobId
        case roleName
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationJobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replicationJobId)
        replicationJobId = replicationJobIdDecoded
        let frequencyDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .frequency)
        frequency = frequencyDecoded
        let nextReplicationRunStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .nextReplicationRunStartTime)
        nextReplicationRunStartTime = nextReplicationRunStartTimeDecoded
        let licenseTypeDecoded = try containerValues.decodeIfPresent(LicenseType.self, forKey: .licenseType)
        licenseType = licenseTypeDecoded
        let roleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleName)
        roleName = roleNameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let numberOfRecentAmisToKeepDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numberOfRecentAmisToKeep)
        numberOfRecentAmisToKeep = numberOfRecentAmisToKeepDecoded
        let encryptedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .encrypted)
        encrypted = encryptedDecoded
        let kmsKeyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kmsKeyId)
        kmsKeyId = kmsKeyIdDecoded
    }
}
