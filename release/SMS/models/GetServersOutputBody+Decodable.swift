// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServersOutputBody: Equatable {
    public let lastModifiedOn: Date?
    public let serverCatalogStatus: ServerCatalogStatus?
    public let serverList: [Server]?
    public let nextToken: String?
}

extension GetServersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lastModifiedOn
        case nextToken
        case serverCatalogStatus
        case serverList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lastModifiedOnDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedOn)
        lastModifiedOn = lastModifiedOnDecoded
        let serverCatalogStatusDecoded = try containerValues.decodeIfPresent(ServerCatalogStatus.self, forKey: .serverCatalogStatus)
        serverCatalogStatus = serverCatalogStatusDecoded
        let serverListContainer = try containerValues.decodeIfPresent([Server].self, forKey: .serverList)
        var serverListDecoded0:[Server]? = nil
        if let serverListContainer = serverListContainer {
            serverListDecoded0 = [Server]()
            for structure0 in serverListContainer {
                serverListDecoded0?.append(structure0)
            }
        }
        serverList = serverListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
