// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReplicationRunsOutputBody: Equatable {
    public let replicationJob: ReplicationJob?
    public let replicationRunList: [ReplicationRun]?
    public let nextToken: String?
}

extension GetReplicationRunsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case replicationJob
        case replicationRunList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationJobDecoded = try containerValues.decodeIfPresent(ReplicationJob.self, forKey: .replicationJob)
        replicationJob = replicationJobDecoded
        let replicationRunListContainer = try containerValues.decodeIfPresent([ReplicationRun].self, forKey: .replicationRunList)
        var replicationRunListDecoded0:[ReplicationRun]? = nil
        if let replicationRunListContainer = replicationRunListContainer {
            replicationRunListDecoded0 = [ReplicationRun]()
            for structure0 in replicationRunListContainer {
                replicationRunListDecoded0?.append(structure0)
            }
        }
        replicationRunList = replicationRunListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
