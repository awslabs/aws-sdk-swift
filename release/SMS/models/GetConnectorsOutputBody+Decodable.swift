// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetConnectorsOutputBody: Equatable {
    public let connectorList: [Connector]?
    public let nextToken: String?
}

extension GetConnectorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectorList
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectorListContainer = try containerValues.decodeIfPresent([Connector].self, forKey: .connectorList)
        var connectorListDecoded0:[Connector]? = nil
        if let connectorListContainer = connectorListContainer {
            connectorListDecoded0 = [Connector]()
            for structure0 in connectorListContainer {
                connectorListDecoded0?.append(structure0)
            }
        }
        connectorList = connectorListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
