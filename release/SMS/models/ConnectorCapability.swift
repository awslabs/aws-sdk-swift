// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ConnectorCapability {
    case hypervmanager
    case scvmm
    case smsoptimized
    case snapshotbatching
    case vsphere
    case sdkUnknown(String)
}

extension ConnectorCapability : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ConnectorCapability] {
        return [
            .hypervmanager,
            .scvmm,
            .smsoptimized,
            .snapshotbatching,
            .vsphere,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .hypervmanager: return "HYPERV-MANAGER"
        case .scvmm: return "SCVMM"
        case .smsoptimized: return "SMS_OPTIMIZED"
        case .snapshotbatching: return "SNAPSHOT_BATCHING"
        case .vsphere: return "VSPHERE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ConnectorCapability(rawValue: rawValue) ?? ConnectorCapability.sdkUnknown(rawValue)
    }
}
