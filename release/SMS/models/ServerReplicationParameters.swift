// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The replication parameters for replicating a server.</p>
public struct ServerReplicationParameters: Equatable {
    /// <p>Indicates whether the replication job produces encrypted AMIs.</p>
    public let encrypted: Bool?
    /// <p>The frequency of creating replication jobs for the server.</p>
    public let frequency: Int?
    /// <p>The ID of the KMS key for replication jobs that produce encrypted AMIs.
    ///             This value can be any of the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>KMS key ID</p>
    ///             </li>
    ///             <li>
    ///                 <p>KMS key alias</p>
    ///             </li>
    ///             <li>
    ///                 <p>ARN referring to the KMS key ID</p>
    ///             </li>
    ///             <li>
    ///                 <p>ARN referring to the KMS key alias</p>
    ///             </li>
    ///          </ul>
    ///         <p>If encrypted is enabled but a KMS key ID is not specified, the
    ///             customer's default KMS key for Amazon EBS is used.</p>
    public let kmsKeyId: String?
    /// <p>The license type for creating a replication job for the server.</p>
    public let licenseType: LicenseType?
    /// <p>The number of recent AMIs to keep when creating a replication job for this server.</p>
    public let numberOfRecentAmisToKeep: Int?
    /// <p>Indicates whether to run the replication job one time.</p>
    public let runOnce: Bool?
    /// <p>The seed time for creating a replication job for the server.</p>
    public let seedTime: Date?

    public init (
        encrypted: Bool? = nil,
        frequency: Int? = nil,
        kmsKeyId: String? = nil,
        licenseType: LicenseType? = nil,
        numberOfRecentAmisToKeep: Int? = nil,
        runOnce: Bool? = nil,
        seedTime: Date? = nil
    )
    {
        self.encrypted = encrypted
        self.frequency = frequency
        self.kmsKeyId = kmsKeyId
        self.licenseType = licenseType
        self.numberOfRecentAmisToKeep = numberOfRecentAmisToKeep
        self.runOnce = runOnce
        self.seedTime = seedTime
    }
}
