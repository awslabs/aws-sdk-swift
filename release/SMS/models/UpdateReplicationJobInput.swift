// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UpdateReplicationJobInput: Equatable {
    /// <p>The description of the replication job.</p>
    public let description: String?
    /// <p>When true, the replication job produces encrypted AMIs. For more information,
    ///                 <code>KmsKeyId</code>.</p>
    public let encrypted: Bool?
    /// <p>The time between consecutive replication runs, in hours.</p>
    public let frequency: Int?
    /// <p>The ID of the KMS key for replication jobs that produce encrypted AMIs.
    ///             This value can be any of the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>KMS key ID</p>
    ///             </li>
    ///             <li>
    ///                 <p>KMS key alias</p>
    ///             </li>
    ///             <li>
    ///                 <p>ARN referring to the KMS key ID</p>
    ///             </li>
    ///             <li>
    ///                 <p>ARN referring to the KMS key alias</p>
    ///             </li>
    ///          </ul>
    ///         <p>If encrypted is enabled but a KMS key ID is not specified, the
    ///             customer's default KMS key for Amazon EBS is used.</p>
    public let kmsKeyId: String?
    /// <p>The license type to be used for the AMI created by a successful replication
    ///             run.</p>
    public let licenseType: LicenseType?
    /// <p>The start time of the next replication run.</p>
    public let nextReplicationRunStartTime: Date?
    /// <p>The maximum number of SMS-created AMIs to retain. The oldest is deleted after the
    ///             maximum number is reached and a new AMI is created.</p>
    public let numberOfRecentAmisToKeep: Int?
    /// <p>The ID of the replication job.</p>
    public let replicationJobId: String?
    /// <p>The name of the IAM role to be used by AWS SMS.</p>
    public let roleName: String?

    public init (
        description: String? = nil,
        encrypted: Bool? = nil,
        frequency: Int? = nil,
        kmsKeyId: String? = nil,
        licenseType: LicenseType? = nil,
        nextReplicationRunStartTime: Date? = nil,
        numberOfRecentAmisToKeep: Int? = nil,
        replicationJobId: String? = nil,
        roleName: String? = nil
    )
    {
        self.description = description
        self.encrypted = encrypted
        self.frequency = frequency
        self.kmsKeyId = kmsKeyId
        self.licenseType = licenseType
        self.nextReplicationRunStartTime = nextReplicationRunStartTime
        self.numberOfRecentAmisToKeep = numberOfRecentAmisToKeep
        self.replicationJobId = replicationJobId
        self.roleName = roleName
    }
}
