// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetReplicationJobsOutputBody: Equatable {
    public let replicationJobList: [ReplicationJob]?
    public let nextToken: String?
}

extension GetReplicationJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case replicationJobList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replicationJobListContainer = try containerValues.decodeIfPresent([ReplicationJob].self, forKey: .replicationJobList)
        var replicationJobListDecoded0:[ReplicationJob]? = nil
        if let replicationJobListContainer = replicationJobListContainer {
            replicationJobListDecoded0 = [ReplicationJob]()
            for structure0 in replicationJobListContainer {
                replicationJobListDecoded0?.append(structure0)
            }
        }
        replicationJobList = replicationJobListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
