// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ServerValidationConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case name
        case server
        case serverValidationStrategy
        case userDataValidationParameters
        case validationId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let server = server {
            try encodeContainer.encode(server, forKey: .server)
        }
        if let serverValidationStrategy = serverValidationStrategy {
            try encodeContainer.encode(serverValidationStrategy.rawValue, forKey: .serverValidationStrategy)
        }
        if let userDataValidationParameters = userDataValidationParameters {
            try encodeContainer.encode(userDataValidationParameters, forKey: .userDataValidationParameters)
        }
        if let validationId = validationId {
            try encodeContainer.encode(validationId, forKey: .validationId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let serverDecoded = try containerValues.decodeIfPresent(Server.self, forKey: .server)
        server = serverDecoded
        let validationIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .validationId)
        validationId = validationIdDecoded
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let serverValidationStrategyDecoded = try containerValues.decodeIfPresent(ServerValidationStrategy.self, forKey: .serverValidationStrategy)
        serverValidationStrategy = serverValidationStrategyDecoded
        let userDataValidationParametersDecoded = try containerValues.decodeIfPresent(UserDataValidationParameters.self, forKey: .userDataValidationParameters)
        userDataValidationParameters = userDataValidationParametersDecoded
    }
}
