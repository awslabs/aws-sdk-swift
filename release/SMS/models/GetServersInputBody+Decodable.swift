// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetServersInputBody: Equatable {
    public let nextToken: String?
    public let maxResults: Int?
    public let vmServerAddressList: [VmServerAddress]?
}

extension GetServersInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults
        case nextToken
        case vmServerAddressList
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let vmServerAddressListContainer = try containerValues.decodeIfPresent([VmServerAddress].self, forKey: .vmServerAddressList)
        var vmServerAddressListDecoded0:[VmServerAddress]? = nil
        if let vmServerAddressListContainer = vmServerAddressListContainer {
            vmServerAddressListDecoded0 = [VmServerAddress]()
            for structure0 in vmServerAddressListContainer {
                vmServerAddressListDecoded0?.append(structure0)
            }
        }
        vmServerAddressList = vmServerAddressListDecoded0
    }
}
