// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LaunchDetails: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case latestLaunchTime
        case stackId
        case stackName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let latestLaunchTime = latestLaunchTime {
            try encodeContainer.encode(latestLaunchTime.timeIntervalSince1970, forKey: .latestLaunchTime)
        }
        if let stackId = stackId {
            try encodeContainer.encode(stackId, forKey: .stackId)
        }
        if let stackName = stackName {
            try encodeContainer.encode(stackName, forKey: .stackName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let latestLaunchTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .latestLaunchTime)
        latestLaunchTime = latestLaunchTimeDecoded
        let stackNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackName)
        stackName = stackNameDecoded
        let stackIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stackId)
        stackId = stackIdDecoded
    }
}
