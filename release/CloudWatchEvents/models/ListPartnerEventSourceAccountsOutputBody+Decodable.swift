// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerEventSourceAccountsOutputBody: Equatable {
    public let partnerEventSourceAccounts: [PartnerEventSourceAccount]?
    public let nextToken: String?
}

extension ListPartnerEventSourceAccountsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case partnerEventSourceAccounts = "PartnerEventSourceAccounts"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partnerEventSourceAccountsContainer = try containerValues.decodeIfPresent([PartnerEventSourceAccount].self, forKey: .partnerEventSourceAccounts)
        var partnerEventSourceAccountsDecoded0:[PartnerEventSourceAccount]? = nil
        if let partnerEventSourceAccountsContainer = partnerEventSourceAccountsContainer {
            partnerEventSourceAccountsDecoded0 = [PartnerEventSourceAccount]()
            for structure0 in partnerEventSourceAccountsContainer {
                partnerEventSourceAccountsDecoded0?.append(structure0)
            }
        }
        partnerEventSourceAccounts = partnerEventSourceAccountsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
