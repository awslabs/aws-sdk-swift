// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A <code>Replay</code> object that contains details about a replay.</p>
public struct Replay: Equatable {
    /// <p>A time stamp for the time to start replaying events. Any event with a creation time prior
    ///       to the <code>EventEndTime</code> specified is replayed.</p>
    public let eventEndTime: Date?
    /// <p>A time stamp for the time that the last event was replayed.</p>
    public let eventLastReplayedTime: Date?
    /// <p>The ARN of the archive to replay event from.</p>
    public let eventSourceArn: String?
    /// <p>A time stamp for the time to start replaying events. This is determined by the time in the
    ///       event as described in <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html#eventbridge-Type-PutEventsRequestEntry-Time">Time</a>.</p>
    public let eventStartTime: Date?
    /// <p>A time stamp for the time that the replay completed.</p>
    public let replayEndTime: Date?
    /// <p>The name of the replay.</p>
    public let replayName: String?
    /// <p>A time stamp for the time that the replay started.</p>
    public let replayStartTime: Date?
    /// <p>The current state of the replay.</p>
    public let state: ReplayState?
    /// <p>A description of why the replay is in the current state.</p>
    public let stateReason: String?

    public init (
        eventEndTime: Date? = nil,
        eventLastReplayedTime: Date? = nil,
        eventSourceArn: String? = nil,
        eventStartTime: Date? = nil,
        replayEndTime: Date? = nil,
        replayName: String? = nil,
        replayStartTime: Date? = nil,
        state: ReplayState? = nil,
        stateReason: String? = nil
    )
    {
        self.eventEndTime = eventEndTime
        self.eventLastReplayedTime = eventLastReplayedTime
        self.eventSourceArn = eventSourceArn
        self.eventStartTime = eventStartTime
        self.replayEndTime = replayEndTime
        self.replayName = replayName
        self.replayStartTime = replayStartTime
        self.state = state
        self.stateReason = stateReason
    }
}
