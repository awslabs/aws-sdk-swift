// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateArchiveInputBody: Equatable {
    public let archiveName: String?
    public let eventSourceArn: String?
    public let description: String?
    public let eventPattern: String?
    public let retentionDays: Int?
}

extension CreateArchiveInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case archiveName = "ArchiveName"
        case description = "Description"
        case eventPattern = "EventPattern"
        case eventSourceArn = "EventSourceArn"
        case retentionDays = "RetentionDays"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archiveNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .archiveName)
        archiveName = archiveNameDecoded
        let eventSourceArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventSourceArn)
        eventSourceArn = eventSourceArnDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let eventPatternDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventPattern)
        eventPattern = eventPatternDecoded
        let retentionDaysDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .retentionDays)
        retentionDays = retentionDaysDecoded
    }
}
