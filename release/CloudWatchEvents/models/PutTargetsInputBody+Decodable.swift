// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutTargetsInputBody: Equatable {
    public let rule: String?
    public let eventBusName: String?
    public let targets: [Target]?
}

extension PutTargetsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eventBusName = "EventBusName"
        case rule = "Rule"
        case targets = "Targets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .rule)
        rule = ruleDecoded
        let eventBusNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventBusName)
        eventBusName = eventBusNameDecoded
        let targetsContainer = try containerValues.decodeIfPresent([Target].self, forKey: .targets)
        var targetsDecoded0:[Target]? = nil
        if let targetsContainer = targetsContainer {
            targetsDecoded0 = [Target]()
            for structure0 in targetsContainer {
                targetsDecoded0?.append(structure0)
            }
        }
        targets = targetsDecoded0
    }
}
