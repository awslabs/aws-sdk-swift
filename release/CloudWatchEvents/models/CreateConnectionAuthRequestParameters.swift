// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the authorization parameters for the connection.</p>
public struct CreateConnectionAuthRequestParameters: Equatable {
    /// <p>A <code>CreateConnectionApiKeyAuthRequestParameters</code> object that contains the API
    ///       key authorization parameters to use for the connection.</p>
    public let apiKeyAuthParameters: CreateConnectionApiKeyAuthRequestParameters?
    /// <p>A <code>CreateConnectionBasicAuthRequestParameters</code> object that contains the Basic
    ///       authorization parameters to use for the connection.</p>
    public let basicAuthParameters: CreateConnectionBasicAuthRequestParameters?
    /// <p>A <code>ConnectionHttpParameters</code> object that contains the API key authorization
    ///       parameters to use for the connection. Note that if you include additional parameters for
    ///       the target of a rule via <code>HttpParameters</code>, including query strings, the parameters
    ///       added for the connection take precedence.</p>
    public let invocationHttpParameters: ConnectionHttpParameters?
    /// <p>A <code>CreateConnectionOAuthRequestParameters</code> object that contains the OAuth
    ///       authorization parameters to use for the connection.</p>
    public let oAuthParameters: CreateConnectionOAuthRequestParameters?

    public init (
        apiKeyAuthParameters: CreateConnectionApiKeyAuthRequestParameters? = nil,
        basicAuthParameters: CreateConnectionBasicAuthRequestParameters? = nil,
        invocationHttpParameters: ConnectionHttpParameters? = nil,
        oAuthParameters: CreateConnectionOAuthRequestParameters? = nil
    )
    {
        self.apiKeyAuthParameters = apiKeyAuthParameters
        self.basicAuthParameters = basicAuthParameters
        self.invocationHttpParameters = invocationHttpParameters
        self.oAuthParameters = oAuthParameters
    }
}
