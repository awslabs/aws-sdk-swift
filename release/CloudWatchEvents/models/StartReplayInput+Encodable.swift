// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StartReplayInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case destination = "Destination"
        case eventEndTime = "EventEndTime"
        case eventSourceArn = "EventSourceArn"
        case eventStartTime = "EventStartTime"
        case replayName = "ReplayName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let eventEndTime = eventEndTime {
            try encodeContainer.encode(eventEndTime.timeIntervalSince1970, forKey: .eventEndTime)
        }
        if let eventSourceArn = eventSourceArn {
            try encodeContainer.encode(eventSourceArn, forKey: .eventSourceArn)
        }
        if let eventStartTime = eventStartTime {
            try encodeContainer.encode(eventStartTime.timeIntervalSince1970, forKey: .eventStartTime)
        }
        if let replayName = replayName {
            try encodeContainer.encode(replayName, forKey: .replayName)
        }
    }
}
