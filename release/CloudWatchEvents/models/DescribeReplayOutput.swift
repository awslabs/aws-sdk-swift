// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeReplayOutput: Equatable {
    /// <p>The description of the replay.</p>
    public let description: String?
    /// <p>A <code>ReplayDestination</code> object that contains details about the replay.</p>
    public let destination: ReplayDestination?
    /// <p>The time stamp for the last event that was replayed from the archive.</p>
    public let eventEndTime: Date?
    /// <p>The time that the event was last replayed.</p>
    public let eventLastReplayedTime: Date?
    /// <p>The ARN of the archive events were replayed from.</p>
    public let eventSourceArn: String?
    /// <p>The time stamp of the first event that was last replayed from the archive.</p>
    public let eventStartTime: Date?
    /// <p>The ARN of the replay.</p>
    public let replayArn: String?
    /// <p>A time stamp for the time that the replay stopped.</p>
    public let replayEndTime: Date?
    /// <p>The name of the replay.</p>
    public let replayName: String?
    /// <p>A time stamp for the time that the replay started.</p>
    public let replayStartTime: Date?
    /// <p>The current state of the replay.</p>
    public let state: ReplayState?
    /// <p>The reason that the replay is in the current state.</p>
    public let stateReason: String?

    public init (
        description: String? = nil,
        destination: ReplayDestination? = nil,
        eventEndTime: Date? = nil,
        eventLastReplayedTime: Date? = nil,
        eventSourceArn: String? = nil,
        eventStartTime: Date? = nil,
        replayArn: String? = nil,
        replayEndTime: Date? = nil,
        replayName: String? = nil,
        replayStartTime: Date? = nil,
        state: ReplayState? = nil,
        stateReason: String? = nil
    )
    {
        self.description = description
        self.destination = destination
        self.eventEndTime = eventEndTime
        self.eventLastReplayedTime = eventLastReplayedTime
        self.eventSourceArn = eventSourceArn
        self.eventStartTime = eventStartTime
        self.replayArn = replayArn
        self.replayEndTime = replayEndTime
        self.replayName = replayName
        self.replayStartTime = replayStartTime
        self.state = state
        self.stateReason = stateReason
    }
}
