// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateConnectionOutputBody: Equatable {
    public let connectionArn: String?
    public let connectionState: ConnectionState?
    public let creationTime: Date?
    public let lastModifiedTime: Date?
}

extension CreateConnectionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connectionArn = "ConnectionArn"
        case connectionState = "ConnectionState"
        case creationTime = "CreationTime"
        case lastModifiedTime = "LastModifiedTime"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .connectionArn)
        connectionArn = connectionArnDecoded
        let connectionStateDecoded = try containerValues.decodeIfPresent(ConnectionState.self, forKey: .connectionState)
        connectionState = connectionStateDecoded
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let lastModifiedTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastModifiedTime)
        lastModifiedTime = lastModifiedTimeDecoded
    }
}
