// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ConnectionAuthResponseParameters: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case apiKeyAuthParameters = "ApiKeyAuthParameters"
        case basicAuthParameters = "BasicAuthParameters"
        case invocationHttpParameters = "InvocationHttpParameters"
        case oAuthParameters = "OAuthParameters"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let apiKeyAuthParameters = apiKeyAuthParameters {
            try encodeContainer.encode(apiKeyAuthParameters, forKey: .apiKeyAuthParameters)
        }
        if let basicAuthParameters = basicAuthParameters {
            try encodeContainer.encode(basicAuthParameters, forKey: .basicAuthParameters)
        }
        if let invocationHttpParameters = invocationHttpParameters {
            try encodeContainer.encode(invocationHttpParameters, forKey: .invocationHttpParameters)
        }
        if let oAuthParameters = oAuthParameters {
            try encodeContainer.encode(oAuthParameters, forKey: .oAuthParameters)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let basicAuthParametersDecoded = try containerValues.decodeIfPresent(ConnectionBasicAuthResponseParameters.self, forKey: .basicAuthParameters)
        basicAuthParameters = basicAuthParametersDecoded
        let oAuthParametersDecoded = try containerValues.decodeIfPresent(ConnectionOAuthResponseParameters.self, forKey: .oAuthParameters)
        oAuthParameters = oAuthParametersDecoded
        let apiKeyAuthParametersDecoded = try containerValues.decodeIfPresent(ConnectionApiKeyAuthResponseParameters.self, forKey: .apiKeyAuthParameters)
        apiKeyAuthParameters = apiKeyAuthParametersDecoded
        let invocationHttpParametersDecoded = try containerValues.decodeIfPresent(ConnectionHttpParameters.self, forKey: .invocationHttpParameters)
        invocationHttpParameters = invocationHttpParametersDecoded
    }
}
