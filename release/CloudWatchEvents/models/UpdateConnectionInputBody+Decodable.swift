// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateConnectionInputBody: Equatable {
    public let name: String?
    public let description: String?
    public let authorizationType: ConnectionAuthorizationType?
    public let authParameters: UpdateConnectionAuthRequestParameters?
}

extension UpdateConnectionInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authParameters = "AuthParameters"
        case authorizationType = "AuthorizationType"
        case description = "Description"
        case name = "Name"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .name)
        name = nameDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let authorizationTypeDecoded = try containerValues.decodeIfPresent(ConnectionAuthorizationType.self, forKey: .authorizationType)
        authorizationType = authorizationTypeDecoded
        let authParametersDecoded = try containerValues.decodeIfPresent(UpdateConnectionAuthRequestParameters.self, forKey: .authParameters)
        authParameters = authParametersDecoded
    }
}
