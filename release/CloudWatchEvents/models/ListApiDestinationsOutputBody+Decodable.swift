// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApiDestinationsOutputBody: Equatable {
    public let apiDestinations: [ApiDestination]?
    public let nextToken: String?
}

extension ListApiDestinationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case apiDestinations = "ApiDestinations"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let apiDestinationsContainer = try containerValues.decodeIfPresent([ApiDestination].self, forKey: .apiDestinations)
        var apiDestinationsDecoded0:[ApiDestination]? = nil
        if let apiDestinationsContainer = apiDestinationsContainer {
            apiDestinationsDecoded0 = [ApiDestination]()
            for structure0 in apiDestinationsContainer {
                apiDestinationsDecoded0?.append(structure0)
            }
        }
        apiDestinations = apiDestinationsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
