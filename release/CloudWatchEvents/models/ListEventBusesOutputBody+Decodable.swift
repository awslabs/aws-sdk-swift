// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEventBusesOutputBody: Equatable {
    public let eventBuses: [EventBus]?
    public let nextToken: String?
}

extension ListEventBusesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eventBuses = "EventBuses"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventBusesContainer = try containerValues.decodeIfPresent([EventBus].self, forKey: .eventBuses)
        var eventBusesDecoded0:[EventBus]? = nil
        if let eventBusesContainer = eventBusesContainer {
            eventBusesDecoded0 = [EventBus]()
            for structure0 in eventBusesContainer {
                eventBusesDecoded0?.append(structure0)
            }
        }
        eventBuses = eventBusesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
