// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeReplayOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: DescribeReplayOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.description = output.description
            self.destination = output.destination
            self.eventEndTime = output.eventEndTime
            self.eventLastReplayedTime = output.eventLastReplayedTime
            self.eventSourceArn = output.eventSourceArn
            self.eventStartTime = output.eventStartTime
            self.replayArn = output.replayArn
            self.replayEndTime = output.replayEndTime
            self.replayName = output.replayName
            self.replayStartTime = output.replayStartTime
            self.state = output.state
            self.stateReason = output.stateReason
        } else {
            self.description = nil
            self.destination = nil
            self.eventEndTime = nil
            self.eventLastReplayedTime = nil
            self.eventSourceArn = nil
            self.eventStartTime = nil
            self.replayArn = nil
            self.replayEndTime = nil
            self.replayName = nil
            self.replayStartTime = nil
            self.state = nil
            self.stateReason = nil
        }
    }
}
