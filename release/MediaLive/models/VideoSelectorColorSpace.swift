// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Video Selector Color Space
public enum VideoSelectorColorSpace {
    case follow
    case hdr10
    case hlg2020
    case rec601
    case rec709
    case sdkUnknown(String)
}

extension VideoSelectorColorSpace : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [VideoSelectorColorSpace] {
        return [
            .follow,
            .hdr10,
            .hlg2020,
            .rec601,
            .rec709,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .follow: return "FOLLOW"
        case .hdr10: return "HDR10"
        case .hlg2020: return "HLG_2020"
        case .rec601: return "REC_601"
        case .rec709: return "REC_709"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = VideoSelectorColorSpace(rawValue: rawValue) ?? VideoSelectorColorSpace.sdkUnknown(rawValue)
    }
}
