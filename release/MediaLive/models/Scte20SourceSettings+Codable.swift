// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Scte20SourceSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case convert608To708 = "convert608To708"
        case source608ChannelNumber = "source608ChannelNumber"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let convert608To708 = convert608To708 {
            try encodeContainer.encode(convert608To708.rawValue, forKey: .convert608To708)
        }
        if source608ChannelNumber != 0 {
            try encodeContainer.encode(source608ChannelNumber, forKey: .source608ChannelNumber)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let convert608To708Decoded = try containerValues.decodeIfPresent(Scte20Convert608To708.self, forKey: .convert608To708)
        convert608To708 = convert608To708Decoded
        let source608ChannelNumberDecoded = try containerValues.decode(Int.self, forKey: .source608ChannelNumber)
        source608ChannelNumber = source608ChannelNumberDecoded
    }
}
