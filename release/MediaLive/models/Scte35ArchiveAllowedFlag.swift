// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Corresponds to the archive_allowed parameter. A value of ARCHIVE_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
public enum Scte35ArchiveAllowedFlag {
    case archiveAllowed
    case archiveNotAllowed
    case sdkUnknown(String)
}

extension Scte35ArchiveAllowedFlag : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Scte35ArchiveAllowedFlag] {
        return [
            .archiveAllowed,
            .archiveNotAllowed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .archiveAllowed: return "ARCHIVE_ALLOWED"
        case .archiveNotAllowed: return "ARCHIVE_NOT_ALLOWED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Scte35ArchiveAllowedFlag(rawValue: rawValue) ?? Scte35ArchiveAllowedFlag.sdkUnknown(rawValue)
    }
}
