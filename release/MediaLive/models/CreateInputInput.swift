// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The name of the input
public struct CreateInputInput: Equatable {
    /// Destination settings for PUSH type inputs.
    public let destinations: [InputDestinationRequest]?
    /// Settings for the devices.
    public let inputDevices: [InputDeviceSettings]?
    /// A list of security groups referenced by IDs to attach to the input.
    public let inputSecurityGroups: [String]?
    /// A list of the MediaConnect Flows that you want to use in this input. You can specify as few as one
    /// Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a
    /// separate Availability Zone as this ensures your EML input is redundant to AZ issues.
    public let mediaConnectFlows: [MediaConnectFlowRequest]?
    /// Name of the input.
    public let name: String?
    /// Unique identifier of the request to ensure the request is handled
    /// exactly once in case of retries.
    public var requestId: String?
    /// The Amazon Resource Name (ARN) of the role this input assumes during and after creation.
    public let roleArn: String?
    /// The source URLs for a PULL-type input. Every PULL type input needs
    /// exactly two source URLs for redundancy.
    /// Only specify sources for PULL type Inputs. Leave Destinations empty.
    public let sources: [InputSourceRequest]?
    /// A collection of key-value pairs.
    public let tags: [String:String]?
    /// Placeholder documentation for InputType
    public let type: InputType?
    /// Settings for a private VPC Input.
    /// When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses.
    /// This property requires setting the roleArn property on Input creation.
    /// Not compatible with the inputSecurityGroups property.
    public let vpc: InputVpcRequest?

    public init (
        destinations: [InputDestinationRequest]? = nil,
        inputDevices: [InputDeviceSettings]? = nil,
        inputSecurityGroups: [String]? = nil,
        mediaConnectFlows: [MediaConnectFlowRequest]? = nil,
        name: String? = nil,
        requestId: String? = nil,
        roleArn: String? = nil,
        sources: [InputSourceRequest]? = nil,
        tags: [String:String]? = nil,
        type: InputType? = nil,
        vpc: InputVpcRequest? = nil
    )
    {
        self.destinations = destinations
        self.inputDevices = inputDevices
        self.inputSecurityGroups = inputSecurityGroups
        self.mediaConnectFlows = mediaConnectFlows
        self.name = name
        self.requestId = requestId
        self.roleArn = roleArn
        self.sources = sources
        self.tags = tags
        self.type = type
        self.vpc = vpc
    }
}
