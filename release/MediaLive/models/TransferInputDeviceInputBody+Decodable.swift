// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TransferInputDeviceInputBody: Equatable {
    public let targetCustomerId: String?
    public let targetRegion: String?
    public let transferMessage: String?
}

extension TransferInputDeviceInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case targetCustomerId = "targetCustomerId"
        case targetRegion = "targetRegion"
        case transferMessage = "transferMessage"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let targetCustomerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetCustomerId)
        targetCustomerId = targetCustomerIdDecoded
        let targetRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetRegion)
        targetRegion = targetRegionDecoded
        let transferMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .transferMessage)
        transferMessage = transferMessageDecoded
    }
}
