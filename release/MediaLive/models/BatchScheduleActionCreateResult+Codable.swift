// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchScheduleActionCreateResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case scheduleActions = "scheduleActions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let scheduleActions = scheduleActions {
            var scheduleActionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scheduleActions)
            for __listofscheduleaction0 in scheduleActions {
                try scheduleActionsContainer.encode(__listofscheduleaction0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scheduleActionsContainer = try containerValues.decodeIfPresent([ScheduleAction].self, forKey: .scheduleActions)
        var scheduleActionsDecoded0:[ScheduleAction]? = nil
        if let scheduleActionsContainer = scheduleActionsContainer {
            scheduleActionsDecoded0 = [ScheduleAction]()
            for structure0 in scheduleActionsContainer {
                scheduleActionsDecoded0?.append(structure0)
            }
        }
        scheduleActions = scheduleActionsDecoded0
    }
}
