// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Corresponds to SCTE-35 segmentation_event_cancel_indicator. SEGMENTATION_EVENT_NOT_CANCELED corresponds to 0 in the SCTE-35 specification and indicates that this is an insertion request. SEGMENTATION_EVENT_CANCELED corresponds to 1 in the SCTE-35 specification and indicates that this is a cancelation request, in which case complete this field and the existing event ID to cancel.
public enum Scte35SegmentationCancelIndicator {
    case segmentationEventCanceled
    case segmentationEventNotCanceled
    case sdkUnknown(String)
}

extension Scte35SegmentationCancelIndicator : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Scte35SegmentationCancelIndicator] {
        return [
            .segmentationEventCanceled,
            .segmentationEventNotCanceled,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .segmentationEventCanceled: return "SEGMENTATION_EVENT_CANCELED"
        case .segmentationEventNotCanceled: return "SEGMENTATION_EVENT_NOT_CANCELED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Scte35SegmentationCancelIndicator(rawValue: rawValue) ?? Scte35SegmentationCancelIndicator.sdkUnknown(rawValue)
    }
}
