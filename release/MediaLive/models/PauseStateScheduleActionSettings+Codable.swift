// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PauseStateScheduleActionSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pipelines = "pipelines"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let pipelines = pipelines {
            var pipelinesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .pipelines)
            for __listofpipelinepausestatesettings0 in pipelines {
                try pipelinesContainer.encode(__listofpipelinepausestatesettings0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pipelinesContainer = try containerValues.decodeIfPresent([PipelinePauseStateSettings].self, forKey: .pipelines)
        var pipelinesDecoded0:[PipelinePauseStateSettings]? = nil
        if let pipelinesContainer = pipelinesContainer {
            pipelinesDecoded0 = [PipelinePauseStateSettings]()
            for structure0 in pipelinesContainer {
                pipelinesDecoded0?.append(structure0)
            }
        }
        pipelines = pipelinesDecoded0
    }
}
