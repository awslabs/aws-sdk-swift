// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// H265 Level
public enum H265Level {
    case h265Level1
    case h265Level2
    case h265Level21
    case h265Level3
    case h265Level31
    case h265Level4
    case h265Level41
    case h265Level5
    case h265Level51
    case h265Level52
    case h265Level6
    case h265Level61
    case h265Level62
    case h265LevelAuto
    case sdkUnknown(String)
}

extension H265Level : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H265Level] {
        return [
            .h265Level1,
            .h265Level2,
            .h265Level21,
            .h265Level3,
            .h265Level31,
            .h265Level4,
            .h265Level41,
            .h265Level5,
            .h265Level51,
            .h265Level52,
            .h265Level6,
            .h265Level61,
            .h265Level62,
            .h265LevelAuto,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .h265Level1: return "H265_LEVEL_1"
        case .h265Level2: return "H265_LEVEL_2"
        case .h265Level21: return "H265_LEVEL_2_1"
        case .h265Level3: return "H265_LEVEL_3"
        case .h265Level31: return "H265_LEVEL_3_1"
        case .h265Level4: return "H265_LEVEL_4"
        case .h265Level41: return "H265_LEVEL_4_1"
        case .h265Level5: return "H265_LEVEL_5"
        case .h265Level51: return "H265_LEVEL_5_1"
        case .h265Level52: return "H265_LEVEL_5_2"
        case .h265Level6: return "H265_LEVEL_6"
        case .h265Level61: return "H265_LEVEL_6_1"
        case .h265Level62: return "H265_LEVEL_6_2"
        case .h265LevelAuto: return "H265_LEVEL_AUTO"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H265Level(rawValue: rawValue) ?? H265Level.sdkUnknown(rawValue)
    }
}
