// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMultiplexesOutputBody: Equatable {
    public let multiplexes: [MultiplexSummary]?
    public let nextToken: String?
}

extension ListMultiplexesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case multiplexes = "multiplexes"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiplexesContainer = try containerValues.decodeIfPresent([MultiplexSummary].self, forKey: .multiplexes)
        var multiplexesDecoded0:[MultiplexSummary]? = nil
        if let multiplexesContainer = multiplexesContainer {
            multiplexesDecoded0 = [MultiplexSummary]()
            for structure0 in multiplexesContainer {
                multiplexesDecoded0?.append(structure0)
            }
        }
        multiplexes = multiplexesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
