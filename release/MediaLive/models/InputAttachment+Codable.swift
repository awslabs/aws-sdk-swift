// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputAttachment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case automaticInputFailoverSettings = "automaticInputFailoverSettings"
        case inputAttachmentName = "inputAttachmentName"
        case inputId = "inputId"
        case inputSettings = "inputSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let automaticInputFailoverSettings = automaticInputFailoverSettings {
            try encodeContainer.encode(automaticInputFailoverSettings, forKey: .automaticInputFailoverSettings)
        }
        if let inputAttachmentName = inputAttachmentName {
            try encodeContainer.encode(inputAttachmentName, forKey: .inputAttachmentName)
        }
        if let inputId = inputId {
            try encodeContainer.encode(inputId, forKey: .inputId)
        }
        if let inputSettings = inputSettings {
            try encodeContainer.encode(inputSettings, forKey: .inputSettings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let automaticInputFailoverSettingsDecoded = try containerValues.decodeIfPresent(AutomaticInputFailoverSettings.self, forKey: .automaticInputFailoverSettings)
        automaticInputFailoverSettings = automaticInputFailoverSettingsDecoded
        let inputAttachmentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .inputAttachmentName)
        inputAttachmentName = inputAttachmentNameDecoded
        let inputIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .inputId)
        inputId = inputIdDecoded
        let inputSettingsDecoded = try containerValues.decodeIfPresent(InputSettings.self, forKey: .inputSettings)
        inputSettings = inputSettingsDecoded
    }
}
