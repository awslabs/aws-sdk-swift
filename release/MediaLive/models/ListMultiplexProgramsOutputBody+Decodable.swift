// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMultiplexProgramsOutputBody: Equatable {
    public let multiplexPrograms: [MultiplexProgramSummary]?
    public let nextToken: String?
}

extension ListMultiplexProgramsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case multiplexPrograms = "multiplexPrograms"
        case nextToken = "nextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiplexProgramsContainer = try containerValues.decodeIfPresent([MultiplexProgramSummary].self, forKey: .multiplexPrograms)
        var multiplexProgramsDecoded0:[MultiplexProgramSummary]? = nil
        if let multiplexProgramsContainer = multiplexProgramsContainer {
            multiplexProgramsDecoded0 = [MultiplexProgramSummary]()
            for structure0 in multiplexProgramsContainer {
                multiplexProgramsDecoded0?.append(structure0)
            }
        }
        multiplexPrograms = multiplexProgramsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
