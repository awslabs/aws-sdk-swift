// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Mp2 Coding Mode
public enum Mp2CodingMode {
    case codingMode10
    case codingMode20
    case sdkUnknown(String)
}

extension Mp2CodingMode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Mp2CodingMode] {
        return [
            .codingMode10,
            .codingMode20,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .codingMode10: return "CODING_MODE_1_0"
        case .codingMode20: return "CODING_MODE_2_0"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Mp2CodingMode(rawValue: rawValue) ?? Mp2CodingMode.sdkUnknown(rawValue)
    }
}
