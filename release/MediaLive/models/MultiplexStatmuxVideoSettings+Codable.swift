// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MultiplexStatmuxVideoSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maximumBitrate = "maximumBitrate"
        case minimumBitrate = "minimumBitrate"
        case priority = "priority"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if maximumBitrate != 0 {
            try encodeContainer.encode(maximumBitrate, forKey: .maximumBitrate)
        }
        if minimumBitrate != 0 {
            try encodeContainer.encode(minimumBitrate, forKey: .minimumBitrate)
        }
        if priority != 0 {
            try encodeContainer.encode(priority, forKey: .priority)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let maximumBitrateDecoded = try containerValues.decode(Int.self, forKey: .maximumBitrate)
        maximumBitrate = maximumBitrateDecoded
        let minimumBitrateDecoded = try containerValues.decode(Int.self, forKey: .minimumBitrate)
        minimumBitrate = minimumBitrateDecoded
        let priorityDecoded = try containerValues.decode(Int.self, forKey: .priority)
        priority = priorityDecoded
    }
}
