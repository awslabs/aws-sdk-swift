// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOfferingsOutputBody: Equatable {
    public let nextToken: String?
    public let offerings: [Offering]?
}

extension ListOfferingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case offerings = "offerings"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let offeringsContainer = try containerValues.decodeIfPresent([Offering].self, forKey: .offerings)
        var offeringsDecoded0:[Offering]? = nil
        if let offeringsContainer = offeringsContainer {
            offeringsDecoded0 = [Offering]()
            for structure0 in offeringsContainer {
                offeringsDecoded0?.append(structure0)
            }
        }
        offerings = offeringsDecoded0
    }
}
