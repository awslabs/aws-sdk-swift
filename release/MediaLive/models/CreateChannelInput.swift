// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// A request to create a channel
public struct CreateChannelInput: Equatable {
    /// Specification of CDI inputs for this channel
    public let cdiInputSpecification: CdiInputSpecification?
    /// The class for this channel. STANDARD for a channel with two pipelines or SINGLE_PIPELINE for a channel with one pipeline.
    public let channelClass: ChannelClass?
    /// Placeholder documentation for __listOfOutputDestination
    public let destinations: [OutputDestination]?
    /// Encoder Settings
    public let encoderSettings: EncoderSettings?
    /// List of input attachments for channel.
    public let inputAttachments: [InputAttachment]?
    /// Specification of network and file inputs for this channel
    public let inputSpecification: InputSpecification?
    /// The log level to write to CloudWatch Logs.
    public let logLevel: LogLevel?
    /// Name of channel.
    public let name: String?
    /// Unique request ID to be specified. This is needed to prevent retries from
    /// creating multiple resources.
    public var requestId: String?
    /// Deprecated field that's only usable by whitelisted customers.
    @available(*, deprecated)
    public let reserved: String?
    /// An optional Amazon Resource Name (ARN) of the role to assume when running the Channel.
    public let roleArn: String?
    /// A collection of key-value pairs.
    public let tags: [String:String]?
    /// Settings for VPC output
    public let vpc: VpcOutputSettings?

    public init (
        cdiInputSpecification: CdiInputSpecification? = nil,
        channelClass: ChannelClass? = nil,
        destinations: [OutputDestination]? = nil,
        encoderSettings: EncoderSettings? = nil,
        inputAttachments: [InputAttachment]? = nil,
        inputSpecification: InputSpecification? = nil,
        logLevel: LogLevel? = nil,
        name: String? = nil,
        requestId: String? = nil,
        reserved: String? = nil,
        roleArn: String? = nil,
        tags: [String:String]? = nil,
        vpc: VpcOutputSettings? = nil
    )
    {
        self.cdiInputSpecification = cdiInputSpecification
        self.channelClass = channelClass
        self.destinations = destinations
        self.encoderSettings = encoderSettings
        self.inputAttachments = inputAttachments
        self.inputSpecification = inputSpecification
        self.logLevel = logLevel
        self.name = name
        self.requestId = requestId
        self.reserved = reserved
        self.roleArn = roleArn
        self.tags = tags
        self.vpc = vpc
    }
}
