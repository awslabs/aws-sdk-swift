// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ArchiveGroupSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case archiveCdnSettings = "archiveCdnSettings"
        case destination = "destination"
        case rolloverInterval = "rolloverInterval"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let archiveCdnSettings = archiveCdnSettings {
            try encodeContainer.encode(archiveCdnSettings, forKey: .archiveCdnSettings)
        }
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if rolloverInterval != 0 {
            try encodeContainer.encode(rolloverInterval, forKey: .rolloverInterval)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archiveCdnSettingsDecoded = try containerValues.decodeIfPresent(ArchiveCdnSettings.self, forKey: .archiveCdnSettings)
        archiveCdnSettings = archiveCdnSettingsDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(OutputLocationRef.self, forKey: .destination)
        destination = destinationDecoded
        let rolloverIntervalDecoded = try containerValues.decode(Int.self, forKey: .rolloverInterval)
        rolloverInterval = rolloverIntervalDecoded
    }
}
