// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Placeholder documentation for ListOfferingsRequest
public struct ListOfferingsInput: Equatable {
    /// Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'
    public let channelClass: String?
    /// Filter to offerings that match the configuration of an existing channel, e.g. '2345678' (a channel ID)
    public let channelConfiguration: String?
    /// Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', or 'LINK'
    public let codec: String?
    /// Filter by offering duration, e.g. '12'
    public let duration: String?
    /// Placeholder documentation for MaxResults
    public let maxResults: Int
    /// Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'
    public let maximumBitrate: String?
    /// Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'
    public let maximumFramerate: String?
    /// Placeholder documentation for __string
    public let nextToken: String?
    /// Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'
    public let resolution: String?
    /// Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'
    public let resourceType: String?
    /// Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'
    public let specialFeature: String?
    /// Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'
    public let videoQuality: String?

    public init (
        channelClass: String? = nil,
        channelConfiguration: String? = nil,
        codec: String? = nil,
        duration: String? = nil,
        maxResults: Int = 0,
        maximumBitrate: String? = nil,
        maximumFramerate: String? = nil,
        nextToken: String? = nil,
        resolution: String? = nil,
        resourceType: String? = nil,
        specialFeature: String? = nil,
        videoQuality: String? = nil
    )
    {
        self.channelClass = channelClass
        self.channelConfiguration = channelConfiguration
        self.codec = codec
        self.duration = duration
        self.maxResults = maxResults
        self.maximumBitrate = maximumBitrate
        self.maximumFramerate = maximumFramerate
        self.nextToken = nextToken
        self.resolution = resolution
        self.resourceType = resourceType
        self.specialFeature = specialFeature
        self.videoQuality = videoQuality
    }
}
