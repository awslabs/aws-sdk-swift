// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FrameCaptureSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case captureInterval = "captureInterval"
        case captureIntervalUnits = "captureIntervalUnits"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if captureInterval != 0 {
            try encodeContainer.encode(captureInterval, forKey: .captureInterval)
        }
        if let captureIntervalUnits = captureIntervalUnits {
            try encodeContainer.encode(captureIntervalUnits.rawValue, forKey: .captureIntervalUnits)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let captureIntervalDecoded = try containerValues.decode(Int.self, forKey: .captureInterval)
        captureInterval = captureIntervalDecoded
        let captureIntervalUnitsDecoded = try containerValues.decodeIfPresent(FrameCaptureIntervalUnit.self, forKey: .captureIntervalUnits)
        captureIntervalUnits = captureIntervalUnitsDecoded
    }
}
