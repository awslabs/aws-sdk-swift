// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Maximum input bitrate in megabits per second. Bitrates up to 50 Mbps are supported currently.
public enum InputMaximumBitrate {
    case max10Mbps
    case max20Mbps
    case max50Mbps
    case sdkUnknown(String)
}

extension InputMaximumBitrate : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [InputMaximumBitrate] {
        return [
            .max10Mbps,
            .max20Mbps,
            .max50Mbps,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .max10Mbps: return "MAX_10_MBPS"
        case .max20Mbps: return "MAX_20_MBPS"
        case .max50Mbps: return "MAX_50_MBPS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = InputMaximumBitrate(rawValue: rawValue) ?? InputMaximumBitrate.sdkUnknown(rawValue)
    }
}
