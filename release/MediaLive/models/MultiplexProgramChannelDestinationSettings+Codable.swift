// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MultiplexProgramChannelDestinationSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case multiplexId = "multiplexId"
        case programName = "programName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let multiplexId = multiplexId {
            try encodeContainer.encode(multiplexId, forKey: .multiplexId)
        }
        if let programName = programName {
            try encodeContainer.encode(programName, forKey: .programName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let multiplexIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .multiplexId)
        multiplexId = multiplexIdDecoded
        let programNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .programName)
        programName = programNameDecoded
    }
}
