// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// The source to activate (use) from the input device.
public enum InputDeviceConfiguredInput {
    case auto
    case hdmi
    case sdi
    case sdkUnknown(String)
}

extension InputDeviceConfiguredInput : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [InputDeviceConfiguredInput] {
        return [
            .auto,
            .hdmi,
            .sdi,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .auto: return "AUTO"
        case .hdmi: return "HDMI"
        case .sdi: return "SDI"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = InputDeviceConfiguredInput(rawValue: rawValue) ?? InputDeviceConfiguredInput.sdkUnknown(rawValue)
    }
}
