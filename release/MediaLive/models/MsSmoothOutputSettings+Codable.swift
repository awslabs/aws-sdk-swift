// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MsSmoothOutputSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case h265PackagingType = "h265PackagingType"
        case nameModifier = "nameModifier"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let h265PackagingType = h265PackagingType {
            try encodeContainer.encode(h265PackagingType.rawValue, forKey: .h265PackagingType)
        }
        if let nameModifier = nameModifier {
            try encodeContainer.encode(nameModifier, forKey: .nameModifier)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let h265PackagingTypeDecoded = try containerValues.decodeIfPresent(MsSmoothH265PackagingType.self, forKey: .h265PackagingType)
        h265PackagingType = h265PackagingTypeDecoded
        let nameModifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nameModifier)
        nameModifier = nameModifierDecoded
    }
}
