// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReservationsOutputBody: Equatable {
    public let nextToken: String?
    public let reservations: [Reservation]?
}

extension ListReservationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case reservations = "reservations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reservationsContainer = try containerValues.decodeIfPresent([Reservation].self, forKey: .reservations)
        var reservationsDecoded0:[Reservation]? = nil
        if let reservationsContainer = reservationsContainer {
            reservationsDecoded0 = [Reservation]()
            for structure0 in reservationsContainer {
                reservationsDecoded0?.append(structure0)
            }
        }
        reservations = reservationsDecoded0
    }
}
