// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FrameCaptureGroupSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destination = "destination"
        case frameCaptureCdnSettings = "frameCaptureCdnSettings"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let destination = destination {
            try encodeContainer.encode(destination, forKey: .destination)
        }
        if let frameCaptureCdnSettings = frameCaptureCdnSettings {
            try encodeContainer.encode(frameCaptureCdnSettings, forKey: .frameCaptureCdnSettings)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let destinationDecoded = try containerValues.decodeIfPresent(OutputLocationRef.self, forKey: .destination)
        destination = destinationDecoded
        let frameCaptureCdnSettingsDecoded = try containerValues.decodeIfPresent(FrameCaptureCdnSettings.self, forKey: .frameCaptureCdnSettings)
        frameCaptureCdnSettings = frameCaptureCdnSettingsDecoded
    }
}
