// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// M2ts Segmentation Markers
public enum M2tsSegmentationMarkers {
    case ebp
    case ebpLegacy
    case `none`
    case psiSegstart
    case raiAdapt
    case raiSegstart
    case sdkUnknown(String)
}

extension M2tsSegmentationMarkers : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [M2tsSegmentationMarkers] {
        return [
            .ebp,
            .ebpLegacy,
            .none,
            .psiSegstart,
            .raiAdapt,
            .raiSegstart,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .ebp: return "EBP"
        case .ebpLegacy: return "EBP_LEGACY"
        case .none: return "NONE"
        case .psiSegstart: return "PSI_SEGSTART"
        case .raiAdapt: return "RAI_ADAPT"
        case .raiSegstart: return "RAI_SEGSTART"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = M2tsSegmentationMarkers(rawValue: rawValue) ?? M2tsSegmentationMarkers.sdkUnknown(rawValue)
    }
}
