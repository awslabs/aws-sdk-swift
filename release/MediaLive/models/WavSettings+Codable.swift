// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WavSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bitDepth = "bitDepth"
        case codingMode = "codingMode"
        case sampleRate = "sampleRate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if bitDepth != 0.0 {
            try encodeContainer.encode(bitDepth, forKey: .bitDepth)
        }
        if let codingMode = codingMode {
            try encodeContainer.encode(codingMode.rawValue, forKey: .codingMode)
        }
        if sampleRate != 0.0 {
            try encodeContainer.encode(sampleRate, forKey: .sampleRate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bitDepthDecoded = try containerValues.decode(Double.self, forKey: .bitDepth)
        bitDepth = bitDepthDecoded
        let codingModeDecoded = try containerValues.decodeIfPresent(WavCodingMode.self, forKey: .codingMode)
        codingMode = codingModeDecoded
        let sampleRateDecoded = try containerValues.decode(Double.self, forKey: .sampleRate)
        sampleRate = sampleRateDecoded
    }
}
