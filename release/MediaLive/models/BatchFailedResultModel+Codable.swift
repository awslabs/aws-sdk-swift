// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchFailedResultModel: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn = "arn"
        case code = "code"
        case id = "id"
        case message = "message"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let code = code {
            try encodeContainer.encode(code, forKey: .code)
        }
        if let id = id {
            try encodeContainer.encode(id, forKey: .id)
        }
        if let message = message {
            try encodeContainer.encode(message, forKey: .message)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let codeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .code)
        code = codeDecoded
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
    }
}
