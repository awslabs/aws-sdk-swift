// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Ac3 Bitstream Mode
public enum Ac3BitstreamMode {
    case commentary
    case completeMain
    case dialogue
    case emergency
    case hearingImpaired
    case musicAndEffects
    case visuallyImpaired
    case voiceOver
    case sdkUnknown(String)
}

extension Ac3BitstreamMode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Ac3BitstreamMode] {
        return [
            .commentary,
            .completeMain,
            .dialogue,
            .emergency,
            .hearingImpaired,
            .musicAndEffects,
            .visuallyImpaired,
            .voiceOver,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .commentary: return "COMMENTARY"
        case .completeMain: return "COMPLETE_MAIN"
        case .dialogue: return "DIALOGUE"
        case .emergency: return "EMERGENCY"
        case .hearingImpaired: return "HEARING_IMPAIRED"
        case .musicAndEffects: return "MUSIC_AND_EFFECTS"
        case .visuallyImpaired: return "VISUALLY_IMPAIRED"
        case .voiceOver: return "VOICE_OVER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Ac3BitstreamMode(rawValue: rawValue) ?? Ac3BitstreamMode.sdkUnknown(rawValue)
    }
}
