// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnprocessableEntityExceptionBody: Equatable {
    public let message: String?
    public let validationErrors: [ValidationError]?
}

extension UnprocessableEntityExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case message = "message"
        case validationErrors = "validationErrors"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let validationErrorsContainer = try containerValues.decodeIfPresent([ValidationError].self, forKey: .validationErrors)
        var validationErrorsDecoded0:[ValidationError]? = nil
        if let validationErrorsContainer = validationErrorsContainer {
            validationErrorsDecoded0 = [ValidationError]()
            for structure0 in validationErrorsContainer {
                validationErrorsDecoded0?.append(structure0)
            }
        }
        validationErrors = validationErrorsDecoded0
    }
}
