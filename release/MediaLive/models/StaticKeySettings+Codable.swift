// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StaticKeySettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case keyProviderServer = "keyProviderServer"
        case staticKeyValue = "staticKeyValue"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let keyProviderServer = keyProviderServer {
            try encodeContainer.encode(keyProviderServer, forKey: .keyProviderServer)
        }
        if let staticKeyValue = staticKeyValue {
            try encodeContainer.encode(staticKeyValue, forKey: .staticKeyValue)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyProviderServerDecoded = try containerValues.decodeIfPresent(InputLocation.self, forKey: .keyProviderServer)
        keyProviderServer = keyProviderServerDecoded
        let staticKeyValueDecoded = try containerValues.decodeIfPresent(String.self, forKey: .staticKeyValue)
        staticKeyValue = staticKeyValueDecoded
    }
}
