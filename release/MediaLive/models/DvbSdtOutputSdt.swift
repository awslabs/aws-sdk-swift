// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Dvb Sdt Output Sdt
public enum DvbSdtOutputSdt {
    case sdtFollow
    case sdtFollowIfPresent
    case sdtManual
    case sdtNone
    case sdkUnknown(String)
}

extension DvbSdtOutputSdt : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DvbSdtOutputSdt] {
        return [
            .sdtFollow,
            .sdtFollowIfPresent,
            .sdtManual,
            .sdtNone,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .sdtFollow: return "SDT_FOLLOW"
        case .sdtFollowIfPresent: return "SDT_FOLLOW_IF_PRESENT"
        case .sdtManual: return "SDT_MANUAL"
        case .sdtNone: return "SDT_NONE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DvbSdtOutputSdt(rawValue: rawValue) ?? DvbSdtOutputSdt.sdkUnknown(rawValue)
    }
}
