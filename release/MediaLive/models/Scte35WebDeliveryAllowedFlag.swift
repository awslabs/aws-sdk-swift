// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Corresponds to the web_delivery_allowed_flag parameter. A value of WEB_DELIVERY_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
public enum Scte35WebDeliveryAllowedFlag {
    case webDeliveryAllowed
    case webDeliveryNotAllowed
    case sdkUnknown(String)
}

extension Scte35WebDeliveryAllowedFlag : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Scte35WebDeliveryAllowedFlag] {
        return [
            .webDeliveryAllowed,
            .webDeliveryNotAllowed,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .webDeliveryAllowed: return "WEB_DELIVERY_ALLOWED"
        case .webDeliveryNotAllowed: return "WEB_DELIVERY_NOT_ALLOWED"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Scte35WebDeliveryAllowedFlag(rawValue: rawValue) ?? Scte35WebDeliveryAllowedFlag.sdkUnknown(rawValue)
    }
}
