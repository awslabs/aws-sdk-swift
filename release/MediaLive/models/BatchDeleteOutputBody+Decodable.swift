// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDeleteOutputBody: Equatable {
    public let failed: [BatchFailedResultModel]?
    public let successful: [BatchSuccessfulResultModel]?
}

extension BatchDeleteOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case failed = "failed"
        case successful = "successful"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let failedContainer = try containerValues.decodeIfPresent([BatchFailedResultModel].self, forKey: .failed)
        var failedDecoded0:[BatchFailedResultModel]? = nil
        if let failedContainer = failedContainer {
            failedDecoded0 = [BatchFailedResultModel]()
            for structure0 in failedContainer {
                failedDecoded0?.append(structure0)
            }
        }
        failed = failedDecoded0
        let successfulContainer = try containerValues.decodeIfPresent([BatchSuccessfulResultModel].self, forKey: .successful)
        var successfulDecoded0:[BatchSuccessfulResultModel]? = nil
        if let successfulContainer = successfulContainer {
            successfulDecoded0 = [BatchSuccessfulResultModel]()
            for structure0 in successfulContainer {
                successfulDecoded0?.append(structure0)
            }
        }
        successful = successfulDecoded0
    }
}
