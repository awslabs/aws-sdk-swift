// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Audio Only Hls Track Type
public enum AudioOnlyHlsTrackType {
    case alternateAudioAutoSelect
    case alternateAudioAutoSelectDefault
    case alternateAudioNotAutoSelect
    case audioOnlyVariantStream
    case sdkUnknown(String)
}

extension AudioOnlyHlsTrackType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AudioOnlyHlsTrackType] {
        return [
            .alternateAudioAutoSelect,
            .alternateAudioAutoSelectDefault,
            .alternateAudioNotAutoSelect,
            .audioOnlyVariantStream,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .alternateAudioAutoSelect: return "ALTERNATE_AUDIO_AUTO_SELECT"
        case .alternateAudioAutoSelectDefault: return "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT"
        case .alternateAudioNotAutoSelect: return "ALTERNATE_AUDIO_NOT_AUTO_SELECT"
        case .audioOnlyVariantStream: return "AUDIO_ONLY_VARIANT_STREAM"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AudioOnlyHlsTrackType(rawValue: rawValue) ?? AudioOnlyHlsTrackType.sdkUnknown(rawValue)
    }
}
