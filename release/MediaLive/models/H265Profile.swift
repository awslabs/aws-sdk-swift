// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// H265 Profile
public enum H265Profile {
    case main
    case main10bit
    case sdkUnknown(String)
}

extension H265Profile : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H265Profile] {
        return [
            .main,
            .main10bit,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .main: return "MAIN"
        case .main10bit: return "MAIN_10BIT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H265Profile(rawValue: rawValue) ?? H265Profile.sdkUnknown(rawValue)
    }
}
