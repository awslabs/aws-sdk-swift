// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Placeholder documentation for InputType
public enum InputType {
    case awsCdi
    case inputDevice
    case mediaconnect
    case mp4File
    case rtmpPull
    case rtmpPush
    case rtpPush
    case udpPush
    case urlPull
    case sdkUnknown(String)
}

extension InputType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [InputType] {
        return [
            .awsCdi,
            .inputDevice,
            .mediaconnect,
            .mp4File,
            .rtmpPull,
            .rtmpPush,
            .rtpPush,
            .udpPush,
            .urlPull,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awsCdi: return "AWS_CDI"
        case .inputDevice: return "INPUT_DEVICE"
        case .mediaconnect: return "MEDIACONNECT"
        case .mp4File: return "MP4_FILE"
        case .rtmpPull: return "RTMP_PULL"
        case .rtmpPush: return "RTMP_PUSH"
        case .rtpPush: return "RTP_PUSH"
        case .udpPush: return "UDP_PUSH"
        case .urlPull: return "URL_PULL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = InputType(rawValue: rawValue) ?? InputType.sdkUnknown(rawValue)
    }
}
