// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Corresponds to the device_restrictions parameter in a segmentation_descriptor. If you include one of the "restriction" flags then you must include all four of them.
public enum Scte35DeviceRestrictions {
    case `none`
    case restrictGroup0
    case restrictGroup1
    case restrictGroup2
    case sdkUnknown(String)
}

extension Scte35DeviceRestrictions : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Scte35DeviceRestrictions] {
        return [
            .none,
            .restrictGroup0,
            .restrictGroup1,
            .restrictGroup2,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .none: return "NONE"
        case .restrictGroup0: return "RESTRICT_GROUP0"
        case .restrictGroup1: return "RESTRICT_GROUP1"
        case .restrictGroup2: return "RESTRICT_GROUP2"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Scte35DeviceRestrictions(rawValue: rawValue) ?? Scte35DeviceRestrictions.sdkUnknown(rawValue)
    }
}
