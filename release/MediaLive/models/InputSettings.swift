// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Live Event input parameters. There can be multiple inputs in a single Live Event.
public struct InputSettings: Equatable {
    /// Used to select the audio stream to decode for inputs that have multiple available.
    public let audioSelectors: [AudioSelector]?
    /// Used to select the caption input to use for inputs that have multiple available.
    public let captionSelectors: [CaptionSelector]?
    /// Enable or disable the deblock filter when filtering.
    public let deblockFilter: InputDeblockFilter?
    /// Enable or disable the denoise filter when filtering.
    public let denoiseFilter: InputDenoiseFilter?
    /// Adjusts the magnitude of filtering from 1 (minimal) to 5 (strongest).
    public let filterStrength: Int
    /// Turns on the filter for this input. MPEG-2 inputs have the deblocking filter enabled by default.
    /// 1) auto - filtering will be applied depending on input type/quality
    /// 2) disabled - no filtering will be applied to the input
    /// 3) forced - filtering will be applied regardless of input type
    public let inputFilter: InputFilter?
    /// Input settings.
    public let networkInputSettings: NetworkInputSettings?
    /// Specifies whether to extract applicable ancillary data from a SMPTE-2038 source in this input. Applicable data types are captions, timecode, AFD, and SCTE-104 messages.
    /// - PREFER: Extract from SMPTE-2038 if present in this input, otherwise extract from another source (if any).
    /// - IGNORE: Never extract any ancillary data from SMPTE-2038.
    public let smpte2038DataPreference: Smpte2038DataPreference?
    /// Loop input if it is a file. This allows a file input to be streamed indefinitely.
    public let sourceEndBehavior: InputSourceEndBehavior?
    /// Informs which video elementary stream to decode for input types that have multiple available.
    public let videoSelector: VideoSelector?

    public init (
        audioSelectors: [AudioSelector]? = nil,
        captionSelectors: [CaptionSelector]? = nil,
        deblockFilter: InputDeblockFilter? = nil,
        denoiseFilter: InputDenoiseFilter? = nil,
        filterStrength: Int = 0,
        inputFilter: InputFilter? = nil,
        networkInputSettings: NetworkInputSettings? = nil,
        smpte2038DataPreference: Smpte2038DataPreference? = nil,
        sourceEndBehavior: InputSourceEndBehavior? = nil,
        videoSelector: VideoSelector? = nil
    )
    {
        self.audioSelectors = audioSelectors
        self.captionSelectors = captionSelectors
        self.deblockFilter = deblockFilter
        self.denoiseFilter = denoiseFilter
        self.filterStrength = filterStrength
        self.inputFilter = inputFilter
        self.networkInputSettings = networkInputSettings
        self.smpte2038DataPreference = smpte2038DataPreference
        self.sourceEndBehavior = sourceEndBehavior
        self.videoSelector = videoSelector
    }
}
