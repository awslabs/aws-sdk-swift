// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FecOutputSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case columnDepth = "columnDepth"
        case includeFec = "includeFec"
        case rowLength = "rowLength"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if columnDepth != 0 {
            try encodeContainer.encode(columnDepth, forKey: .columnDepth)
        }
        if let includeFec = includeFec {
            try encodeContainer.encode(includeFec.rawValue, forKey: .includeFec)
        }
        if rowLength != 0 {
            try encodeContainer.encode(rowLength, forKey: .rowLength)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let columnDepthDecoded = try containerValues.decode(Int.self, forKey: .columnDepth)
        columnDepth = columnDepthDecoded
        let includeFecDecoded = try containerValues.decodeIfPresent(FecOutputIncludeFec.self, forKey: .includeFec)
        includeFec = includeFecDecoded
        let rowLengthDecoded = try containerValues.decode(Int.self, forKey: .rowLength)
        rowLength = rowLengthDecoded
    }
}
