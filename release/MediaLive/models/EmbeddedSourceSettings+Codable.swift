// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EmbeddedSourceSettings: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case convert608To708 = "convert608To708"
        case scte20Detection = "scte20Detection"
        case source608ChannelNumber = "source608ChannelNumber"
        case source608TrackNumber = "source608TrackNumber"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let convert608To708 = convert608To708 {
            try encodeContainer.encode(convert608To708.rawValue, forKey: .convert608To708)
        }
        if let scte20Detection = scte20Detection {
            try encodeContainer.encode(scte20Detection.rawValue, forKey: .scte20Detection)
        }
        if source608ChannelNumber != 0 {
            try encodeContainer.encode(source608ChannelNumber, forKey: .source608ChannelNumber)
        }
        if source608TrackNumber != 0 {
            try encodeContainer.encode(source608TrackNumber, forKey: .source608TrackNumber)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let convert608To708Decoded = try containerValues.decodeIfPresent(EmbeddedConvert608To708.self, forKey: .convert608To708)
        convert608To708 = convert608To708Decoded
        let scte20DetectionDecoded = try containerValues.decodeIfPresent(EmbeddedScte20Detection.self, forKey: .scte20Detection)
        scte20Detection = scte20DetectionDecoded
        let source608ChannelNumberDecoded = try containerValues.decode(Int.self, forKey: .source608ChannelNumber)
        source608ChannelNumber = source608ChannelNumberDecoded
        let source608TrackNumberDecoded = try containerValues.decode(Int.self, forKey: .source608TrackNumber)
        source608TrackNumber = source608TrackNumberDecoded
    }
}
