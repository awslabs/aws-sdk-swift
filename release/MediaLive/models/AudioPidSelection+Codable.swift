// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AudioPidSelection: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case pid = "pid"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if pid != 0 {
            try encodeContainer.encode(pid, forKey: .pid)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let pidDecoded = try containerValues.decode(Int.self, forKey: .pid)
        pid = pidDecoded
    }
}
