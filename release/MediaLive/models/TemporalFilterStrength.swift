// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// Temporal Filter Strength
public enum TemporalFilterStrength {
    case auto
    case strength1
    case strength10
    case strength11
    case strength12
    case strength13
    case strength14
    case strength15
    case strength16
    case strength2
    case strength3
    case strength4
    case strength5
    case strength6
    case strength7
    case strength8
    case strength9
    case sdkUnknown(String)
}

extension TemporalFilterStrength : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TemporalFilterStrength] {
        return [
            .auto,
            .strength1,
            .strength10,
            .strength11,
            .strength12,
            .strength13,
            .strength14,
            .strength15,
            .strength16,
            .strength2,
            .strength3,
            .strength4,
            .strength5,
            .strength6,
            .strength7,
            .strength8,
            .strength9,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .auto: return "AUTO"
        case .strength1: return "STRENGTH_1"
        case .strength10: return "STRENGTH_10"
        case .strength11: return "STRENGTH_11"
        case .strength12: return "STRENGTH_12"
        case .strength13: return "STRENGTH_13"
        case .strength14: return "STRENGTH_14"
        case .strength15: return "STRENGTH_15"
        case .strength16: return "STRENGTH_16"
        case .strength2: return "STRENGTH_2"
        case .strength3: return "STRENGTH_3"
        case .strength4: return "STRENGTH_4"
        case .strength5: return "STRENGTH_5"
        case .strength6: return "STRENGTH_6"
        case .strength7: return "STRENGTH_7"
        case .strength8: return "STRENGTH_8"
        case .strength9: return "STRENGTH_9"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TemporalFilterStrength(rawValue: rawValue) ?? TemporalFilterStrength.sdkUnknown(rawValue)
    }
}
