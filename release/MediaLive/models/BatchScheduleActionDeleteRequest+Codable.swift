// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BatchScheduleActionDeleteRequest: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case actionNames = "actionNames"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionNames = actionNames {
            var actionNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .actionNames)
            for __listof__string0 in actionNames {
                try actionNamesContainer.encode(__listof__string0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .actionNames)
        var actionNamesDecoded0:[String]? = nil
        if let actionNamesContainer = actionNamesContainer {
            actionNamesDecoded0 = [String]()
            for string0 in actionNamesContainer {
                actionNamesDecoded0?.append(string0)
            }
        }
        actionNames = actionNamesDecoded0
    }
}
