// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// H264 Level
public enum H264Level {
    case h264Level1
    case h264Level11
    case h264Level12
    case h264Level13
    case h264Level2
    case h264Level21
    case h264Level22
    case h264Level3
    case h264Level31
    case h264Level32
    case h264Level4
    case h264Level41
    case h264Level42
    case h264Level5
    case h264Level51
    case h264Level52
    case h264LevelAuto
    case sdkUnknown(String)
}

extension H264Level : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [H264Level] {
        return [
            .h264Level1,
            .h264Level11,
            .h264Level12,
            .h264Level13,
            .h264Level2,
            .h264Level21,
            .h264Level22,
            .h264Level3,
            .h264Level31,
            .h264Level32,
            .h264Level4,
            .h264Level41,
            .h264Level42,
            .h264Level5,
            .h264Level51,
            .h264Level52,
            .h264LevelAuto,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .h264Level1: return "H264_LEVEL_1"
        case .h264Level11: return "H264_LEVEL_1_1"
        case .h264Level12: return "H264_LEVEL_1_2"
        case .h264Level13: return "H264_LEVEL_1_3"
        case .h264Level2: return "H264_LEVEL_2"
        case .h264Level21: return "H264_LEVEL_2_1"
        case .h264Level22: return "H264_LEVEL_2_2"
        case .h264Level3: return "H264_LEVEL_3"
        case .h264Level31: return "H264_LEVEL_3_1"
        case .h264Level32: return "H264_LEVEL_3_2"
        case .h264Level4: return "H264_LEVEL_4"
        case .h264Level41: return "H264_LEVEL_4_1"
        case .h264Level42: return "H264_LEVEL_4_2"
        case .h264Level5: return "H264_LEVEL_5"
        case .h264Level51: return "H264_LEVEL_5_1"
        case .h264Level52: return "H264_LEVEL_5_2"
        case .h264LevelAuto: return "H264_LEVEL_AUTO"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = H264Level(rawValue: rawValue) ?? H264Level.sdkUnknown(rawValue)
    }
}
