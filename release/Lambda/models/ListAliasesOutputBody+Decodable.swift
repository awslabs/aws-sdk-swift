// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAliasesOutputBody: Equatable {
    public let nextMarker: String?
    public let aliases: [AliasConfiguration]?
}

extension ListAliasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case aliases = "Aliases"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let aliasesContainer = try containerValues.decodeIfPresent([AliasConfiguration].self, forKey: .aliases)
        var aliasesDecoded0:[AliasConfiguration]? = nil
        if let aliasesContainer = aliasesContainer {
            aliasesDecoded0 = [AliasConfiguration]()
            for structure0 in aliasesContainer {
                aliasesDecoded0?.append(structure0)
            }
        }
        aliases = aliasesDecoded0
    }
}
