// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum SourceAccessType {
    case basicAuth
    case saslScram256Auth
    case saslScram512Auth
    case vpcSecurityGroup
    case vpcSubnet
    case sdkUnknown(String)
}

extension SourceAccessType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [SourceAccessType] {
        return [
            .basicAuth,
            .saslScram256Auth,
            .saslScram512Auth,
            .vpcSecurityGroup,
            .vpcSubnet,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .basicAuth: return "BASIC_AUTH"
        case .saslScram256Auth: return "SASL_SCRAM_256_AUTH"
        case .saslScram512Auth: return "SASL_SCRAM_512_AUTH"
        case .vpcSecurityGroup: return "VPC_SECURITY_GROUP"
        case .vpcSubnet: return "VPC_SUBNET"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = SourceAccessType(rawValue: rawValue) ?? SourceAccessType.sdkUnknown(rawValue)
    }
}
