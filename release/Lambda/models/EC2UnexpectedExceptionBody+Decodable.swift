// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EC2UnexpectedExceptionBody: Equatable {
    public let type: String?
    public let message: String?
    public let eC2ErrorCode: String?
}

extension EC2UnexpectedExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case eC2ErrorCode = "EC2ErrorCode"
        case message = "Message"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let typeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .type)
        type = typeDecoded
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let eC2ErrorCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eC2ErrorCode)
        eC2ErrorCode = eC2ErrorCodeDecoded
    }
}
