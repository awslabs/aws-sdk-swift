// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct InvokeOutput: Equatable {
    /// <p>The version of the function that executed. When you invoke a function with an alias, this indicates which
    ///       version the alias resolved to.</p>
    public let executedVersion: String?
    /// <p>If present, indicates that an error occurred during function execution. Details about the error are included
    ///       in the response payload.</p>
    public let functionError: String?
    /// <p>The last 4 KB of the execution log, which is base64 encoded.</p>
    public let logResult: String?
    /// <p>The response from the function, or an error object.</p>
    public let payload: Data?
    /// <p>The HTTP status code is in the 200 range for a successful request. For the <code>RequestResponse</code>
    ///       invocation type, this status code is 200. For the <code>Event</code> invocation type, this status code is 202. For
    ///       the <code>DryRun</code> invocation type, the status code is 204.</p>
    public let statusCode: Int

    public init (
        executedVersion: String? = nil,
        functionError: String? = nil,
        logResult: String? = nil,
        payload: Data? = nil,
        statusCode: Int = 0
    )
    {
        self.executedVersion = executedVersion
        self.functionError = functionError
        self.logResult = logResult
        self.payload = payload
        self.statusCode = statusCode
    }
}
