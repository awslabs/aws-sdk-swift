// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetMediaInputBody: Equatable {
    public let streamName: String?
    public let streamARN: String?
    public let startSelector: StartSelector?
}

extension GetMediaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case startSelector = "StartSelector"
        case streamARN = "StreamARN"
        case streamName = "StreamName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let streamARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let startSelectorDecoded = try containerValues.decodeIfPresent(StartSelector.self, forKey: .startSelector)
        startSelector = startSelectorDecoded
    }
}
