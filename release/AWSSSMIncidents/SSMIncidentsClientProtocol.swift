// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services. Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.
public protocol SSMIncidentsClientProtocol {
    /// A replication set replicates and encrypts your data to the provided Regions with the provided KMS key.
    func createReplicationSet(input: CreateReplicationSetInput) async throws -> CreateReplicationSetOutputResponse
    /// Creates a response plan that automates the initial response to incidents. A response plan engages contacts, starts chat channel collaboration, and initiates runbooks at the beginning of an incident.
    func createResponsePlan(input: CreateResponsePlanInput) async throws -> CreateResponsePlanOutputResponse
    /// Creates a custom timeline event on the incident details page of an incident record. Timeline events are automatically created by Incident Manager, marking key moment during an incident. You can create custom timeline events to mark important events that are automatically detected by Incident Manager.
    func createTimelineEvent(input: CreateTimelineEventInput) async throws -> CreateTimelineEventOutputResponse
    /// Delete an incident record from Incident Manager.
    func deleteIncidentRecord(input: DeleteIncidentRecordInput) async throws -> DeleteIncidentRecordOutputResponse
    /// Deletes all Regions in your replication set. Deleting the replication set deletes all Incident Manager data.
    func deleteReplicationSet(input: DeleteReplicationSetInput) async throws -> DeleteReplicationSetOutputResponse
    /// Deletes the resource policy that Resource Access Manager uses to share your Incident Manager resource.
    func deleteResourcePolicy(input: DeleteResourcePolicyInput) async throws -> DeleteResourcePolicyOutputResponse
    /// Deletes the specified response plan. Deleting a response plan stops all linked CloudWatch alarms and EventBridge events from creating an incident with this response plan.
    func deleteResponsePlan(input: DeleteResponsePlanInput) async throws -> DeleteResponsePlanOutputResponse
    /// Deletes a timeline event from an incident.
    func deleteTimelineEvent(input: DeleteTimelineEventInput) async throws -> DeleteTimelineEventOutputResponse
    /// Returns the details for the specified incident record.
    func getIncidentRecord(input: GetIncidentRecordInput) async throws -> GetIncidentRecordOutputResponse
    /// Retrieve your Incident Manager replication set.
    func getReplicationSet(input: GetReplicationSetInput) async throws -> GetReplicationSetOutputResponse
    /// Retrieves the resource policies attached to the specified response plan.
    func getResourcePolicies(input: GetResourcePoliciesInput) async throws -> GetResourcePoliciesOutputResponse
    /// Retrieves the details of the specified response plan.
    func getResponsePlan(input: GetResponsePlanInput) async throws -> GetResponsePlanOutputResponse
    /// Retrieves a timeline event based on its ID and incident record.
    func getTimelineEvent(input: GetTimelineEventInput) async throws -> GetTimelineEventOutputResponse
    /// Lists all incident records in your account. Use this command to retrieve the Amazon Resource Name (ARN) of the incident record you want to update.
    func listIncidentRecords(input: ListIncidentRecordsInput) async throws -> ListIncidentRecordsOutputResponse
    /// List all related items for an incident record.
    func listRelatedItems(input: ListRelatedItemsInput) async throws -> ListRelatedItemsOutputResponse
    /// Lists details about the replication set configured in your account.
    func listReplicationSets(input: ListReplicationSetsInput) async throws -> ListReplicationSetsOutputResponse
    /// Lists all response plans in your account.
    func listResponsePlans(input: ListResponsePlansInput) async throws -> ListResponsePlansOutputResponse
    /// Lists the tags that are attached to the specified response plan.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Lists timeline events for the specified incident record.
    func listTimelineEvents(input: ListTimelineEventsInput) async throws -> ListTimelineEventsOutputResponse
    /// Adds a resource policy to the specified response plan. The resource policy is used to share the response plan using Resource Access Manager (RAM). For more information about cross-account sharing, see [Cross-Region and cross-account incident management](https://docs.aws.amazon.com/incident-manager/latest/userguide/incident-manager-cross-account-cross-region.html).
    func putResourcePolicy(input: PutResourcePolicyInput) async throws -> PutResourcePolicyOutputResponse
    /// Used to start an incident from CloudWatch alarms, EventBridge events, or manually.
    func startIncident(input: StartIncidentInput) async throws -> StartIncidentOutputResponse
    /// Adds a tag to a response plan.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes a tag from a resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Update deletion protection to either allow or deny deletion of the final Region in a replication set.
    func updateDeletionProtection(input: UpdateDeletionProtectionInput) async throws -> UpdateDeletionProtectionOutputResponse
    /// Update the details of an incident record. You can use this operation to update an incident record from the defined chat channel. For more information about using actions in chat channels, see [Interacting through chat](https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact).
    func updateIncidentRecord(input: UpdateIncidentRecordInput) async throws -> UpdateIncidentRecordOutputResponse
    /// Add or remove related items from the related items tab of an incident record.
    func updateRelatedItems(input: UpdateRelatedItemsInput) async throws -> UpdateRelatedItemsOutputResponse
    /// Add or delete Regions from your replication set.
    func updateReplicationSet(input: UpdateReplicationSetInput) async throws -> UpdateReplicationSetOutputResponse
    /// Updates the specified response plan.
    func updateResponsePlan(input: UpdateResponsePlanInput) async throws -> UpdateResponsePlanOutputResponse
    /// Updates a timeline event. You can update events of type Custom Event.
    func updateTimelineEvent(input: UpdateTimelineEventInput) async throws -> UpdateTimelineEventOutputResponse
}

public protocol SSMIncidentsClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum SSMIncidentsClientTypes {}
