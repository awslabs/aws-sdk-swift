// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SourceCredentialsInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case arn
        case authType
        case serverType
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let arn = arn {
            try encodeContainer.encode(arn, forKey: .arn)
        }
        if let authType = authType {
            try encodeContainer.encode(authType.rawValue, forKey: .authType)
        }
        if let serverType = serverType {
            try encodeContainer.encode(serverType.rawValue, forKey: .serverType)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let arnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .arn)
        arn = arnDecoded
        let serverTypeDecoded = try containerValues.decodeIfPresent(ServerType.self, forKey: .serverType)
        serverType = serverTypeDecoded
        let authTypeDecoded = try containerValues.decodeIfPresent(AuthType.self, forKey: .authType)
        authType = authTypeDecoded
    }
}
