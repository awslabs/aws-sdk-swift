// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about a stage for a batch build.</p>
public struct BuildBatchPhase: Equatable {
    /// <p>Additional information about the batch build phase. Especially to help troubleshoot a
    ///             failed batch build.</p>
    public let contexts: [PhaseContext]?
    /// <p>How long, in seconds, between the starting and ending times of the batch build's
    ///         phase.</p>
    public let durationInSeconds: Int?
    /// <p>When the batch build phase ended, expressed in Unix time format.</p>
    public let endTime: Date?
    /// <p>The current status of the batch build phase. Valid values include:</p>
    ///         <dl>
    ///             <dt>FAILED</dt>
    ///             <dd>
    ///                     <p>The build phase failed.</p>
    ///                 </dd>
    ///             <dt>FAULT</dt>
    ///             <dd>
    ///                     <p>The build phase faulted.</p>
    ///                 </dd>
    ///             <dt>IN_PROGRESS</dt>
    ///             <dd>
    ///                     <p>The build phase is still in progress.</p>
    ///                 </dd>
    ///             <dt>QUEUED</dt>
    ///             <dd>
    ///                     <p>The build has been submitted and is queued behind other submitted
    ///                         builds.</p>
    ///                 </dd>
    ///             <dt>STOPPED</dt>
    ///             <dd>
    ///                     <p>The build phase stopped.</p>
    ///                 </dd>
    ///             <dt>SUCCEEDED</dt>
    ///             <dd>
    ///                     <p>The build phase succeeded.</p>
    ///                 </dd>
    ///             <dt>TIMED_OUT</dt>
    ///             <dd>
    ///                     <p>The build phase timed out.</p>
    ///                 </dd>
    ///          </dl>
    public let phaseStatus: StatusType?
    /// <p>The name of the batch build phase. Valid values include:</p>
    ///         <dl>
    ///             <dt>COMBINE_ARTIFACTS</dt>
    ///             <dd>
    ///                     <p>Build output artifacts are being combined and uploaded to the output
    ///                         location.</p>
    ///                 </dd>
    ///             <dt>DOWNLOAD_BATCHSPEC</dt>
    ///             <dd>
    ///                     <p>The batch build specification is being downloaded.</p>
    ///                 </dd>
    ///             <dt>FAILED</dt>
    ///             <dd>
    ///                     <p>One or more of the builds failed.</p>
    ///                 </dd>
    ///             <dt>IN_PROGRESS</dt>
    ///             <dd>
    ///                     <p>The batch build is in progress.</p>
    ///                 </dd>
    ///             <dt>STOPPED</dt>
    ///             <dd>
    ///                     <p>The batch build was stopped.</p>
    ///                 </dd>
    ///             <dt>SUBMITTED</dt>
    ///             <dd>
    ///                     <p>The btach build has been submitted.</p>
    ///                 </dd>
    ///             <dt>SUCCEEDED</dt>
    ///             <dd>
    ///                     <p>The batch build succeeded.</p>
    ///                 </dd>
    ///          </dl>
    public let phaseType: BuildBatchPhaseType?
    /// <p>When the batch build phase started, expressed in Unix time format.</p>
    public let startTime: Date?

    public init (
        contexts: [PhaseContext]? = nil,
        durationInSeconds: Int? = nil,
        endTime: Date? = nil,
        phaseStatus: StatusType? = nil,
        phaseType: BuildBatchPhaseType? = nil,
        startTime: Date? = nil
    )
    {
        self.contexts = contexts
        self.durationInSeconds = durationInSeconds
        self.endTime = endTime
        self.phaseStatus = phaseStatus
        self.phaseType = phaseType
        self.startTime = startTime
    }
}
