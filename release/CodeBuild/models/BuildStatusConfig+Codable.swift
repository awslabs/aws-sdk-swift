// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BuildStatusConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case context
        case targetUrl
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let context = context {
            try encodeContainer.encode(context, forKey: .context)
        }
        if let targetUrl = targetUrl {
            try encodeContainer.encode(targetUrl, forKey: .targetUrl)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contextDecoded = try containerValues.decodeIfPresent(String.self, forKey: .context)
        context = contextDecoded
        let targetUrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .targetUrl)
        targetUrl = targetUrlDecoded
    }
}
