// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTestCasesOutputBody: Equatable {
    public let nextToken: String?
    public let testCases: [TestCase]?
}

extension DescribeTestCasesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case testCases
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let testCasesContainer = try containerValues.decodeIfPresent([TestCase].self, forKey: .testCases)
        var testCasesDecoded0:[TestCase]? = nil
        if let testCasesContainer = testCasesContainer {
            testCasesDecoded0 = [TestCase]()
            for structure0 in testCasesContainer {
                testCasesDecoded0?.append(structure0)
            }
        }
        testCases = testCasesDecoded0
    }
}
