// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListSharedReportGroupsInput: Equatable {
    /// <p> The maximum number of paginated shared report groups per response. Use
    ///                 <code>nextToken</code> to iterate pages in the list of returned
    ///                 <code>ReportGroup</code> objects. The default value is 100. </p>
    public let maxResults: Int?
    /// <p> During a previous call, the maximum number of items that can be returned is the value
    ///             specified in <code>maxResults</code>. If there more items in the list, then a unique
    ///             string called a <i>nextToken</i> is returned. To get the next batch of
    ///             items in the list, call this operation again, adding the next token to the call. To get
    ///             all of the items in the list, keep calling this operation with each subsequent next
    ///             token that is returned, until no more next tokens are returned. </p>
    public let nextToken: String?
    /// <p> The criterion to be used to list report groups shared with the current AWS account or
    ///             user. Valid values include: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>ARN</code>: List based on the ARN. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>MODIFIED_TIME</code>: List based on when information about the shared
    ///                     report group was last changed. </p>
    ///             </li>
    ///          </ul>
    public let sortBy: SharedResourceSortByType?
    /// <p>The order in which to list shared report groups. Valid values include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>ASCENDING</code>: List in ascending order.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>DESCENDING</code>: List in descending order.</p>
    ///             </li>
    ///          </ul>
    public let sortOrder: SortOrderType?

    public init (
        maxResults: Int? = nil,
        nextToken: String? = nil,
        sortBy: SharedResourceSortByType? = nil,
        sortOrder: SortOrderType? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.sortBy = sortBy
        self.sortOrder = sortOrder
    }
}
