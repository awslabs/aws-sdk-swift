// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about the cache for the build project.</p>
public struct ProjectCache: Equatable {
    /// <p>Information about the cache location: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>NO_CACHE</code> or <code>LOCAL</code>: This value is ignored.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>S3</code>: This is the S3 bucket name/prefix.</p>
    ///             </li>
    ///          </ul>
    public let location: String?
    /// <p>An array of strings that specify the local cache modes. You can use one or more local
    ///             cache modes at the same time. This is only used for <code>LOCAL</code> cache
    ///             types.</p>
    ///         <p>Possible values are:</p>
    ///         <dl>
    ///             <dt>LOCAL_SOURCE_CACHE</dt>
    ///             <dd>
    ///                     <p>Caches Git metadata for primary and secondary sources. After the cache is
    ///                         created, subsequent builds pull only the change between commits. This mode
    ///                         is a good choice for projects with a clean working directory and a source
    ///                         that is a large Git repository. If you choose this option and your project
    ///                         does not use a Git repository (GitHub, GitHub Enterprise, or Bitbucket), the
    ///                         option is ignored. </p>
    ///                 </dd>
    ///             <dt>LOCAL_DOCKER_LAYER_CACHE</dt>
    ///             <dd>
    ///                     <p>Caches existing Docker layers. This mode is a good choice for projects
    ///                         that build or pull large Docker images. It can prevent the performance
    ///                         issues caused by pulling large Docker images down from the network. </p>
    ///                     <note>
    ///                         <ul>
    ///                      <li>
    ///                                 <p>You can use a Docker layer cache in the Linux environment
    ///                                     only. </p>
    ///                             </li>
    ///                      <li>
    ///                                 <p>The <code>privileged</code> flag must be set so that your
    ///                                     project has the required Docker permissions. </p>
    ///                             </li>
    ///                      <li>
    ///                                 <p>You should consider the security implications before you use a
    ///                                     Docker layer cache. </p>
    ///                             </li>
    ///                   </ul>
    ///                     </note>
    ///                 </dd>
    ///             <dt>LOCAL_CUSTOM_CACHE</dt>
    ///             <dd>
    ///                     <p>Caches directories you specify in the buildspec file. This mode is a good
    ///                         choice if your build scenario is not suited to one of the other three local
    ///                         cache modes. If you use a custom cache: </p>
    ///                     <ul>
    ///                   <li>
    ///                             <p>Only directories can be specified for caching. You cannot specify
    ///                                 individual files. </p>
    ///                         </li>
    ///                   <li>
    ///                             <p>Symlinks are used to reference cached directories. </p>
    ///                         </li>
    ///                   <li>
    ///                             <p>Cached directories are linked to your build before it downloads
    ///                                 its project sources. Cached items are overridden if a source item
    ///                                 has the same name. Directories are specified using cache paths in
    ///                                 the buildspec file. </p>
    ///                         </li>
    ///                </ul>
    ///                 </dd>
    ///          </dl>
    public let modes: [CacheMode]?
    /// <p>The type of cache used by the build project. Valid values include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>NO_CACHE</code>: The build project does not use any cache.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>S3</code>: The build project reads and writes from and to S3.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>LOCAL</code>: The build project stores a cache locally on a build host
    ///                     that is only available to that build host.</p>
    ///             </li>
    ///          </ul>
    public let type: CacheType?

    public init (
        location: String? = nil,
        modes: [CacheMode]? = nil,
        type: CacheType? = nil
    )
    {
        self.location = location
        self.modes = modes
        self.type = type
    }
}
