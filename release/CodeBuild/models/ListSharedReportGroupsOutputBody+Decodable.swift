// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSharedReportGroupsOutputBody: Equatable {
    public let nextToken: String?
    public let reportGroups: [String]?
}

extension ListSharedReportGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case reportGroups
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let reportGroupsContainer = try containerValues.decodeIfPresent([String].self, forKey: .reportGroups)
        var reportGroupsDecoded0:[String]? = nil
        if let reportGroupsContainer = reportGroupsContainer {
            reportGroupsDecoded0 = [String]()
            for string0 in reportGroupsContainer {
                reportGroupsDecoded0?.append(string0)
            }
        }
        reportGroups = reportGroupsDecoded0
    }
}
