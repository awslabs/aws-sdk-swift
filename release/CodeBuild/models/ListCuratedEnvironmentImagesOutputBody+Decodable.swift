// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCuratedEnvironmentImagesOutputBody: Equatable {
    public let platforms: [EnvironmentPlatform]?
}

extension ListCuratedEnvironmentImagesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case platforms
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let platformsContainer = try containerValues.decodeIfPresent([EnvironmentPlatform].self, forKey: .platforms)
        var platformsDecoded0:[EnvironmentPlatform]? = nil
        if let platformsContainer = platformsContainer {
            platformsDecoded0 = [EnvironmentPlatform]()
            for structure0 in platformsContainer {
                platformsDecoded0?.append(structure0)
            }
        }
        platforms = platformsDecoded0
    }
}
