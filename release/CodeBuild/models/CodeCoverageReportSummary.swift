// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains a summary of a code coverage report.</p>
///         <p>Line coverage measures how many statements your tests cover. A statement is a single
///       instruction, not including comments, conditionals, etc.</p>
///         <p>Branch coverage determines if your tests cover every possible branch of a control
///     structure, such as an <code>if</code> or <code>case</code> statement.</p>
public struct CodeCoverageReportSummary: Equatable {
    /// <p>The percentage of branches that are covered by your tests.</p>
    public let branchCoveragePercentage: Double?
    /// <p>The number of conditional branches that are covered by your tests.</p>
    public let branchesCovered: Int?
    /// <p>The number of conditional branches that are not covered by your tests.</p>
    public let branchesMissed: Int?
    /// <p>The percentage of lines that are covered by your tests.</p>
    public let lineCoveragePercentage: Double?
    /// <p>The number of lines that are covered by your tests.</p>
    public let linesCovered: Int?
    /// <p>The number of lines that are not covered by your tests.</p>
    public let linesMissed: Int?

    public init (
        branchCoveragePercentage: Double? = nil,
        branchesCovered: Int? = nil,
        branchesMissed: Int? = nil,
        lineCoveragePercentage: Double? = nil,
        linesCovered: Int? = nil,
        linesMissed: Int? = nil
    )
    {
        self.branchCoveragePercentage = branchCoveragePercentage
        self.branchesCovered = branchesCovered
        self.branchesMissed = branchesMissed
        self.lineCoveragePercentage = lineCoveragePercentage
        self.linesCovered = linesCovered
        self.linesMissed = linesMissed
    }
}
