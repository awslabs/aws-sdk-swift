// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateWebhookInput: Equatable {
    /// <p>A regular expression used to determine which repository branches are built when a
    ///       webhook is triggered. If the name of a branch matches the regular expression, then it is
    ///       built. If <code>branchFilter</code> is empty, then all branches are built.</p>
    ///          <note>
    ///             <p> It is recommended that you use <code>filterGroups</code> instead of
    ///         <code>branchFilter</code>. </p>
    ///          </note>
    public let branchFilter: String?
    /// <p>Specifies the type of build this webhook will trigger.</p>
    public let buildType: WebhookBuildType?
    /// <p> An array of arrays of <code>WebhookFilter</code> objects used to determine if a
    ///       webhook event can trigger a build. A filter group must contain at least one
    ///       <code>EVENT</code>
    ///             <code>WebhookFilter</code>. </p>
    public let filterGroups: [[WebhookFilter]?]?
    /// <p>The name of the AWS CodeBuild project.</p>
    public let projectName: String?
    /// <p> A boolean value that specifies whether the associated GitHub repository's secret
    ///       token should be updated. If you use Bitbucket for your repository,
    ///       <code>rotateSecret</code> is ignored. </p>
    public let rotateSecret: Bool

    public init (
        branchFilter: String? = nil,
        buildType: WebhookBuildType? = nil,
        filterGroups: [[WebhookFilter]?]? = nil,
        projectName: String? = nil,
        rotateSecret: Bool = false
    )
    {
        self.branchFilter = branchFilter
        self.buildType = buildType
        self.filterGroups = filterGroups
        self.projectName = projectName
        self.rotateSecret = rotateSecret
    }
}
