// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum BuildPhaseType {
    case build
    case completed
    case downloadSource
    case finalizing
    case install
    case postBuild
    case preBuild
    case provisioning
    case queued
    case submitted
    case uploadArtifacts
    case sdkUnknown(String)
}

extension BuildPhaseType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BuildPhaseType] {
        return [
            .build,
            .completed,
            .downloadSource,
            .finalizing,
            .install,
            .postBuild,
            .preBuild,
            .provisioning,
            .queued,
            .submitted,
            .uploadArtifacts,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .build: return "BUILD"
        case .completed: return "COMPLETED"
        case .downloadSource: return "DOWNLOAD_SOURCE"
        case .finalizing: return "FINALIZING"
        case .install: return "INSTALL"
        case .postBuild: return "POST_BUILD"
        case .preBuild: return "PRE_BUILD"
        case .provisioning: return "PROVISIONING"
        case .queued: return "QUEUED"
        case .submitted: return "SUBMITTED"
        case .uploadArtifacts: return "UPLOAD_ARTIFACTS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BuildPhaseType(rawValue: rawValue) ?? BuildPhaseType.sdkUnknown(rawValue)
    }
}
