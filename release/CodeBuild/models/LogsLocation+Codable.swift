// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LogsLocation: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cloudWatchLogs
        case cloudWatchLogsArn
        case deepLink
        case groupName
        case s3DeepLink
        case s3Logs
        case s3LogsArn
        case streamName
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let cloudWatchLogs = cloudWatchLogs {
            try encodeContainer.encode(cloudWatchLogs, forKey: .cloudWatchLogs)
        }
        if let cloudWatchLogsArn = cloudWatchLogsArn {
            try encodeContainer.encode(cloudWatchLogsArn, forKey: .cloudWatchLogsArn)
        }
        if let deepLink = deepLink {
            try encodeContainer.encode(deepLink, forKey: .deepLink)
        }
        if let groupName = groupName {
            try encodeContainer.encode(groupName, forKey: .groupName)
        }
        if let s3DeepLink = s3DeepLink {
            try encodeContainer.encode(s3DeepLink, forKey: .s3DeepLink)
        }
        if let s3Logs = s3Logs {
            try encodeContainer.encode(s3Logs, forKey: .s3Logs)
        }
        if let s3LogsArn = s3LogsArn {
            try encodeContainer.encode(s3LogsArn, forKey: .s3LogsArn)
        }
        if let streamName = streamName {
            try encodeContainer.encode(streamName, forKey: .streamName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let deepLinkDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deepLink)
        deepLink = deepLinkDecoded
        let s3DeepLinkDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3DeepLink)
        s3DeepLink = s3DeepLinkDecoded
        let cloudWatchLogsArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .cloudWatchLogsArn)
        cloudWatchLogsArn = cloudWatchLogsArnDecoded
        let s3LogsArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3LogsArn)
        s3LogsArn = s3LogsArnDecoded
        let cloudWatchLogsDecoded = try containerValues.decodeIfPresent(CloudWatchLogsConfig.self, forKey: .cloudWatchLogs)
        cloudWatchLogs = cloudWatchLogsDecoded
        let s3LogsDecoded = try containerValues.decodeIfPresent(S3LogsConfig.self, forKey: .s3Logs)
        s3Logs = s3LogsDecoded
    }
}
