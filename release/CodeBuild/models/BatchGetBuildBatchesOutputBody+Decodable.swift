// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetBuildBatchesOutputBody: Equatable {
    public let buildBatches: [BuildBatch]?
    public let buildBatchesNotFound: [String]?
}

extension BatchGetBuildBatchesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case buildBatches
        case buildBatchesNotFound
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let buildBatchesContainer = try containerValues.decodeIfPresent([BuildBatch].self, forKey: .buildBatches)
        var buildBatchesDecoded0:[BuildBatch]? = nil
        if let buildBatchesContainer = buildBatchesContainer {
            buildBatchesDecoded0 = [BuildBatch]()
            for structure0 in buildBatchesContainer {
                buildBatchesDecoded0?.append(structure0)
            }
        }
        buildBatches = buildBatchesDecoded0
        let buildBatchesNotFoundContainer = try containerValues.decodeIfPresent([String].self, forKey: .buildBatchesNotFound)
        var buildBatchesNotFoundDecoded0:[String]? = nil
        if let buildBatchesNotFoundContainer = buildBatchesNotFoundContainer {
            buildBatchesNotFoundDecoded0 = [String]()
            for string0 in buildBatchesNotFoundContainer {
                buildBatchesNotFoundDecoded0?.append(string0)
            }
        }
        buildBatchesNotFound = buildBatchesNotFoundDecoded0
    }
}
