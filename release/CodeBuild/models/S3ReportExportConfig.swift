// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> Information about the S3 bucket where the raw data of a report are exported. </p>
public struct S3ReportExportConfig: Equatable {
    /// <p> The name of the S3 bucket where the raw data of a report are exported. </p>
    public let bucket: String?
    /// <p>The AWS account identifier of the owner of the Amazon S3 bucket. This allows report data to be exported to an Amazon S3 bucket
    ///         that is owned by an account other than the account running the build.</p>
    public let bucketOwner: String?
    /// <p> A boolean value that specifies if the results of a report are encrypted. </p>
    public let encryptionDisabled: Bool?
    /// <p> The encryption key for the report's encrypted raw data. </p>
    public let encryptionKey: String?
    /// <p> The type of build output artifact to create. Valid values include: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <code>NONE</code>: AWS CodeBuild creates the raw data in the output bucket. This
    ///                     is the default if packaging is not specified. </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <code>ZIP</code>: AWS CodeBuild creates a ZIP file with the raw data in the
    ///                     output bucket. </p>
    ///             </li>
    ///          </ul>
    public let packaging: ReportPackagingType?
    /// <p> The path to the exported report's raw data results. </p>
    public let path: String?

    public init (
        bucket: String? = nil,
        bucketOwner: String? = nil,
        encryptionDisabled: Bool? = nil,
        encryptionKey: String? = nil,
        packaging: ReportPackagingType? = nil,
        path: String? = nil
    )
    {
        self.bucket = bucket
        self.bucketOwner = bucketOwner
        self.encryptionDisabled = encryptionDisabled
        self.encryptionKey = encryptionKey
        self.packaging = packaging
        self.path = path
    }
}
