// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeCodeCoveragesOutputBody: Equatable {
    public let nextToken: String?
    public let codeCoverages: [CodeCoverage]?
}

extension DescribeCodeCoveragesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeCoverages
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let codeCoveragesContainer = try containerValues.decodeIfPresent([CodeCoverage].self, forKey: .codeCoverages)
        var codeCoveragesDecoded0:[CodeCoverage]? = nil
        if let codeCoveragesContainer = codeCoveragesContainer {
            codeCoveragesDecoded0 = [CodeCoverage]()
            for structure0 in codeCoveragesContainer {
                codeCoveragesDecoded0?.append(structure0)
            }
        }
        codeCoverages = codeCoveragesDecoded0
    }
}
