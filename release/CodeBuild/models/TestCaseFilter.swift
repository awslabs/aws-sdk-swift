// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A filter used to return specific types of test cases. In order to pass the filter, the
///             report must meet all of the filter properties.</p>
public struct TestCaseFilter: Equatable {
    /// <p>A keyword that is used to filter on the <code>name</code> or the <code>prefix</code>
    ///             of the test cases. Only test cases where the keyword is a substring of the
    ///                 <code>name</code> or the <code>prefix</code> will be returned.</p>
    public let keyword: String?
    /// <p>The status used to filter test cases. A <code>TestCaseFilter</code> can have one
    ///             status. Valid values are:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>SUCCEEDED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>FAILED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>ERROR</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>SKIPPED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>UNKNOWN</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let status: String?

    public init (
        keyword: String? = nil,
        status: String? = nil
    )
    {
        self.keyword = keyword
        self.status = status
    }
}
