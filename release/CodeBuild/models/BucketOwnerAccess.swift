// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the access for objects that are uploaded to an Amazon S3 bucket that is owned by
///             another account.</p>
///         <p>By default, only the account that uploads the objects to the bucket has access to
///             these objects. This property allows you to give the bucket owner access to these
///             objects.</p>
///          <dl>
///             <dt>NONE</dt>
///             <dd>
///                 <p>The bucket owner does not have access to the objects. This is the
///                         default.</p>
///             </dd>
///             <dt>READ_ONLY</dt>
///             <dd>
///               <p>The bucket owner has read only access to the objects. The uploading account
///                         retains ownership of the objects.</p>
///             </dd>
///             <dt>FULL</dt>
///             <dd>
///               <p>The bucket owner has full access to the objects. Object ownership is determined
///                         by the following criteria:</p>
///                     <ul>
///                   <li>
///                             <p>If the bucket is configured with the <b>Bucket
///                                     owner preferred</b> setting, the bucket owner owns the
///                                 objects. The uploading account will have object access as specified
///                                 by the bucket's policy.</p>
///                         </li>
///                   <li>
///                             <p>Otherwise, the uploading account retains ownership of the
///                                 objects.</p>
///                         </li>
///                </ul>
///                     <p>For more information about Amazon S3 object ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling ownership of uploaded objects using S3
///                             Object Ownership</a> in the <i>Amazon Simple Storage Service User
///                         Guide</i>.</p>
///             </dd>
///          </dl>
public enum BucketOwnerAccess {
    case full
    case `none`
    case readOnly
    case sdkUnknown(String)
}

extension BucketOwnerAccess : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BucketOwnerAccess] {
        return [
            .full,
            .none,
            .readOnly,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .full: return "FULL"
        case .none: return "NONE"
        case .readOnly: return "READ_ONLY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BucketOwnerAccess(rawValue: rawValue) ?? BucketOwnerAccess.sdkUnknown(rawValue)
    }
}
