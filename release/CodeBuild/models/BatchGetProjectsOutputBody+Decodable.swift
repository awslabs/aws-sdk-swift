// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchGetProjectsOutputBody: Equatable {
    public let projects: [Project]?
    public let projectsNotFound: [String]?
}

extension BatchGetProjectsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case projects
        case projectsNotFound
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let projectsContainer = try containerValues.decodeIfPresent([Project].self, forKey: .projects)
        var projectsDecoded0:[Project]? = nil
        if let projectsContainer = projectsContainer {
            projectsDecoded0 = [Project]()
            for structure0 in projectsContainer {
                projectsDecoded0?.append(structure0)
            }
        }
        projects = projectsDecoded0
        let projectsNotFoundContainer = try containerValues.decodeIfPresent([String].self, forKey: .projectsNotFound)
        var projectsNotFoundDecoded0:[String]? = nil
        if let projectsNotFoundContainer = projectsNotFoundContainer {
            projectsNotFoundDecoded0 = [String]()
            for string0 in projectsNotFoundContainer {
                projectsNotFoundDecoded0?.append(string0)
            }
        }
        projectsNotFound = projectsNotFoundDecoded0
    }
}
