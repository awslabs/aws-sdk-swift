// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ReportGroupTrendFieldType {
    case branchesCovered
    case branchesMissed
    case branchCoverage
    case duration
    case linesCovered
    case linesMissed
    case lineCoverage
    case passRate
    case total
    case sdkUnknown(String)
}

extension ReportGroupTrendFieldType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ReportGroupTrendFieldType] {
        return [
            .branchesCovered,
            .branchesMissed,
            .branchCoverage,
            .duration,
            .linesCovered,
            .linesMissed,
            .lineCoverage,
            .passRate,
            .total,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .branchesCovered: return "BRANCHES_COVERED"
        case .branchesMissed: return "BRANCHES_MISSED"
        case .branchCoverage: return "BRANCH_COVERAGE"
        case .duration: return "DURATION"
        case .linesCovered: return "LINES_COVERED"
        case .linesMissed: return "LINES_MISSED"
        case .lineCoverage: return "LINE_COVERAGE"
        case .passRate: return "PASS_RATE"
        case .total: return "TOTAL"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ReportGroupTrendFieldType(rawValue: rawValue) ?? ReportGroupTrendFieldType.sdkUnknown(rawValue)
    }
}
