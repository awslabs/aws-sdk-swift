// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about the build input source code for the build project.</p>
public struct ProjectSource: Equatable {
    /// <p>Information about the authorization settings for AWS CodeBuild to access the source code to be
    ///             built.</p>
    ///         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set
    ///             this information directly.</p>
    public let auth: SourceAuth?
    /// <p>Contains information that defines how the build project reports the build status to
    ///             the source provider. This option is only used when the source provider is
    ///                 <code>GITHUB</code>, <code>GITHUB_ENTERPRISE</code>, or
    ///             <code>BITBUCKET</code>.</p>
    public let buildStatusConfig: BuildStatusConfig?
    /// <p>The buildspec file declaration to use for the builds in this build project.</p>
    ///         <p> If this value is set, it can be either an inline buildspec definition, the path to an
    ///             alternate buildspec file relative to the value of the built-in
    ///                 <code>CODEBUILD_SRC_DIR</code> environment variable, or the path to an S3 bucket.
    ///             The bucket must be in the same AWS Region as the build project. Specify the buildspec
    ///             file using its ARN (for example,
    ///                 <code>arn:aws:s3:::my-codebuild-sample2/buildspec.yml</code>). If this value is not
    ///             provided or is set to an empty string, the source code must contain a buildspec file in
    ///             its root directory. For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage">Buildspec File Name and Storage Location</a>. </p>
    public let buildspec: String?
    /// <p>Information about the Git clone depth for the build project.</p>
    public let gitCloneDepth: Int?
    /// <p> Information about the Git submodules configuration for the build project. </p>
    public let gitSubmodulesConfig: GitSubmodulesConfig?
    /// <p>Enable this flag to ignore SSL warnings while connecting to the project source
    ///           code.</p>
    public let insecureSsl: Bool?
    /// <p>Information about the location of the source code to be built. Valid values
    ///             include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>For source code settings that are specified in the source action of a pipeline
    ///                     in AWS CodePipeline, <code>location</code> should not be specified. If it is specified,
    ///                     AWS CodePipeline ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source
    ///                     action instead of this value.</p>
    ///             </li>
    ///             <li>
    ///                 <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository
    ///                     that contains the source code and the buildspec file (for example,
    ///                         <code>https://git-codecommit.<region-ID>.amazonaws.com/v1/repos/<repo-name></code>).</p>
    ///             </li>
    ///             <li>
    ///                 <p>For source code in an Amazon S3 input bucket, one of the following. </p>
    ///                 <ul>
    ///                   <li>
    ///                         <p>The path to the ZIP file that contains the source code (for example,
    ///                                 <code><bucket-name>/<path>/<object-name>.zip</code>). </p>
    ///                     </li>
    ///                   <li>
    ///                         <p>The path to the folder that contains the source code (for example,
    ///                                 <code><bucket-name>/<path-to-source-code>/<folder>/</code>). </p>
    ///                     </li>
    ///                </ul>
    ///             </li>
    ///             <li>
    ///                 <p>For source code in a GitHub repository, the HTTPS clone URL to the repository
    ///                     that contains the source and the buildspec file. You must connect your AWS
    ///                     account to your GitHub account. Use the AWS CodeBuild console to start creating a build
    ///                     project. When you use the console to connect (or reconnect) with GitHub, on the
    ///                     GitHub <b>Authorize application</b> page, for
    ///                         <b>Organization access</b>, choose <b>Request access</b> next to each repository you want to
    ///                     allow AWS CodeBuild to have access to, and then choose <b>Authorize
    ///                         application</b>. (After you have connected to your GitHub account,
    ///                     you do not need to finish creating the build project. You can leave the AWS CodeBuild
    ///                     console.) To instruct AWS CodeBuild to use this connection, in the <code>source</code>
    ///                     object, set the <code>auth</code> object's <code>type</code> value to
    ///                         <code>OAUTH</code>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>For source code in a Bitbucket repository, the HTTPS clone URL to the
    ///                     repository that contains the source and the buildspec file. You must connect
    ///                     your AWS account to your Bitbucket account. Use the AWS CodeBuild console to start
    ///                     creating a build project. When you use the console to connect (or reconnect)
    ///                     with Bitbucket, on the Bitbucket <b>Confirm access to your
    ///                         account</b> page, choose <b>Grant
    ///                         access</b>. (After you have connected to your Bitbucket account, you
    ///                     do not need to finish creating the build project. You can leave the AWS CodeBuild
    ///                     console.) To instruct AWS CodeBuild to use this connection, in the <code>source</code>
    ///                     object, set the <code>auth</code> object's <code>type</code> value to
    ///                         <code>OAUTH</code>.</p>
    ///             </li>
    ///          </ul>
    public let location: String?
    /// <p> Set to true to report the status of a build's start and finish to your source
    ///             provider. This option is valid only when your source provider is GitHub, GitHub
    ///             Enterprise, or Bitbucket. If this is set and you use a different source provider, an
    ///             <code>invalidInputException</code> is thrown. </p>
    ///             <p>To be able to report the build status to the source provider, the user associated with the source provider must
    /// have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html">Source provider access</a> in the <i>AWS CodeBuild User Guide</i>.</p>
    ///         <note>
    ///             <p> The status of a build triggered by a webhook is always reported to your source
    ///                 provider. </p>
    ///         </note>
    public let reportBuildStatus: Bool?
    /// <p>An identifier for this project source. The identifier can only contain
    ///           alphanumeric characters and underscores, and must be less than 128 characters in length. </p>
    public let sourceIdentifier: String?
    /// <p>The type of repository that contains the source code to be built. Valid values
    ///             include:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>CODEPIPELINE</code>: The source code settings are specified in the
    ///                     source action of a pipeline in AWS CodePipeline.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>GITHUB</code>: The source code is in a GitHub or GitHub Enterprise Cloud
    ///                     repository.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>GITHUB_ENTERPRISE</code>: The source code is in a GitHub Enterprise
    ///                     Server repository.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>NO_SOURCE</code>: The project does not have input source code.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <code>S3</code>: The source code is in an Amazon S3 bucket.</p>
    ///             </li>
    ///          </ul>
    public let type: SourceType?

    public init (
        auth: SourceAuth? = nil,
        buildStatusConfig: BuildStatusConfig? = nil,
        buildspec: String? = nil,
        gitCloneDepth: Int? = nil,
        gitSubmodulesConfig: GitSubmodulesConfig? = nil,
        insecureSsl: Bool? = nil,
        location: String? = nil,
        reportBuildStatus: Bool? = nil,
        sourceIdentifier: String? = nil,
        type: SourceType? = nil
    )
    {
        self.auth = auth
        self.buildStatusConfig = buildStatusConfig
        self.buildspec = buildspec
        self.gitCloneDepth = gitCloneDepth
        self.gitSubmodulesConfig = gitSubmodulesConfig
        self.insecureSsl = insecureSsl
        self.location = location
        self.reportBuildStatus = reportBuildStatus
        self.sourceIdentifier = sourceIdentifier
        self.type = type
    }
}
