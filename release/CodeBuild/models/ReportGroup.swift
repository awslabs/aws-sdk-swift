// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A series of reports. Each report contains information about the results from running a
///             series of test cases. You specify the test cases for a report group in the buildspec for
///             a build project using one or more paths to the test case files. </p>
public struct ReportGroup: Equatable {
    /// <p>The ARN of the <code>ReportGroup</code>.
    ///     </p>
    public let arn: String?
    /// <p>The date and time this <code>ReportGroup</code> was created. </p>
    public let created: Date?
    /// <p>Information about the destination where the raw data of this <code>ReportGroup</code>
    ///             is exported. </p>
    public let exportConfig: ReportExportConfig?
    /// <p>The date and time this <code>ReportGroup</code> was last modified. </p>
    public let lastModified: Date?
    /// <p>The name of the <code>ReportGroup</code>.
    ///     </p>
    public let name: String?
    /// <p>The status of the report group. This property is read-only.</p>
    ///          <p>This can be one of the following values:</p>
    ///          <dl>
    ///             <dt>ACTIVE</dt>
    ///             <dd>
    ///                <p>The report group is active.</p>
    ///             </dd>
    ///             <dt>DELETING</dt>
    ///             <dd>
    ///                <p>The report group is in the process of being deleted.</p>
    ///             </dd>
    ///          </dl>
    public let status: ReportGroupStatusType?
    /// <p>A list of tag key and value pairs associated with this report group. </p>
    ///         <p>These tags are available for use by AWS services that support AWS CodeBuild report group
    ///       tags.</p>
    public let tags: [Tag]?
    /// <p>The type of the <code>ReportGroup</code>. This can be one of the following
    ///             values:</p>
    ///          <dl>
    ///             <dt>CODE_COVERAGE</dt>
    ///             <dd>
    ///                <p>The report group contains code coverage reports.</p>
    ///             </dd>
    ///             <dt>TEST</dt>
    ///             <dd>
    ///                <p>The report group contains test reports.</p>
    ///             </dd>
    ///          </dl>
    public let type: ReportType?

    public init (
        arn: String? = nil,
        created: Date? = nil,
        exportConfig: ReportExportConfig? = nil,
        lastModified: Date? = nil,
        name: String? = nil,
        status: ReportGroupStatusType? = nil,
        tags: [Tag]? = nil,
        type: ReportType? = nil
    )
    {
        self.arn = arn
        self.created = created
        self.exportConfig = exportConfig
        self.lastModified = lastModified
        self.name = name
        self.status = status
        self.tags = tags
        self.type = type
    }
}
