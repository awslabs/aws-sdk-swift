// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum LanguageType {
    case android
    case base
    case docker
    case dotnet
    case golang
    case java
    case nodeJs
    case php
    case python
    case ruby
    case sdkUnknown(String)
}

extension LanguageType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [LanguageType] {
        return [
            .android,
            .base,
            .docker,
            .dotnet,
            .golang,
            .java,
            .nodeJs,
            .php,
            .python,
            .ruby,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .android: return "ANDROID"
        case .base: return "BASE"
        case .docker: return "DOCKER"
        case .dotnet: return "DOTNET"
        case .golang: return "GOLANG"
        case .java: return "JAVA"
        case .nodeJs: return "NODE_JS"
        case .php: return "PHP"
        case .python: return "PYTHON"
        case .ruby: return "RUBY"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = LanguageType(rawValue: rawValue) ?? LanguageType.sdkUnknown(rawValue)
    }
}
