// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DebugSession: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case sessionEnabled
        case sessionTarget
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let sessionEnabled = sessionEnabled {
            try encodeContainer.encode(sessionEnabled, forKey: .sessionEnabled)
        }
        if let sessionTarget = sessionTarget {
            try encodeContainer.encode(sessionTarget, forKey: .sessionTarget)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sessionEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .sessionEnabled)
        sessionEnabled = sessionEnabledDecoded
        let sessionTargetDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sessionTarget)
        sessionTarget = sessionTargetDecoded
    }
}
