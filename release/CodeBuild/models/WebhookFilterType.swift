// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum WebhookFilterType {
    case actorAccountId
    case baseRef
    case commitMessage
    case event
    case filePath
    case headRef
    case sdkUnknown(String)
}

extension WebhookFilterType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [WebhookFilterType] {
        return [
            .actorAccountId,
            .baseRef,
            .commitMessage,
            .event,
            .filePath,
            .headRef,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .actorAccountId: return "ACTOR_ACCOUNT_ID"
        case .baseRef: return "BASE_REF"
        case .commitMessage: return "COMMIT_MESSAGE"
        case .event: return "EVENT"
        case .filePath: return "FILE_PATH"
        case .headRef: return "HEAD_REF"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = WebhookFilterType(rawValue: rawValue) ?? WebhookFilterType.sdkUnknown(rawValue)
    }
}
