// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Information about the results from running a series of test cases during the run of a
///             build project. The test cases are specified in the buildspec for the build project using
///             one or more paths to the test case files. You can specify any type of tests you want,
///             such as unit tests, integration tests, and functional tests. </p>
public struct Report: Equatable {
    /// <p> The ARN of the report run. </p>
    public let arn: String?
    /// <p>A <code>CodeCoverageReportSummary</code> object that contains a code coverage summary for
    ///             this report.</p>
    public let codeCoverageSummary: CodeCoverageReportSummary?
    /// <p> The date and time this report run occurred. </p>
    public let created: Date?
    /// <p> The ARN of the build run that generated this report. </p>
    public let executionId: String?
    /// <p> The date and time a report expires. A report expires 30 days after it is created. An
    ///       expired report is not available to view in CodeBuild. </p>
    public let expired: Date?
    /// <p> Information about where the raw data used to generate this report was exported.
    ///     </p>
    public let exportConfig: ReportExportConfig?
    /// <p> The name of the report that was run. </p>
    public let name: String?
    /// <p> The ARN of the report group associated with this report. </p>
    public let reportGroupArn: String?
    /// <p> The status of this report. </p>
    public let status: ReportStatusType?
    /// <p> A <code>TestReportSummary</code> object that contains information about this test
    ///       report. </p>
    public let testSummary: TestReportSummary?
    /// <p> A boolean that specifies if this report run is truncated. The list of test cases is
    ///       truncated after the maximum number of test cases is reached. </p>
    public let truncated: Bool?
    /// <p>The type of the report that was run.</p>
    ///          <dl>
    ///             <dt>CODE_COVERAGE</dt>
    ///             <dd>
    ///                <p>A code coverage report.</p>
    ///             </dd>
    ///             <dt>TEST</dt>
    ///             <dd>
    ///                <p>A test report.</p>
    ///             </dd>
    ///          </dl>
    public let type: ReportType?

    public init (
        arn: String? = nil,
        codeCoverageSummary: CodeCoverageReportSummary? = nil,
        created: Date? = nil,
        executionId: String? = nil,
        expired: Date? = nil,
        exportConfig: ReportExportConfig? = nil,
        name: String? = nil,
        reportGroupArn: String? = nil,
        status: ReportStatusType? = nil,
        testSummary: TestReportSummary? = nil,
        truncated: Bool? = nil,
        type: ReportType? = nil
    )
    {
        self.arn = arn
        self.codeCoverageSummary = codeCoverageSummary
        self.created = created
        self.executionId = executionId
        self.expired = expired
        self.exportConfig = exportConfig
        self.name = name
        self.reportGroupArn = reportGroupArn
        self.status = status
        self.testSummary = testSummary
        self.truncated = truncated
        self.type = type
    }
}
