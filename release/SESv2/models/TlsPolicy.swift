// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies whether messages that use the configuration set are required to use
///             Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only
///             delivered if a TLS connection can be established. If the value is <code>Optional</code>,
///             messages can be delivered in plain text if a TLS connection can't be established.</p>
public enum TlsPolicy {
    case `optional`
    case require
    case sdkUnknown(String)
}

extension TlsPolicy : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [TlsPolicy] {
        return [
            .optional,
            .require,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .optional: return "OPTIONAL"
        case .require: return "REQUIRE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = TlsPolicy(rawValue: rawValue) ?? TlsPolicy.sdkUnknown(rawValue)
    }
}
