// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImportDataSource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dataFormat = "DataFormat"
        case s3Url = "S3Url"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dataFormat = dataFormat {
            try encodeContainer.encode(dataFormat.rawValue, forKey: .dataFormat)
        }
        if let s3Url = s3Url {
            try encodeContainer.encode(s3Url, forKey: .s3Url)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let s3UrlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .s3Url)
        s3Url = s3UrlDecoded
        let dataFormatDecoded = try containerValues.decodeIfPresent(DataFormat.self, forKey: .dataFormat)
        dataFormat = dataFormatDecoded
    }
}
