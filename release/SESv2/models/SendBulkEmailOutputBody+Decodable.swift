// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendBulkEmailOutputBody: Equatable {
    public let bulkEmailEntryResults: [BulkEmailEntryResult]?
}

extension SendBulkEmailOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bulkEmailEntryResults = "BulkEmailEntryResults"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bulkEmailEntryResultsContainer = try containerValues.decodeIfPresent([BulkEmailEntryResult].self, forKey: .bulkEmailEntryResults)
        var bulkEmailEntryResultsDecoded0:[BulkEmailEntryResult]? = nil
        if let bulkEmailEntryResultsContainer = bulkEmailEntryResultsContainer {
            bulkEmailEntryResultsDecoded0 = [BulkEmailEntryResult]()
            for structure0 in bulkEmailEntryResultsContainer {
                bulkEmailEntryResultsDecoded0?.append(structure0)
            }
        }
        bulkEmailEntryResults = bulkEmailEntryResultsDecoded0
    }
}
