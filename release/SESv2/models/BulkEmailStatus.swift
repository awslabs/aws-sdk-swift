// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum BulkEmailStatus {
    case accountDailyQuotaExceeded
    case accountSendingPaused
    case accountSuspended
    case accountThrottled
    case configurationSetNotFound
    case configurationSetSendingPaused
    case failed
    case invalidParameter
    case invalidSendingPoolName
    case mailFromDomainNotVerified
    case messageRejected
    case success
    case templateNotFound
    case transientFailure
    case sdkUnknown(String)
}

extension BulkEmailStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [BulkEmailStatus] {
        return [
            .accountDailyQuotaExceeded,
            .accountSendingPaused,
            .accountSuspended,
            .accountThrottled,
            .configurationSetNotFound,
            .configurationSetSendingPaused,
            .failed,
            .invalidParameter,
            .invalidSendingPoolName,
            .mailFromDomainNotVerified,
            .messageRejected,
            .success,
            .templateNotFound,
            .transientFailure,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accountDailyQuotaExceeded: return "ACCOUNT_DAILY_QUOTA_EXCEEDED"
        case .accountSendingPaused: return "ACCOUNT_SENDING_PAUSED"
        case .accountSuspended: return "ACCOUNT_SUSPENDED"
        case .accountThrottled: return "ACCOUNT_THROTTLED"
        case .configurationSetNotFound: return "CONFIGURATION_SET_NOT_FOUND"
        case .configurationSetSendingPaused: return "CONFIGURATION_SET_SENDING_PAUSED"
        case .failed: return "FAILED"
        case .invalidParameter: return "INVALID_PARAMETER"
        case .invalidSendingPoolName: return "INVALID_SENDING_POOL_NAME"
        case .mailFromDomainNotVerified: return "MAIL_FROM_DOMAIN_NOT_VERIFIED"
        case .messageRejected: return "MESSAGE_REJECTED"
        case .success: return "SUCCESS"
        case .templateNotFound: return "TEMPLATE_NOT_FOUND"
        case .transientFailure: return "TRANSIENT_FAILURE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = BulkEmailStatus(rawValue: rawValue) ?? BulkEmailStatus.sdkUnknown(rawValue)
    }
}
