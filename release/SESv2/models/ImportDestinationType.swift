// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The destination of the import job, which can be used to list import jobs that have a
///             certain <code>ImportDestinationType</code>.</p>
public enum ImportDestinationType {
    case contactList
    case suppressionList
    case sdkUnknown(String)
}

extension ImportDestinationType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ImportDestinationType] {
        return [
            .contactList,
            .suppressionList,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .contactList: return "CONTACT_LIST"
        case .suppressionList: return "SUPPRESSION_LIST"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ImportDestinationType(rawValue: rawValue) ?? ImportDestinationType.sdkUnknown(rawValue)
    }
}
