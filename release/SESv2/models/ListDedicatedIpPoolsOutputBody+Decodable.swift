// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDedicatedIpPoolsOutputBody: Equatable {
    public let dedicatedIpPools: [String]?
    public let nextToken: String?
}

extension ListDedicatedIpPoolsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dedicatedIpPools = "DedicatedIpPools"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dedicatedIpPoolsContainer = try containerValues.decodeIfPresent([String].self, forKey: .dedicatedIpPools)
        var dedicatedIpPoolsDecoded0:[String]? = nil
        if let dedicatedIpPoolsContainer = dedicatedIpPoolsContainer {
            dedicatedIpPoolsDecoded0 = [String]()
            for string0 in dedicatedIpPoolsContainer {
                dedicatedIpPoolsDecoded0?.append(string0)
            }
        }
        dedicatedIpPools = dedicatedIpPoolsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
