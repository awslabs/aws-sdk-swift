// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccountOutputBody: Equatable {
    public let dedicatedIpAutoWarmupEnabled: Bool
    public let enforcementStatus: String?
    public let productionAccessEnabled: Bool
    public let sendQuota: SendQuota?
    public let sendingEnabled: Bool
    public let suppressionAttributes: SuppressionAttributes?
    public let details: AccountDetails?
}

extension GetAccountOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dedicatedIpAutoWarmupEnabled = "DedicatedIpAutoWarmupEnabled"
        case details = "Details"
        case enforcementStatus = "EnforcementStatus"
        case productionAccessEnabled = "ProductionAccessEnabled"
        case sendQuota = "SendQuota"
        case sendingEnabled = "SendingEnabled"
        case suppressionAttributes = "SuppressionAttributes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let dedicatedIpAutoWarmupEnabledDecoded = try containerValues.decode(Bool.self, forKey: .dedicatedIpAutoWarmupEnabled)
        dedicatedIpAutoWarmupEnabled = dedicatedIpAutoWarmupEnabledDecoded
        let enforcementStatusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .enforcementStatus)
        enforcementStatus = enforcementStatusDecoded
        let productionAccessEnabledDecoded = try containerValues.decode(Bool.self, forKey: .productionAccessEnabled)
        productionAccessEnabled = productionAccessEnabledDecoded
        let sendQuotaDecoded = try containerValues.decodeIfPresent(SendQuota.self, forKey: .sendQuota)
        sendQuota = sendQuotaDecoded
        let sendingEnabledDecoded = try containerValues.decode(Bool.self, forKey: .sendingEnabled)
        sendingEnabled = sendingEnabledDecoded
        let suppressionAttributesDecoded = try containerValues.decodeIfPresent(SuppressionAttributes.self, forKey: .suppressionAttributes)
        suppressionAttributes = suppressionAttributesDecoded
        let detailsDecoded = try containerValues.decodeIfPresent(AccountDetails.self, forKey: .details)
        details = detailsDecoded
    }
}
