// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContactsOutputBody: Equatable {
    public let contacts: [Contact]?
    public let nextToken: String?
}

extension ListContactsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case contacts = "Contacts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactsContainer = try containerValues.decodeIfPresent([Contact].self, forKey: .contacts)
        var contactsDecoded0:[Contact]? = nil
        if let contactsContainer = contactsContainer {
            contactsDecoded0 = [Contact]()
            for structure0 in contactsContainer {
                contactsDecoded0?.append(structure0)
            }
        }
        contacts = contactsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
