// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendCustomVerificationEmailInputBody: Equatable {
    public let emailAddress: String?
    public let templateName: String?
    public let configurationSetName: String?
}

extension SendCustomVerificationEmailInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case configurationSetName = "ConfigurationSetName"
        case emailAddress = "EmailAddress"
        case templateName = "TemplateName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let emailAddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .emailAddress)
        emailAddress = emailAddressDecoded
        let templateNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .templateName)
        templateName = templateNameDecoded
        let configurationSetNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .configurationSetName)
        configurationSetName = configurationSetNameDecoded
    }
}
