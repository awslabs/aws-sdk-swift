// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEmailIdentitiesOutputBody: Equatable {
    public let emailIdentities: [IdentityInfo]?
    public let nextToken: String?
}

extension ListEmailIdentitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case emailIdentities = "EmailIdentities"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let emailIdentitiesContainer = try containerValues.decodeIfPresent([IdentityInfo].self, forKey: .emailIdentities)
        var emailIdentitiesDecoded0:[IdentityInfo]? = nil
        if let emailIdentitiesContainer = emailIdentitiesContainer {
            emailIdentitiesDecoded0 = [IdentityInfo]()
            for structure0 in emailIdentitiesContainer {
                emailIdentitiesDecoded0?.append(structure0)
            }
        }
        emailIdentities = emailIdentitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
