// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomVerificationEmailTemplatesOutputBody: Equatable {
    public let customVerificationEmailTemplates: [CustomVerificationEmailTemplateMetadata]?
    public let nextToken: String?
}

extension ListCustomVerificationEmailTemplatesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customVerificationEmailTemplates = "CustomVerificationEmailTemplates"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customVerificationEmailTemplatesContainer = try containerValues.decodeIfPresent([CustomVerificationEmailTemplateMetadata].self, forKey: .customVerificationEmailTemplates)
        var customVerificationEmailTemplatesDecoded0:[CustomVerificationEmailTemplateMetadata]? = nil
        if let customVerificationEmailTemplatesContainer = customVerificationEmailTemplatesContainer {
            customVerificationEmailTemplatesDecoded0 = [CustomVerificationEmailTemplateMetadata]()
            for structure0 in customVerificationEmailTemplatesContainer {
                customVerificationEmailTemplatesDecoded0?.append(structure0)
            }
        }
        customVerificationEmailTemplates = customVerificationEmailTemplatesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
