// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateContactInputBody: Equatable {
    public let topicPreferences: [TopicPreference]?
    public let unsubscribeAll: Bool
    public let attributesData: String?
}

extension UpdateContactInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributesData = "AttributesData"
        case topicPreferences = "TopicPreferences"
        case unsubscribeAll = "UnsubscribeAll"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let topicPreferencesContainer = try containerValues.decodeIfPresent([TopicPreference].self, forKey: .topicPreferences)
        var topicPreferencesDecoded0:[TopicPreference]? = nil
        if let topicPreferencesContainer = topicPreferencesContainer {
            topicPreferencesDecoded0 = [TopicPreference]()
            for structure0 in topicPreferencesContainer {
                topicPreferencesDecoded0?.append(structure0)
            }
        }
        topicPreferences = topicPreferencesDecoded0
        let unsubscribeAllDecoded = try containerValues.decode(Bool.self, forKey: .unsubscribeAll)
        unsubscribeAll = unsubscribeAllDecoded
        let attributesDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .attributesData)
        attributesData = attributesDataDecoded
    }
}
