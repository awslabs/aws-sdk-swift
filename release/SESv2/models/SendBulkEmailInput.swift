// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a request to send email messages to multiple destinations using Amazon SES. For
///             more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer
///                 Guide</a>.</p>
public struct SendBulkEmailInput: Equatable {
    /// <p>The list of bulk email entry objects.</p>
    public let bulkEmailEntries: [BulkEmailEntry]?
    /// <p>The name of the configuration set that you want to use when sending the email.</p>
    public let configurationSetName: String?
    /// <p>An object that contains the body of the message. You can specify a template
    ///             message.</p>
    public let defaultContent: BulkEmailContent?
    /// <p>A list of tags, in the form of name/value pairs, to apply to an email that you send
    ///             using the <code>SendEmail</code> operation. Tags correspond to characteristics of the
    ///             email that you define, so that you can publish email sending events.</p>
    public let defaultEmailTags: [MessageTag]?
    /// <p>The address that you want bounce and complaint notifications to be sent to.</p>
    public let feedbackForwardingEmailAddress: String?
    /// <p>This parameter is used only for sending authorization. It is the ARN of the identity
    ///             that is associated with the sending authorization policy that permits you to use the
    ///             email address specified in the <code>FeedbackForwardingEmailAddress</code>
    ///             parameter.</p>
    ///         <p>For example, if the owner of example.com (which has ARN
    ///             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
    ///             authorizes you to use feedback@example.com, then you would specify the
    ///                 <code>FeedbackForwardingEmailAddressIdentityArn</code> to be
    ///             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
    ///                 <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>
    ///         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    public let feedbackForwardingEmailAddressIdentityArn: String?
    /// <p>The email address that you want to use as the "From" address for the email. The
    ///             address that you specify has to be verified.</p>
    public let fromEmailAddress: String?
    /// <p>This parameter is used only for sending authorization. It is the ARN of the identity
    ///             that is associated with the sending authorization policy that permits you to use the
    ///             email address specified in the <code>FromEmailAddress</code> parameter.</p>
    ///         <p>For example, if the owner of example.com (which has ARN
    ///             arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that
    ///             authorizes you to use sender@example.com, then you would specify the
    ///                 <code>FromEmailAddressIdentityArn</code> to be
    ///             arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
    ///                 <code>FromEmailAddress</code> to be sender@example.com.</p>
    ///         <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    public let fromEmailAddressIdentityArn: String?
    /// <p>The "Reply-to" email addresses for the message. When the recipient replies to the
    ///             message, each Reply-to address receives the reply.</p>
    public let replyToAddresses: [String]?

    public init (
        bulkEmailEntries: [BulkEmailEntry]? = nil,
        configurationSetName: String? = nil,
        defaultContent: BulkEmailContent? = nil,
        defaultEmailTags: [MessageTag]? = nil,
        feedbackForwardingEmailAddress: String? = nil,
        feedbackForwardingEmailAddressIdentityArn: String? = nil,
        fromEmailAddress: String? = nil,
        fromEmailAddressIdentityArn: String? = nil,
        replyToAddresses: [String]? = nil
    )
    {
        self.bulkEmailEntries = bulkEmailEntries
        self.configurationSetName = configurationSetName
        self.defaultContent = defaultContent
        self.defaultEmailTags = defaultEmailTags
        self.feedbackForwardingEmailAddress = feedbackForwardingEmailAddress
        self.feedbackForwardingEmailAddressIdentityArn = feedbackForwardingEmailAddressIdentityArn
        self.fromEmailAddress = fromEmailAddress
        self.fromEmailAddressIdentityArn = fromEmailAddressIdentityArn
        self.replyToAddresses = replyToAddresses
    }
}
