// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDomainDeliverabilityCampaignsOutputBody: Equatable {
    public let domainDeliverabilityCampaigns: [DomainDeliverabilityCampaign]?
    public let nextToken: String?
}

extension ListDomainDeliverabilityCampaignsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case domainDeliverabilityCampaigns = "DomainDeliverabilityCampaigns"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainDeliverabilityCampaignsContainer = try containerValues.decodeIfPresent([DomainDeliverabilityCampaign].self, forKey: .domainDeliverabilityCampaigns)
        var domainDeliverabilityCampaignsDecoded0:[DomainDeliverabilityCampaign]? = nil
        if let domainDeliverabilityCampaignsContainer = domainDeliverabilityCampaignsContainer {
            domainDeliverabilityCampaignsDecoded0 = [DomainDeliverabilityCampaign]()
            for structure0 in domainDeliverabilityCampaignsContainer {
                domainDeliverabilityCampaignsDecoded0?.append(structure0)
            }
        }
        domainDeliverabilityCampaigns = domainDeliverabilityCampaignsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
