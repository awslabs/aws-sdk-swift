// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateEmailIdentityOutputBody: Equatable {
    public let identityType: IdentityType?
    public let verifiedForSendingStatus: Bool
    public let dkimAttributes: DkimAttributes?
}

extension CreateEmailIdentityOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dkimAttributes = "DkimAttributes"
        case identityType = "IdentityType"
        case verifiedForSendingStatus = "VerifiedForSendingStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityTypeDecoded = try containerValues.decodeIfPresent(IdentityType.self, forKey: .identityType)
        identityType = identityTypeDecoded
        let verifiedForSendingStatusDecoded = try containerValues.decode(Bool.self, forKey: .verifiedForSendingStatus)
        verifiedForSendingStatus = verifiedForSendingStatusDecoded
        let dkimAttributesDecoded = try containerValues.decodeIfPresent(DkimAttributes.self, forKey: .dkimAttributes)
        dkimAttributes = dkimAttributesDecoded
    }
}
