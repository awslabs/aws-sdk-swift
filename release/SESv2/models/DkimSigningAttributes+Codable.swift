// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DkimSigningAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case domainSigningPrivateKey = "DomainSigningPrivateKey"
        case domainSigningSelector = "DomainSigningSelector"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let domainSigningPrivateKey = domainSigningPrivateKey {
            try encodeContainer.encode(domainSigningPrivateKey, forKey: .domainSigningPrivateKey)
        }
        if let domainSigningSelector = domainSigningSelector {
            try encodeContainer.encode(domainSigningSelector, forKey: .domainSigningSelector)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainSigningSelectorDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainSigningSelector)
        domainSigningSelector = domainSigningSelectorDecoded
        let domainSigningPrivateKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainSigningPrivateKey)
        domainSigningPrivateKey = domainSigningPrivateKeyDecoded
    }
}
