// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MailFromAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case behaviorOnMxFailure = "BehaviorOnMxFailure"
        case mailFromDomain = "MailFromDomain"
        case mailFromDomainStatus = "MailFromDomainStatus"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let behaviorOnMxFailure = behaviorOnMxFailure {
            try encodeContainer.encode(behaviorOnMxFailure.rawValue, forKey: .behaviorOnMxFailure)
        }
        if let mailFromDomain = mailFromDomain {
            try encodeContainer.encode(mailFromDomain, forKey: .mailFromDomain)
        }
        if let mailFromDomainStatus = mailFromDomainStatus {
            try encodeContainer.encode(mailFromDomainStatus.rawValue, forKey: .mailFromDomainStatus)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let mailFromDomainDecoded = try containerValues.decodeIfPresent(String.self, forKey: .mailFromDomain)
        mailFromDomain = mailFromDomainDecoded
        let mailFromDomainStatusDecoded = try containerValues.decodeIfPresent(MailFromDomainStatus.self, forKey: .mailFromDomainStatus)
        mailFromDomainStatus = mailFromDomainStatusDecoded
        let behaviorOnMxFailureDecoded = try containerValues.decodeIfPresent(BehaviorOnMxFailure.self, forKey: .behaviorOnMxFailure)
        behaviorOnMxFailure = behaviorOnMxFailureDecoded
    }
}
