// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListImportJobsOutputBody: Equatable {
    public let importJobs: [ImportJobSummary]?
    public let nextToken: String?
}

extension ListImportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case importJobs = "ImportJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let importJobsContainer = try containerValues.decodeIfPresent([ImportJobSummary].self, forKey: .importJobs)
        var importJobsDecoded0:[ImportJobSummary]? = nil
        if let importJobsContainer = importJobsContainer {
            importJobsDecoded0 = [ImportJobSummary]()
            for structure0 in importJobsContainer {
                importJobsDecoded0?.append(structure0)
            }
        }
        importJobs = importJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
