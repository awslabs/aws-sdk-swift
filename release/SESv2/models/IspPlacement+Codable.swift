// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IspPlacement: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case ispName = "IspName"
        case placementStatistics = "PlacementStatistics"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let ispName = ispName {
            try encodeContainer.encode(ispName, forKey: .ispName)
        }
        if let placementStatistics = placementStatistics {
            try encodeContainer.encode(placementStatistics, forKey: .placementStatistics)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ispNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ispName)
        ispName = ispNameDecoded
        let placementStatisticsDecoded = try containerValues.decodeIfPresent(PlacementStatistics.self, forKey: .placementStatistics)
        placementStatistics = placementStatisticsDecoded
    }
}
