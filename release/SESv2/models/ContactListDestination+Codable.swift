// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ContactListDestination: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case contactListImportAction = "ContactListImportAction"
        case contactListName = "ContactListName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let contactListImportAction = contactListImportAction {
            try encodeContainer.encode(contactListImportAction.rawValue, forKey: .contactListImportAction)
        }
        if let contactListName = contactListName {
            try encodeContainer.encode(contactListName, forKey: .contactListName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let contactListNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .contactListName)
        contactListName = contactListNameDecoded
        let contactListImportActionDecoded = try containerValues.decodeIfPresent(ContactListImportAction.self, forKey: .contactListImportAction)
        contactListImportAction = contactListImportActionDecoded
    }
}
