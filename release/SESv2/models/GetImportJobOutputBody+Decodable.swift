// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetImportJobOutputBody: Equatable {
    public let jobId: String?
    public let importDestination: ImportDestination?
    public let importDataSource: ImportDataSource?
    public let failureInfo: FailureInfo?
    public let jobStatus: JobStatus?
    public let createdTimestamp: Date?
    public let completedTimestamp: Date?
    public let processedRecordsCount: Int?
    public let failedRecordsCount: Int?
}

extension GetImportJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case completedTimestamp = "CompletedTimestamp"
        case createdTimestamp = "CreatedTimestamp"
        case failedRecordsCount = "FailedRecordsCount"
        case failureInfo = "FailureInfo"
        case importDataSource = "ImportDataSource"
        case importDestination = "ImportDestination"
        case jobId = "JobId"
        case jobStatus = "JobStatus"
        case processedRecordsCount = "ProcessedRecordsCount"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let importDestinationDecoded = try containerValues.decodeIfPresent(ImportDestination.self, forKey: .importDestination)
        importDestination = importDestinationDecoded
        let importDataSourceDecoded = try containerValues.decodeIfPresent(ImportDataSource.self, forKey: .importDataSource)
        importDataSource = importDataSourceDecoded
        let failureInfoDecoded = try containerValues.decodeIfPresent(FailureInfo.self, forKey: .failureInfo)
        failureInfo = failureInfoDecoded
        let jobStatusDecoded = try containerValues.decodeIfPresent(JobStatus.self, forKey: .jobStatus)
        jobStatus = jobStatusDecoded
        let createdTimestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdTimestamp)
        createdTimestamp = createdTimestampDecoded
        let completedTimestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .completedTimestamp)
        completedTimestamp = completedTimestampDecoded
        let processedRecordsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .processedRecordsCount)
        processedRecordsCount = processedRecordsCountDecoded
        let failedRecordsCountDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .failedRecordsCount)
        failedRecordsCount = failedRecordsCountDecoded
    }
}
