// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Retrieve deliverability data for all the campaigns that used a specific domain to send
///             email during a specified time range. This data is available for a domain only if you
///             enabled the Deliverability dashboard.</p>
public struct ListDomainDeliverabilityCampaignsInput: Equatable {
    /// <p>The last day, in Unix time format, that you want to obtain deliverability data for.
    ///             This value has to be less than or equal to 30 days after the value of the
    ///                 <code>StartDate</code> parameter.</p>
    public let endDate: Date?
    /// <p>A token thatâ€™s returned from a previous call to the
    ///                 <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the
    ///             position of a campaign in the list of campaigns.</p>
    public let nextToken: String?
    /// <p>The maximum number of results to include in response to a single call to the
    ///                 <code>ListDomainDeliverabilityCampaigns</code> operation. If the number of results
    ///             is larger than the number that you specify in this parameter, the response includes a
    ///                 <code>NextToken</code> element, which you can use to obtain additional
    ///             results.</p>
    public let pageSize: Int?
    /// <p>The first day, in Unix time format, that you want to obtain deliverability data
    ///             for.</p>
    public let startDate: Date?
    /// <p>The domain to obtain deliverability data for.</p>
    public let subscribedDomain: String?

    public init (
        endDate: Date? = nil,
        nextToken: String? = nil,
        pageSize: Int? = nil,
        startDate: Date? = nil,
        subscribedDomain: String? = nil
    )
    {
        self.endDate = endDate
        self.nextToken = nextToken
        self.pageSize = pageSize
        self.startDate = startDate
        self.subscribedDomain = subscribedDomain
    }
}
