// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>Amazon SES API v2</fullname>
///         <p>Welcome to the Amazon SES API v2 Reference. This guide provides information about the Amazon SES API v2,
///             including supported operations, data types, parameters, and schemas.</p>
///         <p>
///             <a href="https://aws.amazon.com/pinpoint">Amazon SES</a> is an AWS service that
///             you can use to send email messages to your customers.</p>
///         <p>If you're new to Amazon SES API v2, you might find it helpful to also review the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/">Amazon Simple Email Service Developer
///                 Guide</a>. The <i>Amazon SES Developer Guide</i> provides information
///             and code samples that demonstrate how to use Amazon SES API v2 features programmatically.</p>
///         <p>The Amazon SES API v2 is available in several AWS Regions and it provides an endpoint for each
///             of these Regions. For a list of all the Regions and endpoints where the API is currently
///             available, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#ses_region">AWS Service Endpoints</a> in the <i>Amazon Web Services General Reference</i>. To
///             learn more about AWS Regions, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande-manage.html">Managing AWS Regions</a> in the
///                 <i>Amazon Web Services General Reference</i>.</p>
///         <p>In each Region, AWS maintains multiple Availability Zones. These Availability Zones
///             are physically isolated from each other, but are united by private, low-latency,
///             high-throughput, and highly redundant network connections. These Availability Zones
///             enable us to provide very high levels of availability and redundancy, while also
///             minimizing latency. To learn more about the number of Availability Zones that are
///             available in each Region, see <a href="http://aws.amazon.com/about-aws/global-infrastructure/">AWS Global Infrastructure</a>.</p>
public protocol SesV2ClientProtocol {
    /// <p>Create a configuration set. <i>Configuration sets</i> are groups of
    ///             rules that you can apply to the emails that you send. You apply a configuration set to
    ///             an email by specifying the name of the configuration set when you call the Amazon SES API v2. When
    ///             you apply a configuration set to an email, all of the rules in that configuration set
    ///             are applied to the email. </p>
    func createConfigurationSet(input: CreateConfigurationSetInput, completion: @escaping (SdkResult<CreateConfigurationSetOutputResponse, CreateConfigurationSetOutputError>) -> Void)
    /// <p>Create an event destination. <i>Events</i> include message sends,
    ///             deliveries, opens, clicks, bounces, and complaints. <i>Event
    ///                 destinations</i> are places that you can send information about these events
    ///             to. For example, you can send event data to Amazon SNS to receive notifications when you
    ///             receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term
    ///             storage.</p>
    ///         <p>A single configuration set can include more than one event destination.</p>
    func createConfigurationSetEventDestination(input: CreateConfigurationSetEventDestinationInput, completion: @escaping (SdkResult<CreateConfigurationSetEventDestinationOutputResponse, CreateConfigurationSetEventDestinationOutputError>) -> Void)
    /// <p>Creates a contact, which is an end-user who is receiving the email, and adds them to a
    ///             contact list.</p>
    func createContact(input: CreateContactInput, completion: @escaping (SdkResult<CreateContactOutputResponse, CreateContactOutputError>) -> Void)
    /// <p>Creates a contact list.</p>
    func createContactList(input: CreateContactListInput, completion: @escaping (SdkResult<CreateContactListOutputResponse, CreateContactListOutputError>) -> Void)
    /// <p>Creates a new custom verification email template.</p>
    ///         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func createCustomVerificationEmailTemplate(input: CreateCustomVerificationEmailTemplateInput, completion: @escaping (SdkResult<CreateCustomVerificationEmailTemplateOutputResponse, CreateCustomVerificationEmailTemplateOutputError>) -> Void)
    /// <p>Create a new pool of dedicated IP addresses. A pool can include one or more dedicated
    ///             IP addresses that are associated with your AWS account. You can associate a pool with
    ///             a configuration set. When you send an email that uses that configuration set, the
    ///             message is sent from one of the addresses in the associated pool.</p>
    func createDedicatedIpPool(input: CreateDedicatedIpPoolInput, completion: @escaping (SdkResult<CreateDedicatedIpPoolOutputResponse, CreateDedicatedIpPoolOutputError>) -> Void)
    /// <p>Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled
    ///             by various email providers around the world. When you perform a predictive inbox placement test, you provide a
    ///             sample message that contains the content that you plan to send to your customers. Amazon SES
    ///             then sends that message to special email addresses spread across several major email
    ///             providers. After about 24 hours, the test is complete, and you can use the
    ///                 <code>GetDeliverabilityTestReport</code> operation to view the results of the
    ///             test.</p>
    func createDeliverabilityTestReport(input: CreateDeliverabilityTestReportInput, completion: @escaping (SdkResult<CreateDeliverabilityTestReportOutputResponse, CreateDeliverabilityTestReportOutputError>) -> Void)
    /// <p>Starts the process of verifying an email identity. An <i>identity</i> is
    ///             an email address or domain that you use when you send email. Before you can use an
    ///             identity to send email, you first have to verify it. By verifying an identity, you
    ///             demonstrate that you're the owner of the identity, and that you've given Amazon SES API v2
    ///             permission to send email from the identity.</p>
    ///         <p>When you verify an email address, Amazon SES sends an email to the address. Your email
    ///             address is verified as soon as you follow the link in the verification email.
    ///
    ///         </p>
    ///         <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code>
    ///             object, this operation provides a set of DKIM tokens. You can convert these tokens into
    ///             CNAME records, which you then add to the DNS configuration for your domain. Your domain
    ///             is verified when Amazon SES detects these records in the DNS configuration for your domain.
    ///             This verification method is known as <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
    ///         <p>Alternatively, you can perform the verification process by providing your own
    ///             public-private key pair. This verification method is known as Bring Your Own DKIM
    ///             (BYODKIM). To use BYODKIM, your call to the <code>CreateEmailIdentity</code> operation
    ///             has to include the <code>DkimSigningAttributes</code> object. When you specify this
    ///             object, you provide a selector (a component of the DNS record name that identifies the
    ///             public key that you want to use for DKIM authentication) and a private key.</p>
    ///         <p>When you verify a domain, this operation provides a set of DKIM tokens, which you can
    ///             convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your
    ///             domain. Your domain is verified when Amazon SES detects these records in the DNS
    ///             configuration for your domain. For some DNS providers, it can take 72 hours or more to
    ///             complete the domain verification process.</p>
    ///         <p>Additionally, you can associate an existing configuration set with the email identity that you're verifying.</p>
    func createEmailIdentity(input: CreateEmailIdentityInput, completion: @escaping (SdkResult<CreateEmailIdentityOutputResponse, CreateEmailIdentityOutputError>) -> Void)
    /// <p>Creates the specified sending authorization policy for the given identity (an email
    ///         address or a domain).</p>
    ///         <note>
    ///             <p>This API is for the identity owner only. If you have not verified the identity,
    ///                 this API will return an error.</p>
    ///         </note>
    ///         <p>Sending authorization is a feature that enables an identity owner to authorize other
    ///             senders to use its identities. For information about using sending authorization, see
    ///             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func createEmailIdentityPolicy(input: CreateEmailIdentityPolicyInput, completion: @escaping (SdkResult<CreateEmailIdentityPolicyOutputResponse, CreateEmailIdentityPolicyOutputError>) -> Void)
    /// <p>Creates an email template. Email templates enable you to send personalized email to
    ///             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES
    ///                 Developer Guide</a>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func createEmailTemplate(input: CreateEmailTemplateInput, completion: @escaping (SdkResult<CreateEmailTemplateOutputResponse, CreateEmailTemplateOutputError>) -> Void)
    /// <p>Creates an import job for a data destination.</p>
    func createImportJob(input: CreateImportJobInput, completion: @escaping (SdkResult<CreateImportJobOutputResponse, CreateImportJobOutputError>) -> Void)
    /// <p>Delete an existing configuration set.</p>
    ///         <p>
    ///             <i>Configuration sets</i> are groups of rules that you can apply to the
    ///             emails you send. You apply a configuration set to an email by including a reference to
    ///             the configuration set in the headers of the email. When you apply a configuration set to
    ///             an email, all of the rules in that configuration set are applied to the email.</p>
    func deleteConfigurationSet(input: DeleteConfigurationSetInput, completion: @escaping (SdkResult<DeleteConfigurationSetOutputResponse, DeleteConfigurationSetOutputError>) -> Void)
    /// <p>Delete an event destination.</p>
    ///         <p>
    ///             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
    ///             and complaints. <i>Event destinations</i> are places that you can send
    ///             information about these events to. For example, you can send event data to Amazon SNS to
    ///             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
    ///             stream data to Amazon S3 for long-term storage.</p>
    func deleteConfigurationSetEventDestination(input: DeleteConfigurationSetEventDestinationInput, completion: @escaping (SdkResult<DeleteConfigurationSetEventDestinationOutputResponse, DeleteConfigurationSetEventDestinationOutputError>) -> Void)
    /// <p>Removes a contact from a contact list.</p>
    func deleteContact(input: DeleteContactInput, completion: @escaping (SdkResult<DeleteContactOutputResponse, DeleteContactOutputError>) -> Void)
    /// <p>Deletes a contact list and all of the contacts on that list.</p>
    func deleteContactList(input: DeleteContactListInput, completion: @escaping (SdkResult<DeleteContactListOutputResponse, DeleteContactListOutputError>) -> Void)
    /// <p>Deletes an existing custom verification email template.</p>
    ///         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/es/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func deleteCustomVerificationEmailTemplate(input: DeleteCustomVerificationEmailTemplateInput, completion: @escaping (SdkResult<DeleteCustomVerificationEmailTemplateOutputResponse, DeleteCustomVerificationEmailTemplateOutputError>) -> Void)
    /// <p>Delete a dedicated IP pool.</p>
    func deleteDedicatedIpPool(input: DeleteDedicatedIpPoolInput, completion: @escaping (SdkResult<DeleteDedicatedIpPoolOutputResponse, DeleteDedicatedIpPoolOutputError>) -> Void)
    /// <p>Deletes an email identity. An identity can be either an email address or a domain
    ///             name.</p>
    func deleteEmailIdentity(input: DeleteEmailIdentityInput, completion: @escaping (SdkResult<DeleteEmailIdentityOutputResponse, DeleteEmailIdentityOutputError>) -> Void)
    /// <p>Deletes the specified sending authorization policy for the given identity (an email
    ///             address or a domain). This API returns successfully even if a policy with the specified
    ///             name does not exist.</p>
    ///         <note>
    ///             <p>This API is for the identity owner only. If you have not verified the identity,
    ///                 this API will return an error.</p>
    ///         </note>
    ///         <p>Sending authorization is a feature that enables an identity owner to authorize other
    ///             senders to use its identities. For information about using sending authorization, see
    ///             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func deleteEmailIdentityPolicy(input: DeleteEmailIdentityPolicyInput, completion: @escaping (SdkResult<DeleteEmailIdentityPolicyOutputResponse, DeleteEmailIdentityPolicyOutputError>) -> Void)
    /// <p>Deletes an email template.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func deleteEmailTemplate(input: DeleteEmailTemplateInput, completion: @escaping (SdkResult<DeleteEmailTemplateOutputResponse, DeleteEmailTemplateOutputError>) -> Void)
    /// <p>Removes an email address from the suppression list for your account.</p>
    func deleteSuppressedDestination(input: DeleteSuppressedDestinationInput, completion: @escaping (SdkResult<DeleteSuppressedDestinationOutputResponse, DeleteSuppressedDestinationOutputError>) -> Void)
    /// <p>Obtain information about the email-sending status and capabilities of your Amazon SES
    ///             account in the current AWS Region.</p>
    func getAccount(input: GetAccountInput, completion: @escaping (SdkResult<GetAccountOutputResponse, GetAccountOutputError>) -> Void)
    /// <p>Retrieve a list of the blacklists that your dedicated IP addresses appear on.</p>
    func getBlacklistReports(input: GetBlacklistReportsInput, completion: @escaping (SdkResult<GetBlacklistReportsOutputResponse, GetBlacklistReportsOutputError>) -> Void)
    /// <p>Get information about an existing configuration set, including the dedicated IP pool
    ///             that it's associated with, whether or not it's enabled for sending email, and
    ///             more.</p>
    ///         <p>
    ///             <i>Configuration sets</i> are groups of rules that you can apply to the
    ///             emails you send. You apply a configuration set to an email by including a reference to
    ///             the configuration set in the headers of the email. When you apply a configuration set to
    ///             an email, all of the rules in that configuration set are applied to the email.</p>
    func getConfigurationSet(input: GetConfigurationSetInput, completion: @escaping (SdkResult<GetConfigurationSetOutputResponse, GetConfigurationSetOutputError>) -> Void)
    /// <p>Retrieve a list of event destinations that are associated with a configuration
    ///             set.</p>
    ///         <p>
    ///             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
    ///             and complaints. <i>Event destinations</i> are places that you can send
    ///             information about these events to. For example, you can send event data to Amazon SNS to
    ///             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
    ///             stream data to Amazon S3 for long-term storage.</p>
    func getConfigurationSetEventDestinations(input: GetConfigurationSetEventDestinationsInput, completion: @escaping (SdkResult<GetConfigurationSetEventDestinationsOutputResponse, GetConfigurationSetEventDestinationsOutputError>) -> Void)
    /// <p>Returns a contact from a contact list.</p>
    func getContact(input: GetContactInput, completion: @escaping (SdkResult<GetContactOutputResponse, GetContactOutputError>) -> Void)
    /// <p>Returns contact list metadata. It does not return any information about the contacts
    ///             present in the list.</p>
    func getContactList(input: GetContactListInput, completion: @escaping (SdkResult<GetContactListOutputResponse, GetContactListOutputError>) -> Void)
    /// <p>Returns the custom email verification template for the template name you
    ///             specify.</p>
    ///         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func getCustomVerificationEmailTemplate(input: GetCustomVerificationEmailTemplateInput, completion: @escaping (SdkResult<GetCustomVerificationEmailTemplateOutputResponse, GetCustomVerificationEmailTemplateOutputError>) -> Void)
    /// <p>Get information about a dedicated IP address, including the name of the dedicated IP
    ///             pool that it's associated with, as well information about the automatic warm-up process
    ///             for the address.</p>
    func getDedicatedIp(input: GetDedicatedIpInput, completion: @escaping (SdkResult<GetDedicatedIpOutputResponse, GetDedicatedIpOutputError>) -> Void)
    /// <p>List the dedicated IP addresses that are associated with your AWS
    ///             account.</p>
    func getDedicatedIps(input: GetDedicatedIpsInput, completion: @escaping (SdkResult<GetDedicatedIpsOutputResponse, GetDedicatedIpsOutputError>) -> Void)
    /// <p>Retrieve information about the status of the Deliverability dashboard for your account. When
    ///             the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other
    ///             metrics for the domains that you use to send email. You also gain the ability to perform
    ///             predictive inbox placement tests.</p>
    ///
    ///         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
    ///             to any other fees that you accrue by using Amazon SES and other AWS services. For more
    ///             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
    func getDeliverabilityDashboardOptions(input: GetDeliverabilityDashboardOptionsInput, completion: @escaping (SdkResult<GetDeliverabilityDashboardOptionsOutputResponse, GetDeliverabilityDashboardOptionsOutputError>) -> Void)
    /// <p>Retrieve the results of a predictive inbox placement test.</p>
    func getDeliverabilityTestReport(input: GetDeliverabilityTestReportInput, completion: @escaping (SdkResult<GetDeliverabilityTestReportOutputResponse, GetDeliverabilityTestReportOutputError>) -> Void)
    /// <p>Retrieve all the deliverability data for a specific campaign. This data is available
    ///             for a campaign only if the campaign sent email by using a domain that the
    ///             Deliverability dashboard is enabled for.</p>
    func getDomainDeliverabilityCampaign(input: GetDomainDeliverabilityCampaignInput, completion: @escaping (SdkResult<GetDomainDeliverabilityCampaignOutputResponse, GetDomainDeliverabilityCampaignOutputError>) -> Void)
    /// <p>Retrieve inbox placement and engagement rates for the domains that you use to send
    ///             email.</p>
    func getDomainStatisticsReport(input: GetDomainStatisticsReportInput, completion: @escaping (SdkResult<GetDomainStatisticsReportOutputResponse, GetDomainStatisticsReportOutputError>) -> Void)
    /// <p>Provides information about a specific identity, including the identity's verification
    ///             status, sending authorization policies, its DKIM authentication status, and its custom
    ///             Mail-From settings.</p>
    func getEmailIdentity(input: GetEmailIdentityInput, completion: @escaping (SdkResult<GetEmailIdentityOutputResponse, GetEmailIdentityOutputError>) -> Void)
    /// <p>Returns the requested sending authorization policies for the given identity (an email
    ///             address or a domain). The policies are returned as a map of policy names to policy
    ///             contents. You can retrieve a maximum of 20 policies at a time.</p>
    ///         <note>
    ///             <p>This API is for the identity owner only. If you have not verified the identity,
    ///                 this API will return an error.</p>
    ///         </note>
    ///         <p>Sending authorization is a feature that enables an identity owner to authorize other
    ///             senders to use its identities. For information about using sending authorization, see
    ///             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func getEmailIdentityPolicies(input: GetEmailIdentityPoliciesInput, completion: @escaping (SdkResult<GetEmailIdentityPoliciesOutputResponse, GetEmailIdentityPoliciesOutputError>) -> Void)
    /// <p>Displays the template object (which includes the subject line, HTML part and text
    ///             part) for the template you specify.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func getEmailTemplate(input: GetEmailTemplateInput, completion: @escaping (SdkResult<GetEmailTemplateOutputResponse, GetEmailTemplateOutputError>) -> Void)
    /// <p>Provides information about an import job.</p>
    func getImportJob(input: GetImportJobInput, completion: @escaping (SdkResult<GetImportJobOutputResponse, GetImportJobOutputError>) -> Void)
    /// <p>Retrieves information about a specific email address that's on the suppression list
    ///             for your account.</p>
    func getSuppressedDestination(input: GetSuppressedDestinationInput, completion: @escaping (SdkResult<GetSuppressedDestinationOutputResponse, GetSuppressedDestinationOutputError>) -> Void)
    /// <p>List all of the configuration sets associated with your account in the current
    ///             region.</p>
    ///         <p>
    ///             <i>Configuration sets</i> are groups of rules that you can apply to the
    ///             emails you send. You apply a configuration set to an email by including a reference to
    ///             the configuration set in the headers of the email. When you apply a configuration set to
    ///             an email, all of the rules in that configuration set are applied to the email.</p>
    func listConfigurationSets(input: ListConfigurationSetsInput, completion: @escaping (SdkResult<ListConfigurationSetsOutputResponse, ListConfigurationSetsOutputError>) -> Void)
    /// <p>Lists all of the contact lists available.</p>
    func listContactLists(input: ListContactListsInput, completion: @escaping (SdkResult<ListContactListsOutputResponse, ListContactListsOutputError>) -> Void)
    /// <p>Lists the contacts present in a specific contact list.</p>
    func listContacts(input: ListContactsInput, completion: @escaping (SdkResult<ListContactsOutputResponse, ListContactsOutputError>) -> Void)
    /// <p>Lists the existing custom verification email templates for your account in the current
    ///             AWS Region.</p>
    ///         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func listCustomVerificationEmailTemplates(input: ListCustomVerificationEmailTemplatesInput, completion: @escaping (SdkResult<ListCustomVerificationEmailTemplatesOutputResponse, ListCustomVerificationEmailTemplatesOutputError>) -> Void)
    /// <p>List all of the dedicated IP pools that exist in your AWS account in the current
    ///             Region.</p>
    func listDedicatedIpPools(input: ListDedicatedIpPoolsInput, completion: @escaping (SdkResult<ListDedicatedIpPoolsOutputResponse, ListDedicatedIpPoolsOutputError>) -> Void)
    /// <p>Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For
    ///             predictive inbox placement tests that are complete, you can use the <code>GetDeliverabilityTestReport</code>
    ///             operation to view the results.</p>
    func listDeliverabilityTestReports(input: ListDeliverabilityTestReportsInput, completion: @escaping (SdkResult<ListDeliverabilityTestReportsOutputResponse, ListDeliverabilityTestReportsOutputError>) -> Void)
    /// <p>Retrieve deliverability data for all the campaigns that used a specific domain to send
    ///             email during a specified time range. This data is available for a domain only if you
    ///             enabled the Deliverability dashboard for the domain.</p>
    func listDomainDeliverabilityCampaigns(input: ListDomainDeliverabilityCampaignsInput, completion: @escaping (SdkResult<ListDomainDeliverabilityCampaignsOutputResponse, ListDomainDeliverabilityCampaignsOutputError>) -> Void)
    /// <p>Returns a list of all of the email identities that are associated with your AWS
    ///             account. An identity can be either an email address or a domain. This operation returns
    ///             identities that are verified as well as those that aren't. This operation returns
    ///             identities that are associated with Amazon SES and Amazon Pinpoint.</p>
    func listEmailIdentities(input: ListEmailIdentitiesInput, completion: @escaping (SdkResult<ListEmailIdentitiesOutputResponse, ListEmailIdentitiesOutputError>) -> Void)
    /// <p>Lists the email templates present in your Amazon SES account in the current AWS
    ///             Region.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func listEmailTemplates(input: ListEmailTemplatesInput, completion: @escaping (SdkResult<ListEmailTemplatesOutputResponse, ListEmailTemplatesOutputError>) -> Void)
    /// <p>Lists all of the import jobs.</p>
    func listImportJobs(input: ListImportJobsInput, completion: @escaping (SdkResult<ListImportJobsOutputResponse, ListImportJobsOutputError>) -> Void)
    /// <p>Retrieves a list of email addresses that are on the suppression list for your
    ///             account.</p>
    func listSuppressedDestinations(input: ListSuppressedDestinationsInput, completion: @escaping (SdkResult<ListSuppressedDestinationsOutputResponse, ListSuppressedDestinationsOutputError>) -> Void)
    /// <p>Retrieve a list of the tags (keys and values) that are associated with a specified
    ///             resource. A <i>tag</i> is a label that you optionally define and associate
    ///             with a resource. Each tag consists of a required <i>tag key</i> and an
    ///             optional associated <i>tag value</i>. A tag key is a general label that
    ///             acts as a category for more specific tag values. A tag value acts as a descriptor within
    ///             a tag key.</p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Enable or disable the automatic warm-up feature for dedicated IP addresses.</p>
    func putAccountDedicatedIpWarmupAttributes(input: PutAccountDedicatedIpWarmupAttributesInput, completion: @escaping (SdkResult<PutAccountDedicatedIpWarmupAttributesOutputResponse, PutAccountDedicatedIpWarmupAttributesOutputError>) -> Void)
    /// <p>Update your Amazon SES account details.</p>
    func putAccountDetails(input: PutAccountDetailsInput, completion: @escaping (SdkResult<PutAccountDetailsOutputResponse, PutAccountDetailsOutputError>) -> Void)
    /// <p>Enable or disable the ability of your account to send email.</p>
    func putAccountSendingAttributes(input: PutAccountSendingAttributesInput, completion: @escaping (SdkResult<PutAccountSendingAttributesOutputResponse, PutAccountSendingAttributesOutputError>) -> Void)
    /// <p>Change the settings for the account-level suppression list.</p>
    func putAccountSuppressionAttributes(input: PutAccountSuppressionAttributesInput, completion: @escaping (SdkResult<PutAccountSuppressionAttributesOutputResponse, PutAccountSuppressionAttributesOutputError>) -> Void)
    /// <p>Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools
    ///             to create groups of dedicated IP addresses for sending specific types of email.</p>
    func putConfigurationSetDeliveryOptions(input: PutConfigurationSetDeliveryOptionsInput, completion: @escaping (SdkResult<PutConfigurationSetDeliveryOptionsOutputResponse, PutConfigurationSetDeliveryOptionsOutputError>) -> Void)
    /// <p>Enable or disable collection of reputation metrics for emails that you send using a
    ///             particular configuration set in a specific AWS Region.</p>
    func putConfigurationSetReputationOptions(input: PutConfigurationSetReputationOptionsInput, completion: @escaping (SdkResult<PutConfigurationSetReputationOptionsOutputResponse, PutConfigurationSetReputationOptionsOutputError>) -> Void)
    /// <p>Enable or disable email sending for messages that use a particular configuration set
    ///             in a specific AWS Region.</p>
    func putConfigurationSetSendingOptions(input: PutConfigurationSetSendingOptionsInput, completion: @escaping (SdkResult<PutConfigurationSetSendingOptionsOutputResponse, PutConfigurationSetSendingOptionsOutputError>) -> Void)
    /// <p>Specify the account suppression list preferences for a configuration set.</p>
    func putConfigurationSetSuppressionOptions(input: PutConfigurationSetSuppressionOptionsInput, completion: @escaping (SdkResult<PutConfigurationSetSuppressionOptionsOutputResponse, PutConfigurationSetSuppressionOptionsOutputError>) -> Void)
    /// <p>Specify a custom domain to use for open and click tracking elements in email that you
    ///             send.</p>
    func putConfigurationSetTrackingOptions(input: PutConfigurationSetTrackingOptionsInput, completion: @escaping (SdkResult<PutConfigurationSetTrackingOptionsOutputResponse, PutConfigurationSetTrackingOptionsOutputError>) -> Void)
    /// <p>Move a dedicated IP address to an existing dedicated IP pool.</p>
    ///         <note>
    ///             <p>The dedicated IP address that you specify must already exist, and must be
    ///                 associated with your AWS account.
    ///
    ///             </p>
    ///             <p>The dedicated IP pool you specify must already exist. You can create a new pool by
    ///                 using the <code>CreateDedicatedIpPool</code> operation.</p>
    ///
    ///         </note>
    func putDedicatedIpInPool(input: PutDedicatedIpInPoolInput, completion: @escaping (SdkResult<PutDedicatedIpInPoolOutputResponse, PutDedicatedIpInPoolOutputError>) -> Void)
    /// <p></p>
    func putDedicatedIpWarmupAttributes(input: PutDedicatedIpWarmupAttributesInput, completion: @escaping (SdkResult<PutDedicatedIpWarmupAttributesOutputResponse, PutDedicatedIpWarmupAttributesOutputError>) -> Void)
    /// <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain
    ///             access to reputation, deliverability, and other metrics for the domains that you use to
    ///             send email. You also gain the ability to perform predictive inbox placement tests.</p>
    ///
    ///         <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition
    ///             to any other fees that you accrue by using Amazon SES and other AWS services. For more
    ///             information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
    func putDeliverabilityDashboardOption(input: PutDeliverabilityDashboardOptionInput, completion: @escaping (SdkResult<PutDeliverabilityDashboardOptionOutputResponse, PutDeliverabilityDashboardOptionOutputError>) -> Void)
    /// <p>Used to associate a configuration set with an email identity.</p>
    func putEmailIdentityConfigurationSetAttributes(input: PutEmailIdentityConfigurationSetAttributesInput, completion: @escaping (SdkResult<PutEmailIdentityConfigurationSetAttributesOutputResponse, PutEmailIdentityConfigurationSetAttributesOutputError>) -> Void)
    /// <p>Used to enable or disable DKIM authentication for an email identity.</p>
    func putEmailIdentityDkimAttributes(input: PutEmailIdentityDkimAttributesInput, completion: @escaping (SdkResult<PutEmailIdentityDkimAttributesOutputResponse, PutEmailIdentityDkimAttributesOutputError>) -> Void)
    /// <p>Used to configure or change the DKIM authentication settings for an email domain
    ///             identity. You can use this operation to do any of the following:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Update the signing attributes for an identity that uses Bring Your Own DKIM
    ///                     (BYODKIM).</p>
    ///             </li>
    ///             <li>
    ///                 <p>Change from using no DKIM authentication to using Easy DKIM.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Change from using no DKIM authentication to using BYODKIM.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Change from using Easy DKIM to using BYODKIM.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Change from using BYODKIM to using Easy DKIM.</p>
    ///             </li>
    ///          </ul>
    func putEmailIdentityDkimSigningAttributes(input: PutEmailIdentityDkimSigningAttributesInput, completion: @escaping (SdkResult<PutEmailIdentityDkimSigningAttributesOutputResponse, PutEmailIdentityDkimSigningAttributesOutputError>) -> Void)
    /// <p>Used to enable or disable feedback forwarding for an identity. This setting determines
    ///             what happens when an identity is used to send an email that results in a bounce or
    ///             complaint event.</p>
    ///         <p>If the value is <code>true</code>, you receive email notifications when bounce or
    ///             complaint events occur. These notifications are sent to the address that you specified
    ///             in the <code>Return-Path</code> header of the original email.</p>
    ///         <p>You're required to have a method of tracking bounces and complaints. If you haven't
    ///             set up another mechanism for receiving bounce or complaint notifications (for example,
    ///             by setting up an event destination), you receive an email notification when these events
    ///             occur (even if this setting is disabled).</p>
    func putEmailIdentityFeedbackAttributes(input: PutEmailIdentityFeedbackAttributesInput, completion: @escaping (SdkResult<PutEmailIdentityFeedbackAttributesOutputResponse, PutEmailIdentityFeedbackAttributesOutputError>) -> Void)
    /// <p>Used to enable or disable the custom Mail-From domain configuration for an email
    ///             identity.</p>
    func putEmailIdentityMailFromAttributes(input: PutEmailIdentityMailFromAttributesInput, completion: @escaping (SdkResult<PutEmailIdentityMailFromAttributesOutputResponse, PutEmailIdentityMailFromAttributesOutputError>) -> Void)
    /// <p>Adds an email address to the suppression list for your account.</p>
    func putSuppressedDestination(input: PutSuppressedDestinationInput, completion: @escaping (SdkResult<PutSuppressedDestinationOutputResponse, PutSuppressedDestinationOutputError>) -> Void)
    /// <p>Composes an email message to multiple destinations.</p>
    func sendBulkEmail(input: SendBulkEmailInput, completion: @escaping (SdkResult<SendBulkEmailOutputResponse, SendBulkEmailOutputError>) -> Void)
    /// <p>Adds an email address to the list of identities for your Amazon SES account in the current
    ///             AWS Region and attempts to verify it. As a result of executing this operation, a
    ///             customized verification email is sent to the specified address.</p>
    ///         <p>To use this operation, you must first create a custom verification email template. For
    ///             more information about creating and using custom verification email templates, see
    ///                 <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func sendCustomVerificationEmail(input: SendCustomVerificationEmailInput, completion: @escaping (SdkResult<SendCustomVerificationEmailOutputResponse, SendCustomVerificationEmailOutputError>) -> Void)
    /// <p>Sends an email message. You can use the Amazon SES API v2 to send two types of
    ///             messages:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                   <b>Simple</b> – A standard email message. When
    ///                     you create this type of message, you specify the sender, the recipient, and the
    ///                     message body, and Amazon SES assembles the message for you.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>Raw</b> – A raw, MIME-formatted email
    ///                     message. When you send this type of email, you have to specify all of the
    ///                     message headers, as well as the message body. You can use this message type to
    ///                     send messages that contain attachments. The message that you specify has to be a
    ///                     valid MIME message.</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                   <b>Templated</b> – A message that contains
    ///                     personalization tags. When you send this type of email, Amazon SES API v2 automatically
    ///                     replaces the tags with values that you specify.</p>
    ///             </li>
    ///          </ul>
    func sendEmail(input: SendEmailInput, completion: @escaping (SdkResult<SendEmailOutputResponse, SendEmailOutputError>) -> Void)
    /// <p>Add one or more tags (keys and values) to a specified resource. A
    ///                 <i>tag</i> is a label that you optionally define and associate with a
    ///             resource. Tags can help you categorize and manage resources in different ways, such as
    ///             by purpose, owner, environment, or other criteria. A resource can have as many as 50
    ///             tags.</p>
    ///         <p>Each tag consists of a required <i>tag key</i> and an
    ///                 associated <i>tag value</i>, both of which you define. A tag key is a
    ///             general label that acts as a category for more specific tag values. A tag value acts as
    ///             a descriptor within a tag key.</p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Creates a preview of the MIME content of an email when provided with a template and a
    ///             set of replacement data.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func testRenderEmailTemplate(input: TestRenderEmailTemplateInput, completion: @escaping (SdkResult<TestRenderEmailTemplateOutputResponse, TestRenderEmailTemplateOutputError>) -> Void)
    /// <p>Remove one or more tags (keys and values) from a specified resource.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Update the configuration of an event destination for a configuration set.</p>
    ///         <p>
    ///             <i>Events</i> include message sends, deliveries, opens, clicks, bounces,
    ///             and complaints. <i>Event destinations</i> are places that you can send
    ///             information about these events to. For example, you can send event data to Amazon SNS to
    ///             receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to
    ///             stream data to Amazon S3 for long-term storage.</p>
    func updateConfigurationSetEventDestination(input: UpdateConfigurationSetEventDestinationInput, completion: @escaping (SdkResult<UpdateConfigurationSetEventDestinationOutputResponse, UpdateConfigurationSetEventDestinationOutputError>) -> Void)
    /// <p>Updates a contact's preferences for a list. It is not necessary to specify all
    ///             existing topic preferences in the TopicPreferences object, just the ones that need
    ///             updating.</p>
    func updateContact(input: UpdateContactInput, completion: @escaping (SdkResult<UpdateContactOutputResponse, UpdateContactOutputError>) -> Void)
    /// <p>Updates contact list metadata. This operation does a complete replacement.</p>
    func updateContactList(input: UpdateContactListInput, completion: @escaping (SdkResult<UpdateContactListOutputResponse, UpdateContactListOutputError>) -> Void)
    /// <p>Updates an existing custom verification email template.</p>
    ///         <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-verify-address-custom.html">Using Custom Verification Email Templates</a> in the <i>Amazon SES Developer
    ///                 Guide</i>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func updateCustomVerificationEmailTemplate(input: UpdateCustomVerificationEmailTemplateInput, completion: @escaping (SdkResult<UpdateCustomVerificationEmailTemplateOutputResponse, UpdateCustomVerificationEmailTemplateOutputError>) -> Void)
    /// <p>Updates the specified sending authorization policy for the given identity (an email
    ///             address or a domain). This API returns successfully even if a policy with the specified
    ///             name does not exist.</p>
    ///         <note>
    ///             <p>This API is for the identity owner only. If you have not verified the identity,
    ///                 this API will return an error.</p>
    ///         </note>
    ///         <p>Sending authorization is a feature that enables an identity owner to authorize other
    ///             senders to use its identities. For information about using sending authorization, see
    ///             the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer
    ///                 Guide</a>.</p>
    ///
    ///         <p>You can execute this operation no more than once per second.</p>
    func updateEmailIdentityPolicy(input: UpdateEmailIdentityPolicyInput, completion: @escaping (SdkResult<UpdateEmailIdentityPolicyOutputResponse, UpdateEmailIdentityPolicyOutputError>) -> Void)
    /// <p>Updates an email template. Email templates enable you to send personalized email to
    ///             one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES
    ///                 Developer Guide</a>.</p>
    ///         <p>You can execute this operation no more than once per second.</p>
    func updateEmailTemplate(input: UpdateEmailTemplateInput, completion: @escaping (SdkResult<UpdateEmailTemplateOutputResponse, UpdateEmailTemplateOutputError>) -> Void)
}
