// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct SuggestInputQueryItemMiddleware: Middleware {
    public let id: String = "SuggestInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<SuggestInput>,
                  next: H) -> Swift.Result<OperationOutput<SuggestOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        input.builder.withQueryItem(URLQueryItem(name: "format", value: "sdk"))
        input.builder.withQueryItem(URLQueryItem(name: "pretty", value: "true"))
        if let suggester = input.operationInput.suggester {
            let suggesterQueryItem = URLQueryItem(name: "suggester".urlPercentEncoding(), value: String(suggester).urlPercentEncoding())
            input.builder.withQueryItem(suggesterQueryItem)
        }
        let sizeQueryItem = URLQueryItem(name: "size".urlPercentEncoding(), value: String(input.operationInput.size).urlPercentEncoding())
        input.builder.withQueryItem(sizeQueryItem)
        if let query = input.operationInput.query {
            let queryQueryItem = URLQueryItem(name: "q".urlPercentEncoding(), value: String(query).urlPercentEncoding())
            input.builder.withQueryItem(queryQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<SuggestInput>
    public typealias MOutput = OperationOutput<SuggestOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<SuggestOutputError>
}
