// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SearchOutputBody: Equatable {
    public let status: SearchStatus?
    public let hits: Hits?
    public let facets: [String:BucketInfo]?
    public let stats: [String:FieldStats]?
}

extension SearchOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case facets
        case hits
        case stats
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(SearchStatus.self, forKey: .status)
        status = statusDecoded
        let hitsDecoded = try containerValues.decodeIfPresent(Hits.self, forKey: .hits)
        hits = hitsDecoded
        let facetsContainer = try containerValues.decodeIfPresent([String:BucketInfo].self, forKey: .facets)
        var facetsDecoded0: [String:BucketInfo]? = nil
        if let facetsContainer = facetsContainer {
            facetsDecoded0 = [String:BucketInfo]()
            for (key0, bucketinfo0) in facetsContainer {
                facetsDecoded0?[key0] = bucketinfo0
            }
        }
        facets = facetsDecoded0
        let statsContainer = try containerValues.decodeIfPresent([String:FieldStats].self, forKey: .stats)
        var statsDecoded0: [String:FieldStats]? = nil
        if let statsContainer = statsContainer {
            statsDecoded0 = [String:FieldStats]()
            for (key0, fieldstats0) in statsContainer {
                statsDecoded0?[key0] = fieldstats0
            }
        }
        stats = statsDecoded0
    }
}
