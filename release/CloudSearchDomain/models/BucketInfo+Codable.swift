// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BucketInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case buckets
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let buckets = buckets {
            var bucketsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .buckets)
            for bucketlist0 in buckets {
                try bucketsContainer.encode(bucketlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bucketsContainer = try containerValues.decodeIfPresent([Bucket].self, forKey: .buckets)
        var bucketsDecoded0:[Bucket]? = nil
        if let bucketsContainer = bucketsContainer {
            bucketsDecoded0 = [Bucket]()
            for structure0 in bucketsContainer {
                bucketsDecoded0?.append(structure0)
            }
        }
        buckets = bucketsDecoded0
    }
}
