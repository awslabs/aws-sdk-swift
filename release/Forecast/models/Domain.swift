// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Domain {
    case custom
    case ec2Capacity
    case inventoryPlanning
    case metrics
    case retail
    case webTraffic
    case workForce
    case sdkUnknown(String)
}

extension Domain : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Domain] {
        return [
            .custom,
            .ec2Capacity,
            .inventoryPlanning,
            .metrics,
            .retail,
            .webTraffic,
            .workForce,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .custom: return "CUSTOM"
        case .ec2Capacity: return "EC2_CAPACITY"
        case .inventoryPlanning: return "INVENTORY_PLANNING"
        case .metrics: return "METRICS"
        case .retail: return "RETAIL"
        case .webTraffic: return "WEB_TRAFFIC"
        case .workForce: return "WORK_FORCE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Domain(rawValue: rawValue) ?? Domain.sdkUnknown(rawValue)
    }
}
