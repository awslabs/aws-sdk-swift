// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies an integer hyperparameter and it's range of tunable values.
///       This object is part of the <a>ParameterRanges</a> object.</p>
public struct IntegerParameterRange: Equatable {
    /// <p>The maximum tunable value of the hyperparameter.</p>
    public let maxValue: Int?
    /// <p>The minimum tunable value of the hyperparameter.</p>
    public let minValue: Int?
    /// <p>The name of the hyperparameter to tune.</p>
    public let name: String?
    /// <p>The scale that hyperparameter tuning uses to search the hyperparameter range.
    ///       Valid values:</p>
    ///          <dl>
    ///             <dt>Auto</dt>
    ///             <dd>
    ///                <p>Amazon Forecast hyperparameter tuning chooses the best scale for the hyperparameter.</p>
    ///             </dd>
    ///             <dt>Linear</dt>
    ///             <dd>
    ///                <p>Hyperparameter tuning searches the values in the hyperparameter range by using a
    ///             linear scale.</p>
    ///             </dd>
    ///             <dt>Logarithmic</dt>
    ///             <dd>
    ///                <p>Hyperparameter tuning searches the values in the hyperparameter range by using a
    ///             logarithmic scale.</p>
    ///                <p>Logarithmic scaling works only for ranges that have values greater than 0.</p>
    ///             </dd>
    ///             <dt>ReverseLogarithmic</dt>
    ///             <dd>
    ///                <p>Not supported for <code>IntegerParameterRange</code>.</p>
    ///                <p>Reverse logarithmic scaling works only for ranges that are entirely within the
    ///             range 0 <= x < 1.0.</p>
    ///             </dd>
    ///          </dl>
    ///          <p>For information about choosing a hyperparameter scale, see
    ///       <a href="http://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-ranges.html#scaling-type">Hyperparameter Scaling</a>.
    ///       One of the following values:</p>
    public let scalingType: ScalingType?

    public init (
        maxValue: Int? = nil,
        minValue: Int? = nil,
        name: String? = nil,
        scalingType: ScalingType? = nil
    )
    {
        self.maxValue = maxValue
        self.minValue = minValue
        self.name = name
        self.scalingType = scalingType
    }
}
