// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribePredictorOutput: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the algorithm used for model training.</p>
    public let algorithmArn: String?
    /// <p>When <code>PerformAutoML</code> is specified, the ARN of the chosen algorithm.</p>
    public let autoMLAlgorithmArns: [String]?
    /// <p>The AutoML strategy used to train the predictor. Unless <code>LatencyOptimized</code>
    ///             is specified, the AutoML strategy optimizes predictor accuracy.</p>
    ///         <p>This parameter is only valid for predictors trained using AutoML.</p>
    public let autoMLOverrideStrategy: AutoMLOverrideStrategy?
    /// <p>When the model training task was created.</p>
    public let creationTime: Date?
    /// <p>An array of the ARNs of the dataset import jobs used to import training data for the
    ///       predictor.</p>
    public let datasetImportJobArns: [String]?
    /// <p>An AWS Key Management Service (KMS) key and the AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access
    ///       the key.</p>
    public let encryptionConfig: EncryptionConfig?
    /// <p>The estimated time remaining in minutes for the predictor training job to complete.</p>
    public let estimatedTimeRemainingInMinutes: Int?
    /// <p>Used to override the default evaluation parameters of the specified algorithm. Amazon Forecast
    ///       evaluates a predictor by splitting a dataset into training data and testing data. The
    ///       evaluation parameters define how to perform the split and the number of iterations.</p>
    public let evaluationParameters: EvaluationParameters?
    /// <p>The featurization configuration.</p>
    public let featurizationConfig: FeaturizationConfig?
    /// <p>The number of time-steps of the forecast. The forecast horizon is also called the
    ///       prediction length.</p>
    public let forecastHorizon: Int?
    /// <p>The forecast types used during predictor training. Default value is <code>["0.1","0.5","0.9"]</code>
    ///          </p>
    public let forecastTypes: [String]?
    /// <p>The hyperparameter override values for the algorithm.</p>
    public let hPOConfig: HyperParameterTuningJobConfig?
    /// <p>Describes the dataset group that contains the data to use to train the predictor.</p>
    public let inputDataConfig: InputDataConfig?
    /// <p>The last time the resource was modified. The timestamp depends on the status of the job:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_PENDING</code> - The <code>CreationTime</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPING</code> - The current timestamp.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPED</code> - When the job stopped.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or
    ///           failed.</p>
    ///             </li>
    ///          </ul>
    public let lastModificationTime: Date?
    /// <p>If an error occurred, an informational message about the error.</p>
    public let message: String?
    /// <p>Whether the predictor is set to perform AutoML.</p>
    public let performAutoML: Bool?
    /// <p>Whether the predictor is set to perform hyperparameter optimization (HPO).</p>
    public let performHPO: Bool?
    /// <p>The ARN of the predictor.</p>
    public let predictorArn: String?
    /// <p>Details on the the status and results of the backtests performed to evaluate the accuracy
    ///       of the predictor. You specify the number of backtests to perform when you call the  operation.</p>
    public let predictorExecutionDetails: PredictorExecutionDetails?
    /// <p>The name of the predictor.</p>
    public let predictorName: String?
    /// <p>The status of the predictor. States include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>ACTIVE</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>,
    ///           <code>CREATE_FAILED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,
    ///           <code>DELETE_FAILED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///          <note>
    ///             <p>The <code>Status</code> of the predictor must be <code>ACTIVE</code> before you can use
    ///         the predictor to create a forecast.</p>
    ///          </note>
    public let status: String?
    /// <p>The default training parameters or overrides selected during model training. When running
    ///       AutoML or choosing HPO with CNN-QR or DeepAR+, the optimized values for the chosen
    ///       hyperparameters are returned. For more information, see <a>aws-forecast-choosing-recipes</a>.</p>
    public let trainingParameters: [String:String]?

    public init (
        algorithmArn: String? = nil,
        autoMLAlgorithmArns: [String]? = nil,
        autoMLOverrideStrategy: AutoMLOverrideStrategy? = nil,
        creationTime: Date? = nil,
        datasetImportJobArns: [String]? = nil,
        encryptionConfig: EncryptionConfig? = nil,
        estimatedTimeRemainingInMinutes: Int? = nil,
        evaluationParameters: EvaluationParameters? = nil,
        featurizationConfig: FeaturizationConfig? = nil,
        forecastHorizon: Int? = nil,
        forecastTypes: [String]? = nil,
        hPOConfig: HyperParameterTuningJobConfig? = nil,
        inputDataConfig: InputDataConfig? = nil,
        lastModificationTime: Date? = nil,
        message: String? = nil,
        performAutoML: Bool? = nil,
        performHPO: Bool? = nil,
        predictorArn: String? = nil,
        predictorExecutionDetails: PredictorExecutionDetails? = nil,
        predictorName: String? = nil,
        status: String? = nil,
        trainingParameters: [String:String]? = nil
    )
    {
        self.algorithmArn = algorithmArn
        self.autoMLAlgorithmArns = autoMLAlgorithmArns
        self.autoMLOverrideStrategy = autoMLOverrideStrategy
        self.creationTime = creationTime
        self.datasetImportJobArns = datasetImportJobArns
        self.encryptionConfig = encryptionConfig
        self.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes
        self.evaluationParameters = evaluationParameters
        self.featurizationConfig = featurizationConfig
        self.forecastHorizon = forecastHorizon
        self.forecastTypes = forecastTypes
        self.hPOConfig = hPOConfig
        self.inputDataConfig = inputDataConfig
        self.lastModificationTime = lastModificationTime
        self.message = message
        self.performAutoML = performAutoML
        self.performHPO = performHPO
        self.predictorArn = predictorArn
        self.predictorExecutionDetails = predictorExecutionDetails
        self.predictorName = predictorName
        self.status = status
        self.trainingParameters = trainingParameters
    }
}
