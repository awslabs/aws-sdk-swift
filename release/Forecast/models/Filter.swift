// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a filter for choosing a subset of objects. Each filter consists of a
///       condition and a match statement. The condition is either <code>IS</code> or
///       <code>IS_NOT</code>, which specifies whether to include or exclude
///       the objects that match the statement, respectively. The match statement consists of a key and a
///       value.</p>
public struct Filter: Equatable {
    /// <p>The condition to apply. To include the objects that match the statement, specify
    ///       <code>IS</code>. To exclude matching objects, specify <code>IS_NOT</code>.</p>
    public let condition: FilterConditionString?
    /// <p>The name of the parameter to filter on.</p>
    public let key: String?
    /// <p>The value to match.</p>
    public let value: String?

    public init (
        condition: FilterConditionString? = nil,
        key: String? = nil,
        value: String? = nil
    )
    {
        self.condition = condition
        self.key = key
        self.value = value
    }
}
