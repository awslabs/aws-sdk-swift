// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPredictorBacktestExportJobsOutputBody: Equatable {
    public let predictorBacktestExportJobs: [PredictorBacktestExportJobSummary]?
    public let nextToken: String?
}

extension ListPredictorBacktestExportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case predictorBacktestExportJobs = "PredictorBacktestExportJobs"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let predictorBacktestExportJobsContainer = try containerValues.decodeIfPresent([PredictorBacktestExportJobSummary].self, forKey: .predictorBacktestExportJobs)
        var predictorBacktestExportJobsDecoded0:[PredictorBacktestExportJobSummary]? = nil
        if let predictorBacktestExportJobsContainer = predictorBacktestExportJobsContainer {
            predictorBacktestExportJobsDecoded0 = [PredictorBacktestExportJobSummary]()
            for structure0 in predictorBacktestExportJobsContainer {
                predictorBacktestExportJobsDecoded0?.append(structure0)
            }
        }
        predictorBacktestExportJobs = predictorBacktestExportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
