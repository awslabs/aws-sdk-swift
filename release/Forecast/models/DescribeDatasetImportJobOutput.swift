// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDatasetImportJobOutput: Equatable {
    /// <p>When the dataset import job was created.</p>
    public let creationTime: Date?
    /// <p>The size of the dataset in gigabytes (GB) after the import job has finished.</p>
    public let dataSize: Double?
    /// <p>The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast
    ///       can assume to access the data.</p>
    ///          <p>If encryption is used, <code>DataSource</code> includes an AWS Key Management Service (KMS) key.</p>
    public let dataSource: DataSource?
    /// <p>The Amazon Resource Name (ARN) of the dataset that the training data was imported
    ///       to.</p>
    public let datasetArn: String?
    /// <p>The ARN of the dataset import job.</p>
    public let datasetImportJobArn: String?
    /// <p>The name of the dataset import job.</p>
    public let datasetImportJobName: String?
    /// <p>The estimated time remaining in minutes for the dataset import job to complete.</p>
    public let estimatedTimeRemainingInMinutes: Int?
    /// <p>Statistical information about each field in the input data.</p>
    public let fieldStatistics: [String:Statistics]?
    /// <p>The format of the geolocation attribute. Valid Values:<code>"LAT_LONG"</code> and
    ///                 <code>"CC_POSTALCODE"</code>.</p>
    public let geolocationFormat: String?
    /// <p>The last time the resource was modified. The timestamp depends on the status of the
    ///       job:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_PENDING</code> - The <code>CreationTime</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_IN_PROGRESS</code> - The current timestamp.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPING</code> - The current timestamp.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPED</code> - When the job stopped.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>ACTIVE</code> or <code>CREATE_FAILED</code> - When the job finished or
    ///           failed.</p>
    ///             </li>
    ///          </ul>
    public let lastModificationTime: Date?
    /// <p>If an error occurred, an informational message about the error.</p>
    public let message: String?
    /// <p>The status of the dataset import job. States include:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>ACTIVE</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_PENDING</code>, <code>CREATE_IN_PROGRESS</code>,
    ///             <code>CREATE_FAILED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETE_PENDING</code>, <code>DELETE_IN_PROGRESS</code>,
    ///             <code>DELETE_FAILED</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATE_STOPPING</code>, <code>CREATE_STOPPED</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let status: String?
    /// <p>The single time zone applied to every item in the dataset</p>
    public let timeZone: String?
    /// <p>The format of timestamps in the dataset. The format that you specify depends on the
    ///         <code>DataFrequency</code> specified when the dataset was created. The following formats are
    ///       supported</p>
    ///          <ul>
    ///             <li>
    ///                <p>"yyyy-MM-dd"</p>
    ///                <p>For the following data frequencies: Y, M, W, and D</p>
    ///             </li>
    ///             <li>
    ///                <p>"yyyy-MM-dd HH:mm:ss"</p>
    ///                <p>For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y,
    ///           M, W, and D</p>
    ///             </li>
    ///          </ul>
    public let timestampFormat: String?
    /// <p>Whether <code>TimeZone</code> is automatically derived from the geolocation
    ///             attribute.</p>
    public let useGeolocationForTimeZone: Bool

    public init (
        creationTime: Date? = nil,
        dataSize: Double? = nil,
        dataSource: DataSource? = nil,
        datasetArn: String? = nil,
        datasetImportJobArn: String? = nil,
        datasetImportJobName: String? = nil,
        estimatedTimeRemainingInMinutes: Int? = nil,
        fieldStatistics: [String:Statistics]? = nil,
        geolocationFormat: String? = nil,
        lastModificationTime: Date? = nil,
        message: String? = nil,
        status: String? = nil,
        timeZone: String? = nil,
        timestampFormat: String? = nil,
        useGeolocationForTimeZone: Bool = false
    )
    {
        self.creationTime = creationTime
        self.dataSize = dataSize
        self.dataSource = dataSource
        self.datasetArn = datasetArn
        self.datasetImportJobArn = datasetImportJobArn
        self.datasetImportJobName = datasetImportJobName
        self.estimatedTimeRemainingInMinutes = estimatedTimeRemainingInMinutes
        self.fieldStatistics = fieldStatistics
        self.geolocationFormat = geolocationFormat
        self.lastModificationTime = lastModificationTime
        self.message = message
        self.status = status
        self.timeZone = timeZone
        self.timestampFormat = timestampFormat
        self.useGeolocationForTimeZone = useGeolocationForTimeZone
    }
}
