// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDatasetGroupInputBody: Equatable {
    public let datasetGroupArn: String?
    public let datasetArns: [String]?
}

extension UpdateDatasetGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case datasetArns = "DatasetArns"
        case datasetGroupArn = "DatasetGroupArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let datasetGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .datasetGroupArn)
        datasetGroupArn = datasetGroupArnDecoded
        let datasetArnsContainer = try containerValues.decodeIfPresent([String].self, forKey: .datasetArns)
        var datasetArnsDecoded0:[String]? = nil
        if let datasetArnsContainer = datasetArnsContainer {
            datasetArnsDecoded0 = [String]()
            for string0 in datasetArnsContainer {
                datasetArnsDecoded0?.append(string0)
            }
        }
        datasetArns = datasetArnsDecoded0
    }
}
