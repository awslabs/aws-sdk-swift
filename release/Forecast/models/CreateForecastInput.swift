// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateForecastInput: Equatable {
    /// <p>A name for the forecast.</p>
    public let forecastName: String?
    /// <p>The quantiles at which probabilistic forecasts are generated. <b>You
    ///         can currently specify up to 5 quantiles per forecast</b>. Accepted values include
    ///         <code>0.01 to 0.99</code> (increments of .01 only) and <code>mean</code>. The mean forecast
    ///       is different from the median (0.50) when the distribution is not symmetric (for example, Beta
    ///       and Negative Binomial). The default value is <code>["0.1", "0.5", "0.9"]</code>.</p>
    public let forecastTypes: [String]?
    /// <p>The Amazon Resource Name (ARN) of the predictor to use to generate the forecast.</p>
    public let predictorArn: String?
    /// <p>The optional metadata that you apply to the forecast to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p>
    ///          <p>The following basic restrictions apply to tags:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Maximum number of tags per resource - 50.</p>
    ///             </li>
    ///             <li>
    ///                <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p>
    ///             </li>
    ///             <li>
    ///                <p>Maximum key length - 128 Unicode characters in UTF-8.</p>
    ///             </li>
    ///             <li>
    ///                <p>Maximum value length - 256 Unicode characters in UTF-8.</p>
    ///             </li>
    ///             <li>
    ///                <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p>
    ///             </li>
    ///             <li>
    ///                <p>Tag keys and values are case sensitive.</p>
    ///             </li>
    ///             <li>
    ///                <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for keys as it is reserved for AWS use. You cannot edit or delete tag keys with this prefix. Values can have this prefix. If a tag value has <code>aws</code> as its prefix but the key does not, then Forecast considers it to be a user tag and will count against the limit of 50 tags. Tags with only the key prefix of <code>aws</code> do not count against your tags per resource limit.</p>
    ///             </li>
    ///          </ul>
    public let tags: [Tag]?

    public init (
        forecastName: String? = nil,
        forecastTypes: [String]? = nil,
        predictorArn: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.forecastName = forecastName
        self.forecastTypes = forecastTypes
        self.predictorArn = predictorArn
        self.tags = tags
    }
}
