// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListForecastsOutputBody: Equatable {
    public let forecasts: [ForecastSummary]?
    public let nextToken: String?
}

extension ListForecastsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case forecasts = "Forecasts"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let forecastsContainer = try containerValues.decodeIfPresent([ForecastSummary].self, forKey: .forecasts)
        var forecastsDecoded0:[ForecastSummary]? = nil
        if let forecastsContainer = forecastsContainer {
            forecastsDecoded0 = [ForecastSummary]()
            for structure0 in forecastsContainer {
                forecastsDecoded0?.append(structure0)
            }
        }
        forecasts = forecastsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
