// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListForecastExportJobsOutputBody: Equatable {
    public let forecastExportJobs: [ForecastExportJobSummary]?
    public let nextToken: String?
}

extension ListForecastExportJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case forecastExportJobs = "ForecastExportJobs"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let forecastExportJobsContainer = try containerValues.decodeIfPresent([ForecastExportJobSummary].self, forKey: .forecastExportJobs)
        var forecastExportJobsDecoded0:[ForecastExportJobSummary]? = nil
        if let forecastExportJobsContainer = forecastExportJobsContainer {
            forecastExportJobsDecoded0 = [ForecastExportJobSummary]()
            for structure0 in forecastExportJobsContainer {
                forecastExportJobsDecoded0?.append(structure0)
            }
        }
        forecastExportJobs = forecastExportJobsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
