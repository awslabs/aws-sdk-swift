// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPredictorsOutputBody: Equatable {
    public let predictors: [PredictorSummary]?
    public let nextToken: String?
}

extension ListPredictorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case predictors = "Predictors"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let predictorsContainer = try containerValues.decodeIfPresent([PredictorSummary].self, forKey: .predictors)
        var predictorsDecoded0:[PredictorSummary]? = nil
        if let predictorsContainer = predictorsContainer {
            predictorsDecoded0 = [PredictorSummary]()
            for structure0 in predictorsContainer {
                predictorsDecoded0?.append(structure0)
            }
        }
        predictors = predictorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
