// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CustomAction: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case actionDefinition = "ActionDefinition"
        case actionName = "ActionName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let actionDefinition = actionDefinition {
            try encodeContainer.encode(actionDefinition, forKey: .actionDefinition)
        }
        if let actionName = actionName {
            try encodeContainer.encode(actionName, forKey: .actionName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let actionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .actionName)
        actionName = actionNameDecoded
        let actionDefinitionDecoded = try containerValues.decodeIfPresent(ActionDefinition.self, forKey: .actionDefinition)
        actionDefinition = actionDefinitionDecoded
    }
}
