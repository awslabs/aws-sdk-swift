// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A single 5-tuple stateful rule, for use in a stateful rule group.</p>
public struct StatefulRule: Equatable {
    /// <p>Defines what Network Firewall should do with the packets in a traffic flow when the flow
    ///          matches the stateful rule criteria. For all actions, Network Firewall performs the specified
    ///          action and discontinues stateful inspection of the traffic flow. </p>
    ///          <p>The actions for a stateful rule are defined as follows: </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>PASS</b> - Permits the packets to go to the
    ///                intended destination.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>DROP</b> - Blocks the packets from going to
    ///                the intended destination and sends an alert log message, if alert logging is configured in the <a>Firewall</a>
    ///                   <a>LoggingConfiguration</a>. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <b>ALERT</b> - Permits the packets to go to the
    ///                intended destination and sends an alert log message, if alert logging is configured in the <a>Firewall</a>
    ///                   <a>LoggingConfiguration</a>. </p>
    ///                <p>You can use this action to test a rule that you intend to use to drop traffic. You
    ///                can enable the rule with <code>ALERT</code> action, verify in the logs that the rule
    ///                is filtering as you want, then change the action to <code>DROP</code>.</p>
    ///             </li>
    ///          </ul>
    public let action: StatefulAction?
    /// <p>The stateful 5-tuple inspection criteria for this rule, used to inspect traffic flows.
    ///       </p>
    public let header: Header?
    /// <p></p>
    public let ruleOptions: [RuleOption]?

    public init (
        action: StatefulAction? = nil,
        header: Header? = nil,
        ruleOptions: [RuleOption]? = nil
    )
    {
        self.action = action
        self.header = header
        self.ruleOptions = ruleOptions
    }
}
