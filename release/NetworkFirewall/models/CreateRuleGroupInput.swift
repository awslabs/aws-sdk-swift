// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateRuleGroupInput: Equatable {
    /// <p>The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation.
    ///       When you update a rule group, you are limited to this capacity. When you reference a rule group
    ///       from a firewall policy, Network Firewall reserves this capacity for the rule group. </p>
    ///          <p>You can retrieve the capacity that would be required for a rule group before you create the rule group by calling
    ///       <a>CreateRuleGroup</a> with <code>DryRun</code> set to <code>TRUE</code>. </p>
    ///          <note>
    ///             <p>You can't change or exceed this capacity when you update the rule group, so leave
    ///             room for your rule group to grow. </p>
    ///          </note>
    ///          <p>
    ///             <b>Capacity for a stateless rule group</b>
    ///          </p>
    ///          <p>For a stateless rule group, the capacity required is the sum of the capacity
    ///          requirements of the individual rules that you expect to have in the rule group. </p>
    ///          <p>To calculate the capacity requirement of a single rule, multiply the capacity
    ///          requirement values of each of the rule's match settings:</p>
    ///          <ul>
    ///             <li>
    ///                <p>A match setting with no criteria specified has a value of 1. </p>
    ///             </li>
    ///             <li>
    ///                <p>A match setting with <code>Any</code> specified has a value of 1. </p>
    ///             </li>
    ///             <li>
    ///                <p>All other match settings have a value equal to the number of elements provided in
    ///                the setting. For example, a protocol setting ["UDP"] and a source setting
    ///                ["10.0.0.0/24"] each have a value of 1. A protocol setting ["UDP","TCP"] has a value
    ///                of 2. A source setting ["10.0.0.0/24","10.0.0.1/24","10.0.0.2/24"] has a value of 3.
    ///             </p>
    ///             </li>
    ///          </ul>
    ///          <p>A rule with no criteria specified in any of its match settings has a capacity
    ///          requirement of 1. A rule with protocol setting ["UDP","TCP"], source setting
    ///          ["10.0.0.0/24","10.0.0.1/24","10.0.0.2/24"], and a single specification or no specification
    ///          for each of the other match settings has a capacity requirement of 6. </p>
    ///          <p>
    ///             <b>Capacity for a stateful rule group</b>
    ///          </p>
    ///          <p>For
    ///          a stateful rule group, the minimum capacity required is the number of individual rules that
    ///          you expect to have in the rule group. </p>
    public let capacity: Int?
    /// <p>A description of the rule group. </p>
    public let description: String?
    /// <p>Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request. </p>
    ///          <p>If set to <code>TRUE</code>, Network Firewall checks whether the request can run successfully,
    ///          but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with
    ///          dry run set to <code>FALSE</code>, but doesn't make additions or changes to your resources. This option allows you to make sure that you have
    ///          the required permissions to run the request and that your request parameters are valid. </p>
    ///          <p>If set to <code>FALSE</code>, Network Firewall makes the requested changes to your resources. </p>
    public let dryRun: Bool
    /// <p>An object that defines the rule group rules. </p>
    ///          <note>
    ///             <p>You must provide either this rule group setting or a <code>Rules</code> setting, but not both. </p>
    ///          </note>
    public let ruleGroup: RuleGroup?
    /// <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>
    public let ruleGroupName: String?
    /// <p>A string containing stateful rule group rules specifications in Suricata flat format, with one rule
    /// per line. Use this to import your existing Suricata compatible rule groups. </p>
    ///          <note>
    ///             <p>You must provide either this rules setting or a populated <code>RuleGroup</code> setting, but not both. </p>
    ///          </note>
    ///          <p>You can provide your rule group specification in Suricata flat format through this setting when you create or update your rule group. The call
    /// response returns a <a>RuleGroup</a> object that Network Firewall has populated from your string. </p>
    public let rules: String?
    /// <p>The key:value pairs to associate with the resource.</p>
    public let tags: [Tag]?
    /// <p>Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains
    /// stateless rules. If it is stateful, it contains stateful rules. </p>
    public let type: RuleGroupType?

    public init (
        capacity: Int? = nil,
        description: String? = nil,
        dryRun: Bool = false,
        ruleGroup: RuleGroup? = nil,
        ruleGroupName: String? = nil,
        rules: String? = nil,
        tags: [Tag]? = nil,
        type: RuleGroupType? = nil
    )
    {
        self.capacity = capacity
        self.description = description
        self.dryRun = dryRun
        self.ruleGroup = ruleGroup
        self.ruleGroupName = ruleGroupName
        self.rules = rules
        self.tags = tags
        self.type = type
    }
}
