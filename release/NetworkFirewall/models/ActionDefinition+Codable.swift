// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActionDefinition: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case publishMetricAction = "PublishMetricAction"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let publishMetricAction = publishMetricAction {
            try encodeContainer.encode(publishMetricAction, forKey: .publishMetricAction)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let publishMetricActionDecoded = try containerValues.decodeIfPresent(PublishMetricAction.self, forKey: .publishMetricAction)
        publishMetricAction = publishMetricActionDecoded
    }
}
