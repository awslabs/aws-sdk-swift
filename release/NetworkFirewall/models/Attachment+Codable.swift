// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Attachment: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case endpointId = "EndpointId"
        case status = "Status"
        case subnetId = "SubnetId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let endpointId = endpointId {
            try encodeContainer.encode(endpointId, forKey: .endpointId)
        }
        if let status = status {
            try encodeContainer.encode(status.rawValue, forKey: .status)
        }
        if let subnetId = subnetId {
            try encodeContainer.encode(subnetId, forKey: .subnetId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let subnetIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .subnetId)
        subnetId = subnetIdDecoded
        let endpointIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointId)
        endpointId = endpointIdDecoded
        let statusDecoded = try containerValues.decodeIfPresent(AttachmentStatus.self, forKey: .status)
        status = statusDecoded
    }
}
