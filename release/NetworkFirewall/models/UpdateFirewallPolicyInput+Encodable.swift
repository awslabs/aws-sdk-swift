// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateFirewallPolicyInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case dryRun = "DryRun"
        case firewallPolicy = "FirewallPolicy"
        case firewallPolicyArn = "FirewallPolicyArn"
        case firewallPolicyName = "FirewallPolicyName"
        case updateToken = "UpdateToken"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if dryRun != false {
            try encodeContainer.encode(dryRun, forKey: .dryRun)
        }
        if let firewallPolicy = firewallPolicy {
            try encodeContainer.encode(firewallPolicy, forKey: .firewallPolicy)
        }
        if let firewallPolicyArn = firewallPolicyArn {
            try encodeContainer.encode(firewallPolicyArn, forKey: .firewallPolicyArn)
        }
        if let firewallPolicyName = firewallPolicyName {
            try encodeContainer.encode(firewallPolicyName, forKey: .firewallPolicyName)
        }
        if let updateToken = updateToken {
            try encodeContainer.encode(updateToken, forKey: .updateToken)
        }
    }
}
