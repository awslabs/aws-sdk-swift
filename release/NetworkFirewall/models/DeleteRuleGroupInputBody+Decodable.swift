// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DeleteRuleGroupInputBody: Equatable {
    public let ruleGroupName: String?
    public let ruleGroupArn: String?
    public let type: RuleGroupType?
}

extension DeleteRuleGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case ruleGroupArn = "RuleGroupArn"
        case ruleGroupName = "RuleGroupName"
        case type = "Type"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let ruleGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ruleGroupName)
        ruleGroupName = ruleGroupNameDecoded
        let ruleGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ruleGroupArn)
        ruleGroupArn = ruleGroupArnDecoded
        let typeDecoded = try containerValues.decodeIfPresent(RuleGroupType.self, forKey: .type)
        type = typeDecoded
    }
}
