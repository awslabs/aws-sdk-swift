// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The stateless or stateful rules definitions for use in a single rule group. Each rule
///          group requires a single <code>RulesSource</code>. You can use an instance of this for
///          either stateless rules or stateful rules. </p>
public struct RulesSource: Equatable {
    /// <p>Stateful inspection criteria for a domain list rule group. </p>
    public let rulesSourceList: RulesSourceList?
    /// <p>Stateful inspection criteria, provided in Suricata compatible intrusion prevention
    ///          system (IPS) rules. Suricata is an open-source network IPS that includes a standard
    ///          rule-based language for network traffic inspection.</p>
    ///          <p>These rules contain the inspection criteria and the action to take for traffic that
    ///          matches the criteria, so this type of rule group doesn't have a separate action
    ///          setting.</p>
    public let rulesString: String?
    /// <p>The 5-tuple stateful inspection criteria. This contains an array of individual 5-tuple
    ///          stateful rules to be used together in a stateful rule group. </p>
    public let statefulRules: [StatefulRule]?
    /// <p>Stateless inspection criteria to be used in a stateless rule group. </p>
    public let statelessRulesAndCustomActions: StatelessRulesAndCustomActions?

    public init (
        rulesSourceList: RulesSourceList? = nil,
        rulesString: String? = nil,
        statefulRules: [StatefulRule]? = nil,
        statelessRulesAndCustomActions: StatelessRulesAndCustomActions? = nil
    )
    {
        self.rulesSourceList = rulesSourceList
        self.rulesString = rulesString
        self.statefulRules = statefulRules
        self.statelessRulesAndCustomActions = statelessRulesAndCustomActions
    }
}
