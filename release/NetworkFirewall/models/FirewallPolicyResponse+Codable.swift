// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension FirewallPolicyResponse: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case firewallPolicyArn = "FirewallPolicyArn"
        case firewallPolicyId = "FirewallPolicyId"
        case firewallPolicyName = "FirewallPolicyName"
        case firewallPolicyStatus = "FirewallPolicyStatus"
        case tags = "Tags"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let firewallPolicyArn = firewallPolicyArn {
            try encodeContainer.encode(firewallPolicyArn, forKey: .firewallPolicyArn)
        }
        if let firewallPolicyId = firewallPolicyId {
            try encodeContainer.encode(firewallPolicyId, forKey: .firewallPolicyId)
        }
        if let firewallPolicyName = firewallPolicyName {
            try encodeContainer.encode(firewallPolicyName, forKey: .firewallPolicyName)
        }
        if let firewallPolicyStatus = firewallPolicyStatus {
            try encodeContainer.encode(firewallPolicyStatus.rawValue, forKey: .firewallPolicyStatus)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let firewallPolicyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallPolicyName)
        firewallPolicyName = firewallPolicyNameDecoded
        let firewallPolicyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallPolicyArn)
        firewallPolicyArn = firewallPolicyArnDecoded
        let firewallPolicyIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallPolicyId)
        firewallPolicyId = firewallPolicyIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let firewallPolicyStatusDecoded = try containerValues.decodeIfPresent(ResourceStatus.self, forKey: .firewallPolicyStatus)
        firewallPolicyStatus = firewallPolicyStatusDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
