// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFirewallsInputBody: Equatable {
    public let nextToken: String?
    public let vpcIds: [String]?
    public let maxResults: Int?
}

extension ListFirewallsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case vpcIds = "VpcIds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let vpcIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .vpcIds)
        var vpcIdsDecoded0:[String]? = nil
        if let vpcIdsContainer = vpcIdsContainer {
            vpcIdsDecoded0 = [String]()
            for string0 in vpcIdsContainer {
                vpcIdsDecoded0?.append(string0)
            }
        }
        vpcIds = vpcIdsDecoded0
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
