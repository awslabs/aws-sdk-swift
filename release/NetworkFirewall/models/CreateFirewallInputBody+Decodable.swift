// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateFirewallInputBody: Equatable {
    public let firewallName: String?
    public let firewallPolicyArn: String?
    public let vpcId: String?
    public let subnetMappings: [SubnetMapping]?
    public let deleteProtection: Bool
    public let subnetChangeProtection: Bool
    public let firewallPolicyChangeProtection: Bool
    public let description: String?
    public let tags: [Tag]?
}

extension CreateFirewallInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deleteProtection = "DeleteProtection"
        case description = "Description"
        case firewallName = "FirewallName"
        case firewallPolicyArn = "FirewallPolicyArn"
        case firewallPolicyChangeProtection = "FirewallPolicyChangeProtection"
        case subnetChangeProtection = "SubnetChangeProtection"
        case subnetMappings = "SubnetMappings"
        case tags = "Tags"
        case vpcId = "VpcId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let firewallNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallName)
        firewallName = firewallNameDecoded
        let firewallPolicyArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallPolicyArn)
        firewallPolicyArn = firewallPolicyArnDecoded
        let vpcIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vpcId)
        vpcId = vpcIdDecoded
        let subnetMappingsContainer = try containerValues.decodeIfPresent([SubnetMapping].self, forKey: .subnetMappings)
        var subnetMappingsDecoded0:[SubnetMapping]? = nil
        if let subnetMappingsContainer = subnetMappingsContainer {
            subnetMappingsDecoded0 = [SubnetMapping]()
            for structure0 in subnetMappingsContainer {
                subnetMappingsDecoded0?.append(structure0)
            }
        }
        subnetMappings = subnetMappingsDecoded0
        let deleteProtectionDecoded = try containerValues.decode(Bool.self, forKey: .deleteProtection)
        deleteProtection = deleteProtectionDecoded
        let subnetChangeProtectionDecoded = try containerValues.decode(Bool.self, forKey: .subnetChangeProtection)
        subnetChangeProtection = subnetChangeProtectionDecoded
        let firewallPolicyChangeProtectionDecoded = try containerValues.decode(Bool.self, forKey: .firewallPolicyChangeProtection)
        firewallPolicyChangeProtection = firewallPolicyChangeProtectionDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
