// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DisassociateSubnetsOutputBody: Equatable {
    public let firewallArn: String?
    public let firewallName: String?
    public let subnetMappings: [SubnetMapping]?
    public let updateToken: String?
}

extension DisassociateSubnetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case firewallArn = "FirewallArn"
        case firewallName = "FirewallName"
        case subnetMappings = "SubnetMappings"
        case updateToken = "UpdateToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let firewallArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallArn)
        firewallArn = firewallArnDecoded
        let firewallNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .firewallName)
        firewallName = firewallNameDecoded
        let subnetMappingsContainer = try containerValues.decodeIfPresent([SubnetMapping].self, forKey: .subnetMappings)
        var subnetMappingsDecoded0:[SubnetMapping]? = nil
        if let subnetMappingsContainer = subnetMappingsContainer {
            subnetMappingsDecoded0 = [SubnetMapping]()
            for structure0 in subnetMappingsContainer {
                subnetMappingsDecoded0?.append(structure0)
            }
        }
        subnetMappings = subnetMappingsDecoded0
        let updateTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .updateToken)
        updateToken = updateTokenDecoded
    }
}
