// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A single stateless rule. This is used in <a>StatelessRulesAndCustomActions</a>.</p>
public struct StatelessRule: Equatable {
    /// <p>A setting that indicates the order in which to run this rule relative to all of the
    ///          rules that are defined for a stateless rule group. Network Firewall evaluates the rules in a
    ///          rule group starting with the lowest priority setting. You must ensure that the priority
    ///          settings are unique for the rule group. </p>
    ///          <p>Each stateless rule group uses exactly one <code>StatelessRulesAndCustomActions</code>
    ///          object, and each <code>StatelessRulesAndCustomActions</code> contains exactly one
    ///             <code>StatelessRules</code> object. To ensure unique priority settings for your rule
    ///          groups, set unique priorities for the stateless rules that you define inside any single
    ///             <code>StatelessRules</code> object.</p>
    ///          <p>You can change the priority settings of your rules at any time. To make it easier to
    ///          insert rules later, number them so there's a wide range in between, for example use 100,
    ///          200, and so on. </p>
    public let priority: Int
    /// <p>Defines the stateless 5-tuple packet inspection criteria and the action to take on a
    ///          packet that matches the criteria. </p>
    public let ruleDefinition: RuleDefinition?

    public init (
        priority: Int = 0,
        ruleDefinition: RuleDefinition? = nil
    )
    {
        self.priority = priority
        self.ruleDefinition = ruleDefinition
    }
}
