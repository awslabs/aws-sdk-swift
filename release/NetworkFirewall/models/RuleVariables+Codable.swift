// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RuleVariables: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iPSets = "IPSets"
        case portSets = "PortSets"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iPSets = iPSets {
            var iPSetsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .iPSets)
            for (dictKey0, ipsets0) in iPSets {
                try iPSetsContainer.encode(ipsets0, forKey: Key(stringValue: dictKey0))
            }
        }
        if let portSets = portSets {
            var portSetsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .portSets)
            for (dictKey0, portsets0) in portSets {
                try portSetsContainer.encode(portsets0, forKey: Key(stringValue: dictKey0))
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iPSetsContainer = try containerValues.decodeIfPresent([String:IPSet].self, forKey: .iPSets)
        var iPSetsDecoded0: [String:IPSet]? = nil
        if let iPSetsContainer = iPSetsContainer {
            iPSetsDecoded0 = [String:IPSet]()
            for (key0, ipset0) in iPSetsContainer {
                iPSetsDecoded0?[key0] = ipset0
            }
        }
        iPSets = iPSetsDecoded0
        let portSetsContainer = try containerValues.decodeIfPresent([String:PortSet].self, forKey: .portSets)
        var portSetsDecoded0: [String:PortSet]? = nil
        if let portSetsContainer = portSetsContainer {
            portSetsDecoded0 = [String:PortSet]()
            for (key0, portset0) in portSetsContainer {
                portSetsDecoded0?[key0] = portset0
            }
        }
        portSets = portSetsDecoded0
    }
}
