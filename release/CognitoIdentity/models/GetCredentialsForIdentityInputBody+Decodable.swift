// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetCredentialsForIdentityInputBody: Equatable {
    public let identityId: String?
    public let logins: [String:String]?
    public let customRoleArn: String?
}

extension GetCredentialsForIdentityInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customRoleArn = "CustomRoleArn"
        case identityId = "IdentityId"
        case logins = "Logins"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityId)
        identityId = identityIdDecoded
        let loginsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .logins)
        var loginsDecoded0: [String:String]? = nil
        if let loginsContainer = loginsContainer {
            loginsDecoded0 = [String:String]()
            for (key0, identityprovidertoken0) in loginsContainer {
                loginsDecoded0?[key0] = identityprovidertoken0
            }
        }
        logins = loginsDecoded0
        let customRoleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .customRoleArn)
        customRoleArn = customRoleArnDecoded
    }
}
