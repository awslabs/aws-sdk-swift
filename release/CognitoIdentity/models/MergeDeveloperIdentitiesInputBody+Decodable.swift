// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct MergeDeveloperIdentitiesInputBody: Equatable {
    public let sourceUserIdentifier: String?
    public let destinationUserIdentifier: String?
    public let developerProviderName: String?
    public let identityPoolId: String?
}

extension MergeDeveloperIdentitiesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case destinationUserIdentifier = "DestinationUserIdentifier"
        case developerProviderName = "DeveloperProviderName"
        case identityPoolId = "IdentityPoolId"
        case sourceUserIdentifier = "SourceUserIdentifier"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sourceUserIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sourceUserIdentifier)
        sourceUserIdentifier = sourceUserIdentifierDecoded
        let destinationUserIdentifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .destinationUserIdentifier)
        destinationUserIdentifier = destinationUserIdentifierDecoded
        let developerProviderNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .developerProviderName)
        developerProviderName = developerProviderNameDecoded
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
    }
}
