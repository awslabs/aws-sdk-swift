// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetIdentityPoolRolesInputBody: Equatable {
    public let identityPoolId: String?
    public let roles: [String:String]?
    public let roleMappings: [String:RoleMapping]?
}

extension SetIdentityPoolRolesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case identityPoolId = "IdentityPoolId"
        case roleMappings = "RoleMappings"
        case roles = "Roles"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let rolesContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .roles)
        var rolesDecoded0: [String:String]? = nil
        if let rolesContainer = rolesContainer {
            rolesDecoded0 = [String:String]()
            for (key0, arnstring0) in rolesContainer {
                rolesDecoded0?[key0] = arnstring0
            }
        }
        roles = rolesDecoded0
        let roleMappingsContainer = try containerValues.decodeIfPresent([String:RoleMapping].self, forKey: .roleMappings)
        var roleMappingsDecoded0: [String:RoleMapping]? = nil
        if let roleMappingsContainer = roleMappingsContainer {
            roleMappingsDecoded0 = [String:RoleMapping]()
            for (key0, rolemapping0) in roleMappingsContainer {
                roleMappingsDecoded0?[key0] = rolemapping0
            }
        }
        roleMappings = roleMappingsDecoded0
    }
}
