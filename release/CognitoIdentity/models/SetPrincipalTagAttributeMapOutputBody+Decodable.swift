// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetPrincipalTagAttributeMapOutputBody: Equatable {
    public let identityPoolId: String?
    public let identityProviderName: String?
    public let useDefaults: Bool?
    public let principalTags: [String:String]?
}

extension SetPrincipalTagAttributeMapOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case identityPoolId = "IdentityPoolId"
        case identityProviderName = "IdentityProviderName"
        case principalTags = "PrincipalTags"
        case useDefaults = "UseDefaults"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let identityProviderNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityProviderName)
        identityProviderName = identityProviderNameDecoded
        let useDefaultsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .useDefaults)
        useDefaults = useDefaultsDecoded
        let principalTagsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .principalTags)
        var principalTagsDecoded0: [String:String]? = nil
        if let principalTagsContainer = principalTagsContainer {
            principalTagsDecoded0 = [String:String]()
            for (key0, principaltagvalue0) in principalTagsContainer {
                principalTagsDecoded0?[key0] = principaltagvalue0
            }
        }
        principalTags = principalTagsDecoded0
    }
}
