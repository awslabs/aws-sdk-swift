// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the input to <a>RestoreDBClusterToPointInTime</a>.</p>
public struct RestoreDBClusterToPointInTimeInput: Equatable {
    /// <p>The name of the new cluster to be created.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                 <p>The first character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterIdentifier: String?
    /// <p>The subnet group name to use for the new cluster.</p>
    ///         <p>Constraints: If provided, must match the name of an existing
    ///                 <code>DBSubnetGroup</code>.</p>
    ///         <p>Example: <code>mySubnetgroup</code>
    ///         </p>
    public let dBSubnetGroupName: String?
    /// <p>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code> is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code> protects clusters from being accidentally deleted.</p>
    public let deletionProtection: Bool?
    /// <p>A list of log types that must be enabled for exporting to Amazon CloudWatch
    ///             Logs.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>The AWS KMS key identifier to use when restoring an encrypted cluster from an encrypted cluster.</p>
    ///         <p>The AWS KMS key identifier is the Amazon Resource Name (ARN) for the AWS KMS encryption key. If you are restoring a cluster with the same AWS account that owns the AWS KMS encryption key used to encrypt the new cluster, then you can use the AWS KMS key alias instead of the ARN for the AWS KMS encryption key.</p>
    ///         <p>You can restore to a new cluster and encrypt the new cluster with an AWS KMS key that is different from the AWS KMS key used to encrypt the source cluster. The new DB cluster is encrypted with the AWS KMS key identified by the <code>KmsKeyId</code> parameter.</p>
    ///         <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>If the cluster is encrypted, then the restored cluster is encrypted using the AWS KMS key that was used to encrypt the source cluster.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the cluster is not encrypted, then the restored cluster is not encrypted.</p>
    ///             </li>
    ///          </ul>
    ///         <p>If <code>DBClusterIdentifier</code> refers to a cluster that is not encrypted, then
    ///             the restore request is rejected.</p>
    public let kmsKeyId: String?
    /// <p>The port number on which the new cluster accepts connections.</p>
    ///         <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>. </p>
    ///         <p>Default: The default port for the engine.</p>
    public let port: Int?
    /// <p>The date and time to restore the cluster to.</p>
    ///         <p>Valid values: A time in Universal Coordinated Time (UTC) format.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Must be before the latest restorable time for the instance.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Must be specified if the <code>UseLatestRestorableTime</code> parameter is not
    ///                     provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Cannot be specified if the <code>UseLatestRestorableTime</code> parameter is
    ///                         <code>true</code>.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Cannot be specified if the <code>RestoreType</code> parameter is
    ///                         <code>copy-on-write</code>.</p>
    ///             </li>
    ///          </ul>
    ///         <p>Example: <code>2015-03-07T23:45:00Z</code>
    ///         </p>
    public let restoreToTime: Date?
    /// <p>The identifier of the source cluster from which to restore.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Must match the identifier of an existing <code>DBCluster</code>.</p>
    ///             </li>
    ///          </ul>
    public let sourceDBClusterIdentifier: String?
    /// <p>The tags to be assigned to the restored cluster.</p>
    public let tags: [Tag]?
    /// <p>A value that is set to <code>true</code> to restore the cluster to the latest
    ///             restorable backup time, and <code>false</code> otherwise. </p>
    ///         <p>Default: <code>false</code>
    ///         </p>
    ///         <p>Constraints: Cannot be specified if the <code>RestoreToTime</code> parameter is
    ///             provided.</p>
    public let useLatestRestorableTime: Bool
    /// <p>A list of VPC security groups that the new cluster belongs to.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        dBClusterIdentifier: String? = nil,
        dBSubnetGroupName: String? = nil,
        deletionProtection: Bool? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        kmsKeyId: String? = nil,
        port: Int? = nil,
        restoreToTime: Date? = nil,
        sourceDBClusterIdentifier: String? = nil,
        tags: [Tag]? = nil,
        useLatestRestorableTime: Bool = false,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.kmsKeyId = kmsKeyId
        self.port = port
        self.restoreToTime = restoreToTime
        self.sourceDBClusterIdentifier = sourceDBClusterIdentifier
        self.tags = tags
        self.useLatestRestorableTime = useLatestRestorableTime
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
