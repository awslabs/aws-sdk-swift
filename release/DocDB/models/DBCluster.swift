// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Detailed information about a cluster. </p>
public struct DBCluster: Equatable {
    /// <p>Provides a list of the AWS Identity and Access Management (IAM) roles that are
    ///             associated with the cluster. IAM roles that are associated with a cluster grant
    ///             permission for the cluster to access other AWS services on your behalf.</p>
    public let associatedRoles: [DBClusterRole]?
    /// <p>Provides the list of Amazon EC2 Availability Zones that instances in the cluster
    ///             can be created in.</p>
    public let availabilityZones: [String]?
    /// <p>Specifies the number of days for which automatic snapshots are retained.</p>
    public let backupRetentionPeriod: Int?
    /// <p>Specifies the time when the cluster was created, in Universal Coordinated Time
    ///             (UTC).</p>
    public let clusterCreateTime: Date?
    /// <p>The Amazon Resource Name (ARN) for the cluster.</p>
    public let dBClusterArn: String?
    /// <p>Contains a user-supplied cluster identifier. This identifier is the unique key that
    ///             identifies a cluster.</p>
    public let dBClusterIdentifier: String?
    /// <p>Provides the list of instances that make up the cluster.</p>
    public let dBClusterMembers: [DBClusterMember]?
    /// <p>Specifies the name of the cluster parameter group for the cluster.</p>
    public let dBClusterParameterGroup: String?
    /// <p>Specifies information on the subnet group that is associated with the cluster,
    ///             including the name, description, and subnets in the subnet group.</p>
    public let dBSubnetGroup: String?
    /// <p>The AWS Region-unique, immutable identifier for the cluster. This identifier is
    ///             found in AWS CloudTrail log entries whenever the AWS KMS key for the cluster is
    ///             accessed.</p>
    public let dbClusterResourceId: String?
    /// <p>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code> is
    ///             enabled, the cluster cannot be deleted unless it is modified and
    ///                 <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code>
    ///             protects clusters from being accidentally deleted.</p>
    public let deletionProtection: Bool
    /// <p>The earliest time to which a database can be restored with point-in-time
    ///             restore.</p>
    public let earliestRestorableTime: Date?
    /// <p>A list of log types that this cluster is configured to export to Amazon CloudWatch
    ///             Logs.</p>
    public let enabledCloudwatchLogsExports: [String]?
    /// <p>Specifies the connection endpoint for the primary instance of the cluster.</p>
    public let endpoint: String?
    /// <p>Provides the name of the database engine to be used for this cluster.</p>
    public let engine: String?
    /// <p>Indicates the database engine version.</p>
    public let engineVersion: String?
    /// <p>Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.</p>
    public let hostedZoneId: String?
    /// <p>If <code>StorageEncrypted</code> is <code>true</code>, the AWS KMS key identifier for
    ///             the encrypted cluster.</p>
    public let kmsKeyId: String?
    /// <p>Specifies the latest time to which a database can be restored with point-in-time
    ///             restore.</p>
    public let latestRestorableTime: Date?
    /// <p>Contains the master user name for the cluster.</p>
    public let masterUsername: String?
    /// <p>Specifies whether the cluster has instances in multiple Availability Zones.</p>
    public let multiAZ: Bool
    /// <p>Specifies the progress of the operation as a percentage.</p>
    public let percentProgress: String?
    /// <p>Specifies the port that the database engine is listening on.</p>
    public let port: Int?
    /// <p>Specifies the daily time range during which automated backups are created if automated
    ///             backups are enabled, as determined by the <code>BackupRetentionPeriod</code>. </p>
    public let preferredBackupWindow: String?
    /// <p>Specifies the weekly time range during which system maintenance can occur, in
    ///             Universal Coordinated Time (UTC).</p>
    public let preferredMaintenanceWindow: String?
    /// <p>Contains one or more identifiers of the secondary clusters that are associated with this cluster.</p>
    public let readReplicaIdentifiers: [String]?
    /// <p>The reader endpoint for the cluster. The reader endpoint for a cluster load balances connections across the Amazon DocumentDB replicas that are available in a cluster. As clients request new connections to the reader endpoint, Amazon DocumentDB distributes the connection requests among the Amazon DocumentDB replicas in the cluster. This functionality can help balance your read workload across multiple Amazon DocumentDB replicas in your cluster. </p>
    ///         <p>If a failover occurs, and the Amazon DocumentDB replica that you are connected to is promoted to be the primary instance, your connection is dropped. To continue sending your read workload to other Amazon DocumentDB replicas in the cluster, you can then reconnect to the reader endpoint.</p>
    public let readerEndpoint: String?
    /// <p>Contains the identifier of the source cluster if this cluster is a secondary cluster.</p>
    public let replicationSourceIdentifier: String?
    /// <p>Specifies the current state of this cluster.</p>
    public let status: String?
    /// <p>Specifies whether the cluster is encrypted.</p>
    public let storageEncrypted: Bool
    /// <p>Provides a list of virtual private cloud (VPC) security groups that the cluster
    ///             belongs to.</p>
    public let vpcSecurityGroups: [VpcSecurityGroupMembership]?

    public init (
        associatedRoles: [DBClusterRole]? = nil,
        availabilityZones: [String]? = nil,
        backupRetentionPeriod: Int? = nil,
        clusterCreateTime: Date? = nil,
        dBClusterArn: String? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterMembers: [DBClusterMember]? = nil,
        dBClusterParameterGroup: String? = nil,
        dBSubnetGroup: String? = nil,
        dbClusterResourceId: String? = nil,
        deletionProtection: Bool = false,
        earliestRestorableTime: Date? = nil,
        enabledCloudwatchLogsExports: [String]? = nil,
        endpoint: String? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        hostedZoneId: String? = nil,
        kmsKeyId: String? = nil,
        latestRestorableTime: Date? = nil,
        masterUsername: String? = nil,
        multiAZ: Bool = false,
        percentProgress: String? = nil,
        port: Int? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        readReplicaIdentifiers: [String]? = nil,
        readerEndpoint: String? = nil,
        replicationSourceIdentifier: String? = nil,
        status: String? = nil,
        storageEncrypted: Bool = false,
        vpcSecurityGroups: [VpcSecurityGroupMembership]? = nil
    )
    {
        self.associatedRoles = associatedRoles
        self.availabilityZones = availabilityZones
        self.backupRetentionPeriod = backupRetentionPeriod
        self.clusterCreateTime = clusterCreateTime
        self.dBClusterArn = dBClusterArn
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterMembers = dBClusterMembers
        self.dBClusterParameterGroup = dBClusterParameterGroup
        self.dBSubnetGroup = dBSubnetGroup
        self.dbClusterResourceId = dbClusterResourceId
        self.deletionProtection = deletionProtection
        self.earliestRestorableTime = earliestRestorableTime
        self.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports
        self.endpoint = endpoint
        self.engine = engine
        self.engineVersion = engineVersion
        self.hostedZoneId = hostedZoneId
        self.kmsKeyId = kmsKeyId
        self.latestRestorableTime = latestRestorableTime
        self.masterUsername = masterUsername
        self.multiAZ = multiAZ
        self.percentProgress = percentProgress
        self.port = port
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.readReplicaIdentifiers = readReplicaIdentifiers
        self.readerEndpoint = readerEndpoint
        self.replicationSourceIdentifier = replicationSourceIdentifier
        self.status = status
        self.storageEncrypted = storageEncrypted
        self.vpcSecurityGroups = vpcSecurityGroups
    }
}
