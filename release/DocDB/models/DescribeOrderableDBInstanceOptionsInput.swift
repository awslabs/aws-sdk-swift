// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input to <a>DescribeOrderableDBInstanceOptions</a>.</p>
public struct DescribeOrderableDBInstanceOptionsInput: Equatable {
    /// <p>The instance class filter value. Specify this parameter to show only the available
    ///             offerings that match the specified instance class.</p>
    public let dBInstanceClass: String?
    /// <p>The name of the engine to retrieve instance options for.</p>
    public let engine: String?
    /// <p>The engine version filter value. Specify this parameter to show only the available
    ///             offerings that match the specified engine version.</p>
    public let engineVersion: String?
    /// <p>This parameter is not currently supported.</p>
    public let filters: [Filter]?
    /// <p>The license model filter value. Specify this parameter to show only the available
    ///             offerings that match the specified license model.</p>
    public let licenseModel: String?
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response
    ///          includes only records beyond the marker, up to the value specified by
    ///          <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p> The maximum number of records to include in the response. If more records exist than
    ///          the specified <code>MaxRecords</code> value, a pagination token (marker) is included
    ///          in the response so that the remaining results can be retrieved.</p>
    ///          <p>Default: 100</p>
    ///         <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The virtual private cloud (VPC) filter value. Specify this parameter to show only the
    ///             available VPC or non-VPC offerings.</p>
    public let vpc: Bool?

    public init (
        dBInstanceClass: String? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        filters: [Filter]? = nil,
        licenseModel: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        vpc: Bool? = nil
    )
    {
        self.dBInstanceClass = dBInstanceClass
        self.engine = engine
        self.engineVersion = engineVersion
        self.filters = filters
        self.licenseModel = licenseModel
        self.marker = marker
        self.maxRecords = maxRecords
        self.vpc = vpc
    }
}
