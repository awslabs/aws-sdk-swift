// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DescribeCertificatesInput: Equatable {
    /// <p>The user-supplied certificate identifier. If this parameter is specified, information for only the specified certificate is returned. If this parameter is omitted, a list of up to <code>MaxRecords</code> certificates is returned. This parameter is not case sensitive.</p>
    ///          <p>Constraints</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match an existing <code>CertificateIdentifier</code>.</p>
    ///             </li>
    ///          </ul>
    public let certificateIdentifier: String?
    /// <p>This parameter is not currently supported.</p>
    public let filters: [Filter]?
    /// <p>An optional pagination token provided by a previous <code>DescribeCertificates</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Minimum: 20</p>
    ///             </li>
    ///             <li>
    ///                <p>Maximum: 100</p>
    ///             </li>
    ///          </ul>
    public let maxRecords: Int?

    public init (
        certificateIdentifier: String? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.certificateIdentifier = certificateIdentifier
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
