// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the input to <a>DescribeEvents</a>.</p>
public struct DescribeEventsInput: Equatable {
    /// <p>The number of minutes to retrieve events for.</p>
    ///         <p>Default: 60</p>
    public let duration: Int?
    /// <p> The end of the time interval for which to retrieve events, specified in ISO 8601
    ///             format. </p>
    ///         <p>Example: 2009-07-08T18:00Z</p>
    public let endTime: Date?
    /// <p>A list of event categories that trigger notifications for an event notification
    ///             subscription.</p>
    public let eventCategories: [String]?
    /// <p>This parameter is not currently supported.</p>
    public let filters: [Filter]?
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response
    ///          includes only records beyond the marker, up to the value specified by
    ///          <code>MaxRecords</code>.</p>
    public let marker: String?
    /// <p> The maximum number of records to include in the response. If more records exist than
    ///          the specified <code>MaxRecords</code> value, a pagination token (marker) is included
    ///          in the response so that the remaining results can be retrieved.</p>
    ///          <p>Default: 100</p>
    ///         <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The identifier of the event source for which events are returned. If not specified, then all sources are included in the response.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>If <code>SourceIdentifier</code> is provided, <code>SourceType</code> must also be provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the source type is <code>DBInstance</code>, a
    ///                         <code>DBInstanceIdentifier</code> must be provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the source type is <code>DBSecurityGroup</code>, a
    ///                         <code>DBSecurityGroupName</code> must be provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the source type is <code>DBParameterGroup</code>, a
    ///                         <code>DBParameterGroupName</code> must be provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the source type is <code>DBSnapshot</code>, a
    ///                         <code>DBSnapshotIdentifier</code> must be provided.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    public let sourceIdentifier: String?
    /// <p>The event source to retrieve events for. If no value is specified, all events are returned.</p>
    public let sourceType: SourceType?
    /// <p> The beginning of the time interval to retrieve events for, specified in ISO 8601 format. </p>
    ///         <p>Example: 2009-07-08T18:00Z</p>
    public let startTime: Date?

    public init (
        duration: Int? = nil,
        endTime: Date? = nil,
        eventCategories: [String]? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        sourceIdentifier: String? = nil,
        sourceType: SourceType? = nil,
        startTime: Date? = nil
    )
    {
        self.duration = duration
        self.endTime = endTime
        self.eventCategories = eventCategories
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.sourceIdentifier = sourceIdentifier
        self.sourceType = sourceType
        self.startTime = startTime
    }
}
