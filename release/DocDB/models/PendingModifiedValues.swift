// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p> One or more modified settings for an instance. These modified settings have been
///             requested, but haven't been applied yet.</p>
public struct PendingModifiedValues: Equatable {
    /// <p> Contains the new <code>AllocatedStorage</code> size for then instance that will be
    ///             applied or is currently being applied. </p>
    public let allocatedStorage: Int?
    /// <p>Specifies the pending number of days for which automated backups are retained.</p>
    public let backupRetentionPeriod: Int?
    /// <p>Specifies the identifier of the certificate authority (CA) certificate for the DB
    ///             instance.</p>
    public let cACertificateIdentifier: String?
    /// <p> Contains the new <code>DBInstanceClass</code> for the instance that will be
    ///             applied or is currently being applied. </p>
    public let dBInstanceClass: String?
    /// <p> Contains the new <code>DBInstanceIdentifier</code> for the instance that will be
    ///             applied or is currently being applied. </p>
    public let dBInstanceIdentifier: String?
    /// <p>The new subnet group for the instance. </p>
    public let dBSubnetGroupName: String?
    /// <p>Indicates the database engine version.</p>
    public let engineVersion: String?
    /// <p>Specifies the new Provisioned IOPS value for the instance that will be applied or
    ///             is currently being applied.</p>
    public let iops: Int?
    /// <p>The license model for the instance.</p>
    ///         <p>Valid values: <code>license-included</code>, <code>bring-your-own-license</code>,
    ///                 <code>general-public-license</code>
    ///          </p>
    public let licenseModel: String?
    /// <p>Contains the pending or currently in-progress change of the master credentials for the
    ///             instance.</p>
    public let masterUserPassword: String?
    /// <p>Indicates that the Single-AZ instance is to change to a Multi-AZ deployment.</p>
    public let multiAZ: Bool?
    /// <p>A list of the log types whose configuration is still pending. These log types are in
    ///             the process of being activated or deactivated.</p>
    public let pendingCloudwatchLogsExports: PendingCloudwatchLogsExports?
    /// <p>Specifies the pending port for the instance.</p>
    public let port: Int?
    /// <p>Specifies the storage type to be associated with the instance.</p>
    public let storageType: String?

    public init (
        allocatedStorage: Int? = nil,
        backupRetentionPeriod: Int? = nil,
        cACertificateIdentifier: String? = nil,
        dBInstanceClass: String? = nil,
        dBInstanceIdentifier: String? = nil,
        dBSubnetGroupName: String? = nil,
        engineVersion: String? = nil,
        iops: Int? = nil,
        licenseModel: String? = nil,
        masterUserPassword: String? = nil,
        multiAZ: Bool? = nil,
        pendingCloudwatchLogsExports: PendingCloudwatchLogsExports? = nil,
        port: Int? = nil,
        storageType: String? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.backupRetentionPeriod = backupRetentionPeriod
        self.cACertificateIdentifier = cACertificateIdentifier
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBSubnetGroupName = dBSubnetGroupName
        self.engineVersion = engineVersion
        self.iops = iops
        self.licenseModel = licenseModel
        self.masterUserPassword = masterUserPassword
        self.multiAZ = multiAZ
        self.pendingCloudwatchLogsExports = pendingCloudwatchLogsExports
        self.port = port
        self.storageType = storageType
    }
}
