// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Operations and objects for transcribing speech to text.</p>
public protocol TranscribeClientProtocol {
    /// <p>Creates a new custom language model. Use Amazon S3 prefixes to provide the location of your
    ///             input files. The time it takes to create your model depends on the size of your training
    ///             data.</p>
    func createLanguageModel(input: CreateLanguageModelInput, completion: @escaping (SdkResult<CreateLanguageModelOutputResponse, CreateLanguageModelOutputError>) -> Void)
    /// <p>Creates a new custom vocabulary that you can use to
    ///             change
    ///             how Amazon Transcribe Medical transcribes your audio file.</p>
    func createMedicalVocabulary(input: CreateMedicalVocabularyInput, completion: @escaping (SdkResult<CreateMedicalVocabularyOutputResponse, CreateMedicalVocabularyOutputError>) -> Void)
    /// <p>Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles
    ///             transcription of an audio file.</p>
    func createVocabulary(input: CreateVocabularyInput, completion: @escaping (SdkResult<CreateVocabularyOutputResponse, CreateVocabularyOutputError>) -> Void)
    /// <p>Creates a new vocabulary filter that you can use to filter words, such as profane
    ///             words, from the output of a transcription job.</p>
    func createVocabularyFilter(input: CreateVocabularyFilterInput, completion: @escaping (SdkResult<CreateVocabularyFilterOutputResponse, CreateVocabularyFilterOutputError>) -> Void)
    /// <p>Deletes a custom language model using its name.</p>
    func deleteLanguageModel(input: DeleteLanguageModelInput, completion: @escaping (SdkResult<DeleteLanguageModelOutputResponse, DeleteLanguageModelOutputError>) -> Void)
    /// <p>Deletes a transcription job generated by Amazon Transcribe Medical and any related information.</p>
    func deleteMedicalTranscriptionJob(input: DeleteMedicalTranscriptionJobInput, completion: @escaping (SdkResult<DeleteMedicalTranscriptionJobOutputResponse, DeleteMedicalTranscriptionJobOutputError>) -> Void)
    /// <p>Deletes a vocabulary from Amazon Transcribe Medical.</p>
    func deleteMedicalVocabulary(input: DeleteMedicalVocabularyInput, completion: @escaping (SdkResult<DeleteMedicalVocabularyOutputResponse, DeleteMedicalVocabularyOutputError>) -> Void)
    /// <p>Deletes a previously submitted transcription job along with any other generated
    ///             results such as the transcription, models, and so on.</p>
    func deleteTranscriptionJob(input: DeleteTranscriptionJobInput, completion: @escaping (SdkResult<DeleteTranscriptionJobOutputResponse, DeleteTranscriptionJobOutputError>) -> Void)
    /// <p>Deletes a vocabulary from Amazon Transcribe. </p>
    func deleteVocabulary(input: DeleteVocabularyInput, completion: @escaping (SdkResult<DeleteVocabularyOutputResponse, DeleteVocabularyOutputError>) -> Void)
    /// <p>Removes a vocabulary filter.</p>
    func deleteVocabularyFilter(input: DeleteVocabularyFilterInput, completion: @escaping (SdkResult<DeleteVocabularyFilterOutputResponse, DeleteVocabularyFilterOutputError>) -> Void)
    /// <p>Gets information about a single custom language model. Use this information to see
    ///             details about the language model in your AWS account. You can also see whether the base
    ///             language model used to create your custom language model has been updated. If Amazon Transcribe has
    ///             updated the base model, you can create a new custom language model using the updated
    ///             base model. If the language model wasn't created, you can use this operation to
    ///             understand why Amazon Transcribe couldn't create it. </p>
    func describeLanguageModel(input: DescribeLanguageModelInput, completion: @escaping (SdkResult<DescribeLanguageModelOutputResponse, DescribeLanguageModelOutputError>) -> Void)
    /// <p>Returns information about a transcription job from Amazon Transcribe Medical. To see the status of the
    ///             job, check the <code>TranscriptionJobStatus</code> field. If the status is
    ///                 <code>COMPLETED</code>, the job is finished. You find the results of the completed
    ///             job in the <code>TranscriptFileUri</code> field.</p>
    func getMedicalTranscriptionJob(input: GetMedicalTranscriptionJobInput, completion: @escaping (SdkResult<GetMedicalTranscriptionJobOutputResponse, GetMedicalTranscriptionJobOutputError>) -> Void)
    /// <p>Retrieves information about a medical vocabulary.</p>
    func getMedicalVocabulary(input: GetMedicalVocabularyInput, completion: @escaping (SdkResult<GetMedicalVocabularyOutputResponse, GetMedicalVocabularyOutputError>) -> Void)
    /// <p>Returns information about a transcription job. To see the status of the job, check the
    ///                 <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>,
    ///             the job is finished and you can find the results at the location specified in the
    ///                 <code>TranscriptFileUri</code> field. If you enable content redaction, the redacted
    ///             transcript appears in <code>RedactedTranscriptFileUri</code>.</p>
    func getTranscriptionJob(input: GetTranscriptionJobInput, completion: @escaping (SdkResult<GetTranscriptionJobOutputResponse, GetTranscriptionJobOutputError>) -> Void)
    /// <p>Gets information about a vocabulary. </p>
    func getVocabulary(input: GetVocabularyInput, completion: @escaping (SdkResult<GetVocabularyOutputResponse, GetVocabularyOutputError>) -> Void)
    /// <p>Returns information about a vocabulary filter.</p>
    func getVocabularyFilter(input: GetVocabularyFilterInput, completion: @escaping (SdkResult<GetVocabularyFilterOutputResponse, GetVocabularyFilterOutputError>) -> Void)
    /// <p>Provides more information about the custom language models you've created. You can use
    ///             the information in this list to find a specific custom language model. You can then use
    ///             the  operation to get more information about
    ///             it.</p>
    func listLanguageModels(input: ListLanguageModelsInput, completion: @escaping (SdkResult<ListLanguageModelsOutputResponse, ListLanguageModelsOutputError>) -> Void)
    /// <p>Lists medical transcription jobs with a specified status or substring that matches
    ///             their names.</p>
    func listMedicalTranscriptionJobs(input: ListMedicalTranscriptionJobsInput, completion: @escaping (SdkResult<ListMedicalTranscriptionJobsOutputResponse, ListMedicalTranscriptionJobsOutputError>) -> Void)
    /// <p>Returns a list of vocabularies that match the specified criteria. If you don't enter a
    ///             value in any of the request parameters, returns the entire list of vocabularies.</p>
    func listMedicalVocabularies(input: ListMedicalVocabulariesInput, completion: @escaping (SdkResult<ListMedicalVocabulariesOutputResponse, ListMedicalVocabulariesOutputError>) -> Void)
    /// <p>Lists transcription jobs with the specified status.</p>
    func listTranscriptionJobs(input: ListTranscriptionJobsInput, completion: @escaping (SdkResult<ListTranscriptionJobsOutputResponse, ListTranscriptionJobsOutputError>) -> Void)
    /// <p>Returns a list of vocabularies that match the specified criteria. If no criteria are
    ///             specified, returns the entire list of vocabularies.</p>
    func listVocabularies(input: ListVocabulariesInput, completion: @escaping (SdkResult<ListVocabulariesOutputResponse, ListVocabulariesOutputError>) -> Void)
    /// <p>Gets information about vocabulary filters.</p>
    func listVocabularyFilters(input: ListVocabularyFiltersInput, completion: @escaping (SdkResult<ListVocabularyFiltersOutputResponse, ListVocabularyFiltersOutputError>) -> Void)
    /// <p>Starts a batch job to transcribe medical speech to text.</p>
    func startMedicalTranscriptionJob(input: StartMedicalTranscriptionJobInput, completion: @escaping (SdkResult<StartMedicalTranscriptionJobOutputResponse, StartMedicalTranscriptionJobOutputError>) -> Void)
    /// <p>Starts an asynchronous job to transcribe speech to text.</p>
    func startTranscriptionJob(input: StartTranscriptionJobInput, completion: @escaping (SdkResult<StartTranscriptionJobOutputResponse, StartTranscriptionJobOutputError>) -> Void)
    /// <p>Updates a vocabulary with new values that you provide in a different text file from
    ///             the one you used to create the vocabulary. The <code>UpdateMedicalVocabulary</code>
    ///             operation overwrites all of the existing information with the values that you provide in
    ///             the request.</p>
    func updateMedicalVocabulary(input: UpdateMedicalVocabularyInput, completion: @escaping (SdkResult<UpdateMedicalVocabularyOutputResponse, UpdateMedicalVocabularyOutputError>) -> Void)
    /// <p>Updates an existing vocabulary with new values. The <code>UpdateVocabulary</code>
    ///             operation overwrites all of the existing information with the values that you provide in
    ///             the request. </p>
    func updateVocabulary(input: UpdateVocabularyInput, completion: @escaping (SdkResult<UpdateVocabularyOutputResponse, UpdateVocabularyOutputError>) -> Void)
    /// <p>Updates a vocabulary filter with a new list of filtered words.</p>
    func updateVocabularyFilter(input: UpdateVocabularyFilterInput, completion: @escaping (SdkResult<UpdateVocabularyFilterOutputResponse, UpdateVocabularyFilterOutputError>) -> Void)
}
