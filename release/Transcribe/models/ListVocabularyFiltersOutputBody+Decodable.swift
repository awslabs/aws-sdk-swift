// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVocabularyFiltersOutputBody: Equatable {
    public let nextToken: String?
    public let vocabularyFilters: [VocabularyFilterInfo]?
}

extension ListVocabularyFiltersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case vocabularyFilters = "VocabularyFilters"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let vocabularyFiltersContainer = try containerValues.decodeIfPresent([VocabularyFilterInfo].self, forKey: .vocabularyFilters)
        var vocabularyFiltersDecoded0:[VocabularyFilterInfo]? = nil
        if let vocabularyFiltersContainer = vocabularyFiltersContainer {
            vocabularyFiltersDecoded0 = [VocabularyFilterInfo]()
            for structure0 in vocabularyFiltersContainer {
                vocabularyFiltersDecoded0?.append(structure0)
            }
        }
        vocabularyFilters = vocabularyFiltersDecoded0
    }
}
