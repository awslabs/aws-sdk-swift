// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateLanguageModelOutputBody: Equatable {
    public let languageCode: CLMLanguageCode?
    public let baseModelName: BaseModelName?
    public let modelName: String?
    public let inputDataConfig: InputDataConfig?
    public let modelStatus: ModelStatus?
}

extension CreateLanguageModelOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case baseModelName = "BaseModelName"
        case inputDataConfig = "InputDataConfig"
        case languageCode = "LanguageCode"
        case modelName = "ModelName"
        case modelStatus = "ModelStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let languageCodeDecoded = try containerValues.decodeIfPresent(CLMLanguageCode.self, forKey: .languageCode)
        languageCode = languageCodeDecoded
        let baseModelNameDecoded = try containerValues.decodeIfPresent(BaseModelName.self, forKey: .baseModelName)
        baseModelName = baseModelNameDecoded
        let modelNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .modelName)
        modelName = modelNameDecoded
        let inputDataConfigDecoded = try containerValues.decodeIfPresent(InputDataConfig.self, forKey: .inputDataConfig)
        inputDataConfig = inputDataConfigDecoded
        let modelStatusDecoded = try containerValues.decodeIfPresent(ModelStatus.self, forKey: .modelStatus)
        modelStatus = modelStatusDecoded
    }
}
