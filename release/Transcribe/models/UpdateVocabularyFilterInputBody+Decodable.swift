// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVocabularyFilterInputBody: Equatable {
    public let words: [String]?
    public let vocabularyFilterFileUri: String?
}

extension UpdateVocabularyFilterInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case vocabularyFilterFileUri = "VocabularyFilterFileUri"
        case words = "Words"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let wordsContainer = try containerValues.decodeIfPresent([String].self, forKey: .words)
        var wordsDecoded0:[String]? = nil
        if let wordsContainer = wordsContainer {
            wordsDecoded0 = [String]()
            for string0 in wordsContainer {
                wordsDecoded0?.append(string0)
            }
        }
        words = wordsDecoded0
        let vocabularyFilterFileUriDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vocabularyFilterFileUri)
        vocabularyFilterFileUri = vocabularyFilterFileUriDecoded
    }
}
