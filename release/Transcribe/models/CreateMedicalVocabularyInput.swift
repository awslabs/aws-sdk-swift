// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateMedicalVocabularyInput: Equatable {
    /// <p>The language code for the language used for the entries in your custom vocabulary. The
    ///             language code of your custom vocabulary must match the language code of your
    ///             transcription job. US English (en-US) is the only language code available for
    ///             Amazon Transcribe Medical.</p>
    public let languageCode: LanguageCode?
    /// <p>The location in Amazon S3 of the text file you use to define your custom vocabulary. The
    ///             URI must be in the same AWS Region as the
    ///             resource
    ///             that you're calling. Enter information about your
    ///                 <code>VocabularyFileUri</code> in the following format:</p>
    ///         <p>
    ///             <code>
    ///                 https://s3.<aws-region>.amazonaws.com/<bucket-name>/<keyprefix>/<objectkey>
    ///             </code>
    ///         </p>
    ///         <p>The following is an example URI for a vocabulary file that is stored in Amazon S3:</p>
    ///         <p>
    ///             <code>https://s3.us-east-1.amazonaws.com/AWSDOC-EXAMPLE-BUCKET/vocab.txt</code>
    ///          </p>
    ///         <p>For more information about Amazon S3 object names, see <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>
    ///         <p>For more information about custom vocabularies, see <a href="http://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary-med">Medical Custom Vocabularies</a>.</p>
    public let vocabularyFileUri: String?
    /// <p>The name of the custom vocabulary. This case-sensitive name must be unique within an
    ///             AWS account. If you try to create a vocabulary with the same name as a previous
    ///             vocabulary, you get a <code>ConflictException</code> error.</p>
    public let vocabularyName: String?

    public init (
        languageCode: LanguageCode? = nil,
        vocabularyFileUri: String? = nil,
        vocabularyName: String? = nil
    )
    {
        self.languageCode = languageCode
        self.vocabularyFileUri = vocabularyFileUri
        self.vocabularyName = vocabularyName
    }
}
