// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum MediaFormat {
    case amr
    case flac
    case mp3
    case mp4
    case ogg
    case wav
    case webm
    case sdkUnknown(String)
}

extension MediaFormat : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [MediaFormat] {
        return [
            .amr,
            .flac,
            .mp3,
            .mp4,
            .ogg,
            .wav,
            .webm,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .amr: return "amr"
        case .flac: return "flac"
        case .mp3: return "mp3"
        case .mp4: return "mp4"
        case .ogg: return "ogg"
        case .wav: return "wav"
        case .webm: return "webm"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = MediaFormat(rawValue: rawValue) ?? MediaFormat.sdkUnknown(rawValue)
    }
}
