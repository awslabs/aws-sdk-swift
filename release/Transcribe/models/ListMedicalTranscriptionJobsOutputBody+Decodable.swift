// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListMedicalTranscriptionJobsOutputBody: Equatable {
    public let status: TranscriptionJobStatus?
    public let nextToken: String?
    public let medicalTranscriptionJobSummaries: [MedicalTranscriptionJobSummary]?
}

extension ListMedicalTranscriptionJobsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case medicalTranscriptionJobSummaries = "MedicalTranscriptionJobSummaries"
        case nextToken = "NextToken"
        case status = "Status"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let statusDecoded = try containerValues.decodeIfPresent(TranscriptionJobStatus.self, forKey: .status)
        status = statusDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let medicalTranscriptionJobSummariesContainer = try containerValues.decodeIfPresent([MedicalTranscriptionJobSummary].self, forKey: .medicalTranscriptionJobSummaries)
        var medicalTranscriptionJobSummariesDecoded0:[MedicalTranscriptionJobSummary]? = nil
        if let medicalTranscriptionJobSummariesContainer = medicalTranscriptionJobSummariesContainer {
            medicalTranscriptionJobSummariesDecoded0 = [MedicalTranscriptionJobSummary]()
            for structure0 in medicalTranscriptionJobSummariesContainer {
                medicalTranscriptionJobSummariesDecoded0?.append(structure0)
            }
        }
        medicalTranscriptionJobSummaries = medicalTranscriptionJobSummariesDecoded0
    }
}
