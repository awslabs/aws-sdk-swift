// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct StartTranscriptionJobInput: Equatable {
    /// <p>An object that contains the request parameters for content redaction.</p>
    public let contentRedaction: ContentRedaction?
    /// <p>Set this field to <code>true</code> to enable automatic language identification.
    ///             Automatic language identification is disabled by default. You receive a
    ///                 <code>BadRequestException</code> error if you enter a value for a
    ///                 <code>LanguageCode</code>.</p>
    public let identifyLanguage: Bool?
    /// <p>Provides information about how a transcription job is executed. Use this field to
    ///             indicate that the job can be queued for deferred execution if the concurrency limit is
    ///             reached and there are no slots available to immediately run the job.</p>
    public let jobExecutionSettings: JobExecutionSettings?
    /// <p>The language code for the language used in the input media file.</p>
    ///         <p>To transcribe speech in Modern Standard Arabic (ar-SA), your audio or video file must
    ///             be encoded at a sample rate of 16000 Hz or higher.</p>
    public let languageCode: LanguageCode?
    /// <p>An object containing a list of languages that might be present in your collection of
    ///             audio files. Automatic language identification chooses a language that best matches the
    ///             source audio from that list.</p>
    public let languageOptions: [LanguageCode]?
    /// <p>An object that describes the input media for a transcription job.</p>
    public let media: Media?
    /// <p>The format of the input media file.</p>
    public let mediaFormat: MediaFormat?
    /// <p>The sample rate, in Hertz, of the audio track in the input media file. </p>
    ///         <p>If you do not specify the media sample rate, Amazon Transcribe determines the sample rate. If you
    ///             specify the sample rate, it must match the sample rate detected by Amazon Transcribe. In most cases,
    ///             you should leave the <code>MediaSampleRateHertz</code> field blank and let Amazon Transcribe
    ///             determine the sample rate.</p>
    public let mediaSampleRateHertz: Int?
    /// <p>Choose the custom language model you use for your transcription job in this
    ///             parameter.</p>
    public let modelSettings: ModelSettings?
    /// <p>The location where the transcription is stored.</p>
    ///         <p>If you set the <code>OutputBucketName</code>, Amazon Transcribe puts the transcript in the
    ///             specified S3 bucket. When you call the <a>GetTranscriptionJob</a> operation,
    ///             the operation returns this location in the <code>TranscriptFileUri</code> field. If you
    ///             enable content redaction, the redacted transcript appears in
    ///                 <code>RedactedTranscriptFileUri</code>. If you enable content redaction and choose
    ///             to output an unredacted transcript, that transcript's location still appears in the
    ///                 <code>TranscriptFileUri</code>. The S3 bucket must have permissions that allow Amazon Transcribe
    ///             to put files in the bucket. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/security_iam_id-based-policy-examples.html#auth-role-iam-user">Permissions Required for IAM User Roles</a>.</p>
    ///         <p>You can specify an AWS Key Management Service (KMS) key to encrypt the output of your
    ///             transcription using the <code>OutputEncryptionKMSKeyId</code> parameter. If you don't
    ///             specify a KMS key, Amazon Transcribe uses the default Amazon S3 key for server-side encryption of
    ///             transcripts that are placed in your S3 bucket.</p>
    ///         <p>If you don't set the <code>OutputBucketName</code>, Amazon Transcribe generates a pre-signed URL,
    ///             a shareable URL that provides secure access to your transcription, and returns it in the
    ///                 <code>TranscriptFileUri</code> field. Use this URL to download the
    ///             transcription.</p>
    public let outputBucketName: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key used to
    ///             encrypt the output of the transcription job. The user calling the
    ///                 <code>StartTranscriptionJob</code> operation must have permission to use the
    ///             specified KMS key.</p>
    ///         <p>You can use either of the following to identify a KMS key in the current
    ///             account:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"</p>
    ///             </li>
    ///             <li>
    ///                 <p>KMS Key Alias: "alias/ExampleAlias"</p>
    ///             </li>
    ///          </ul>
    ///         <p>You can use either of the following to identify a KMS key in the current account or
    ///             another account:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>Amazon Resource Name (ARN) of a KMS Key: "arn:aws:kms:region:account
    ///                     ID:key/1234abcd-12ab-34cd-56ef-1234567890ab"</p>
    ///             </li>
    ///             <li>
    ///                 <p>ARN of a KMS Key Alias: "arn:aws:kms:region:account
    ///                     ID:alias/ExampleAlias"</p>
    ///             </li>
    ///          </ul>
    ///         <p>If you don't specify an encryption key, the output of the transcription job is
    ///             encrypted with the default Amazon S3 key (SSE-S3). </p>
    ///         <p>If you specify a KMS key to encrypt your output, you must also specify an output
    ///             location in the <code>OutputBucketName</code> parameter.</p>
    public let outputEncryptionKMSKeyId: String?
    /// <p>You can specify a location in an Amazon S3 bucket to store the output of your transcription
    ///             job.</p>
    ///         <p>If you don't specify an output key, Amazon Transcribe stores the output of your transcription job
    ///             in the Amazon S3 bucket you specified. By default, the object key is
    ///             "your-transcription-job-name.json".</p>
    ///         <p>You can use output keys to specify the Amazon S3 prefix and file name of the transcription
    ///             output. For example, specifying the Amazon S3 prefix, "folder1/folder2/", as an output key
    ///             would lead to the output being stored as
    ///             "folder1/folder2/your-transcription-job-name.json". If you specify
    ///             "my-other-job-name.json" as the output key, the object key is changed to
    ///             "my-other-job-name.json". You can use an output key to change both the prefix and the
    ///             file name, for example "folder/my-other-job-name.json".</p>
    ///         <p>If you specify an output key, you must also specify an S3 bucket in the
    ///                 <code>OutputBucketName</code> parameter.</p>
    public let outputKey: String?
    /// <p>A <code>Settings</code> object that provides optional settings for a transcription
    ///             job.</p>
    public let settings: Settings?
    /// <p>The name of the job. You can't use the strings "<code>.</code>" or "<code>..</code>"
    ///             by themselves as the job name. The name must also be unique within an AWS account. If
    ///             you try to create a transcription job with the same name as a previous transcription
    ///             job, you get a <code>ConflictException</code> error.</p>
    public let transcriptionJobName: String?

    public init (
        contentRedaction: ContentRedaction? = nil,
        identifyLanguage: Bool? = nil,
        jobExecutionSettings: JobExecutionSettings? = nil,
        languageCode: LanguageCode? = nil,
        languageOptions: [LanguageCode]? = nil,
        media: Media? = nil,
        mediaFormat: MediaFormat? = nil,
        mediaSampleRateHertz: Int? = nil,
        modelSettings: ModelSettings? = nil,
        outputBucketName: String? = nil,
        outputEncryptionKMSKeyId: String? = nil,
        outputKey: String? = nil,
        settings: Settings? = nil,
        transcriptionJobName: String? = nil
    )
    {
        self.contentRedaction = contentRedaction
        self.identifyLanguage = identifyLanguage
        self.jobExecutionSettings = jobExecutionSettings
        self.languageCode = languageCode
        self.languageOptions = languageOptions
        self.media = media
        self.mediaFormat = mediaFormat
        self.mediaSampleRateHertz = mediaSampleRateHertz
        self.modelSettings = modelSettings
        self.outputBucketName = outputBucketName
        self.outputEncryptionKMSKeyId = outputEncryptionKMSKeyId
        self.outputKey = outputKey
        self.settings = settings
        self.transcriptionJobName = transcriptionJobName
    }
}
