// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Optional settings for the <a>StartMedicalTranscriptionJob</a>
///             operation.</p>
public struct MedicalTranscriptionSetting: Equatable {
    /// <p>Instructs Amazon Transcribe Medical to process each audio channel separately and then merge the
    ///             transcription output of each channel into a single transcription.</p>
    ///         <p>Amazon Transcribe Medical also produces a transcription of each item detected on an audio channel,
    ///             including the start time and end time of the item and alternative transcriptions of
    ///             item. The alternative transcriptions also come with confidence scores provided by
    ///             Amazon Transcribe Medical.</p>
    ///         <p>You can't set both <code>ShowSpeakerLabels</code> and
    ///                 <code>ChannelIdentification</code> in the same request. If you set both, your
    ///             request returns a <code>BadRequestException</code>
    ///          </p>
    public let channelIdentification: Bool?
    /// <p>The maximum number of alternatives that you tell the service to return. If you specify
    ///             the <code>MaxAlternatives</code> field, you must set the <code>ShowAlternatives</code>
    ///             field to true.</p>
    public let maxAlternatives: Int?
    /// <p>The maximum number of speakers to identify in the input audio. If there are more
    ///             speakers in the audio than this number, multiple speakers are identified as a single
    ///             speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the
    ///                 <code>ShowSpeakerLabels</code> field to true.</p>
    public let maxSpeakerLabels: Int?
    /// <p>Determines whether alternative transcripts are generated along with the transcript
    ///             that has the highest confidence. If you set <code>ShowAlternatives</code> field to true,
    ///             you must also set the maximum number of alternatives to return in the
    ///                 <code>MaxAlternatives</code> field.</p>
    public let showAlternatives: Bool?
    /// <p>Determines whether the transcription job uses speaker recognition to identify
    ///             different speakers in the input audio. Speaker recognition labels individual speakers in
    ///             the audio file. If you set the <code>ShowSpeakerLabels</code> field to true, you must
    ///             also set the maximum number of speaker labels in the <code>MaxSpeakerLabels</code>
    ///             field.</p>
    ///         <p>You can't set both <code>ShowSpeakerLabels</code> and
    ///                 <code>ChannelIdentification</code> in the same request. If you set both, your
    ///             request returns a <code>BadRequestException</code>.</p>
    public let showSpeakerLabels: Bool?
    /// <p>The name of the vocabulary to use when processing a medical transcription job.</p>
    public let vocabularyName: String?

    public init (
        channelIdentification: Bool? = nil,
        maxAlternatives: Int? = nil,
        maxSpeakerLabels: Int? = nil,
        showAlternatives: Bool? = nil,
        showSpeakerLabels: Bool? = nil,
        vocabularyName: String? = nil
    )
    {
        self.channelIdentification = channelIdentification
        self.maxAlternatives = maxAlternatives
        self.maxSpeakerLabels = maxSpeakerLabels
        self.showAlternatives = showAlternatives
        self.showSpeakerLabels = showSpeakerLabels
        self.vocabularyName = vocabularyName
    }
}
