// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum CLMLanguageCode {
    case enAu
    case enGb
    case enUs
    case esUs
    case hiIn
    case sdkUnknown(String)
}

extension CLMLanguageCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [CLMLanguageCode] {
        return [
            .enAu,
            .enGb,
            .enUs,
            .esUs,
            .hiIn,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .enAu: return "en-AU"
        case .enGb: return "en-GB"
        case .enUs: return "en-US"
        case .esUs: return "es-US"
        case .hiIn: return "hi-IN"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = CLMLanguageCode(rawValue: rawValue) ?? CLMLanguageCode.sdkUnknown(rawValue)
    }
}
