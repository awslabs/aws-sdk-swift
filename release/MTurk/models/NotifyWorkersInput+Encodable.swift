// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension NotifyWorkersInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case messageText = "MessageText"
        case subject = "Subject"
        case workerIds = "WorkerIds"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let messageText = messageText {
            try encodeContainer.encode(messageText, forKey: .messageText)
        }
        if let subject = subject {
            try encodeContainer.encode(subject, forKey: .subject)
        }
        if let workerIds = workerIds {
            var workerIdsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .workerIds)
            for customeridlist0 in workerIds {
                try workerIdsContainer.encode(customeridlist0)
            }
        }
    }
}
