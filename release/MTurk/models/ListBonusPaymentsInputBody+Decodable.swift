// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListBonusPaymentsInputBody: Equatable {
    public let hITId: String?
    public let assignmentId: String?
    public let nextToken: String?
    public let maxResults: Int?
}

extension ListBonusPaymentsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assignmentId = "AssignmentId"
        case hITId = "HITId"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hITIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hITId)
        hITId = hITIdDecoded
        let assignmentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .assignmentId)
        assignmentId = assignmentIdDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
