// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct NotifyWorkersOutputBody: Equatable {
    public let notifyWorkersFailureStatuses: [NotifyWorkersFailureStatus]?
}

extension NotifyWorkersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case notifyWorkersFailureStatuses = "NotifyWorkersFailureStatuses"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notifyWorkersFailureStatusesContainer = try containerValues.decodeIfPresent([NotifyWorkersFailureStatus].self, forKey: .notifyWorkersFailureStatuses)
        var notifyWorkersFailureStatusesDecoded0:[NotifyWorkersFailureStatus]? = nil
        if let notifyWorkersFailureStatusesContainer = notifyWorkersFailureStatusesContainer {
            notifyWorkersFailureStatusesDecoded0 = [NotifyWorkersFailureStatus]()
            for structure0 in notifyWorkersFailureStatusesContainer {
                notifyWorkersFailureStatusesDecoded0?.append(structure0)
            }
        }
        notifyWorkersFailureStatuses = notifyWorkersFailureStatusesDecoded0
    }
}
