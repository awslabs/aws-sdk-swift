// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateQualificationTypeInputBody: Equatable {
    public let qualificationTypeId: String?
    public let description: String?
    public let qualificationTypeStatus: QualificationTypeStatus?
    public let test: String?
    public let answerKey: String?
    public let testDurationInSeconds: Int?
    public let retryDelayInSeconds: Int?
    public let autoGranted: Bool?
    public let autoGrantedValue: Int?
}

extension UpdateQualificationTypeInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case answerKey = "AnswerKey"
        case autoGranted = "AutoGranted"
        case autoGrantedValue = "AutoGrantedValue"
        case description = "Description"
        case qualificationTypeId = "QualificationTypeId"
        case qualificationTypeStatus = "QualificationTypeStatus"
        case retryDelayInSeconds = "RetryDelayInSeconds"
        case test = "Test"
        case testDurationInSeconds = "TestDurationInSeconds"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let qualificationTypeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .qualificationTypeId)
        qualificationTypeId = qualificationTypeIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let qualificationTypeStatusDecoded = try containerValues.decodeIfPresent(QualificationTypeStatus.self, forKey: .qualificationTypeStatus)
        qualificationTypeStatus = qualificationTypeStatusDecoded
        let testDecoded = try containerValues.decodeIfPresent(String.self, forKey: .test)
        test = testDecoded
        let answerKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .answerKey)
        answerKey = answerKeyDecoded
        let testDurationInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .testDurationInSeconds)
        testDurationInSeconds = testDurationInSecondsDecoded
        let retryDelayInSecondsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .retryDelayInSeconds)
        retryDelayInSeconds = retryDelayInSecondsDecoded
        let autoGrantedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .autoGranted)
        autoGranted = autoGrantedDecoded
        let autoGrantedValueDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .autoGrantedValue)
        autoGrantedValue = autoGrantedValueDecoded
    }
}
