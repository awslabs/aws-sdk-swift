// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendBonusInputBody: Equatable {
    public let workerId: String?
    public let bonusAmount: String?
    public let assignmentId: String?
    public let reason: String?
    public let uniqueRequestToken: String?
}

extension SendBonusInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assignmentId = "AssignmentId"
        case bonusAmount = "BonusAmount"
        case reason = "Reason"
        case uniqueRequestToken = "UniqueRequestToken"
        case workerId = "WorkerId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let workerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workerId)
        workerId = workerIdDecoded
        let bonusAmountDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bonusAmount)
        bonusAmount = bonusAmountDecoded
        let assignmentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .assignmentId)
        assignmentId = assignmentIdDecoded
        let reasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .reason)
        reason = reasonDecoded
        let uniqueRequestTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .uniqueRequestToken)
        uniqueRequestToken = uniqueRequestTokenDecoded
    }
}
