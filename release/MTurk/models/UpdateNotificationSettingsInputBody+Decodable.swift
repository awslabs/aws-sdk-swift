// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateNotificationSettingsInputBody: Equatable {
    public let hITTypeId: String?
    public let notification: NotificationSpecification?
    public let active: Bool?
}

extension UpdateNotificationSettingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case active = "Active"
        case hITTypeId = "HITTypeId"
        case notification = "Notification"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hITTypeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hITTypeId)
        hITTypeId = hITTypeIdDecoded
        let notificationDecoded = try containerValues.decodeIfPresent(NotificationSpecification.self, forKey: .notification)
        notification = notificationDecoded
        let activeDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .active)
        active = activeDecoded
    }
}
