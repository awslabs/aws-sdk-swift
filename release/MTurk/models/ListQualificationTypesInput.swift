// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListQualificationTypesInput: Equatable {
    /// <p> The maximum number of results to return in a single call.
    ///         </p>
    public let maxResults: Int?
    /// <p> Specifies that only Qualification types that the Requester
    ///             created are returned. If false, the operation returns all
    ///             Qualification types.
    ///         </p>
    public let mustBeOwnedByCaller: Bool?
    /// <p>Specifies that only Qualification types that a user can
    ///             request through the Amazon Mechanical Turk web site, such as by
    ///             taking a Qualification test, are returned as results of the search.
    ///             Some Qualification types, such as those assigned automatically by the
    ///             system, cannot be requested directly by users. If false, all
    ///             Qualification types, including those managed by the system, are
    ///             considered. Valid values are True | False.
    ///         </p>
    public let mustBeRequestable: Bool?
    /// <p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk
    ///             returns a pagination token in the response. You can use this pagination token
    ///             to retrieve the next set of results.
    ///         </p>
    public let nextToken: String?
    /// <p> A text query against all of the searchable attributes of
    ///             Qualification types.
    ///         </p>
    public let query: String?

    public init (
        maxResults: Int? = nil,
        mustBeOwnedByCaller: Bool? = nil,
        mustBeRequestable: Bool? = nil,
        nextToken: String? = nil,
        query: String? = nil
    )
    {
        self.maxResults = maxResults
        self.mustBeOwnedByCaller = mustBeOwnedByCaller
        self.mustBeRequestable = mustBeRequestable
        self.nextToken = nextToken
        self.query = query
    }
}
