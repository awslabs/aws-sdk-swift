// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAssignmentsForHITOutputBody: Equatable {
    public let nextToken: String?
    public let numResults: Int?
    public let assignments: [Assignment]?
}

extension ListAssignmentsForHITOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assignments = "Assignments"
        case nextToken = "NextToken"
        case numResults = "NumResults"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let numResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numResults)
        numResults = numResultsDecoded
        let assignmentsContainer = try containerValues.decodeIfPresent([Assignment].self, forKey: .assignments)
        var assignmentsDecoded0:[Assignment]? = nil
        if let assignmentsContainer = assignmentsContainer {
            assignmentsDecoded0 = [Assignment]()
            for structure0 in assignmentsContainer {
                assignmentsDecoded0?.append(structure0)
            }
        }
        assignments = assignmentsDecoded0
    }
}
