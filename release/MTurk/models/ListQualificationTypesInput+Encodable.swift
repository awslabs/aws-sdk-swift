// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListQualificationTypesInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case mustBeOwnedByCaller = "MustBeOwnedByCaller"
        case mustBeRequestable = "MustBeRequestable"
        case nextToken = "NextToken"
        case query = "Query"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let mustBeOwnedByCaller = mustBeOwnedByCaller {
            try encodeContainer.encode(mustBeOwnedByCaller, forKey: .mustBeOwnedByCaller)
        }
        if let mustBeRequestable = mustBeRequestable {
            try encodeContainer.encode(mustBeRequestable, forKey: .mustBeRequestable)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let query = query {
            try encodeContainer.encode(query, forKey: .query)
        }
    }
}
