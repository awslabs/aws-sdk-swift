// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListQualificationTypesInputBody: Equatable {
    public let query: String?
    public let mustBeRequestable: Bool?
    public let mustBeOwnedByCaller: Bool?
    public let nextToken: String?
    public let maxResults: Int?
}

extension ListQualificationTypesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case mustBeOwnedByCaller = "MustBeOwnedByCaller"
        case mustBeRequestable = "MustBeRequestable"
        case nextToken = "NextToken"
        case query = "Query"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let queryDecoded = try containerValues.decodeIfPresent(String.self, forKey: .query)
        query = queryDecoded
        let mustBeRequestableDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .mustBeRequestable)
        mustBeRequestable = mustBeRequestableDecoded
        let mustBeOwnedByCallerDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .mustBeOwnedByCaller)
        mustBeOwnedByCaller = mustBeOwnedByCallerDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
