// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SendTestEventNotificationInputBody: Equatable {
    public let notification: NotificationSpecification?
    public let testEventType: EventType?
}

extension SendTestEventNotificationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case notification = "Notification"
        case testEventType = "TestEventType"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let notificationDecoded = try containerValues.decodeIfPresent(NotificationSpecification.self, forKey: .notification)
        notification = notificationDecoded
        let testEventTypeDecoded = try containerValues.decodeIfPresent(EventType.self, forKey: .testEventType)
        testEventType = testEventTypeDecoded
    }
}
