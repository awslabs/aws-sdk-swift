// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AssociateQualificationWithWorkerInputBody: Equatable {
    public let qualificationTypeId: String?
    public let workerId: String?
    public let integerValue: Int?
    public let sendNotification: Bool?
}

extension AssociateQualificationWithWorkerInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case integerValue = "IntegerValue"
        case qualificationTypeId = "QualificationTypeId"
        case sendNotification = "SendNotification"
        case workerId = "WorkerId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let qualificationTypeIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .qualificationTypeId)
        qualificationTypeId = qualificationTypeIdDecoded
        let workerIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .workerId)
        workerId = workerIdDecoded
        let integerValueDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .integerValue)
        integerValue = integerValueDecoded
        let sendNotificationDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .sendNotification)
        sendNotification = sendNotificationDecoded
    }
}
