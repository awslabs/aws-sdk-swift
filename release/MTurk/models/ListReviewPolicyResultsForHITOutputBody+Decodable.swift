// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListReviewPolicyResultsForHITOutputBody: Equatable {
    public let hITId: String?
    public let assignmentReviewPolicy: ReviewPolicy?
    public let hITReviewPolicy: ReviewPolicy?
    public let assignmentReviewReport: ReviewReport?
    public let hITReviewReport: ReviewReport?
    public let nextToken: String?
}

extension ListReviewPolicyResultsForHITOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case assignmentReviewPolicy = "AssignmentReviewPolicy"
        case assignmentReviewReport = "AssignmentReviewReport"
        case hITId = "HITId"
        case hITReviewPolicy = "HITReviewPolicy"
        case hITReviewReport = "HITReviewReport"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hITIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hITId)
        hITId = hITIdDecoded
        let assignmentReviewPolicyDecoded = try containerValues.decodeIfPresent(ReviewPolicy.self, forKey: .assignmentReviewPolicy)
        assignmentReviewPolicy = assignmentReviewPolicyDecoded
        let hITReviewPolicyDecoded = try containerValues.decodeIfPresent(ReviewPolicy.self, forKey: .hITReviewPolicy)
        hITReviewPolicy = hITReviewPolicyDecoded
        let assignmentReviewReportDecoded = try containerValues.decodeIfPresent(ReviewReport.self, forKey: .assignmentReviewReport)
        assignmentReviewReport = assignmentReviewReportDecoded
        let hITReviewReportDecoded = try containerValues.decodeIfPresent(ReviewReport.self, forKey: .hITReviewReport)
        hITReviewReport = hITReviewReportDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
