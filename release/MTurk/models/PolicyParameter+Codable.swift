// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PolicyParameter: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case key = "Key"
        case mapEntries = "MapEntries"
        case values = "Values"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let key = key {
            try encodeContainer.encode(key, forKey: .key)
        }
        if let mapEntries = mapEntries {
            var mapEntriesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .mapEntries)
            for parametermapentrylist0 in mapEntries {
                try mapEntriesContainer.encode(parametermapentrylist0)
            }
        }
        if let values = values {
            var valuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .values)
            for stringlist0 in values {
                try valuesContainer.encode(stringlist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let keyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .key)
        key = keyDecoded
        let valuesContainer = try containerValues.decodeIfPresent([String].self, forKey: .values)
        var valuesDecoded0:[String]? = nil
        if let valuesContainer = valuesContainer {
            valuesDecoded0 = [String]()
            for string0 in valuesContainer {
                valuesDecoded0?.append(string0)
            }
        }
        values = valuesDecoded0
        let mapEntriesContainer = try containerValues.decodeIfPresent([ParameterMapEntry].self, forKey: .mapEntries)
        var mapEntriesDecoded0:[ParameterMapEntry]? = nil
        if let mapEntriesContainer = mapEntriesContainer {
            mapEntriesDecoded0 = [ParameterMapEntry]()
            for structure0 in mapEntriesContainer {
                mapEntriesDecoded0?.append(structure0)
            }
        }
        mapEntries = mapEntriesDecoded0
    }
}
