// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ImageTagDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case createdAt
        case imageDetail
        case imageTag
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let createdAt = createdAt {
            try encodeContainer.encode(createdAt.timeIntervalSince1970, forKey: .createdAt)
        }
        if let imageDetail = imageDetail {
            try encodeContainer.encode(imageDetail, forKey: .imageDetail)
        }
        if let imageTag = imageTag {
            try encodeContainer.encode(imageTag, forKey: .imageTag)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageTag)
        imageTag = imageTagDecoded
        let createdAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .createdAt)
        createdAt = createdAtDecoded
        let imageDetailDecoded = try containerValues.decodeIfPresent(ReferencedImageDetail.self, forKey: .imageDetail)
        imageDetail = imageDetailDecoded
    }
}
