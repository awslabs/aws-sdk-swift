// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An object that describes an image returned by a <a>DescribeImages</a>
///          operation.</p>
public struct ImageDetail: Equatable {
    /// <p>The artifact media type of the image.</p>
    public let artifactMediaType: String?
    /// <p>The <code>sha256</code> digest of the image manifest.</p>
    public let imageDigest: String?
    /// <p>The media type of the image manifest.</p>
    public let imageManifestMediaType: String?
    /// <p>The date and time, expressed in standard JavaScript date format, at which the current
    ///          image was pushed to the repository. </p>
    public let imagePushedAt: Date?
    /// <p>The size, in bytes, of the image in the repository.</p>
    ///          <p>If the image is a manifest list, this will be the max size of all manifests in the
    ///          list.</p>
    ///          <note>
    ///             <p>Beginning with Docker version 1.9, the Docker client compresses image layers before
    ///             pushing them to a V2 Docker registry. The output of the <code>docker images</code>
    ///             command shows the uncompressed image size, so it may return a larger image size than the
    ///             image sizes returned by <a>DescribeImages</a>.</p>
    ///          </note>
    public let imageSizeInBytes: Int?
    /// <p>The list of tags associated with this image.</p>
    public let imageTags: [String]?
    /// <p>The AWS account ID associated with the public registry to which this image
    ///          belongs.</p>
    public let registryId: String?
    /// <p>The name of the repository to which this image belongs.</p>
    public let repositoryName: String?

    public init (
        artifactMediaType: String? = nil,
        imageDigest: String? = nil,
        imageManifestMediaType: String? = nil,
        imagePushedAt: Date? = nil,
        imageSizeInBytes: Int? = nil,
        imageTags: [String]? = nil,
        registryId: String? = nil,
        repositoryName: String? = nil
    )
    {
        self.artifactMediaType = artifactMediaType
        self.imageDigest = imageDigest
        self.imageManifestMediaType = imageManifestMediaType
        self.imagePushedAt = imagePushedAt
        self.imageSizeInBytes = imageSizeInBytes
        self.imageTags = imageTags
        self.registryId = registryId
        self.repositoryName = repositoryName
    }
}
