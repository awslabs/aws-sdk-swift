// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ReferencedImageDetail: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case artifactMediaType
        case imageDigest
        case imageManifestMediaType
        case imagePushedAt
        case imageSizeInBytes
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let artifactMediaType = artifactMediaType {
            try encodeContainer.encode(artifactMediaType, forKey: .artifactMediaType)
        }
        if let imageDigest = imageDigest {
            try encodeContainer.encode(imageDigest, forKey: .imageDigest)
        }
        if let imageManifestMediaType = imageManifestMediaType {
            try encodeContainer.encode(imageManifestMediaType, forKey: .imageManifestMediaType)
        }
        if let imagePushedAt = imagePushedAt {
            try encodeContainer.encode(imagePushedAt.timeIntervalSince1970, forKey: .imagePushedAt)
        }
        if let imageSizeInBytes = imageSizeInBytes {
            try encodeContainer.encode(imageSizeInBytes, forKey: .imageSizeInBytes)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let imageDigestDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageDigest)
        imageDigest = imageDigestDecoded
        let imageSizeInBytesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .imageSizeInBytes)
        imageSizeInBytes = imageSizeInBytesDecoded
        let imagePushedAtDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .imagePushedAt)
        imagePushedAt = imagePushedAtDecoded
        let imageManifestMediaTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .imageManifestMediaType)
        imageManifestMediaType = imageManifestMediaTypeDecoded
        let artifactMediaTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .artifactMediaType)
        artifactMediaType = artifactMediaTypeDecoded
    }
}
