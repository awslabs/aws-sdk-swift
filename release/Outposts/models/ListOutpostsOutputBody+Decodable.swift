// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListOutpostsOutputBody: Equatable {
    public let outposts: [Outpost]?
    public let nextToken: String?
}

extension ListOutpostsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case outposts = "Outposts"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outpostsContainer = try containerValues.decodeIfPresent([Outpost].self, forKey: .outposts)
        var outpostsDecoded0:[Outpost]? = nil
        if let outpostsContainer = outpostsContainer {
            outpostsDecoded0 = [Outpost]()
            for structure0 in outpostsContainer {
                outpostsDecoded0?.append(structure0)
            }
        }
        outposts = outpostsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
