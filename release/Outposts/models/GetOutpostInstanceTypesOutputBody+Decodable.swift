// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetOutpostInstanceTypesOutputBody: Equatable {
    public let instanceTypes: [InstanceTypeItem]?
    public let nextToken: String?
    public let outpostId: String?
    public let outpostArn: String?
}

extension GetOutpostInstanceTypesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case instanceTypes = "InstanceTypes"
        case nextToken = "NextToken"
        case outpostArn = "OutpostArn"
        case outpostId = "OutpostId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let instanceTypesContainer = try containerValues.decodeIfPresent([InstanceTypeItem].self, forKey: .instanceTypes)
        var instanceTypesDecoded0:[InstanceTypeItem]? = nil
        if let instanceTypesContainer = instanceTypesContainer {
            instanceTypesDecoded0 = [InstanceTypeItem]()
            for structure0 in instanceTypesContainer {
                instanceTypesDecoded0?.append(structure0)
            }
        }
        instanceTypes = instanceTypesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let outpostIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outpostId)
        outpostId = outpostIdDecoded
        let outpostArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .outpostArn)
        outpostArn = outpostArnDecoded
    }
}
