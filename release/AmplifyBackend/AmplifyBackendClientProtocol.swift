// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>AWS Amplify Admin API</p>
public protocol AmplifyBackendClientProtocol {
    /// <p>This operation clones an existing backend.</p>
    func cloneBackend(input: CloneBackendInput, completion: @escaping (SdkResult<CloneBackendOutput, CloneBackendOutputError>) -> Void)
    /// <p>This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.</p>
    func createBackend(input: CreateBackendInput, completion: @escaping (SdkResult<CreateBackendOutput, CreateBackendOutputError>) -> Void)
    /// <p>Creates a new backend API resource.</p>
    func createBackendAPI(input: CreateBackendAPIInput, completion: @escaping (SdkResult<CreateBackendAPIOutput, CreateBackendAPIOutputError>) -> Void)
    /// <p>Creates a new backend authentication resource.</p>
    func createBackendAuth(input: CreateBackendAuthInput, completion: @escaping (SdkResult<CreateBackendAuthOutput, CreateBackendAuthOutputError>) -> Void)
    /// <p>Creates a config object for a backend.</p>
    func createBackendConfig(input: CreateBackendConfigInput, completion: @escaping (SdkResult<CreateBackendConfigOutput, CreateBackendConfigOutputError>) -> Void)
    /// <p>Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.</p>
    func createToken(input: CreateTokenInput, completion: @escaping (SdkResult<CreateTokenOutput, CreateTokenOutputError>) -> Void)
    /// <p>Removes an existing environment from your Amplify project.</p>
    func deleteBackend(input: DeleteBackendInput, completion: @escaping (SdkResult<DeleteBackendOutput, DeleteBackendOutputError>) -> Void)
    /// <p>Deletes an existing backend API resource.</p>
    func deleteBackendAPI(input: DeleteBackendAPIInput, completion: @escaping (SdkResult<DeleteBackendAPIOutput, DeleteBackendAPIOutputError>) -> Void)
    /// <p>Deletes an existing backend authentication resource.</p>
    func deleteBackendAuth(input: DeleteBackendAuthInput, completion: @escaping (SdkResult<DeleteBackendAuthOutput, DeleteBackendAuthOutputError>) -> Void)
    /// <p>Deletes the challenge token based on the given appId and sessionId.</p>
    func deleteToken(input: DeleteTokenInput, completion: @escaping (SdkResult<DeleteTokenOutput, DeleteTokenOutputError>) -> Void)
    /// <p>Generates a model schema for an existing backend API resource.</p>
    func generateBackendAPIModels(input: GenerateBackendAPIModelsInput, completion: @escaping (SdkResult<GenerateBackendAPIModelsOutput, GenerateBackendAPIModelsOutputError>) -> Void)
    /// <p>Provides project-level details for your Amplify UI project.</p>
    func getBackend(input: GetBackendInput, completion: @escaping (SdkResult<GetBackendOutput, GetBackendOutputError>) -> Void)
    /// <p>Gets the details for a backend API.</p>
    func getBackendAPI(input: GetBackendAPIInput, completion: @escaping (SdkResult<GetBackendAPIOutput, GetBackendAPIOutputError>) -> Void)
    /// <p>Generates a model schema for existing backend API resource.</p>
    func getBackendAPIModels(input: GetBackendAPIModelsInput, completion: @escaping (SdkResult<GetBackendAPIModelsOutput, GetBackendAPIModelsOutputError>) -> Void)
    /// <p>Gets backend auth details.</p>
    func getBackendAuth(input: GetBackendAuthInput, completion: @escaping (SdkResult<GetBackendAuthOutput, GetBackendAuthOutputError>) -> Void)
    /// <p>Returns information about a specific job.</p>
    func getBackendJob(input: GetBackendJobInput, completion: @escaping (SdkResult<GetBackendJobOutput, GetBackendJobOutputError>) -> Void)
    /// <p>Gets the challenge token based on the given appId and sessionId.</p>
    func getToken(input: GetTokenInput, completion: @escaping (SdkResult<GetTokenOutput, GetTokenOutputError>) -> Void)
    /// <p>Lists the jobs for the backend of an Amplify app.</p>
    func listBackendJobs(input: ListBackendJobsInput, completion: @escaping (SdkResult<ListBackendJobsOutput, ListBackendJobsOutputError>) -> Void)
    /// <p>Removes all backend environments from your Amplify project.</p>
    func removeAllBackends(input: RemoveAllBackendsInput, completion: @escaping (SdkResult<RemoveAllBackendsOutput, RemoveAllBackendsOutputError>) -> Void)
    /// <p>Removes the AWS resources that are required to access the Amplify Admin UI.</p>
    func removeBackendConfig(input: RemoveBackendConfigInput, completion: @escaping (SdkResult<RemoveBackendConfigOutput, RemoveBackendConfigOutputError>) -> Void)
    /// <p>Updates an existing backend API resource.</p>
    func updateBackendAPI(input: UpdateBackendAPIInput, completion: @escaping (SdkResult<UpdateBackendAPIOutput, UpdateBackendAPIOutputError>) -> Void)
    /// <p>Updates an existing backend authentication resource.</p>
    func updateBackendAuth(input: UpdateBackendAuthInput, completion: @escaping (SdkResult<UpdateBackendAuthOutput, UpdateBackendAuthOutputError>) -> Void)
    /// <p>Updates the AWS resources that are required to access the Amplify Admin UI.</p>
    func updateBackendConfig(input: UpdateBackendConfigInput, completion: @escaping (SdkResult<UpdateBackendConfigOutput, UpdateBackendConfigOutputError>) -> Void)
    /// <p>Updates a specific job.</p>
    func updateBackendJob(input: UpdateBackendJobInput, completion: @escaping (SdkResult<UpdateBackendJobOutput, UpdateBackendJobOutputError>) -> Void)
}
