// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackendAPIConflictResolution: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case resolutionStrategy = "resolutionStrategy"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let resolutionStrategy = resolutionStrategy {
            try encodeContainer.encode(resolutionStrategy.rawValue, forKey: .resolutionStrategy)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resolutionStrategyDecoded = try containerValues.decodeIfPresent(ResolutionStrategy.self, forKey: .resolutionStrategy)
        resolutionStrategy = resolutionStrategyDecoded
    }
}
