// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateBackendAuthIdentityPoolConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case identityPoolName = "identityPoolName"
        case unauthenticatedLogin = "unauthenticatedLogin"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identityPoolName = identityPoolName {
            try encodeContainer.encode(identityPoolName, forKey: .identityPoolName)
        }
        if unauthenticatedLogin != false {
            try encodeContainer.encode(unauthenticatedLogin, forKey: .unauthenticatedLogin)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolName)
        identityPoolName = identityPoolNameDecoded
        let unauthenticatedLoginDecoded = try containerValues.decode(Bool.self, forKey: .unauthenticatedLogin)
        unauthenticatedLogin = unauthenticatedLoginDecoded
    }
}
