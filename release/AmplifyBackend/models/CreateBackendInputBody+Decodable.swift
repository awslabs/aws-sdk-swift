// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateBackendInputBody: Equatable {
    public let appId: String?
    public let appName: String?
    public let backendEnvironmentName: String?
    public let resourceConfig: ResourceConfig?
    public let resourceName: String?
}

extension CreateBackendInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appId = "appId"
        case appName = "appName"
        case backendEnvironmentName = "backendEnvironmentName"
        case resourceConfig = "resourceConfig"
        case resourceName = "resourceName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appId)
        appId = appIdDecoded
        let appNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appName)
        appName = appNameDecoded
        let backendEnvironmentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backendEnvironmentName)
        backendEnvironmentName = backendEnvironmentNameDecoded
        let resourceConfigDecoded = try containerValues.decodeIfPresent(ResourceConfig.self, forKey: .resourceConfig)
        resourceConfig = resourceConfigDecoded
        let resourceNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceName)
        resourceName = resourceNameDecoded
    }
}
