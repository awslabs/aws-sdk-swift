// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetTokenOutputBody: Equatable {
    public let appId: String?
    public let challengeCode: String?
    public let sessionId: String?
    public let ttl: String?
}

extension GetTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case appId = "appId"
        case challengeCode = "challengeCode"
        case sessionId = "sessionId"
        case ttl = "ttl"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appId)
        appId = appIdDecoded
        let challengeCodeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .challengeCode)
        challengeCode = challengeCodeDecoded
        let sessionIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sessionId)
        sessionId = sessionIdDecoded
        let ttlDecoded = try containerValues.decodeIfPresent(String.self, forKey: .ttl)
        ttl = ttlDecoded
    }
}
