// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum Mode {
    case amazonCognitoUserPools
    case apiKey
    case awsIam
    case openidConnect
    case sdkUnknown(String)
}

extension Mode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [Mode] {
        return [
            .amazonCognitoUserPools,
            .apiKey,
            .awsIam,
            .openidConnect,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .amazonCognitoUserPools: return "AMAZON_COGNITO_USER_POOLS"
        case .apiKey: return "API_KEY"
        case .awsIam: return "AWS_IAM"
        case .openidConnect: return "OPENID_CONNECT"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = Mode(rawValue: rawValue) ?? Mode.sdkUnknown(rawValue)
    }
}
