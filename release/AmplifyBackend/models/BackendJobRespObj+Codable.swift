// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BackendJobRespObj: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case appId = "appId"
        case backendEnvironmentName = "backendEnvironmentName"
        case createTime = "createTime"
        case error = "error"
        case jobId = "jobId"
        case operation = "operation"
        case status = "status"
        case updateTime = "updateTime"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let appId = appId {
            try encodeContainer.encode(appId, forKey: .appId)
        }
        if let backendEnvironmentName = backendEnvironmentName {
            try encodeContainer.encode(backendEnvironmentName, forKey: .backendEnvironmentName)
        }
        if let createTime = createTime {
            try encodeContainer.encode(createTime, forKey: .createTime)
        }
        if let error = error {
            try encodeContainer.encode(error, forKey: .error)
        }
        if let jobId = jobId {
            try encodeContainer.encode(jobId, forKey: .jobId)
        }
        if let operation = operation {
            try encodeContainer.encode(operation, forKey: .operation)
        }
        if let status = status {
            try encodeContainer.encode(status, forKey: .status)
        }
        if let updateTime = updateTime {
            try encodeContainer.encode(updateTime, forKey: .updateTime)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let appIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .appId)
        appId = appIdDecoded
        let backendEnvironmentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .backendEnvironmentName)
        backendEnvironmentName = backendEnvironmentNameDecoded
        let createTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .createTime)
        createTime = createTimeDecoded
        let errorDecoded = try containerValues.decodeIfPresent(String.self, forKey: .error)
        error = errorDecoded
        let jobIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .jobId)
        jobId = jobIdDecoded
        let operationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .operation)
        operation = operationDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let updateTimeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .updateTime)
        updateTime = updateTimeDecoded
    }
}
