// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum OAuthScopesElement {
    case awsCognitoSigninUserAdmin
    case email
    case openid
    case phone
    case profile
    case sdkUnknown(String)
}

extension OAuthScopesElement : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [OAuthScopesElement] {
        return [
            .awsCognitoSigninUserAdmin,
            .email,
            .openid,
            .phone,
            .profile,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awsCognitoSigninUserAdmin: return "AWS_COGNITO_SIGNIN_USER_ADMIN"
        case .email: return "EMAIL"
        case .openid: return "OPENID"
        case .phone: return "PHONE"
        case .profile: return "PROFILE"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = OAuthScopesElement(rawValue: rawValue) ?? OAuthScopesElement.sdkUnknown(rawValue)
    }
}
