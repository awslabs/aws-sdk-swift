// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension LoginAuthConfigReqObj: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case awsCognitoIdentityPoolId = "aws_cognito_identity_pool_id"
        case awsCognitoRegion = "aws_cognito_region"
        case awsUserPoolsId = "aws_user_pools_id"
        case awsUserPoolsWebClientId = "aws_user_pools_web_client_id"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let awsCognitoIdentityPoolId = awsCognitoIdentityPoolId {
            try encodeContainer.encode(awsCognitoIdentityPoolId, forKey: .awsCognitoIdentityPoolId)
        }
        if let awsCognitoRegion = awsCognitoRegion {
            try encodeContainer.encode(awsCognitoRegion, forKey: .awsCognitoRegion)
        }
        if let awsUserPoolsId = awsUserPoolsId {
            try encodeContainer.encode(awsUserPoolsId, forKey: .awsUserPoolsId)
        }
        if let awsUserPoolsWebClientId = awsUserPoolsWebClientId {
            try encodeContainer.encode(awsUserPoolsWebClientId, forKey: .awsUserPoolsWebClientId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let awsCognitoIdentityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsCognitoIdentityPoolId)
        awsCognitoIdentityPoolId = awsCognitoIdentityPoolIdDecoded
        let awsCognitoRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsCognitoRegion)
        awsCognitoRegion = awsCognitoRegionDecoded
        let awsUserPoolsIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsUserPoolsId)
        awsUserPoolsId = awsUserPoolsIdDecoded
        let awsUserPoolsWebClientIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .awsUserPoolsWebClientId)
        awsUserPoolsWebClientId = awsUserPoolsWebClientIdDecoded
    }
}
