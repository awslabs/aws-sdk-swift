// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeScalableTargetsOutputBody: Equatable {
    public let scalableTargets: [ScalableTarget]?
    public let nextToken: String?
}

extension DescribeScalableTargetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case scalableTargets = "ScalableTargets"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let scalableTargetsContainer = try containerValues.decodeIfPresent([ScalableTarget].self, forKey: .scalableTargets)
        var scalableTargetsDecoded0:[ScalableTarget]? = nil
        if let scalableTargetsContainer = scalableTargetsContainer {
            scalableTargetsDecoded0 = [ScalableTarget]()
            for structure0 in scalableTargetsContainer {
                scalableTargetsDecoded0?.append(structure0)
            }
        }
        scalableTargets = scalableTargetsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
