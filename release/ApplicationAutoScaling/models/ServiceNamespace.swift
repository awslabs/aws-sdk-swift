// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ServiceNamespace {
    case appstream
    case cassandra
    case comprehend
    case customResource
    case dynamodb
    case ec2
    case ecs
    case emr
    case kafka
    case lambda
    case rds
    case sagemaker
    case sdkUnknown(String)
}

extension ServiceNamespace : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ServiceNamespace] {
        return [
            .appstream,
            .cassandra,
            .comprehend,
            .customResource,
            .dynamodb,
            .ec2,
            .ecs,
            .emr,
            .kafka,
            .lambda,
            .rds,
            .sagemaker,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .appstream: return "appstream"
        case .cassandra: return "cassandra"
        case .comprehend: return "comprehend"
        case .customResource: return "custom-resource"
        case .dynamodb: return "dynamodb"
        case .ec2: return "ec2"
        case .ecs: return "ecs"
        case .emr: return "elasticmapreduce"
        case .kafka: return "kafka"
        case .lambda: return "lambda"
        case .rds: return "rds"
        case .sagemaker: return "sagemaker"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ServiceNamespace(rawValue: rawValue) ?? ServiceNamespace.sdkUnknown(rawValue)
    }
}
