// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeScheduledActionsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case resourceId = "ResourceId"
        case scalableDimension = "ScalableDimension"
        case scheduledActionNames = "ScheduledActionNames"
        case serviceNamespace = "ServiceNamespace"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let maxResults = maxResults {
            try encodeContainer.encode(maxResults, forKey: .maxResults)
        }
        if let nextToken = nextToken {
            try encodeContainer.encode(nextToken, forKey: .nextToken)
        }
        if let resourceId = resourceId {
            try encodeContainer.encode(resourceId, forKey: .resourceId)
        }
        if let scalableDimension = scalableDimension {
            try encodeContainer.encode(scalableDimension.rawValue, forKey: .scalableDimension)
        }
        if let scheduledActionNames = scheduledActionNames {
            var scheduledActionNamesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .scheduledActionNames)
            for resourceidsmaxlen16000 in scheduledActionNames {
                try scheduledActionNamesContainer.encode(resourceidsmaxlen16000)
            }
        }
        if let serviceNamespace = serviceNamespace {
            try encodeContainer.encode(serviceNamespace.rawValue, forKey: .serviceNamespace)
        }
    }
}
