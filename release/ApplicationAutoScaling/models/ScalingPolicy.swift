// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents a scaling policy to use with Application Auto Scaling.</p>
///          <p>For more information about configuring scaling policies for a specific service, see
///             <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/getting-started.html">Getting started with Application Auto Scaling</a> in the
///          <i>Application Auto Scaling User Guide</i>.</p>
public struct ScalingPolicy: Equatable {
    /// <p>The CloudWatch alarms associated with the scaling policy.</p>
    public let alarms: [Alarm]?
    /// <p>The Unix timestamp for when the scaling policy was created.</p>
    public let creationTime: Date?
    /// <p>The Amazon Resource Name (ARN) of the scaling policy.</p>
    public let policyARN: String?
    /// <p>The name of the scaling policy.</p>
    public let policyName: String?
    /// <p>The scaling policy type.</p>
    public let policyType: PolicyType?
    /// <p>The identifier of the resource associated with the scaling policy.
    ///       This string consists of the resource type and unique identifier.</p>
    ///          <ul>
    ///             <li>
    ///                <p>ECS service - The resource type is <code>service</code> and the unique identifier is the cluster name
    ///                and service name. Example: <code>service/default/sample-webapp</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Spot Fleet request - The resource type is <code>spot-fleet-request</code> and the unique identifier is the
    ///                Spot Fleet request ID. Example: <code>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>EMR cluster - The resource type is <code>instancegroup</code> and the unique identifier is the cluster ID and instance group ID.
    ///                Example: <code>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>AppStream 2.0 fleet - The resource type is <code>fleet</code> and the unique identifier is the fleet name.
    ///                Example: <code>fleet/sample-fleet</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>DynamoDB table - The resource type is <code>table</code> and the unique identifier is the table name.
    ///                Example: <code>table/my-table</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>DynamoDB global secondary index - The resource type is <code>index</code> and the unique identifier is the index name.
    ///                Example: <code>table/my-table/index/my-table-index</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Aurora DB cluster - The resource type is <code>cluster</code> and the unique identifier is the cluster name.
    ///                Example: <code>cluster:my-db-cluster</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Amazon SageMaker endpoint variant - The resource type is <code>variant</code> and the unique identifier is the resource ID.
    ///                Example: <code>endpoint/my-end-point/variant/KMeansClustering</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Custom resources are not supported with a resource type. This parameter must specify the <code>OutputValue</code> from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information
    ///                is available in our <a href="https://github.com/aws/aws-auto-scaling-custom-resource">GitHub
    ///                   repository</a>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: <code>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: <code>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Lambda provisioned concurrency - The resource type is <code>function</code> and the unique identifier is the function name with a function version or alias name suffix that is not <code>$LATEST</code>.
    ///                Example: <code>function:my-function:prod</code> or <code>function:my-function:1</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Amazon Keyspaces table - The resource type is <code>table</code> and the unique identifier is the table name.
    ///                Example: <code>keyspace/mykeyspace/table/mytable</code>.</p>
    ///            </li>
    ///             <li>
    ///                <p>Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN.
    ///                Example: <code>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</code>.</p>
    ///            </li>
    ///          </ul>
    public let resourceId: String?
    /// <p>The scalable dimension. This string consists of the service namespace, resource type, and scaling property.</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>ecs:service:DesiredCount</code> - The desired task count of an ECS service.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>ec2:spot-fleet-request:TargetCapacity</code> - The target capacity of a Spot Fleet request.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>elasticmapreduce:instancegroup:InstanceCount</code> - The instance count of an EMR Instance Group.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>appstream:fleet:DesiredCapacity</code> - The desired capacity of an AppStream 2.0 fleet.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>dynamodb:table:ReadCapacityUnits</code> - The provisioned read capacity for a DynamoDB table.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>dynamodb:table:WriteCapacityUnits</code> - The provisioned write capacity for a DynamoDB table.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>dynamodb:index:ReadCapacityUnits</code> - The provisioned read capacity for a DynamoDB global secondary index.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>dynamodb:index:WriteCapacityUnits</code> - The provisioned write capacity for a DynamoDB global secondary index.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>rds:cluster:ReadReplicaCount</code> - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>sagemaker:variant:DesiredInstanceCount</code> - The number of EC2 instances for an Amazon SageMaker model endpoint variant.</p>
    ///            </li>
    ///             <li>
    ///               <p>
    ///                   <code>custom-resource:ResourceType:Property</code> - The scalable dimension for a custom resource provided by your own application or service.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>comprehend:document-classifier-endpoint:DesiredInferenceUnits</code> - The number of inference units for an Amazon Comprehend document classification endpoint.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</code> - The number of inference units for an Amazon Comprehend entity recognizer endpoint.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>lambda:function:ProvisionedConcurrency</code> - The provisioned concurrency for a Lambda function.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>cassandra:table:ReadCapacityUnits</code> - The provisioned read capacity for an Amazon Keyspaces table.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>cassandra:table:WriteCapacityUnits</code> -  The provisioned write capacity for an Amazon Keyspaces table.</p>
    ///            </li>
    ///             <li>
    ///                <p>
    ///                   <code>kafka:broker-storage:VolumeSize</code> - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.</p>
    ///            </li>
    ///          </ul>
    public let scalableDimension: ScalableDimension?
    /// <p>The namespace of the AWS service that provides the resource, or a
    ///             <code>custom-resource</code>.</p>
    public let serviceNamespace: ServiceNamespace?
    /// <p>A step scaling policy.</p>
    public let stepScalingPolicyConfiguration: StepScalingPolicyConfiguration?
    /// <p>A target tracking scaling policy.</p>
    public let targetTrackingScalingPolicyConfiguration: TargetTrackingScalingPolicyConfiguration?

    public init (
        alarms: [Alarm]? = nil,
        creationTime: Date? = nil,
        policyARN: String? = nil,
        policyName: String? = nil,
        policyType: PolicyType? = nil,
        resourceId: String? = nil,
        scalableDimension: ScalableDimension? = nil,
        serviceNamespace: ServiceNamespace? = nil,
        stepScalingPolicyConfiguration: StepScalingPolicyConfiguration? = nil,
        targetTrackingScalingPolicyConfiguration: TargetTrackingScalingPolicyConfiguration? = nil
    )
    {
        self.alarms = alarms
        self.creationTime = creationTime
        self.policyARN = policyARN
        self.policyName = policyName
        self.policyType = policyType
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
        self.stepScalingPolicyConfiguration = stepScalingPolicyConfiguration
        self.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration
    }
}
