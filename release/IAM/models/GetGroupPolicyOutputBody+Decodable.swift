// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetGroupPolicyOutputBody: Equatable {
    public let groupName: String?
    public let policyName: String?
    public let policyDocument: String?
}

extension GetGroupPolicyOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case groupName = "GroupName"
        case policyDocument = "PolicyDocument"
        case policyName = "PolicyName"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetGroupPolicyResult"))
        let groupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let policyNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyName)
        policyName = policyNameDecoded
        let policyDocumentDecoded = try containerValues.decodeIfPresent(String.self, forKey: .policyDocument)
        policyDocument = policyDocumentDecoded
    }
}
