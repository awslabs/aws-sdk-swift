// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetAccessKeyLastUsedOutputBody: Equatable {
    public let userName: String?
    public let accessKeyLastUsed: AccessKeyLastUsed?
}

extension GetAccessKeyLastUsedOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessKeyLastUsed = "AccessKeyLastUsed"
        case userName = "UserName"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetAccessKeyLastUsedResult"))
        let userNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userName)
        userName = userNameDecoded
        let accessKeyLastUsedDecoded = try containerValues.decodeIfPresent(AccessKeyLastUsed.self, forKey: .accessKeyLastUsed)
        accessKeyLastUsed = accessKeyLastUsedDecoded
    }
}
