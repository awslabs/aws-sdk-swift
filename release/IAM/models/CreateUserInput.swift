// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateUserInput: Equatable {
    /// <p> The path for the user name. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM
    ///                 identifiers</a> in the <i>IAM User Guide</i>.</p>
    ///         <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>
    ///         <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting
    ///     of either a forward slash (/) by itself or a string that must begin and end with forward slashes.
    ///     In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>), including
    ///     most punctuation characters, digits, and upper and lowercased letters.</p>
    public let path: String?
    /// <p>The ARN of the policy that is used to set the permissions boundary for the
    ///             user.</p>
    public let permissionsBoundary: String?
    /// <p>A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value.
    ///       For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the
    ///       <i>IAM User Guide</i>.</p>
    ///          <note>
    ///             <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request
    ///    fails and the resource is not created.</p>
    ///          </note>
    public let tags: [Tag]?
    /// <p>The name of the user to create.</p>
    ///         <p>IAM user, group, role, and policy names must be unique within the account. Names are
    ///             not distinguished by case. For example, you cannot create resources named both
    ///             "MyResource" and "myresource".</p>
    public let userName: String?

    public init (
        path: String? = nil,
        permissionsBoundary: String? = nil,
        tags: [Tag]? = nil,
        userName: String? = nil
    )
    {
        self.path = path
        self.permissionsBoundary = permissionsBoundary
        self.tags = tags
        self.userName = userName
    }
}
