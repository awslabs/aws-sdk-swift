// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateUserInput: Equatable {
    /// <p>New path for the IAM user. Include this parameter only if you're changing the user's
    ///             path.</p>
    ///         <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting
    ///     of either a forward slash (/) by itself or a string that must begin and end with forward slashes.
    ///     In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>), including
    ///     most punctuation characters, digits, and upper and lowercased letters.</p>
    public let newPath: String?
    /// <p>New name for the user. Include this parameter only if you're changing the user's
    ///             name.</p>
    ///         <p>IAM user, group, role, and policy names must be unique within the account. Names are
    ///             not distinguished by case. For example, you cannot create resources named both
    ///             "MyResource" and "myresource".</p>
    public let newUserName: String?
    /// <p>Name of the user to update. If you're changing the name of the user, this is the
    ///             original user name.</p>
    ///         <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
    ///     characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    public let userName: String?

    public init (
        newPath: String? = nil,
        newUserName: String? = nil,
        userName: String? = nil
    )
    {
        self.newPath = newPath
        self.newUserName = newUserName
        self.userName = userName
    }
}
