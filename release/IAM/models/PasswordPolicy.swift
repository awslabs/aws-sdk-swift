// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the account password policy.</p>
///          <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> operation. </p>
public struct PasswordPolicy: Equatable {
    /// <p>Specifies whether IAM users are allowed to change their own password.</p>
    public let allowUsersToChangePassword: Bool
    /// <p>Indicates whether passwords in the account expire. Returns true if
    ///             <code>MaxPasswordAge</code> contains a value greater than 0. Returns false if
    ///          MaxPasswordAge is 0 or not present.</p>
    public let expirePasswords: Bool
    /// <p>Specifies whether IAM users are prevented from setting a new password after their
    ///          password has expired.</p>
    public let hardExpiry: Bool?
    /// <p>The number of days that an IAM user password is valid.</p>
    public let maxPasswordAge: Int?
    /// <p>Minimum length to require for IAM user passwords.</p>
    public let minimumPasswordLength: Int?
    /// <p>Specifies the number of previous passwords that IAM users are prevented from
    ///          reusing.</p>
    public let passwordReusePrevention: Int?
    /// <p>Specifies whether IAM user passwords must contain at least one lowercase character (a to z).</p>
    public let requireLowercaseCharacters: Bool
    /// <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p>
    public let requireNumbers: Bool
    /// <p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p>
    ///          <p>! @ # $ % ^ & * ( ) _ + - = [ ] { } | '</p>
    public let requireSymbols: Bool
    /// <p>Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).</p>
    public let requireUppercaseCharacters: Bool

    public init (
        allowUsersToChangePassword: Bool = false,
        expirePasswords: Bool = false,
        hardExpiry: Bool? = nil,
        maxPasswordAge: Int? = nil,
        minimumPasswordLength: Int? = nil,
        passwordReusePrevention: Int? = nil,
        requireLowercaseCharacters: Bool = false,
        requireNumbers: Bool = false,
        requireSymbols: Bool = false,
        requireUppercaseCharacters: Bool = false
    )
    {
        self.allowUsersToChangePassword = allowUsersToChangePassword
        self.expirePasswords = expirePasswords
        self.hardExpiry = hardExpiry
        self.maxPasswordAge = maxPasswordAge
        self.minimumPasswordLength = minimumPasswordLength
        self.passwordReusePrevention = passwordReusePrevention
        self.requireLowercaseCharacters = requireLowercaseCharacters
        self.requireNumbers = requireNumbers
        self.requireSymbols = requireSymbols
        self.requireUppercaseCharacters = requireUppercaseCharacters
    }
}
