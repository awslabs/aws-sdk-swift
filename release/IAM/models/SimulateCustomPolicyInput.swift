// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct SimulateCustomPolicyInput: Equatable {
    /// <p>A list of names of API operations to evaluate in the simulation. Each operation is
    ///             evaluated against each resource. Each operation must include the service identifier,
    ///             such as <code>iam:CreateUser</code>. This operation does not support using wildcards (*)
    ///             in an action name.</p>
    public let actionNames: [String]?
    /// <p>The ARN of the IAM user that you want to use as the simulated caller of the API
    ///             operations. <code>CallerArn</code> is required if you include a
    ///                 <code>ResourcePolicy</code> so that the policy's <code>Principal</code> element has
    ///             a value to use in evaluating the policy.</p>
    ///         <p>You can specify only the ARN of an IAM user. You cannot specify the ARN of an
    ///             assumed role, federated user, or a service principal.</p>
    public let callerArn: String?
    /// <p>A list of context keys and corresponding values for the simulation to use. Whenever a
    ///             context key is evaluated in one of the simulated IAM permissions policies, the
    ///             corresponding value is supplied.</p>
    public let contextEntries: [ContextEntry]?
    /// <p>Use this parameter only when paginating results and only after
    ///     you receive a response indicating that the results are truncated. Set it to the value of the
    ///     <code>Marker</code> element in the response that you received to indicate where the next call
    ///     should start.</p>
    public let marker: String?
    /// <p>Use this only when paginating results to indicate the
    ///     maximum number of items you want in the response. If additional items exist beyond the maximum
    ///     you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p>
    ///          <p>If you do not include this parameter, the number of items defaults to 100. Note that
    ///     IAM might return fewer results, even when there are more results available. In that case, the
    ///     <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code>
    ///     contains a value to include in the subsequent call that tells the service where to continue
    ///     from.</p>
    public let maxItems: Int?
    /// <p>The IAM permissions boundary policy to simulate. The permissions boundary sets the
    ///             maximum permissions that an IAM entity can have. You can input only one permissions
    ///             boundary when you pass a policy to this operation. For more information about
    ///             permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM
    ///                 entities</a> in the <i>IAM User Guide</i>. The policy input is
    ///             specified as a string that contains the complete, valid JSON text of a permissions
    ///             boundary policy.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     used to validate this parameter is a string of characters consisting of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Any printable ASCII
    ///     character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p>
    ///             </li>
    ///             <li>
    ///                <p>The printable characters in the Basic Latin and  Latin-1 Supplement character set
    ///     (through <code>\u00FF</code>)</p>
    ///             </li>
    ///             <li>
    ///                <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
    ///     carriage return (<code>\u000D</code>)</p>
    ///             </li>
    ///          </ul>
    public let permissionsBoundaryPolicyInputList: [String]?
    /// <p>A list of policy documents to include in the simulation. Each document is specified as
    ///             a string containing the complete, valid JSON text of an IAM policy. Do not include any
    ///             resource-based policies in this parameter. Any resource-based policy must be submitted
    ///             with the <code>ResourcePolicy</code> parameter. The policies cannot be "scope-down"
    ///             policies, such as you could include in a call to <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetFederationToken.html">GetFederationToken</a> or one of
    ///             the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_AssumeRole.html">AssumeRole</a> API operations. In other words, do not use policies designed to
    ///             restrict what a user can do while using the temporary credentials.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     used to validate this parameter is a string of characters consisting of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Any printable ASCII
    ///     character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p>
    ///             </li>
    ///             <li>
    ///                <p>The printable characters in the Basic Latin and  Latin-1 Supplement character set
    ///     (through <code>\u00FF</code>)</p>
    ///             </li>
    ///             <li>
    ///                <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
    ///     carriage return (<code>\u000D</code>)</p>
    ///             </li>
    ///          </ul>
    public let policyInputList: [String]?
    /// <p>A list of ARNs of AWS resources to include in the simulation. If this parameter is
    ///             not provided, then the value defaults to <code>*</code> (all resources). Each API in the
    ///                 <code>ActionNames</code> parameter is evaluated for each resource in this list. The
    ///             simulation determines the access result (allowed or denied) of each combination and
    ///             reports it in the response. You can simulate resources that don't exist in your
    ///             account.</p>
    ///         <p>The simulation does not automatically retrieve policies for the specified resources.
    ///             If you want to include a resource policy in the simulation, then you must include the
    ///             policy as a string in the <code>ResourcePolicy</code> parameter.</p>
    ///         <p>If you include a <code>ResourcePolicy</code>, then it must be applicable to all of the
    ///             resources included in the simulation or you receive an invalid input error.</p>
    ///         <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.</p>
    public let resourceArns: [String]?
    /// <p>Specifies the type of simulation to run. Different API operations that support
    ///             resource-based policies require different combinations of resources. By specifying the
    ///             type of simulation to run, you enable the policy simulator to enforce the presence of
    ///             the required resources to ensure reliable simulation results. If your simulation does
    ///             not match one of the following scenarios, then you can omit this parameter. The
    ///             following list shows each of the supported scenario values and the resources that you
    ///             must define to run the simulation.</p>
    ///         <p>Each of the EC2 scenarios requires that you specify instance, image, and
    ///             security-group resources. If your scenario includes an EBS volume, then you must specify
    ///             that volume as a resource. If the EC2 scenario includes VPC, then you must supply the
    ///             network-interface resource. If it includes an IP subnet, then you must specify the
    ///             subnet resource. For more information on the EC2 scenario options, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-platforms.html">Supported platforms</a> in the <i>Amazon EC2 User
    ///             Guide</i>.</p>
    ///         <ul>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-Classic-InstanceStore</b>
    ///                 </p>
    ///                 <p>instance, image, security-group</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-Classic-EBS</b>
    ///                 </p>
    ///                 <p>instance, image, security-group, volume</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-VPC-InstanceStore</b>
    ///                 </p>
    ///                 <p>instance, image, security-group, network-interface</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-VPC-InstanceStore-Subnet</b>
    ///                 </p>
    ///                 <p>instance, image, security-group, network-interface, subnet</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-VPC-EBS</b>
    ///                 </p>
    ///                 <p>instance, image, security-group, network-interface, volume</p>
    ///             </li>
    ///             <li>
    ///                 <p>
    ///                     <b>EC2-VPC-EBS-Subnet</b>
    ///                 </p>
    ///                 <p>instance, image, security-group, network-interface, subnet, volume</p>
    ///             </li>
    ///          </ul>
    public let resourceHandlingOption: String?
    /// <p>An ARN representing the AWS account ID that specifies the owner of any simulated
    ///             resource that does not identify its owner in the resource ARN. Examples of resource ARNs
    ///             include an S3 bucket or object. If <code>ResourceOwner</code> is specified, it is also
    ///             used as the account owner of any <code>ResourcePolicy</code> included in the simulation.
    ///             If the <code>ResourceOwner</code> parameter is not specified, then the owner of the
    ///             resources and the resource policy defaults to the account of the identity provided in
    ///                 <code>CallerArn</code>. This parameter is required only if you specify a
    ///             resource-based policy and account that owns the resource is different from the account
    ///             that owns the simulated calling user <code>CallerArn</code>.</p>
    ///         <p>The ARN for an account uses the following syntax:
    ///                     <code>arn:aws:iam::<i>AWS-account-ID</i>:root</code>. For example,
    ///             to represent the account with the 112233445566 ID, use the following ARN:
    ///                 <code>arn:aws:iam::112233445566-ID:root</code>. </p>
    public let resourceOwner: String?
    /// <p>A resource-based policy to include in the simulation provided as a string. Each
    ///             resource in the simulation is treated as if it had this policy attached. You can include
    ///             only one resource-based policy in a simulation.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     used to validate this parameter is a string of characters consisting of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Any printable ASCII
    ///     character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p>
    ///             </li>
    ///             <li>
    ///                <p>The printable characters in the Basic Latin and  Latin-1 Supplement character set
    ///     (through <code>\u00FF</code>)</p>
    ///             </li>
    ///             <li>
    ///                <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
    ///     carriage return (<code>\u000D</code>)</p>
    ///             </li>
    ///          </ul>
    public let resourcePolicy: String?

    public init (
        actionNames: [String]? = nil,
        callerArn: String? = nil,
        contextEntries: [ContextEntry]? = nil,
        marker: String? = nil,
        maxItems: Int? = nil,
        permissionsBoundaryPolicyInputList: [String]? = nil,
        policyInputList: [String]? = nil,
        resourceArns: [String]? = nil,
        resourceHandlingOption: String? = nil,
        resourceOwner: String? = nil,
        resourcePolicy: String? = nil
    )
    {
        self.actionNames = actionNames
        self.callerArn = callerArn
        self.contextEntries = contextEntries
        self.marker = marker
        self.maxItems = maxItems
        self.permissionsBoundaryPolicyInputList = permissionsBoundaryPolicyInputList
        self.policyInputList = policyInputList
        self.resourceArns = resourceArns
        self.resourceHandlingOption = resourceHandlingOption
        self.resourceOwner = resourceOwner
        self.resourcePolicy = resourcePolicy
    }
}
