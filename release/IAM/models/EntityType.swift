// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum EntityType {
    case awsmanagedpolicy
    case group
    case localmanagedpolicy
    case role
    case user
    case sdkUnknown(String)
}

extension EntityType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [EntityType] {
        return [
            .awsmanagedpolicy,
            .group,
            .localmanagedpolicy,
            .role,
            .user,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .awsmanagedpolicy: return "AWSManagedPolicy"
        case .group: return "Group"
        case .localmanagedpolicy: return "LocalManagedPolicy"
        case .role: return "Role"
        case .user: return "User"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = EntityType(rawValue: rawValue) ?? EntityType.sdkUnknown(rawValue)
    }
}
