// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UntagServerCertificateInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let serverCertificateName = serverCertificateName {
            try container.encode(serverCertificateName, forKey: Key("ServerCertificateName"))
        }
        if let tagKeys = tagKeys {
            var tagKeysContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("TagKeys"))
            for (index0, tagkeytype0) in tagKeys.enumerated() {
                try tagKeysContainer.encode(tagkeytype0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("UntagServerCertificate", forKey:Key("Action"))
        try container.encode("2010-05-08", forKey:Key("Version"))
    }
}
