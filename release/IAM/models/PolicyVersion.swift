// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains information about a version of a managed policy.</p>
///          <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p>
///          <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline
///             policies</a> in the <i>IAM User Guide</i>. </p>
public struct PolicyVersion: Equatable {
    /// <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
    ///             format</a>, when the policy version was created.</p>
    public let createDate: Date?
    /// <p>The policy document.</p>
    ///          <p>The policy document is returned in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a> operations. It is not returned in
    ///          the response to the <a>CreatePolicyVersion</a> or <a>ListPolicyVersions</a> operations. </p>
    ///          <p>The policy document returned in this structure is URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding
    ///          method to convert the policy back to plain JSON text. For example, if you use Java, you can
    ///          use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in
    ///          the Java SDK. Other languages and SDKs provide similar functionality.</p>
    public let document: String?
    /// <p>Specifies whether the policy version is set as the policy's default version.</p>
    public let isDefaultVersion: Bool
    /// <p>The identifier for the policy version.</p>
    ///          <p>Policy version identifiers always begin with <code>v</code> (always lowercase). When a
    ///          policy is created, the first policy version is <code>v1</code>. </p>
    public let versionId: String?

    public init (
        createDate: Date? = nil,
        document: String? = nil,
        isDefaultVersion: Bool = false,
        versionId: String? = nil
    )
    {
        self.createDate = createDate
        self.document = document
        self.isDefaultVersion = isDefaultVersion
        self.versionId = versionId
    }
}
