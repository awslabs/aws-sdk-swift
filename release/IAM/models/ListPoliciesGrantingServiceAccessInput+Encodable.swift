// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListPoliciesGrantingServiceAccessInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let arn = arn {
            try container.encode(arn, forKey: Key("Arn"))
        }
        if let marker = marker {
            try container.encode(marker, forKey: Key("Marker"))
        }
        if let serviceNamespaces = serviceNamespaces {
            var serviceNamespacesContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("ServiceNamespaces"))
            for (index0, servicenamespacetype0) in serviceNamespaces.enumerated() {
                try serviceNamespacesContainer.encode(servicenamespacetype0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("ListPoliciesGrantingServiceAccess", forKey:Key("Action"))
        try container.encode("2010-05-08", forKey:Key("Version"))
    }
}
