// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Position: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case column = "Column"
        case line = "Line"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if column != 0 {
            try container.encode(column, forKey: Key("Column"))
        }
        if line != 0 {
            try container.encode(line, forKey: Key("Line"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lineDecoded = try containerValues.decode(Int.self, forKey: .line)
        line = lineDecoded
        let columnDecoded = try containerValues.decode(Int.self, forKey: .column)
        column = columnDecoded
    }
}
