// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The policy usage type that indicates whether the policy is used as a permissions policy
///          or as the permissions boundary for an entity.</p>
///          <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM
///             identities </a> in the <i>IAM User Guide</i>.</p>
public enum PolicyUsageType {
    case permissionsboundary
    case permissionspolicy
    case sdkUnknown(String)
}

extension PolicyUsageType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [PolicyUsageType] {
        return [
            .permissionsboundary,
            .permissionspolicy,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .permissionsboundary: return "PermissionsBoundary"
        case .permissionspolicy: return "PermissionsPolicy"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = PolicyUsageType(rawValue: rawValue) ?? PolicyUsageType.sdkUnknown(rawValue)
    }
}
