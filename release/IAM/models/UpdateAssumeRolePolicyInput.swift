// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateAssumeRolePolicyInput: Equatable {
    /// <p>The policy that grants an entity permission to assume the role.</p>
    ///         <p>You must provide policies in JSON format in IAM. However, for AWS CloudFormation
    ///             templates formatted in YAML, you can provide the policy in JSON or YAML format. AWS
    ///             CloudFormation always converts a YAML policy to JSON format before submitting it to
    ///             IAM.</p>
    ///         <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a>
    ///     used to validate this parameter is a string of characters consisting of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Any printable ASCII
    ///     character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p>
    ///             </li>
    ///             <li>
    ///                <p>The printable characters in the Basic Latin and  Latin-1 Supplement character set
    ///     (through <code>\u00FF</code>)</p>
    ///             </li>
    ///             <li>
    ///                <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and
    ///     carriage return (<code>\u000D</code>)</p>
    ///             </li>
    ///          </ul>
    public let policyDocument: String?
    /// <p>The name of the role to update with the new policy.</p>
    ///         <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric
    ///     characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    public let roleName: String?

    public init (
        policyDocument: String? = nil,
        roleName: String? = nil
    )
    {
        self.policyDocument = policyDocument
        self.roleName = roleName
    }
}
