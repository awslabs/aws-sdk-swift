// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PolicyRole: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case roleId = "RoleId"
        case roleName = "RoleName"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let roleId = roleId {
            try container.encode(roleId, forKey: Key("RoleId"))
        }
        if let roleName = roleName {
            try container.encode(roleName, forKey: Key("RoleName"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let roleNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleName)
        roleName = roleNameDecoded
        let roleIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleId)
        roleId = roleIdDecoded
    }
}
