// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetOrganizationsAccessReportOutput: Equatable {
    /// <p>An object that contains details about the most recent attempt to access the
    ///             service.</p>
    public let accessDetails: [AccessDetail]?
    /// <p>Contains information about the reason that the operation failed.</p>
    ///          <p>This data type is used as a response element in the <a>GetOrganizationsAccessReport</a>, <a>GetServiceLastAccessedDetails</a>, and <a>GetServiceLastAccessedDetailsWithEntities</a> operations.</p>
    public let errorDetails: ErrorDetails?
    /// <p>A flag that indicates whether there are more items to return. If your
    ///     results were truncated, you can make a subsequent pagination request using the <code>Marker</code>
    ///     request parameter to retrieve more items. Note that IAM might return fewer than the
    ///     <code>MaxItems</code> number of results even when there are more results available. We recommend
    ///     that you check <code>IsTruncated</code> after every call to ensure that you receive all your
    ///     results.</p>
    public let isTruncated: Bool
    /// <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
    ///                 format</a>, when the generated report job was completed or failed.</p>
    ///         <p>This field is null if the job is still in progress, as indicated by a job status value
    ///             of <code>IN_PROGRESS</code>.</p>
    public let jobCompletionDate: Date?
    /// <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time
    ///                 format</a>, when the report job was created.</p>
    public let jobCreationDate: Date?
    /// <p>The status of the job.</p>
    public let jobStatus: JobStatusType?
    /// <p>When <code>IsTruncated</code> is <code>true</code>, this element
    ///     is present and contains the value to use for the <code>Marker</code> parameter in a subsequent
    ///     pagination request.</p>
    public let marker: String?
    /// <p>The number of services that the applicable SCPs allow account principals to
    ///             access.</p>
    public let numberOfServicesAccessible: Int?
    /// <p>The number of services that account principals are allowed but did not attempt to
    ///             access.</p>
    public let numberOfServicesNotAccessed: Int?

    public init (
        accessDetails: [AccessDetail]? = nil,
        errorDetails: ErrorDetails? = nil,
        isTruncated: Bool = false,
        jobCompletionDate: Date? = nil,
        jobCreationDate: Date? = nil,
        jobStatus: JobStatusType? = nil,
        marker: String? = nil,
        numberOfServicesAccessible: Int? = nil,
        numberOfServicesNotAccessed: Int? = nil
    )
    {
        self.accessDetails = accessDetails
        self.errorDetails = errorDetails
        self.isTruncated = isTruncated
        self.jobCompletionDate = jobCompletionDate
        self.jobCreationDate = jobCreationDate
        self.jobStatus = jobStatus
        self.marker = marker
        self.numberOfServicesAccessible = numberOfServicesAccessible
        self.numberOfServicesNotAccessed = numberOfServicesNotAccessed
    }
}
