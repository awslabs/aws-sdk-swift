// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetContextKeysForPrincipalPolicyInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let policyInputList = policyInputList {
            var policyInputListContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("PolicyInputList"))
            for (index0, policydocumenttype0) in policyInputList.enumerated() {
                try policyInputListContainer.encode(policydocumenttype0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let policySourceArn = policySourceArn {
            try container.encode(policySourceArn, forKey: Key("PolicySourceArn"))
        }
        try container.encode("GetContextKeysForPrincipalPolicy", forKey:Key("Action"))
        try container.encode("2010-05-08", forKey:Key("Version"))
    }
}
