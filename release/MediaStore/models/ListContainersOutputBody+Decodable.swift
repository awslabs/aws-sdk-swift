// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListContainersOutputBody: Equatable {
    public let containers: [Container]?
    public let nextToken: String?
}

extension ListContainersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case containers = "Containers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let containersContainer = try containerValues.decodeIfPresent([Container].self, forKey: .containers)
        var containersDecoded0:[Container]? = nil
        if let containersContainer = containersContainer {
            containersDecoded0 = [Container]()
            for structure0 in containersContainer {
                containersDecoded0?.append(structure0)
            }
        }
        containers = containersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
