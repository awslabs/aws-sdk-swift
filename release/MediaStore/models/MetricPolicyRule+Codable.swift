// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension MetricPolicyRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case objectGroup = "ObjectGroup"
        case objectGroupName = "ObjectGroupName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let objectGroup = objectGroup {
            try encodeContainer.encode(objectGroup, forKey: .objectGroup)
        }
        if let objectGroupName = objectGroupName {
            try encodeContainer.encode(objectGroupName, forKey: .objectGroupName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let objectGroupDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectGroup)
        objectGroup = objectGroupDecoded
        let objectGroupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .objectGroupName)
        objectGroupName = objectGroupNameDecoded
    }
}
