// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutMetricPolicyInput: Equatable {
    /// <p>The name of the container that you want to add the metric policy to.</p>
    public let containerName: String?
    /// <p>The metric policy that you want to associate with the container. In the policy, you must indicate whether you want MediaStore to send container-level metrics. You can also include up to five rules to define groups of objects that you want MediaStore to send object-level metrics for.  If you include rules in the policy, construct each rule with both of the following:</p>
    ///          <ul>
    ///             <li>
    ///                <p>An object group that defines which objects to include in the group. The definition can be a path or a file name, but it can't have more than 900 characters. Valid characters are: a-z, A-Z, 0-9, _ (underscore), = (equal), : (colon), . (period), - (hyphen), ~ (tilde), / (forward slash), and * (asterisk). Wildcards (*) are acceptable.</p>
    ///             </li>
    ///             <li>
    ///                <p>An object group name that allows you to refer to the object group. The name can't have more than 30 characters. Valid characters are: a-z, A-Z, 0-9, and _ (underscore).</p>
    ///             </li>
    ///          </ul>
    public let metricPolicy: MetricPolicy?

    public init (
        containerName: String? = nil,
        metricPolicy: MetricPolicy? = nil
    )
    {
        self.containerName = containerName
        self.metricPolicy = metricPolicy
    }
}
