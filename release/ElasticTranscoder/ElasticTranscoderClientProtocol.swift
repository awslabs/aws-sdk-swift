// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>AWS Elastic Transcoder Service</fullname>
///         <p>The AWS Elastic Transcoder Service.</p>
public protocol ElasticTranscoderClientProtocol {
    /// <p>The CancelJob operation cancels an unfinished job.</p>
    ///         <note>
    ///             <p>You can only cancel a job that has a status of <code>Submitted</code>. To prevent a
    ///             pipeline from starting to process a job while you're getting the job identifier, use
    ///                 <a>UpdatePipelineStatus</a> to temporarily pause the pipeline.</p>
    ///          </note>
    func cancelJob(input: CancelJobInput, completion: @escaping (SdkResult<CancelJobOutputResponse, CancelJobOutputError>) -> Void)
    /// <p>When you create a job, Elastic Transcoder returns JSON data that includes the values that you specified
    ///             plus information about the job that is created.</p>
    ///         <p>If you have specified more than one output for your jobs (for example, one output for the
    ///             Kindle Fire and another output for the Apple iPhone 4s), you currently must use the Elastic Transcoder API to
    ///             list the jobs (as opposed to the AWS Console).</p>
    func createJob(input: CreateJobInput, completion: @escaping (SdkResult<CreateJobOutputResponse, CreateJobOutputError>) -> Void)
    /// <p>The CreatePipeline operation creates a pipeline with settings that you specify.</p>
    func createPipeline(input: CreatePipelineInput, completion: @escaping (SdkResult<CreatePipelineOutputResponse, CreatePipelineOutputError>) -> Void)
    /// <p>The CreatePreset operation creates a preset with settings that you specify.</p>
    ///         <important>
    ///             <p>Elastic Transcoder checks the CreatePreset settings to ensure that they meet Elastic Transcoder requirements
    ///             and to determine whether they comply with H.264 standards. If your settings are not
    ///             valid for Elastic Transcoder, Elastic Transcoder returns an HTTP 400 response (<code>ValidationException</code>) and
    ///             does not create the preset. If the settings are valid for Elastic Transcoder but aren't strictly
    ///             compliant with the H.264 standard, Elastic Transcoder creates the preset and returns a warning message
    ///             in the response. This helps you determine whether your settings comply with the H.264
    ///             standard while giving you greater flexibility with respect to the video that Elastic Transcoder
    ///             produces.</p>
    ///          </important>
    ///         <p>Elastic Transcoder uses the H.264 video-compression format. For more information, see the International
    ///             Telecommunication Union publication <i>Recommendation ITU-T H.264: Advanced video coding
    ///                 for generic audiovisual services</i>.</p>
    func createPreset(input: CreatePresetInput, completion: @escaping (SdkResult<CreatePresetOutputResponse, CreatePresetOutputError>) -> Void)
    /// <p>The DeletePipeline operation removes a pipeline.</p>
    ///         <p> You can only delete a pipeline that has never been used or that is not currently in use
    ///             (doesn't contain any active jobs). If the pipeline is currently in use,
    ///                 <code>DeletePipeline</code> returns an error. </p>
    func deletePipeline(input: DeletePipelineInput, completion: @escaping (SdkResult<DeletePipelineOutputResponse, DeletePipelineOutputError>) -> Void)
    /// <p>The DeletePreset operation removes a preset that you've added in an AWS region.</p>
    ///         <note>
    ///             <p>You can't delete the default presets that are included with Elastic Transcoder.</p>
    ///         </note>
    func deletePreset(input: DeletePresetInput, completion: @escaping (SdkResult<DeletePresetOutputResponse, DeletePresetOutputError>) -> Void)
    /// <p>The ListJobsByPipeline operation gets a list of the jobs currently in a pipeline.</p>
    ///         <p>Elastic Transcoder returns all of the jobs currently in the specified pipeline. The response body contains
    ///             one element for each job that satisfies the search criteria.</p>
    func listJobsByPipeline(input: ListJobsByPipelineInput, completion: @escaping (SdkResult<ListJobsByPipelineOutputResponse, ListJobsByPipelineOutputError>) -> Void)
    /// <p>The ListJobsByStatus operation gets a list of jobs that have a specified status. The response
    ///             body contains one element for each job that satisfies the search criteria.</p>
    func listJobsByStatus(input: ListJobsByStatusInput, completion: @escaping (SdkResult<ListJobsByStatusOutputResponse, ListJobsByStatusOutputError>) -> Void)
    /// <p>The ListPipelines operation gets a list of the pipelines associated with the current AWS account.</p>
    func listPipelines(input: ListPipelinesInput, completion: @escaping (SdkResult<ListPipelinesOutputResponse, ListPipelinesOutputError>) -> Void)
    /// <p>The ListPresets operation gets a list of the default presets included with Elastic Transcoder and the presets that
    ///             you've added in an AWS region.</p>
    func listPresets(input: ListPresetsInput, completion: @escaping (SdkResult<ListPresetsOutputResponse, ListPresetsOutputError>) -> Void)
    /// <p>The ReadJob operation returns detailed information about a job.</p>
    func readJob(input: ReadJobInput, completion: @escaping (SdkResult<ReadJobOutputResponse, ReadJobOutputError>) -> Void)
    /// <p>The ReadPipeline operation gets detailed information about a pipeline.</p>
    func readPipeline(input: ReadPipelineInput, completion: @escaping (SdkResult<ReadPipelineOutputResponse, ReadPipelineOutputError>) -> Void)
    /// <p>The ReadPreset operation gets detailed information about a preset.</p>
    func readPreset(input: ReadPresetInput, completion: @escaping (SdkResult<ReadPresetOutputResponse, ReadPresetOutputError>) -> Void)
    /// <p>The TestRole operation tests the IAM role used to create the pipeline.</p>
    ///         <p>The <code>TestRole</code> action lets you determine whether the IAM role you are using
    ///             has sufficient permissions to let Elastic Transcoder perform tasks associated with the transcoding
    ///             process. The action attempts to assume the specified IAM role, checks read access to the
    ///             input and output buckets, and tries to send a test notification to Amazon SNS topics
    ///             that you specify.</p>
    @available(*, deprecated)
    func testRole(input: TestRoleInput, completion: @escaping (SdkResult<TestRoleOutputResponse, TestRoleOutputError>) -> Void)
    /// <p> Use the <code>UpdatePipeline</code> operation to update settings for a pipeline.</p>
    ///         <important>
    ///             <p>When you change pipeline settings, your changes take effect immediately.
    ///             Jobs that you have already submitted and that Elastic Transcoder has not started to process are
    ///             affected in addition to jobs that you submit after you change settings. </p>
    ///          </important>
    func updatePipeline(input: UpdatePipelineInput, completion: @escaping (SdkResult<UpdatePipelineOutputResponse, UpdatePipelineOutputError>) -> Void)
    /// <p>With the UpdatePipelineNotifications operation, you can update Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline.</p>
    ///         <p>When you update notifications for a pipeline, Elastic Transcoder returns the values that you specified in the request.</p>
    func updatePipelineNotifications(input: UpdatePipelineNotificationsInput, completion: @escaping (SdkResult<UpdatePipelineNotificationsOutputResponse, UpdatePipelineNotificationsOutputError>) -> Void)
    /// <p>The UpdatePipelineStatus operation pauses or reactivates a pipeline, so that the pipeline
    ///             stops or restarts the processing of jobs.</p>
    ///         <p>Changing the pipeline status is useful if you want to cancel one or more jobs. You can't
    ///             cancel jobs after Elastic Transcoder has started processing them; if you pause the pipeline to which
    ///             you submitted the jobs, you have more time to get the job IDs for the jobs that you want
    ///             to cancel, and to send a <a>CancelJob</a> request. </p>
    func updatePipelineStatus(input: UpdatePipelineStatusInput, completion: @escaping (SdkResult<UpdatePipelineStatusOutputResponse, UpdatePipelineStatusOutputError>) -> Void)
}
