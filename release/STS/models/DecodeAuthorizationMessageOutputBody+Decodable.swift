// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DecodeAuthorizationMessageOutputBody: Equatable {
    public let decodedMessage: String?
}

extension DecodeAuthorizationMessageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case decodedMessage = "DecodedMessage"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DecodeAuthorizationMessageResult"))
        let decodedMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .decodedMessage)
        decodedMessage = decodedMessageDecoded
    }
}
