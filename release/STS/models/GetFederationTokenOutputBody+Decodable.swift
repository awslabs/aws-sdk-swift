// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetFederationTokenOutputBody: Equatable {
    public let credentials: Credentials?
    public let federatedUser: FederatedUser?
    public let packedPolicySize: Int?
}

extension GetFederationTokenOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case credentials = "Credentials"
        case federatedUser = "FederatedUser"
        case packedPolicySize = "PackedPolicySize"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("GetFederationTokenResult"))
        let credentialsDecoded = try containerValues.decodeIfPresent(Credentials.self, forKey: .credentials)
        credentials = credentialsDecoded
        let federatedUserDecoded = try containerValues.decodeIfPresent(FederatedUser.self, forKey: .federatedUser)
        federatedUser = federatedUserDecoded
        let packedPolicySizeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .packedPolicySize)
        packedPolicySize = packedPolicySizeDecoded
    }
}
