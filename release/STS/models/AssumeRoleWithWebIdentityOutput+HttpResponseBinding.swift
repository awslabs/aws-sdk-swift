// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AssumeRoleWithWebIdentityOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: AssumeRoleWithWebIdentityOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.assumedRoleUser = output.assumedRoleUser
            self.audience = output.audience
            self.credentials = output.credentials
            self.packedPolicySize = output.packedPolicySize
            self.provider = output.provider
            self.sourceIdentity = output.sourceIdentity
            self.subjectFromWebIdentityToken = output.subjectFromWebIdentityToken
        } else {
            self.assumedRoleUser = nil
            self.audience = nil
            self.credentials = nil
            self.packedPolicySize = nil
            self.provider = nil
            self.sourceIdentity = nil
            self.subjectFromWebIdentityToken = nil
        }
    }
}
