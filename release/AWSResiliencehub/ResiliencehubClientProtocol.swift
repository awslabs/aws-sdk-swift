// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// AWS Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. Resilience Hub offers continuous resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production.
public protocol ResiliencehubClientProtocol {
    /// Adds the resource mapping for the draft application version.
    func addDraftAppVersionResourceMappings(input: AddDraftAppVersionResourceMappingsInput) async throws -> AddDraftAppVersionResourceMappingsOutputResponse
    /// Creates a Resilience Hub application. A Resilience Hub application is a collection of Amazon Web Services resources structured to prevent and recover Amazon Web Services application disruptions. To describe a Resilience Hub application, you provide an application name, resources from one or more–up to five–CloudFormation stacks, and an appropriate resiliency policy. After you create a Resilience Hub application, you publish it so that you can run a resiliency assessment on it. You can then use recommendations from the assessment to improve resiliency by running another assessment, comparing results, and then iterating the process until you achieve your goals for recovery time objective (RTO) and recovery point objective (RPO).
    func createApp(input: CreateAppInput) async throws -> CreateAppOutputResponse
    /// Creates a new recommendation template.
    func createRecommendationTemplate(input: CreateRecommendationTemplateInput) async throws -> CreateRecommendationTemplateOutputResponse
    /// Creates a resiliency policy for an application.
    func createResiliencyPolicy(input: CreateResiliencyPolicyInput) async throws -> CreateResiliencyPolicyOutputResponse
    /// Deletes an AWS Resilience Hub application. This is a destructive action that can't be undone.
    func deleteApp(input: DeleteAppInput) async throws -> DeleteAppOutputResponse
    /// Deletes an AWS Resilience Hub application assessment. This is a destructive action that can't be undone.
    func deleteAppAssessment(input: DeleteAppAssessmentInput) async throws -> DeleteAppAssessmentOutputResponse
    /// Deletes a recommendation template. This is a destructive action that can't be undone.
    func deleteRecommendationTemplate(input: DeleteRecommendationTemplateInput) async throws -> DeleteRecommendationTemplateOutputResponse
    /// Deletes a resiliency policy. This is a destructive action that can't be undone.
    func deleteResiliencyPolicy(input: DeleteResiliencyPolicyInput) async throws -> DeleteResiliencyPolicyOutputResponse
    /// Describes an AWS Resilience Hub application.
    func describeApp(input: DescribeAppInput) async throws -> DescribeAppOutputResponse
    /// Describes an assessment for an AWS Resilience Hub application.
    func describeAppAssessment(input: DescribeAppAssessmentInput) async throws -> DescribeAppAssessmentOutputResponse
    /// Returns the resolution status for the specified resolution identifier for an application version. If resolutionId is not specified, the current resolution status is returned.
    func describeAppVersionResourcesResolutionStatus(input: DescribeAppVersionResourcesResolutionStatusInput) async throws -> DescribeAppVersionResourcesResolutionStatusOutputResponse
    /// Describes details about an AWS Resilience Hub
    func describeAppVersionTemplate(input: DescribeAppVersionTemplateInput) async throws -> DescribeAppVersionTemplateOutputResponse
    /// Describes the status of importing resources to an application version.
    func describeDraftAppVersionResourcesImportStatus(input: DescribeDraftAppVersionResourcesImportStatusInput) async throws -> DescribeDraftAppVersionResourcesImportStatusOutputResponse
    /// Describes a specified resiliency policy for an AWS Resilience Hub application. The returned policy object includes creation time, data location constraints, the Amazon Resource Name (ARN) for the policy, tags, tier, and more.
    func describeResiliencyPolicy(input: DescribeResiliencyPolicyInput) async throws -> DescribeResiliencyPolicyOutputResponse
    /// Imports resources from sources such as a CloudFormation stack, resource-groups, or application registry app to a draft application version.
    func importResourcesToDraftAppVersion(input: ImportResourcesToDraftAppVersionInput) async throws -> ImportResourcesToDraftAppVersionOutputResponse
    /// Lists the alarm recommendations for a AWS Resilience Hub application.
    func listAlarmRecommendations(input: ListAlarmRecommendationsInput) async throws -> ListAlarmRecommendationsOutputResponse
    /// Lists the assessments for an AWS Resilience Hub application. You can use request parameters to refine the results for the response object.
    func listAppAssessments(input: ListAppAssessmentsInput) async throws -> ListAppAssessmentsOutputResponse
    /// Lists the compliances for an AWS Resilience Hub component.
    func listAppComponentCompliances(input: ListAppComponentCompliancesInput) async throws -> ListAppComponentCompliancesOutputResponse
    /// Lists the recommendations for an AWS Resilience Hub component.
    func listAppComponentRecommendations(input: ListAppComponentRecommendationsInput) async throws -> ListAppComponentRecommendationsOutputResponse
    /// Lists your Resilience Hub applications.
    func listApps(input: ListAppsInput) async throws -> ListAppsOutputResponse
    /// Lists how the resources in an application version are mapped/sourced from. Mappings can be physical resource identifiers, CloudFormation stacks, resource-groups, or an application registry app.
    func listAppVersionResourceMappings(input: ListAppVersionResourceMappingsInput) async throws -> ListAppVersionResourceMappingsOutputResponse
    /// Lists all the resources in an application version.
    func listAppVersionResources(input: ListAppVersionResourcesInput) async throws -> ListAppVersionResourcesOutputResponse
    /// Lists the different versions for the Resilience Hub applications.
    func listAppVersions(input: ListAppVersionsInput) async throws -> ListAppVersionsOutputResponse
    /// Lists the recommendation templates for the Resilience Hub applications.
    func listRecommendationTemplates(input: ListRecommendationTemplatesInput) async throws -> ListRecommendationTemplatesOutputResponse
    /// Lists the resiliency policies for the Resilience Hub applications.
    func listResiliencyPolicies(input: ListResiliencyPoliciesInput) async throws -> ListResiliencyPoliciesOutputResponse
    /// Lists the standard operating procedure (SOP) recommendations for the Resilience Hub applications.
    func listSopRecommendations(input: ListSopRecommendationsInput) async throws -> ListSopRecommendationsOutputResponse
    /// Lists the suggested resiliency policies for the Resilience Hub applications.
    func listSuggestedResiliencyPolicies(input: ListSuggestedResiliencyPoliciesInput) async throws -> ListSuggestedResiliencyPoliciesOutputResponse
    /// Lists the tags for your resources in your Resilience Hub applications.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Lists the test recommendations for the Resilience Hub application.
    func listTestRecommendations(input: ListTestRecommendationsInput) async throws -> ListTestRecommendationsOutputResponse
    /// Lists the resources that are not currently supported in AWS Resilience Hub. An unsupported resource is a resource that exists in the object that was used to create an app, but is not supported by Resilience Hub.
    func listUnsupportedAppVersionResources(input: ListUnsupportedAppVersionResourcesInput) async throws -> ListUnsupportedAppVersionResourcesOutputResponse
    /// Publishes a new version of a specific Resilience Hub application.
    func publishAppVersion(input: PublishAppVersionInput) async throws -> PublishAppVersionOutputResponse
    /// Adds or updates the app template for a draft version of a Resilience Hub app.
    func putDraftAppVersionTemplate(input: PutDraftAppVersionTemplateInput) async throws -> PutDraftAppVersionTemplateOutputResponse
    /// Removes resource mappings from a draft application version.
    func removeDraftAppVersionResourceMappings(input: RemoveDraftAppVersionResourceMappingsInput) async throws -> RemoveDraftAppVersionResourceMappingsOutputResponse
    /// Resolves the resources for an application version.
    func resolveAppVersionResources(input: ResolveAppVersionResourcesInput) async throws -> ResolveAppVersionResourcesOutputResponse
    /// Creates a new application assessment for an application.
    func startAppAssessment(input: StartAppAssessmentInput) async throws -> StartAppAssessmentOutputResponse
    /// Applies one or more tags to a resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes one or more tags from a resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates an application.
    func updateApp(input: UpdateAppInput) async throws -> UpdateAppOutputResponse
    /// Updates a resiliency policy.
    func updateResiliencyPolicy(input: UpdateResiliencyPolicyInput) async throws -> UpdateResiliencyPolicyOutputResponse
}

public protocol ResiliencehubClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum ResiliencehubClientTypes {}
