// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct InvokeEndpointOutput: Equatable {
    /// <p>Includes the inference provided by the model.</p>
    ///         <p>For information about the format of the response body, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-inference.html">Common Data
    ///                 Formats-Inference</a>.</p>
    public let body: Data?
    /// <p>The MIME type of the inference returned in the response body.</p>
    public let contentType: String?
    /// <p>Provides additional information in the response about the inference returned by a
    ///             model hosted at an Amazon SageMaker endpoint. The information is an opaque value that is
    ///             forwarded verbatim. You could use this value, for example, to return an ID received in
    ///             the <code>CustomAttributes</code> header of a request or other metadata that a service
    ///             endpoint was programmed to produce. The value must consist of no more than 1024 visible
    ///             US-ASCII characters as specified in <a href="https://tools.ietf.org/html/rfc7230#section-3.2.6">Section 3.3.6. Field Value
    ///                 Components</a> of the Hypertext Transfer Protocol (HTTP/1.1). If the customer
    ///             wants the custom attribute returned, the model must set the custom attribute to be
    ///             included on the way back. </p>
    ///         <p>The code in your model is responsible for setting or updating any custom attributes in
    ///             the response. If your code does not set this value in the response, an empty value is
    ///             returned. For example, if a custom attribute represents the trace ID, your model can
    ///             prepend the custom attribute with <code>Trace ID:</code> in your post-processing
    ///             function.</p>
    ///         <p>This feature is currently supported in the AWS SDKs but not in the Amazon SageMaker Python
    ///             SDK.</p>
    public let customAttributes: String?
    /// <p>Identifies the production variant that was invoked.</p>
    public let invokedProductionVariant: String?

    public init (
        body: Data? = nil,
        contentType: String? = nil,
        customAttributes: String? = nil,
        invokedProductionVariant: String? = nil
    )
    {
        self.body = body
        self.contentType = contentType
        self.customAttributes = customAttributes
        self.invokedProductionVariant = invokedProductionVariant
    }
}
