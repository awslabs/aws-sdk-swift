// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ModelErrorBody: Equatable {
    public let message: String?
    public let originalStatusCode: Int?
    public let originalMessage: String?
    public let logStreamArn: String?
}

extension ModelErrorBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case logStreamArn = "LogStreamArn"
        case message = "Message"
        case originalMessage = "OriginalMessage"
        case originalStatusCode = "OriginalStatusCode"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let originalStatusCodeDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .originalStatusCode)
        originalStatusCode = originalStatusCodeDecoded
        let originalMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .originalMessage)
        originalMessage = originalMessageDecoded
        let logStreamArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logStreamArn)
        logStreamArn = logStreamArnDecoded
    }
}
