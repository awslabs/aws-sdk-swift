// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UnableToDetectSchemaExceptionBody: Equatable {
    public let message: String?
    public let rawInputRecords: [String]?
    public let processedInputRecords: [String]?
}

extension UnableToDetectSchemaExceptionBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case processedInputRecords = "ProcessedInputRecords"
        case rawInputRecords = "RawInputRecords"
        case message
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let messageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .message)
        message = messageDecoded
        let rawInputRecordsContainer = try containerValues.decodeIfPresent([String].self, forKey: .rawInputRecords)
        var rawInputRecordsDecoded0:[String]? = nil
        if let rawInputRecordsContainer = rawInputRecordsContainer {
            rawInputRecordsDecoded0 = [String]()
            for string0 in rawInputRecordsContainer {
                rawInputRecordsDecoded0?.append(string0)
            }
        }
        rawInputRecords = rawInputRecordsDecoded0
        let processedInputRecordsContainer = try containerValues.decodeIfPresent([String].self, forKey: .processedInputRecords)
        var processedInputRecordsDecoded0:[String]? = nil
        if let processedInputRecordsContainer = processedInputRecordsContainer {
            processedInputRecordsDecoded0 = [String]()
            for string0 in processedInputRecordsContainer {
                processedInputRecordsDecoded0?.append(string0)
            }
        }
        processedInputRecords = processedInputRecordsDecoded0
    }
}
