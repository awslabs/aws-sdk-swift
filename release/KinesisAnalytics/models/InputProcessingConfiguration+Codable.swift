// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputProcessingConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case inputLambdaProcessor = "InputLambdaProcessor"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputLambdaProcessor = inputLambdaProcessor {
            try encodeContainer.encode(inputLambdaProcessor, forKey: .inputLambdaProcessor)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputLambdaProcessorDecoded = try containerValues.decodeIfPresent(InputLambdaProcessor.self, forKey: .inputLambdaProcessor)
        inputLambdaProcessor = inputLambdaProcessorDecoded
    }
}
