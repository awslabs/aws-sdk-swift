// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct StartApplicationInputBody: Equatable {
    public let applicationName: String?
    public let inputConfigurations: [InputConfiguration]?
}

extension StartApplicationInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case applicationName = "ApplicationName"
        case inputConfigurations = "InputConfigurations"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let applicationNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .applicationName)
        applicationName = applicationNameDecoded
        let inputConfigurationsContainer = try containerValues.decodeIfPresent([InputConfiguration].self, forKey: .inputConfigurations)
        var inputConfigurationsDecoded0:[InputConfiguration]? = nil
        if let inputConfigurationsContainer = inputConfigurationsContainer {
            inputConfigurationsDecoded0 = [InputConfiguration]()
            for structure0 in inputConfigurationsContainer {
                inputConfigurationsDecoded0?.append(structure0)
            }
        }
        inputConfigurations = inputConfigurationsDecoded0
    }
}
