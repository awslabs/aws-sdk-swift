// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputProcessingConfigurationUpdate: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case inputLambdaProcessorUpdate = "InputLambdaProcessorUpdate"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let inputLambdaProcessorUpdate = inputLambdaProcessorUpdate {
            try encodeContainer.encode(inputLambdaProcessorUpdate, forKey: .inputLambdaProcessorUpdate)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let inputLambdaProcessorUpdateDecoded = try containerValues.decodeIfPresent(InputLambdaProcessorUpdate.self, forKey: .inputLambdaProcessorUpdate)
        inputLambdaProcessorUpdate = inputLambdaProcessorUpdateDecoded
    }
}
