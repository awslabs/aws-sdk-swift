// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>When you configure the application input, you specify the streaming source,  the
///             in-application stream name that is created, and the mapping between the two.
///             For more information,
///             see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html">Configuring Application Input</a>. </p>
public struct Input: Equatable {
    /// <p>Describes the number of in-application streams to create. </p>
    ///          <p>Data from your source is routed to these in-application input streams.</p>
    ///         <p>    (see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html">Configuring Application Input</a>.</p>
    public let inputParallelism: InputParallelism?
    /// <p>The <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputProcessingConfiguration.html">InputProcessingConfiguration</a> for the input. An input
    ///             processor transforms records as they are received from the stream, before the
    ///             application's SQL code executes. Currently, the only input processing configuration
    ///             available is <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/API_InputLambdaProcessor.html">InputLambdaProcessor</a>.</p>
    public let inputProcessingConfiguration: InputProcessingConfiguration?
    /// <p>Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.</p>
    ///         <p>Also used to describe the format of the reference data source.</p>
    public let inputSchema: SourceSchema?
    /// <p>If the streaming source is an Amazon Kinesis Firehose delivery stream, identifies
    ///             the delivery stream's ARN and an IAM role that enables Amazon Kinesis Analytics to
    ///             access the stream on your behalf.</p>
    ///         <p>Note: Either <code>KinesisStreamsInput</code> or <code>KinesisFirehoseInput</code> is required.</p>
    public let kinesisFirehoseInput: KinesisFirehoseInput?
    /// <p>If the streaming source is an Amazon Kinesis stream,
    ///             identifies the stream's Amazon Resource Name (ARN) and an IAM role
    ///             that enables Amazon Kinesis Analytics to access the stream on your behalf.</p>
    ///         <p>Note: Either <code>KinesisStreamsInput</code> or <code>KinesisFirehoseInput</code> is required.</p>
    public let kinesisStreamsInput: KinesisStreamsInput?
    /// <p>Name prefix to use when creating an in-application stream. Suppose that you specify
    ///             a prefix "MyInApplicationStream." Amazon Kinesis Analytics then creates one or more (as
    ///             per the <code>InputParallelism</code> count you specified) in-application streams with
    ///             names "MyInApplicationStream_001," "MyInApplicationStream_002," and so on. </p>
    public let namePrefix: String?

    public init (
        inputParallelism: InputParallelism? = nil,
        inputProcessingConfiguration: InputProcessingConfiguration? = nil,
        inputSchema: SourceSchema? = nil,
        kinesisFirehoseInput: KinesisFirehoseInput? = nil,
        kinesisStreamsInput: KinesisStreamsInput? = nil,
        namePrefix: String? = nil
    )
    {
        self.inputParallelism = inputParallelism
        self.inputProcessingConfiguration = inputProcessingConfiguration
        self.inputSchema = inputSchema
        self.kinesisFirehoseInput = kinesisFirehoseInput
        self.kinesisStreamsInput = kinesisStreamsInput
        self.namePrefix = namePrefix
    }
}
