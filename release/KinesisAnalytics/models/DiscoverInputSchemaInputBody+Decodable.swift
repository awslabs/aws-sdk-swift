// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DiscoverInputSchemaInputBody: Equatable {
    public let resourceARN: String?
    public let roleARN: String?
    public let inputStartingPositionConfiguration: InputStartingPositionConfiguration?
    public let s3Configuration: S3Configuration?
    public let inputProcessingConfiguration: InputProcessingConfiguration?
}

extension DiscoverInputSchemaInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case inputProcessingConfiguration = "InputProcessingConfiguration"
        case inputStartingPositionConfiguration = "InputStartingPositionConfiguration"
        case resourceARN = "ResourceARN"
        case roleARN = "RoleARN"
        case s3Configuration = "S3Configuration"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let resourceARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
        let roleARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleARN)
        roleARN = roleARNDecoded
        let inputStartingPositionConfigurationDecoded = try containerValues.decodeIfPresent(InputStartingPositionConfiguration.self, forKey: .inputStartingPositionConfiguration)
        inputStartingPositionConfiguration = inputStartingPositionConfigurationDecoded
        let s3ConfigurationDecoded = try containerValues.decodeIfPresent(S3Configuration.self, forKey: .s3Configuration)
        s3Configuration = s3ConfigurationDecoded
        let inputProcessingConfigurationDecoded = try containerValues.decodeIfPresent(InputProcessingConfiguration.self, forKey: .inputProcessingConfiguration)
        inputProcessingConfiguration = inputProcessingConfigurationDecoded
    }
}
