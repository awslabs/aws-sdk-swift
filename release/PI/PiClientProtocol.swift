// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>Amazon RDS Performance Insights</fullname>
///
///          <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of
///       database load based on data captured from a running DB instance. The guide provides detailed
///       information about Performance Insights data types, parameters and errors.</p>
///
///          <p>When Performance Insights is enabled, the Amazon RDS Performance Insights API provides visibility into the performance of your DB instance. Amazon
///       CloudWatch provides the authoritative source for AWS service-vended monitoring metrics.  Performance Insights offers a domain-specific
///       view of DB load. </p>
///          <p>DB load is measured as Average Active Sessions. Performance Insights provides the data to API consumers as a two-dimensional
///       time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time
///       point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include
///       SQL, Wait event, User, and Host.</p>
///
///          <ul>
///             <li>
///                <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html">Amazon Aurora User Guide</a>.</p>
///             </li>
///             <li>
///                <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Amazon RDS User Guide</a>.</p>
///             </li>
///          </ul>
public protocol PiClientProtocol {
    /// <p>For a specific time period, retrieve the top <code>N</code> dimension keys for a
    ///       metric.</p>
    ///          <note>
    ///             <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements,
    ///         only the first 500 bytes are returned.</p>
    ///          </note>
    func describeDimensionKeys(input: DescribeDimensionKeysInput, completion: @escaping (SdkResult<DescribeDimensionKeysOutputResponse, DescribeDimensionKeysOutputError>) -> Void)
    /// <p>Get the attributes of the specified dimension group for a DB instance or data source. For example, if you specify a
    ///       SQL ID, <code>GetDimensionKeyDetails</code> retrieves the full text of the dimension <code>db.sql.statement</code>
    ///       associated with this ID. This operation is useful because <code>GetResourceMetrics</code> and
    ///         <code>DescribeDimensionKeys</code> don't support retrieval of large SQL statement text.</p>
    func getDimensionKeyDetails(input: GetDimensionKeyDetailsInput, completion: @escaping (SdkResult<GetDimensionKeyDetailsOutputResponse, GetDimensionKeyDetailsOutputError>) -> Void)
    /// <p>Retrieve Performance Insights metrics for a set of data sources, over a time period. You can provide
    ///       specific dimension groups and dimensions, and provide aggregation and filtering criteria for
    ///       each group.</p>
    ///          <note>
    ///             <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements,
    ///                only the first 500 bytes are returned.</p>
    ///          </note>
    func getResourceMetrics(input: GetResourceMetricsInput, completion: @escaping (SdkResult<GetResourceMetricsOutputResponse, GetResourceMetricsOutputError>) -> Void)
}
