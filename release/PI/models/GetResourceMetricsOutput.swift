// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetResourceMetricsOutput: Equatable {
    /// <p>The end time for the returned metrics, after alignment to a granular boundary (as
    ///       specified by <code>PeriodInSeconds</code>). <code>AlignedEndTime</code> will be greater than
    ///       or equal to the value of the user-specified <code>Endtime</code>.</p>
    public let alignedEndTime: Date?
    /// <p>The start time for the returned metrics, after alignment to a granular boundary (as
    ///       specified by <code>PeriodInSeconds</code>). <code>AlignedStartTime</code> will be less than or
    ///       equal to the value of the user-specified <code>StartTime</code>.</p>
    public let alignedStartTime: Date?
    /// <p>An immutable, AWS Region-unique identifier for a data source. Performance Insights gathers metrics from
    ///       this data source.</p>
    ///          <p>To use a DB instance as a data source, you specify its
    ///       <code>DbiResourceId</code> value - for example:
    ///       <code>db-FAIHNTYBKTGAUSUZQYPDS2GW4A</code>
    ///          </p>
    public let identifier: String?
    /// <p>An array of metric results,, where each array element contains all of the data points for a particular dimension.</p>
    public let metricList: [MetricKeyDataPoints]?
    /// <p>An optional pagination token provided by a previous request. If
    ///       this parameter is specified, the response includes only records beyond the token, up to the
    ///       value specified by <code>MaxRecords</code>.</p>
    public let nextToken: String?

    public init (
        alignedEndTime: Date? = nil,
        alignedStartTime: Date? = nil,
        identifier: String? = nil,
        metricList: [MetricKeyDataPoints]? = nil,
        nextToken: String? = nil
    )
    {
        self.alignedEndTime = alignedEndTime
        self.alignedStartTime = alignedStartTime
        self.identifier = identifier
        self.metricList = metricList
        self.nextToken = nextToken
    }
}
