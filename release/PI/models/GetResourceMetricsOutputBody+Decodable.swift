// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetResourceMetricsOutputBody: Equatable {
    public let alignedStartTime: Date?
    public let alignedEndTime: Date?
    public let identifier: String?
    public let metricList: [MetricKeyDataPoints]?
    public let nextToken: String?
}

extension GetResourceMetricsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alignedEndTime = "AlignedEndTime"
        case alignedStartTime = "AlignedStartTime"
        case identifier = "Identifier"
        case metricList = "MetricList"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alignedStartTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .alignedStartTime)
        alignedStartTime = alignedStartTimeDecoded
        let alignedEndTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .alignedEndTime)
        alignedEndTime = alignedEndTimeDecoded
        let identifierDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identifier)
        identifier = identifierDecoded
        let metricListContainer = try containerValues.decodeIfPresent([MetricKeyDataPoints].self, forKey: .metricList)
        var metricListDecoded0:[MetricKeyDataPoints]? = nil
        if let metricListContainer = metricListContainer {
            metricListDecoded0 = [MetricKeyDataPoints]()
            for structure0 in metricListContainer {
                metricListDecoded0?.append(structure0)
            }
        }
        metricList = metricListDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
