// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDimensionKeysInput: Equatable {
    /// <p>The date and time specifying the end of the requested time series data. The value specified is
    ///       <i>exclusive</i>, which means that data points less than (but not equal to) <code>EndTime</code> are
    ///       returned.</p>
    ///          <p>The value for <code>EndTime</code> must be later than the value for
    ///       <code>StartTime</code>.</p>
    public let endTime: Date?
    /// <p>One or more filters to apply in the request.  Restrictions:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Any number of filters by the same dimension, as specified in the <code>GroupBy</code> or
    ///           <code>Partition</code> parameters.</p>
    ///             </li>
    ///             <li>
    ///                <p>A single filter for any other dimension in this dimension group.</p>
    ///             </li>
    ///          </ul>
    public let filter: [String:String]?
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group.
    ///       Performance Insights returns all dimensions within this group, unless you provide the names of specific dimensions within this group.
    ///       You can also request that Performance Insights return a limited number of values for a dimension.</p>
    public let groupBy: DimensionGroup?
    /// <p>An immutable, AWS Region-unique identifier for a data source. Performance Insights gathers metrics from
    ///       this data source.</p>
    ///          <p>To use an Amazon RDS instance as a data source, you specify its <code>DbiResourceId</code> value. For example,
    ///       specify <code>db-FAIHNTYBKTGAUSUZQYPDS2GW4A</code>
    ///          </p>
    public let identifier: String?
    /// <p>The maximum number of items to return in the response.
    ///       If more items exist than the specified <code>MaxRecords</code> value, a pagination
    ///       token is included in the response so that the remaining
    ///       results can be retrieved.
    ///     </p>
    public let maxResults: Int?
    /// <p>The name of a Performance Insights metric to be measured.</p>
    ///          <p>Valid values for <code>Metric</code> are:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>db.load.avg</code> - a scaled representation of the number of active sessions
    ///           for the database engine.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>db.sampledload.avg</code> - the raw number of active sessions for the
    ///           database engine.</p>
    ///             </li>
    ///          </ul>
    ///          <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code>
    ///           are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code>
    ///           showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>.
    ///           For most use cases, you can query <code>db.load.avg</code> only. </p>
    public let metric: String?
    /// <p>An optional pagination token provided by a previous request. If
    ///       this parameter is specified, the response includes only records beyond the token, up to the
    ///       value specified by <code>MaxRecords</code>.</p>
    public let nextToken: String?
    /// <p>For each dimension specified in
    ///       <code>GroupBy</code>, specify a secondary dimension to further subdivide the partition keys in the response.</p>
    public let partitionBy: DimensionGroup?
    /// <p>The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as
    ///       one second, or as long as one day (86400 seconds).  Valid values are:</p>
    ///
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>1</code> (one second)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>60</code> (one minute)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>300</code> (five minutes)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>3600</code> (one hour)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>86400</code> (twenty-four hours)</p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>If you don't specify <code>PeriodInSeconds</code>, then Performance Insights chooses a value for you, with a goal of returning
    ///       roughly 100-200 data points in the response.</p>
    public let periodInSeconds: Int?
    /// <p>The AWS service for which Performance Insights will return metrics. The only valid value for <i>ServiceType</i> is
    ///         <code>RDS</code>.</p>
    public let serviceType: ServiceType?
    /// <p>The date and time specifying the beginning of the requested time series data. You must specify a
    ///         <code>StartTime</code> within the past 7 days. The value specified is <i>inclusive</i>, which means
    ///       that data points equal to or greater than <code>StartTime</code> are returned.</p>
    ///          <p>The value for <code>StartTime</code> must be earlier than the value for
    ///         <code>EndTime</code>.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        filter: [String:String]? = nil,
        groupBy: DimensionGroup? = nil,
        identifier: String? = nil,
        maxResults: Int? = nil,
        metric: String? = nil,
        nextToken: String? = nil,
        partitionBy: DimensionGroup? = nil,
        periodInSeconds: Int? = nil,
        serviceType: ServiceType? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.filter = filter
        self.groupBy = groupBy
        self.identifier = identifier
        self.maxResults = maxResults
        self.metric = metric
        self.nextToken = nextToken
        self.partitionBy = partitionBy
        self.periodInSeconds = periodInSeconds
        self.serviceType = serviceType
        self.startTime = startTime
    }
}
