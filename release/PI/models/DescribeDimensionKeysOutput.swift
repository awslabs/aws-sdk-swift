// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DescribeDimensionKeysOutput: Equatable {
    /// <p>The end time for the returned dimension keys, after alignment to a granular boundary (as
    ///       specified by <code>PeriodInSeconds</code>). <code>AlignedEndTime</code> will be greater than
    ///       or equal to the value of the user-specified <code>Endtime</code>.</p>
    public let alignedEndTime: Date?
    /// <p>The start time for the returned dimension keys, after alignment to a granular boundary (as
    ///       specified by <code>PeriodInSeconds</code>). <code>AlignedStartTime</code> will be less than or
    ///       equal to the value of the user-specified <code>StartTime</code>.</p>
    public let alignedStartTime: Date?
    /// <p>The dimension keys that were requested.</p>
    public let keys: [DimensionKeyDescription]?
    /// <p>An optional pagination token provided by a previous request. If
    ///       this parameter is specified, the response includes only records beyond the token, up to the
    ///       value specified by <code>MaxRecords</code>.</p>
    public let nextToken: String?
    /// <p>If <code>PartitionBy</code> was present in the request, <code>PartitionKeys</code> contains the breakdown of dimension keys by the specified partitions.</p>
    public let partitionKeys: [ResponsePartitionKey]?

    public init (
        alignedEndTime: Date? = nil,
        alignedStartTime: Date? = nil,
        keys: [DimensionKeyDescription]? = nil,
        nextToken: String? = nil,
        partitionKeys: [ResponsePartitionKey]? = nil
    )
    {
        self.alignedEndTime = alignedEndTime
        self.alignedStartTime = alignedStartTime
        self.keys = keys
        self.nextToken = nextToken
        self.partitionKeys = partitionKeys
    }
}
