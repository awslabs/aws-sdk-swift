// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetResourceMetricsInput: Equatable {
    /// <p>The date and time specifying the end of the requested time series data.  The value specified is
    ///       <i>exclusive</i> - data points less than (but not equal to) <code>EndTime</code> will be returned.</p>
    ///          <p>The value for <code>EndTime</code> must be later than the value for <code>StartTime</code>.</p>
    public let endTime: Date?
    /// <p>An immutable, AWS Region-unique identifier for a data source. Performance Insights gathers metrics from
    ///       this data source.</p>
    ///          <p>To use a DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify
    ///         <code>db-FAIHNTYBKTGAUSUZQYPDS2GW4A</code>.</p>
    public let identifier: String?
    /// <p>The maximum number of items to return in the response.
    ///       If more items exist than the specified <code>MaxRecords</code> value, a pagination
    ///       token is included in the response so that the remaining
    ///       results can be retrieved.
    ///     </p>
    public let maxResults: Int?
    /// <p>An array of one or more queries to perform. Each query must specify a Performance Insights metric, and
    ///       can optionally specify aggregation and filtering criteria.</p>
    public let metricQueries: [MetricQuery]?
    /// <p>An optional pagination token provided by a previous request. If
    ///       this parameter is specified, the response includes only records beyond the token, up to the
    ///       value specified by <code>MaxRecords</code>.</p>
    public let nextToken: String?
    /// <p>The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as
    ///       one second, or as long as one day (86400 seconds).  Valid values are:</p>
    ///
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>1</code> (one second)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>60</code> (one minute)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>300</code> (five minutes)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>3600</code> (one hour)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>86400</code> (twenty-four hours)</p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>If you don't specify <code>PeriodInSeconds</code>, then Performance Insights will choose a value for
    ///       you, with a goal of returning roughly 100-200 data points in the response.</p>
    public let periodInSeconds: Int?
    /// <p>The AWS service for which Performance Insights returns metrics. The only valid value for <i>ServiceType</i> is
    ///         <code>RDS</code>.</p>
    public let serviceType: ServiceType?
    /// <p>The date and time specifying the beginning of the requested time series data. You can't
    ///       specify a <code>StartTime</code> that's earlier than 7 days ago. The value specified is
    ///         <i>inclusive</i> - data points equal to or greater than <code>StartTime</code>
    ///       will be returned.</p>
    ///          <p>The value for <code>StartTime</code> must be earlier than the value for <code>EndTime</code>.</p>
    public let startTime: Date?

    public init (
        endTime: Date? = nil,
        identifier: String? = nil,
        maxResults: Int? = nil,
        metricQueries: [MetricQuery]? = nil,
        nextToken: String? = nil,
        periodInSeconds: Int? = nil,
        serviceType: ServiceType? = nil,
        startTime: Date? = nil
    )
    {
        self.endTime = endTime
        self.identifier = identifier
        self.maxResults = maxResults
        self.metricQueries = metricQueries
        self.nextToken = nextToken
        self.periodInSeconds = periodInSeconds
        self.serviceType = serviceType
        self.startTime = startTime
    }
}
