// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CancelReplayOutputBody: Equatable {
    public let replayArn: String?
    public let state: ReplayState?
    public let stateReason: String?
}

extension CancelReplayOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case replayArn = "ReplayArn"
        case state = "State"
        case stateReason = "StateReason"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let replayArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .replayArn)
        replayArn = replayArnDecoded
        let stateDecoded = try containerValues.decodeIfPresent(ReplayState.self, forKey: .state)
        state = stateDecoded
        let stateReasonDecoded = try containerValues.decodeIfPresent(String.self, forKey: .stateReason)
        stateReason = stateReasonDecoded
    }
}
