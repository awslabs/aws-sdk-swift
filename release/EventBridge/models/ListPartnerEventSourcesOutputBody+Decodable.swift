// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListPartnerEventSourcesOutputBody: Equatable {
    public let partnerEventSources: [PartnerEventSource]?
    public let nextToken: String?
}

extension ListPartnerEventSourcesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case partnerEventSources = "PartnerEventSources"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let partnerEventSourcesContainer = try containerValues.decodeIfPresent([PartnerEventSource].self, forKey: .partnerEventSources)
        var partnerEventSourcesDecoded0:[PartnerEventSource]? = nil
        if let partnerEventSourcesContainer = partnerEventSourcesContainer {
            partnerEventSourcesDecoded0 = [PartnerEventSource]()
            for structure0 in partnerEventSourcesContainer {
                partnerEventSourcesDecoded0?.append(structure0)
            }
        }
        partnerEventSources = partnerEventSourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
