// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A partner event source is created by an SaaS partner. If a customer creates a partner
///       event bus that matches this event source, that AWS account can receive events from the
///       partner's applications or services.</p>
public struct EventSource: Equatable {
    /// <p>The ARN of the event source.</p>
    public let arn: String?
    /// <p>The name of the partner that created the event source.</p>
    public let createdBy: String?
    /// <p>The date and time the event source was created.</p>
    public let creationTime: Date?
    /// <p>The date and time that the event source will expire, if the AWS account doesn't create a
    ///       matching event bus for it.</p>
    public let expirationTime: Date?
    /// <p>The name of the event source.</p>
    public let name: String?
    /// <p>The state of the event source. If it is ACTIVE, you have already created a matching event
    ///       bus for this event source, and that event bus is active. If it is PENDING, either you haven't
    ///       yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have
    ///       created a matching event bus, but the event source has since been deleted.</p>
    public let state: EventSourceState?

    public init (
        arn: String? = nil,
        createdBy: String? = nil,
        creationTime: Date? = nil,
        expirationTime: Date? = nil,
        name: String? = nil,
        state: EventSourceState? = nil
    )
    {
        self.arn = arn
        self.createdBy = createdBy
        self.creationTime = creationTime
        self.expirationTime = expirationTime
        self.name = name
        self.state = state
    }
}
