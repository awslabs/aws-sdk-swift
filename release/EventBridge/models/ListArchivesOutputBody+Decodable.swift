// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListArchivesOutputBody: Equatable {
    public let archives: [Archive]?
    public let nextToken: String?
}

extension ListArchivesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case archives = "Archives"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let archivesContainer = try containerValues.decodeIfPresent([Archive].self, forKey: .archives)
        var archivesDecoded0:[Archive]? = nil
        if let archivesContainer = archivesContainer {
            archivesDecoded0 = [Archive]()
            for structure0 in archivesContainer {
                archivesDecoded0?.append(structure0)
            }
        }
        archives = archivesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
