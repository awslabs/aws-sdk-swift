// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DescribeApiDestinationOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: DescribeApiDestinationOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.apiDestinationArn = output.apiDestinationArn
            self.apiDestinationState = output.apiDestinationState
            self.connectionArn = output.connectionArn
            self.creationTime = output.creationTime
            self.description = output.description
            self.httpMethod = output.httpMethod
            self.invocationEndpoint = output.invocationEndpoint
            self.invocationRateLimitPerSecond = output.invocationRateLimitPerSecond
            self.lastModifiedTime = output.lastModifiedTime
            self.name = output.name
        } else {
            self.apiDestinationArn = nil
            self.apiDestinationState = nil
            self.connectionArn = nil
            self.creationTime = nil
            self.description = nil
            self.httpMethod = nil
            self.invocationEndpoint = nil
            self.invocationRateLimitPerSecond = nil
            self.lastModifiedTime = nil
            self.name = nil
        }
    }
}
