// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents an event to be submitted.</p>
public struct PutEventsRequestEntry: Equatable {
    /// <p>A valid JSON string. There is no other schema imposed. The JSON string may contain fields
    ///       and nested subobjects.</p>
    public let detail: String?
    /// <p>Free-form string used to decide what fields to expect in the event detail.</p>
    public let detailType: String?
    /// <p>The name or ARN of the event bus to receive the event. Only the rules that are associated
    ///       with this event bus are used to match the event. If you omit this, the default event bus is
    ///       used.</p>
    public let eventBusName: String?
    /// <p>AWS resources, identified by Amazon Resource Name (ARN), which the event primarily
    ///       concerns. Any number, including zero, may be present.</p>
    public let resources: [String]?
    /// <p>The source of the event.</p>
    public let source: String?
    /// <p>The time stamp of the event, per <a href="https://www.rfc-editor.org/rfc/rfc3339.txt">RFC3339</a>. If no time stamp is provided, the time stamp of the <a>PutEvents</a> call is used.</p>
    public let time: Date?
    /// <p>An AWS X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that contains the trace-id associated with the event.</p>
    ///          <p>To learn more about X-Ray trace headers, see <a href="https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader">Tracing header</a> in the AWS X-Ray Developer Guide.</p>
    public let traceHeader: String?

    public init (
        detail: String? = nil,
        detailType: String? = nil,
        eventBusName: String? = nil,
        resources: [String]? = nil,
        source: String? = nil,
        time: Date? = nil,
        traceHeader: String? = nil
    )
    {
        self.detail = detail
        self.detailType = detailType
        self.eventBusName = eventBusName
        self.resources = resources
        self.source = source
        self.time = time
        self.traceHeader = traceHeader
    }
}
