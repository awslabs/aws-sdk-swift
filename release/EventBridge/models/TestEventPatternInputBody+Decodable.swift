// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TestEventPatternInputBody: Equatable {
    public let eventPattern: String?
    public let event: String?
}

extension TestEventPatternInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case event = "Event"
        case eventPattern = "EventPattern"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eventPatternDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eventPattern)
        eventPattern = eventPatternDecoded
        let eventDecoded = try containerValues.decodeIfPresent(String.self, forKey: .event)
        event = eventDecoded
    }
}
