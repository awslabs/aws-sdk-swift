// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListConnectionsOutputBody: Equatable {
    public let connections: [Connection]?
    public let nextToken: String?
}

extension ListConnectionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case connections = "Connections"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let connectionsContainer = try containerValues.decodeIfPresent([Connection].self, forKey: .connections)
        var connectionsDecoded0:[Connection]? = nil
        if let connectionsContainer = connectionsContainer {
            connectionsDecoded0 = [Connection]()
            for structure0 in connectionsContainer {
                connectionsDecoded0?.append(structure0)
            }
        }
        connections = connectionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
