// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetRecordInputQueryItemMiddleware: Middleware {
    public let id: String = "GetRecordInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<GetRecordInput>,
                  next: H) -> Swift.Result<OperationOutput<GetRecordOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let recordIdentifierValueAsString = input.operationInput.recordIdentifierValueAsString {
            let recordIdentifierValueAsStringQueryItem = URLQueryItem(name: "RecordIdentifierValueAsString".urlPercentEncoding(), value: String(recordIdentifierValueAsString).urlPercentEncoding())
            input.builder.withQueryItem(recordIdentifierValueAsStringQueryItem)
        }
        if let featureNames = input.operationInput.featureNames {
            featureNames.forEach { queryItemValue in
                let queryItem = URLQueryItem(name: "FeatureName".urlPercentEncoding(), value: String(queryItemValue).urlPercentEncoding())
                input.builder.withQueryItem(queryItem)
            }
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<GetRecordInput>
    public typealias MOutput = OperationOutput<GetRecordOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<GetRecordOutputError>
}
