// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct DeleteRecordInputQueryItemMiddleware: Middleware {
    public let id: String = "DeleteRecordInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<DeleteRecordInput>,
                  next: H) -> Swift.Result<OperationOutput<DeleteRecordOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        if let recordIdentifierValueAsString = input.operationInput.recordIdentifierValueAsString {
            let recordIdentifierValueAsStringQueryItem = URLQueryItem(name: "RecordIdentifierValueAsString".urlPercentEncoding(), value: String(recordIdentifierValueAsString).urlPercentEncoding())
            input.builder.withQueryItem(recordIdentifierValueAsStringQueryItem)
        }
        if let eventTime = input.operationInput.eventTime {
            let eventTimeQueryItem = URLQueryItem(name: "EventTime".urlPercentEncoding(), value: String(eventTime).urlPercentEncoding())
            input.builder.withQueryItem(eventTimeQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<DeleteRecordInput>
    public typealias MOutput = OperationOutput<DeleteRecordOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<DeleteRecordOutputError>
}
