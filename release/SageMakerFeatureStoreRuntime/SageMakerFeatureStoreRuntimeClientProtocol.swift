// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains all data plane API operations and data types for the Amazon SageMaker Feature
///          Store. Use this API to put, delete, and retrieve (get) features from a feature
///          store.</p>
///          <p>Use the following operations to configure your <code>OnlineStore</code> and
///             <code>OfflineStore</code> features, and to create and manage feature groups:</p>
///          <ul>
///             <li>
///                <p>
///                   <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateFeatureGroup.html">CreateFeatureGroup</a>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DeleteFeatureGroup.html">DeleteFeatureGroup</a>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeFeatureGroup.html">DescribeFeatureGroup</a>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ListFeatureGroups.html">ListFeatureGroups</a>
///                </p>
///             </li>
///          </ul>
public protocol SageMakerFeatureStoreRuntimeClientProtocol {
    /// <p>Deletes a <code>Record</code> from a <code>FeatureGroup</code>. A new record will show
    ///          up in the <code>OfflineStore</code> when the <code>DeleteRecord</code> API is called. This
    ///          record will have a value of <code>True</code> in the <code>is_deleted</code> column.</p>
    func deleteRecord(input: DeleteRecordInput, completion: @escaping (SdkResult<DeleteRecordOutputResponse, DeleteRecordOutputError>) -> Void)
    /// <p>Use for <code>OnlineStore</code> serving from a <code>FeatureStore</code>. Only the
    ///          latest records stored in the <code>OnlineStore</code> can be retrieved. If no Record with
    ///             <code>RecordIdentifierValue</code> is found, then an empty result is returned. </p>
    func getRecord(input: GetRecordInput, completion: @escaping (SdkResult<GetRecordOutputResponse, GetRecordOutputError>) -> Void)
    /// <p>Used for data ingestion into the <code>FeatureStore</code>. The <code>PutRecord</code>
    ///          API writes to both the <code>OnlineStore</code> and <code>OfflineStore</code>. If the
    ///          record is the latest record for the <code>recordIdentifier</code>, the record is written to
    ///          both the <code>OnlineStore</code> and <code>OfflineStore</code>. If the record is a
    ///          historic record, it is written only to the <code>OfflineStore</code>.</p>
    func putRecord(input: PutRecordInput, completion: @escaping (SdkResult<PutRecordOutputResponse, PutRecordOutputError>) -> Void)
}
