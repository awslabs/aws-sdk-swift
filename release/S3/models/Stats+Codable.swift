// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension Stats: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case bytesProcessed = "BytesProcessed"
        case bytesReturned = "BytesReturned"
        case bytesScanned = "BytesScanned"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if bytesProcessed != 0 {
            try container.encode(bytesProcessed, forKey: Key("bytesProcessed"))
        }
        if bytesReturned != 0 {
            try container.encode(bytesReturned, forKey: Key("bytesReturned"))
        }
        if bytesScanned != 0 {
            try container.encode(bytesScanned, forKey: Key("bytesScanned"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bytesScannedDecoded = try containerValues.decode(Int.self, forKey: .bytesScanned)
        bytesScanned = bytesScannedDecoded
        let bytesProcessedDecoded = try containerValues.decode(Int.self, forKey: .bytesProcessed)
        bytesProcessed = bytesProcessedDecoded
        let bytesReturnedDecoded = try containerValues.decode(Int.self, forKey: .bytesReturned)
        bytesReturned = bytesReturnedDecoded
    }
}
