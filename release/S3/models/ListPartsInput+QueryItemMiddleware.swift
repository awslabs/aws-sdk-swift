// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListPartsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListPartsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListPartsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListPartsOutput>, MError>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context,
    Self.MError == H.MiddlewareError
    {
        input.builder.withQueryItem(URLQueryItem(name: "x-id", value: "ListParts"))
        if let partNumberMarker = input.operationInput.partNumberMarker {
            let partNumberMarkerQueryItem = URLQueryItem(name: "part-number-marker".urlPercentEncoding(), value: String(partNumberMarker).urlPercentEncoding())
            input.builder.withQueryItem(partNumberMarkerQueryItem)
        }
        let maxPartsQueryItem = URLQueryItem(name: "max-parts".urlPercentEncoding(), value: String(input.operationInput.maxParts).urlPercentEncoding())
        input.builder.withQueryItem(maxPartsQueryItem)
        if let uploadId = input.operationInput.uploadId {
            let uploadIdQueryItem = URLQueryItem(name: "uploadId".urlPercentEncoding(), value: String(uploadId).urlPercentEncoding())
            input.builder.withQueryItem(uploadIdQueryItem)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListPartsInput>
    public typealias MOutput = OperationOutput<ListPartsOutput>
    public typealias Context = HttpContext
    public typealias MError = SdkError<ListPartsOutputError>
}
