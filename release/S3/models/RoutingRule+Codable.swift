// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RoutingRule: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case condition = "Condition"
        case redirect = "Redirect"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let condition = condition {
            try container.encode(condition, forKey: Key("condition"))
        }
        if let redirect = redirect {
            try container.encode(redirect, forKey: Key("redirect"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let conditionDecoded = try containerValues.decodeIfPresent(Condition.self, forKey: .condition)
        condition = conditionDecoded
        let redirectDecoded = try containerValues.decodeIfPresent(Redirect.self, forKey: .redirect)
        redirect = redirectDecoded
    }
}
