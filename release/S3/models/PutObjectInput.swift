// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutObjectInput: Equatable {
    /// <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned
    ///       ACL</a>.</p>
    ///          <p>This action is not supported by Amazon S3 on Outposts.</p>
    public let aCL: ObjectCannedACL?
    /// <p>Object data.</p>
    public let body: Data?
    /// <p>The bucket name to which the PUT action was initiated. </p>
    ///          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///          <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this action using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    public let bucket: String?
    /// <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>
    ///          <p>Specifying this header with a PUT action doesnâ€™t affect bucket-level settings for S3 Bucket Key.</p>
    public let bucketKeyEnabled: Bool
    /// <p> Can be used to specify caching behavior along the request/reply chain. For more
    ///          information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>
    public let cacheControl: String?
    /// <p>Specifies presentational information for the object. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1">http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>.</p>
    public let contentDisposition: String?
    /// <p>Specifies what content encodings have been applied to the object and thus what decoding
    ///          mechanisms must be applied to obtain the media-type referenced by the Content-Type header
    ///          field. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>.</p>
    public let contentEncoding: String?
    /// <p>The language the content is in.</p>
    public let contentLanguage: String?
    /// <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be
    ///          determined automatically. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>.</p>
    public let contentLength: Int
    /// <p>The base64-encoded 128-bit MD5 digest of the message (without the headers) according to
    ///          RFC 1864. This header can be used as a message integrity check to verify that the data is
    ///          the same data that was originally sent. Although it is optional, we recommend using the
    ///          Content-MD5 mechanism as an end-to-end integrity check. For more information about REST
    ///          request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST
    ///             Authentication</a>.</p>
    public let contentMD5: String?
    /// <p>A standard MIME type describing the format of the contents. For more information, see
    ///             <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>.</p>
    public let contentType: String?
    /// <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
    public let expectedBucketOwner: String?
    /// <p>The date and time at which the object is no longer cacheable. For more information, see
    ///             <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.</p>
    public let expires: Date?
    /// <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
    ///       object.</p>
    ///          <p>This action is not supported by Amazon S3 on Outposts.</p>
    public let grantFullControl: String?
    /// <p>Allows grantee to read the object data and its
    ///       metadata.</p>
    ///          <p>This action is not supported by Amazon S3 on Outposts.</p>
    public let grantRead: String?
    /// <p>Allows grantee to read the object ACL.</p>
    ///          <p>This action is not supported by Amazon S3 on Outposts.</p>
    public let grantReadACP: String?
    /// <p>Allows grantee to write the ACL for the applicable
    ///       object.</p>
    ///          <p>This action is not supported by Amazon S3 on Outposts.</p>
    public let grantWriteACP: String?
    /// <p>Object key for which the PUT action was initiated.</p>
    public let key: String?
    /// <p>A map of metadata to store with the object in S3.</p>
    public let metadata: [String:String]?
    /// <p>Specifies whether a legal hold will be applied to this object. For more information
    ///          about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object
    ///          Lock</a>.</p>
    public let objectLockLegalHoldStatus: ObjectLockLegalHoldStatus?
    /// <p>The Object Lock mode that you want to apply to this object.</p>
    public let objectLockMode: ObjectLockMode?
    /// <p>The date and time when you want this object's Object Lock to expire. Must be formatted
    ///          as a timestamp parameter.</p>
    public let objectLockRetainUntilDate: Date?
    /// <p>Confirms that the requester knows that they will be charged for the request. Bucket
    ///          owners need not specify this parameter in their requests. For information about downloading
    ///          objects from requester pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in
    ///             Requestor Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    public let requestPayer: RequestPayer?
    /// <p>Specifies the algorithm to use to when encrypting the object (for example,
    ///          AES256).</p>
    public let sSECustomerAlgorithm: String?
    /// <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This
    ///          value is used to store the object and then it is discarded; Amazon S3 does not store the
    ///          encryption key. The key must be appropriate for use with the algorithm specified in the
    ///             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    public let sSECustomerKey: String?
    /// <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses
    ///          this header for a message integrity check to ensure that the encryption key was transmitted
    ///          without error.</p>
    public let sSECustomerKeyMD5: String?
    /// <p>Specifies the AWS KMS Encryption Context to use for object encryption. The value of this
    ///          header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value
    ///          pairs.</p>
    public let sSEKMSEncryptionContext: String?
    /// <p>If <code>x-amz-server-side-encryption</code> is present and has the value of
    ///          <code>aws:kms</code>, this header specifies the ID of the AWS Key Management Service
    ///          (AWS KMS) symmetrical customer managed customer master key (CMK) that was used for the
    ///          object. If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not
    ///          provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the AWS
    ///          managed CMK in AWS to protect the data. If the KMS key does not exist in the same account
    ///          issuing the command, you must use the full ARN and not just the ID.
    ///       </p>
    public let sSEKMSKeyId: String?
    /// <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
    ///          AES256, aws:kms).</p>
    public let serverSideEncryption: ServerSideEncryption?
    /// <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The
    ///          STANDARD storage class provides high durability and high availability. Depending on
    ///          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses
    ///          the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the
    ///          <i>Amazon S3 User Guide</i>.</p>
    public let storageClass: StorageClass?
    /// <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For
    ///          example, "Key1=Value1")</p>
    public let tagging: String?
    /// <p>If the bucket is configured as a website, redirects requests for this object to another
    ///          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in
    ///          the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a>.</p>
    ///
    ///          <p>In the following example, the request header sets the redirect to an object
    ///          (anotherPage.html) in the same bucket:</p>
    ///
    ///          <p>
    ///             <code>x-amz-website-redirect-location: /anotherPage.html</code>
    ///          </p>
    ///
    ///          <p>In the following example, the request header sets the object redirect to another
    ///          website:</p>
    ///
    ///          <p>
    ///             <code>x-amz-website-redirect-location: http://www.example.com/</code>
    ///          </p>
    ///
    ///          <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to Configure Website Page
    ///             Redirects</a>. </p>
    public let websiteRedirectLocation: String?

    public init (
        aCL: ObjectCannedACL? = nil,
        body: Data? = nil,
        bucket: String? = nil,
        bucketKeyEnabled: Bool = false,
        cacheControl: String? = nil,
        contentDisposition: String? = nil,
        contentEncoding: String? = nil,
        contentLanguage: String? = nil,
        contentLength: Int = 0,
        contentMD5: String? = nil,
        contentType: String? = nil,
        expectedBucketOwner: String? = nil,
        expires: Date? = nil,
        grantFullControl: String? = nil,
        grantRead: String? = nil,
        grantReadACP: String? = nil,
        grantWriteACP: String? = nil,
        key: String? = nil,
        metadata: [String:String]? = nil,
        objectLockLegalHoldStatus: ObjectLockLegalHoldStatus? = nil,
        objectLockMode: ObjectLockMode? = nil,
        objectLockRetainUntilDate: Date? = nil,
        requestPayer: RequestPayer? = nil,
        sSECustomerAlgorithm: String? = nil,
        sSECustomerKey: String? = nil,
        sSECustomerKeyMD5: String? = nil,
        sSEKMSEncryptionContext: String? = nil,
        sSEKMSKeyId: String? = nil,
        serverSideEncryption: ServerSideEncryption? = nil,
        storageClass: StorageClass? = nil,
        tagging: String? = nil,
        websiteRedirectLocation: String? = nil
    )
    {
        self.aCL = aCL
        self.body = body
        self.bucket = bucket
        self.bucketKeyEnabled = bucketKeyEnabled
        self.cacheControl = cacheControl
        self.contentDisposition = contentDisposition
        self.contentEncoding = contentEncoding
        self.contentLanguage = contentLanguage
        self.contentLength = contentLength
        self.contentMD5 = contentMD5
        self.contentType = contentType
        self.expectedBucketOwner = expectedBucketOwner
        self.expires = expires
        self.grantFullControl = grantFullControl
        self.grantRead = grantRead
        self.grantReadACP = grantReadACP
        self.grantWriteACP = grantWriteACP
        self.key = key
        self.metadata = metadata
        self.objectLockLegalHoldStatus = objectLockLegalHoldStatus
        self.objectLockMode = objectLockMode
        self.objectLockRetainUntilDate = objectLockRetainUntilDate
        self.requestPayer = requestPayer
        self.sSECustomerAlgorithm = sSECustomerAlgorithm
        self.sSECustomerKey = sSECustomerKey
        self.sSECustomerKeyMD5 = sSECustomerKeyMD5
        self.sSEKMSEncryptionContext = sSEKMSEncryptionContext
        self.sSEKMSKeyId = sSEKMSKeyId
        self.serverSideEncryption = serverSideEncryption
        self.storageClass = storageClass
        self.tagging = tagging
        self.websiteRedirectLocation = websiteRedirectLocation
    }
}
