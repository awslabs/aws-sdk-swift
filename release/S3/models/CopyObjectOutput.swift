// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CopyObjectOutput: Equatable {
    /// <p>Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>
    public let bucketKeyEnabled: Bool
    /// <p>Container for all response elements.</p>
    public let copyObjectResult: CopyObjectResult?
    /// <p>Version of the copied object in the destination bucket.</p>
    public let copySourceVersionId: String?
    /// <p>If the object expiration is configured, the response includes this header.</p>
    public let expiration: String?
    /// <p>If present, indicates that the requester was successfully charged for the
    ///          request.</p>
    public let requestCharged: RequestCharged?
    /// <p>If server-side encryption with a customer-provided encryption key was requested, the
    ///          response will include this header confirming the encryption algorithm used.</p>
    public let sSECustomerAlgorithm: String?
    /// <p>If server-side encryption with a customer-provided encryption key was requested, the
    ///          response will include this header to provide round-trip message integrity verification of
    ///          the customer-provided encryption key.</p>
    public let sSECustomerKeyMD5: String?
    /// <p>If present, specifies the AWS KMS Encryption Context to use for object encryption. The
    ///          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption
    ///          context key-value pairs.</p>
    public let sSEKMSEncryptionContext: String?
    /// <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric
    ///          customer managed customer master key (CMK) that was used for the object.</p>
    public let sSEKMSKeyId: String?
    /// <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,
    ///          AES256, aws:kms).</p>
    public let serverSideEncryption: ServerSideEncryption?
    /// <p>Version ID of the newly created copy.</p>
    public let versionId: String?

    public init (
        bucketKeyEnabled: Bool = false,
        copyObjectResult: CopyObjectResult? = nil,
        copySourceVersionId: String? = nil,
        expiration: String? = nil,
        requestCharged: RequestCharged? = nil,
        sSECustomerAlgorithm: String? = nil,
        sSECustomerKeyMD5: String? = nil,
        sSEKMSEncryptionContext: String? = nil,
        sSEKMSKeyId: String? = nil,
        serverSideEncryption: ServerSideEncryption? = nil,
        versionId: String? = nil
    )
    {
        self.bucketKeyEnabled = bucketKeyEnabled
        self.copyObjectResult = copyObjectResult
        self.copySourceVersionId = copySourceVersionId
        self.expiration = expiration
        self.requestCharged = requestCharged
        self.sSECustomerAlgorithm = sSECustomerAlgorithm
        self.sSECustomerKeyMD5 = sSECustomerKeyMD5
        self.sSEKMSEncryptionContext = sSEKMSEncryptionContext
        self.sSEKMSKeyId = sSEKMSKeyId
        self.serverSideEncryption = serverSideEncryption
        self.versionId = versionId
    }
}
