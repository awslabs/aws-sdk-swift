// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct WriteGetObjectResponseInputBody: Equatable {
    public let body: Data?
}

extension WriteGetObjectResponseInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case body = "Body"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.body) {
            do {
                let bodyDecoded = try containerValues.decodeIfPresent(Data.self, forKey: .body)
                body = bodyDecoded
            } catch {
                body = "".data(using: .utf8)
            }
        } else {
            body = nil
        }
    }
}
