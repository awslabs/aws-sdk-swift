// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListObjectsInput: Equatable {
    /// <p>The name of the bucket containing the objects.</p>
    ///          <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///          <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this action using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    public let bucket: String?
    /// <p>A delimiter is a character you use to group keys.</p>
    public let delimiter: String?
    /// <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding
    ///          method to use. An object key may contain any Unicode character; however, XML 1.0 parser
    ///          cannot parse some characters, such as characters with an ASCII value from 0 to 10. For
    ///          characters that are not supported in XML 1.0, you can add this parameter to request that
    ///          Amazon S3 encode the keys in the response.</p>
    public let encodingType: EncodingType?
    /// <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
    public let expectedBucketOwner: String?
    /// <p>Specifies the key to start with when listing objects in a bucket.</p>
    public let marker: String?
    /// <p>Sets the maximum number of keys returned in the response. By default the action returns up
    ///          to 1,000 key names. The response might contain fewer keys but will never contain more.
    ///       </p>
    public let maxKeys: Int
    /// <p>Limits the response to keys that begin with the specified prefix.</p>
    public let prefix: String?
    /// <p>Confirms that the requester knows that she or he will be charged for the list objects
    ///          request. Bucket owners need not specify this parameter in their requests.</p>
    public let requestPayer: RequestPayer?

    public init (
        bucket: String? = nil,
        delimiter: String? = nil,
        encodingType: EncodingType? = nil,
        expectedBucketOwner: String? = nil,
        marker: String? = nil,
        maxKeys: Int = 0,
        prefix: String? = nil,
        requestPayer: RequestPayer? = nil
    )
    {
        self.bucket = bucket
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.expectedBucketOwner = expectedBucketOwner
        self.marker = marker
        self.maxKeys = maxKeys
        self.prefix = prefix
        self.requestPayer = requestPayer
    }
}
