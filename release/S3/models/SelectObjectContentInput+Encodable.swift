// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SelectObjectContentInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case expression = "Expression"
        case expressionType = "ExpressionType"
        case inputSerialization = "InputSerialization"
        case outputSerialization = "OutputSerialization"
        case requestProgress = "RequestProgress"
        case scanRange = "ScanRange"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let expression = expression {
            try container.encode(expression, forKey: Key("expression"))
        }
        if let expressionType = expressionType {
            try container.encode(expressionType, forKey: Key("expressionType"))
        }
        if let inputSerialization = inputSerialization {
            try container.encode(inputSerialization, forKey: Key("inputSerialization"))
        }
        if let outputSerialization = outputSerialization {
            try container.encode(outputSerialization, forKey: Key("outputSerialization"))
        }
        if let requestProgress = requestProgress {
            try container.encode(requestProgress, forKey: Key("requestProgress"))
        }
        if let scanRange = scanRange {
            try container.encode(scanRange, forKey: Key("scanRange"))
        }
    }
}
