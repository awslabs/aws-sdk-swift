// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AnalyticsConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case filter = "Filter"
        case id = "Id"
        case storageClassAnalysis = "StorageClassAnalysis"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let filter = filter {
            try container.encode(filter, forKey: Key("filter"))
        }
        if let id = id {
            try container.encode(id, forKey: Key("id"))
        }
        if let storageClassAnalysis = storageClassAnalysis {
            try container.encode(storageClassAnalysis, forKey: Key("storageClassAnalysis"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let idDecoded = try containerValues.decodeIfPresent(String.self, forKey: .id)
        id = idDecoded
        let filterDecoded = try containerValues.decodeIfPresent(AnalyticsFilter.self, forKey: .filter)
        filter = filterDecoded
        let storageClassAnalysisDecoded = try containerValues.decodeIfPresent(StorageClassAnalysis.self, forKey: .storageClassAnalysis)
        storageClassAnalysis = storageClassAnalysisDecoded
    }
}
