// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies which Amazon S3 objects to replicate and where to store the replicas.</p>
public struct ReplicationRule: Equatable {
    /// <p>Specifies whether Amazon S3 replicates delete markers. If you specify a <code>Filter</code>
    ///          in your replication configuration, you must also include a
    ///             <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a
    ///             <code>Tag</code> element, the <code>DeleteMarkerReplication</code>
    ///             <code>Status</code> must be set to Disabled, because Amazon S3 does not support replicating
    ///          delete markers for tag-based rules. For an example configuration, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config">Basic Rule Configuration</a>. </p>
    ///          <p>For more information about delete marker replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html">Basic Rule
    ///             Configuration</a>. </p>
    ///          <note>
    ///             <p>If you are using an earlier version of the replication configuration, Amazon S3 handles
    ///             replication of delete markers differently. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations">Backward Compatibility</a>.</p>
    ///          </note>
    public let deleteMarkerReplication: DeleteMarkerReplication?
    /// <p>A container for information about the replication destination and its configurations
    ///          including enabling the S3 Replication Time Control (S3 RTC).</p>
    public let destination: Destination?
    /// <p></p>
    public let existingObjectReplication: ExistingObjectReplication?
    /// <p>A filter that identifies the subset of objects to which the replication rule applies. A
    ///             <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or
    ///          an <code>And</code> child element.</p>
    public let filter: ReplicationRuleFilter?
    /// <p>A unique identifier for the rule. The maximum value is 255 characters.</p>
    public let iD: String?
    /// <p>An object key name prefix that identifies the object or objects to which the rule
    ///          applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket,
    ///          specify an empty string. </p>
    ///          <important>
    ///             <p>Replacement must be made for object keys containing special characters (such as carriage returns) when using
    ///          XML requests. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints">
    ///             XML related object key constraints</a>.</p>
    ///          </important>
    @available(*, deprecated)
    public let prefix: String?
    /// <p>The priority indicates which rule has precedence whenever two or more replication rules
    ///          conflict. Amazon S3 will attempt to replicate objects according to all replication rules.
    ///          However, if there are two or more rules with the same destination bucket, then objects will
    ///          be replicated according to the rule with the highest priority. The higher the number, the
    ///          higher the priority. </p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html">Replication</a> in the
    ///             <i>Amazon S3 User Guide</i>.</p>
    public let priority: Int
    /// <p>A container that describes additional filters for identifying the source objects that
    ///          you want to replicate. You can choose to enable or disable the replication of these
    ///          objects. Currently, Amazon S3 supports only the filter that you can specify for objects created
    ///          with server-side encryption using a customer master key (CMK) stored in AWS Key Management
    ///          Service (SSE-KMS).</p>
    public let sourceSelectionCriteria: SourceSelectionCriteria?
    /// <p>Specifies whether the rule is enabled.</p>
    public let status: ReplicationRuleStatus?

    public init (
        deleteMarkerReplication: DeleteMarkerReplication? = nil,
        destination: Destination? = nil,
        existingObjectReplication: ExistingObjectReplication? = nil,
        filter: ReplicationRuleFilter? = nil,
        iD: String? = nil,
        prefix: String? = nil,
        priority: Int = 0,
        sourceSelectionCriteria: SourceSelectionCriteria? = nil,
        status: ReplicationRuleStatus? = nil
    )
    {
        self.deleteMarkerReplication = deleteMarkerReplication
        self.destination = destination
        self.existingObjectReplication = existingObjectReplication
        self.filter = filter
        self.iD = iD
        self.prefix = prefix
        self.priority = priority
        self.sourceSelectionCriteria = sourceSelectionCriteria
        self.status = status
    }
}
