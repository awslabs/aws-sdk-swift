// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ListPartsOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if let abortDateHeaderValue = httpResponse.headers.value(for: "x-amz-abort-date") {
            self.abortDate = DateFormatter.rfc5322DateFormatter.date(from: abortDateHeaderValue)
        } else {
            self.abortDate = nil
        }
        if let abortRuleIdHeaderValue = httpResponse.headers.value(for: "x-amz-abort-rule-id") {
            self.abortRuleId = abortRuleIdHeaderValue
        } else {
            self.abortRuleId = nil
        }
        if let requestChargedHeaderValue = httpResponse.headers.value(for: "x-amz-request-charged") {
            self.requestCharged = RequestCharged(rawValue: requestChargedHeaderValue)
        } else {
            self.requestCharged = nil
        }
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: ListPartsOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.bucket = output.bucket
            self.initiator = output.initiator
            self.isTruncated = output.isTruncated
            self.key = output.key
            self.maxParts = output.maxParts
            self.nextPartNumberMarker = output.nextPartNumberMarker
            self.owner = output.owner
            self.partNumberMarker = output.partNumberMarker
            self.parts = output.parts
            self.storageClass = output.storageClass
            self.uploadId = output.uploadId
        } else {
            self.bucket = nil
            self.initiator = nil
            self.isTruncated = false
            self.key = nil
            self.maxParts = 0
            self.nextPartNumberMarker = nil
            self.owner = nil
            self.partNumberMarker = nil
            self.parts = nil
            self.storageClass = nil
            self.uploadId = nil
        }
    }
}
