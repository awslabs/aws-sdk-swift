// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension StorageClassAnalysisDataExport: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case destination = "Destination"
        case outputSchemaVersion = "OutputSchemaVersion"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let destination = destination {
            try container.encode(destination, forKey: Key("destination"))
        }
        if let outputSchemaVersion = outputSchemaVersion {
            try container.encode(outputSchemaVersion, forKey: Key("outputSchemaVersion"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let outputSchemaVersionDecoded = try containerValues.decodeIfPresent(StorageClassAnalysisSchemaVersion.self, forKey: .outputSchemaVersion)
        outputSchemaVersion = outputSchemaVersionDecoded
        let destinationDecoded = try containerValues.decodeIfPresent(AnalyticsExportDestination.self, forKey: .destination)
        destination = destinationDecoded
    }
}
