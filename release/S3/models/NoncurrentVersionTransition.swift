// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Container for the transition rule that describes when noncurrent objects transition to
///          the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>,
///             <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class. If your bucket is
///          versioning-enabled (or versioning is suspended), you can set this action to request that
///          Amazon S3 transition noncurrent object versions to the <code>STANDARD_IA</code>,
///             <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or
///             <code>DEEP_ARCHIVE</code> storage class at a specific period in the object's
///          lifetime.</p>
public struct NoncurrentVersionTransition: Equatable {
    /// <p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the
    ///          associated action. For information about the noncurrent days calculations, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations">How
    ///             Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the
    ///             <i>Amazon S3 User Guide</i>.</p>
    public let noncurrentDays: Int
    /// <p>The class of storage used to store the object.</p>
    public let storageClass: TransitionStorageClass?

    public init (
        noncurrentDays: Int = 0,
        storageClass: TransitionStorageClass? = nil
    )
    {
        self.noncurrentDays = noncurrentDays
        self.storageClass = storageClass
    }
}
