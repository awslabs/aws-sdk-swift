// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RedirectAllRequestsTo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case hostName = "HostName"
        case `protocol` = "Protocol"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let hostName = hostName {
            try container.encode(hostName, forKey: Key("hostName"))
        }
        if let `protocol` = `protocol` {
            try container.encode(`protocol`, forKey: Key("protocol"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let hostNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .hostName)
        hostName = hostNameDecoded
        let protocolDecoded = try containerValues.decodeIfPresent(`Protocol`.self, forKey: .protocol)
        `protocol` = protocolDecoded
    }
}
