// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CompleteMultipartUploadOutputBody: Equatable {
    public let location: String?
    public let bucket: String?
    public let key: String?
    public let eTag: String?
}

extension CompleteMultipartUploadOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bucket = "Bucket"
        case eTag = "ETag"
        case key = "Key"
        case location = "Location"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let locationDecoded = try containerValues.decodeIfPresent(String.self, forKey: .location)
        location = locationDecoded
        let bucketDecoded = try containerValues.decodeIfPresent(String.self, forKey: .bucket)
        bucket = bucketDecoded
        let keyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .key)
        key = keyDecoded
        let eTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eTag)
        eTag = eTagDecoded
    }
}
