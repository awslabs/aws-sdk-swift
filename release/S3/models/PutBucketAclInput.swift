// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct PutBucketAclInput: Equatable {
    /// <p>The canned ACL to apply to the bucket.</p>
    public let aCL: BucketCannedACL?
    /// <p>Contains the elements that set the ACL permissions for an object per grantee.</p>
    public let accessControlPolicy: AccessControlPolicy?
    /// <p>The bucket to which to apply the ACL.</p>
    public let bucket: String?
    /// <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message
    ///          integrity check to verify that the request body was not corrupted in transit. For more
    ///          information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC
    ///          1864.</a>
    ///          </p>
    ///          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>
    public let contentMD5: String?
    /// <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
    public let expectedBucketOwner: String?
    /// <p>Allows grantee the read, write, read ACP, and write ACP permissions on the
    ///          bucket.</p>
    public let grantFullControl: String?
    /// <p>Allows grantee to list the objects in the bucket.</p>
    public let grantRead: String?
    /// <p>Allows grantee to read the bucket ACL.</p>
    public let grantReadACP: String?
    /// <p>Allows grantee to create new objects in the bucket.</p>
    ///          <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>
    public let grantWrite: String?
    /// <p>Allows grantee to write the ACL for the applicable bucket.</p>
    public let grantWriteACP: String?

    public init (
        aCL: BucketCannedACL? = nil,
        accessControlPolicy: AccessControlPolicy? = nil,
        bucket: String? = nil,
        contentMD5: String? = nil,
        expectedBucketOwner: String? = nil,
        grantFullControl: String? = nil,
        grantRead: String? = nil,
        grantReadACP: String? = nil,
        grantWrite: String? = nil,
        grantWriteACP: String? = nil
    )
    {
        self.aCL = aCL
        self.accessControlPolicy = accessControlPolicy
        self.bucket = bucket
        self.contentMD5 = contentMD5
        self.expectedBucketOwner = expectedBucketOwner
        self.grantFullControl = grantFullControl
        self.grantRead = grantRead
        self.grantReadACP = grantReadACP
        self.grantWrite = grantWrite
        self.grantWriteACP = grantWriteACP
    }
}
