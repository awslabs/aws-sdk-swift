// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime

struct DefaultEndpointResolver : EndpointResolver {
    func resolve(serviceId: String, region: String) throws -> AWSEndpoint {
        return try AWSEndpoint.resolveEndpoint(partitions: servicePartitions, region: region)
    }
}

private let servicePartitions = [
    AWSClientRuntime.Partition(
        id: "aws",
        regionRegex: "^(us|eu|ap|sa|ca|me|af)\\-\\w+\\-\\d+$",
        partitionEndpoint: "",
        isRegionalized: true,
        defaults: ServiceEndpointMetadata(
            hostName: "s3.{region}.amazonaws.com",
            protocols: ["http", "https", ],
            signatureVersions: ["s3v4"]
        ),
        endpoints: [
            "af-south-1": ServiceEndpointMetadata(),
            "ap-east-1": ServiceEndpointMetadata(),
            "ap-northeast-1": ServiceEndpointMetadata(
                hostName: "s3.ap-northeast-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "ap-northeast-2": ServiceEndpointMetadata(),
            "ap-south-1": ServiceEndpointMetadata(),
            "ap-southeast-1": ServiceEndpointMetadata(
                hostName: "s3.ap-southeast-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "ap-southeast-2": ServiceEndpointMetadata(
                hostName: "s3.ap-southeast-2.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "aws-global": ServiceEndpointMetadata(
                hostName: "s3.amazonaws.com",
                credentialScope: CredentialScope(region: "us-east-1"),
                signatureVersions: ["s3", "s3v4", ]
            ),
            "ca-central-1": ServiceEndpointMetadata(),
            "eu-central-1": ServiceEndpointMetadata(),
            "eu-north-1": ServiceEndpointMetadata(),
            "eu-south-1": ServiceEndpointMetadata(),
            "eu-west-1": ServiceEndpointMetadata(
                hostName: "s3.eu-west-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "eu-west-2": ServiceEndpointMetadata(),
            "eu-west-3": ServiceEndpointMetadata(),
            "me-south-1": ServiceEndpointMetadata(),
            "s3-external-1": ServiceEndpointMetadata(
                hostName: "s3-external-1.amazonaws.com",
                credentialScope: CredentialScope(region: "us-east-1"),
                signatureVersions: ["s3", "s3v4", ]
            ),
            "sa-east-1": ServiceEndpointMetadata(
                hostName: "s3.sa-east-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "us-east-1": ServiceEndpointMetadata(
                hostName: "s3.us-east-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "us-east-2": ServiceEndpointMetadata(),
            "us-west-1": ServiceEndpointMetadata(
                hostName: "s3.us-west-1.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
            "us-west-2": ServiceEndpointMetadata(
                hostName: "s3.us-west-2.amazonaws.com",
                signatureVersions: ["s3", "s3v4", ]
            ),
        ]
    ),
    AWSClientRuntime.Partition(
        id: "aws-cn",
        regionRegex: "^cn\\-\\w+\\-\\d+$",
        partitionEndpoint: "",
        isRegionalized: true,
        defaults: ServiceEndpointMetadata(
            hostName: "s3.{region}.amazonaws.com.cn",
            protocols: ["http", "https", ],
            signatureVersions: ["s3v4"]
        ),
        endpoints: [
            "cn-north-1": ServiceEndpointMetadata(),
            "cn-northwest-1": ServiceEndpointMetadata(),
        ]
    ),
    AWSClientRuntime.Partition(
        id: "aws-iso",
        regionRegex: "^us\\-iso\\-\\w+\\-\\d+$",
        partitionEndpoint: "",
        isRegionalized: true,
        defaults: ServiceEndpointMetadata(
            hostName: "s3.{region}.c2s.ic.gov",
            protocols: ["https"],
            signatureVersions: ["s3v4"]
        ),
        endpoints: [
            "us-iso-east-1": ServiceEndpointMetadata(
                protocols: ["http", "https", ],
                signatureVersions: ["s3v4"]
            ),
        ]
    ),
    AWSClientRuntime.Partition(
        id: "aws-iso-b",
        regionRegex: "^us\\-isob\\-\\w+\\-\\d+$",
        partitionEndpoint: "",
        isRegionalized: true,
        defaults: ServiceEndpointMetadata(
            hostName: "s3.{region}.sc2s.sgov.gov",
            protocols: ["http", "https", ],
            signatureVersions: ["s3v4"]
        ),
        endpoints: [
            "us-isob-east-1": ServiceEndpointMetadata(),
        ]
    ),
    AWSClientRuntime.Partition(
        id: "aws-us-gov",
        regionRegex: "^us\\-gov\\-\\w+\\-\\d+$",
        partitionEndpoint: "",
        isRegionalized: true,
        defaults: ServiceEndpointMetadata(
            hostName: "s3.{region}.amazonaws.com",
            protocols: ["https"],
            signatureVersions: ["s3", "s3v4", ]
        ),
        endpoints: [
            "fips-us-gov-west-1": ServiceEndpointMetadata(
                hostName: "s3-fips.us-gov-west-1.amazonaws.com",
                credentialScope: CredentialScope(region: "us-gov-west-1")
            ),
            "us-gov-east-1": ServiceEndpointMetadata(
                hostName: "s3.us-gov-east-1.amazonaws.com",
                protocols: ["http", "https", ]
            ),
            "us-gov-west-1": ServiceEndpointMetadata(
                hostName: "s3.us-gov-west-1.amazonaws.com",
                protocols: ["http", "https", ]
            ),
        ]
    ),
]
