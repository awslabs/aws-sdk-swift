// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The start and end of the timestamp range for the requested media.</p>
///         <p>This value should not be present if <code>PlaybackType</code> is
///             <code>LIVE</code>.</p>
public struct HLSTimestampRange: Equatable {
    /// <p>The end of the timestamp range for the requested media. This value must be within 24
    ///             hours of the specified <code>StartTimestamp</code>, and it must be later than the
    ///                 <code>StartTimestamp</code> value.</p>
    ///         <p>If <code>FragmentSelectorType</code> for the request is <code>SERVER_TIMESTAMP</code>,
    ///             this value must be in the past.</p>
    ///         <p>The <code>EndTimestamp</code> value is required for <code>ON_DEMAND</code> mode, but
    ///             optional for <code>LIVE_REPLAY</code> mode. If the <code>EndTimestamp</code> is not set
    ///             for <code>LIVE_REPLAY</code> mode then the session will continue to include newly
    ///             ingested fragments until the session expires.</p>
    ///         <note>
    ///             <p>This value is inclusive. The <code>EndTimestamp</code> is compared to the
    ///                 (starting) timestamp of the fragment. Fragments that start before the
    ///                     <code>EndTimestamp</code> value and continue past it are included in the
    ///                 session.</p>
    ///         </note>
    public let endTimestamp: Date?
    /// <p>The start of the timestamp range for the requested media.</p>
    ///         <p>If the <code>HLSTimestampRange</code> value is specified, the
    ///                 <code>StartTimestamp</code> value is required. </p>
    ///         <p>Only fragments that start exactly at or after <code>StartTimestamp</code> are included
    ///             in the session. Fragments that start before <code>StartTimestamp</code> and continue
    ///             past it aren't included in the session. If <code>FragmentSelectorType</code> is
    ///                 <code>SERVER_TIMESTAMP</code>, the <code>StartTimestamp</code> must be later than
    ///             the stream head. </p>
    public let startTimestamp: Date?

    public init (
        endTimestamp: Date? = nil,
        startTimestamp: Date? = nil
    )
    {
        self.endTimestamp = endTimestamp
        self.startTimestamp = startTimestamp
    }
}
