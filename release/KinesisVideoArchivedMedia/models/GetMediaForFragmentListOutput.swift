// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct GetMediaForFragmentListOutput: Equatable {
    /// <p>The content type of the requested media.</p>
    public let contentType: String?
    /// <p>The payload that Kinesis Video Streams returns is a sequence of chunks from the
    ///             specified stream. For information about the chunks, see <a href="http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>. The chunks that Kinesis Video Streams returns in the
    ///                 <code>GetMediaForFragmentList</code> call also include the following additional
    ///             Matroska (MKV) tags: </p>
    ///         <ul>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_FRAGMENT_NUMBER - Fragment number returned in the
    ///                     chunk.</p>
    ///             </li>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_SERVER_SIDE_TIMESTAMP - Server-side timestamp of the
    ///                     fragment.</p>
    ///             </li>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_PRODUCER_SIDE_TIMESTAMP - Producer-side timestamp of the
    ///                     fragment.</p>
    ///             </li>
    ///          </ul>
    ///         <p>The following tags will be included if an exception occurs:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_FRAGMENT_NUMBER - The number of the fragment that threw the
    ///                     exception</p>
    ///             </li>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_EXCEPTION_ERROR_CODE - The integer code of the
    ///                     exception</p>
    ///             </li>
    ///             <li>
    ///                 <p>AWS_KINESISVIDEO_EXCEPTION_MESSAGE - A text description of the
    ///                     exception</p>
    ///             </li>
    ///          </ul>
    public let payload: Data?

    public init (
        contentType: String? = nil,
        payload: Data? = nil
    )
    {
        self.contentType = contentType
        self.payload = payload
    }
}
