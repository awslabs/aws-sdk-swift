// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetMediaForFragmentListInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fragments = "Fragments"
        case streamARN = "StreamARN"
        case streamName = "StreamName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fragments = fragments {
            var fragmentsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .fragments)
            for fragmentnumberlist0 in fragments {
                try fragmentsContainer.encode(fragmentnumberlist0)
            }
        }
        if let streamARN = streamARN {
            try encodeContainer.encode(streamARN, forKey: .streamARN)
        }
        if let streamName = streamName {
            try encodeContainer.encode(streamName, forKey: .streamName)
        }
    }
}
