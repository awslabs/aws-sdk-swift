// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetClipInputBody: Equatable {
    public let streamName: String?
    public let streamARN: String?
    public let clipFragmentSelector: ClipFragmentSelector?
}

extension GetClipInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clipFragmentSelector = "ClipFragmentSelector"
        case streamARN = "StreamARN"
        case streamName = "StreamName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let streamARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamARN)
        streamARN = streamARNDecoded
        let clipFragmentSelectorDecoded = try containerValues.decodeIfPresent(ClipFragmentSelector.self, forKey: .clipFragmentSelector)
        clipFragmentSelector = clipFragmentSelectorDecoded
    }
}
