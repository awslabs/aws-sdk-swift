// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum WorldExportJobErrorCode {
    case accessdenied
    case internalserviceerror
    case invalidinput
    case limitexceeded
    case requestthrottled
    case resourcenotfound
    case sdkUnknown(String)
}

extension WorldExportJobErrorCode : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [WorldExportJobErrorCode] {
        return [
            .accessdenied,
            .internalserviceerror,
            .invalidinput,
            .limitexceeded,
            .requestthrottled,
            .resourcenotfound,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessdenied: return "AccessDenied"
        case .internalserviceerror: return "InternalServiceError"
        case .invalidinput: return "InvalidInput"
        case .limitexceeded: return "LimitExceeded"
        case .requestthrottled: return "RequestThrottled"
        case .resourcenotfound: return "ResourceNotFound"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = WorldExportJobErrorCode(rawValue: rawValue) ?? WorldExportJobErrorCode.sdkUnknown(rawValue)
    }
}
