// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about a failed world.</p>
public struct WorldFailure: Equatable {
    /// <p>The failure code of the world export job if it failed:</p>
    ///          <dl>
    ///             <dt>InternalServiceError</dt>
    ///             <dd>
    ///                <p>Internal service error.</p>
    ///             </dd>
    ///             <dt>LimitExceeded</dt>
    ///             <dd>
    ///                <p>The requested resource exceeds the maximum number allowed, or the number of
    ///                   concurrent stream requests exceeds the maximum number allowed. </p>
    ///             </dd>
    ///             <dt>ResourceNotFound</dt>
    ///             <dd>
    ///                <p>The specified resource could not be found. </p>
    ///             </dd>
    ///             <dt>RequestThrottled</dt>
    ///             <dd>
    ///                <p>The request was throttled.</p>
    ///             </dd>
    ///             <dt>InvalidInput</dt>
    ///             <dd>
    ///                <p>An input parameter in the request is not valid.</p>
    ///             </dd>
    ///          </dl>
    public let failureCode: WorldGenerationJobErrorCode?
    /// <p>The number of failed worlds.</p>
    public let failureCount: Int
    /// <p>The sample reason why the world failed. World errors are aggregated. A sample is used as
    ///          the <code>sampleFailureReason</code>. </p>
    public let sampleFailureReason: String?

    public init (
        failureCode: WorldGenerationJobErrorCode? = nil,
        failureCount: Int = 0,
        sampleFailureReason: String? = nil
    )
    {
        self.failureCode = failureCode
        self.failureCount = failureCount
        self.sampleFailureReason = sampleFailureReason
    }
}
