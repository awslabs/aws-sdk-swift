// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension PortForwardingConfig: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case portMappings
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let portMappings = portMappings {
            var portMappingsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .portMappings)
            for portmappinglist0 in portMappings {
                try portMappingsContainer.encode(portmappinglist0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let portMappingsContainer = try containerValues.decodeIfPresent([PortMapping].self, forKey: .portMappings)
        var portMappingsDecoded0:[PortMapping]? = nil
        if let portMappingsContainer = portMappingsContainer {
            portMappingsDecoded0 = [PortMapping]()
            for structure0 in portMappingsContainer {
                portMappingsDecoded0?.append(structure0)
            }
        }
        portMappings = portMappingsDecoded0
    }
}
