// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information about the batch policy.</p>
public struct BatchPolicy: Equatable {
    /// <p>The number of active simulation jobs create as part of the batch that can be in an
    ///          active state at the same time. </p>
    ///          <p>Active states include: <code>Pending</code>,<code>Preparing</code>,
    ///          <code>Running</code>, <code>Restarting</code>, <code>RunningFailed</code> and
    ///             <code>Terminating</code>. All other states are terminal states. </p>
    public let maxConcurrency: Int?
    /// <p>The amount of time, in seconds, to wait for the batch to complete.
    ///
    ///       </p>
    ///          <p>If a batch times out, and there are pending requests that were failing due to an
    ///          internal failure (like <code>InternalServiceError</code>), they will be moved to the failed
    ///          list and the batch status will be <code>Failed</code>. If the pending requests were failing
    ///          for any other reason, the failed pending requests will be moved to the failed list and the
    ///          batch status will be <code>TimedOut</code>. </p>
    public let timeoutInSeconds: Int?

    public init (
        maxConcurrency: Int? = nil,
        timeoutInSeconds: Int? = nil
    )
    {
        self.maxConcurrency = maxConcurrency
        self.timeoutInSeconds = timeoutInSeconds
    }
}
