// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides upload configuration information. Files are uploaded from the simulation job to
///          a location you specify. </p>
public struct UploadConfiguration: Equatable {
    /// <p>A prefix that specifies where files will be uploaded in Amazon S3.
    ///         It is appended to the simulation output location to determine the final path.
    ///        </p>
    ///          <p>
    ///         For example, if your simulation output location is <code>s3://my-bucket</code> and your upload
    ///         configuration name is <code>robot-test</code>, your files will be uploaded to
    ///         <code>s3://my-bucket/<simid>/<runid>/robot-test</code>.
    ///       </p>
    public let name: String?
    /// <p> Specifies the path of the file(s) to upload. Standard Unix glob matching rules are
    ///          accepted, with the addition of <code>**</code> as a <i>super asterisk</i>.
    ///          For example, specifying <code>/var/log/**.log</code> causes all .log files in the
    ///             <code>/var/log</code> directory tree to be collected. For more examples, see <a href="https://github.com/gobwas/glob">Glob Library</a>. </p>
    public let path: String?
    /// <p>Specifies when to upload the files:</p>
    ///          <dl>
    ///             <dt>UPLOAD_ON_TERMINATE</dt>
    ///             <dd>
    ///                <p>Matching files are uploaded once the simulation enters the
    ///                      <code>TERMINATING</code> state. Matching files are not uploaded until all of
    ///                   your code (including tools) have stopped. </p>
    ///                <p>If there is a problem uploading a file, the upload is retried. If problems
    ///                   persist, no further upload attempts will be made.</p>
    ///             </dd>
    ///             <dt>UPLOAD_ROLLING_AUTO_REMOVE</dt>
    ///             <dd>
    ///                <p>Matching files are uploaded as they are created. They are deleted after they
    ///                   are uploaded. The specified path is checked every 5 seconds. A final check is made
    ///                   when all of your code (including tools) have stopped. </p>
    ///             </dd>
    ///          </dl>
    public let uploadBehavior: UploadBehavior?

    public init (
        name: String? = nil,
        path: String? = nil,
        uploadBehavior: UploadBehavior? = nil
    )
    {
        self.name = name
        self.path = path
        self.uploadBehavior = uploadBehavior
    }
}
