// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Information about a simulation job.</p>
public struct SimulationJob: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the simulation job.</p>
    public let arn: String?
    /// <p>A unique identifier for this <code>SimulationJob</code> request.</p>
    public let clientRequestToken: String?
    /// <p>Compute information for the simulation job</p>
    public let compute: ComputeResponse?
    /// <p>The data sources for the simulation job.</p>
    public let dataSources: [DataSource]?
    /// <p>The failure behavior the simulation job.</p>
    ///          <dl>
    ///             <dt>Continue</dt>
    ///             <dd>
    ///                <p>Restart the simulation job in the same host instance.</p>
    ///             </dd>
    ///             <dt>Fail</dt>
    ///             <dd>
    ///                <p>Stop the simulation job and terminate the instance.</p>
    ///             </dd>
    ///          </dl>
    public let failureBehavior: FailureBehavior?
    /// <p>The failure code of the simulation job if it failed.</p>
    public let failureCode: SimulationJobErrorCode?
    /// <p>The reason why the simulation job failed.</p>
    public let failureReason: String?
    /// <p>The IAM role that allows the simulation instance to call the AWS APIs that are specified
    ///          in its associated policies on your behalf. This is how credentials are passed in to your
    ///          simulation job. </p>
    public let iamRole: String?
    /// <p>The time, in milliseconds since the epoch, when the simulation job was last
    ///          started.</p>
    public let lastStartedAt: Date?
    /// <p>The time, in milliseconds since the epoch, when the simulation job was last
    ///          updated.</p>
    public let lastUpdatedAt: Date?
    /// <p>The logging configuration.</p>
    public let loggingConfig: LoggingConfig?
    /// <p>The maximum simulation job duration in seconds. The value must be 8 days (691,200
    ///          seconds) or less.</p>
    public let maxJobDurationInSeconds: Int
    /// <p>The name of the simulation job.</p>
    public let name: String?
    /// <p>Information about a network interface.</p>
    public let networkInterface: NetworkInterface?
    /// <p>Location for output files generated by the simulation job.</p>
    public let outputLocation: OutputLocation?
    /// <p>A list of robot applications.</p>
    public let robotApplications: [RobotApplicationConfig]?
    /// <p>A list of simulation applications.</p>
    public let simulationApplications: [SimulationApplicationConfig]?
    /// <p>The simulation job execution duration in milliseconds.</p>
    public let simulationTimeMillis: Int
    /// <p>Status of the simulation job.</p>
    public let status: SimulationJobStatus?
    /// <p>A map that contains tag keys and tag values that are attached to the simulation
    ///          job.</p>
    public let tags: [String:String]?
    /// <p>VPC configuration information.</p>
    public let vpcConfig: VPCConfigResponse?

    public init (
        arn: String? = nil,
        clientRequestToken: String? = nil,
        compute: ComputeResponse? = nil,
        dataSources: [DataSource]? = nil,
        failureBehavior: FailureBehavior? = nil,
        failureCode: SimulationJobErrorCode? = nil,
        failureReason: String? = nil,
        iamRole: String? = nil,
        lastStartedAt: Date? = nil,
        lastUpdatedAt: Date? = nil,
        loggingConfig: LoggingConfig? = nil,
        maxJobDurationInSeconds: Int = 0,
        name: String? = nil,
        networkInterface: NetworkInterface? = nil,
        outputLocation: OutputLocation? = nil,
        robotApplications: [RobotApplicationConfig]? = nil,
        simulationApplications: [SimulationApplicationConfig]? = nil,
        simulationTimeMillis: Int = 0,
        status: SimulationJobStatus? = nil,
        tags: [String:String]? = nil,
        vpcConfig: VPCConfigResponse? = nil
    )
    {
        self.arn = arn
        self.clientRequestToken = clientRequestToken
        self.compute = compute
        self.dataSources = dataSources
        self.failureBehavior = failureBehavior
        self.failureCode = failureCode
        self.failureReason = failureReason
        self.iamRole = iamRole
        self.lastStartedAt = lastStartedAt
        self.lastUpdatedAt = lastUpdatedAt
        self.loggingConfig = loggingConfig
        self.maxJobDurationInSeconds = maxJobDurationInSeconds
        self.name = name
        self.networkInterface = networkInterface
        self.outputLocation = outputLocation
        self.robotApplications = robotApplications
        self.simulationApplications = simulationApplications
        self.simulationTimeMillis = simulationTimeMillis
        self.status = status
        self.tags = tags
        self.vpcConfig = vpcConfig
    }
}
