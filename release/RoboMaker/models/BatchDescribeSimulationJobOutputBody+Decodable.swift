// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchDescribeSimulationJobOutputBody: Equatable {
    public let jobs: [SimulationJob]?
    public let unprocessedJobs: [String]?
}

extension BatchDescribeSimulationJobOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case jobs
        case unprocessedJobs
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let jobsContainer = try containerValues.decodeIfPresent([SimulationJob].self, forKey: .jobs)
        var jobsDecoded0:[SimulationJob]? = nil
        if let jobsContainer = jobsContainer {
            jobsDecoded0 = [SimulationJob]()
            for structure0 in jobsContainer {
                jobsDecoded0?.append(structure0)
            }
        }
        jobs = jobsDecoded0
        let unprocessedJobsContainer = try containerValues.decodeIfPresent([String].self, forKey: .unprocessedJobs)
        var unprocessedJobsDecoded0:[String]? = nil
        if let unprocessedJobsContainer = unprocessedJobsContainer {
            unprocessedJobsDecoded0 = [String]()
            for string0 in unprocessedJobsContainer {
                unprocessedJobsDecoded0?.append(string0)
            }
        }
        unprocessedJobs = unprocessedJobsDecoded0
    }
}
