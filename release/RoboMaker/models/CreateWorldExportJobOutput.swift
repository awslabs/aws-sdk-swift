// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct CreateWorldExportJobOutput: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the world export job.</p>
    public let arn: String?
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the
    ///          request.</p>
    public let clientRequestToken: String?
    /// <p>The time, in milliseconds since the epoch, when the world export job was created.</p>
    public let createdAt: Date?
    /// <p>The failure code of the world export job if it failed:</p>
    ///          <dl>
    ///             <dt>InternalServiceError</dt>
    ///             <dd>
    ///                <p>Internal service error.</p>
    ///             </dd>
    ///             <dt>LimitExceeded</dt>
    ///             <dd>
    ///                <p>The requested resource exceeds the maximum number allowed, or the number of
    ///                   concurrent stream requests exceeds the maximum number allowed. </p>
    ///             </dd>
    ///             <dt>ResourceNotFound</dt>
    ///             <dd>
    ///                <p>The specified resource could not be found. </p>
    ///             </dd>
    ///             <dt>RequestThrottled</dt>
    ///             <dd>
    ///                <p>The request was throttled.</p>
    ///             </dd>
    ///             <dt>InvalidInput</dt>
    ///             <dd>
    ///                <p>An input parameter in the request is not valid.</p>
    ///             </dd>
    ///             <dt>AllWorldGenerationFailed</dt>
    ///             <dd>
    ///                <p>All of the worlds in the world generation job failed. This can happen if your
    ///                      <code>worldCount</code> is greater than 50 or less than 1. </p>
    ///             </dd>
    ///          </dl>
    ///          <p>For more information about troubleshooting WorldForge, see <a href="https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting-worldforge.html">Troubleshooting Simulation WorldForge</a>. </p>
    public let failureCode: WorldExportJobErrorCode?
    /// <p>The IAM role that the world export process uses to access the Amazon S3 bucket and put
    ///          the export. </p>
    public let iamRole: String?
    /// <p>The output location.</p>
    public let outputLocation: OutputLocation?
    /// <p>The status of the world export job.</p>
    ///          <dl>
    ///             <dt>Pending</dt>
    ///             <dd>
    ///                <p>The world export job request is pending.</p>
    ///             </dd>
    ///             <dt>Running</dt>
    ///             <dd>
    ///                <p>The world export job is running. </p>
    ///             </dd>
    ///             <dt>Completed</dt>
    ///             <dd>
    ///                <p>The world export job completed. </p>
    ///             </dd>
    ///             <dt>Failed</dt>
    ///             <dd>
    ///                <p>The world export job failed. See <code>failureCode</code> for more information.
    ///                </p>
    ///             </dd>
    ///             <dt>Canceled</dt>
    ///             <dd>
    ///                <p>The world export job was cancelled.</p>
    ///             </dd>
    ///             <dt>Canceling</dt>
    ///             <dd>
    ///                <p>The world export job is being cancelled.</p>
    ///             </dd>
    ///          </dl>
    public let status: WorldExportJobStatus?
    /// <p>A map that contains tag keys and tag values that are attached to the world export
    ///          job.</p>
    public let tags: [String:String]?

    public init (
        arn: String? = nil,
        clientRequestToken: String? = nil,
        createdAt: Date? = nil,
        failureCode: WorldExportJobErrorCode? = nil,
        iamRole: String? = nil,
        outputLocation: OutputLocation? = nil,
        status: WorldExportJobStatus? = nil,
        tags: [String:String]? = nil
    )
    {
        self.arn = arn
        self.clientRequestToken = clientRequestToken
        self.createdAt = createdAt
        self.failureCode = failureCode
        self.iamRole = iamRole
        self.outputLocation = outputLocation
        self.status = status
        self.tags = tags
    }
}
