// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListWorldsOutputBody: Equatable {
    public let worldSummaries: [WorldSummary]?
    public let nextToken: String?
}

extension ListWorldsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case worldSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let worldSummariesContainer = try containerValues.decodeIfPresent([WorldSummary].self, forKey: .worldSummaries)
        var worldSummariesDecoded0:[WorldSummary]? = nil
        if let worldSummariesContainer = worldSummariesContainer {
            worldSummariesDecoded0 = [WorldSummary]()
            for structure0 in worldSummariesContainer {
                worldSummariesDecoded0?.append(structure0)
            }
        }
        worldSummaries = worldSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
