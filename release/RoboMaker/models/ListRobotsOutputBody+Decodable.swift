// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRobotsOutputBody: Equatable {
    public let robots: [Robot]?
    public let nextToken: String?
}

extension ListRobotsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case robots
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let robotsContainer = try containerValues.decodeIfPresent([Robot].self, forKey: .robots)
        var robotsDecoded0:[Robot]? = nil
        if let robotsContainer = robotsContainer {
            robotsDecoded0 = [Robot]()
            for structure0 in robotsContainer {
                robotsDecoded0?.append(structure0)
            }
        }
        robots = robotsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
