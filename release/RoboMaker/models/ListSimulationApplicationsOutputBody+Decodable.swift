// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSimulationApplicationsOutputBody: Equatable {
    public let simulationApplicationSummaries: [SimulationApplicationSummary]?
    public let nextToken: String?
}

extension ListSimulationApplicationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case simulationApplicationSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let simulationApplicationSummariesContainer = try containerValues.decodeIfPresent([SimulationApplicationSummary].self, forKey: .simulationApplicationSummaries)
        var simulationApplicationSummariesDecoded0:[SimulationApplicationSummary]? = nil
        if let simulationApplicationSummariesContainer = simulationApplicationSummariesContainer {
            simulationApplicationSummariesDecoded0 = [SimulationApplicationSummary]()
            for structure0 in simulationApplicationSummariesContainer {
                simulationApplicationSummariesDecoded0?.append(structure0)
            }
        }
        simulationApplicationSummaries = simulationApplicationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
