// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFleetsOutputBody: Equatable {
    public let fleetDetails: [Fleet]?
    public let nextToken: String?
}

extension ListFleetsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fleetDetails
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fleetDetailsContainer = try containerValues.decodeIfPresent([Fleet].self, forKey: .fleetDetails)
        var fleetDetailsDecoded0:[Fleet]? = nil
        if let fleetDetailsContainer = fleetDetailsContainer {
            fleetDetailsDecoded0 = [Fleet]()
            for structure0 in fleetDetailsContainer {
                fleetDetailsDecoded0?.append(structure0)
            }
        }
        fleetDetails = fleetDetailsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
