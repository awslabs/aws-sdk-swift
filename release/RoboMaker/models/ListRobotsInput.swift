// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListRobotsInput: Equatable {
    /// <p>Optional filters to limit results.</p>
    ///          <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When
    ///          filtering, you must use the complete value of the filtered item. You can use up to three
    ///          filters, but they must be for the same named item. For example, if you are looking for
    ///          items with the status <code>Registered</code> or the status <code>Available</code>.</p>
    public let filters: [Filter]?
    /// <p>When this parameter is used, <code>ListRobots</code> only returns
    ///             <code>maxResults</code> results in a single page along with a <code>nextToken</code>
    ///          response element. The remaining results of the initial request can be seen by sending
    ///          another <code>ListRobots</code> request with the returned <code>nextToken</code> value.
    ///          This value can be between 1 and 200. If this parameter is not used, then
    ///             <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if
    ///          applicable. </p>
    public let maxResults: Int?
    /// <p>If the previous paginated request did not return all of the remaining results, the
    ///          response object's <code>nextToken</code> parameter value is set to a token. To retrieve the
    ///          next set of results, call <code>ListRobots</code> again and assign that token to the
    ///          request object's <code>nextToken</code> parameter. If there are no remaining results, the
    ///          previous response object's NextToken parameter is set to null. </p>
    public let nextToken: String?

    public init (
        filters: [Filter]? = nil,
        maxResults: Int? = nil,
        nextToken: String? = nil
    )
    {
        self.filters = filters
        self.maxResults = maxResults
        self.nextToken = nextToken
    }
}
