// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateSimulationApplicationInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case application
        case currentRevisionId
        case renderingEngine
        case robotSoftwareSuite
        case simulationSoftwareSuite
        case sources
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let application = application {
            try encodeContainer.encode(application, forKey: .application)
        }
        if let currentRevisionId = currentRevisionId {
            try encodeContainer.encode(currentRevisionId, forKey: .currentRevisionId)
        }
        if let renderingEngine = renderingEngine {
            try encodeContainer.encode(renderingEngine, forKey: .renderingEngine)
        }
        if let robotSoftwareSuite = robotSoftwareSuite {
            try encodeContainer.encode(robotSoftwareSuite, forKey: .robotSoftwareSuite)
        }
        if let simulationSoftwareSuite = simulationSoftwareSuite {
            try encodeContainer.encode(simulationSoftwareSuite, forKey: .simulationSoftwareSuite)
        }
        if let sources = sources {
            var sourcesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .sources)
            for sourceconfigs0 in sources {
                try sourcesContainer.encode(sourceconfigs0)
            }
        }
    }
}
