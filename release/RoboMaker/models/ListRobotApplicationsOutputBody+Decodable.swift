// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListRobotApplicationsOutputBody: Equatable {
    public let robotApplicationSummaries: [RobotApplicationSummary]?
    public let nextToken: String?
}

extension ListRobotApplicationsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case robotApplicationSummaries
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let robotApplicationSummariesContainer = try containerValues.decodeIfPresent([RobotApplicationSummary].self, forKey: .robotApplicationSummaries)
        var robotApplicationSummariesDecoded0:[RobotApplicationSummary]? = nil
        if let robotApplicationSummariesContainer = robotApplicationSummariesContainer {
            robotApplicationSummariesDecoded0 = [RobotApplicationSummary]()
            for structure0 in robotApplicationSummariesContainer {
                robotApplicationSummariesDecoded0?.append(structure0)
            }
        }
        robotApplicationSummaries = robotApplicationSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
