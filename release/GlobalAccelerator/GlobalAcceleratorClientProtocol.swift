// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <fullname>AWS Global Accelerator</fullname>
/// 		       <p>This is the <i>AWS Global Accelerator API Reference</i>. This guide is for developers who need detailed information about
/// 			AWS Global Accelerator API actions, data types, and errors. For more information about Global Accelerator features, see the
/// 			<a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/Welcome.html">AWS Global Accelerator Developer Guide</a>.</p>
///
/// 		       <p>AWS Global Accelerator is a service in which you create <i>accelerators</i> to improve the performance
/// 			of your applications for local and global users. Depending on the type of accelerator you choose, you can
/// 			gain additional benefits. </p>
/// 		       <ul>
///             <li>
///                <p>By using a standard accelerator, you can improve availability of your internet applications
/// 				that are used by a global audience. With a standard accelerator, Global Accelerator directs traffic to optimal endpoints over the AWS
/// 				global network. </p>
///             </li>
///             <li>
///                <p>For other scenarios, you might choose a custom routing accelerator. With a custom routing accelerator, you
/// 				can use application logic to directly map one or more users to a specific endpoint among many endpoints.</p>
///             </li>
///          </ul>
/// 		       <important>
/// 			         <p>Global Accelerator is a global service that supports endpoints in multiple AWS Regions but you must specify the
/// 				US West (Oregon) Region to create or update accelerators.</p>
/// 		       </important>
/// 		       <p>By default, Global Accelerator provides you with two static IP addresses that you associate with your accelerator. With
/// 			a standard accelerator, instead of using the
/// 			IP addresses that Global Accelerator provides, you can configure these entry points to be IPv4 addresses from your own IP address ranges
/// 			that you bring to Global Accelerator. The static IP addresses are anycast from the AWS edge network. For a standard accelerator,
/// 			they distribute incoming application traffic across multiple endpoint resources in multiple AWS Regions, which increases
/// 			the availability of your applications. Endpoints for standard accelerators can be Network Load Balancers, Application Load Balancers,
/// 			Amazon EC2 instances, or Elastic IP addresses that are located in one AWS Region or multiple Regions. For custom routing
/// 			accelerators, you map traffic that arrives to the static IP addresses to specific Amazon EC2 servers in endpoints that
/// 			are virtual private cloud (VPC) subnets.</p>
/// 		
/// 		       <important>
///             <p>The static IP addresses remain assigned to your accelerator for as long as it exists, even if you
/// 				disable the accelerator and it no longer accepts or routes traffic. However, when you
/// 					<i>delete</i> an accelerator, you lose the static IP addresses that
/// 				are assigned to it, so you can no longer route traffic by using them. You can use
/// 				IAM policies like tag-based permissions with Global Accelerator to limit the users who have
/// 				permissions to delete an accelerator. For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/access-control-manage-access-tag-policies.html">Tag-based policies</a>.</p>
///          </important>
/// 		       <p>For standard accelerators, Global Accelerator uses the AWS global network to route traffic to the optimal regional endpoint based
/// 			on health, client location, and policies that you configure. The service reacts instantly to
/// 			changes in health or configuration to ensure that internet traffic from clients is always
/// 			directed to healthy endpoints.</p>
/// 		
/// 		       <p>For a list of the AWS Regions where Global Accelerator and other services are currently supported, see the
/// 			<a href="https://docs.aws.amazon.com/about-aws/global-infrastructure/regional-product-services/">AWS
/// 				Region Table</a>.</p>
///
/// 		       <p>AWS Global Accelerator includes the following components:</p>
/// 		       <dl>
///             <dt>Static IP addresses</dt>
///             <dd>
///                <p>Global Accelerator provides you with a set of two static IP addresses that are anycast from the AWS edge
/// 					network. If you bring your own IP address range to AWS (BYOIP) to use with a standard accelerator, you
/// 					can instead assign IP addresses from your own pool to use with your accelerator. For more information,
/// 					see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">
/// 						Bring your own IP addresses (BYOIP) in AWS Global Accelerator</a>.</p>
/// 					          <p>The IP addresses serve as single fixed entry points for your clients. If you already have Elastic
/// 						Load Balancing load balancers, Amazon EC2 instances, or Elastic IP address resources set up for your applications,
/// 						you can easily add those to a standard accelerator in Global Accelerator. This allows Global Accelerator to use static IP addresses
/// 						to access the resources.</p>
/// 					          <p>The static IP addresses remain assigned to your accelerator for as long as it exists, even
/// 						if you disable the accelerator and it no longer accepts or routes traffic.
/// 						However, when you <i>delete</i> an accelerator, you lose the
/// 						static IP addresses that are assigned to it, so you can no longer route
/// 						traffic by using them. You can use IAM policies like tag-based permissions
/// 						with Global Accelerator to delete an accelerator. For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/access-control-manage-access-tag-policies.html">Tag-based policies</a>.</p>
/// 				        </dd>
///             <dt>Accelerator</dt>
///             <dd>
///                <p>An accelerator directs traffic to endpoints over the AWS global network to improve the
/// 					performance of your internet applications. Each accelerator includes one or more listeners.</p>
/// 					          <p>There are two types of accelerators:</p>
/// 					          <ul>
///                   <li>
///                      <p>A <i>standard</i> accelerator directs traffic to the optimal AWS endpoint based
/// 							on several factors, including the userâ€™s location, the health of the endpoint, and the endpoint weights
/// 							that you configure. This improves the availability and performance of your applications.
/// 							Endpoints can be Network Load Balancers, Application Load Balancers, Amazon EC2 instances, or Elastic IP addresses.</p>
///                   </li>
///                   <li>
///                      <p>A <i>custom routing</i> accelerator directs traffic to one of possibly thousands of
/// 								Amazon EC2 instances running in a single or multiple virtual private
/// 								clouds (VPCs). With custom routing, listener ports are mapped to
/// 								statically associate port ranges with VPC subnets, which
/// 								allows Global Accelerator to determine an EC2 instance IP address at the time of
/// 								connection. By default, all port mapping destinations in a VPC
/// 								subnet can't receive traffic. You can choose to configure all
/// 								destinations in the subnet to receive traffic, or to specify
/// 								individual port mappings that can receive traffic.</p>
///                   </li>
///                </ul>
/// 					          <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/introduction-accelerator-types.html">Types of accelerators</a>.</p>
/// 				        </dd>
///             <dt>DNS name</dt>
///             <dd>
///                <p>Global Accelerator assigns each accelerator a default Domain Name System (DNS) name, similar to
/// 					<code>a1234567890abcdef.awsglobalaccelerator.com</code>, that points to
/// 					the static IP addresses that Global Accelerator assigns to you or that you choose from your
/// 					own IP address range. Depending on the use
/// 					case, you can use your accelerator's static IP addresses or DNS name to
/// 					route traffic to your accelerator, or set up DNS records to route traffic using
/// 					your own custom domain name.</p>
/// 				        </dd>
///             <dt>Network zone</dt>
///             <dd>
///                <p>A network zone services the static IP addresses for your accelerator from a unique IP subnet. Similar to an
/// 					AWS Availability Zone, a network zone is an isolated unit with its own set of physical infrastructure.
/// 					When you configure an accelerator, by default, Global Accelerator allocates two IPv4 addresses for it. If one IP address from a
/// 					network zone becomes unavailable due to IP address blocking by certain client networks, or network
/// 					disruptions, then client applications can retry on the healthy static IP address from the other isolated
/// 					network zone.</p>
/// 				        </dd>
///             <dt>Listener</dt>
///             <dd>
///                <p>A listener processes inbound connections from clients to Global Accelerator, based on the port (or port range)
/// 					and protocol (or protocols) that you configure. A listener can be configured for TCP, UDP, or both TCP and UDP protocols. Each
/// 					listener has one or more endpoint groups associated with it, and traffic is forwarded
/// 					to endpoints in one of the groups. You associate endpoint groups with listeners by specifying the Regions that you
/// 					want to distribute traffic to. With a standard accelerator, traffic is distributed to optimal endpoints within the endpoint
/// 					groups associated with a listener.</p>
///             </dd>
///             <dt>Endpoint group</dt>
///             <dd>
///                <p>Each endpoint group is associated with a specific AWS Region. Endpoint groups include one or
/// 					more endpoints in the Region. With a standard accelerator, you can increase or reduce the percentage of
/// 					traffic that would be otherwise directed to an endpoint group by adjusting a
/// 					setting called a <i>traffic dial</i>. The traffic dial lets
/// 					you easily do performance testing or blue/green deployment testing, for example, for new
/// 					releases across different AWS Regions. </p>
/// 				        </dd>
///             <dt>Endpoint</dt>
///             <dd>
///                <p>An endpoint is a resource that Global Accelerator directs traffic to.</p>
/// 					          <p>Endpoints for standard accelerators can be Network Load Balancers, Application Load Balancers, Amazon EC2 instances, or Elastic IP
/// 						addresses. An Application Load Balancer endpoint can be internet-facing or internal. Traffic for
/// 						standard accelerators is routed to endpoints based on the health of the
/// 						endpoint along with configuration options that you choose, such as endpoint
/// 						weights. For each endpoint, you can configure weights, which are numbers
/// 						that you can use to specify the proportion of traffic to route to each one.
/// 						This can be useful, for example, to do performance testing within a
/// 						Region.</p>
/// 					          <p>Endpoints for custom routing accelerators are virtual private cloud (VPC) subnets with one
/// 						or many EC2 instances.</p>
/// 				        </dd>
///          </dl>
public protocol GlobalAcceleratorClientProtocol {
    /// <p>Associate a virtual private cloud (VPC) subnet endpoint with your custom routing accelerator.</p>
    /// 	        <p>The listener port range must be large enough to support the number of IP addresses that can be
    /// 		specified in your subnet. The number of ports required is: subnet size times the number
    /// 		of ports per destination EC2 instances. For example, a subnet defined as /24 requires a listener
    /// 		port range of at least 255 ports. </p>
    /// 	        <p>Note: You must have enough remaining listener ports available to
    /// 		map to the subnet ports, or the call will fail with a LimitExceededException.</p>
    /// 	        <p>By default, all destinations in a subnet in a custom routing accelerator cannot receive traffic. To enable all
    /// 			destinations to receive traffic, or to specify individual port mappings that can receive
    /// 			traffic, see the <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/API_AllowCustomRoutingTraffic.html">
    /// 				AllowCustomRoutingTraffic</a> operation.</p>
    func addCustomRoutingEndpoints(input: AddCustomRoutingEndpointsInput, completion: @escaping (SdkResult<AddCustomRoutingEndpointsOutputResponse, AddCustomRoutingEndpointsOutputError>) -> Void)
    /// <p>Advertises an IPv4 address range that is provisioned for use with your AWS resources
    /// 			through bring your own IP addresses (BYOIP). It can take a few minutes before traffic to
    /// 			the specified addresses starts routing to AWS because of propagation delays. </p>
    /// 		       <p>To stop advertising the BYOIP address range, use <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/WithdrawByoipCidr.html">
    /// 			WithdrawByoipCidr</a>.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring Your Own
    /// 			IP Addresses (BYOIP)</a> in the <i>AWS Global Accelerator Developer Guide</i>.</p>
    func advertiseByoipCidr(input: AdvertiseByoipCidrInput, completion: @escaping (SdkResult<AdvertiseByoipCidrOutputResponse, AdvertiseByoipCidrOutputError>) -> Void)
    /// <p>Specify the Amazon EC2 instance (destination) IP addresses and ports for a VPC subnet endpoint that can receive traffic
    /// 			for a custom routing accelerator. You can allow traffic to all destinations in the subnet endpoint, or allow traffic to a
    /// 			specified list of destination IP addresses and ports in the subnet. Note that you cannot specify IP addresses or ports
    /// 			outside of the range that you configured for the endpoint group.</p>
    /// 		       <p>After you make changes, you can verify that the updates are complete by checking the status of your
    /// 			accelerator: the status changes from IN_PROGRESS to DEPLOYED.</p>
    func allowCustomRoutingTraffic(input: AllowCustomRoutingTrafficInput, completion: @escaping (SdkResult<AllowCustomRoutingTrafficOutputResponse, AllowCustomRoutingTrafficOutputError>) -> Void)
    /// <p>Create an accelerator. An accelerator includes one or more listeners that process inbound connections and direct traffic
    /// 			to one or more endpoint groups, each of which includes endpoints, such as Network Load Balancers. </p>	
    /// 		       <important>
    /// 			         <p>Global Accelerator is a global service that supports endpoints in multiple AWS Regions but you must specify the
    /// 				US West (Oregon) Region to create or update accelerators.</p>
    /// 		       </important>
    func createAccelerator(input: CreateAcceleratorInput, completion: @escaping (SdkResult<CreateAcceleratorOutputResponse, CreateAcceleratorOutputError>) -> Void)
    /// <p>Create a custom routing accelerator. A custom routing accelerator directs traffic to one of possibly thousands
    /// 		of Amazon EC2 instance destinations running in a single or multiple virtual private clouds (VPC) subnet endpoints.</p>
    /// 	        <p>Be aware that, by default, all destination EC2 instances in a VPC subnet endpoint cannot receive
    /// 			traffic. To enable all destinations to receive traffic, or to specify individual port
    /// 			mappings that can receive traffic, see the <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/API_AllowCustomRoutingTraffic.html">
    /// 				AllowCustomRoutingTraffic</a> operation.</p>
    /// 	        <important>
    /// 		          <p>Global Accelerator is a global service that supports endpoints in multiple AWS Regions but you must specify the
    /// 			US West (Oregon) Region to create or update accelerators.</p>
    /// 	        </important>
    func createCustomRoutingAccelerator(input: CreateCustomRoutingAcceleratorInput, completion: @escaping (SdkResult<CreateCustomRoutingAcceleratorOutputResponse, CreateCustomRoutingAcceleratorOutputError>) -> Void)
    /// <p>Create an endpoint group for the specified listener for a custom routing accelerator.
    /// 		An endpoint group is a collection of endpoints in one AWS
    /// 		Region. </p>
    func createCustomRoutingEndpointGroup(input: CreateCustomRoutingEndpointGroupInput, completion: @escaping (SdkResult<CreateCustomRoutingEndpointGroupOutputResponse, CreateCustomRoutingEndpointGroupOutputError>) -> Void)
    /// <p>Create a listener to process inbound connections from clients to a custom routing accelerator.
    /// 			Connections arrive to assigned static IP addresses on the port range that you specify. </p>
    func createCustomRoutingListener(input: CreateCustomRoutingListenerInput, completion: @escaping (SdkResult<CreateCustomRoutingListenerOutputResponse, CreateCustomRoutingListenerOutputError>) -> Void)
    /// <p>Create an endpoint group for the specified listener. An endpoint group is a collection of endpoints in one AWS
    /// 			Region. A resource must be valid and active when you add it as an endpoint.</p>
    func createEndpointGroup(input: CreateEndpointGroupInput, completion: @escaping (SdkResult<CreateEndpointGroupOutputResponse, CreateEndpointGroupOutputError>) -> Void)
    /// <p>Create a listener to process inbound connections from clients to an accelerator. Connections arrive to assigned static
    /// 			IP addresses on a port, port range, or list of port ranges that you specify. </p>
    func createListener(input: CreateListenerInput, completion: @escaping (SdkResult<CreateListenerOutputResponse, CreateListenerOutputError>) -> Void)
    /// <p>Delete an accelerator. Before you can delete an accelerator, you must disable it and remove all dependent resources
    /// 			(listeners and endpoint groups). To disable the accelerator, update the accelerator to set <code>Enabled</code> to false.</p>
    /// 		       <important>
    ///             <p>When you create an accelerator, by default, Global Accelerator provides you with a set of two static IP addresses.
    /// 			Alternatively, you can bring your own IP address ranges to Global Accelerator and assign IP addresses from those ranges.
    /// 		</p>
    /// 		          <p>The IP addresses are assigned to your accelerator for as long as it exists, even if you disable the accelerator and
    /// 			it no longer accepts or routes traffic. However, when you <i>delete</i> an accelerator, you lose the
    /// 			static IP addresses that are assigned to the accelerator, so you can no longer route traffic by using them.
    /// 			As a best practice, ensure that you have permissions in place to avoid inadvertently deleting accelerators. You
    /// 			can use IAM policies with Global Accelerator to limit the users who have permissions to delete an accelerator. For more information,
    /// 			see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/auth-and-access-control.html">Authentication and Access Control</a> in
    /// 			the <i>AWS Global Accelerator Developer Guide</i>.</p>
    ///          </important>
    func deleteAccelerator(input: DeleteAcceleratorInput, completion: @escaping (SdkResult<DeleteAcceleratorOutputResponse, DeleteAcceleratorOutputError>) -> Void)
    /// <p>Delete a custom routing accelerator. Before you can delete an accelerator, you must disable it and remove all dependent resources
    /// 		(listeners and endpoint groups). To disable the accelerator, update the accelerator to set <code>Enabled</code> to false.</p>
    /// 	        <important>
    ///             <p>When you create a custom routing accelerator, by default, Global Accelerator provides you with a set of two static IP addresses.
    /// 	</p>
    /// 		          <p>The IP
    /// 			addresses are assigned to your accelerator for as long as it exists, even if you disable the accelerator and
    /// 			it no longer accepts or routes traffic. However, when you <i>delete</i> an accelerator, you lose the
    /// 			static IP addresses that are assigned to the accelerator, so you can no longer route traffic by using them.
    /// 			As a best practice, ensure that you have permissions in place to avoid inadvertently deleting accelerators. You
    /// 			can use IAM policies with Global Accelerator to limit the users who have permissions to delete an accelerator. For more information,
    /// 			see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/auth-and-access-control.html">Authentication and Access Control</a> in
    /// 			the <i>AWS Global Accelerator Developer Guide</i>.</p>
    ///          </important>
    func deleteCustomRoutingAccelerator(input: DeleteCustomRoutingAcceleratorInput, completion: @escaping (SdkResult<DeleteCustomRoutingAcceleratorOutputResponse, DeleteCustomRoutingAcceleratorOutputError>) -> Void)
    /// <p>Delete an endpoint group from a listener for a custom routing accelerator.</p>
    func deleteCustomRoutingEndpointGroup(input: DeleteCustomRoutingEndpointGroupInput, completion: @escaping (SdkResult<DeleteCustomRoutingEndpointGroupOutputResponse, DeleteCustomRoutingEndpointGroupOutputError>) -> Void)
    /// <p>Delete a listener for a custom routing accelerator.</p>
    func deleteCustomRoutingListener(input: DeleteCustomRoutingListenerInput, completion: @escaping (SdkResult<DeleteCustomRoutingListenerOutputResponse, DeleteCustomRoutingListenerOutputError>) -> Void)
    /// <p>Delete an endpoint group from a listener.</p>
    func deleteEndpointGroup(input: DeleteEndpointGroupInput, completion: @escaping (SdkResult<DeleteEndpointGroupOutputResponse, DeleteEndpointGroupOutputError>) -> Void)
    /// <p>Delete a listener from an accelerator.</p>
    func deleteListener(input: DeleteListenerInput, completion: @escaping (SdkResult<DeleteListenerOutputResponse, DeleteListenerOutputError>) -> Void)
    /// <p>Specify the Amazon EC2 instance (destination) IP addresses and ports for a VPC subnet endpoint that cannot receive traffic
    /// 			for a custom routing accelerator. You can deny traffic to all destinations in the VPC endpoint, or deny traffic to a
    /// 			specified list of destination IP addresses and ports. Note that you cannot specify IP addresses
    /// 			or ports outside of the range that you configured for the endpoint group.</p>
    /// 		       <p>After you make changes, you can verify that the updates are complete by checking the status of your
    /// 			accelerator: the status changes from IN_PROGRESS to DEPLOYED.</p>
    func denyCustomRoutingTraffic(input: DenyCustomRoutingTrafficInput, completion: @escaping (SdkResult<DenyCustomRoutingTrafficOutputResponse, DenyCustomRoutingTrafficOutputError>) -> Void)
    /// <p>Releases the specified address range that you provisioned to use with your AWS resources
    /// 			through bring your own IP addresses (BYOIP) and deletes the corresponding address pool. </p>
    /// 		       <p>Before you can release an address range, you must stop advertising it by using <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/WithdrawByoipCidr.html">WithdrawByoipCidr</a> and you must not have
    /// 			any accelerators that are using static IP addresses allocated from its address range.
    /// 		</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring Your Own
    /// 			IP Addresses (BYOIP)</a> in the <i>AWS Global Accelerator Developer Guide</i>.</p>
    func deprovisionByoipCidr(input: DeprovisionByoipCidrInput, completion: @escaping (SdkResult<DeprovisionByoipCidrOutputResponse, DeprovisionByoipCidrOutputError>) -> Void)
    /// <p>Describe an accelerator. </p>
    func describeAccelerator(input: DescribeAcceleratorInput, completion: @escaping (SdkResult<DescribeAcceleratorOutputResponse, DescribeAcceleratorOutputError>) -> Void)
    /// <p>Describe the attributes of an accelerator.
    /// 		</p>
    func describeAcceleratorAttributes(input: DescribeAcceleratorAttributesInput, completion: @escaping (SdkResult<DescribeAcceleratorAttributesOutputResponse, DescribeAcceleratorAttributesOutputError>) -> Void)
    /// <p>Describe a custom routing accelerator. </p>
    func describeCustomRoutingAccelerator(input: DescribeCustomRoutingAcceleratorInput, completion: @escaping (SdkResult<DescribeCustomRoutingAcceleratorOutputResponse, DescribeCustomRoutingAcceleratorOutputError>) -> Void)
    /// <p>Describe the attributes of a custom routing accelerator. </p>
    func describeCustomRoutingAcceleratorAttributes(input: DescribeCustomRoutingAcceleratorAttributesInput, completion: @escaping (SdkResult<DescribeCustomRoutingAcceleratorAttributesOutputResponse, DescribeCustomRoutingAcceleratorAttributesOutputError>) -> Void)
    /// <p>Describe an endpoint group for a custom routing accelerator. </p>
    func describeCustomRoutingEndpointGroup(input: DescribeCustomRoutingEndpointGroupInput, completion: @escaping (SdkResult<DescribeCustomRoutingEndpointGroupOutputResponse, DescribeCustomRoutingEndpointGroupOutputError>) -> Void)
    /// <p>The description of a listener for a custom routing accelerator.</p>
    func describeCustomRoutingListener(input: DescribeCustomRoutingListenerInput, completion: @escaping (SdkResult<DescribeCustomRoutingListenerOutputResponse, DescribeCustomRoutingListenerOutputError>) -> Void)
    /// <p>Describe an endpoint group. </p>
    func describeEndpointGroup(input: DescribeEndpointGroupInput, completion: @escaping (SdkResult<DescribeEndpointGroupOutputResponse, DescribeEndpointGroupOutputError>) -> Void)
    /// <p>Describe a listener. </p>
    func describeListener(input: DescribeListenerInput, completion: @escaping (SdkResult<DescribeListenerOutputResponse, DescribeListenerOutputError>) -> Void)
    /// <p>List the accelerators for an AWS account. </p>
    func listAccelerators(input: ListAcceleratorsInput, completion: @escaping (SdkResult<ListAcceleratorsOutputResponse, ListAcceleratorsOutputError>) -> Void)
    /// <p>Lists the IP address ranges that were specified in calls to <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/ProvisionByoipCidr.html">ProvisionByoipCidr</a>, including
    /// 			the current state and a history of state changes.</p>
    func listByoipCidrs(input: ListByoipCidrsInput, completion: @escaping (SdkResult<ListByoipCidrsOutputResponse, ListByoipCidrsOutputError>) -> Void)
    /// <p>List the custom routing accelerators for an AWS account. </p>
    func listCustomRoutingAccelerators(input: ListCustomRoutingAcceleratorsInput, completion: @escaping (SdkResult<ListCustomRoutingAcceleratorsOutputResponse, ListCustomRoutingAcceleratorsOutputError>) -> Void)
    /// <p>List the endpoint groups that are associated with a listener for a custom routing accelerator. </p>
    func listCustomRoutingEndpointGroups(input: ListCustomRoutingEndpointGroupsInput, completion: @escaping (SdkResult<ListCustomRoutingEndpointGroupsOutputResponse, ListCustomRoutingEndpointGroupsOutputError>) -> Void)
    /// <p>List the listeners for a custom routing accelerator. </p>
    func listCustomRoutingListeners(input: ListCustomRoutingListenersInput, completion: @escaping (SdkResult<ListCustomRoutingListenersOutputResponse, ListCustomRoutingListenersOutputError>) -> Void)
    /// <p>Provides a complete mapping from the public accelerator IP address and port to destination EC2 instance
    /// 		IP addresses and ports in the virtual public cloud (VPC) subnet endpoint for a custom routing accelerator.
    /// 		For each subnet endpoint that you add, Global Accelerator creates a new static port mapping for the accelerator. The port
    /// 		mappings don't change after Global Accelerator generates them, so you can retrieve and cache the full mapping on your servers. </p>
    /// 	        <p>If you remove a subnet from your accelerator, Global Accelerator removes (reclaims) the port mappings. If you add a subnet to
    /// 		your accelerator, Global Accelerator creates new port mappings (the existing ones don't change). If you add or remove EC2 instances
    /// 		in your subnet, the port mappings don't change, because the mappings are created when you add the subnet to Global Accelerator.</p>
    /// 	        <p>The mappings also include a flag for each destination denoting which destination IP addresses and
    /// 		ports are allowed or denied traffic.</p>
    func listCustomRoutingPortMappings(input: ListCustomRoutingPortMappingsInput, completion: @escaping (SdkResult<ListCustomRoutingPortMappingsOutputResponse, ListCustomRoutingPortMappingsOutputError>) -> Void)
    /// <p>List the port mappings for a specific EC2 instance (destination) in a VPC subnet endpoint. The
    /// 			response is the mappings for one destination IP address. This is useful when your subnet endpoint has mappings that
    /// 			span multiple custom routing accelerators in your account, or for scenarios where you only want to
    /// 			list the port mappings for a specific destination instance.</p>
    func listCustomRoutingPortMappingsByDestination(input: ListCustomRoutingPortMappingsByDestinationInput, completion: @escaping (SdkResult<ListCustomRoutingPortMappingsByDestinationOutputResponse, ListCustomRoutingPortMappingsByDestinationOutputError>) -> Void)
    /// <p>List the endpoint groups that are associated with a listener. </p>
    func listEndpointGroups(input: ListEndpointGroupsInput, completion: @escaping (SdkResult<ListEndpointGroupsOutputResponse, ListEndpointGroupsOutputError>) -> Void)
    /// <p>List the listeners for an accelerator. </p>
    func listListeners(input: ListListenersInput, completion: @escaping (SdkResult<ListListenersOutputResponse, ListListenersOutputError>) -> Void)
    /// <p>List all tags for an accelerator. </p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html">Tagging
    /// 			in AWS Global Accelerator</a> in the <i>AWS Global Accelerator Developer Guide</i>. </p>
    func listTagsForResource(input: ListTagsForResourceInput, completion: @escaping (SdkResult<ListTagsForResourceOutputResponse, ListTagsForResourceOutputError>) -> Void)
    /// <p>Provisions an IP address range to use with your AWS resources through bring your own IP
    /// 			addresses (BYOIP) and creates a corresponding address pool. After the address range is provisioned,
    /// 			it is ready to be advertised using <a href="https://docs.aws.amazon.com/global-accelerator/latest/api/AdvertiseByoipCidr.html">
    /// 			AdvertiseByoipCidr</a>.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring Your Own
    /// 			IP Addresses (BYOIP)</a> in the <i>AWS Global Accelerator Developer Guide</i>.</p>
    func provisionByoipCidr(input: ProvisionByoipCidrInput, completion: @escaping (SdkResult<ProvisionByoipCidrOutputResponse, ProvisionByoipCidrOutputError>) -> Void)
    /// <p>Remove endpoints from a custom routing accelerator.</p>
    func removeCustomRoutingEndpoints(input: RemoveCustomRoutingEndpointsInput, completion: @escaping (SdkResult<RemoveCustomRoutingEndpointsOutputResponse, RemoveCustomRoutingEndpointsOutputError>) -> Void)
    /// <p>Add tags to an accelerator resource. </p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html">Tagging
    /// 			in AWS Global Accelerator</a> in the <i>AWS Global Accelerator Developer Guide</i>. </p>
    func tagResource(input: TagResourceInput, completion: @escaping (SdkResult<TagResourceOutputResponse, TagResourceOutputError>) -> Void)
    /// <p>Remove tags from a Global Accelerator resource. When you specify a tag key, the action removes both that key and its associated value.
    /// 			The operation succeeds even if you attempt to remove tags from an accelerator that was already removed.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html">Tagging
    /// 			in AWS Global Accelerator</a> in the <i>AWS Global Accelerator Developer Guide</i>.</p>
    func untagResource(input: UntagResourceInput, completion: @escaping (SdkResult<UntagResourceOutputResponse, UntagResourceOutputError>) -> Void)
    /// <p>Update an accelerator. </p>
    /// 		
    /// 		       <important>
    /// 			         <p>Global Accelerator is a global service that supports endpoints in multiple AWS Regions but you must specify the
    /// 				US West (Oregon) Region to create or update accelerators.</p>
    /// 		       </important>
    func updateAccelerator(input: UpdateAcceleratorInput, completion: @escaping (SdkResult<UpdateAcceleratorOutputResponse, UpdateAcceleratorOutputError>) -> Void)
    /// <p>Update the attributes for an accelerator. </p>
    func updateAcceleratorAttributes(input: UpdateAcceleratorAttributesInput, completion: @escaping (SdkResult<UpdateAcceleratorAttributesOutputResponse, UpdateAcceleratorAttributesOutputError>) -> Void)
    /// <p>Update a custom routing accelerator. </p>
    func updateCustomRoutingAccelerator(input: UpdateCustomRoutingAcceleratorInput, completion: @escaping (SdkResult<UpdateCustomRoutingAcceleratorOutputResponse, UpdateCustomRoutingAcceleratorOutputError>) -> Void)
    /// <p>Update the attributes for a custom routing accelerator. </p>
    func updateCustomRoutingAcceleratorAttributes(input: UpdateCustomRoutingAcceleratorAttributesInput, completion: @escaping (SdkResult<UpdateCustomRoutingAcceleratorAttributesOutputResponse, UpdateCustomRoutingAcceleratorAttributesOutputError>) -> Void)
    /// <p>Update a listener for a custom routing accelerator. </p>
    func updateCustomRoutingListener(input: UpdateCustomRoutingListenerInput, completion: @escaping (SdkResult<UpdateCustomRoutingListenerOutputResponse, UpdateCustomRoutingListenerOutputError>) -> Void)
    /// <p>Update an endpoint group. A resource must be valid and active when you add it as an endpoint.</p>
    func updateEndpointGroup(input: UpdateEndpointGroupInput, completion: @escaping (SdkResult<UpdateEndpointGroupOutputResponse, UpdateEndpointGroupOutputError>) -> Void)
    /// <p>Update a listener. </p>
    func updateListener(input: UpdateListenerInput, completion: @escaping (SdkResult<UpdateListenerOutputResponse, UpdateListenerOutputError>) -> Void)
    /// <p>Stops advertising an address range that is provisioned as an address pool.
    /// 			You can perform this operation at most once every 10 seconds, even if you specify different address
    /// 			ranges each time.</p>
    /// 		       <p>It can take a few minutes before traffic to the specified addresses stops routing to AWS because of
    /// 			propagation delays.</p>
    /// 		       <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring Your Own
    /// 			IP Addresses (BYOIP)</a> in the <i>AWS Global Accelerator Developer Guide</i>.</p>
    func withdrawByoipCidr(input: WithdrawByoipCidrInput, completion: @escaping (SdkResult<WithdrawByoipCidrOutputResponse, WithdrawByoipCidrOutputError>) -> Void)
}
