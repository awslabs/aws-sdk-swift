// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListCustomRoutingAcceleratorsOutputBody: Equatable {
    public let accelerators: [CustomRoutingAccelerator]?
    public let nextToken: String?
}

extension ListCustomRoutingAcceleratorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accelerators = "Accelerators"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let acceleratorsContainer = try containerValues.decodeIfPresent([CustomRoutingAccelerator].self, forKey: .accelerators)
        var acceleratorsDecoded0:[CustomRoutingAccelerator]? = nil
        if let acceleratorsContainer = acceleratorsContainer {
            acceleratorsDecoded0 = [CustomRoutingAccelerator]()
            for structure0 in acceleratorsContainer {
                acceleratorsDecoded0?.append(structure0)
            }
        }
        accelerators = acceleratorsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
