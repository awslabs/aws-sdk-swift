// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DenyCustomRoutingTrafficInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case denyAllTrafficToEndpoint = "DenyAllTrafficToEndpoint"
        case destinationAddresses = "DestinationAddresses"
        case destinationPorts = "DestinationPorts"
        case endpointGroupArn = "EndpointGroupArn"
        case endpointId = "EndpointId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let denyAllTrafficToEndpoint = denyAllTrafficToEndpoint {
            try encodeContainer.encode(denyAllTrafficToEndpoint, forKey: .denyAllTrafficToEndpoint)
        }
        if let destinationAddresses = destinationAddresses {
            var destinationAddressesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .destinationAddresses)
            for destinationaddresses0 in destinationAddresses {
                try destinationAddressesContainer.encode(destinationaddresses0)
            }
        }
        if let destinationPorts = destinationPorts {
            var destinationPortsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .destinationPorts)
            for destinationports0 in destinationPorts {
                try destinationPortsContainer.encode(destinationports0)
            }
        }
        if let endpointGroupArn = endpointGroupArn {
            try encodeContainer.encode(endpointGroupArn, forKey: .endpointGroupArn)
        }
        if let endpointId = endpointId {
            try encodeContainer.encode(endpointId, forKey: .endpointId)
        }
    }
}
