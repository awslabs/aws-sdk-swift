// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension EndpointConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientIPPreservationEnabled = "ClientIPPreservationEnabled"
        case endpointId = "EndpointId"
        case weight = "Weight"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientIPPreservationEnabled = clientIPPreservationEnabled {
            try encodeContainer.encode(clientIPPreservationEnabled, forKey: .clientIPPreservationEnabled)
        }
        if let endpointId = endpointId {
            try encodeContainer.encode(endpointId, forKey: .endpointId)
        }
        if let weight = weight {
            try encodeContainer.encode(weight, forKey: .weight)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointId)
        endpointId = endpointIdDecoded
        let weightDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .weight)
        weight = weightDecoded
        let clientIPPreservationEnabledDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .clientIPPreservationEnabled)
        clientIPPreservationEnabled = clientIPPreservationEnabledDecoded
    }
}
