// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateCustomRoutingEndpointGroupInputBody: Equatable {
    public let listenerArn: String?
    public let endpointGroupRegion: String?
    public let destinationConfigurations: [CustomRoutingDestinationConfiguration]?
    public let idempotencyToken: String?
}

extension CreateCustomRoutingEndpointGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case destinationConfigurations = "DestinationConfigurations"
        case endpointGroupRegion = "EndpointGroupRegion"
        case idempotencyToken = "IdempotencyToken"
        case listenerArn = "ListenerArn"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let listenerArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .listenerArn)
        listenerArn = listenerArnDecoded
        let endpointGroupRegionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointGroupRegion)
        endpointGroupRegion = endpointGroupRegionDecoded
        let destinationConfigurationsContainer = try containerValues.decodeIfPresent([CustomRoutingDestinationConfiguration].self, forKey: .destinationConfigurations)
        var destinationConfigurationsDecoded0:[CustomRoutingDestinationConfiguration]? = nil
        if let destinationConfigurationsContainer = destinationConfigurationsContainer {
            destinationConfigurationsDecoded0 = [CustomRoutingDestinationConfiguration]()
            for structure0 in destinationConfigurationsContainer {
                destinationConfigurationsDecoded0?.append(structure0)
            }
        }
        destinationConfigurations = destinationConfigurationsDecoded0
        let idempotencyTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .idempotencyToken)
        idempotencyToken = idempotencyTokenDecoded
    }
}
