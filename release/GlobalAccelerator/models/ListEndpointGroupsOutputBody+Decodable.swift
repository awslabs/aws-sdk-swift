// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListEndpointGroupsOutputBody: Equatable {
    public let endpointGroups: [EndpointGroup]?
    public let nextToken: String?
}

extension ListEndpointGroupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case endpointGroups = "EndpointGroups"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointGroupsContainer = try containerValues.decodeIfPresent([EndpointGroup].self, forKey: .endpointGroups)
        var endpointGroupsDecoded0:[EndpointGroup]? = nil
        if let endpointGroupsContainer = endpointGroupsContainer {
            endpointGroupsDecoded0 = [EndpointGroup]()
            for structure0 in endpointGroupsContainer {
                endpointGroupsDecoded0?.append(structure0)
            }
        }
        endpointGroups = endpointGroupsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
