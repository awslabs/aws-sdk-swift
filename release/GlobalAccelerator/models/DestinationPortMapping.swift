// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The port mappings for a specified endpoint IP address (destination).</p>
public struct DestinationPortMapping: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the custom routing accelerator
    /// 			that you have port mappings for.</p>
    public let acceleratorArn: String?
    /// <p>The IP address/port combinations (sockets) that map to a given destination socket
    /// 			address.</p>
    public let acceleratorSocketAddresses: [SocketAddress]?
    /// <p>The endpoint IP address/port combination for traffic received on the accelerator socket address.</p>
    public let destinationSocketAddress: SocketAddress?
    /// <p>Indicates whether or not a port mapping destination can receive traffic. The value is either ALLOW, if
    /// 			traffic is allowed to the destination, or DENY, if traffic is not allowed to the destination.</p>
    public let destinationTrafficState: CustomRoutingDestinationTrafficState?
    /// <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    public let endpointGroupArn: String?
    /// <p>The AWS Region for the endpoint group.</p>
    public let endpointGroupRegion: String?
    /// <p>The ID for the virtual private cloud (VPC) subnet.</p>
    public let endpointId: String?
    /// <p>The IP address type, which must be IPv4.</p>
    public let ipAddressType: IpAddressType?

    public init (
        acceleratorArn: String? = nil,
        acceleratorSocketAddresses: [SocketAddress]? = nil,
        destinationSocketAddress: SocketAddress? = nil,
        destinationTrafficState: CustomRoutingDestinationTrafficState? = nil,
        endpointGroupArn: String? = nil,
        endpointGroupRegion: String? = nil,
        endpointId: String? = nil,
        ipAddressType: IpAddressType? = nil
    )
    {
        self.acceleratorArn = acceleratorArn
        self.acceleratorSocketAddresses = acceleratorSocketAddresses
        self.destinationSocketAddress = destinationSocketAddress
        self.destinationTrafficState = destinationTrafficState
        self.endpointGroupArn = endpointGroupArn
        self.endpointGroupRegion = endpointGroupRegion
        self.endpointId = endpointId
        self.ipAddressType = ipAddressType
    }
}
