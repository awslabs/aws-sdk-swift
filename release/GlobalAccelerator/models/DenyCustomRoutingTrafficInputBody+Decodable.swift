// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DenyCustomRoutingTrafficInputBody: Equatable {
    public let endpointGroupArn: String?
    public let endpointId: String?
    public let destinationAddresses: [String]?
    public let destinationPorts: [Int]?
    public let denyAllTrafficToEndpoint: Bool?
}

extension DenyCustomRoutingTrafficInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case denyAllTrafficToEndpoint = "DenyAllTrafficToEndpoint"
        case destinationAddresses = "DestinationAddresses"
        case destinationPorts = "DestinationPorts"
        case endpointGroupArn = "EndpointGroupArn"
        case endpointId = "EndpointId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let endpointGroupArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointGroupArn)
        endpointGroupArn = endpointGroupArnDecoded
        let endpointIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpointId)
        endpointId = endpointIdDecoded
        let destinationAddressesContainer = try containerValues.decodeIfPresent([String].self, forKey: .destinationAddresses)
        var destinationAddressesDecoded0:[String]? = nil
        if let destinationAddressesContainer = destinationAddressesContainer {
            destinationAddressesDecoded0 = [String]()
            for string0 in destinationAddressesContainer {
                destinationAddressesDecoded0?.append(string0)
            }
        }
        destinationAddresses = destinationAddressesDecoded0
        let destinationPortsContainer = try containerValues.decodeIfPresent([Int].self, forKey: .destinationPorts)
        var destinationPortsDecoded0:[Int]? = nil
        if let destinationPortsContainer = destinationPortsContainer {
            destinationPortsDecoded0 = [Int]()
            for integer0 in destinationPortsContainer {
                destinationPortsDecoded0?.append(integer0)
            }
        }
        destinationPorts = destinationPortsDecoded0
        let denyAllTrafficToEndpointDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .denyAllTrafficToEndpoint)
        denyAllTrafficToEndpoint = denyAllTrafficToEndpointDecoded
    }
}
