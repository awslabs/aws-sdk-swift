// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The types of limits on your service utilization. Limits include file system count,
///             total throughput capacity, total storage, and total user-initiated backups. These limits
///             apply for a specific account in a specific AWS Region. You can increase some of them by
///             contacting AWS Support. </p>
public enum ServiceLimit {
    case fileSystemCount
    case totalInProgressCopyBackups
    case totalStorage
    case totalThroughputCapacity
    case totalUserInitiatedBackups
    case totalUserTags
    case sdkUnknown(String)
}

extension ServiceLimit : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ServiceLimit] {
        return [
            .fileSystemCount,
            .totalInProgressCopyBackups,
            .totalStorage,
            .totalThroughputCapacity,
            .totalUserInitiatedBackups,
            .totalUserTags,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fileSystemCount: return "FILE_SYSTEM_COUNT"
        case .totalInProgressCopyBackups: return "TOTAL_IN_PROGRESS_COPY_BACKUPS"
        case .totalStorage: return "TOTAL_STORAGE"
        case .totalThroughputCapacity: return "TOTAL_THROUGHPUT_CAPACITY"
        case .totalUserInitiatedBackups: return "TOTAL_USER_INITIATED_BACKUPS"
        case .totalUserTags: return "TOTAL_USER_TAGS"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ServiceLimit(rawValue: rawValue) ?? ServiceLimit.sdkUnknown(rawValue)
    }
}
