// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A description of a specific Amazon FSx file system.</p>
public struct FileSystem: Equatable {
    /// <p>A list of administrative actions for the file system that are in process or waiting to be processed.
    ///             Administrative actions describe changes to the Windows file system that you have initiated using the <code>UpdateFileSystem</code> action.
    ///         </p>
    public let administrativeActions: [AdministrativeAction]?
    /// <p>The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z),
    ///             also known as Unix time.</p>
    public let creationTime: Date?
    /// <p>The DNS name for the file system.</p>
    public let dNSName: String?
    /// <p>A structure providing details of any failures that occur when creating the file system
    ///             has failed.</p>
    public let failureDetails: FileSystemFailureDetails?
    /// <p>The system-generated, unique 17-digit ID of the file system.</p>
    public let fileSystemId: String?
    /// <p>The type of Amazon FSx file system, either <code>LUSTRE</code> or <code>WINDOWS</code>.</p>
    public let fileSystemType: FileSystemType?
    /// <p>The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data
    ///             for Amazon FSx for Windows File Server file systems and persistent Amazon FSx for Lustre file
    ///             systems at rest. In either case, if not specified, the Amazon FSx managed key
    ///             is used. The scratch Amazon FSx for Lustre file systems are always encrypted at rest using
    ///             Amazon FSx managed keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a>
    ///             in the <i>AWS Key Management Service API Reference</i>.</p>
    public let kmsKeyId: String?
    /// <p>The lifecycle status of the file system, following are the possible values and what they mean:</p>
    ///             <ul>
    ///             <li>
    ///                <p>
    ///                   <code>AVAILABLE</code> - The file system is in a healthy state, and is reachable and available for use.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATING</code> - Amazon FSx is creating the new file system.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETING</code> - Amazon FSx is deleting an existing file system.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> - An existing file system has experienced an unrecoverable failure.
    ///                     When creating a new file system, Amazon FSx was unable to create the file system.</p>
    ///             </li>
    ///             <li>
    ///                     <p>
    ///                   <code>MISCONFIGURED</code> indicates that the file system is in a failed but recoverable state.</p>
    ///                 </li>
    ///             <li>
    ///                     <p>
    ///                   <code>UPDATING</code> indicates that the file system is undergoing a customer initiated update.</p>
    ///                 </li>
    ///          </ul>
    public let lifecycle: FileSystemLifecycle?
    /// <p>The configuration for the Amazon FSx for Lustre file system.</p>
    public let lustreConfiguration: LustreFileSystemConfiguration?
    /// <p>The IDs of the elastic network interface from which a specific file system is
    ///             accessible. The elastic network interface is automatically created in the same VPC that
    ///             the Amazon FSx file system was created in. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html">Elastic Network
    ///                 Interfaces</a> in the <i>Amazon EC2 User Guide.</i>
    ///          </p>
    ///
    ///         <p>For an Amazon FSx for Windows File Server file system, you can have one network
    ///             interface ID. For an Amazon FSx for Lustre file system, you can have more than
    ///             one.</p>
    public let networkInterfaceIds: [String]?
    /// <p>The AWS account that created the file system. If the file system was created by an AWS
    ///             Identity and Access Management (IAM) user, the AWS account to which the IAM user belongs
    ///             is the owner.</p>
    public let ownerId: String?
    /// <p>The Amazon Resource Name (ARN) for the file system resource.</p>
    public let resourceARN: String?
    /// <p>The storage capacity of the file system in gibibytes (GiB).</p>
    public let storageCapacity: Int?
    /// <p>The storage type of the file system.
    ///             Valid values are <code>SSD</code> and <code>HDD</code>.
    ///             If set to <code>SSD</code>, the file system uses solid state drive storage.
    ///             If set to <code>HDD</code>, the file system uses hard disk drive storage.
    ///         </p>
    public let storageType: StorageType?
    /// <p>Specifies the IDs of the subnets that the file system is accessible from. For Windows <code>MULTI_AZ_1</code>
    ///             file system deployment type, there are two subnet IDs, one for the preferred file server
    ///             and one for the standby file server. The preferred file server subnet identified in the
    ///             <code>PreferredSubnetID</code> property. All other file systems have only one subnet ID.</p>
    ///         <p>For Lustre file systems, and Single-AZ Windows file systems, this is the ID of
    ///             the subnet that contains the endpoint for the file system. For <code>MULTI_AZ_1</code> Windows file systems,
    ///             the endpoint for the file system is available in the <code>PreferredSubnetID</code>.</p>
    public let subnetIds: [String]?
    /// <p>The tags to associate with the file system. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your
    ///                 Amazon EC2 Resources</a> in the <i>Amazon EC2 User
    ///             Guide</i>.</p>
    public let tags: [Tag]?
    /// <p>The ID of the primary VPC for the file system.</p>
    public let vpcId: String?
    /// <p>The configuration for this Microsoft Windows file system.</p>
    public let windowsConfiguration: WindowsFileSystemConfiguration?

    public init (
        administrativeActions: [AdministrativeAction]? = nil,
        creationTime: Date? = nil,
        dNSName: String? = nil,
        failureDetails: FileSystemFailureDetails? = nil,
        fileSystemId: String? = nil,
        fileSystemType: FileSystemType? = nil,
        kmsKeyId: String? = nil,
        lifecycle: FileSystemLifecycle? = nil,
        lustreConfiguration: LustreFileSystemConfiguration? = nil,
        networkInterfaceIds: [String]? = nil,
        ownerId: String? = nil,
        resourceARN: String? = nil,
        storageCapacity: Int? = nil,
        storageType: StorageType? = nil,
        subnetIds: [String]? = nil,
        tags: [Tag]? = nil,
        vpcId: String? = nil,
        windowsConfiguration: WindowsFileSystemConfiguration? = nil
    )
    {
        self.administrativeActions = administrativeActions
        self.creationTime = creationTime
        self.dNSName = dNSName
        self.failureDetails = failureDetails
        self.fileSystemId = fileSystemId
        self.fileSystemType = fileSystemType
        self.kmsKeyId = kmsKeyId
        self.lifecycle = lifecycle
        self.lustreConfiguration = lustreConfiguration
        self.networkInterfaceIds = networkInterfaceIds
        self.ownerId = ownerId
        self.resourceARN = resourceARN
        self.storageCapacity = storageCapacity
        self.storageType = storageType
        self.subnetIds = subnetIds
        self.tags = tags
        self.vpcId = vpcId
        self.windowsConfiguration = windowsConfiguration
    }
}
