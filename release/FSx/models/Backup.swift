// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A backup of an Amazon FSx file system.</p>
public struct Backup: Equatable {
    /// <p>The ID of the backup.</p>
    public let backupId: String?
    /// <p>The time when a particular backup was created.</p>
    public let creationTime: Date?
    /// <p>The configuration of the self-managed Microsoft Active Directory (AD) to which the Windows File Server instance is joined.</p>
    public let directoryInformation: ActiveDirectoryBackupAttributes?
    /// <p>Details explaining any failures that occur when creating a backup.</p>
    public let failureDetails: BackupFailureDetails?
    /// <p>Metadata of the file system associated with the backup. This metadata is persisted
    ///             even if the file system is deleted.</p>
    public let fileSystem: FileSystem?
    /// <p>The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the
    ///               backup of the Amazon FSx file system's data at rest.
    ///               </p>
    public let kmsKeyId: String?
    /// <p>The lifecycle status of the backup.</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>AVAILABLE</code> - The backup is fully available.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>PENDING</code> - For user-initiated backups on Lustre file systems only; Amazon FSx has not started creating the backup.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CREATING</code> - Amazon FSx is creating the backup.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>TRANSFERRING</code> - For user-initiated backups on Lustre file systems only; Amazon FSx is transferring the backup to S3.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>COPYING</code> - Amazon FSx is copying the backup.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>DELETED</code> - Amazon FSx deleted the backup and it is no longer available.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> - Amazon FSx could not complete the backup.</p>
    ///             </li>
    ///          </ul>
    public let lifecycle: BackupLifecycle?
    /// <p>An AWS account ID. This ID is a 12-digit number that you use to construct Amazon
    ///             Resource Names (ARNs) for resources.</p>
    public let ownerId: String?
    /// <p>The current percent of progress of an asynchronous task.</p>
    public let progressPercent: Int?
    /// <p>The Amazon Resource Name (ARN) for the backup resource.</p>
    public let resourceARN: String?
    /// <p>The ID of the source backup. Specifies the backup you are copying.</p>
    public let sourceBackupId: String?
    /// <p>The source Region of the backup. Specifies the Region from where this backup
    ///             is copied.</p>
    public let sourceBackupRegion: String?
    /// <p>Tags associated with a particular file system.</p>
    public let tags: [Tag]?
    /// <p>The type of the file system backup.</p>
    public let type: BackupType?

    public init (
        backupId: String? = nil,
        creationTime: Date? = nil,
        directoryInformation: ActiveDirectoryBackupAttributes? = nil,
        failureDetails: BackupFailureDetails? = nil,
        fileSystem: FileSystem? = nil,
        kmsKeyId: String? = nil,
        lifecycle: BackupLifecycle? = nil,
        ownerId: String? = nil,
        progressPercent: Int? = nil,
        resourceARN: String? = nil,
        sourceBackupId: String? = nil,
        sourceBackupRegion: String? = nil,
        tags: [Tag]? = nil,
        type: BackupType? = nil
    )
    {
        self.backupId = backupId
        self.creationTime = creationTime
        self.directoryInformation = directoryInformation
        self.failureDetails = failureDetails
        self.fileSystem = fileSystem
        self.kmsKeyId = kmsKeyId
        self.lifecycle = lifecycle
        self.ownerId = ownerId
        self.progressPercent = progressPercent
        self.resourceARN = resourceARN
        self.sourceBackupId = sourceBackupId
        self.sourceBackupRegion = sourceBackupRegion
        self.tags = tags
        self.type = type
    }
}
