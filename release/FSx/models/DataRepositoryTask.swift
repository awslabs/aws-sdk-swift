// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>A description of the data repository task. You use data repository tasks
///             to perform bulk transfer operations between your Amazon FSx file system and its linked data
///             repository.</p>
public struct DataRepositoryTask: Equatable {
    /// <p>The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z),
    ///             also known as Unix time.</p>
    public let creationTime: Date?
    /// <p>The time that Amazon FSx completed processing the task, populated after the task is complete.</p>
    public let endTime: Date?
    /// <p>Failure message describing why the task failed, it is populated only when <code>Lifecycle</code> is set to <code>FAILED</code>.</p>
    public let failureDetails: DataRepositoryTaskFailureDetails?
    /// <p>The globally unique ID of the file system, assigned by Amazon FSx.</p>
    public let fileSystemId: String?
    /// <p>The lifecycle status of the data repository task, as follows:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PENDING</code> - Amazon FSx has not started the task.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>EXECUTING</code> - Amazon FSx is processing the task.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> -  Amazon FSx was not able to complete the task. For example, there may be files the task failed to process.
    ///                 The <a>DataRepositoryTaskFailureDetails</a> property provides more information about task failures.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SUCCEEDED</code> - FSx completed the task successfully.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CANCELED</code> - Amazon FSx canceled the task and it did not complete.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CANCELING</code> - FSx is in process of canceling the task.</p>
    ///             </li>
    ///          </ul>
    ///         <note>
    ///             <p>You cannot delete an FSx for Lustre file system if there are data
    ///                 repository tasks for the file system in the <code>PENDING</code> or <code>EXECUTING</code> states.
    ///                 Please retry when the data repository task is finished (with a status of <code>CANCELED</code>, <code>SUCCEEDED</code>, or <code>FAILED</code>).
    ///                 You can use the DescribeDataRepositoryTask action to monitor the task status. Contact the FSx team if you need to delete your file system immediately.</p>
    ///         </note>
    public let lifecycle: DataRepositoryTaskLifecycle?
    /// <p>An array of paths on the Amazon FSx for Lustre file system that specify the data for the data repository task to process.
    ///             For example, in an EXPORT_TO_REPOSITORY task, the paths specify which data to export to the linked data repository.</p>
    ///             <p>(Default) If <code>Paths</code> is not specified, Amazon FSx uses the file system root directory.</p>
    public let paths: [String]?
    /// <p>Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report <code>Scope</code> parameter.
    ///             FSx delivers the report to the file system's linked data repository in Amazon S3,
    ///             using the path specified in the report <code>Path</code> parameter.
    ///             You can specify whether or not a report gets generated for a task using the <code>Enabled</code> parameter.</p>
    public let report: CompletionReport?
    /// <p>The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify AWS
    ///             resources. We require an ARN when you need to specify a resource unambiguously across
    ///             all of AWS. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)
    ///                 and AWS Service Namespaces</a> in the <i>AWS General
    ///             Reference</i>.</p>
    public let resourceARN: String?
    /// <p>The time that Amazon FSx began processing the task.</p>
    public let startTime: Date?
    /// <p>Provides the status of the number of files that the task has processed successfully and failed to process.</p>
    public let status: DataRepositoryTaskStatus?
    /// <p>A list of <code>Tag</code> values, with a maximum of 50 elements.</p>
    public let tags: [Tag]?
    /// <p>The system-generated, unique 17-digit ID of the data repository task.</p>
    public let taskId: String?
    /// <p>The type of data repository task; EXPORT_TO_REPOSITORY is the only type currently supported.</p>
    public let type: DataRepositoryTaskType?

    public init (
        creationTime: Date? = nil,
        endTime: Date? = nil,
        failureDetails: DataRepositoryTaskFailureDetails? = nil,
        fileSystemId: String? = nil,
        lifecycle: DataRepositoryTaskLifecycle? = nil,
        paths: [String]? = nil,
        report: CompletionReport? = nil,
        resourceARN: String? = nil,
        startTime: Date? = nil,
        status: DataRepositoryTaskStatus? = nil,
        tags: [Tag]? = nil,
        taskId: String? = nil,
        type: DataRepositoryTaskType? = nil
    )
    {
        self.creationTime = creationTime
        self.endTime = endTime
        self.failureDetails = failureDetails
        self.fileSystemId = fileSystemId
        self.lifecycle = lifecycle
        self.paths = paths
        self.report = report
        self.resourceARN = resourceARN
        self.startTime = startTime
        self.status = status
        self.tags = tags
        self.taskId = taskId
        self.type = type
    }
}
