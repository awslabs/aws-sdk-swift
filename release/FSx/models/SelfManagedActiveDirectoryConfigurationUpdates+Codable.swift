// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SelfManagedActiveDirectoryConfigurationUpdates: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case dnsIps = "DnsIps"
        case password = "Password"
        case userName = "UserName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let dnsIps = dnsIps {
            var dnsIpsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .dnsIps)
            for dnsips0 in dnsIps {
                try dnsIpsContainer.encode(dnsips0)
            }
        }
        if let password = password {
            try encodeContainer.encode(password, forKey: .password)
        }
        if let userName = userName {
            try encodeContainer.encode(userName, forKey: .userName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userName)
        userName = userNameDecoded
        let passwordDecoded = try containerValues.decodeIfPresent(String.self, forKey: .password)
        password = passwordDecoded
        let dnsIpsContainer = try containerValues.decodeIfPresent([String].self, forKey: .dnsIps)
        var dnsIpsDecoded0:[String]? = nil
        if let dnsIpsContainer = dnsIpsContainer {
            dnsIpsDecoded0 = [String]()
            for string0 in dnsIpsContainer {
                dnsIpsDecoded0?.append(string0)
            }
        }
        dnsIps = dnsIpsDecoded0
    }
}
