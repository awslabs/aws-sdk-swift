// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ActiveDirectoryBackupAttributes: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case activeDirectoryId = "ActiveDirectoryId"
        case domainName = "DomainName"
        case resourceARN = "ResourceARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let activeDirectoryId = activeDirectoryId {
            try encodeContainer.encode(activeDirectoryId, forKey: .activeDirectoryId)
        }
        if let domainName = domainName {
            try encodeContainer.encode(domainName, forKey: .domainName)
        }
        if let resourceARN = resourceARN {
            try encodeContainer.encode(resourceARN, forKey: .resourceARN)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let activeDirectoryIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .activeDirectoryId)
        activeDirectoryId = activeDirectoryIdDecoded
        let resourceARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .resourceARN)
        resourceARN = resourceARNDecoded
    }
}
