// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The request object for the <code>CreateFileSystemFromBackup</code>
///             operation.</p>
public struct CreateFileSystemFromBackupInput: Equatable {
    /// <p>The ID of the source backup. Specifies the backup you are copying.</p>
    public let backupId: String?
    /// <p>A string of up to 64 ASCII characters that Amazon FSx uses to ensure
    ///             idempotent creation. This string is automatically filled on your behalf when you use the
    ///             AWS Command Line Interface (AWS CLI) or an AWS SDK.</p>
    public var clientRequestToken: String?
    /// <p>The ID of the AWS Key Management Service (AWS KMS) key used to encrypt the file system's data
    ///             for Amazon FSx for Windows File Server file systems and Amazon FSx for Lustre <code>PERSISTENT_1</code> file
    ///             systems at rest. In either case, if not specified, the Amazon FSx managed key
    ///             is used. The Amazon FSx for Lustre <code>SCRATCH_1</code> and <code>SCRATCH_2</code> file systems are always encrypted at rest using
    ///             Amazon FSx managed keys. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a>
    ///             in the <i>AWS Key Management Service API Reference</i>.</p>
    public let kmsKeyId: String?
    /// <p>The Lustre configuration for the file system being created.
    ///             </p>
    public let lustreConfiguration: CreateFileSystemLustreConfiguration?
    /// <p>A list of IDs for the security groups that apply to the specified network
    ///             interfaces created for file system access. These security groups apply to all network
    ///             interfaces. This value isn't returned in later DescribeFileSystem requests.</p>
    public let securityGroupIds: [String]?
    /// <p>Sets the storage type for the Windows file system you're creating from a backup.
    ///             Valid values are <code>SSD</code> and <code>HDD</code>.</p>
    ///         <ul>
    ///             <li>
    ///                <p>Set to <code>SSD</code> to use solid state drive storage.
    ///                 Supported on all Windows deployment types.</p>
    ///             </li>
    ///             <li>
    ///                <p>Set to <code>HDD</code> to use hard disk drive storage.
    ///                 Supported on <code>SINGLE_AZ_2</code> and <code>MULTI_AZ_1</code> Windows file system deployment types.
    ///                 </p>
    ///             </li>
    ///          </ul>
    ///         <p>
    ///             Default value is <code>SSD</code>.
    ///         </p>
    ///         <note>
    ///             <p>HDD and SSD storage types have different minimum storage capacity requirements.
    ///             A restored file system's storage capacity is tied to the file system that was backed up.
    ///             You can create a file system that uses HDD storage from a backup of a file system that
    ///             used SSD storage only if the original SSD file system had a storage capacity of at least 2000 GiB.
    ///         </p>
    ///          </note>
    public let storageType: StorageType?
    /// <p>Specifies the IDs of the subnets that the file system will be accessible from. For Windows <code>MULTI_AZ_1</code>
    ///             file system deployment types, provide exactly two subnet IDs, one for the preferred file server
    ///             and one for the standby file server. You specify one of these subnets as the preferred subnet
    ///             using the <code>WindowsConfiguration > PreferredSubnetID</code> property.</p>
    ///         <p>For Windows <code>SINGLE_AZ_1</code> and <code>SINGLE_AZ_2</code> deployment
    ///             types and Lustre file systems, provide exactly one subnet ID.
    ///             The file server is launched in that subnet's Availability Zone.</p>
    public let subnetIds: [String]?
    /// <p>The tags to be applied to the file system at file system creation. The key value of
    ///             the <code>Name</code> tag appears in the console as the file system
    ///             name.</p>
    public let tags: [Tag]?
    /// <p>The configuration for this Microsoft Windows file system.</p>
    public let windowsConfiguration: CreateFileSystemWindowsConfiguration?

    public init (
        backupId: String? = nil,
        clientRequestToken: String? = nil,
        kmsKeyId: String? = nil,
        lustreConfiguration: CreateFileSystemLustreConfiguration? = nil,
        securityGroupIds: [String]? = nil,
        storageType: StorageType? = nil,
        subnetIds: [String]? = nil,
        tags: [Tag]? = nil,
        windowsConfiguration: CreateFileSystemWindowsConfiguration? = nil
    )
    {
        self.backupId = backupId
        self.clientRequestToken = clientRequestToken
        self.kmsKeyId = kmsKeyId
        self.lustreConfiguration = lustreConfiguration
        self.securityGroupIds = securityGroupIds
        self.storageType = storageType
        self.subnetIds = subnetIds
        self.tags = tags
        self.windowsConfiguration = windowsConfiguration
    }
}
