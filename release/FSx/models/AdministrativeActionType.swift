// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes the type of administrative action, as follows:</p>
///         <ul>
///             <li>
///                 <p>
///                   <code>FILE_SYSTEM_UPDATE</code> - A file system update administrative action initiated by the user from the
///                     Amazon FSx console, API (UpdateFileSystem), or CLI (update-file-system).</p>
///             </li>
///             <li>
///                 <p>
///                   <code>STORAGE_OPTIMIZATION</code> - Once the <code>FILE_SYSTEM_UPDATE</code>
///                     task to increase a file system's storage capacity completes successfully, a
///                     <code>STORAGE_OPTIMIZATION</code> task starts.
///                     </p>
///                 <ul>
///                   <li>
///                      <p>For Windows, storage optimization is the process of migrating the file system data
///                         to the new, larger disks.</p>
///                   </li>
///                   <li>
///                      <p>For Lustre, storage optimization consists of rebalancing the data across the existing and
///                             newly added file servers.</p>
///                   </li>
///                </ul>
///                 <p>You can track the storage optimization progress using the
///                         <code>ProgressPercent</code> property. When
///                         <code>STORAGE_OPTIMIZATION</code> completes successfully, the parent
///                         <code>FILE_SYSTEM_UPDATE</code> action status changes to
///                         <code>COMPLETED</code>. For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/managing-storage-capacity.html">Managing
///                         storage capacity</a> in the <i>Amazon FSx for Windows File Server
///                         User Guide</i> and <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/managing-storage-capacity.html">Managing storage
///                         and throughput capacity</a> in the <i>Amazon FSx for Lustre User
///                         Guide</i>. </p>
///             </li>
///             <li>
///                <p>
///                   <code>FILE_SYSTEM_ALIAS_ASSOCIATION</code> - A file system update to associate a new DNS alias with the file system.
///                 For more information, see
///                 .</p>
///             </li>
///             <li>
///                <p>
///                   <code>FILE_SYSTEM_ALIAS_DISASSOCIATION</code> - A file system update to disassociate a DNS alias from the file system.
///                 For more information, see .</p>
///             </li>
///          </ul>
public enum AdministrativeActionType {
    case fileSystemAliasAssociation
    case fileSystemAliasDisassociation
    case fileSystemUpdate
    case storageOptimization
    case sdkUnknown(String)
}

extension AdministrativeActionType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [AdministrativeActionType] {
        return [
            .fileSystemAliasAssociation,
            .fileSystemAliasDisassociation,
            .fileSystemUpdate,
            .storageOptimization,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .fileSystemAliasAssociation: return "FILE_SYSTEM_ALIAS_ASSOCIATION"
        case .fileSystemAliasDisassociation: return "FILE_SYSTEM_ALIAS_DISASSOCIATION"
        case .fileSystemUpdate: return "FILE_SYSTEM_UPDATE"
        case .storageOptimization: return "STORAGE_OPTIMIZATION"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = AdministrativeActionType(rawValue: rawValue) ?? AdministrativeActionType.sdkUnknown(rawValue)
    }
}
