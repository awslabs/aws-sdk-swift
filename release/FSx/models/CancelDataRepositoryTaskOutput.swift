// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CancelDataRepositoryTaskOutput: Equatable {
    /// <p>The lifecycle status of the data repository task, as follows:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>PENDING</code> - Amazon FSx has not started the task.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>EXECUTING</code> - Amazon FSx is processing the task.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>FAILED</code> -  Amazon FSx was not able to complete the task. For example, there may be files the task failed to process.
    ///                 The <a>DataRepositoryTaskFailureDetails</a> property provides more information about task failures.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>SUCCEEDED</code> - FSx completed the task successfully.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CANCELED</code> - Amazon FSx canceled the task and it did not complete.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>CANCELING</code> - FSx is in process of canceling the task.</p>
    ///             </li>
    ///          </ul>
    public let lifecycle: DataRepositoryTaskLifecycle?
    /// <p>The ID of the task being canceled.</p>
    public let taskId: String?

    public init (
        lifecycle: DataRepositoryTaskLifecycle? = nil,
        taskId: String? = nil
    )
    {
        self.lifecycle = lifecycle
        self.taskId = taskId
    }
}
