// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides the task status showing a running total of the total number of files to be processed,
///             the number successfully processed, and the number of files the task failed to process.</p>
public struct DataRepositoryTaskStatus: Equatable {
    /// <p>A running total of the number of files that the task failed to process.</p>
    public let failedCount: Int?
    /// <p>The time at which the task status was last updated.</p>
    public let lastUpdatedTime: Date?
    /// <p>A running total of the number of files that the task has successfully processed.</p>
    public let succeededCount: Int?
    /// <p>The total number of files that the task will process. While a task is executing, the sum of
    ///             <code>SucceededCount</code> plus <code>FailedCount</code> may not equal <code>TotalCount</code>. When the task is complete,
    ///             <code>TotalCount</code> equals the sum of <code>SucceededCount</code> plus <code>FailedCount</code>.</p>
    public let totalCount: Int?

    public init (
        failedCount: Int? = nil,
        lastUpdatedTime: Date? = nil,
        succeededCount: Int? = nil,
        totalCount: Int? = nil
    )
    {
        self.failedCount = failedCount
        self.lastUpdatedTime = lastUpdatedTime
        self.succeededCount = succeededCount
        self.totalCount = totalCount
    }
}
