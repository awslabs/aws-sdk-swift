// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The Lustre configuration for the file system being created.
///             </p>
public struct CreateFileSystemLustreConfiguration: Equatable {
    /// <p> (Optional) When you create your file system, your existing S3 objects appear as file and directory listings.
    ///             Use this property to choose how Amazon FSx keeps your file and directory listings up to date
    ///             as you add or modify objects in your linked S3 bucket. <code>AutoImportPolicy</code> can
    ///             have the following values:</p>
    ///
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>NONE</code> - (Default) AutoImport is off. Amazon FSx only updates
    ///                 file and directory listings from the linked S3 bucket
    ///                 when the file system is created. FSx does not update file and directory
    ///                 listings for any new or changed objects after choosing this option.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NEW</code> - AutoImport is on. Amazon FSx automatically imports
    ///                 directory listings of any new objects added to the linked S3 bucket that
    ///                 do not currently exist in the FSx file system. </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>NEW_CHANGED</code> - AutoImport is on. Amazon FSx automatically imports
    ///                 file and directory listings of any new objects added to the S3 bucket and any
    ///                 existing objects that are changed in the S3 bucket after you choose this option.
    ///             </p>
    ///             </li>
    ///          </ul>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/autoimport-data-repo.html">Automatically import updates from your S3 bucket</a>.</p>
    public let autoImportPolicy: AutoImportPolicyType?
    /// <p>The number of days to retain automatic backups. Setting this to 0 disables
    ///             automatic backups. You can retain automatic backups for a maximum of 90 days. The default is 0.</p>
    public let automaticBackupRetentionDays: Int?
    /// <p>(Optional) Not available to use with file systems that are linked to a data repository.
    ///             A boolean flag indicating whether tags for the file system should be copied to
    ///             backups. The default value is false. If it's set to true, all file system
    ///             tags are copied to all automatic and user-initiated backups when the user
    ///             doesn't specify any backup-specific tags. If this value is true, and you specify one or more backup tags, only
    ///             the specified tags are copied to backups. If you specify one or more tags when creating a
    ///             user-initiated backup, no tags are copied from the file system, regardless of this value.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/using-backups-fsx.html">Working with backups</a>.</p>
    public let copyTagsToBackups: Bool?
    /// <p>A recurring daily time, in the format <code>HH:MM</code>. <code>HH</code> is the
    ///             zero-padded hour of the day (0-23), and <code>MM</code> is the zero-padded minute of the
    ///             hour. For example, <code>05:00</code> specifies 5 AM daily. </p>
    public let dailyAutomaticBackupStartTime: String?
    /// <p>Sets the data compression configuration for the file system. <code>DataCompressionType</code>
    ///             can have the following values:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>NONE</code> - (Default) Data compression is turned off when
    ///                 the file system is created.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>LZ4</code> - Data compression is turned on with the LZ4
    ///                 algorithm.</p>
    ///             </li>
    ///          </ul>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/data-compression.html">Lustre data compression</a>.</p>
    public let dataCompressionType: DataCompressionType?
    /// <p>
    ///             Choose <code>SCRATCH_1</code> and <code>SCRATCH_2</code> deployment
    ///             types when you need temporary storage and shorter-term processing of data.
    ///             The <code>SCRATCH_2</code> deployment type provides in-transit encryption of data and higher burst
    ///             throughput capacity than <code>SCRATCH_1</code>.</p>
    ///
    ///             <p>Choose <code>PERSISTENT_1</code> deployment type for longer-term storage
    ///                 and workloads and encryption of data in transit. To learn more about deployment types, see
    ///                 <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/lustre-deployment-types.html">
    ///                     FSx for Lustre Deployment Options</a>.</p>
    ///             <p>Encryption of data in-transit is automatically
    ///             enabled when you access a <code>SCRATCH_2</code> or <code>PERSISTENT_1</code>
    ///             file system from Amazon EC2 instances that <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/data-                 protection.html">support this feature</a>.
    ///             (Default = <code>SCRATCH_1</code>)
    ///         </p>
    ///             <p>Encryption of data in-transit for <code>SCRATCH_2</code> and <code>PERSISTENT_1</code>
    ///                 deployment types is supported when accessed from supported instance types in supported AWS Regions. To learn more,
    ///                 <a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/encryption-in-transit-fsxl.html">Encrypting Data in Transit</a>.</p>
    public let deploymentType: LustreDeploymentType?
    /// <p>The type of drive cache used by PERSISTENT_1 file systems that are provisioned with
    ///             HDD storage devices. This parameter is required when storage type is HDD. Set to
    ///             <code>READ</code>, improve the performance for frequently accessed files and allows 20%
    ///             of the total storage capacity of the file system to be cached. </p>
    ///         <p>This parameter is required when <code>StorageType</code> is set to HDD.</p>
    public let driveCacheType: DriveCacheType?
    /// <p>(Optional) The path in Amazon S3 where the root of your Amazon FSx file system is exported.
    ///             The path must use the same Amazon S3 bucket as specified in ImportPath. You can provide an optional prefix to which
    ///             new and changed data is to be exported from your Amazon FSx for Lustre file system. If
    ///             an <code>ExportPath</code> value is not provided, Amazon FSx sets a default export path,
    ///             <code>s3://import-bucket/FSxLustre[creation-timestamp]</code>. The timestamp is in
    ///             UTC format, for example
    ///             <code>s3://import-bucket/FSxLustre20181105T222312Z</code>.</p>
    ///
    ///         <p>The Amazon S3 export bucket must be the same as the import bucket specified by
    ///             <code>ImportPath</code>. If you only specify a bucket name, such as
    ///             <code>s3://import-bucket</code>, you get a 1:1 mapping of file system objects to S3
    ///             bucket objects. This mapping means that the input data in S3 is overwritten on export.
    ///             If you provide a custom prefix in the export path, such as
    ///             <code>s3://import-bucket/[custom-optional-prefix]</code>, Amazon FSx exports the contents of your file
    ///             system to that export prefix in the Amazon S3 bucket.</p>
    public let exportPath: String?
    /// <p>(Optional) The path to the Amazon S3 bucket (including the optional prefix) that
    ///             you're using as the data repository for your Amazon FSx for Lustre file system.
    ///             The root of your FSx for Lustre file system will
    ///             be mapped to the root of the Amazon S3 bucket you select. An
    ///             example is <code>s3://import-bucket/optional-prefix</code>. If you specify a prefix
    ///             after the Amazon S3 bucket name, only object keys with that prefix are loaded into the
    ///             file system.</p>
    public let importPath: String?
    /// <p>(Optional) For files imported from a data repository, this value determines the stripe
    ///             count and maximum amount of data per file (in MiB) stored on a single physical disk. The
    ///             maximum number of disks that a single file can be striped across is limited by the total
    ///             number of disks that make up the file system.</p>
    ///
    ///         <p>The default chunk size is 1,024 MiB (1 GiB) and can go as high as 512,000 MiB (500
    ///             GiB). Amazon S3 objects have a maximum size of 5 TB.</p>
    public let importedFileChunkSize: Int?
    /// <p>
    ///             Required for the <code>PERSISTENT_1</code> deployment type, describes the amount of read and write
    ///             throughput for each 1 tebibyte of storage, in MB/s/TiB.
    ///             File system throughput capacity is calculated by multiplying ﬁle system storage capacity (TiB) by the PerUnitStorageThroughput
    ///             (MB/s/TiB). For a 2.4 TiB ﬁle system, provisioning 50 MB/s/TiB of PerUnitStorageThroughput
    ///             yields 120 MB/s of ﬁle system throughput. You pay for the amount of throughput that you
    ///             provision.
    ///         </p>
    ///         <p>Valid values for  SSD storage: 50, 100, 200. Valid values for  HDD storage: 12, 40.</p>
    public let perUnitStorageThroughput: Int?
    /// <p>(Optional) The preferred start time to perform weekly maintenance, formatted d:HH:MM in the UTC
    ///             time zone, where d is the weekday number, from 1 through 7, beginning with Monday and ending with Sunday.</p>
    public let weeklyMaintenanceStartTime: String?

    public init (
        autoImportPolicy: AutoImportPolicyType? = nil,
        automaticBackupRetentionDays: Int? = nil,
        copyTagsToBackups: Bool? = nil,
        dailyAutomaticBackupStartTime: String? = nil,
        dataCompressionType: DataCompressionType? = nil,
        deploymentType: LustreDeploymentType? = nil,
        driveCacheType: DriveCacheType? = nil,
        exportPath: String? = nil,
        importPath: String? = nil,
        importedFileChunkSize: Int? = nil,
        perUnitStorageThroughput: Int? = nil,
        weeklyMaintenanceStartTime: String? = nil
    )
    {
        self.autoImportPolicy = autoImportPolicy
        self.automaticBackupRetentionDays = automaticBackupRetentionDays
        self.copyTagsToBackups = copyTagsToBackups
        self.dailyAutomaticBackupStartTime = dailyAutomaticBackupStartTime
        self.dataCompressionType = dataCompressionType
        self.deploymentType = deploymentType
        self.driveCacheType = driveCacheType
        self.exportPath = exportPath
        self.importPath = importPath
        self.importedFileChunkSize = importedFileChunkSize
        self.perUnitStorageThroughput = perUnitStorageThroughput
        self.weeklyMaintenanceStartTime = weeklyMaintenanceStartTime
    }
}
