// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension InputIdentifier: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case iotEventsInputIdentifier
        case iotSiteWiseInputIdentifier
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let iotEventsInputIdentifier = iotEventsInputIdentifier {
            try encodeContainer.encode(iotEventsInputIdentifier, forKey: .iotEventsInputIdentifier)
        }
        if let iotSiteWiseInputIdentifier = iotSiteWiseInputIdentifier {
            try encodeContainer.encode(iotSiteWiseInputIdentifier, forKey: .iotSiteWiseInputIdentifier)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let iotEventsInputIdentifierDecoded = try containerValues.decodeIfPresent(IotEventsInputIdentifier.self, forKey: .iotEventsInputIdentifier)
        iotEventsInputIdentifier = iotEventsInputIdentifierDecoded
        let iotSiteWiseInputIdentifierDecoded = try containerValues.decodeIfPresent(IotSiteWiseInputIdentifier.self, forKey: .iotSiteWiseInputIdentifier)
        iotSiteWiseInputIdentifier = iotSiteWiseInputIdentifierDecoded
    }
}
