// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmModelVersionsOutputBody: Equatable {
    public let alarmModelVersionSummaries: [AlarmModelVersionSummary]?
    public let nextToken: String?
}

extension ListAlarmModelVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarmModelVersionSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmModelVersionSummariesContainer = try containerValues.decodeIfPresent([AlarmModelVersionSummary].self, forKey: .alarmModelVersionSummaries)
        var alarmModelVersionSummariesDecoded0:[AlarmModelVersionSummary]? = nil
        if let alarmModelVersionSummariesContainer = alarmModelVersionSummariesContainer {
            alarmModelVersionSummariesDecoded0 = [AlarmModelVersionSummary]()
            for structure0 in alarmModelVersionSummariesContainer {
                alarmModelVersionSummariesDecoded0?.append(structure0)
            }
        }
        alarmModelVersionSummaries = alarmModelVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
