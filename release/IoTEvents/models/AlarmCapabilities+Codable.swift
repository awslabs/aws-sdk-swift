// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AlarmCapabilities: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case acknowledgeFlow
        case initializationConfiguration
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let acknowledgeFlow = acknowledgeFlow {
            try encodeContainer.encode(acknowledgeFlow, forKey: .acknowledgeFlow)
        }
        if let initializationConfiguration = initializationConfiguration {
            try encodeContainer.encode(initializationConfiguration, forKey: .initializationConfiguration)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let initializationConfigurationDecoded = try containerValues.decodeIfPresent(InitializationConfiguration.self, forKey: .initializationConfiguration)
        initializationConfiguration = initializationConfigurationDecoded
        let acknowledgeFlowDecoded = try containerValues.decodeIfPresent(AcknowledgeFlow.self, forKey: .acknowledgeFlow)
        acknowledgeFlow = acknowledgeFlowDecoded
    }
}
