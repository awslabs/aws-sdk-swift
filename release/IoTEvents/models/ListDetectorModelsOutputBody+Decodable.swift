// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorModelsOutputBody: Equatable {
    public let detectorModelSummaries: [DetectorModelSummary]?
    public let nextToken: String?
}

extension ListDetectorModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case detectorModelSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorModelSummariesContainer = try containerValues.decodeIfPresent([DetectorModelSummary].self, forKey: .detectorModelSummaries)
        var detectorModelSummariesDecoded0:[DetectorModelSummary]? = nil
        if let detectorModelSummariesContainer = detectorModelSummariesContainer {
            detectorModelSummariesDecoded0 = [DetectorModelSummary]()
            for structure0 in detectorModelSummariesContainer {
                detectorModelSummariesDecoded0?.append(structure0)
            }
        }
        detectorModelSummaries = detectorModelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
