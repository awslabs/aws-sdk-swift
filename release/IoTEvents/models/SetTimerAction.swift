// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Information needed to set the timer.</p>
public struct SetTimerAction: Equatable {
    /// <p>The duration of the timer, in seconds. You can use a string expression that includes
    ///       numbers, variables (<code>$variable.<variable-name></code>), and input values
    ///         (<code>$input.<input-name>.<path-to-datum></code>) as the duration. The range of
    ///       the duration is 1-31622400 seconds. To ensure accuracy, the minimum duration is 60 seconds.
    ///       The evaluated result of the duration is rounded down to the nearest whole number. </p>
    public let durationExpression: String?
    /// <p>The number of seconds until the timer expires. The minimum value is 60 seconds to ensure
    ///       accuracy. The maximum value is 31622400 seconds. </p>
    @available(*, deprecated, message: "seconds is deprecated. You can use durationExpression for SetTimerAction. The value of seconds can be used as a string expression for durationExpression.")
    public let seconds: Int?
    /// <p>The name of the timer.</p>
    public let timerName: String?

    public init (
        durationExpression: String? = nil,
        seconds: Int? = nil,
        timerName: String? = nil
    )
    {
        self.durationExpression = durationExpression
        self.seconds = seconds
        self.timerName = timerName
    }
}
