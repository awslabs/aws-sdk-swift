// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension DetectorModel: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case detectorModelConfiguration
        case detectorModelDefinition
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let detectorModelConfiguration = detectorModelConfiguration {
            try encodeContainer.encode(detectorModelConfiguration, forKey: .detectorModelConfiguration)
        }
        if let detectorModelDefinition = detectorModelDefinition {
            try encodeContainer.encode(detectorModelDefinition, forKey: .detectorModelDefinition)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorModelDefinitionDecoded = try containerValues.decodeIfPresent(DetectorModelDefinition.self, forKey: .detectorModelDefinition)
        detectorModelDefinition = detectorModelDefinitionDecoded
        let detectorModelConfigurationDecoded = try containerValues.decodeIfPresent(DetectorModelConfiguration.self, forKey: .detectorModelConfiguration)
        detectorModelConfiguration = detectorModelConfigurationDecoded
    }
}
