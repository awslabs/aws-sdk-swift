// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SMSConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case additionalMessage
        case recipients
        case senderId
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let additionalMessage = additionalMessage {
            try encodeContainer.encode(additionalMessage, forKey: .additionalMessage)
        }
        if let recipients = recipients {
            var recipientsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .recipients)
            for recipientdetails0 in recipients {
                try recipientsContainer.encode(recipientdetails0)
            }
        }
        if let senderId = senderId {
            try encodeContainer.encode(senderId, forKey: .senderId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let senderIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .senderId)
        senderId = senderIdDecoded
        let additionalMessageDecoded = try containerValues.decodeIfPresent(String.self, forKey: .additionalMessage)
        additionalMessage = additionalMessageDecoded
        let recipientsContainer = try containerValues.decodeIfPresent([RecipientDetail].self, forKey: .recipients)
        var recipientsDecoded0:[RecipientDetail]? = nil
        if let recipientsContainer = recipientsContainer {
            recipientsDecoded0 = [RecipientDetail]()
            for structure0 in recipientsContainer {
                recipientsDecoded0?.append(structure0)
            }
        }
        recipients = recipientsDecoded0
    }
}
