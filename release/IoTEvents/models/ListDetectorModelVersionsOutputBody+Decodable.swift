// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListDetectorModelVersionsOutputBody: Equatable {
    public let detectorModelVersionSummaries: [DetectorModelVersionSummary]?
    public let nextToken: String?
}

extension ListDetectorModelVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case detectorModelVersionSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let detectorModelVersionSummariesContainer = try containerValues.decodeIfPresent([DetectorModelVersionSummary].self, forKey: .detectorModelVersionSummaries)
        var detectorModelVersionSummariesDecoded0:[DetectorModelVersionSummary]? = nil
        if let detectorModelVersionSummariesContainer = detectorModelVersionSummariesContainer {
            detectorModelVersionSummariesDecoded0 = [DetectorModelVersionSummary]()
            for structure0 in detectorModelVersionSummariesContainer {
                detectorModelVersionSummariesDecoded0?.append(structure0)
            }
        }
        detectorModelVersionSummaries = detectorModelVersionSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
