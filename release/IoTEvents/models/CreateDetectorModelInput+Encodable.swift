// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDetectorModelInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case detectorModelDefinition
        case detectorModelDescription
        case detectorModelName
        case evaluationMethod
        case key
        case roleArn
        case tags
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let detectorModelDefinition = detectorModelDefinition {
            try encodeContainer.encode(detectorModelDefinition, forKey: .detectorModelDefinition)
        }
        if let detectorModelDescription = detectorModelDescription {
            try encodeContainer.encode(detectorModelDescription, forKey: .detectorModelDescription)
        }
        if let detectorModelName = detectorModelName {
            try encodeContainer.encode(detectorModelName, forKey: .detectorModelName)
        }
        if let evaluationMethod = evaluationMethod {
            try encodeContainer.encode(evaluationMethod.rawValue, forKey: .evaluationMethod)
        }
        if let key = key {
            try encodeContainer.encode(key, forKey: .key)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
    }
}
