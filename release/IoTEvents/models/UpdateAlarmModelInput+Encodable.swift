// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateAlarmModelInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case alarmCapabilities
        case alarmEventActions
        case alarmModelDescription
        case alarmNotification
        case alarmRule
        case roleArn
        case severity
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let alarmCapabilities = alarmCapabilities {
            try encodeContainer.encode(alarmCapabilities, forKey: .alarmCapabilities)
        }
        if let alarmEventActions = alarmEventActions {
            try encodeContainer.encode(alarmEventActions, forKey: .alarmEventActions)
        }
        if let alarmModelDescription = alarmModelDescription {
            try encodeContainer.encode(alarmModelDescription, forKey: .alarmModelDescription)
        }
        if let alarmNotification = alarmNotification {
            try encodeContainer.encode(alarmNotification, forKey: .alarmNotification)
        }
        if let alarmRule = alarmRule {
            try encodeContainer.encode(alarmRule, forKey: .alarmRule)
        }
        if let roleArn = roleArn {
            try encodeContainer.encode(roleArn, forKey: .roleArn)
        }
        if let severity = severity {
            try encodeContainer.encode(severity, forKey: .severity)
        }
    }
}
