// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>An action to be performed when the <code>condition</code> is TRUE.</p>
public struct Action: Equatable {
    /// <p>Information needed to clear the timer.</p>
    public let clearTimer: ClearTimerAction?
    /// <p>Writes to the DynamoDB table that you created. The default action payload contains all
    ///       attribute-value pairs that have the information about the detector model instance and the
    ///       event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. One column of the
    ///       DynamoDB table receives all attribute-value pairs in the payload that you specify. For more
    ///       information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html">Actions</a> in
    ///         <i>AWS IoT Events Developer Guide</i>.</p>
    public let dynamoDB: DynamoDBAction?
    /// <p>Writes to the DynamoDB table that you created. The default action payload contains all
    ///       attribute-value pairs that have the information about the detector model instance and the
    ///       event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. A separate column of
    ///       the DynamoDB table receives one attribute-value pair in the payload that you specify. For more
    ///       information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html">Actions</a> in
    ///         <i>AWS IoT Events Developer Guide</i>.</p>
    public let dynamoDBv2: DynamoDBv2Action?
    /// <p>Sends information about the detector model instance and the event that triggered the
    ///       action to an Amazon Kinesis Data Firehose delivery stream.</p>
    public let firehose: FirehoseAction?
    /// <p>Sends AWS IoT Events input, which passes information about the detector model instance and the
    ///       event that triggered the action.</p>
    public let iotEvents: IotEventsAction?
    /// <p>Sends information about the detector model instance and the event that triggered the
    ///       action to an asset property in AWS IoT SiteWise .</p>
    public let iotSiteWise: IotSiteWiseAction?
    /// <p>Publishes an MQTT message with the given topic to the AWS IoT message broker.</p>
    public let iotTopicPublish: IotTopicPublishAction?
    /// <p>Calls a Lambda function, passing in information about the detector model instance and the
    ///       event that triggered the action.</p>
    public let lambda: LambdaAction?
    /// <p>Information needed to reset the timer.</p>
    public let resetTimer: ResetTimerAction?
    /// <p>Information needed to set the timer.</p>
    public let setTimer: SetTimerAction?
    /// <p>Sets a variable to a specified value.</p>
    public let setVariable: SetVariableAction?
    /// <p>Sends an Amazon SNS message.</p>
    public let sns: SNSTopicPublishAction?
    /// <p>Sends information about the detector model instance and the event that triggered the
    ///       action to an Amazon SQS queue.</p>
    public let sqs: SqsAction?

    public init (
        clearTimer: ClearTimerAction? = nil,
        dynamoDB: DynamoDBAction? = nil,
        dynamoDBv2: DynamoDBv2Action? = nil,
        firehose: FirehoseAction? = nil,
        iotEvents: IotEventsAction? = nil,
        iotSiteWise: IotSiteWiseAction? = nil,
        iotTopicPublish: IotTopicPublishAction? = nil,
        lambda: LambdaAction? = nil,
        resetTimer: ResetTimerAction? = nil,
        setTimer: SetTimerAction? = nil,
        setVariable: SetVariableAction? = nil,
        sns: SNSTopicPublishAction? = nil,
        sqs: SqsAction? = nil
    )
    {
        self.clearTimer = clearTimer
        self.dynamoDB = dynamoDB
        self.dynamoDBv2 = dynamoDBv2
        self.firehose = firehose
        self.iotEvents = iotEvents
        self.iotSiteWise = iotSiteWise
        self.iotTopicPublish = iotTopicPublish
        self.lambda = lambda
        self.resetTimer = resetTimer
        self.setTimer = setTimer
        self.setVariable = setVariable
        self.sns = sns
        self.sqs = sqs
    }
}
