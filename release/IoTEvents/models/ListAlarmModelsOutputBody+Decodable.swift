// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListAlarmModelsOutputBody: Equatable {
    public let alarmModelSummaries: [AlarmModelSummary]?
    public let nextToken: String?
}

extension ListAlarmModelsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarmModelSummaries
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let alarmModelSummariesContainer = try containerValues.decodeIfPresent([AlarmModelSummary].self, forKey: .alarmModelSummaries)
        var alarmModelSummariesDecoded0:[AlarmModelSummary]? = nil
        if let alarmModelSummariesContainer = alarmModelSummariesContainer {
            alarmModelSummariesDecoded0 = [AlarmModelSummary]()
            for structure0 in alarmModelSummariesContainer {
                alarmModelSummariesDecoded0?.append(structure0)
            }
        }
        alarmModelSummaries = alarmModelSummariesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
