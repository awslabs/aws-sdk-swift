// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListInputRoutingsOutputBody: Equatable {
    public let routedResources: [RoutedResource]?
    public let nextToken: String?
}

extension ListInputRoutingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken
        case routedResources
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let routedResourcesContainer = try containerValues.decodeIfPresent([RoutedResource].self, forKey: .routedResources)
        var routedResourcesDecoded0:[RoutedResource]? = nil
        if let routedResourcesContainer = routedResourcesContainer {
            routedResourcesDecoded0 = [RoutedResource]()
            for structure0 in routedResourcesContainer {
                routedResourcesDecoded0?.append(structure0)
            }
        }
        routedResources = routedResourcesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
