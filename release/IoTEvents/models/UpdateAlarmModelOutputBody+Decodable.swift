// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateAlarmModelOutputBody: Equatable {
    public let creationTime: Date?
    public let alarmModelArn: String?
    public let alarmModelVersion: String?
    public let lastUpdateTime: Date?
    public let status: AlarmModelVersionStatus?
}

extension UpdateAlarmModelOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case alarmModelArn
        case alarmModelVersion
        case creationTime
        case lastUpdateTime
        case status
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let creationTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .creationTime)
        creationTime = creationTimeDecoded
        let alarmModelArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .alarmModelArn)
        alarmModelArn = alarmModelArnDecoded
        let alarmModelVersionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .alarmModelVersion)
        alarmModelVersion = alarmModelVersionDecoded
        let lastUpdateTimeDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .lastUpdateTime)
        lastUpdateTime = lastUpdateTimeDecoded
        let statusDecoded = try containerValues.decodeIfPresent(AlarmModelVersionStatus.self, forKey: .status)
        status = statusDecoded
    }
}
