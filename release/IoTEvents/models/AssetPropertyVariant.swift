// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A structure that contains an asset property value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html">Variant</a>
///       in the <i>AWS IoT SiteWise API Reference</i>.</p>
///          <p>You must use expressions for all parameters in <code>AssetPropertyVariant</code>. The
///       expressions accept literals, operators, functions, references, and substitution
///       templates.</p>
///          <p class="title">
///             <b>Examples</b>
///          </p>
///          <ul>
///             <li>
///                <p>For literal values, the expressions must contain single quotes. For example, the value
///           for the <code>integerValue</code> parameter can be <code>'100'</code>.</p>
///             </li>
///             <li>
///                <p>For references, you must specify either variables or parameters. For example, the
///           value for the <code>booleanValue</code> parameter can be
///           <code>$variable.offline</code>.</p>
///             </li>
///             <li>
///                <p>For a substitution template, you must use <code>${}</code>, and the template must be
///           in single quotes. A substitution template can also contain a combination of literals,
///           operators, functions, references, and substitution templates. </p>
///                <p>In the following example, the value for the <code>doubleValue</code> parameter uses a
///           substitution template. </p>
///                <p>
///                   <code>'${$input.TemperatureInput.sensorData.temperature * 6 / 5 + 32}'</code>
///                </p>
///             </li>
///          </ul>
///          <p>For more information,
///         see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a>
///         in the <i>AWS IoT Events Developer Guide</i>.</p>
///          <p>You must specify one of the following value types, depending on the <code>dataType</code>
///       of the specified asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetProperty.html">AssetProperty</a> in the
///         <i>AWS IoT SiteWise API Reference</i>.</p>
public struct AssetPropertyVariant: Equatable {
    /// <p>The asset property value is a Boolean value that must be <code>'TRUE'</code> or
    ///         <code>'FALSE'</code>. You must use an expression, and the evaluated result should be a
    ///       Boolean value.</p>
    public let booleanValue: String?
    /// <p>The asset property value is a double. You must use an expression, and the evaluated result
    ///       should be a double.</p>
    public let doubleValue: String?
    /// <p>The asset property value is an integer. You must use an expression, and the evaluated
    ///       result should be an integer.</p>
    public let integerValue: String?
    /// <p>The asset property value is a string. You must use an expression, and the evaluated result
    ///       should be a string.</p>
    public let stringValue: String?

    public init (
        booleanValue: String? = nil,
        doubleValue: String? = nil,
        integerValue: String? = nil,
        stringValue: String? = nil
    )
    {
        self.booleanValue = booleanValue
        self.doubleValue = doubleValue
        self.integerValue = integerValue
        self.stringValue = stringValue
    }
}
