// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateCachediSCSIVolumeInput: Equatable {
    /// <p>A unique identifier that you use to retry a request. If you retry a request, use the
    ///          same <code>ClientToken</code> you specified in the initial request.</p>
    public let clientToken: String?
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a>
    ///          operation to return a list of gateways for your account and AWS Region.</p>
    public let gatewayARN: String?
    /// <p>Set to <code>true</code> to use Amazon S3 server-side encryption with your own AWS KMS
    ///          key, or <code>false</code> to use a key managed by Amazon S3. Optional.</p>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let kMSEncrypted: Bool?
    /// <p>The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon
    ///          S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can
    ///          only be set when <code>KMSEncrypted</code> is <code>true</code>. Optional.</p>
    public let kMSKey: String?
    /// <p>The network interface of the gateway on which to expose the iSCSI target. Only IPv4
    ///          addresses are accepted. Use <a>DescribeGatewayInformation</a> to get a list of
    ///          the network interfaces available on a gateway.</p>
    ///
    ///          <p>Valid Values: A valid IP address.</p>
    public let networkInterfaceId: String?
    /// <p>The snapshot ID (e.g. "snap-1122aabb") of the snapshot to restore as the new cached
    ///          volume. Specify this field if you want to create the iSCSI storage volume from a snapshot;
    ///          otherwise, do not include this field. To list snapshots for your account use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html">DescribeSnapshots</a> in the <i>Amazon Elastic Compute Cloud API
    ///             Reference</i>.</p>
    public let snapshotId: String?
    /// <p>The ARN for an existing volume. Specifying this ARN makes the new volume into an exact
    ///          copy of the specified existing volume's latest recovery point. The
    ///             <code>VolumeSizeInBytes</code> value for this new volume must be equal to or larger than
    ///          the size of the existing volume, in bytes.</p>
    public let sourceVolumeARN: String?
    /// <p>A list of up to 50 tags that you can assign to a cached volume. Each tag is a key-value
    ///          pair.</p>
    ///
    ///          <note>
    ///             <p>Valid characters for key and value are letters, spaces, and numbers that you can
    ///             represent in UTF-8 format, and the following special characters: + - = . _ : / @. The
    ///             maximum length of a tag's key is 128 characters, and the maximum length for a
    ///             tag's value is 256 characters.</p>
    ///          </note>
    public let tags: [Tag]?
    /// <p>The name of the iSCSI target used by an initiator to connect to a volume and used as a
    ///          suffix for the target ARN. For example, specifying <code>TargetName</code> as
    ///             <i>myvolume</i> results in the target ARN of
    ///             <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/target/iqn.1997-05.com.amazon:myvolume</code>.
    ///          The target name must be unique across all volumes on a gateway.</p>
    ///
    ///          <p>If you don't specify a value, Storage Gateway uses the value that was previously
    ///          used for this volume as the new target name.</p>
    public let targetName: String?
    /// <p>The size of the volume in bytes.</p>
    public let volumeSizeInBytes: Int

    public init (
        clientToken: String? = nil,
        gatewayARN: String? = nil,
        kMSEncrypted: Bool? = nil,
        kMSKey: String? = nil,
        networkInterfaceId: String? = nil,
        snapshotId: String? = nil,
        sourceVolumeARN: String? = nil,
        tags: [Tag]? = nil,
        targetName: String? = nil,
        volumeSizeInBytes: Int = 0
    )
    {
        self.clientToken = clientToken
        self.gatewayARN = gatewayARN
        self.kMSEncrypted = kMSEncrypted
        self.kMSKey = kMSKey
        self.networkInterfaceId = networkInterfaceId
        self.snapshotId = snapshotId
        self.sourceVolumeARN = sourceVolumeARN
        self.tags = tags
        self.targetName = targetName
        self.volumeSizeInBytes = volumeSizeInBytes
    }
}
