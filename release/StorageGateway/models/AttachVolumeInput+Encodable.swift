// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AttachVolumeInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case diskId = "DiskId"
        case gatewayARN = "GatewayARN"
        case networkInterfaceId = "NetworkInterfaceId"
        case targetName = "TargetName"
        case volumeARN = "VolumeARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let diskId = diskId {
            try encodeContainer.encode(diskId, forKey: .diskId)
        }
        if let gatewayARN = gatewayARN {
            try encodeContainer.encode(gatewayARN, forKey: .gatewayARN)
        }
        if let networkInterfaceId = networkInterfaceId {
            try encodeContainer.encode(networkInterfaceId, forKey: .networkInterfaceId)
        }
        if let targetName = targetName {
            try encodeContainer.encode(targetName, forKey: .targetName)
        }
        if let volumeARN = volumeARN {
            try encodeContainer.encode(volumeARN, forKey: .volumeARN)
        }
    }
}
