// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct RefreshCacheInputBody: Equatable {
    public let fileShareARN: String?
    public let folderList: [String]?
    public let recursive: Bool?
}

extension RefreshCacheInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fileShareARN = "FileShareARN"
        case folderList = "FolderList"
        case recursive = "Recursive"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let fileShareARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fileShareARN)
        fileShareARN = fileShareARNDecoded
        let folderListContainer = try containerValues.decodeIfPresent([String].self, forKey: .folderList)
        var folderListDecoded0:[String]? = nil
        if let folderListContainer = folderListContainer {
            folderListDecoded0 = [String]()
            for string0 in folderListContainer {
                folderListDecoded0?.append(string0)
            }
        }
        folderList = folderListDecoded0
        let recursiveDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .recursive)
        recursive = recursiveDecoded
    }
}
