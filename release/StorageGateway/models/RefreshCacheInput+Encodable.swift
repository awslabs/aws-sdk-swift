// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RefreshCacheInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case fileShareARN = "FileShareARN"
        case folderList = "FolderList"
        case recursive = "Recursive"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let fileShareARN = fileShareARN {
            try encodeContainer.encode(fileShareARN, forKey: .fileShareARN)
        }
        if let folderList = folderList {
            var folderListContainer = encodeContainer.nestedUnkeyedContainer(forKey: .folderList)
            for folderlist0 in folderList {
                try folderListContainer.encode(folderlist0)
            }
        }
        if let recursive = recursive {
            try encodeContainer.encode(recursive, forKey: .recursive)
        }
    }
}
