// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeSMBSettingsOutputBody: Equatable {
    public let gatewayARN: String?
    public let domainName: String?
    public let activeDirectoryStatus: ActiveDirectoryStatus?
    public let sMBGuestPasswordSet: Bool?
    public let sMBSecurityStrategy: SMBSecurityStrategy?
    public let fileSharesVisible: Bool?
}

extension DescribeSMBSettingsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case activeDirectoryStatus = "ActiveDirectoryStatus"
        case domainName = "DomainName"
        case fileSharesVisible = "FileSharesVisible"
        case gatewayARN = "GatewayARN"
        case sMBGuestPasswordSet = "SMBGuestPasswordSet"
        case sMBSecurityStrategy = "SMBSecurityStrategy"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let domainNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .domainName)
        domainName = domainNameDecoded
        let activeDirectoryStatusDecoded = try containerValues.decodeIfPresent(ActiveDirectoryStatus.self, forKey: .activeDirectoryStatus)
        activeDirectoryStatus = activeDirectoryStatusDecoded
        let sMBGuestPasswordSetDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .sMBGuestPasswordSet)
        sMBGuestPasswordSet = sMBGuestPasswordSetDecoded
        let sMBSecurityStrategyDecoded = try containerValues.decodeIfPresent(SMBSecurityStrategy.self, forKey: .sMBSecurityStrategy)
        sMBSecurityStrategy = sMBSecurityStrategyDecoded
        let fileSharesVisibleDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .fileSharesVisible)
        fileSharesVisible = fileSharesVisibleDecoded
    }
}
