// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AutomaticTapeCreationPolicyInfo: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case automaticTapeCreationRules = "AutomaticTapeCreationRules"
        case gatewayARN = "GatewayARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let automaticTapeCreationRules = automaticTapeCreationRules {
            var automaticTapeCreationRulesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .automaticTapeCreationRules)
            for automatictapecreationrules0 in automaticTapeCreationRules {
                try automaticTapeCreationRulesContainer.encode(automatictapecreationrules0)
            }
        }
        if let gatewayARN = gatewayARN {
            try encodeContainer.encode(gatewayARN, forKey: .gatewayARN)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let automaticTapeCreationRulesContainer = try containerValues.decodeIfPresent([AutomaticTapeCreationRule].self, forKey: .automaticTapeCreationRules)
        var automaticTapeCreationRulesDecoded0:[AutomaticTapeCreationRule]? = nil
        if let automaticTapeCreationRulesContainer = automaticTapeCreationRulesContainer {
            automaticTapeCreationRulesDecoded0 = [AutomaticTapeCreationRule]()
            for structure0 in automaticTapeCreationRulesContainer {
                automaticTapeCreationRulesDecoded0?.append(structure0)
            }
        }
        automaticTapeCreationRules = automaticTapeCreationRulesDecoded0
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
    }
}
