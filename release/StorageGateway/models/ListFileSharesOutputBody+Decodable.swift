// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListFileSharesOutputBody: Equatable {
    public let marker: String?
    public let nextMarker: String?
    public let fileShareInfoList: [FileShareInfo]?
}

extension ListFileSharesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case fileShareInfoList = "FileShareInfoList"
        case marker = "Marker"
        case nextMarker = "NextMarker"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let nextMarkerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextMarker)
        nextMarker = nextMarkerDecoded
        let fileShareInfoListContainer = try containerValues.decodeIfPresent([FileShareInfo].self, forKey: .fileShareInfoList)
        var fileShareInfoListDecoded0:[FileShareInfo]? = nil
        if let fileShareInfoListContainer = fileShareInfoListContainer {
            fileShareInfoListDecoded0 = [FileShareInfo]()
            for structure0 in fileShareInfoListContainer {
                fileShareInfoListDecoded0?.append(structure0)
            }
        }
        fileShareInfoList = fileShareInfoListDecoded0
    }
}
