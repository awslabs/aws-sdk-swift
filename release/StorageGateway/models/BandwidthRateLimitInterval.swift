// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///          Describes a bandwidth rate limit interval for a gateway. A bandwidth
///          rate limit schedule consists of one or more bandwidth rate limit intervals. A bandwidth rate limit
///          interval defines a period of time on one or more days of the week, during which bandwidth rate
///          limits are specified for uploading, downloading, or both.
///       </p>
public struct BandwidthRateLimitInterval: Equatable {
    /// <p>
    ///          The average download rate limit component of the bandwidth rate limit interval,
    ///          in bits per second. This field does not appear in the response if the download rate limit is not set.
    ///       </p>
    public let averageDownloadRateLimitInBitsPerSec: Int?
    /// <p>
    ///          The average upload rate limit component of the bandwidth rate limit interval,
    ///          in bits per second. This field does not appear in the response if the upload rate limit is not set.
    ///       </p>
    public let averageUploadRateLimitInBitsPerSec: Int?
    /// <p> The days of the week component of the bandwidth rate limit interval, represented as
    ///          ordinal numbers from 0 to 6, where 0 represents Sunday and 6 represents Saturday. </p>
    public let daysOfWeek: [Int]?
    /// <p>
    ///          The hour of the day to end the bandwidth rate limit interval.
    ///       </p>
    public let endHourOfDay: Int?
    /// <p>
    ///          The minute of the hour to end the bandwidth rate limit interval.
    ///       </p>
    ///
    ///          <important>
    ///             <p>
    ///             The bandwidth rate limit interval ends at the end of the minute. To end an interval
    ///             at the end of an hour, use the value <code>59</code>.
    ///          </p>
    ///          </important>
    public let endMinuteOfHour: Int?
    /// <p>
    ///          The hour of the day to start the bandwidth rate limit interval.
    ///       </p>
    public let startHourOfDay: Int?
    /// <p>
    ///          The minute of the hour to start the bandwidth rate limit interval.
    ///          The interval begins at the start of that minute. To begin an interval exactly at
    ///          the start of the hour, use the value <code>0</code>.
    ///       </p>
    public let startMinuteOfHour: Int?

    public init (
        averageDownloadRateLimitInBitsPerSec: Int? = nil,
        averageUploadRateLimitInBitsPerSec: Int? = nil,
        daysOfWeek: [Int]? = nil,
        endHourOfDay: Int? = nil,
        endMinuteOfHour: Int? = nil,
        startHourOfDay: Int? = nil,
        startMinuteOfHour: Int? = nil
    )
    {
        self.averageDownloadRateLimitInBitsPerSec = averageDownloadRateLimitInBitsPerSec
        self.averageUploadRateLimitInBitsPerSec = averageUploadRateLimitInBitsPerSec
        self.daysOfWeek = daysOfWeek
        self.endHourOfDay = endHourOfDay
        self.endMinuteOfHour = endMinuteOfHour
        self.startHourOfDay = startHourOfDay
        self.startMinuteOfHour = startMinuteOfHour
    }
}
