// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a gateway's local disk.</p>
public struct Disk: Equatable {
    /// <p>The iSCSI qualified name (IQN) that is defined for a disk. This field is not included in
    ///          the response if the local disk is not defined as an iSCSI target. The format of this field
    ///          is <i>targetIqn::LUNNumber::region-volumeId</i>.</p>
    public let diskAllocationResource: String?
    /// <p>One of the <code>DiskAllocationType</code> enumeration values that identifies how a
    ///          local disk is used.</p>
    ///
    ///          <p>Valid Values: <code>UPLOAD_BUFFER</code> | <code>CACHE_STORAGE</code>
    ///          </p>
    public let diskAllocationType: String?
    /// <p>A list of values that represents attributes of a local disk.</p>
    public let diskAttributeList: [String]?
    /// <p>The unique device ID or other distinguishing data that identifies a local disk.</p>
    public let diskId: String?
    /// <p>The device node of a local disk as assigned by the virtualization environment.</p>
    public let diskNode: String?
    /// <p>The path of a local disk in the gateway virtual machine (VM).</p>
    public let diskPath: String?
    /// <p>The local disk size in bytes.</p>
    public let diskSizeInBytes: Int
    /// <p>A value that represents the status of a local disk.</p>
    public let diskStatus: String?

    public init (
        diskAllocationResource: String? = nil,
        diskAllocationType: String? = nil,
        diskAttributeList: [String]? = nil,
        diskId: String? = nil,
        diskNode: String? = nil,
        diskPath: String? = nil,
        diskSizeInBytes: Int = 0,
        diskStatus: String? = nil
    )
    {
        self.diskAllocationResource = diskAllocationResource
        self.diskAllocationType = diskAllocationType
        self.diskAttributeList = diskAttributeList
        self.diskId = diskId
        self.diskNode = diskNode
        self.diskPath = diskPath
        self.diskSizeInBytes = diskSizeInBytes
        self.diskStatus = diskStatus
    }
}
