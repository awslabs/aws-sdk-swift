// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateSnapshotScheduleInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case recurrenceInHours = "RecurrenceInHours"
        case startAt = "StartAt"
        case tags = "Tags"
        case volumeARN = "VolumeARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let recurrenceInHours = recurrenceInHours {
            try encodeContainer.encode(recurrenceInHours, forKey: .recurrenceInHours)
        }
        if let startAt = startAt {
            try encodeContainer.encode(startAt, forKey: .startAt)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for tags0 in tags {
                try tagsContainer.encode(tags0)
            }
        }
        if let volumeARN = volumeARN {
            try encodeContainer.encode(volumeARN, forKey: .volumeARN)
        }
    }
}
