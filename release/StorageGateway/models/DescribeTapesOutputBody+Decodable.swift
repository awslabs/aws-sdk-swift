// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTapesOutputBody: Equatable {
    public let tapes: [Tape]?
    public let marker: String?
}

extension DescribeTapesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case tapes = "Tapes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapesContainer = try containerValues.decodeIfPresent([Tape].self, forKey: .tapes)
        var tapesDecoded0:[Tape]? = nil
        if let tapesContainer = tapesContainer {
            tapesDecoded0 = [Tape]()
            for structure0 in tapesContainer {
                tapesDecoded0?.append(structure0)
            }
        }
        tapes = tapesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
