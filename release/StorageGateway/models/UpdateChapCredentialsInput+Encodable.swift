// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension UpdateChapCredentialsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case initiatorName = "InitiatorName"
        case secretToAuthenticateInitiator = "SecretToAuthenticateInitiator"
        case secretToAuthenticateTarget = "SecretToAuthenticateTarget"
        case targetARN = "TargetARN"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let initiatorName = initiatorName {
            try encodeContainer.encode(initiatorName, forKey: .initiatorName)
        }
        if let secretToAuthenticateInitiator = secretToAuthenticateInitiator {
            try encodeContainer.encode(secretToAuthenticateInitiator, forKey: .secretToAuthenticateInitiator)
        }
        if let secretToAuthenticateTarget = secretToAuthenticateTarget {
            try encodeContainer.encode(secretToAuthenticateTarget, forKey: .secretToAuthenticateTarget)
        }
        if let targetARN = targetARN {
            try encodeContainer.encode(targetARN, forKey: .targetARN)
        }
    }
}
