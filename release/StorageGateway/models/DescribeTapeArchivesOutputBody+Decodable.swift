// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeTapeArchivesOutputBody: Equatable {
    public let tapeArchives: [TapeArchive]?
    public let marker: String?
}

extension DescribeTapeArchivesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case marker = "Marker"
        case tapeArchives = "TapeArchives"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tapeArchivesContainer = try containerValues.decodeIfPresent([TapeArchive].self, forKey: .tapeArchives)
        var tapeArchivesDecoded0:[TapeArchive]? = nil
        if let tapeArchivesContainer = tapeArchivesContainer {
            tapeArchivesDecoded0 = [TapeArchive]()
            for structure0 in tapeArchivesContainer {
                tapeArchivesDecoded0?.append(structure0)
            }
        }
        tapeArchives = tapeArchivesDecoded0
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
    }
}
