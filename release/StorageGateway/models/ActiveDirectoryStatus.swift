// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ActiveDirectoryStatus {
    case accessDenied
    case detached
    case joined
    case joining
    case networkError
    case timeout
    case unknownError
    case sdkUnknown(String)
}

extension ActiveDirectoryStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ActiveDirectoryStatus] {
        return [
            .accessDenied,
            .detached,
            .joined,
            .joining,
            .networkError,
            .timeout,
            .unknownError,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .accessDenied: return "ACCESS_DENIED"
        case .detached: return "DETACHED"
        case .joined: return "JOINED"
        case .joining: return "JOINING"
        case .networkError: return "NETWORK_ERROR"
        case .timeout: return "TIMEOUT"
        case .unknownError: return "UNKNOWN_ERROR"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ActiveDirectoryStatus(rawValue: rawValue) ?? ActiveDirectoryStatus.sdkUnknown(rawValue)
    }
}
