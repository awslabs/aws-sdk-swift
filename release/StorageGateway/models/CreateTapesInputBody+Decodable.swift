// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct CreateTapesInputBody: Equatable {
    public let gatewayARN: String?
    public let tapeSizeInBytes: Int?
    public let clientToken: String?
    public let numTapesToCreate: Int?
    public let tapeBarcodePrefix: String?
    public let kMSEncrypted: Bool?
    public let kMSKey: String?
    public let poolId: String?
    public let worm: Bool
    public let tags: [Tag]?
}

extension CreateTapesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case clientToken = "ClientToken"
        case gatewayARN = "GatewayARN"
        case kMSEncrypted = "KMSEncrypted"
        case kMSKey = "KMSKey"
        case numTapesToCreate = "NumTapesToCreate"
        case poolId = "PoolId"
        case tags = "Tags"
        case tapeBarcodePrefix = "TapeBarcodePrefix"
        case tapeSizeInBytes = "TapeSizeInBytes"
        case worm = "Worm"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let tapeSizeInBytesDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .tapeSizeInBytes)
        tapeSizeInBytes = tapeSizeInBytesDecoded
        let clientTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .clientToken)
        clientToken = clientTokenDecoded
        let numTapesToCreateDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .numTapesToCreate)
        numTapesToCreate = numTapesToCreateDecoded
        let tapeBarcodePrefixDecoded = try containerValues.decodeIfPresent(String.self, forKey: .tapeBarcodePrefix)
        tapeBarcodePrefix = tapeBarcodePrefixDecoded
        let kMSEncryptedDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .kMSEncrypted)
        kMSEncrypted = kMSEncryptedDecoded
        let kMSKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .kMSKey)
        kMSKey = kMSKeyDecoded
        let poolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .poolId)
        poolId = poolIdDecoded
        let wormDecoded = try containerValues.decode(Bool.self, forKey: .worm)
        worm = wormDecoded
        let tagsContainer = try containerValues.decodeIfPresent([Tag].self, forKey: .tags)
        var tagsDecoded0:[Tag]? = nil
        if let tagsContainer = tagsContainer {
            tagsDecoded0 = [Tag]()
            for structure0 in tagsContainer {
                tagsDecoded0?.append(structure0)
            }
        }
        tags = tagsDecoded0
    }
}
