// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListVolumeRecoveryPointsOutputBody: Equatable {
    public let gatewayARN: String?
    public let volumeRecoveryPointInfos: [VolumeRecoveryPointInfo]?
}

extension ListVolumeRecoveryPointsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case gatewayARN = "GatewayARN"
        case volumeRecoveryPointInfos = "VolumeRecoveryPointInfos"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let volumeRecoveryPointInfosContainer = try containerValues.decodeIfPresent([VolumeRecoveryPointInfo].self, forKey: .volumeRecoveryPointInfos)
        var volumeRecoveryPointInfosDecoded0:[VolumeRecoveryPointInfo]? = nil
        if let volumeRecoveryPointInfosContainer = volumeRecoveryPointInfosContainer {
            volumeRecoveryPointInfosDecoded0 = [VolumeRecoveryPointInfo]()
            for structure0 in volumeRecoveryPointInfosContainer {
                volumeRecoveryPointInfosDecoded0?.append(structure0)
            }
        }
        volumeRecoveryPointInfos = volumeRecoveryPointInfosDecoded0
    }
}
