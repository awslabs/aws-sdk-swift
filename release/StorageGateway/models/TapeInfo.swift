// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Describes a virtual tape.</p>
public struct TapeInfo: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a>
    ///          operation to return a list of gateways for your account and AWS Region.</p>
    public let gatewayARN: String?
    /// <p>The date that the tape entered the custom tape pool with tape retention lock
    ///          enabled.</p>
    public let poolEntryDate: Date?
    /// <p>The ID of the pool that you want to add your tape to for archiving. The tape in this
    ///          pool is archived in the S3 storage class that is associated with the pool. When you use
    ///          your backup application to eject the tape, the tape is archived directly into the storage
    ///          class (S3 Glacier or S3 Glacier Deep Archive) that corresponds to the pool.</p>
    ///
    ///          <p>Valid Values: <code>GLACIER</code> | <code>DEEP_ARCHIVE</code>
    ///          </p>
    public let poolId: String?
    /// <p>The date that the tape became subject to tape retention lock.</p>
    public let retentionStartDate: Date?
    /// <p>The Amazon Resource Name (ARN) of a virtual tape.</p>
    public let tapeARN: String?
    /// <p>The barcode that identifies a specific virtual tape.</p>
    public let tapeBarcode: String?
    /// <p>The size, in bytes, of a virtual tape.</p>
    public let tapeSizeInBytes: Int?
    /// <p>The status of the tape.</p>
    public let tapeStatus: String?

    public init (
        gatewayARN: String? = nil,
        poolEntryDate: Date? = nil,
        poolId: String? = nil,
        retentionStartDate: Date? = nil,
        tapeARN: String? = nil,
        tapeBarcode: String? = nil,
        tapeSizeInBytes: Int? = nil,
        tapeStatus: String? = nil
    )
    {
        self.gatewayARN = gatewayARN
        self.poolEntryDate = poolEntryDate
        self.poolId = poolId
        self.retentionStartDate = retentionStartDate
        self.tapeARN = tapeARN
        self.tapeBarcode = tapeBarcode
        self.tapeSizeInBytes = tapeSizeInBytes
        self.tapeStatus = tapeStatus
    }
}
