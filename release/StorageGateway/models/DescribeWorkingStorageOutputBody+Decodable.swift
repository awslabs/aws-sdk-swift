// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeWorkingStorageOutputBody: Equatable {
    public let gatewayARN: String?
    public let diskIds: [String]?
    public let workingStorageUsedInBytes: Int
    public let workingStorageAllocatedInBytes: Int
}

extension DescribeWorkingStorageOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case diskIds = "DiskIds"
        case gatewayARN = "GatewayARN"
        case workingStorageAllocatedInBytes = "WorkingStorageAllocatedInBytes"
        case workingStorageUsedInBytes = "WorkingStorageUsedInBytes"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let diskIdsContainer = try containerValues.decodeIfPresent([String].self, forKey: .diskIds)
        var diskIdsDecoded0:[String]? = nil
        if let diskIdsContainer = diskIdsContainer {
            diskIdsDecoded0 = [String]()
            for string0 in diskIdsContainer {
                diskIdsDecoded0?.append(string0)
            }
        }
        diskIds = diskIdsDecoded0
        let workingStorageUsedInBytesDecoded = try containerValues.decode(Int.self, forKey: .workingStorageUsedInBytes)
        workingStorageUsedInBytes = workingStorageUsedInBytesDecoded
        let workingStorageAllocatedInBytesDecoded = try containerValues.decode(Int.self, forKey: .workingStorageAllocatedInBytes)
        workingStorageAllocatedInBytes = workingStorageAllocatedInBytesDecoded
    }
}
