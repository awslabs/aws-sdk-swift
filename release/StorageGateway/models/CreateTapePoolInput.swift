// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateTapePoolInput: Equatable {
    /// <p>The name of the new custom tape pool.</p>
    public let poolName: String?
    /// <p>Tape retention lock time is set in days. Tape retention lock can be enabled for up to
    ///          100 years (36,500 days).</p>
    public let retentionLockTimeInDays: Int?
    /// <p>Tape retention lock can be configured in two modes. When configured in governance mode,
    ///          AWS accounts with specific IAM permissions are authorized to remove the tape retention lock
    ///          from archived virtual tapes. When configured in compliance mode, the tape retention lock
    ///          cannot be removed by any user, including the root AWS account.</p>
    public let retentionLockType: RetentionLockType?
    /// <p>The storage class that is associated with the new custom pool. When you use your backup
    ///          application to eject the tape, the tape is archived directly into the storage class (S3
    ///          Glacier or S3 Glacier Deep Archive) that corresponds to the pool.</p>
    public let storageClass: TapeStorageClass?
    /// <p>A list of up to 50 tags that can be assigned to tape pool. Each tag is a key-value
    ///          pair.</p>
    ///
    ///          <note>
    ///             <p>Valid characters for key and value are letters, spaces, and numbers representable in
    ///             UTF-8 format, and the following special characters: + - = . _ : / @. The maximum length
    ///             of a tag's key is 128 characters, and the maximum length for a tag's value is
    ///             256.</p>
    ///          </note>
    public let tags: [Tag]?

    public init (
        poolName: String? = nil,
        retentionLockTimeInDays: Int? = nil,
        retentionLockType: RetentionLockType? = nil,
        storageClass: TapeStorageClass? = nil,
        tags: [Tag]? = nil
    )
    {
        self.poolName = poolName
        self.retentionLockTimeInDays = retentionLockTimeInDays
        self.retentionLockType = retentionLockType
        self.storageClass = storageClass
        self.tags = tags
    }
}
