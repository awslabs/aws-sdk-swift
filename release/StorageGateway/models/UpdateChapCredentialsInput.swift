// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A JSON object containing one or more of the following fields:</p>
///
///          <ul>
///             <li>
///                <p>
///                   <a>UpdateChapCredentialsInput$InitiatorName</a>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <a>UpdateChapCredentialsInput$SecretToAuthenticateInitiator</a>
///                </p>
///             </li>
///             <li>
///                <p>
///                   <a>UpdateChapCredentialsInput$SecretToAuthenticateTarget</a>
///                </p>
///
///             </li>
///             <li>
///                <p>
///                   <a>UpdateChapCredentialsInput$TargetARN</a>
///                </p>
///             </li>
///          </ul>
public struct UpdateChapCredentialsInput: Equatable {
    /// <p>The iSCSI initiator that connects to the target.</p>
    public let initiatorName: String?
    /// <p>The secret key that the initiator (for example, the Windows client) must provide to
    ///          participate in mutual CHAP with the target.</p>
    ///
    ///          <note>
    ///             <p>The secret key must be between 12 and 16 bytes when encoded in UTF-8.</p>
    ///          </note>
    public let secretToAuthenticateInitiator: String?
    /// <p>The secret key that the target must provide to participate in mutual CHAP with the
    ///          initiator (e.g. Windows client).</p>
    ///
    ///          <p>Byte constraints: Minimum bytes of 12. Maximum bytes of 16.</p>
    ///
    ///          <note>
    ///             <p>The secret key must be between 12 and 16 bytes when encoded in UTF-8.</p>
    ///          </note>
    public let secretToAuthenticateTarget: String?
    /// <p>The Amazon Resource Name (ARN) of the iSCSI volume target. Use the <a>DescribeStorediSCSIVolumes</a> operation to return the TargetARN for specified
    ///          VolumeARN.</p>
    public let targetARN: String?

    public init (
        initiatorName: String? = nil,
        secretToAuthenticateInitiator: String? = nil,
        secretToAuthenticateTarget: String? = nil,
        targetARN: String? = nil
    )
    {
        self.initiatorName = initiatorName
        self.secretToAuthenticateInitiator = secretToAuthenticateInitiator
        self.secretToAuthenticateTarget = secretToAuthenticateTarget
        self.targetARN = targetARN
    }
}
