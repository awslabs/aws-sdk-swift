// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateMaintenanceStartTimeInputBody: Equatable {
    public let gatewayARN: String?
    public let hourOfDay: Int?
    public let minuteOfHour: Int?
    public let dayOfWeek: Int?
    public let dayOfMonth: Int?
}

extension UpdateMaintenanceStartTimeInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dayOfMonth = "DayOfMonth"
        case dayOfWeek = "DayOfWeek"
        case gatewayARN = "GatewayARN"
        case hourOfDay = "HourOfDay"
        case minuteOfHour = "MinuteOfHour"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let hourOfDayDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .hourOfDay)
        hourOfDay = hourOfDayDecoded
        let minuteOfHourDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .minuteOfHour)
        minuteOfHour = minuteOfHourDecoded
        let dayOfWeekDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .dayOfWeek)
        dayOfWeek = dayOfWeekDecoded
        let dayOfMonthDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .dayOfMonth)
        dayOfMonth = dayOfMonthDecoded
    }
}
