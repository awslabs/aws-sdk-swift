// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateBandwidthRateLimitInputBody: Equatable {
    public let gatewayARN: String?
    public let averageUploadRateLimitInBitsPerSec: Int?
    public let averageDownloadRateLimitInBitsPerSec: Int?
}

extension UpdateBandwidthRateLimitInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case averageDownloadRateLimitInBitsPerSec = "AverageDownloadRateLimitInBitsPerSec"
        case averageUploadRateLimitInBitsPerSec = "AverageUploadRateLimitInBitsPerSec"
        case gatewayARN = "GatewayARN"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let averageUploadRateLimitInBitsPerSecDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .averageUploadRateLimitInBitsPerSec)
        averageUploadRateLimitInBitsPerSec = averageUploadRateLimitInBitsPerSecDecoded
        let averageDownloadRateLimitInBitsPerSecDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .averageDownloadRateLimitInBitsPerSec)
        averageDownloadRateLimitInBitsPerSec = averageDownloadRateLimitInBitsPerSecDecoded
    }
}
