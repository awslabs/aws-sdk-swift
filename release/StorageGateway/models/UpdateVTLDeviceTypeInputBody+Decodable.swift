// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateVTLDeviceTypeInputBody: Equatable {
    public let vTLDeviceARN: String?
    public let deviceType: String?
}

extension UpdateVTLDeviceTypeInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case deviceType = "DeviceType"
        case vTLDeviceARN = "VTLDeviceARN"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let vTLDeviceARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .vTLDeviceARN)
        vTLDeviceARN = vTLDeviceARNDecoded
        let deviceTypeDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceType)
        deviceType = deviceTypeDecoded
    }
}
