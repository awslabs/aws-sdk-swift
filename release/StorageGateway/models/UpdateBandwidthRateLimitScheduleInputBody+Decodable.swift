// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateBandwidthRateLimitScheduleInputBody: Equatable {
    public let gatewayARN: String?
    public let bandwidthRateLimitIntervals: [BandwidthRateLimitInterval]?
}

extension UpdateBandwidthRateLimitScheduleInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case bandwidthRateLimitIntervals = "BandwidthRateLimitIntervals"
        case gatewayARN = "GatewayARN"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let gatewayARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .gatewayARN)
        gatewayARN = gatewayARNDecoded
        let bandwidthRateLimitIntervalsContainer = try containerValues.decodeIfPresent([BandwidthRateLimitInterval].self, forKey: .bandwidthRateLimitIntervals)
        var bandwidthRateLimitIntervalsDecoded0:[BandwidthRateLimitInterval]? = nil
        if let bandwidthRateLimitIntervalsContainer = bandwidthRateLimitIntervalsContainer {
            bandwidthRateLimitIntervalsDecoded0 = [BandwidthRateLimitInterval]()
            for structure0 in bandwidthRateLimitIntervalsContainer {
                bandwidthRateLimitIntervalsDecoded0?.append(structure0)
            }
        }
        bandwidthRateLimitIntervals = bandwidthRateLimitIntervalsDecoded0
    }
}
