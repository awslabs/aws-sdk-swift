// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>CreateSMBFileShareInput</p>
public struct CreateSMBFileShareInput: Equatable {
    /// <p>The files and folders on this share will only be visible to users with read
    ///          access.</p>
    public let accessBasedEnumeration: Bool?
    /// <p>A list of users or groups in the Active Directory that will be granted administrator
    ///          privileges on the file share. These users can do all file operations as the super-user.
    ///          Acceptable formats include: <code>DOMAIN\User1</code>, <code>user1</code>,
    ///             <code>@group1</code>, and <code>@DOMAIN\group1</code>.</p>
    ///
    ///          <important>
    ///             <p>Use this option very carefully, because any user in this list can do anything they
    ///             like on the file share, regardless of file permissions.</p>
    ///          </important>
    public let adminUserList: [String]?
    /// <p>The Amazon Resource Name (ARN) of the storage used for audit logs.</p>
    public let auditDestinationARN: String?
    /// <p>The authentication method that users use to access the file share. The default is
    ///             <code>ActiveDirectory</code>.</p>
    ///
    ///          <p>Valid Values: <code>ActiveDirectory</code> | <code>GuestAccess</code>
    ///          </p>
    public let authentication: String?
    /// <p>Specifies refresh cache information for the file share.</p>
    public let cacheAttributes: CacheAttributes?
    /// <p>The case of an object name in an Amazon S3 bucket. For <code>ClientSpecified</code>, the
    ///          client determines the case sensitivity. For <code>CaseSensitive</code>, the gateway
    ///          determines the case sensitivity. The default value is <code>ClientSpecified</code>.</p>
    public let caseSensitivity: CaseSensitivity?
    /// <p>A unique string value that you supply that is used by file gateway to ensure idempotent
    ///          file share creation.</p>
    public let clientToken: String?
    /// <p>The default storage class for objects put into an Amazon S3 bucket by the file gateway.
    ///          The default value is <code>S3_INTELLIGENT_TIERING</code>. Optional.</p>
    ///
    ///          <p>Valid Values: <code>S3_STANDARD</code> | <code>S3_INTELLIGENT_TIERING</code> |
    ///             <code>S3_STANDARD_IA</code> | <code>S3_ONEZONE_IA</code>
    ///          </p>
    public let defaultStorageClass: String?
    /// <p>The name of the file share. Optional.</p>
    ///
    ///          <note>
    ///             <p>
    ///                <code>FileShareName</code> must be set if an S3 prefix name is set in
    ///                <code>LocationARN</code>.</p>
    ///          </note>
    public let fileShareName: String?
    /// <p>The ARN of the file gateway on which you want to create a file share.</p>
    public let gatewayARN: String?
    /// <p>A value that enables guessing of the MIME type for uploaded objects based on file
    ///          extensions. Set this value to <code>true</code> to enable MIME type guessing, otherwise set
    ///          to <code>false</code>. The default value is <code>true</code>.</p>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let guessMIMETypeEnabled: Bool?
    /// <p>A list of users or groups in the Active Directory that are not allowed to access the
    ///          file share. A group must be prefixed with the @ character. Acceptable formats include:
    ///             <code>DOMAIN\User1</code>, <code>user1</code>, <code>@group1</code>, and
    ///             <code>@DOMAIN\group1</code>. Can only be set if Authentication is set to
    ///             <code>ActiveDirectory</code>.</p>
    public let invalidUserList: [String]?
    /// <p>Set to <code>true</code> to use Amazon S3 server-side encryption with your own AWS KMS
    ///          key, or <code>false</code> to use a key managed by Amazon S3. Optional.</p>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let kMSEncrypted: Bool?
    /// <p>The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon
    ///          S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can
    ///          only be set when <code>KMSEncrypted</code> is <code>true</code>. Optional.</p>
    public let kMSKey: String?
    /// <p>The ARN of the backend storage used for storing file data. A prefix name can be added to
    ///          the S3 bucket name. It must end with a "/".</p>
    public let locationARN: String?
    /// <p>The notification policy of the file share. <code>SettlingTimeInSeconds</code> controls
    ///          the number of seconds to wait after the last point in time a client wrote to a file before
    ///          generating an <code>ObjectUploaded</code> notification. Because clients can make many small
    ///          writes to files, it's best to set this parameter for as long as possible to avoid
    ///          generating multiple notifications for the same file in a small time period.</p>
    ///
    ///          <note>
    ///             <p>
    ///                <code>SettlingTimeInSeconds</code> has no effect on the timing of the object
    ///             uploading to Amazon S3, only the timing of the notification.</p>
    ///          </note>
    ///
    ///          <p>The following example sets <code>NotificationPolicy</code> on with
    ///             <code>SettlingTimeInSeconds</code> set to 60.</p>
    ///
    ///          <p>
    ///             <code>{\"Upload\": {\"SettlingTimeInSeconds\": 60}}</code>
    ///          </p>
    ///
    ///          <p>The following example sets <code>NotificationPolicy</code> off.</p>
    ///
    ///          <p>
    ///             <code>{}</code>
    ///          </p>
    public let notificationPolicy: String?
    /// <p>A value that sets the access control list (ACL) permission for objects in the S3 bucket
    ///          that a file gateway puts objects into. The default value is <code>private</code>.</p>
    public let objectACL: ObjectACL?
    /// <p>A value that sets the write status of a file share. Set this value to <code>true</code>
    ///          to set the write status to read-only, otherwise set to <code>false</code>.</p>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let readOnly: Bool?
    /// <p>A value that sets who pays the cost of the request and the cost associated with data
    ///          download from the S3 bucket. If this value is set to <code>true</code>, the requester pays
    ///          the costs; otherwise, the S3 bucket owner pays. However, the S3 bucket owner always pays
    ///          the cost of storing data.</p>
    ///
    ///          <note>
    ///             <p>
    ///                <code>RequesterPays</code> is a configuration for the S3 bucket that backs the file
    ///             share, so make sure that the configuration on the file share is the same as the S3
    ///             bucket configuration.</p>
    ///          </note>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let requesterPays: Bool?
    /// <p>The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes
    ///          when it accesses the underlying storage.</p>
    public let role: String?
    /// <p>Set this value to <code>true</code> to enable access control list (ACL) on the SMB file
    ///          share. Set it to <code>false</code> to map file and directory permissions to the POSIX
    ///          permissions.</p>
    ///
    ///
    ///
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/storagegateway/latest/userguide/smb-acl.html">Using Microsoft Windows ACLs to
    ///             control access to an SMB file share</a> in the <i>AWS Storage Gateway User
    ///             Guide</i>.</p>
    ///
    ///          <p>Valid Values: <code>true</code> | <code>false</code>
    ///          </p>
    public let sMBACLEnabled: Bool?
    /// <p>A list of up to 50 tags that can be assigned to the NFS file share. Each tag is a
    ///          key-value pair.</p>
    ///
    ///          <note>
    ///             <p>Valid characters for key and value are letters, spaces, and numbers representable in
    ///             UTF-8 format, and the following special characters: + - = . _ : / @. The maximum length
    ///             of a tag's key is 128 characters, and the maximum length for a tag's value is
    ///             256.</p>
    ///          </note>
    public let tags: [Tag]?
    /// <p>A list of users or groups in the Active Directory that are allowed to access the file
    ///             <a href=""></a> share. A group must be prefixed with the @ character. Acceptable formats
    ///          include: <code>DOMAIN\User1</code>, <code>user1</code>, <code>@group1</code>, and
    ///             <code>@DOMAIN\group1</code>. Can only be set if Authentication is set to
    ///             <code>ActiveDirectory</code>.</p>
    public let validUserList: [String]?

    public init (
        accessBasedEnumeration: Bool? = nil,
        adminUserList: [String]? = nil,
        auditDestinationARN: String? = nil,
        authentication: String? = nil,
        cacheAttributes: CacheAttributes? = nil,
        caseSensitivity: CaseSensitivity? = nil,
        clientToken: String? = nil,
        defaultStorageClass: String? = nil,
        fileShareName: String? = nil,
        gatewayARN: String? = nil,
        guessMIMETypeEnabled: Bool? = nil,
        invalidUserList: [String]? = nil,
        kMSEncrypted: Bool? = nil,
        kMSKey: String? = nil,
        locationARN: String? = nil,
        notificationPolicy: String? = nil,
        objectACL: ObjectACL? = nil,
        readOnly: Bool? = nil,
        requesterPays: Bool? = nil,
        role: String? = nil,
        sMBACLEnabled: Bool? = nil,
        tags: [Tag]? = nil,
        validUserList: [String]? = nil
    )
    {
        self.accessBasedEnumeration = accessBasedEnumeration
        self.adminUserList = adminUserList
        self.auditDestinationARN = auditDestinationARN
        self.authentication = authentication
        self.cacheAttributes = cacheAttributes
        self.caseSensitivity = caseSensitivity
        self.clientToken = clientToken
        self.defaultStorageClass = defaultStorageClass
        self.fileShareName = fileShareName
        self.gatewayARN = gatewayARN
        self.guessMIMETypeEnabled = guessMIMETypeEnabled
        self.invalidUserList = invalidUserList
        self.kMSEncrypted = kMSEncrypted
        self.kMSKey = kMSKey
        self.locationARN = locationARN
        self.notificationPolicy = notificationPolicy
        self.objectACL = objectACL
        self.readOnly = readOnly
        self.requesterPays = requesterPays
        self.role = role
        self.sMBACLEnabled = sMBACLEnabled
        self.tags = tags
        self.validUserList = validUserList
    }
}
