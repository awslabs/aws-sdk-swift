// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Describes a custom tape pool.</p>
public struct PoolInfo: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the custom tape pool. Use the <a>ListTapePools</a> operation to return a list of custom tape pools for your
    ///          account and AWS Region.</p>
    public let poolARN: String?
    /// <p>The name of the custom tape pool. <code>PoolName</code> can use all ASCII characters,
    ///          except '/' and '\'.</p>
    public let poolName: String?
    /// <p>Status of the custom tape pool. Pool can be <code>ACTIVE</code> or
    ///          <code>DELETED</code>.</p>
    public let poolStatus: PoolStatus?
    /// <p>Tape retention lock time is set in days. Tape retention lock can be enabled for up to
    ///          100 years (36,500 days).</p>
    public let retentionLockTimeInDays: Int?
    /// <p>Tape retention lock type, which can be configured in two modes. When configured in
    ///          governance mode, AWS accounts with specific IAM permissions are authorized to remove the
    ///          tape retention lock from archived virtual tapes. When configured in compliance mode, the
    ///          tape retention lock cannot be removed by any user, including the root AWS account.</p>
    public let retentionLockType: RetentionLockType?
    /// <p>The storage class that is associated with the custom pool. When you use your backup
    ///          application to eject the tape, the tape is archived directly into the storage class (S3
    ///          Glacier or S3 Glacier Deep Archive) that corresponds to the pool.</p>
    public let storageClass: TapeStorageClass?

    public init (
        poolARN: String? = nil,
        poolName: String? = nil,
        poolStatus: PoolStatus? = nil,
        retentionLockTimeInDays: Int? = nil,
        retentionLockType: RetentionLockType? = nil,
        storageClass: TapeStorageClass? = nil
    )
    {
        self.poolARN = poolARN
        self.poolName = poolName
        self.poolStatus = poolStatus
        self.retentionLockTimeInDays = retentionLockTimeInDays
        self.retentionLockType = retentionLockType
        self.storageClass = storageClass
    }
}
