// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OptionVersion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case isDefault = "IsDefault"
        case version = "Version"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if isDefault != false {
            try container.encode(isDefault, forKey: Key("IsDefault"))
        }
        if let version = version {
            try container.encode(version, forKey: Key("Version"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let versionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .version)
        version = versionDecoded
        let isDefaultDecoded = try containerValues.decode(Bool.self, forKey: .isDefault)
        isDefault = isDefaultDecoded
    }
}
