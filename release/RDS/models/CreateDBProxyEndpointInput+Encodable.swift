// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateDBProxyEndpointInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let dBProxyEndpointName = dBProxyEndpointName {
            try container.encode(dBProxyEndpointName, forKey: Key("DBProxyEndpointName"))
        }
        if let dBProxyName = dBProxyName {
            try container.encode(dBProxyName, forKey: Key("DBProxyName"))
        }
        if let tags = tags {
            var tagsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("Tags"))
            for (index0, tag0) in tags.enumerated() {
                try tagsContainer.encode(tag0, forKey: Key("Tag.\(index0.advanced(by: 1))"))
            }
        }
        if let targetRole = targetRole {
            try container.encode(targetRole, forKey: Key("TargetRole"))
        }
        if let vpcSecurityGroupIds = vpcSecurityGroupIds {
            var vpcSecurityGroupIdsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("VpcSecurityGroupIds"))
            for (index0, string0) in vpcSecurityGroupIds.enumerated() {
                try vpcSecurityGroupIdsContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        if let vpcSubnetIds = vpcSubnetIds {
            var vpcSubnetIdsContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("VpcSubnetIds"))
            for (index0, string0) in vpcSubnetIds.enumerated() {
                try vpcSubnetIdsContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("CreateDBProxyEndpoint", forKey:Key("Action"))
        try container.encode("2014-10-31", forKey:Key("Version"))
    }
}
