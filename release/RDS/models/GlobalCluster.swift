// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>A data type representing an Aurora global database.</p>
public struct GlobalCluster: Equatable {
    /// <p>
    ///         The default database name within the new global database cluster.
    ///       </p>
    public let databaseName: String?
    /// <p>
    ///         The deletion protection setting for the new global database cluster.
    ///       </p>
    public let deletionProtection: Bool?
    /// <p>
    ///         The Aurora database engine used by the global database cluster.
    ///       </p>
    public let engine: String?
    /// <p>Indicates the database engine version.</p>
    public let engineVersion: String?
    /// <p>A data object containing all properties for the current state of an in-process or pending failover process for this Aurora global database.
    ///       This object is empty unless the <a>FailoverGlobalCluster</a> API operation has been called on this Aurora global database (<a>GlobalCluster</a>).
    ///     </p>
    public let failoverState: FailoverState?
    /// <p>The Amazon Resource Name (ARN) for the global database cluster.</p>
    public let globalClusterArn: String?
    /// <p>
    ///         Contains a user-supplied global database cluster identifier. This identifier is the unique key that
    ///         identifies a global database cluster.
    ///       </p>
    public let globalClusterIdentifier: String?
    /// <p>
    ///         The list of cluster IDs for secondary clusters within the global database cluster. Currently limited to
    ///         1 item.
    ///       </p>
    public let globalClusterMembers: [GlobalClusterMember]?
    /// <p>
    ///         The AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in
    ///         AWS CloudTrail log entries whenever the AWS KMS customer master key (CMK) for the DB cluster is accessed.
    ///       </p>
    public let globalClusterResourceId: String?
    /// <p>Specifies the current state of this global database cluster.</p>
    public let status: String?
    /// <p>
    ///         The storage encryption setting for the global database cluster.
    ///       </p>
    public let storageEncrypted: Bool?

    public init (
        databaseName: String? = nil,
        deletionProtection: Bool? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        failoverState: FailoverState? = nil,
        globalClusterArn: String? = nil,
        globalClusterIdentifier: String? = nil,
        globalClusterMembers: [GlobalClusterMember]? = nil,
        globalClusterResourceId: String? = nil,
        status: String? = nil,
        storageEncrypted: Bool? = nil
    )
    {
        self.databaseName = databaseName
        self.deletionProtection = deletionProtection
        self.engine = engine
        self.engineVersion = engineVersion
        self.failoverState = failoverState
        self.globalClusterArn = globalClusterArn
        self.globalClusterIdentifier = globalClusterIdentifier
        self.globalClusterMembers = globalClusterMembers
        self.globalClusterResourceId = globalClusterResourceId
        self.status = status
        self.storageEncrypted = storageEncrypted
    }
}
