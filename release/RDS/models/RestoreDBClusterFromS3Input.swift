// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct RestoreDBClusterFromS3Input: Equatable {
    /// <p>A list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</p>
    public let availabilityZones: [String]?
    /// <p>The target backtrack window, in seconds. To disable backtracking, set this value to
    ///             0.</p>
    ///         <note>
    ///             <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p>
    ///         </note>
    ///         <p>Default: 0</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p>
    ///             </li>
    ///          </ul>
    public let backtrackWindow: Int?
    /// <p>The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.</p>
    ///         <p>Default: 1</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must be a value from 1 to 35</p>
    ///             </li>
    ///          </ul>
    public let backupRetentionPeriod: Int?
    /// <p>A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.</p>
    public let characterSetName: String?
    /// <p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The name of the DB cluster to create from the source data in the Amazon S3 bucket. This parameter isn't case-sensitive.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    ///         <p>Example: <code>my-cluster1</code>
    ///         </p>
    public let dBClusterIdentifier: String?
    /// <p>The name of the DB cluster parameter group to associate
    ///             with the restored DB cluster. If this argument is omitted, <code>default.aurora5.6</code> is used.
    ///         </p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterParameterGroupName: String?
    /// <p>A DB subnet group to associate with the restored DB cluster.</p>
    ///         <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.
    ///         </p>
    ///         <p>Example: <code>mySubnetgroup</code>
    ///         </p>
    public let dBSubnetGroupName: String?
    /// <p>The database name for the restored DB cluster.</p>
    public let databaseName: String?
    /// <p>A value that indicates whether the DB cluster has deletion protection enabled.
    ///             The database can't be deleted when deletion protection is enabled. By default,
    ///             deletion protection is disabled.
    ///         </p>
    public let deletionProtection: Bool?
    /// <p>Specify the Active Directory directory ID to restore the DB cluster in.
    ///           The domain must be created prior to this operation.
    ///       </p>
    ///          <p>
    ///         For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster.
    ///         For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos Authentication</a>
    ///         in the <i>Amazon Aurora User Guide</i>.
    ///       </p>
    public let domain: String?
    /// <p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p>
    public let domainIAMRoleName: String?
    /// <p>The list of logs that the restored DB cluster is to export to CloudWatch Logs. The values
    ///             in the list depend on the DB engine being used. For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>A value that indicates whether to enable mapping of AWS Identity and Access
    ///             Management (IAM) accounts to database accounts. By default, mapping is disabled.</p>
    ///
    ///         <p>For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
    ///                 IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i>
    ///          </p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>The name of the database engine to be used for this DB cluster.</p>
    ///         <p>Valid Values: <code>aurora</code> (for MySQL 5.6-compatible Aurora), <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), and <code>aurora-postgresql</code>
    ///         </p>
    public let engine: String?
    /// <p>The version number of the database engine to use.</p>
    ///         <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p>
    ///         <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///         <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p>
    ///         <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///         <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p>
    ///         <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///         <p>
    ///             <b>Aurora MySQL</b>
    ///         </p>
    ///         <p>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>, <code>5.7.mysql_aurora.2.04.5</code>
    ///         </p>
    ///         <p>
    ///             <b>Aurora PostgreSQL</b>
    ///         </p>
    ///         <p>Example: <code>9.6.3</code>, <code>10.7</code>
    ///         </p>
    public let engineVersion: String?
    /// <p>The AWS KMS key identifier for an encrypted DB cluster.</p>
    ///         <p>The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK).
    ///             To use a CMK in a different AWS account, specify the key ARN or alias ARN.</p>
    ///         <p>If the StorageEncrypted parameter is enabled, and you do
    ///             not specify a value for the <code>KmsKeyId</code> parameter, then
    ///             Amazon RDS will use your default CMK. There is a
    ///             default CMK for your AWS account. Your AWS account has a different
    ///             default CMK for each AWS Region.</p>
    public let kmsKeyId: String?
    /// <p>The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".</p>
    ///         <p>Constraints: Must contain from 8 to 41 characters.</p>
    public let masterUserPassword: String?
    /// <p>The name of the master user for the restored DB cluster.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must be 1 to 16 letters or numbers.</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't be a reserved word for the chosen database engine.</p>
    ///             </li>
    ///          </ul>
    public let masterUsername: String?
    /// <p>A value that indicates that the restored DB cluster should be associated with the specified option group.</p>
    ///         <p>Permanent options can't be removed from an option group. An option group can't be removed from a
    ///             DB cluster once it is associated with a DB cluster.</p>
    public let optionGroupName: String?
    /// <p>The port number on which the instances in the restored DB cluster accept connections.</p>
    ///         <p>
    ///             Default: <code>3306</code>
    ///         </p>
    public let port: Int?
    /// <p>The daily time range during which automated backups are created
    ///             if automated backups are enabled
    ///             using the <code>BackupRetentionPeriod</code> parameter.
    ///         </p>
    ///         <p>The default is a 30-minute window selected at random from an
    ///             8-hour block of time for each AWS Region.
    ///             To view the time blocks available, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow">
    ///                 Backup window</a> in the <i>Amazon Aurora User Guide.</i>
    ///         </p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be in Universal Coordinated Time (UTC).</p>
    ///             </li>
    ///             <li>
    ///                <p>Must not conflict with the preferred maintenance window.</p>
    ///             </li>
    ///             <li>
    ///                <p>Must be at least 30 minutes.</p>
    ///             </li>
    ///          </ul>
    public let preferredBackupWindow: String?
    /// <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p>
    ///         <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code>
    ///         </p>
    ///         <p>The default is a 30-minute window selected at random from an
    ///             8-hour block of time for each AWS Region, occurring on a random day of the
    ///             week. To see the time blocks available, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora">
    ///                 Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Aurora User Guide.</i>
    ///         </p>
    ///         <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>
    ///         <p>Constraints: Minimum 30-minute window.</p>
    public let preferredMaintenanceWindow: String?
    /// <p>The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.</p>
    public let s3BucketName: String?
    /// <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes
    ///         Amazon RDS to access the Amazon S3 bucket on your behalf.</p>
    public let s3IngestionRoleArn: String?
    /// <p>The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster.
    ///         If you do not specify a <b>SourceS3Prefix</b> value, then the Amazon Aurora DB cluster is
    ///         created by using all of the files in the Amazon S3 bucket.</p>
    public let s3Prefix: String?
    /// <p>The identifier for the database engine that was backed up to create the files stored in the
    ///             Amazon S3 bucket.
    ///         </p>
    ///         <p>Valid values: <code>mysql</code>
    ///          </p>
    public let sourceEngine: String?
    /// <p>The version of the database that the backup files were created from.</p>
    ///         <p>MySQL versions 5.5, 5.6, and 5.7 are supported.
    ///         </p>
    ///         <p>Example: <code>5.6.40</code>, <code>5.7.28</code>
    ///          </p>
    public let sourceEngineVersion: String?
    /// <p>A value that indicates whether the restored DB cluster is encrypted.</p>
    public let storageEncrypted: Bool?
    /// <p>A list of tags.
    ///           For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    public let tags: [Tag]?
    /// <p>A list of EC2 VPC security groups to associate with the restored DB cluster.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        availabilityZones: [String]? = nil,
        backtrackWindow: Int? = nil,
        backupRetentionPeriod: Int? = nil,
        characterSetName: String? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterParameterGroupName: String? = nil,
        dBSubnetGroupName: String? = nil,
        databaseName: String? = nil,
        deletionProtection: Bool? = nil,
        domain: String? = nil,
        domainIAMRoleName: String? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        kmsKeyId: String? = nil,
        masterUserPassword: String? = nil,
        masterUsername: String? = nil,
        optionGroupName: String? = nil,
        port: Int? = nil,
        preferredBackupWindow: String? = nil,
        preferredMaintenanceWindow: String? = nil,
        s3BucketName: String? = nil,
        s3IngestionRoleArn: String? = nil,
        s3Prefix: String? = nil,
        sourceEngine: String? = nil,
        sourceEngineVersion: String? = nil,
        storageEncrypted: Bool? = nil,
        tags: [Tag]? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.backtrackWindow = backtrackWindow
        self.backupRetentionPeriod = backupRetentionPeriod
        self.characterSetName = characterSetName
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.dBSubnetGroupName = dBSubnetGroupName
        self.databaseName = databaseName
        self.deletionProtection = deletionProtection
        self.domain = domain
        self.domainIAMRoleName = domainIAMRoleName
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engine = engine
        self.engineVersion = engineVersion
        self.kmsKeyId = kmsKeyId
        self.masterUserPassword = masterUserPassword
        self.masterUsername = masterUsername
        self.optionGroupName = optionGroupName
        self.port = port
        self.preferredBackupWindow = preferredBackupWindow
        self.preferredMaintenanceWindow = preferredMaintenanceWindow
        self.s3BucketName = s3BucketName
        self.s3IngestionRoleArn = s3IngestionRoleArn
        self.s3Prefix = s3Prefix
        self.sourceEngine = sourceEngine
        self.sourceEngineVersion = sourceEngineVersion
        self.storageEncrypted = storageEncrypted
        self.tags = tags
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
