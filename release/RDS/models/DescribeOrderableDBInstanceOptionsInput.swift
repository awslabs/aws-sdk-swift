// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribeOrderableDBInstanceOptionsInput: Equatable {
    /// <p>The Availability Zone group associated with a Local Zone. Specify this parameter to retrieve available offerings for the Local Zones in the group.</p>
    ///         <p>Omit this parameter to show the available offerings in the specified AWS Region.</p>
    public let availabilityZoneGroup: String?
    /// <p>The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</p>
    public let dBInstanceClass: String?
    /// <p>The name of the engine to retrieve DB instance options for.</p>
    ///          <p>Valid Values:
    ///       </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>aurora</code> (for MySQL 5.6-compatible Aurora)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora)</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>aurora-postgresql</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>mariadb</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>mysql</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se2</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se1</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>postgres</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ex</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-web</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let engine: String?
    /// <p>The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.</p>
    public let engineVersion: String?
    /// <p>This parameter isn't currently supported.</p>
    public let filters: [Filter]?
    /// <p>The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.</p>
    public let licenseModel: String?
    /// <p>
    ///             An optional pagination token provided by a previous
    ///             DescribeOrderableDBInstanceOptions request.
    ///             If this parameter is specified, the response includes
    ///             only records beyond the marker,
    ///             up to the value specified by <code>MaxRecords</code> .
    ///         </p>
    public let marker: String?
    /// <p>
    ///             The maximum number of records to include in the response.
    ///             If more records exist than the specified <code>MaxRecords</code> value,
    ///             a pagination token called a marker is included in the response so that
    ///             you can retrieve the remaining results.
    ///         </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>A value that indicates whether to show only VPC or non-VPC offerings.</p>
    public let vpc: Bool?

    public init (
        availabilityZoneGroup: String? = nil,
        dBInstanceClass: String? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        filters: [Filter]? = nil,
        licenseModel: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        vpc: Bool? = nil
    )
    {
        self.availabilityZoneGroup = availabilityZoneGroup
        self.dBInstanceClass = dBInstanceClass
        self.engine = engine
        self.engineVersion = engineVersion
        self.filters = filters
        self.licenseModel = licenseModel
        self.marker = marker
        self.maxRecords = maxRecords
        self.vpc = vpc
    }
}
