// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DownloadDBLogFilePortionOutputBody: Equatable {
    public let logFileData: String?
    public let marker: String?
    public let additionalDataPending: Bool
}

extension DownloadDBLogFilePortionOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case additionalDataPending = "AdditionalDataPending"
        case logFileData = "LogFileData"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DownloadDBLogFilePortionResult"))
        let logFileDataDecoded = try containerValues.decodeIfPresent(String.self, forKey: .logFileData)
        logFileData = logFileDataDecoded
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        let additionalDataPendingDecoded = try containerValues.decode(Bool.self, forKey: .additionalDataPending)
        additionalDataPending = additionalDataPendingDecoded
    }
}
