// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SourceRegion: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case endpoint = "Endpoint"
        case regionName = "RegionName"
        case status = "Status"
        case supportsDBInstanceAutomatedBackupsReplication = "SupportsDBInstanceAutomatedBackupsReplication"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if let endpoint = endpoint {
            try container.encode(endpoint, forKey: Key("Endpoint"))
        }
        if let regionName = regionName {
            try container.encode(regionName, forKey: Key("RegionName"))
        }
        if let status = status {
            try container.encode(status, forKey: Key("Status"))
        }
        if supportsDBInstanceAutomatedBackupsReplication != false {
            try container.encode(supportsDBInstanceAutomatedBackupsReplication, forKey: Key("SupportsDBInstanceAutomatedBackupsReplication"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let regionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .regionName)
        regionName = regionNameDecoded
        let endpointDecoded = try containerValues.decodeIfPresent(String.self, forKey: .endpoint)
        endpoint = endpointDecoded
        let statusDecoded = try containerValues.decodeIfPresent(String.self, forKey: .status)
        status = statusDecoded
        let supportsDBInstanceAutomatedBackupsReplicationDecoded = try containerValues.decode(Bool.self, forKey: .supportsDBInstanceAutomatedBackupsReplication)
        supportsDBInstanceAutomatedBackupsReplication = supportsDBInstanceAutomatedBackupsReplicationDecoded
    }
}
