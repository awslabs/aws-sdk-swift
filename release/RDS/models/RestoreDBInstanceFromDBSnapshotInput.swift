// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct RestoreDBInstanceFromDBSnapshotInput: Equatable {
    /// <p>A value that indicates whether minor version upgrades are applied automatically to the DB instance during the maintenance window.</p>
    public let autoMinorVersionUpgrade: Bool?
    /// <p>The Availability Zone (AZ) where the DB instance will be created.</p>
    ///          <p>Default: A random, system-chosen Availability Zone.</p>
    ///          <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p>
    ///          <p>Example: <code>us-east-1a</code>
    ///          </p>
    public let availabilityZone: String?
    /// <p>A value that indicates whether to copy all tags from the restored DB instance to snapshots of the DB instance. By default, tags are not copied.</p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The compute and memory capacity of the Amazon RDS DB instance, for example, <code>db.m4.large</code>.
    ///           Not all DB instance classes are available in all AWS Regions, or for all database engines.
    ///           For the full list of DB instance classes,
    ///           and availability for your engine, see
    ///           <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    ///          <p>Default: The same DBInstanceClass as the original DB instance.</p>
    public let dBInstanceClass: String?
    /// <p>Name of the DB instance to create from the DB snapshot. This parameter isn't case-sensitive.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 numbers, letters, or hyphens</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>my-snapshot-id</code>
    ///          </p>
    public let dBInstanceIdentifier: String?
    /// <p>The database name for the restored DB instance.</p>
    ///          <note>
    ///             <p>This parameter doesn't apply to the MySQL, PostgreSQL, or MariaDB engines.</p>
    ///          </note>
    public let dBName: String?
    /// <p>The name of the DB parameter group to associate with this DB instance.</p>
    ///         <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code>
    ///             for the specified DB engine is used.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>If supplied, must match the name of an existing DBParameterGroup.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Must be 1 to 255 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                 <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Can't end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    public let dBParameterGroupName: String?
    /// <p>The identifier for the DB snapshot to restore from.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///               <p>Must match the identifier of an existing DBSnapshot.</p>
    ///             </li>
    ///             <li>
    ///               <p>If you are restoring from a shared manual DB snapshot, the <code>DBSnapshotIdentifier</code>
    ///               must be the ARN of the shared DB snapshot.</p>
    ///             </li>
    ///          </ul>
    public let dBSnapshotIdentifier: String?
    /// <p>The DB subnet group name to use for the new instance.</p>
    ///          <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>
    ///          <p>Example: <code>mySubnetgroup</code>
    ///          </p>
    public let dBSubnetGroupName: String?
    /// <p>A value that indicates whether the DB instance has deletion protection enabled.
    ///             The database can't be deleted when deletion protection is enabled. By default,
    ///             deletion protection is disabled. For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html">
    ///                 Deleting a DB Instance</a>.
    ///         </p>
    public let deletionProtection: Bool?
    /// <p>Specify the Active Directory directory ID to restore the DB instance in.
    ///            The domain must be created prior to this operation. Currently, only MySQL, Microsoft SQL
    ///            Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html">
    ///            Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p>
    public let domain: String?
    /// <p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p>
    public let domainIAMRoleName: String?
    /// <p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values
    ///             in the list depend on the DB engine being used. For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>A value that indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance.</p>
    ///         <p>A <i>CoIP</i> provides local or external connectivity to resources in
    ///             your Outpost subnets through your on-premises network. For some use cases, a CoIP can
    ///             provide lower latency for connections to the DB instance from outside of its virtual
    ///             private cloud (VPC) on your local network.</p>
    ///         <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Working with Amazon RDS on AWS Outposts</a>
    ///             in the <i>Amazon RDS User Guide</i>.</p>
    ///         <p>For more information about CoIPs, see <a href="https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing">Customer-owned IP addresses</a>
    ///             in the <i>AWS Outposts User Guide</i>.</p>
    public let enableCustomerOwnedIp: Bool?
    /// <p>A value that indicates whether to enable mapping of AWS Identity and Access
    ///           Management (IAM) accounts to database accounts. By default, mapping is disabled.</p>
    ///
    ///          <p>For more information about IAM database authentication, see
    ///           <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html">
    ///               IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>The database engine to use for the new instance.</p>
    ///          <p>Default: The same as source</p>
    ///          <p>Constraint: Must be compatible with the engine of the source. For example, you can restore a MariaDB 10.1 DB instance from a MySQL 5.6 snapshot.</p>
    ///
    ///          <p>Valid Values:</p>
    ///
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>mariadb</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>mysql</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se2</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se1</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>postgres</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ex</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-web</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let engine: String?
    /// <p>Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second.
    ///           If this parameter isn't specified, the IOPS value is taken from the backup.
    ///           If this parameter is set to 0, the new instance is converted to a non-PIOPS instance.
    ///           The conversion takes additional time, though your DB instance is available for connections before the conversion starts.
    ///       </p>
    ///          <p>The provisioned IOPS value must follow the requirements for your database engine.
    ///           For more information, see
    ///           <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS Storage to Improve Performance</a>
    ///           in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    ///          <p>Constraints: Must be an integer greater than 1000.</p>
    public let iops: Int?
    /// <p>License model information for the restored DB instance.</p>
    ///          <p>Default: Same as source.</p>
    ///          <p>
    ///             Valid values:  <code>license-included</code> | <code>bring-your-own-license</code> | <code>general-public-license</code>
    ///          </p>
    public let licenseModel: String?
    /// <p>A value that indicates whether the DB instance is a Multi-AZ deployment.</p>
    ///          <p>Constraint: You can't specify the <code>AvailabilityZone</code> parameter if the DB instance is a Multi-AZ deployment.</p>
    public let multiAZ: Bool?
    /// <p>The name of the option group to be used for the restored DB instance.</p>
    ///
    ///          <p>Permanent options, such as the TDE option for Oracle Advanced Security TDE, can't be removed from an option group, and that option group can't be removed from a DB instance once it is associated with a DB instance</p>
    public let optionGroupName: String?
    /// <p>The port number on which the database accepts connections.</p>
    ///          <p>Default: The same port as the original DB instance</p>
    ///          <p>Constraints: Value must be <code>1150-65535</code>
    ///          </p>
    public let port: Int?
    /// <p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p>
    public let processorFeatures: [ProcessorFeature]?
    /// <p>A value that indicates whether the DB instance is publicly accessible.</p>
    ///          <p>When the DB instance is publicly accessible, its DNS endpoint resolves to the private IP address from within the DB instance's VPC,
    ///           and to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses,
    ///           and that public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p>
    ///          <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p>
    ///          <p>For more information, see <a>CreateDBInstance</a>.</p>
    public let publiclyAccessible: Bool?
    /// <p>Specifies the storage type to be associated with the DB instance.</p>
    ///          <p>
    ///             Valid values: <code>standard | gp2 | io1</code>
    ///          </p>
    ///          <p>
    ///             If you specify <code>io1</code>, you must also include a value for the
    ///             <code>Iops</code> parameter.
    ///         </p>
    ///          <p>
    ///             Default: <code>io1</code> if the <code>Iops</code> parameter
    ///             is specified, otherwise <code>gp2</code>
    ///          </p>
    public let storageType: String?
    /// <p>A list of tags.
    ///           For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    public let tags: [Tag]?
    /// <p>The ARN from the key store with which to associate the instance for TDE encryption.</p>
    public let tdeCredentialArn: String?
    /// <p>The password for the given ARN from the key store in order to access the device.</p>
    public let tdeCredentialPassword: String?
    /// <p>A value that indicates whether the DB instance class of the DB instance uses its default
    ///             processor features.</p>
    public let useDefaultProcessorFeatures: Bool?
    /// <p>
    ///             A list of EC2 VPC security groups to associate with this DB instance.
    ///         </p>
    ///         <p>
    ///             Default: The default EC2 VPC security group for the DB subnet group's VPC.
    ///         </p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        autoMinorVersionUpgrade: Bool? = nil,
        availabilityZone: String? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBInstanceClass: String? = nil,
        dBInstanceIdentifier: String? = nil,
        dBName: String? = nil,
        dBParameterGroupName: String? = nil,
        dBSnapshotIdentifier: String? = nil,
        dBSubnetGroupName: String? = nil,
        deletionProtection: Bool? = nil,
        domain: String? = nil,
        domainIAMRoleName: String? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        enableCustomerOwnedIp: Bool? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        engine: String? = nil,
        iops: Int? = nil,
        licenseModel: String? = nil,
        multiAZ: Bool? = nil,
        optionGroupName: String? = nil,
        port: Int? = nil,
        processorFeatures: [ProcessorFeature]? = nil,
        publiclyAccessible: Bool? = nil,
        storageType: String? = nil,
        tags: [Tag]? = nil,
        tdeCredentialArn: String? = nil,
        tdeCredentialPassword: String? = nil,
        useDefaultProcessorFeatures: Bool? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.autoMinorVersionUpgrade = autoMinorVersionUpgrade
        self.availabilityZone = availabilityZone
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBName = dBName
        self.dBParameterGroupName = dBParameterGroupName
        self.dBSnapshotIdentifier = dBSnapshotIdentifier
        self.dBSubnetGroupName = dBSubnetGroupName
        self.deletionProtection = deletionProtection
        self.domain = domain
        self.domainIAMRoleName = domainIAMRoleName
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableCustomerOwnedIp = enableCustomerOwnedIp
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engine = engine
        self.iops = iops
        self.licenseModel = licenseModel
        self.multiAZ = multiAZ
        self.optionGroupName = optionGroupName
        self.port = port
        self.processorFeatures = processorFeatures
        self.publiclyAccessible = publiclyAccessible
        self.storageType = storageType
        self.tags = tags
        self.tdeCredentialArn = tdeCredentialArn
        self.tdeCredentialPassword = tdeCredentialPassword
        self.useDefaultProcessorFeatures = useDefaultProcessorFeatures
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
