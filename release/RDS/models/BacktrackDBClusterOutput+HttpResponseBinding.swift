// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension BacktrackDBClusterOutput: HttpResponseBinding {
    public init (httpResponse: HttpResponse, decoder: ResponseDecoder? = nil) throws {
        if case .data(let data) = httpResponse.body,
            let unwrappedData = data,
            let responseDecoder = decoder {
            let output: BacktrackDBClusterOutputBody = try responseDecoder.decode(responseBody: unwrappedData)
            self.backtrackIdentifier = output.backtrackIdentifier
            self.backtrackRequestCreationTime = output.backtrackRequestCreationTime
            self.backtrackTo = output.backtrackTo
            self.backtrackedFrom = output.backtrackedFrom
            self.dBClusterIdentifier = output.dBClusterIdentifier
            self.status = output.status
        } else {
            self.backtrackIdentifier = nil
            self.backtrackRequestCreationTime = nil
            self.backtrackTo = nil
            self.backtrackedFrom = nil
            self.dBClusterIdentifier = nil
            self.status = nil
        }
    }
}
