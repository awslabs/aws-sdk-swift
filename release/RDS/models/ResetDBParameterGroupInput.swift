// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct ResetDBParameterGroupInput: Equatable {
    /// <p>The name of the DB parameter group.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match the name of an existing <code>DBParameterGroup</code>.</p>
    ///             </li>
    ///          </ul>
    public let dBParameterGroupName: String?
    /// <p>To reset the entire DB parameter group, specify the <code>DBParameterGroup</code>
    ///             name and <code>ResetAllParameters</code> parameters. To reset specific parameters,
    ///             provide a list of the following: <code>ParameterName</code> and
    ///             <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in a single
    ///             request.</p>
    ///          <p>
    ///             <b>MySQL</b>
    ///          </p>
    ///          <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code>
    ///          </p>
    ///          <p>You can use the immediate value with dynamic parameters only. You can use
    ///             the <code>pending-reboot</code> value for both dynamic and static parameters, and changes
    ///             are applied when DB instance reboots.</p>
    ///          <p>
    ///             <b>MariaDB</b>
    ///          </p>
    ///          <p>Valid Values (for Apply method): <code>immediate</code> | <code>pending-reboot</code>
    ///          </p>
    ///          <p>You can use the immediate value with dynamic parameters only. You can use
    ///       the <code>pending-reboot</code> value for both dynamic and static parameters, and changes
    ///       are applied when DB instance reboots.</p>
    ///          <p>
    ///             <b>Oracle</b>
    ///          </p>
    ///          <p>Valid Values (for Apply method): <code>pending-reboot</code>
    ///          </p>
    public let parameters: [Parameter]?
    /// <p>
    ///           A value that indicates whether to reset all parameters in the DB parameter group to default values.
    ///           By default, all parameters in the DB parameter group are reset to default values.
    ///         </p>
    public let resetAllParameters: Bool

    public init (
        dBParameterGroupName: String? = nil,
        parameters: [Parameter]? = nil,
        resetAllParameters: Bool = false
    )
    {
        self.dBParameterGroupName = dBParameterGroupName
        self.parameters = parameters
        self.resetAllParameters = resetAllParameters
    }
}
