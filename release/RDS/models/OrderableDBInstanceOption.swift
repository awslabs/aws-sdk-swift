// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains a list of available options for a DB instance.</p>
///          <p>
///           This data type is used as a response element in the <code>DescribeOrderableDBInstanceOptions</code> action.
///         </p>
public struct OrderableDBInstanceOption: Equatable {
    /// <p>The Availability Zone group for a DB instance.</p>
    public let availabilityZoneGroup: String?
    /// <p>A list of Availability Zones for a DB instance.</p>
    public let availabilityZones: [AvailabilityZone]?
    /// <p>A list of the available processor features for the DB instance class of a DB instance.</p>
    public let availableProcessorFeatures: [AvailableProcessorFeature]?
    /// <p>The DB instance class for a DB instance.</p>
    public let dBInstanceClass: String?
    /// <p>The engine type of a DB instance.</p>
    public let engine: String?
    /// <p>The engine version of a DB instance.</p>
    public let engineVersion: String?
    /// <p>The license model for a DB instance.</p>
    public let licenseModel: String?
    /// <p>Maximum total provisioned IOPS for a DB instance.</p>
    public let maxIopsPerDbInstance: Int?
    /// <p>Maximum provisioned IOPS per GiB for a DB instance.</p>
    public let maxIopsPerGib: Double?
    /// <p>Maximum storage size for a DB instance.</p>
    public let maxStorageSize: Int?
    /// <p>Minimum total provisioned IOPS for a DB instance.</p>
    public let minIopsPerDbInstance: Int?
    /// <p>Minimum provisioned IOPS per GiB for a DB instance.</p>
    public let minIopsPerGib: Double?
    /// <p>Minimum storage size for a DB instance.</p>
    public let minStorageSize: Int?
    /// <p>Indicates whether a DB instance is Multi-AZ capable.</p>
    public let multiAZCapable: Bool
    /// <p>Whether a DB instance supports RDS on Outposts.</p>
    ///         <p>For more information about RDS on Outposts, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html">Amazon RDS on AWS Outposts</a>
    ///             in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    public let outpostCapable: Bool
    /// <p>Indicates whether a DB instance can have a read replica.</p>
    public let readReplicaCapable: Bool
    /// <p>Indicates the storage type for a DB instance.</p>
    public let storageType: String?
    /// <p>A list of the supported DB engine modes.</p>
    public let supportedEngineModes: [String]?
    /// <p>Indicates whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.</p>
    public let supportsEnhancedMonitoring: Bool
    /// <p>A value that indicates whether you can use Aurora global databases with a specific combination of other DB engine attributes.</p>
    public let supportsGlobalDatabases: Bool
    /// <p>Indicates whether a DB instance supports IAM database authentication.</p>
    public let supportsIAMDatabaseAuthentication: Bool
    /// <p>Indicates whether a DB instance supports provisioned IOPS.</p>
    public let supportsIops: Bool
    /// <p>Whether a DB instance supports Kerberos Authentication.</p>
    public let supportsKerberosAuthentication: Bool?
    /// <p>True if a DB instance supports Performance Insights, otherwise false.</p>
    public let supportsPerformanceInsights: Bool
    /// <p>Whether Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.</p>
    public let supportsStorageAutoscaling: Bool?
    /// <p>Indicates whether a DB instance supports encrypted storage.</p>
    public let supportsStorageEncryption: Bool
    /// <p>Indicates whether a DB instance is in a VPC.</p>
    public let vpc: Bool

    public init (
        availabilityZoneGroup: String? = nil,
        availabilityZones: [AvailabilityZone]? = nil,
        availableProcessorFeatures: [AvailableProcessorFeature]? = nil,
        dBInstanceClass: String? = nil,
        engine: String? = nil,
        engineVersion: String? = nil,
        licenseModel: String? = nil,
        maxIopsPerDbInstance: Int? = nil,
        maxIopsPerGib: Double? = nil,
        maxStorageSize: Int? = nil,
        minIopsPerDbInstance: Int? = nil,
        minIopsPerGib: Double? = nil,
        minStorageSize: Int? = nil,
        multiAZCapable: Bool = false,
        outpostCapable: Bool = false,
        readReplicaCapable: Bool = false,
        storageType: String? = nil,
        supportedEngineModes: [String]? = nil,
        supportsEnhancedMonitoring: Bool = false,
        supportsGlobalDatabases: Bool = false,
        supportsIAMDatabaseAuthentication: Bool = false,
        supportsIops: Bool = false,
        supportsKerberosAuthentication: Bool? = nil,
        supportsPerformanceInsights: Bool = false,
        supportsStorageAutoscaling: Bool? = nil,
        supportsStorageEncryption: Bool = false,
        vpc: Bool = false
    )
    {
        self.availabilityZoneGroup = availabilityZoneGroup
        self.availabilityZones = availabilityZones
        self.availableProcessorFeatures = availableProcessorFeatures
        self.dBInstanceClass = dBInstanceClass
        self.engine = engine
        self.engineVersion = engineVersion
        self.licenseModel = licenseModel
        self.maxIopsPerDbInstance = maxIopsPerDbInstance
        self.maxIopsPerGib = maxIopsPerGib
        self.maxStorageSize = maxStorageSize
        self.minIopsPerDbInstance = minIopsPerDbInstance
        self.minIopsPerGib = minIopsPerGib
        self.minStorageSize = minStorageSize
        self.multiAZCapable = multiAZCapable
        self.outpostCapable = outpostCapable
        self.readReplicaCapable = readReplicaCapable
        self.storageType = storageType
        self.supportedEngineModes = supportedEngineModes
        self.supportsEnhancedMonitoring = supportsEnhancedMonitoring
        self.supportsGlobalDatabases = supportsGlobalDatabases
        self.supportsIAMDatabaseAuthentication = supportsIAMDatabaseAuthentication
        self.supportsIops = supportsIops
        self.supportsKerberosAuthentication = supportsKerberosAuthentication
        self.supportsPerformanceInsights = supportsPerformanceInsights
        self.supportsStorageAutoscaling = supportsStorageAutoscaling
        self.supportsStorageEncryption = supportsStorageEncryption
        self.vpc = vpc
    }
}
