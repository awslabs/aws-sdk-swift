// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>This data type is used as a response element in the <code>DescribeDBClusterBacktracks</code> action.</p>
public struct BacktrackDBClusterOutput: Equatable {
    /// <p>Contains the backtrack identifier.</p>
    public let backtrackIdentifier: String?
    /// <p>The timestamp of the time at which the backtrack was requested.</p>
    public let backtrackRequestCreationTime: Date?
    /// <p>The timestamp of the time to which the DB cluster was backtracked.</p>
    public let backtrackTo: Date?
    /// <p>The timestamp of the time from which the DB cluster was backtracked.</p>
    public let backtrackedFrom: Date?
    /// <p>Contains a user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.</p>
    public let dBClusterIdentifier: String?
    /// <p>The status of the backtrack. This property returns one of the following
    ///             values:</p>
    ///         <ul>
    ///             <li>
    ///                <p>
    ///                   <code>applying</code> - The backtrack is currently being applied to or rolled back from the DB cluster.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>completed</code> - The backtrack has successfully been applied to or rolled back from the DB cluster.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>failed</code> - An error occurred while the backtrack was applied to or rolled back from the DB cluster.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>pending</code> - The backtrack is currently pending application to or rollback from the DB cluster.</p>
    ///             </li>
    ///          </ul>
    public let status: String?

    public init (
        backtrackIdentifier: String? = nil,
        backtrackRequestCreationTime: Date? = nil,
        backtrackTo: Date? = nil,
        backtrackedFrom: Date? = nil,
        dBClusterIdentifier: String? = nil,
        status: String? = nil
    )
    {
        self.backtrackIdentifier = backtrackIdentifier
        self.backtrackRequestCreationTime = backtrackRequestCreationTime
        self.backtrackTo = backtrackTo
        self.backtrackedFrom = backtrackedFrom
        self.dBClusterIdentifier = dBClusterIdentifier
        self.status = status
    }
}
