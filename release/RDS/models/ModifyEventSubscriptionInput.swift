// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct ModifyEventSubscriptionInput: Equatable {
    /// <p>
    ///             A value that indicates whether to activate the subscription.
    ///       </p>
    public let enabled: Bool?
    /// <p>
    ///             A list of event categories for a source type (<code>SourceType</code>) that you want to subscribe to.
    ///             You can see a list of the categories for a given source type
    ///             in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html">Events</a> in the <i>Amazon RDS User Guide</i>
    ///             or by using the <code>DescribeEventCategories</code> operation.
    ///         </p>
    public let eventCategories: [String]?
    /// <p>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</p>
    public let snsTopicArn: String?
    /// <p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. If this value isn't specified, all events are returned.</p>
    ///          <p>Valid values: <code>db-instance</code> | <code>db-cluster</code> | <code>db-parameter-group</code> | <code>db-security-group</code> | <code>db-snapshot</code> | <code>db-cluster-snapshot</code>
    ///          </p>
    public let sourceType: String?
    /// <p>The name of the RDS event notification subscription.</p>
    public let subscriptionName: String?

    public init (
        enabled: Bool? = nil,
        eventCategories: [String]? = nil,
        snsTopicArn: String? = nil,
        sourceType: String? = nil,
        subscriptionName: String? = nil
    )
    {
        self.enabled = enabled
        self.eventCategories = eventCategories
        self.snsTopicArn = snsTopicArn
        self.sourceType = sourceType
        self.subscriptionName = subscriptionName
    }
}
