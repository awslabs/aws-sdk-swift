// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Provides information about a pending maintenance action for a resource.</p>
public struct PendingMaintenanceAction: Equatable {
    /// <p>The type of pending maintenance action that is available for the resource.
    ///           Valid actions are <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>,
    ///           and <code>ca-certificate-rotation</code>.</p>
    public let action: String?
    /// <p>The date of the maintenance window when the action is applied.
    ///            The maintenance action is applied to the resource during
    ///            its first maintenance window after this date.</p>
    public let autoAppliedAfterDate: Date?
    /// <p>The effective date when the pending maintenance action is applied
    ///            to the resource. This date takes into account opt-in requests received from
    ///            the <code>ApplyPendingMaintenanceAction</code> API, the <code>AutoAppliedAfterDate</code>,
    ///            and the <code>ForcedApplyDate</code>. This value is blank if an
    ///            opt-in request has not been received and nothing has been specified as
    ///            <code>AutoAppliedAfterDate</code> or <code>ForcedApplyDate</code>.</p>
    public let currentApplyDate: Date?
    /// <p>A description providing more detail about the maintenance action.</p>
    public let description: String?
    /// <p>The date when the maintenance action is automatically applied.</p>
    ///          <p>On this date, the maintenance action is applied to the resource as soon as possible,
    ///             regardless of the maintenance window for the resource. There might be a delay of
    ///             one or more days from this date before the maintenance action is applied.</p>
    public let forcedApplyDate: Date?
    /// <p>Indicates the type of opt-in request that has been received for the resource.</p>
    public let optInStatus: String?

    public init (
        action: String? = nil,
        autoAppliedAfterDate: Date? = nil,
        currentApplyDate: Date? = nil,
        description: String? = nil,
        forcedApplyDate: Date? = nil,
        optInStatus: String? = nil
    )
    {
        self.action = action
        self.autoAppliedAfterDate = autoAppliedAfterDate
        self.currentApplyDate = currentApplyDate
        self.description = description
        self.forcedApplyDate = forcedApplyDate
        self.optInStatus = optInStatus
    }
}
