// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct RestoreDBClusterFromSnapshotInput: Equatable {
    /// <p>Provides the list of Availability Zones (AZs) where instances in the restored DB
    ///             cluster can be created.</p>
    public let availabilityZones: [String]?
    /// <p>The target backtrack window, in seconds. To disable backtracking, set this value to
    ///             0.</p>
    ///         <note>
    ///             <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p>
    ///         </note>
    ///         <p>Default: 0</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p>
    ///             </li>
    ///          </ul>
    public let backtrackWindow: Int?
    /// <p>A value that indicates whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p>
    public let copyTagsToSnapshot: Bool?
    /// <p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot.
    ///             This parameter isn't case-sensitive.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>
    ///             </li>
    ///             <li>
    ///                <p>First character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>my-snapshot-id</code>
    ///          </p>
    public let dBClusterIdentifier: String?
    /// <p>The name of the DB cluster parameter group to associate with this DB cluster. If this
    ///             argument is omitted, the default DB cluster parameter group for the specified engine is
    ///             used.</p>
    ///         <p>Constraints:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>If supplied, must match the name of an existing default DB cluster parameter group.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Must be 1 to 255 letters, numbers, or hyphens.</p>
    ///             </li>
    ///             <li>
    ///                 <p>First character must be a letter.</p>
    ///             </li>
    ///             <li>
    ///                 <p>Can't end with a hyphen or contain two consecutive hyphens.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterParameterGroupName: String?
    /// <p>The name of the DB subnet group to use for the new DB cluster.</p>
    ///          <p>Constraints: If supplied, must match the name of an existing DB subnet group.</p>
    ///          <p>Example: <code>mySubnetgroup</code>
    ///          </p>
    public let dBSubnetGroupName: String?
    /// <p>The database name for the restored DB cluster.</p>
    public let databaseName: String?
    /// <p>A value that indicates whether the DB cluster has deletion protection enabled.
    ///             The database can't be deleted when deletion protection is enabled. By default,
    ///             deletion protection is disabled.
    ///         </p>
    public let deletionProtection: Bool?
    /// <p>Specify the Active Directory directory ID to restore the DB cluster in.
    ///            The domain must be created prior to this operation. Currently, only MySQL, Microsoft SQL
    ///            Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html">
    ///             Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.
    ///        </p>
    public let domain: String?
    /// <p>Specify the name of the IAM role to be used when making API calls to the Directory Service.</p>
    public let domainIAMRoleName: String?
    /// <p>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs.
    ///             The values in the list depend on the DB engine being used. For more information, see
    ///                 <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon
    ///                 Aurora User Guide</i>.</p>
    public let enableCloudwatchLogsExports: [String]?
    /// <p>A value that indicates whether to enable mapping of AWS Identity and Access
    ///             Management (IAM) accounts to database accounts. By default, mapping is disabled.</p>
    ///
    ///         <p>For more information, see
    ///             <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html">
    ///                 IAM Database Authentication</a> in the <i>Amazon Aurora User Guide.</i>
    ///          </p>
    public let enableIAMDatabaseAuthentication: Bool?
    /// <p>The database engine to use for the new DB cluster.</p>
    ///          <p>Default: The same as source</p>
    ///          <p>Constraint: Must be compatible with the engine of the source</p>
    public let engine: String?
    /// <p>The DB engine mode of the DB cluster, either <code>provisioned</code>, <code>serverless</code>,
    ///             <code>parallelquery</code>, <code>global</code>, or <code>multimaster</code>.</p>
    ///         <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html">
    ///             CreateDBCluster</a>.</p>
    public let engineMode: String?
    /// <p>The version of the database engine to use for the new DB cluster.</p>
    ///          <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///          <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///          <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code>
    ///          </p>
    ///          <note>
    ///             <p>If you aren't using the default engine version, then you must specify the engine version.</p>
    ///          </note>
    ///          <p>
    ///             <b>Aurora MySQL</b>
    ///          </p>
    ///          <p>Example: <code>5.6.10a</code>, <code>5.6.mysql_aurora.1.19.2</code>, <code>5.7.12</code>, <code>5.7.mysql_aurora.2.04.5</code>
    ///          </p>
    ///          <p>
    ///             <b>Aurora PostgreSQL</b>
    ///          </p>
    ///          <p>Example: <code>9.6.3</code>, <code>10.7</code>
    ///          </p>
    public let engineVersion: String?
    /// <p>The AWS KMS key identifier to use when restoring an encrypted DB cluster from a DB
    ///             snapshot or DB cluster snapshot.</p>
    ///          <p>The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK).
    ///           To use a CMK in a different AWS account, specify the key ARN or alias ARN.</p>
    ///         <p>When you don't specify a value for the <code>KmsKeyId</code> parameter, then the
    ///             following occurs:</p>
    ///         <ul>
    ///             <li>
    ///                 <p>If the DB snapshot or DB cluster snapshot in
    ///                         <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster
    ///                     is encrypted using the AWS KMS CMK that was used to encrypt the DB snapshot or DB
    ///                     cluster snapshot.</p>
    ///             </li>
    ///             <li>
    ///                 <p>If the DB snapshot or DB cluster snapshot in
    ///                     <code>SnapshotIdentifier</code> isn't encrypted, then the restored DB cluster
    ///                     isn't encrypted.</p>
    ///             </li>
    ///          </ul>
    public let kmsKeyId: String?
    /// <p>The name of the option group to use for the restored DB cluster.</p>
    public let optionGroupName: String?
    /// <p>The port number on which the new DB cluster accepts connections.</p>
    ///          <p>Constraints: This value must be <code>1150-65535</code>
    ///         </p>
    ///          <p>Default: The same port as the original DB cluster.</p>
    public let port: Int?
    /// <p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p>
    public let scalingConfiguration: ScalingConfiguration?
    /// <p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p>
    ///         <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB
    ///             cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match the identifier of an existing Snapshot.</p>
    ///             </li>
    ///          </ul>
    public let snapshotIdentifier: String?
    /// <p>The tags to be assigned to the restored DB cluster.</p>
    public let tags: [Tag]?
    /// <p>A list of VPC security groups that the new DB cluster will belong to.</p>
    public let vpcSecurityGroupIds: [String]?

    public init (
        availabilityZones: [String]? = nil,
        backtrackWindow: Int? = nil,
        copyTagsToSnapshot: Bool? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterParameterGroupName: String? = nil,
        dBSubnetGroupName: String? = nil,
        databaseName: String? = nil,
        deletionProtection: Bool? = nil,
        domain: String? = nil,
        domainIAMRoleName: String? = nil,
        enableCloudwatchLogsExports: [String]? = nil,
        enableIAMDatabaseAuthentication: Bool? = nil,
        engine: String? = nil,
        engineMode: String? = nil,
        engineVersion: String? = nil,
        kmsKeyId: String? = nil,
        optionGroupName: String? = nil,
        port: Int? = nil,
        scalingConfiguration: ScalingConfiguration? = nil,
        snapshotIdentifier: String? = nil,
        tags: [Tag]? = nil,
        vpcSecurityGroupIds: [String]? = nil
    )
    {
        self.availabilityZones = availabilityZones
        self.backtrackWindow = backtrackWindow
        self.copyTagsToSnapshot = copyTagsToSnapshot
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.dBSubnetGroupName = dBSubnetGroupName
        self.databaseName = databaseName
        self.deletionProtection = deletionProtection
        self.domain = domain
        self.domainIAMRoleName = domainIAMRoleName
        self.enableCloudwatchLogsExports = enableCloudwatchLogsExports
        self.enableIAMDatabaseAuthentication = enableIAMDatabaseAuthentication
        self.engine = engine
        self.engineMode = engineMode
        self.engineVersion = engineVersion
        self.kmsKeyId = kmsKeyId
        self.optionGroupName = optionGroupName
        self.port = port
        self.scalingConfiguration = scalingConfiguration
        self.snapshotIdentifier = snapshotIdentifier
        self.tags = tags
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
    }
}
