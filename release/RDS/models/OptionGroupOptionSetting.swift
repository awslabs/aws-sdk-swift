// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Option group option settings are used to display settings available for each option with their default values and other information. These values are used with the DescribeOptionGroupOptions action.</p>
public struct OptionGroupOptionSetting: Equatable {
    /// <p>Indicates the acceptable values for the option group option.</p>
    public let allowedValues: String?
    /// <p>The DB engine specific parameter type for the option group option.</p>
    public let applyType: String?
    /// <p>The default value for the option group option.</p>
    public let defaultValue: String?
    /// <p>Boolean value where true indicates that this option group option can be changed from the default value.</p>
    public let isModifiable: Bool
    /// <p>Boolean value where true indicates that a value must be specified for this option setting of the option group option.</p>
    public let isRequired: Bool
    /// <p>The minimum DB engine version required for the corresponding allowed value for this option setting.</p>
    public let minimumEngineVersionPerAllowedValue: [MinimumEngineVersionPerAllowedValue]?
    /// <p>The description of the option group option.</p>
    public let settingDescription: String?
    /// <p>The name of the option group option.</p>
    public let settingName: String?

    public init (
        allowedValues: String? = nil,
        applyType: String? = nil,
        defaultValue: String? = nil,
        isModifiable: Bool = false,
        isRequired: Bool = false,
        minimumEngineVersionPerAllowedValue: [MinimumEngineVersionPerAllowedValue]? = nil,
        settingDescription: String? = nil,
        settingName: String? = nil
    )
    {
        self.allowedValues = allowedValues
        self.applyType = applyType
        self.defaultValue = defaultValue
        self.isModifiable = isModifiable
        self.isRequired = isRequired
        self.minimumEngineVersionPerAllowedValue = minimumEngineVersionPerAllowedValue
        self.settingDescription = settingDescription
        self.settingName = settingName
    }
}
