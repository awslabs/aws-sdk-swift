// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///         This data type is used as a response element in the <code>ModifyDBInstance</code> operation and
///           contains changes that will be applied during the next maintenance window.
///        </p>
public struct PendingModifiedValues: Equatable {
    /// <p>The allocated storage size for the DB instance specified in gibibytes .</p>
    public let allocatedStorage: Int?
    /// <p>The number of days for which automated backups are retained.</p>
    public let backupRetentionPeriod: Int?
    /// <p>The identifier of the CA certificate for the DB instance.</p>
    public let cACertificateIdentifier: String?
    /// <p>The name of the compute and memory capacity class for the DB instance.</p>
    public let dBInstanceClass: String?
    /// <p>The  database identifier for the DB instance.</p>
    public let dBInstanceIdentifier: String?
    /// <p>The DB subnet group for the DB instance.</p>
    public let dBSubnetGroupName: String?
    /// <p>The database engine version.</p>
    public let engineVersion: String?
    /// <p>Whether mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.</p>
    public let iAMDatabaseAuthenticationEnabled: Bool?
    /// <p>The Provisioned IOPS value for the DB instance.</p>
    public let iops: Int?
    /// <p>The license model for the DB instance.</p>
    ///         <p>Valid values: <code>license-included</code> | <code>bring-your-own-license</code> |
    ///             <code>general-public-license</code>
    ///          </p>
    public let licenseModel: String?
    /// <p>The master credentials for the DB instance.</p>
    public let masterUserPassword: String?
    /// <p>A value that indicates that the Single-AZ DB instance will change to a Multi-AZ deployment.</p>
    public let multiAZ: Bool?
    /// <p>A list of the log types whose configuration is still pending. In other words, these log types are in the process of being activated or deactivated.</p>
    public let pendingCloudwatchLogsExports: PendingCloudwatchLogsExports?
    /// <p>The port for the DB instance.</p>
    public let port: Int?
    /// <p>The number of CPU cores and the number of threads per core for the DB instance class
    ///             of the DB instance.</p>
    public let processorFeatures: [ProcessorFeature]?
    /// <p>The storage type of the DB instance.</p>
    public let storageType: String?

    public init (
        allocatedStorage: Int? = nil,
        backupRetentionPeriod: Int? = nil,
        cACertificateIdentifier: String? = nil,
        dBInstanceClass: String? = nil,
        dBInstanceIdentifier: String? = nil,
        dBSubnetGroupName: String? = nil,
        engineVersion: String? = nil,
        iAMDatabaseAuthenticationEnabled: Bool? = nil,
        iops: Int? = nil,
        licenseModel: String? = nil,
        masterUserPassword: String? = nil,
        multiAZ: Bool? = nil,
        pendingCloudwatchLogsExports: PendingCloudwatchLogsExports? = nil,
        port: Int? = nil,
        processorFeatures: [ProcessorFeature]? = nil,
        storageType: String? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.backupRetentionPeriod = backupRetentionPeriod
        self.cACertificateIdentifier = cACertificateIdentifier
        self.dBInstanceClass = dBInstanceClass
        self.dBInstanceIdentifier = dBInstanceIdentifier
        self.dBSubnetGroupName = dBSubnetGroupName
        self.engineVersion = engineVersion
        self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
        self.iops = iops
        self.licenseModel = licenseModel
        self.masterUserPassword = masterUserPassword
        self.multiAZ = multiAZ
        self.pendingCloudwatchLogsExports = pendingCloudwatchLogsExports
        self.port = port
        self.processorFeatures = processorFeatures
        self.storageType = storageType
    }
}
