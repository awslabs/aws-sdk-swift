// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribePendingMaintenanceActionsInput: Equatable {
    /// <p>A filter that specifies one or more resources to return pending maintenance actions for.</p>
    ///          <p>Supported filters:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB
    ///               cluster Amazon Resource Names (ARNs). The results list will only include pending maintenance
    ///               actions for the DB clusters identified by these ARNs.</p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>db-instance-id</code> - Accepts DB instance identifiers and DB
    ///             instance ARNs. The results list will only include pending maintenance
    ///             actions for the DB instances identified by these ARNs.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>
    ///             An optional pagination token provided by a previous
    ///             <code>DescribePendingMaintenanceActions</code> request.
    ///             If this parameter is specified, the response includes
    ///             only records beyond the marker,
    ///             up to a number of records specified by <code>MaxRecords</code>.
    ///         </p>
    public let marker: String?
    /// <p>
    ///             The maximum number of records to include in the response.
    ///             If more records exist than the specified <code>MaxRecords</code> value,
    ///             a pagination token called a marker is included in the response so that
    ///             you can retrieve the remaining results.
    ///         </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The ARN of a resource to return pending maintenance actions for.</p>
    public let resourceIdentifier: String?

    public init (
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        resourceIdentifier: String? = nil
    )
    {
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.resourceIdentifier = resourceIdentifier
    }
}
