// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyDBProxyInput: Equatable {
    /// <p>The new authentication settings for the <code>DBProxy</code>.</p>
    public let auth: [UserAuthConfig]?
    /// <p>The identifier for the <code>DBProxy</code> to modify.</p>
    public let dBProxyName: String?
    /// <p>Whether the proxy includes detailed information about SQL statements in its logs.
    ///         This information helps you to debug issues involving SQL behavior or the performance
    ///         and scalability of the proxy connections. The debug information includes the text of
    ///         SQL statements that you submit through the proxy. Thus, only enable this setting
    ///         when needed for debugging, and only when you have security measures in place to
    ///         safeguard any sensitive information that appears in the logs.</p>
    public let debugLogging: Bool?
    /// <p>The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this
    ///         value higher or lower than the connection timeout limit for the associated database.</p>
    public let idleClientTimeout: Int?
    /// <p>The new identifier for the <code>DBProxy</code>. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.</p>
    public let newDBProxyName: String?
    /// <p>Whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
    ///         By enabling this setting, you can enforce encrypted TLS connections to the proxy, even if the associated database doesn't
    ///         use TLS.</p>
    public let requireTLS: Bool?
    /// <p>The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.</p>
    public let roleArn: String?
    /// <p>The new list of security groups for the <code>DBProxy</code>.</p>
    public let securityGroups: [String]?

    public init (
        auth: [UserAuthConfig]? = nil,
        dBProxyName: String? = nil,
        debugLogging: Bool? = nil,
        idleClientTimeout: Int? = nil,
        newDBProxyName: String? = nil,
        requireTLS: Bool? = nil,
        roleArn: String? = nil,
        securityGroups: [String]? = nil
    )
    {
        self.auth = auth
        self.dBProxyName = dBProxyName
        self.debugLogging = debugLogging
        self.idleClientTimeout = idleClientTimeout
        self.newDBProxyName = newDBProxyName
        self.requireTLS = requireTLS
        self.roleArn = roleArn
        self.securityGroups = securityGroups
    }
}
