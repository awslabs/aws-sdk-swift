// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct ModifyDBParameterGroupInput: Equatable {
    /// <p>The name of the DB parameter group.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match the name of an existing <code>DBParameterGroup</code>.</p>
    ///             </li>
    ///          </ul>
    public let dBParameterGroupName: String?
    /// <p>An array of parameter names, values, and the application methods for the parameter update. At least one parameter name, value, and
    ///           application method method must be supplied; later arguments are optional. A maximum of 20 parameters can be modified in a single request.</p>
    ///          <p>Valid Values (for the application method): <code>immediate | pending-reboot</code>
    ///          </p>
    ///          <note>
    ///             <p>You can use the <code>immediate</code> value with dynamic parameters only. You can use the
    ///               <code>pending-reboot</code> value for both dynamic and static parameters.</p>
    ///             <p>When the application method is <code>immediate</code>, changes to dynamic parameters are applied immediately
    ///           to the DB instances associated with the parameter group. When the application method is <code>pending-reboot</code>,
    ///           changes to dynamic and static parameters are applied after a reboot without failover to the DB instances associated with the
    ///           parameter group.</p>
    ///          </note>
    public let parameters: [Parameter]?

    public init (
        dBParameterGroupName: String? = nil,
        parameters: [Parameter]? = nil
    )
    {
        self.dBParameterGroupName = dBParameterGroupName
        self.parameters = parameters
    }
}
