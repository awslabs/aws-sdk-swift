// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeDBInstanceAutomatedBackupsOutputBody: Equatable {
    public let marker: String?
    public let dBInstanceAutomatedBackups: [DBInstanceAutomatedBackup]?
}

extension DescribeDBInstanceAutomatedBackupsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case dBInstanceAutomatedBackups = "DBInstanceAutomatedBackups"
        case marker = "Marker"
    }

    public init (from decoder: Decoder) throws {
        let topLevelContainer = try decoder.container(keyedBy: Key.self)
        let containerValues = try topLevelContainer.nestedContainer(keyedBy: CodingKeys.self, forKey: Key("DescribeDBInstanceAutomatedBackupsResult"))
        let markerDecoded = try containerValues.decodeIfPresent(String.self, forKey: .marker)
        marker = markerDecoded
        if containerValues.contains(.dBInstanceAutomatedBackups) {
            struct KeyVal0{struct DBInstanceAutomatedBackup{}}
            let dBInstanceAutomatedBackupsWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CollectionMemberCodingKey<KeyVal0.DBInstanceAutomatedBackup>.CodingKeys.self, forKey: .dBInstanceAutomatedBackups)
            if let dBInstanceAutomatedBackupsWrappedContainer = dBInstanceAutomatedBackupsWrappedContainer {
                let dBInstanceAutomatedBackupsContainer = try dBInstanceAutomatedBackupsWrappedContainer.decodeIfPresent([DBInstanceAutomatedBackup].self, forKey: .member)
                var dBInstanceAutomatedBackupsBuffer:[DBInstanceAutomatedBackup]? = nil
                if let dBInstanceAutomatedBackupsContainer = dBInstanceAutomatedBackupsContainer {
                    dBInstanceAutomatedBackupsBuffer = [DBInstanceAutomatedBackup]()
                    for structureContainer0 in dBInstanceAutomatedBackupsContainer {
                        dBInstanceAutomatedBackupsBuffer?.append(structureContainer0)
                    }
                }
                dBInstanceAutomatedBackups = dBInstanceAutomatedBackupsBuffer
            } else {
                dBInstanceAutomatedBackups = []
            }
        } else {
            dBInstanceAutomatedBackups = nil
        }
    }
}
