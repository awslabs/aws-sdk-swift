// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ModifyGlobalClusterInput: Equatable {
    /// <p>A value that indicates whether major version upgrades are allowed.</p>
    ///          <p>Constraints: You must allow major version upgrades when specifying a value for the
    ///                 <code>EngineVersion</code> parameter that is a different major version than the DB
    ///             cluster's current version.</p>
    ///          <p>If you upgrade the major version of a global database, the cluster and DB instance parameter
    ///         groups are set to the default parameter groups for the new version. Apply any custom parameter
    ///         groups after completing the upgrade.</p>
    public let allowMajorVersionUpgrade: Bool?
    /// <p>
    ///         Indicates if the global database cluster has deletion protection enabled. The global database cluster
    ///         can't be deleted when deletion protection is enabled.
    ///       </p>
    public let deletionProtection: Bool?
    /// <p>The version number of the database engine to which you want to upgrade.
    ///           Changing this parameter results in an outage. The change is applied during
    ///           the next maintenance window unless <code>ApplyImmediately</code> is enabled.</p>
    ///          <p>To list all of the available engine versions for <code>aurora</code> (for MySQL 5.6-compatible Aurora), use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code>
    ///          </p>
    ///          <p>To list all of the available engine versions for <code>aurora-mysql</code> (for MySQL 5.7-compatible Aurora), use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-mysql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code>
    ///          </p>
    ///          <p>To list all of the available engine versions for <code>aurora-postgresql</code>, use the following command:</p>
    ///          <p>
    ///             <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query '*[]|[?SupportsGlobalDatabases == `true`].[EngineVersion]'</code>
    ///          </p>
    public let engineVersion: String?
    /// <p>
    ///         The DB cluster identifier for the global cluster being modified. This parameter isn't case-sensitive.
    ///       </p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must match the identifier of an existing global database cluster.</p>
    ///             </li>
    ///          </ul>
    public let globalClusterIdentifier: String?
    /// <p>
    ///         The new cluster identifier for the global database cluster when modifying a global database cluster.
    ///         This value is stored as a lowercase string.
    ///       </p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>Must contain from 1 to 63 letters, numbers, or hyphens</p>
    ///             </li>
    ///             <li>
    ///                <p>The first character must be a letter</p>
    ///             </li>
    ///             <li>
    ///                <p>Can't end with a hyphen or contain two consecutive hyphens</p>
    ///             </li>
    ///          </ul>
    ///          <p>Example: <code>my-cluster2</code>
    ///          </p>
    public let newGlobalClusterIdentifier: String?

    public init (
        allowMajorVersionUpgrade: Bool? = nil,
        deletionProtection: Bool? = nil,
        engineVersion: String? = nil,
        globalClusterIdentifier: String? = nil,
        newGlobalClusterIdentifier: String? = nil
    )
    {
        self.allowMajorVersionUpgrade = allowMajorVersionUpgrade
        self.deletionProtection = deletionProtection
        self.engineVersion = engineVersion
        self.globalClusterIdentifier = globalClusterIdentifier
        self.newGlobalClusterIdentifier = newGlobalClusterIdentifier
    }
}
