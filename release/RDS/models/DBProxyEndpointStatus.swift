// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum DBProxyEndpointStatus {
    case available
    case creating
    case deleting
    case incompatibleNetwork
    case insufficientResourceLimits
    case modifying
    case sdkUnknown(String)
}

extension DBProxyEndpointStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [DBProxyEndpointStatus] {
        return [
            .available,
            .creating,
            .deleting,
            .incompatibleNetwork,
            .insufficientResourceLimits,
            .modifying,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .available: return "available"
        case .creating: return "creating"
        case .deleting: return "deleting"
        case .incompatibleNetwork: return "incompatible-network"
        case .insufficientResourceLimits: return "insufficient-resource-limits"
        case .modifying: return "modifying"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = DBProxyEndpointStatus(rawValue: rawValue) ?? DBProxyEndpointStatus.sdkUnknown(rawValue)
    }
}
