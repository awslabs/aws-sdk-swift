// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribeOptionGroupsInput: Equatable {
    /// <p>Filters the list of option groups to only include groups associated with a specific database engine.</p>
    ///          <p>Valid Values:
    ///       </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>mariadb</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>mysql</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se2</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se1</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>oracle-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>postgres</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ee</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-se</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-ex</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>
    ///                   <code>sqlserver-web</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let engineName: String?
    /// <p>This parameter isn't currently supported.</p>
    public let filters: [Filter]?
    /// <p>Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.</p>
    public let majorEngineVersion: String?
    /// <p>
    ///             An optional pagination token provided by a previous DescribeOptionGroups request.
    ///             If this parameter is specified, the response includes
    ///             only records beyond the marker,
    ///             up to the value specified by <code>MaxRecords</code>.
    ///         </p>
    public let marker: String?
    /// <p>
    ///             The maximum number of records to include in the response.
    ///             If more records exist than the specified <code>MaxRecords</code> value,
    ///             a pagination token called a marker is included in the response so that
    ///             you can retrieve the remaining results.
    ///         </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>The name of the option group to describe. Can't be supplied together with EngineName or MajorEngineVersion.</p>
    public let optionGroupName: String?

    public init (
        engineName: String? = nil,
        filters: [Filter]? = nil,
        majorEngineVersion: String? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        optionGroupName: String? = nil
    )
    {
        self.engineName = engineName
        self.filters = filters
        self.majorEngineVersion = majorEngineVersion
        self.marker = marker
        self.maxRecords = maxRecords
        self.optionGroupName = optionGroupName
    }
}
