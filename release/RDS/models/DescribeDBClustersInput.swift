// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribeDBClustersInput: Equatable {
    /// <p>The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isn't case-sensitive.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match an existing DBClusterIdentifier.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterIdentifier: String?
    /// <p>A filter that specifies one or more DB clusters to describe.</p>
    ///          <p>Supported filters:</p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB
    ///               cluster Amazon Resource Names (ARNs). The results list will only include information about
    ///               the DB clusters identified by these ARNs.</p>
    ///             </li>
    ///          </ul>
    public let filters: [Filter]?
    /// <p>Optional Boolean parameter that specifies whether the output includes information about clusters
    ///           shared from other AWS accounts.</p>
    public let includeShared: Bool
    /// <p>An optional pagination token provided by a previous
    ///             <code>DescribeDBClusters</code> request.
    ///             If this parameter is specified, the response includes
    ///             only records beyond the marker,
    ///             up to the value specified by <code>MaxRecords</code>.
    ///         </p>
    public let marker: String?
    /// <p>The maximum number of records to include in the response.
    ///             If more records exist than the specified <code>MaxRecords</code> value,
    ///           a pagination token called a marker is included in the response so you can retrieve the remaining results.
    ///         </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?

    public init (
        dBClusterIdentifier: String? = nil,
        filters: [Filter]? = nil,
        includeShared: Bool = false,
        marker: String? = nil,
        maxRecords: Int? = nil
    )
    {
        self.dBClusterIdentifier = dBClusterIdentifier
        self.filters = filters
        self.includeShared = includeShared
        self.marker = marker
        self.maxRecords = maxRecords
    }
}
