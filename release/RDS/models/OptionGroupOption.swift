// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Available option.</p>
public struct OptionGroupOption: Equatable {
    /// <p>If the option requires a port, specifies the default port for the option.</p>
    public let defaultPort: Int?
    /// <p>The description of the option.</p>
    public let description: String?
    /// <p>The name of the engine that this option can be applied to.</p>
    public let engineName: String?
    /// <p>Indicates the major engine version that the option is available for.</p>
    public let majorEngineVersion: String?
    /// <p>The minimum required engine version for the option to be applied.</p>
    public let minimumRequiredMinorEngineVersion: String?
    /// <p>The name of the option.</p>
    public let name: String?
    /// <p>The option settings that are available (and the default value) for each option in an option group.</p>
    public let optionGroupOptionSettings: [OptionGroupOptionSetting]?
    /// <p>The versions that are available for the option.</p>
    public let optionGroupOptionVersions: [OptionVersion]?
    /// <p>The options that conflict with this option.</p>
    public let optionsConflictsWith: [String]?
    /// <p>The options that are prerequisites for this option.</p>
    public let optionsDependedOn: [String]?
    /// <p>Permanent options can never be removed from an option group. An option group containing a permanent option can't be removed from a DB instance.</p>
    public let permanent: Bool
    /// <p>Persistent options can't be removed from an option group while DB instances are associated with the option group. If you disassociate all DB instances from the option group, your can remove the persistent option from the option group.</p>
    public let persistent: Bool
    /// <p>Specifies whether the option requires a port.</p>
    public let portRequired: Bool
    /// <p>If true, you must enable the Auto Minor Version Upgrade setting for your DB instance
    ///             before you can use this option.
    ///             You can enable Auto Minor Version Upgrade when you first create your DB instance,
    ///             or by modifying your DB instance later.
    ///         </p>
    public let requiresAutoMinorEngineVersionUpgrade: Bool
    /// <p>If true, you can change the option to an earlier version of the option.
    ///             This only applies to options that have different versions available.
    ///         </p>
    public let supportsOptionVersionDowngrade: Bool?
    /// <p>If true, you can only use this option with a DB instance that is in a VPC.
    ///         </p>
    public let vpcOnly: Bool

    public init (
        defaultPort: Int? = nil,
        description: String? = nil,
        engineName: String? = nil,
        majorEngineVersion: String? = nil,
        minimumRequiredMinorEngineVersion: String? = nil,
        name: String? = nil,
        optionGroupOptionSettings: [OptionGroupOptionSetting]? = nil,
        optionGroupOptionVersions: [OptionVersion]? = nil,
        optionsConflictsWith: [String]? = nil,
        optionsDependedOn: [String]? = nil,
        permanent: Bool = false,
        persistent: Bool = false,
        portRequired: Bool = false,
        requiresAutoMinorEngineVersionUpgrade: Bool = false,
        supportsOptionVersionDowngrade: Bool? = nil,
        vpcOnly: Bool = false
    )
    {
        self.defaultPort = defaultPort
        self.description = description
        self.engineName = engineName
        self.majorEngineVersion = majorEngineVersion
        self.minimumRequiredMinorEngineVersion = minimumRequiredMinorEngineVersion
        self.name = name
        self.optionGroupOptionSettings = optionGroupOptionSettings
        self.optionGroupOptionVersions = optionGroupOptionVersions
        self.optionsConflictsWith = optionsConflictsWith
        self.optionsDependedOn = optionsDependedOn
        self.permanent = permanent
        self.persistent = persistent
        self.portRequired = portRequired
        self.requiresAutoMinorEngineVersionUpgrade = requiresAutoMinorEngineVersionUpgrade
        self.supportsOptionVersionDowngrade = supportsOptionVersionDowngrade
        self.vpcOnly = vpcOnly
    }
}
