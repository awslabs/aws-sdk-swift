// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ModifyOptionGroupInput: Encodable, Reflection {
    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if applyImmediately != false {
            try container.encode(applyImmediately, forKey: Key("ApplyImmediately"))
        }
        if let optionGroupName = optionGroupName {
            try container.encode(optionGroupName, forKey: Key("OptionGroupName"))
        }
        if let optionsToInclude = optionsToInclude {
            var optionsToIncludeContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("OptionsToInclude"))
            for (index0, optionconfiguration0) in optionsToInclude.enumerated() {
                try optionsToIncludeContainer.encode(optionconfiguration0, forKey: Key("OptionConfiguration.\(index0.advanced(by: 1))"))
            }
        }
        if let optionsToRemove = optionsToRemove {
            var optionsToRemoveContainer = container.nestedContainer(keyedBy: Key.self, forKey: Key("OptionsToRemove"))
            for (index0, string0) in optionsToRemove.enumerated() {
                try optionsToRemoveContainer.encode(string0, forKey: Key("member.\(index0.advanced(by: 1))"))
            }
        }
        try container.encode("ModifyOptionGroup", forKey:Key("Action"))
        try container.encode("2014-10-31", forKey:Key("Version"))
    }
}
