// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>
///             This data type is used as a response element in the <code>DescribeReservedDBInstancesOfferings</code> action.
///         </p>
public struct ReservedDBInstancesOffering: Equatable {
    /// <p>The currency code for the reserved DB instance offering.</p>
    public let currencyCode: String?
    /// <p>The DB instance class for the reserved DB instance.</p>
    public let dBInstanceClass: String?
    /// <p>The duration of the offering in seconds.</p>
    public let duration: Int
    /// <p>The fixed price charged for this offering.</p>
    public let fixedPrice: Double
    /// <p>Indicates if the offering applies to Multi-AZ deployments.</p>
    public let multiAZ: Bool
    /// <p>The offering type.</p>
    public let offeringType: String?
    /// <p>The database engine used by the offering.</p>
    public let productDescription: String?
    /// <p>The recurring price charged to run this reserved DB instance.</p>
    public let recurringCharges: [RecurringCharge]?
    /// <p>The offering identifier.</p>
    public let reservedDBInstancesOfferingId: String?
    /// <p>The hourly price charged for this offering.</p>
    public let usagePrice: Double

    public init (
        currencyCode: String? = nil,
        dBInstanceClass: String? = nil,
        duration: Int = 0,
        fixedPrice: Double = 0.0,
        multiAZ: Bool = false,
        offeringType: String? = nil,
        productDescription: String? = nil,
        recurringCharges: [RecurringCharge]? = nil,
        reservedDBInstancesOfferingId: String? = nil,
        usagePrice: Double = 0.0
    )
    {
        self.currencyCode = currencyCode
        self.dBInstanceClass = dBInstanceClass
        self.duration = duration
        self.fixedPrice = fixedPrice
        self.multiAZ = multiAZ
        self.offeringType = offeringType
        self.productDescription = productDescription
        self.recurringCharges = recurringCharges
        self.reservedDBInstancesOfferingId = reservedDBInstancesOfferingId
        self.usagePrice = usagePrice
    }
}
