// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Contains the details for an Amazon RDS DB cluster snapshot
///       </p>
///          <p>This data type is used as a response element
///           in the <code>DescribeDBClusterSnapshots</code> action.
///       </p>
public struct DBClusterSnapshot: Equatable {
    /// <p>Specifies the allocated storage size in gibibytes (GiB).</p>
    public let allocatedStorage: Int
    /// <p>Provides the list of Availability Zones (AZs) where instances in the DB cluster snapshot can be restored.</p>
    public let availabilityZones: [String]?
    /// <p>Specifies the time when the DB cluster was created, in Universal Coordinated Time (UTC).</p>
    public let clusterCreateTime: Date?
    /// <p>Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.</p>
    public let dBClusterIdentifier: String?
    /// <p>The Amazon Resource Name (ARN) for the DB cluster snapshot.</p>
    public let dBClusterSnapshotArn: String?
    /// <p>Specifies the identifier for the DB cluster snapshot.</p>
    public let dBClusterSnapshotIdentifier: String?
    /// <p>Specifies the name of the database engine for this DB cluster snapshot.</p>
    public let engine: String?
    /// <p>Provides the engine mode of the database engine for this DB cluster snapshot.</p>
    public let engineMode: String?
    /// <p>Provides the version of the database engine for this DB cluster snapshot.</p>
    public let engineVersion: String?
    /// <p>True if mapping of AWS Identity and Access Management (IAM) accounts to database accounts is enabled, and otherwise false.</p>
    public let iAMDatabaseAuthenticationEnabled: Bool
    /// <p>If <code>StorageEncrypted</code> is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.</p>
    ///          <p>The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the AWS KMS customer master key (CMK).</p>
    public let kmsKeyId: String?
    /// <p>Provides the license model information for this DB cluster snapshot.</p>
    public let licenseModel: String?
    /// <p>Provides the master username for this DB cluster snapshot.</p>
    public let masterUsername: String?
    /// <p>Specifies the percentage of the estimated data that has been transferred.</p>
    public let percentProgress: Int
    /// <p>Specifies the port that the DB cluster was listening on at the time of the snapshot.</p>
    public let port: Int
    /// <p>Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).</p>
    public let snapshotCreateTime: Date?
    /// <p>Provides the type of the DB cluster snapshot.</p>
    public let snapshotType: String?
    /// <p>If the DB cluster snapshot was copied from a source DB cluster snapshot, the Amazon
    ///             Resource Name (ARN) for the source DB cluster snapshot, otherwise, a null value.</p>
    public let sourceDBClusterSnapshotArn: String?
    /// <p>Specifies the status of this DB cluster snapshot.</p>
    public let status: String?
    /// <p>Specifies whether the DB cluster snapshot is encrypted.</p>
    public let storageEncrypted: Bool
    /// <p>A list of tags.
    ///           For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i>
    ///          </p>
    public let tagList: [Tag]?
    /// <p>Provides the VPC ID associated with the DB cluster snapshot.</p>
    public let vpcId: String?

    public init (
        allocatedStorage: Int = 0,
        availabilityZones: [String]? = nil,
        clusterCreateTime: Date? = nil,
        dBClusterIdentifier: String? = nil,
        dBClusterSnapshotArn: String? = nil,
        dBClusterSnapshotIdentifier: String? = nil,
        engine: String? = nil,
        engineMode: String? = nil,
        engineVersion: String? = nil,
        iAMDatabaseAuthenticationEnabled: Bool = false,
        kmsKeyId: String? = nil,
        licenseModel: String? = nil,
        masterUsername: String? = nil,
        percentProgress: Int = 0,
        port: Int = 0,
        snapshotCreateTime: Date? = nil,
        snapshotType: String? = nil,
        sourceDBClusterSnapshotArn: String? = nil,
        status: String? = nil,
        storageEncrypted: Bool = false,
        tagList: [Tag]? = nil,
        vpcId: String? = nil
    )
    {
        self.allocatedStorage = allocatedStorage
        self.availabilityZones = availabilityZones
        self.clusterCreateTime = clusterCreateTime
        self.dBClusterIdentifier = dBClusterIdentifier
        self.dBClusterSnapshotArn = dBClusterSnapshotArn
        self.dBClusterSnapshotIdentifier = dBClusterSnapshotIdentifier
        self.engine = engine
        self.engineMode = engineMode
        self.engineVersion = engineVersion
        self.iAMDatabaseAuthenticationEnabled = iAMDatabaseAuthenticationEnabled
        self.kmsKeyId = kmsKeyId
        self.licenseModel = licenseModel
        self.masterUsername = masterUsername
        self.percentProgress = percentProgress
        self.port = port
        self.snapshotCreateTime = snapshotCreateTime
        self.snapshotType = snapshotType
        self.sourceDBClusterSnapshotArn = sourceDBClusterSnapshotArn
        self.status = status
        self.storageEncrypted = storageEncrypted
        self.tagList = tagList
        self.vpcId = vpcId
    }
}
