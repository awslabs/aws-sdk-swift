// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains the state of scheduled or in-process failover operations on an
///       Aurora global database (<a>GlobalCluster</a>). This Data type is empty unless a failover
///       operation is scheduled or is currently underway on the Aurora global database. </p>
public struct FailoverState: Equatable {
    /// <p>The Amazon Resource Name (ARN) of the Aurora DB cluster that is currently being demoted, and which is associated with this
    ///        state. </p>
    public let fromDbClusterArn: String?
    /// <p>The current status of the Aurora global database (<a>GlobalCluster</a>). Possible values are as follows:
    ///     </p>
    ///          <ul>
    ///             <li>
    ///                <p>pending  A request to fail over the Aurora global database (<a>GlobalCluster</a>) has been received by the service. The
    ///         <code>GlobalCluster</code>'s primary DB cluster and the specified secondary DB cluster are being verified before the failover
    ///         process can start.</p>
    ///             </li>
    ///             <li>
    ///                <p>failing-over  This status covers the range of Aurora internal operations that take place during the failover process, such
    ///         as demoting the primary Aurora DB cluster, promoting the secondary Aurora DB, and synchronizing replicas. </p>
    ///             </li>
    ///             <li>
    ///                <p>cancelling  The request to fail over the Aurora global database (<a>GlobalCluster</a>) was cancelled and the primary
    ///         Aurora DB cluster and the selected secondary Aurora DB cluster are returning to their previous states.
    ///       </p>
    ///             </li>
    ///          </ul>
    public let status: FailoverStatus?
    /// <p>The Amazon Resource Name (ARN) of the Aurora DB cluster that is currently being promoted, and which is associated
    ///      with this state.</p>
    public let toDbClusterArn: String?

    public init (
        fromDbClusterArn: String? = nil,
        status: FailoverStatus? = nil,
        toDbClusterArn: String? = nil
    )
    {
        self.fromDbClusterArn = fromDbClusterArn
        self.status = status
        self.toDbClusterArn = toDbClusterArn
    }
}
