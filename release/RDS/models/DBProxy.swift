// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The data structure representing a proxy managed by the RDS Proxy.</p>
///          <p>This data type is used as a response element in the <code>DescribeDBProxies</code> action.</p>
public struct DBProxy: Equatable {
    /// <p>One or more data structures specifying the authorization mechanism to connect to the associated RDS DB instance
    ///         or Aurora DB cluster.</p>
    public let auth: [UserAuthConfigInfo]?
    /// <p>The date and time when the proxy was first created.</p>
    public let createdDate: Date?
    /// <p>The Amazon Resource Name (ARN) for the proxy.</p>
    public let dBProxyArn: String?
    /// <p>The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.</p>
    public let dBProxyName: String?
    /// <p>Whether the proxy includes detailed information about SQL statements in its logs.
    ///         This information helps you to debug issues involving SQL behavior or the performance
    ///         and scalability of the proxy connections. The debug information includes the text of
    ///         SQL statements that you submit through the proxy. Thus, only enable this setting
    ///         when needed for debugging, and only when you have security measures in place to
    ///         safeguard any sensitive information that appears in the logs.</p>
    public let debugLogging: Bool
    /// <p>The endpoint that you can use to connect to the DB proxy. You include the endpoint value in the
    ///         connection string for a database client application.</p>
    public let endpoint: String?
    /// <p>The engine family applies to MySQL and PostgreSQL for both RDS and Aurora.</p>
    public let engineFamily: String?
    /// <p>The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection.
    ///         The proxy keeps the underlying database connection open and puts it back into the connection pool for reuse by
    ///         later connection requests.</p>
    ///          <p>Default: 1800 (30 minutes)</p>
    ///          <p>Constraints: 1 to 28,800</p>
    public let idleClientTimeout: Int
    /// <p>Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.</p>
    public let requireTLS: Bool
    /// <p>The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.</p>
    public let roleArn: String?
    /// <p>The current status of this proxy. A status of <code>available</code> means the
    ///         proxy is ready to handle requests. Other values indicate that you must wait for
    ///         the proxy to be ready, or take some action to resolve an issue.</p>
    public let status: DBProxyStatus?
    /// <p>The date and time when the proxy was last updated.</p>
    public let updatedDate: Date?
    /// <p>Provides the VPC ID of the DB proxy.</p>
    public let vpcId: String?
    /// <p>Provides a list of VPC security groups that the proxy belongs to.</p>
    public let vpcSecurityGroupIds: [String]?
    /// <p>The EC2 subnet IDs for the proxy.</p>
    public let vpcSubnetIds: [String]?

    public init (
        auth: [UserAuthConfigInfo]? = nil,
        createdDate: Date? = nil,
        dBProxyArn: String? = nil,
        dBProxyName: String? = nil,
        debugLogging: Bool = false,
        endpoint: String? = nil,
        engineFamily: String? = nil,
        idleClientTimeout: Int = 0,
        requireTLS: Bool = false,
        roleArn: String? = nil,
        status: DBProxyStatus? = nil,
        updatedDate: Date? = nil,
        vpcId: String? = nil,
        vpcSecurityGroupIds: [String]? = nil,
        vpcSubnetIds: [String]? = nil
    )
    {
        self.auth = auth
        self.createdDate = createdDate
        self.dBProxyArn = dBProxyArn
        self.dBProxyName = dBProxyName
        self.debugLogging = debugLogging
        self.endpoint = endpoint
        self.engineFamily = engineFamily
        self.idleClientTimeout = idleClientTimeout
        self.requireTLS = requireTLS
        self.roleArn = roleArn
        self.status = status
        self.updatedDate = updatedDate
        self.vpcId = vpcId
        self.vpcSecurityGroupIds = vpcSecurityGroupIds
        self.vpcSubnetIds = vpcSubnetIds
    }
}
