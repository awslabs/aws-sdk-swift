// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribeDBClusterParametersInput: Equatable {
    /// <p>The name of a specific DB cluster parameter group to return parameter details for.</p>
    ///          <p>Constraints:</p>
    ///          <ul>
    ///             <li>
    ///                <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p>
    ///             </li>
    ///          </ul>
    public let dBClusterParameterGroupName: String?
    /// <p>This parameter isn't currently supported.</p>
    public let filters: [Filter]?
    /// <p>
    ///       An optional pagination token provided by a previous
    ///       <code>DescribeDBClusterParameters</code> request.
    ///       If this parameter is specified, the response includes
    ///       only records beyond the marker,
    ///       up to the value specified by <code>MaxRecords</code>.
    ///     </p>
    public let marker: String?
    /// <p>
    ///       The maximum number of records to include in the response.
    ///       If more records exist than the specified <code>MaxRecords</code> value,
    ///           a pagination token called a marker is included in the response so you can retrieve the remaining results.
    ///     </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>
    ///       A value that indicates to return only parameters for a specific source.
    ///       Parameter sources can be <code>engine</code>, <code>service</code>,
    ///       or <code>customer</code>.
    ///     </p>
    public let source: String?

    public init (
        dBClusterParameterGroupName: String? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        source: String? = nil
    )
    {
        self.dBClusterParameterGroupName = dBClusterParameterGroupName
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.source = source
    }
}
