// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p></p>
public struct DescribeReservedDBInstancesOfferingsInput: Equatable {
    /// <p>The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</p>
    public let dBInstanceClass: String?
    /// <p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p>
    ///          <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code>
    ///          </p>
    public let duration: String?
    /// <p>This parameter isn't currently supported.</p>
    public let filters: [Filter]?
    /// <p>
    ///         An optional pagination token provided by a previous request.
    ///         If this parameter is specified, the response includes
    ///         only records beyond the marker,
    ///         up to the value specified by <code>MaxRecords</code>.
    ///     </p>
    public let marker: String?
    /// <p>
    ///     The maximum number of records to include in the response.
    ///     If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is
    ///     included in the response so you can retrieve the remaining results.
    ///     </p>
    ///          <p>Default: 100</p>
    ///          <p>Constraints: Minimum 20, maximum 100.</p>
    public let maxRecords: Int?
    /// <p>A value that indicates whether to show only those reservations that support Multi-AZ.</p>
    public let multiAZ: Bool?
    /// <p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p>
    ///          <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code>
    ///          </p>
    public let offeringType: String?
    /// <p>Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.</p>
    ///          <note>
    ///             <p>The results show offerings that partially match the filter value.</p>
    ///          </note>
    public let productDescription: String?
    /// <p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p>
    ///          <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code>
    ///          </p>
    public let reservedDBInstancesOfferingId: String?

    public init (
        dBInstanceClass: String? = nil,
        duration: String? = nil,
        filters: [Filter]? = nil,
        marker: String? = nil,
        maxRecords: Int? = nil,
        multiAZ: Bool? = nil,
        offeringType: String? = nil,
        productDescription: String? = nil,
        reservedDBInstancesOfferingId: String? = nil
    )
    {
        self.dBInstanceClass = dBInstanceClass
        self.duration = duration
        self.filters = filters
        self.marker = marker
        self.maxRecords = maxRecords
        self.multiAZ = multiAZ
        self.offeringType = offeringType
        self.productDescription = productDescription
        self.reservedDBInstancesOfferingId = reservedDBInstancesOfferingId
    }
}
