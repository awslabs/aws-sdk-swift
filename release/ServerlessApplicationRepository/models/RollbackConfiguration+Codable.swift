// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension RollbackConfiguration: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case monitoringTimeInMinutes = "monitoringTimeInMinutes"
        case rollbackTriggers = "rollbackTriggers"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if monitoringTimeInMinutes != 0 {
            try encodeContainer.encode(monitoringTimeInMinutes, forKey: .monitoringTimeInMinutes)
        }
        if let rollbackTriggers = rollbackTriggers {
            var rollbackTriggersContainer = encodeContainer.nestedUnkeyedContainer(forKey: .rollbackTriggers)
            for __listofrollbacktrigger0 in rollbackTriggers {
                try rollbackTriggersContainer.encode(__listofrollbacktrigger0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let monitoringTimeInMinutesDecoded = try containerValues.decode(Int.self, forKey: .monitoringTimeInMinutes)
        monitoringTimeInMinutes = monitoringTimeInMinutesDecoded
        let rollbackTriggersContainer = try containerValues.decodeIfPresent([RollbackTrigger].self, forKey: .rollbackTriggers)
        var rollbackTriggersDecoded0:[RollbackTrigger]? = nil
        if let rollbackTriggersContainer = rollbackTriggersContainer {
            rollbackTriggersDecoded0 = [RollbackTrigger]()
            for structure0 in rollbackTriggersContainer {
                rollbackTriggersDecoded0?.append(structure0)
            }
        }
        rollbackTriggers = rollbackTriggersDecoded0
    }
}
