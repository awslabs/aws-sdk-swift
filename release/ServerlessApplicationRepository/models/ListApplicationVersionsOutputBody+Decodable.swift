// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListApplicationVersionsOutputBody: Equatable {
    public let nextToken: String?
    public let versions: [VersionSummary]?
}

extension ListApplicationVersionsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "nextToken"
        case versions = "versions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let versionsContainer = try containerValues.decodeIfPresent([VersionSummary].self, forKey: .versions)
        var versionsDecoded0:[VersionSummary]? = nil
        if let versionsContainer = versionsContainer {
            versionsDecoded0 = [VersionSummary]()
            for structure0 in versionsContainer {
                versionsDecoded0?.append(structure0)
            }
        }
        versions = versionsDecoded0
    }
}
