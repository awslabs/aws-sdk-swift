// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEnvironmentMembershipsOutputBody: Equatable {
    public let memberships: [EnvironmentMember]?
    public let nextToken: String?
}

extension DescribeEnvironmentMembershipsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case memberships
        case nextToken
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let membershipsContainer = try containerValues.decodeIfPresent([EnvironmentMember].self, forKey: .memberships)
        var membershipsDecoded0:[EnvironmentMember]? = nil
        if let membershipsContainer = membershipsContainer {
            membershipsDecoded0 = [EnvironmentMember]()
            for structure0 in membershipsContainer {
                membershipsDecoded0?.append(structure0)
            }
        }
        memberships = membershipsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
