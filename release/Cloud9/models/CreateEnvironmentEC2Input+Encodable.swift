// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CreateEnvironmentEC2Input: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case automaticStopTimeMinutes
        case clientRequestToken
        case connectionType
        case description
        case imageId
        case instanceType
        case name
        case ownerArn
        case subnetId
        case tags
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let automaticStopTimeMinutes = automaticStopTimeMinutes {
            try encodeContainer.encode(automaticStopTimeMinutes, forKey: .automaticStopTimeMinutes)
        }
        if let clientRequestToken = clientRequestToken {
            try encodeContainer.encode(clientRequestToken, forKey: .clientRequestToken)
        }
        if let connectionType = connectionType {
            try encodeContainer.encode(connectionType.rawValue, forKey: .connectionType)
        }
        if let description = description {
            try encodeContainer.encode(description, forKey: .description)
        }
        if let imageId = imageId {
            try encodeContainer.encode(imageId, forKey: .imageId)
        }
        if let instanceType = instanceType {
            try encodeContainer.encode(instanceType, forKey: .instanceType)
        }
        if let name = name {
            try encodeContainer.encode(name, forKey: .name)
        }
        if let ownerArn = ownerArn {
            try encodeContainer.encode(ownerArn, forKey: .ownerArn)
        }
        if let subnetId = subnetId {
            try encodeContainer.encode(subnetId, forKey: .subnetId)
        }
        if let tags = tags {
            var tagsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .tags)
            for taglist0 in tags {
                try tagsContainer.encode(taglist0)
            }
        }
    }
}
