// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum ManagedCredentialsStatus {
    case disabledByCollaborator
    case disabledByDefault
    case disabledByOwner
    case enabledByOwner
    case enabledOnCreate
    case failedRemovalByCollaborator
    case failedRemovalByOwner
    case pendingRemovalByCollaborator
    case pendingRemovalByOwner
    case pendingStartRemovalByCollaborator
    case pendingStartRemovalByOwner
    case sdkUnknown(String)
}

extension ManagedCredentialsStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [ManagedCredentialsStatus] {
        return [
            .disabledByCollaborator,
            .disabledByDefault,
            .disabledByOwner,
            .enabledByOwner,
            .enabledOnCreate,
            .failedRemovalByCollaborator,
            .failedRemovalByOwner,
            .pendingRemovalByCollaborator,
            .pendingRemovalByOwner,
            .pendingStartRemovalByCollaborator,
            .pendingStartRemovalByOwner,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .disabledByCollaborator: return "DISABLED_BY_COLLABORATOR"
        case .disabledByDefault: return "DISABLED_BY_DEFAULT"
        case .disabledByOwner: return "DISABLED_BY_OWNER"
        case .enabledByOwner: return "ENABLED_BY_OWNER"
        case .enabledOnCreate: return "ENABLED_ON_CREATE"
        case .failedRemovalByCollaborator: return "FAILED_REMOVAL_BY_COLLABORATOR"
        case .failedRemovalByOwner: return "FAILED_REMOVAL_BY_OWNER"
        case .pendingRemovalByCollaborator: return "PENDING_REMOVAL_BY_COLLABORATOR"
        case .pendingRemovalByOwner: return "PENDING_REMOVAL_BY_OWNER"
        case .pendingStartRemovalByCollaborator: return "PENDING_START_REMOVAL_BY_COLLABORATOR"
        case .pendingStartRemovalByOwner: return "PENDING_START_REMOVAL_BY_OWNER"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = ManagedCredentialsStatus(rawValue: rawValue) ?? ManagedCredentialsStatus.sdkUnknown(rawValue)
    }
}
