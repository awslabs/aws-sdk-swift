// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct CreateEnvironmentEC2Input: Equatable {
    /// <p>The number of minutes until the running instance is shut down after the environment has last been used.</p>
    public let automaticStopTimeMinutes: Int?
    /// <p>A unique, case-sensitive string that helps AWS Cloud9 to ensure this operation completes no more than one time.</p>
    ///          <p>For more information, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Client Tokens</a> in the <i>Amazon EC2 API Reference</i>.</p>
    public let clientRequestToken: String?
    /// <p>The connection type used for connecting to an Amazon EC2 environment. Valid values are <code>CONNECT_SSH</code> (default) and <code>CONNECT_SSM</code> (connected through AWS Systems Manager).</p>
    ///          <p>For more information, see <a href="https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html">Accessing no-ingress EC2 instances with AWS Systems Manager</a> in the <i>AWS Cloud9 User Guide</i>.</p>
    public let connectionType: ConnectionType?
    /// <p>The description of the environment to create.</p>
    public let description: String?
    /// <p>The identifier for the Amazon Machine Image (AMI) that's used to create the EC2 instance. To choose an AMI for the instance, you must specify a valid AMI alias or a valid AWS Systems Manager (SSM) path.</p>
    ///          <p>The default AMI is used if the parameter isn't explicitly assigned a value in the request.
    ///    </p>
    ///          <p>
    ///             <b>AMI aliases </b>
    ///          </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Amazon Linux (default): <code>amazonlinux-1-x86_64</code>
    ///                   </b>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Amazon Linux 2: <code>amazonlinux-2-x86_64</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Ubuntu 18.04: <code>ubuntu-18.04-x86_64</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    ///
    ///          <p>
    ///             <b>SSM paths</b>
    ///          </p>
    ///          <ul>
    ///             <li>
    ///                <p>
    ///                   <b>Amazon Linux (default): <code>resolve:ssm:/aws/service/cloud9/amis/amazonlinux-1-x86_64</code>
    ///                   </b>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Amazon Linux 2: <code>resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64</code>
    ///                </p>
    ///             </li>
    ///             <li>
    ///                <p>Ubuntu 18.04: <code>resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64</code>
    ///                </p>
    ///             </li>
    ///          </ul>
    public let imageId: String?
    /// <p>The type of instance to connect to the environment (for example, <code>t2.micro</code>).</p>
    public let instanceType: String?
    /// <p>The name of the environment to create.</p>
    ///          <p>This name is visible to other AWS IAM users in the same AWS account.</p>
    public let name: String?
    /// <p>The Amazon Resource Name (ARN) of the environment owner. This ARN can be the ARN of any AWS IAM principal. If this value is not specified, the ARN defaults to this environment's creator.</p>
    public let ownerArn: String?
    /// <p>The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.</p>
    public let subnetId: String?
    /// <p>An array of key-value pairs that will be associated with the new AWS Cloud9 development environment.</p>
    public let tags: [Tag]?

    public init (
        automaticStopTimeMinutes: Int? = nil,
        clientRequestToken: String? = nil,
        connectionType: ConnectionType? = nil,
        description: String? = nil,
        imageId: String? = nil,
        instanceType: String? = nil,
        name: String? = nil,
        ownerArn: String? = nil,
        subnetId: String? = nil,
        tags: [Tag]? = nil
    )
    {
        self.automaticStopTimeMinutes = automaticStopTimeMinutes
        self.clientRequestToken = clientRequestToken
        self.connectionType = connectionType
        self.description = description
        self.imageId = imageId
        self.instanceType = instanceType
        self.name = name
        self.ownerArn = ownerArn
        self.subnetId = subnetId
        self.tags = tags
    }
}
