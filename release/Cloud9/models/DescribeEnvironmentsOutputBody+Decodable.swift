// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEnvironmentsOutputBody: Equatable {
    public let environments: [Environment]?
}

extension DescribeEnvironmentsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case environments
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let environmentsContainer = try containerValues.decodeIfPresent([Environment].self, forKey: .environments)
        var environmentsDecoded0:[Environment]? = nil
        if let environmentsContainer = environmentsContainer {
            environmentsDecoded0 = [Environment]()
            for structure0 in environmentsContainer {
                environmentsDecoded0?.append(structure0)
            }
        }
        environments = environmentsDecoded0
    }
}
