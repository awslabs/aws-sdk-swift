// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct DescribeEnvironmentMembershipsInputBody: Equatable {
    public let userArn: String?
    public let environmentId: String?
    public let permissions: [Permissions]?
    public let nextToken: String?
    public let maxResults: Int?
}

extension DescribeEnvironmentMembershipsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case environmentId
        case maxResults
        case nextToken
        case permissions
        case userArn
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userArn)
        userArn = userArnDecoded
        let environmentIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .environmentId)
        environmentId = environmentIdDecoded
        let permissionsContainer = try containerValues.decodeIfPresent([Permissions].self, forKey: .permissions)
        var permissionsDecoded0:[Permissions]? = nil
        if let permissionsContainer = permissionsContainer {
            permissionsDecoded0 = [Permissions]()
            for string0 in permissionsContainer {
                permissionsDecoded0?.append(string0)
            }
        }
        permissions = permissionsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let maxResultsDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
    }
}
