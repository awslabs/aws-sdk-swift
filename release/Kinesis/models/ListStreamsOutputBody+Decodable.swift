// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsOutputBody: Equatable {
    public let streamNames: [String]?
    public let hasMoreStreams: Bool?
}

extension ListStreamsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case hasMoreStreams = "HasMoreStreams"
        case streamNames = "StreamNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .streamNames)
        var streamNamesDecoded0:[String]? = nil
        if let streamNamesContainer = streamNamesContainer {
            streamNamesDecoded0 = [String]()
            for string0 in streamNamesContainer {
                streamNamesDecoded0?.append(string0)
            }
        }
        streamNames = streamNamesDecoded0
        let hasMoreStreamsDecoded = try containerValues.decodeIfPresent(Bool.self, forKey: .hasMoreStreams)
        hasMoreStreams = hasMoreStreamsDecoded
    }
}
