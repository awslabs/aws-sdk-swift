// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListShardsOutputBody: Equatable {
    public let shards: [Shard]?
    public let nextToken: String?
}

extension ListShardsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case shards = "Shards"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shardsContainer = try containerValues.decodeIfPresent([Shard].self, forKey: .shards)
        var shardsDecoded0:[Shard]? = nil
        if let shardsContainer = shardsContainer {
            shardsDecoded0 = [Shard]()
            for structure0 in shardsContainer {
                shardsDecoded0?.append(structure0)
            }
        }
        shards = shardsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
