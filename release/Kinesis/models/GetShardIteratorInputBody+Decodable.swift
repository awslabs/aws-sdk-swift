// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetShardIteratorInputBody: Equatable {
    public let streamName: String?
    public let shardId: String?
    public let shardIteratorType: ShardIteratorType?
    public let startingSequenceNumber: String?
    public let timestamp: Date?
}

extension GetShardIteratorInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case shardId = "ShardId"
        case shardIteratorType = "ShardIteratorType"
        case startingSequenceNumber = "StartingSequenceNumber"
        case streamName = "StreamName"
        case timestamp = "Timestamp"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let shardIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .shardId)
        shardId = shardIdDecoded
        let shardIteratorTypeDecoded = try containerValues.decodeIfPresent(ShardIteratorType.self, forKey: .shardIteratorType)
        shardIteratorType = shardIteratorTypeDecoded
        let startingSequenceNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .startingSequenceNumber)
        startingSequenceNumber = startingSequenceNumberDecoded
        let timestampDecoded = try containerValues.decodeIfPresent(Date.self, forKey: .timestamp)
        timestamp = timestampDecoded
    }
}
