// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct PutRecordOutputBody: Equatable {
    public let shardId: String?
    public let sequenceNumber: String?
    public let encryptionType: EncryptionType?
}

extension PutRecordOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case encryptionType = "EncryptionType"
        case sequenceNumber = "SequenceNumber"
        case shardId = "ShardId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let shardIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .shardId)
        shardId = shardIdDecoded
        let sequenceNumberDecoded = try containerValues.decodeIfPresent(String.self, forKey: .sequenceNumber)
        sequenceNumber = sequenceNumberDecoded
        let encryptionTypeDecoded = try containerValues.decodeIfPresent(EncryptionType.self, forKey: .encryptionType)
        encryptionType = encryptionTypeDecoded
    }
}
