// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamConsumersOutputBody: Equatable {
    public let consumers: [Consumer]?
    public let nextToken: String?
}

extension ListStreamConsumersOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case consumers = "Consumers"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consumersContainer = try containerValues.decodeIfPresent([Consumer].self, forKey: .consumers)
        var consumersDecoded0:[Consumer]? = nil
        if let consumersContainer = consumersContainer {
            consumersDecoded0 = [Consumer]()
            for structure0 in consumersContainer {
                consumersDecoded0?.append(structure0)
            }
        }
        consumers = consumersDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
