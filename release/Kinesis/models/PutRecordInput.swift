// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the input for <code>PutRecord</code>.</p>
public struct PutRecordInput: Equatable {
    /// <p>The data blob to put into the record, which is base64-encoded when the blob is
    ///             serialized. When the data blob (the payload before base64-encoding) is added to the
    ///             partition key size, the total size must not exceed the maximum record size (1
    ///             MiB).</p>
    public let data: Data?
    /// <p>The hash value used to explicitly determine the shard the data record is assigned
    ///             to by overriding the partition key hash.</p>
    public let explicitHashKey: String?
    /// <p>Determines which shard in the stream the data record is assigned to. Partition keys
    ///             are Unicode strings with a maximum length limit of 256 characters for each key. Amazon
    ///             Kinesis Data Streams uses the partition key as input to a hash function that maps the
    ///             partition key and associated data to a specific shard. Specifically, an MD5 hash
    ///             function is used to map partition keys to 128-bit integer values and to map associated
    ///             data records to shards. As a result of this hashing mechanism, all data records with the
    ///             same partition key map to the same shard within the stream.</p>
    public let partitionKey: String?
    /// <p>Guarantees strictly increasing sequence numbers, for puts from the same client and
    ///             to the same partition key. Usage: set the <code>SequenceNumberForOrdering</code> of
    ///             record <i>n</i> to the sequence number of record <i>n-1</i>
    ///             (as returned in the result when putting record <i>n-1</i>). If this
    ///             parameter is not set, records are coarsely ordered based on arrival time.</p>
    public let sequenceNumberForOrdering: String?
    /// <p>The name of the stream to put the data record into.</p>
    public let streamName: String?

    public init (
        data: Data? = nil,
        explicitHashKey: String? = nil,
        partitionKey: String? = nil,
        sequenceNumberForOrdering: String? = nil,
        streamName: String? = nil
    )
    {
        self.data = data
        self.explicitHashKey = explicitHashKey
        self.partitionKey = partitionKey
        self.sequenceNumberForOrdering = sequenceNumberForOrdering
        self.streamName = streamName
    }
}
