// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct EnableEnhancedMonitoringInputBody: Equatable {
    public let streamName: String?
    public let shardLevelMetrics: [MetricsName]?
}

extension EnableEnhancedMonitoringInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case shardLevelMetrics = "ShardLevelMetrics"
        case streamName = "StreamName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let shardLevelMetricsContainer = try containerValues.decodeIfPresent([MetricsName].self, forKey: .shardLevelMetrics)
        var shardLevelMetricsDecoded0:[MetricsName]? = nil
        if let shardLevelMetricsContainer = shardLevelMetricsContainer {
            shardLevelMetricsDecoded0 = [MetricsName]()
            for string0 in shardLevelMetricsContainer {
                shardLevelMetricsDecoded0?.append(string0)
            }
        }
        shardLevelMetrics = shardLevelMetricsDecoded0
    }
}
