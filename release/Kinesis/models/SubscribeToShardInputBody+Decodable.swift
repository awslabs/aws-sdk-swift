// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SubscribeToShardInputBody: Equatable {
    public let consumerARN: String?
    public let shardId: String?
    public let startingPosition: StartingPosition?
}

extension SubscribeToShardInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case consumerARN = "ConsumerARN"
        case shardId = "ShardId"
        case startingPosition = "StartingPosition"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let consumerARNDecoded = try containerValues.decodeIfPresent(String.self, forKey: .consumerARN)
        consumerARN = consumerARNDecoded
        let shardIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .shardId)
        shardId = shardIdDecoded
        let startingPositionDecoded = try containerValues.decodeIfPresent(StartingPosition.self, forKey: .startingPosition)
        startingPosition = startingPositionDecoded
    }
}
