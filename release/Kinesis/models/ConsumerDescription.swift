// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>An object that represents the details of a registered consumer. This type of object is
///             returned by <a>DescribeStreamConsumer</a>.</p>
public struct ConsumerDescription: Equatable {
    /// <p>When you register a consumer, Kinesis Data Streams generates an ARN for it. You need
    ///             this ARN to be able to call <a>SubscribeToShard</a>.</p>
    ///         <p>If you delete a consumer and then create a new one with the same name, it won't have
    ///             the same ARN. That's because consumer ARNs contain the creation timestamp. This is
    ///             important to keep in mind if you have IAM policies that reference consumer ARNs.</p>
    public let consumerARN: String?
    /// <p></p>
    public let consumerCreationTimestamp: Date?
    /// <p>The name of the consumer is something you choose when you register the
    ///             consumer.</p>
    public let consumerName: String?
    /// <p>A consumer can't read data while in the <code>CREATING</code> or <code>DELETING</code>
    ///             states.</p>
    public let consumerStatus: ConsumerStatus?
    /// <p>The ARN of the stream with which you registered the consumer.</p>
    public let streamARN: String?

    public init (
        consumerARN: String? = nil,
        consumerCreationTimestamp: Date? = nil,
        consumerName: String? = nil,
        consumerStatus: ConsumerStatus? = nil,
        streamARN: String? = nil
    )
    {
        self.consumerARN = consumerARN
        self.consumerCreationTimestamp = consumerCreationTimestamp
        self.consumerName = consumerName
        self.consumerStatus = consumerStatus
        self.streamARN = streamARN
    }
}
