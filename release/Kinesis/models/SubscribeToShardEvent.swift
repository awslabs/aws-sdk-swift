// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>After you call <a>SubscribeToShard</a>, Kinesis Data Streams sends events
///             of this type over an HTTP/2 connection to your consumer.</p>
public struct SubscribeToShardEvent: Equatable {
    public let childShards: [ChildShard]?
    /// <p>Use this as <code>SequenceNumber</code> in the next call to <a>SubscribeToShard</a>, with <code>StartingPosition</code> set to
    ///                 <code>AT_SEQUENCE_NUMBER</code> or <code>AFTER_SEQUENCE_NUMBER</code>. Use
    ///                 <code>ContinuationSequenceNumber</code> for checkpointing because it captures your
    ///             shard progress even when no data is written to the shard.</p>
    public let continuationSequenceNumber: String?
    /// <p>The number of milliseconds the read records are from the tip of the stream, indicating
    ///             how far behind current time the consumer is. A value of zero indicates that record
    ///             processing is caught up, and there are no new records to process at this moment.</p>
    public let millisBehindLatest: Int?
    /// <p></p>
    public let records: [Record]?

    public init (
        childShards: [ChildShard]? = nil,
        continuationSequenceNumber: String? = nil,
        millisBehindLatest: Int? = nil,
        records: [Record]? = nil
    )
    {
        self.childShards = childShards
        self.continuationSequenceNumber = continuationSequenceNumber
        self.millisBehindLatest = millisBehindLatest
        self.records = records
    }
}
