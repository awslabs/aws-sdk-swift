// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListStreamsInputBody: Equatable {
    public let limit: Int?
    public let exclusiveStartStreamName: String?
}

extension ListStreamsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveStartStreamName = "ExclusiveStartStreamName"
        case limit = "Limit"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let exclusiveStartStreamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartStreamName)
        exclusiveStartStreamName = exclusiveStartStreamNameDecoded
    }
}
