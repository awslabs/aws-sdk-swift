// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTagsForStreamInputBody: Equatable {
    public let streamName: String?
    public let exclusiveStartTagKey: String?
    public let limit: Int?
}

extension ListTagsForStreamInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveStartTagKey = "ExclusiveStartTagKey"
        case limit = "Limit"
        case streamName = "StreamName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let streamNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .streamName)
        streamName = streamNameDecoded
        let exclusiveStartTagKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartTagKey)
        exclusiveStartTagKey = exclusiveStartTagKeyDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
