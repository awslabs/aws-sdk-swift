// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListStreamConsumersInput: Equatable {
    /// <p>The maximum number of consumers that you want a single call of
    ///                 <code>ListStreamConsumers</code> to return.</p>
    public let maxResults: Int?
    /// <p>When the number of consumers that are registered with the data stream is greater than
    ///             the default value for the <code>MaxResults</code> parameter, or if you explicitly
    ///             specify a value for <code>MaxResults</code> that is less than the number of consumers
    ///             that are registered with the data stream, the response includes a pagination token named
    ///                 <code>NextToken</code>. You can specify this <code>NextToken</code> value in a
    ///             subsequent call to <code>ListStreamConsumers</code> to list the next set of registered
    ///             consumers.</p>
    ///         <p>Don't specify <code>StreamName</code> or <code>StreamCreationTimestamp</code> if you
    ///             specify <code>NextToken</code> because the latter unambiguously identifies the
    ///             stream.</p>
    ///         <p>You can optionally specify a value for the <code>MaxResults</code> parameter when you
    ///             specify <code>NextToken</code>. If you specify a <code>MaxResults</code> value that is
    ///             less than the number of consumers that the operation returns if you don't specify
    ///                 <code>MaxResults</code>, the response will contain a new <code>NextToken</code>
    ///             value. You can use the new <code>NextToken</code> value in a subsequent call to the
    ///                 <code>ListStreamConsumers</code> operation to list the next set of consumers.</p>
    ///         <important>
    ///             <p>Tokens expire after 300 seconds. When you obtain a value for
    ///                     <code>NextToken</code> in the response to a call to
    ///                     <code>ListStreamConsumers</code>, you have 300 seconds to use that value. If you
    ///                 specify an expired token in a call to <code>ListStreamConsumers</code>, you get
    ///                     <code>ExpiredNextTokenException</code>.</p>
    ///         </important>
    public let nextToken: String?
    /// <p>The ARN of the Kinesis data stream for which you want to list the registered
    ///             consumers. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    public let streamARN: String?
    /// <p>Specify this input parameter to distinguish data streams that have the same name. For
    ///             example, if you create a data stream and then delete it, and you later create another
    ///             data stream with the same name, you can use this input parameter to specify which of the
    ///             two streams you want to list the consumers for. </p>
    ///         <p>You can't specify this parameter if you specify the NextToken parameter. </p>
    public let streamCreationTimestamp: Date?

    public init (
        maxResults: Int? = nil,
        nextToken: String? = nil,
        streamARN: String? = nil,
        streamCreationTimestamp: Date? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.streamARN = streamARN
        self.streamCreationTimestamp = streamCreationTimestamp
    }
}
