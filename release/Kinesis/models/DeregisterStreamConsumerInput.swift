// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct DeregisterStreamConsumerInput: Equatable {
    /// <p>The ARN returned by Kinesis Data Streams when you registered the consumer. If you
    ///             don't know the ARN of the consumer that you want to deregister, you can use the
    ///             ListStreamConsumers operation to get a list of the descriptions of all the consumers
    ///             that are currently registered with a given data stream. The description of a consumer
    ///             contains its ARN.</p>
    public let consumerARN: String?
    /// <p>The name that you gave to the consumer.</p>
    public let consumerName: String?
    /// <p>The ARN of the Kinesis data stream that the consumer is registered with. For more
    ///             information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>
    public let streamARN: String?

    public init (
        consumerARN: String? = nil,
        consumerName: String? = nil,
        streamARN: String? = nil
    )
    {
        self.consumerARN = consumerARN
        self.consumerName = consumerName
        self.streamARN = streamARN
    }
}
