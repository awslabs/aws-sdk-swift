// swift-tools-version:5.4
import PackageDescription
import class Foundation.FileManager
let package = Package(
    name: "AWSSwiftSDK",
    platforms: [
        .macOS(.v10_15),
        .iOS(.v13)
    ],
    products: [
        .library(name: "AWSClientRuntime", targets: ["AWSClientRuntime"]),
        .library(name: "ACM", targets: ["ACM"]),
        .library(name: "ACMPCA", targets: ["ACMPCA"]),
        .library(name: "APIGateway", targets: ["APIGateway"]),
        .library(name: "AccessAnalyzer", targets: ["AccessAnalyzer"]),
        .library(name: "AlexaForBusiness", targets: ["AlexaForBusiness"]),
        .library(name: "Amp", targets: ["Amp"]),
        .library(name: "Amplify", targets: ["Amplify"]),
        .library(name: "AmplifyBackend", targets: ["AmplifyBackend"]),
        .library(name: "ApiGatewayManagementApi", targets: ["ApiGatewayManagementApi"]),
        .library(name: "ApiGatewayV2", targets: ["ApiGatewayV2"]),
        .library(name: "AppConfig", targets: ["AppConfig"]),
        .library(name: "AppIntegrations", targets: ["AppIntegrations"]),
        .library(name: "AppMesh", targets: ["AppMesh"]),
        .library(name: "AppRunner", targets: ["AppRunner"]),
        .library(name: "AppStream", targets: ["AppStream"]),
        .library(name: "AppSync", targets: ["AppSync"]),
        .library(name: "Appflow", targets: ["Appflow"]),
        .library(name: "ApplicationAutoScaling", targets: ["ApplicationAutoScaling"]),
        .library(name: "ApplicationCostProfiler", targets: ["ApplicationCostProfiler"]),
        .library(name: "ApplicationDiscoveryService", targets: ["ApplicationDiscoveryService"]),
        .library(name: "ApplicationInsights", targets: ["ApplicationInsights"]),
        .library(name: "Athena", targets: ["Athena"]),
        .library(name: "AuditManager", targets: ["AuditManager"]),
        .library(name: "AutoScaling", targets: ["AutoScaling"]),
        .library(name: "AutoScalingPlans", targets: ["AutoScalingPlans"]),
        .library(name: "Backup", targets: ["Backup"]),
        .library(name: "Batch", targets: ["Batch"]),
        .library(name: "Braket", targets: ["Braket"]),
        .library(name: "Budgets", targets: ["Budgets"]),
        .library(name: "Chime", targets: ["Chime"]),
        .library(name: "Cloud9", targets: ["Cloud9"]),
        .library(name: "CloudDirectory", targets: ["CloudDirectory"]),
        .library(name: "CloudFormation", targets: ["CloudFormation"]),
        .library(name: "CloudFront", targets: ["CloudFront"]),
        .library(name: "CloudHSM", targets: ["CloudHSM"]),
        .library(name: "CloudHSMV2", targets: ["CloudHSMV2"]),
        .library(name: "CloudSearch", targets: ["CloudSearch"]),
        .library(name: "CloudSearchDomain", targets: ["CloudSearchDomain"]),
        .library(name: "CloudTrail", targets: ["CloudTrail"]),
        .library(name: "CloudWatch", targets: ["CloudWatch"]),
        .library(name: "CloudWatchEvents", targets: ["CloudWatchEvents"]),
        .library(name: "CloudWatchLogs", targets: ["CloudWatchLogs"]),
        .library(name: "CodeBuild", targets: ["CodeBuild"]),
        .library(name: "CodeCommit", targets: ["CodeCommit"]),
        .library(name: "CodeDeploy", targets: ["CodeDeploy"]),
        .library(name: "CodeGuruProfiler", targets: ["CodeGuruProfiler"]),
        .library(name: "CodeGuruReviewer", targets: ["CodeGuruReviewer"]),
        .library(name: "CodePipeline", targets: ["CodePipeline"]),
        .library(name: "CodeStar", targets: ["CodeStar"]),
        .library(name: "CodeStarconnections", targets: ["CodeStarconnections"]),
        .library(name: "Codeartifact", targets: ["Codeartifact"]),
        .library(name: "Codestarnotifications", targets: ["Codestarnotifications"]),
        .library(name: "CognitoIdentity", targets: ["CognitoIdentity"]),
        .library(name: "CognitoIdentityProvider", targets: ["CognitoIdentityProvider"]),
        .library(name: "CognitoSync", targets: ["CognitoSync"]),
        .library(name: "Comprehend", targets: ["Comprehend"]),
        .library(name: "ComprehendMedical", targets: ["ComprehendMedical"]),
        .library(name: "ComputeOptimizer", targets: ["ComputeOptimizer"]),
        .library(name: "ConfigService", targets: ["ConfigService"]),
        .library(name: "Connect", targets: ["Connect"]),
        .library(name: "ConnectContactLens", targets: ["ConnectContactLens"]),
        .library(name: "ConnectParticipant", targets: ["ConnectParticipant"]),
        .library(name: "CostExplorer", targets: ["CostExplorer"]),
        .library(name: "CostandUsageReportService", targets: ["CostandUsageReportService"]),
        .library(name: "CustomerProfiles", targets: ["CustomerProfiles"]),
        .library(name: "DAX", targets: ["DAX"]),
        .library(name: "DLM", targets: ["DLM"]),
        .library(name: "DataBrew", targets: ["DataBrew"]),
        .library(name: "DataExchange", targets: ["DataExchange"]),
        .library(name: "DataPipeline", targets: ["DataPipeline"]),
        .library(name: "DataSync", targets: ["DataSync"]),
        .library(name: "DatabaseMigrationService", targets: ["DatabaseMigrationService"]),
        .library(name: "Detective", targets: ["Detective"]),
        .library(name: "DevOpsGuru", targets: ["DevOpsGuru"]),
        .library(name: "DeviceFarm", targets: ["DeviceFarm"]),
        .library(name: "DirectConnect", targets: ["DirectConnect"]),
        .library(name: "DirectoryService", targets: ["DirectoryService"]),
        .library(name: "DocDB", targets: ["DocDB"]),
        .library(name: "DynamoDB", targets: ["DynamoDB"]),
        .library(name: "DynamoDBStreams", targets: ["DynamoDBStreams"]),
        .library(name: "EBS", targets: ["EBS"]),
        .library(name: "EC2", targets: ["EC2"]),
        .library(name: "EC2InstanceConnect", targets: ["EC2InstanceConnect"]),
        .library(name: "ECR", targets: ["ECR"]),
        .library(name: "ECRPUBLIC", targets: ["ECRPUBLIC"]),
        .library(name: "ECS", targets: ["ECS"]),
        .library(name: "EFS", targets: ["EFS"]),
        .library(name: "EKS", targets: ["EKS"]),
        .library(name: "EMR", targets: ["EMR"]),
        .library(name: "EMRcontainers", targets: ["EMRcontainers"]),
        .library(name: "ElastiCache", targets: ["ElastiCache"]),
        .library(name: "ElasticBeanstalk", targets: ["ElasticBeanstalk"]),
        .library(name: "ElasticInference", targets: ["ElasticInference"]),
        .library(name: "ElasticLoadBalancing", targets: ["ElasticLoadBalancing"]),
        .library(name: "ElasticLoadBalancingv2", targets: ["ElasticLoadBalancingv2"]),
        .library(name: "ElasticTranscoder", targets: ["ElasticTranscoder"]),
        .library(name: "ElasticsearchService", targets: ["ElasticsearchService"]),
        .library(name: "EventBridge", targets: ["EventBridge"]),
        .library(name: "FMS", targets: ["FMS"]),
        .library(name: "FSx", targets: ["FSx"]),
        .library(name: "Finspace", targets: ["Finspace"]),
        .library(name: "Finspacedata", targets: ["Finspacedata"]),
        .library(name: "Firehose", targets: ["Firehose"]),
        .library(name: "Fis", targets: ["Fis"]),
        .library(name: "Forecast", targets: ["Forecast"]),
        .library(name: "Forecastquery", targets: ["Forecastquery"]),
        .library(name: "FraudDetector", targets: ["FraudDetector"]),
        .library(name: "GameLift", targets: ["GameLift"]),
        .library(name: "Glacier", targets: ["Glacier"]),
        .library(name: "GlobalAccelerator", targets: ["GlobalAccelerator"]),
        .library(name: "Glue", targets: ["Glue"]),
        .library(name: "Greengrass", targets: ["Greengrass"]),
        .library(name: "GreengrassV2", targets: ["GreengrassV2"]),
        .library(name: "GroundStation", targets: ["GroundStation"]),
        .library(name: "GuardDuty", targets: ["GuardDuty"]),
        .library(name: "Health", targets: ["Health"]),
        .library(name: "HealthLake", targets: ["HealthLake"]),
        .library(name: "Honeycode", targets: ["Honeycode"]),
        .library(name: "IAM", targets: ["IAM"]),
        .library(name: "Identitystore", targets: ["Identitystore"]),
        .library(name: "Imagebuilder", targets: ["Imagebuilder"]),
        .library(name: "Inspector", targets: ["Inspector"]),
        .library(name: "IoT", targets: ["IoT"]),
        .library(name: "IoT1ClickDevicesService", targets: ["IoT1ClickDevicesService"]),
        .library(name: "IoT1ClickProjects", targets: ["IoT1ClickProjects"]),
        .library(name: "IoTAnalytics", targets: ["IoTAnalytics"]),
        .library(name: "IoTDataPlane", targets: ["IoTDataPlane"]),
        .library(name: "IoTEvents", targets: ["IoTEvents"]),
        .library(name: "IoTEventsData", targets: ["IoTEventsData"]),
        .library(name: "IoTFleetHub", targets: ["IoTFleetHub"]),
        .library(name: "IoTJobsDataPlane", targets: ["IoTJobsDataPlane"]),
        .library(name: "IoTSecureTunneling", targets: ["IoTSecureTunneling"]),
        .library(name: "IoTSiteWise", targets: ["IoTSiteWise"]),
        .library(name: "IoTThingsGraph", targets: ["IoTThingsGraph"]),
        .library(name: "IoTWireless", targets: ["IoTWireless"]),
        .library(name: "IotDeviceAdvisor", targets: ["IotDeviceAdvisor"]),
        .library(name: "Ivs", targets: ["Ivs"]),
        .library(name: "KMS", targets: ["KMS"]),
        .library(name: "Kafka", targets: ["Kafka"]),
        .library(name: "Kendra", targets: ["Kendra"]),
        .library(name: "Kinesis", targets: ["Kinesis"]),
        .library(name: "KinesisAnalytics", targets: ["KinesisAnalytics"]),
        .library(name: "KinesisAnalyticsV2", targets: ["KinesisAnalyticsV2"]),
        .library(name: "KinesisVideo", targets: ["KinesisVideo"]),
        .library(name: "KinesisVideoArchivedMedia", targets: ["KinesisVideoArchivedMedia"]),
        .library(name: "KinesisVideoMedia", targets: ["KinesisVideoMedia"]),
        .library(name: "KinesisVideoSignaling", targets: ["KinesisVideoSignaling"]),
        .library(name: "LakeFormation", targets: ["LakeFormation"]),
        .library(name: "Lambda", targets: ["Lambda"]),
        .library(name: "LexModelBuildingService", targets: ["LexModelBuildingService"]),
        .library(name: "LexModelsV2", targets: ["LexModelsV2"]),
        .library(name: "LexRuntimeService", targets: ["LexRuntimeService"]),
        .library(name: "LexRuntimeV2", targets: ["LexRuntimeV2"]),
        .library(name: "LicenseManager", targets: ["LicenseManager"]),
        .library(name: "Lightsail", targets: ["Lightsail"]),
        .library(name: "LookoutEquipment", targets: ["LookoutEquipment"]),
        .library(name: "LookoutMetrics", targets: ["LookoutMetrics"]),
        .library(name: "LookoutVision", targets: ["LookoutVision"]),
        .library(name: "MTurk", targets: ["MTurk"]),
        .library(name: "MWAA", targets: ["MWAA"]),
        .library(name: "MachineLearning", targets: ["MachineLearning"]),
        .library(name: "Macie", targets: ["Macie"]),
        .library(name: "Macie2", targets: ["Macie2"]),
        .library(name: "ManagedBlockchain", targets: ["ManagedBlockchain"]),
        .library(name: "MarketplaceCatalog", targets: ["MarketplaceCatalog"]),
        .library(name: "MarketplaceCommerceAnalytics", targets: ["MarketplaceCommerceAnalytics"]),
        .library(name: "MarketplaceEntitlementService", targets: ["MarketplaceEntitlementService"]),
        .library(name: "MarketplaceMetering", targets: ["MarketplaceMetering"]),
        .library(name: "MediaConnect", targets: ["MediaConnect"]),
        .library(name: "MediaConvert", targets: ["MediaConvert"]),
        .library(name: "MediaLive", targets: ["MediaLive"]),
        .library(name: "MediaPackage", targets: ["MediaPackage"]),
        .library(name: "MediaPackageVod", targets: ["MediaPackageVod"]),
        .library(name: "MediaStore", targets: ["MediaStore"]),
        .library(name: "MediaStoreData", targets: ["MediaStoreData"]),
        .library(name: "MediaTailor", targets: ["MediaTailor"]),
        .library(name: "Mgn", targets: ["Mgn"]),
        .library(name: "MigrationHub", targets: ["MigrationHub"]),
        .library(name: "MigrationHubConfig", targets: ["MigrationHubConfig"]),
        .library(name: "Mobile", targets: ["Mobile"]),
        .library(name: "Mq", targets: ["Mq"]),
        .library(name: "Neptune", targets: ["Neptune"]),
        .library(name: "NetworkFirewall", targets: ["NetworkFirewall"]),
        .library(name: "NetworkManager", targets: ["NetworkManager"]),
        .library(name: "Nimble", targets: ["Nimble"]),
        .library(name: "OpsWorks", targets: ["OpsWorks"]),
        .library(name: "OpsWorksCM", targets: ["OpsWorksCM"]),
        .library(name: "Organizations", targets: ["Organizations"]),
        .library(name: "Outposts", targets: ["Outposts"]),
        .library(name: "PI", targets: ["PI"]),
        .library(name: "Personalize", targets: ["Personalize"]),
        .library(name: "PersonalizeEvents", targets: ["PersonalizeEvents"]),
        .library(name: "PersonalizeRuntime", targets: ["PersonalizeRuntime"]),
        .library(name: "Pinpoint", targets: ["Pinpoint"]),
        .library(name: "PinpointEmail", targets: ["PinpointEmail"]),
        .library(name: "PinpointSMSVoice", targets: ["PinpointSMSVoice"]),
        .library(name: "Polly", targets: ["Polly"]),
        .library(name: "Pricing", targets: ["Pricing"]),
        .library(name: "QLDB", targets: ["QLDB"]),
        .library(name: "QLDBSession", targets: ["QLDBSession"]),
        .library(name: "QuickSight", targets: ["QuickSight"]),
        .library(name: "RAM", targets: ["RAM"]),
        .library(name: "RDS", targets: ["RDS"]),
        .library(name: "RDSData", targets: ["RDSData"]),
        .library(name: "Redshift", targets: ["Redshift"]),
        .library(name: "RedshiftData", targets: ["RedshiftData"]),
        .library(name: "Rekognition", targets: ["Rekognition"]),
        .library(name: "ResourceGroups", targets: ["ResourceGroups"]),
        .library(name: "ResourceGroupsTaggingAPI", targets: ["ResourceGroupsTaggingAPI"]),
        .library(name: "RoboMaker", targets: ["RoboMaker"]),
        .library(name: "Route53", targets: ["Route53"]),
        .library(name: "Route53Domains", targets: ["Route53Domains"]),
        .library(name: "Route53Resolver", targets: ["Route53Resolver"]),
        .library(name: "S3", targets: ["S3"]),
        .library(name: "S3Control", targets: ["S3Control"]),
        .library(name: "S3Outposts", targets: ["S3Outposts"]),
        .library(name: "SES", targets: ["SES"]),
        .library(name: "SESv2", targets: ["SESv2"]),
        .library(name: "SFN", targets: ["SFN"]),
        .library(name: "SMS", targets: ["SMS"]),
        .library(name: "SNS", targets: ["SNS"]),
        .library(name: "SQS", targets: ["SQS"]),
        .library(name: "SSM", targets: ["SSM"]),
        .library(name: "SSMContacts", targets: ["SSMContacts"]),
        .library(name: "SSMIncidents", targets: ["SSMIncidents"]),
        .library(name: "SSO", targets: ["SSO"]),
        .library(name: "SSOAdmin", targets: ["SSOAdmin"]),
        .library(name: "SSOOIDC", targets: ["SSOOIDC"]),
        .library(name: "STS", targets: ["STS"]),
        .library(name: "SWF", targets: ["SWF"]),
        .library(name: "SageMaker", targets: ["SageMaker"]),
        .library(name: "SageMakerA2IRuntime", targets: ["SageMakerA2IRuntime"]),
        .library(name: "SageMakerFeatureStoreRuntime", targets: ["SageMakerFeatureStoreRuntime"]),
        .library(name: "SageMakerRuntime", targets: ["SageMakerRuntime"]),
        .library(name: "SagemakerEdge", targets: ["SagemakerEdge"]),
        .library(name: "Savingsplans", targets: ["Savingsplans"]),
        .library(name: "Schemas", targets: ["Schemas"]),
        .library(name: "SecretsManager", targets: ["SecretsManager"]),
        .library(name: "SecurityHub", targets: ["SecurityHub"]),
        .library(name: "ServerlessApplicationRepository", targets: ["ServerlessApplicationRepository"]),
        .library(name: "ServiceCatalog", targets: ["ServiceCatalog"]),
        .library(name: "ServiceCatalogAppRegistry", targets: ["ServiceCatalogAppRegistry"]),
        .library(name: "ServiceDiscovery", targets: ["ServiceDiscovery"]),
        .library(name: "ServiceQuotas", targets: ["ServiceQuotas"]),
        .library(name: "Shield", targets: ["Shield"]),
        .library(name: "Signer", targets: ["Signer"]),
        .library(name: "Snowball", targets: ["Snowball"]),
        .library(name: "StorageGateway", targets: ["StorageGateway"]),
        .library(name: "Support", targets: ["Support"]),
        .library(name: "Synthetics", targets: ["Synthetics"]),
        .library(name: "Textract", targets: ["Textract"]),
        .library(name: "TimestreamQuery", targets: ["TimestreamQuery"]),
        .library(name: "TimestreamWrite", targets: ["TimestreamWrite"]),
        .library(name: "Transcribe", targets: ["Transcribe"]),
        .library(name: "TranscribeStreaming", targets: ["TranscribeStreaming"]),
        .library(name: "Transfer", targets: ["Transfer"]),
        .library(name: "Translate", targets: ["Translate"]),
        .library(name: "WAF", targets: ["WAF"]),
        .library(name: "WAFRegional", targets: ["WAFRegional"]),
        .library(name: "WAFV2", targets: ["WAFV2"]),
        .library(name: "WellArchitected", targets: ["WellArchitected"]),
        .library(name: "WorkDocs", targets: ["WorkDocs"]),
        .library(name: "WorkLink", targets: ["WorkLink"]),
        .library(name: "WorkMail", targets: ["WorkMail"]),
        .library(name: "WorkMailMessageFlow", targets: ["WorkMailMessageFlow"]),
        .library(name: "WorkSpaces", targets: ["WorkSpaces"]),
        .library(name: "XRay", targets: ["XRay"]),
    ],
    dependencies: [
        .package(name: "AwsCrt", url: "https://github.com/awslabs/aws-crt-swift", .branch("master")),
        .package(name: "ClientRuntime", url: "https://github.com/awslabs/smithy-swift", .branch("master"))
    ],
    targets: [
        .target(
            name: "AWSClientRuntime",
            dependencies: [
                .product(name: "ClientRuntime", package: "ClientRuntime"),
                .product(name: "AwsCommonRuntimeKit", package: "AwsCrt")
            ],
            path: "./AWSClientRuntime/Sources"
        ),
        .testTarget(
            name: "AWSClientRuntimeTests",
            dependencies: [
                "AWSClientRuntime",
                .product(name: "SmithyTestUtil", package: "ClientRuntime"),
                .product(name: "ClientRuntime", package: "ClientRuntime")
            ],
            path: "./AWSClientRuntime/Tests"
        ),
        .target(name: "ACM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ACM"),
        .target(name: "ACMPCA", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ACMPCA"),
        .target(name: "APIGateway", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/APIGateway"),
        .target(name: "AccessAnalyzer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AccessAnalyzer"),
        .target(name: "AlexaForBusiness", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AlexaForBusiness"),
        .target(name: "Amp", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Amp"),
        .target(name: "Amplify", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Amplify"),
        .target(name: "AmplifyBackend", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AmplifyBackend"),
        .target(name: "ApiGatewayManagementApi", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApiGatewayManagementApi"),
        .target(name: "ApiGatewayV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApiGatewayV2"),
        .target(name: "AppConfig", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppConfig"),
        .target(name: "AppIntegrations", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppIntegrations"),
        .target(name: "AppMesh", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppMesh"),
        .target(name: "AppRunner", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppRunner"),
        .target(name: "AppStream", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppStream"),
        .target(name: "AppSync", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AppSync"),
        .target(name: "Appflow", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Appflow"),
        .target(name: "ApplicationAutoScaling", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApplicationAutoScaling"),
        .target(name: "ApplicationCostProfiler", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApplicationCostProfiler"),
        .target(name: "ApplicationDiscoveryService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApplicationDiscoveryService"),
        .target(name: "ApplicationInsights", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ApplicationInsights"),
        .target(name: "Athena", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Athena"),
        .target(name: "AuditManager", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AuditManager"),
        .target(name: "AutoScaling", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AutoScaling"),
        .target(name: "AutoScalingPlans", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/AutoScalingPlans"),
        .target(name: "Backup", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Backup"),
        .target(name: "Batch", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Batch"),
        .target(name: "Braket", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Braket"),
        .target(name: "Budgets", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Budgets"),
        .target(name: "Chime", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Chime"),
        .target(name: "Cloud9", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Cloud9"),
        .target(name: "CloudDirectory", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudDirectory"),
        .target(name: "CloudFormation", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudFormation"),
        .target(name: "CloudFront", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudFront"),
        .target(name: "CloudHSM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudHSM"),
        .target(name: "CloudHSMV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudHSMV2"),
        .target(name: "CloudSearch", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudSearch"),
        .target(name: "CloudSearchDomain", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudSearchDomain"),
        .target(name: "CloudTrail", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudTrail"),
        .target(name: "CloudWatch", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudWatch"),
        .target(name: "CloudWatchEvents", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudWatchEvents"),
        .target(name: "CloudWatchLogs", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CloudWatchLogs"),
        .target(name: "CodeBuild", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeBuild"),
        .target(name: "CodeCommit", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeCommit"),
        .target(name: "CodeDeploy", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeDeploy"),
        .target(name: "CodeGuruProfiler", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeGuruProfiler"),
        .target(name: "CodeGuruReviewer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeGuruReviewer"),
        .target(name: "CodePipeline", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodePipeline"),
        .target(name: "CodeStar", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeStar"),
        .target(name: "CodeStarconnections", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CodeStarconnections"),
        .target(name: "Codeartifact", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Codeartifact"),
        .target(name: "Codestarnotifications", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Codestarnotifications"),
        .target(name: "CognitoIdentity", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CognitoIdentity"),
        .target(name: "CognitoIdentityProvider", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CognitoIdentityProvider"),
        .target(name: "CognitoSync", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CognitoSync"),
        .target(name: "Comprehend", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Comprehend"),
        .target(name: "ComprehendMedical", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ComprehendMedical"),
        .target(name: "ComputeOptimizer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ComputeOptimizer"),
        .target(name: "ConfigService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ConfigService"),
        .target(name: "Connect", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Connect"),
        .target(name: "ConnectContactLens", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ConnectContactLens"),
        .target(name: "ConnectParticipant", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ConnectParticipant"),
        .target(name: "CostExplorer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CostExplorer"),
        .target(name: "CostandUsageReportService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CostandUsageReportService"),
        .target(name: "CustomerProfiles", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/CustomerProfiles"),
        .target(name: "DAX", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DAX"),
        .target(name: "DLM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DLM"),
        .target(name: "DataBrew", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DataBrew"),
        .target(name: "DataExchange", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DataExchange"),
        .target(name: "DataPipeline", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DataPipeline"),
        .target(name: "DataSync", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DataSync"),
        .target(name: "DatabaseMigrationService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DatabaseMigrationService"),
        .target(name: "Detective", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Detective"),
        .target(name: "DevOpsGuru", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DevOpsGuru"),
        .target(name: "DeviceFarm", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DeviceFarm"),
        .target(name: "DirectConnect", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DirectConnect"),
        .target(name: "DirectoryService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DirectoryService"),
        .target(name: "DocDB", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DocDB"),
        .target(name: "DynamoDB", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DynamoDB"),
        .target(name: "DynamoDBStreams", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/DynamoDBStreams"),
        .target(name: "EBS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EBS"),
        .target(name: "EC2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EC2"),
        .target(name: "EC2InstanceConnect", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EC2InstanceConnect"),
        .target(name: "ECR", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ECR"),
        .target(name: "ECRPUBLIC", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ECRPUBLIC"),
        .target(name: "ECS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ECS"),
        .target(name: "EFS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EFS"),
        .target(name: "EKS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EKS"),
        .target(name: "EMR", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EMR"),
        .target(name: "EMRcontainers", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EMRcontainers"),
        .target(name: "ElastiCache", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElastiCache"),
        .target(name: "ElasticBeanstalk", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticBeanstalk"),
        .target(name: "ElasticInference", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticInference"),
        .target(name: "ElasticLoadBalancing", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticLoadBalancing"),
        .target(name: "ElasticLoadBalancingv2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticLoadBalancingv2"),
        .target(name: "ElasticTranscoder", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticTranscoder"),
        .target(name: "ElasticsearchService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ElasticsearchService"),
        .target(name: "EventBridge", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/EventBridge"),
        .target(name: "FMS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/FMS"),
        .target(name: "FSx", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/FSx"),
        .target(name: "Finspace", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Finspace"),
        .target(name: "Finspacedata", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Finspacedata"),
        .target(name: "Firehose", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Firehose"),
        .target(name: "Fis", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Fis"),
        .target(name: "Forecast", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Forecast"),
        .target(name: "Forecastquery", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Forecastquery"),
        .target(name: "FraudDetector", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/FraudDetector"),
        .target(name: "GameLift", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/GameLift"),
        .target(name: "Glacier", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Glacier"),
        .target(name: "GlobalAccelerator", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/GlobalAccelerator"),
        .target(name: "Glue", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Glue"),
        .target(name: "Greengrass", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Greengrass"),
        .target(name: "GreengrassV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/GreengrassV2"),
        .target(name: "GroundStation", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/GroundStation"),
        .target(name: "GuardDuty", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/GuardDuty"),
        .target(name: "Health", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Health"),
        .target(name: "HealthLake", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/HealthLake"),
        .target(name: "Honeycode", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Honeycode"),
        .target(name: "IAM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IAM"),
        .target(name: "Identitystore", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Identitystore"),
        .target(name: "Imagebuilder", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Imagebuilder"),
        .target(name: "Inspector", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Inspector"),
        .target(name: "IoT", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoT"),
        .target(name: "IoT1ClickDevicesService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoT1ClickDevicesService"),
        .target(name: "IoT1ClickProjects", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoT1ClickProjects"),
        .target(name: "IoTAnalytics", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTAnalytics"),
        .target(name: "IoTDataPlane", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTDataPlane"),
        .target(name: "IoTEvents", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTEvents"),
        .target(name: "IoTEventsData", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTEventsData"),
        .target(name: "IoTFleetHub", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTFleetHub"),
        .target(name: "IoTJobsDataPlane", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTJobsDataPlane"),
        .target(name: "IoTSecureTunneling", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTSecureTunneling"),
        .target(name: "IoTSiteWise", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTSiteWise"),
        .target(name: "IoTThingsGraph", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTThingsGraph"),
        .target(name: "IoTWireless", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IoTWireless"),
        .target(name: "IotDeviceAdvisor", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/IotDeviceAdvisor"),
        .target(name: "Ivs", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Ivs"),
        .target(name: "KMS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KMS"),
        .target(name: "Kafka", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Kafka"),
        .target(name: "Kendra", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Kendra"),
        .target(name: "Kinesis", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Kinesis"),
        .target(name: "KinesisAnalytics", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisAnalytics"),
        .target(name: "KinesisAnalyticsV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisAnalyticsV2"),
        .target(name: "KinesisVideo", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisVideo"),
        .target(name: "KinesisVideoArchivedMedia", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisVideoArchivedMedia"),
        .target(name: "KinesisVideoMedia", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisVideoMedia"),
        .target(name: "KinesisVideoSignaling", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/KinesisVideoSignaling"),
        .target(name: "LakeFormation", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LakeFormation"),
        .target(name: "Lambda", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Lambda"),
        .target(name: "LexModelBuildingService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LexModelBuildingService"),
        .target(name: "LexModelsV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LexModelsV2"),
        .target(name: "LexRuntimeService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LexRuntimeService"),
        .target(name: "LexRuntimeV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LexRuntimeV2"),
        .target(name: "LicenseManager", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LicenseManager"),
        .target(name: "Lightsail", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Lightsail"),
        .target(name: "LookoutEquipment", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LookoutEquipment"),
        .target(name: "LookoutMetrics", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LookoutMetrics"),
        .target(name: "LookoutVision", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/LookoutVision"),
        .target(name: "MTurk", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MTurk"),
        .target(name: "MWAA", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MWAA"),
        .target(name: "MachineLearning", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MachineLearning"),
        .target(name: "Macie", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Macie"),
        .target(name: "Macie2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Macie2"),
        .target(name: "ManagedBlockchain", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ManagedBlockchain"),
        .target(name: "MarketplaceCatalog", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MarketplaceCatalog"),
        .target(name: "MarketplaceCommerceAnalytics", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MarketplaceCommerceAnalytics"),
        .target(name: "MarketplaceEntitlementService", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MarketplaceEntitlementService"),
        .target(name: "MarketplaceMetering", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MarketplaceMetering"),
        .target(name: "MediaConnect", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaConnect"),
        .target(name: "MediaConvert", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaConvert"),
        .target(name: "MediaLive", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaLive"),
        .target(name: "MediaPackage", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaPackage"),
        .target(name: "MediaPackageVod", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaPackageVod"),
        .target(name: "MediaStore", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaStore"),
        .target(name: "MediaStoreData", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaStoreData"),
        .target(name: "MediaTailor", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MediaTailor"),
        .target(name: "Mgn", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Mgn"),
        .target(name: "MigrationHub", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MigrationHub"),
        .target(name: "MigrationHubConfig", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/MigrationHubConfig"),
        .target(name: "Mobile", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Mobile"),
        .target(name: "Mq", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Mq"),
        .target(name: "Neptune", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Neptune"),
        .target(name: "NetworkFirewall", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/NetworkFirewall"),
        .target(name: "NetworkManager", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/NetworkManager"),
        .target(name: "Nimble", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Nimble"),
        .target(name: "OpsWorks", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/OpsWorks"),
        .target(name: "OpsWorksCM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/OpsWorksCM"),
        .target(name: "Organizations", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Organizations"),
        .target(name: "Outposts", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Outposts"),
        .target(name: "PI", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/PI"),
        .target(name: "Personalize", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Personalize"),
        .target(name: "PersonalizeEvents", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/PersonalizeEvents"),
        .target(name: "PersonalizeRuntime", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/PersonalizeRuntime"),
        .target(name: "Pinpoint", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Pinpoint"),
        .target(name: "PinpointEmail", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/PinpointEmail"),
        .target(name: "PinpointSMSVoice", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/PinpointSMSVoice"),
        .target(name: "Polly", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Polly"),
        .target(name: "Pricing", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Pricing"),
        .target(name: "QLDB", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/QLDB"),
        .target(name: "QLDBSession", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/QLDBSession"),
        .target(name: "QuickSight", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/QuickSight"),
        .target(name: "RAM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/RAM"),
        .target(name: "RDS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/RDS"),
        .target(name: "RDSData", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/RDSData"),
        .target(name: "Redshift", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Redshift"),
        .target(name: "RedshiftData", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/RedshiftData"),
        .target(name: "Rekognition", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Rekognition"),
        .target(name: "ResourceGroups", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ResourceGroups"),
        .target(name: "ResourceGroupsTaggingAPI", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ResourceGroupsTaggingAPI"),
        .target(name: "RoboMaker", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/RoboMaker"),
        .target(name: "Route53", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Route53"),
        .target(name: "Route53Domains", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Route53Domains"),
        .target(name: "Route53Resolver", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Route53Resolver"),
        .target(name: "S3", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/S3"),
        .target(name: "S3Control", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/S3Control"),
        .target(name: "S3Outposts", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/S3Outposts"),
        .target(name: "SES", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SES"),
        .target(name: "SESv2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SESv2"),
        .target(name: "SFN", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SFN"),
        .target(name: "SMS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SMS"),
        .target(name: "SNS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SNS"),
        .target(name: "SQS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SQS"),
        .target(name: "SSM", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSM"),
        .target(name: "SSMContacts", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSMContacts"),
        .target(name: "SSMIncidents", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSMIncidents"),
        .target(name: "SSO", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSO"),
        .target(name: "SSOAdmin", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSOAdmin"),
        .target(name: "SSOOIDC", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SSOOIDC"),
        .target(name: "STS", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/STS"),
        .target(name: "SWF", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SWF"),
        .target(name: "SageMaker", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SageMaker"),
        .target(name: "SageMakerA2IRuntime", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SageMakerA2IRuntime"),
        .target(name: "SageMakerFeatureStoreRuntime", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SageMakerFeatureStoreRuntime"),
        .target(name: "SageMakerRuntime", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SageMakerRuntime"),
        .target(name: "SagemakerEdge", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SagemakerEdge"),
        .target(name: "Savingsplans", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Savingsplans"),
        .target(name: "Schemas", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Schemas"),
        .target(name: "SecretsManager", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SecretsManager"),
        .target(name: "SecurityHub", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/SecurityHub"),
        .target(name: "ServerlessApplicationRepository", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ServerlessApplicationRepository"),
        .target(name: "ServiceCatalog", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ServiceCatalog"),
        .target(name: "ServiceCatalogAppRegistry", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ServiceCatalogAppRegistry"),
        .target(name: "ServiceDiscovery", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ServiceDiscovery"),
        .target(name: "ServiceQuotas", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/ServiceQuotas"),
        .target(name: "Shield", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Shield"),
        .target(name: "Signer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Signer"),
        .target(name: "Snowball", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Snowball"),
        .target(name: "StorageGateway", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/StorageGateway"),
        .target(name: "Support", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Support"),
        .target(name: "Synthetics", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Synthetics"),
        .target(name: "Textract", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Textract"),
        .target(name: "TimestreamQuery", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/TimestreamQuery"),
        .target(name: "TimestreamWrite", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/TimestreamWrite"),
        .target(name: "Transcribe", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Transcribe"),
        .target(name: "TranscribeStreaming", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/TranscribeStreaming"),
        .target(name: "Transfer", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Transfer"),
        .target(name: "Translate", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/Translate"),
        .target(name: "WAF", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WAF"),
        .target(name: "WAFRegional", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WAFRegional"),
        .target(name: "WAFV2", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WAFV2"),
        .target(name: "WellArchitected", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WellArchitected"),
        .target(name: "WorkDocs", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WorkDocs"),
        .target(name: "WorkLink", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WorkLink"),
        .target(name: "WorkMail", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WorkMail"),
        .target(name: "WorkMailMessageFlow", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WorkMailMessageFlow"),
        .target(name: "WorkSpaces", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/WorkSpaces"),
        .target(name: "XRay", dependencies: [.product(name: "ClientRuntime", package: "ClientRuntime"), "AWSClientRuntime"], path: "./release/XRay"),
        ]
)
