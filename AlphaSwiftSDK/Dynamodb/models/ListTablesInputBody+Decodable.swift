// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesInputBody: Equatable {
    public let exclusiveStartTableName: String?
    public let limit: Int?
}

extension ListTablesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveStartTableName = "ExclusiveStartTableName"
        case limit = "Limit"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusiveStartTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartTableName)
        exclusiveStartTableName = exclusiveStartTableNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
    }
}
