// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListTablesOutputBody: Equatable {
    public let tableNames: [String]?
    public let lastEvaluatedTableName: String?
}

extension ListTablesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case lastEvaluatedTableName = "LastEvaluatedTableName"
        case tableNames = "TableNames"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let tableNamesContainer = try containerValues.decodeIfPresent([String].self, forKey: .tableNames)
        var tableNamesDecoded0:[String]? = nil
        if let tableNamesContainer = tableNamesContainer {
            tableNamesDecoded0 = [String]()
            for string0 in tableNamesContainer {
                tableNamesDecoded0?.append(string0)
            }
        }
        tableNames = tableNamesDecoded0
        let lastEvaluatedTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastEvaluatedTableName)
        lastEvaluatedTableName = lastEvaluatedTableNameDecoded
    }
}
