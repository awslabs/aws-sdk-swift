// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct TransactGetItemsInputBody: Equatable {
    public let transactItems: [TransactGetItem]?
    public let returnConsumedCapacity: ReturnConsumedCapacity?
}

extension TransactGetItemsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case returnConsumedCapacity = "ReturnConsumedCapacity"
        case transactItems = "TransactItems"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let transactItemsContainer = try containerValues.decodeIfPresent([TransactGetItem].self, forKey: .transactItems)
        var transactItemsDecoded0:[TransactGetItem]? = nil
        if let transactItemsContainer = transactItemsContainer {
            transactItemsDecoded0 = [TransactGetItem]()
            for structure0 in transactItemsContainer {
                transactItemsDecoded0?.append(structure0)
            }
        }
        transactItems = transactItemsDecoded0
        let returnConsumedCapacityDecoded = try containerValues.decodeIfPresent(ReturnConsumedCapacity.self, forKey: .returnConsumedCapacity)
        returnConsumedCapacity = returnConsumedCapacityDecoded
    }
}
