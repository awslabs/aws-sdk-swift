// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct BatchWriteItemInputBody: Equatable {
    public let requestItems: [String:[WriteRequest]?]?
    public let returnConsumedCapacity: ReturnConsumedCapacity?
    public let returnItemCollectionMetrics: ReturnItemCollectionMetrics?
}

extension BatchWriteItemInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case requestItems = "RequestItems"
        case returnConsumedCapacity = "ReturnConsumedCapacity"
        case returnItemCollectionMetrics = "ReturnItemCollectionMetrics"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let requestItemsContainer = try containerValues.decodeIfPresent([String:[WriteRequest]?].self, forKey: .requestItems)
        var requestItemsDecoded0: [String:[WriteRequest]?]? = nil
        if let requestItemsContainer = requestItemsContainer {
            requestItemsDecoded0 = [String:[WriteRequest]?]()
            for (key0, writerequests0) in requestItemsContainer {
                var writerequests0Decoded0 = [WriteRequest]()
                if let writerequests0 = writerequests0 {
                    for structure1 in writerequests0 {
                        writerequests0Decoded0.append(structure1)
                    }
                }
                requestItemsDecoded0?[key0] = writerequests0Decoded0
            }
        }
        requestItems = requestItemsDecoded0
        let returnConsumedCapacityDecoded = try containerValues.decodeIfPresent(ReturnConsumedCapacity.self, forKey: .returnConsumedCapacity)
        returnConsumedCapacity = returnConsumedCapacityDecoded
        let returnItemCollectionMetricsDecoded = try containerValues.decodeIfPresent(ReturnItemCollectionMetrics.self, forKey: .returnItemCollectionMetrics)
        returnItemCollectionMetrics = returnItemCollectionMetricsDecoded
    }
}
