// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListGlobalTablesInputBody: Equatable {
    public let exclusiveStartGlobalTableName: String?
    public let limit: Int?
    public let regionName: String?
}

extension ListGlobalTablesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case exclusiveStartGlobalTableName = "ExclusiveStartGlobalTableName"
        case limit = "Limit"
        case regionName = "RegionName"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let exclusiveStartGlobalTableNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .exclusiveStartGlobalTableName)
        exclusiveStartGlobalTableName = exclusiveStartGlobalTableNameDecoded
        let limitDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .limit)
        limit = limitDecoded
        let regionNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .regionName)
        regionName = regionNameDecoded
    }
}
