// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ExportTableToPointInTimeInput: Equatable {
    /**
     <p>Providing a <code>ClientToken</code> makes the call to
                     <code>ExportTableToPointInTimeInput</code> idempotent, meaning that multiple
                 identical calls have the same effect as one single call.</p>
             <p>A client token is valid for 8 hours after the first request that uses it is
                 completed. After 8 hours, any request with the same client token is treated as a new
                 request. Do not resubmit the same request with the same client token for more than 8
                 hours, or the result might not be idempotent.</p>
             <p>If you submit a request with the same client token but a change in other parameters
                 within the 8-hour idempotency window, DynamoDB returns an
                 <code>IdempotentParameterMismatch</code> exception.</p>
     */
    public var clientToken: String?
    /**
     <p>The format for the exported data. Valid values for <code>ExportFormat</code> are
                     <code>DYNAMODB_JSON</code> or <code>ION</code>.</p>
     */
    public let exportFormat: ExportFormat?
    /**
     <p>Time in the past from which to export table data. The table export will be a snapshot
                 of the table's state at this point in time.</p>
     */
    public let exportTime: Date?
    /// <p>The name of the Amazon S3 bucket to export the snapshot to.</p>
    public let s3Bucket: String?
    /// <p>The ID of the AWS account that owns the bucket the export will be stored in.</p>
    public let s3BucketOwner: String?
    /**
     <p>The Amazon S3 bucket prefix to use as the file name and path of the exported
                 snapshot.</p>
     */
    public let s3Prefix: String?
    /**
     <p>Type of encryption used on the bucket where export data will be stored. Valid values
                 for <code>S3SseAlgorithm</code> are:</p>
             <ul>
                 <li>
                     <p>
                       <code>AES256</code> - server-side encryption with Amazon S3 managed keys</p>
                 </li>
                 <li>
                     <p>
                       <code>KMS</code> - server-side encryption with AWS KMS managed keys</p>
                 </li>
              </ul>
     */
    public let s3SseAlgorithm: S3SseAlgorithm?
    /**
     <p>The ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will
                 be stored (if applicable).</p>
     */
    public let s3SseKmsKeyId: String?
    /// <p>The Amazon Resource Name (ARN) associated with the table to export.</p>
    public let tableArn: String?

    public init (
        clientToken: String? = nil,
        exportFormat: ExportFormat? = nil,
        exportTime: Date? = nil,
        s3Bucket: String? = nil,
        s3BucketOwner: String? = nil,
        s3Prefix: String? = nil,
        s3SseAlgorithm: S3SseAlgorithm? = nil,
        s3SseKmsKeyId: String? = nil,
        tableArn: String? = nil
    )
    {
        self.clientToken = clientToken
        self.exportFormat = exportFormat
        self.exportTime = exportTime
        self.s3Bucket = s3Bucket
        self.s3BucketOwner = s3BucketOwner
        self.s3Prefix = s3Prefix
        self.s3SseAlgorithm = s3SseAlgorithm
        self.s3SseKmsKeyId = s3SseKmsKeyId
        self.tableArn = tableArn
    }
}
