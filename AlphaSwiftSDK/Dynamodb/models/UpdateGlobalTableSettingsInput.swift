// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct UpdateGlobalTableSettingsInput: Equatable {
    /**
     <p>The billing mode of the global table. If <code>GlobalTableBillingMode</code> is not specified, the global table defaults to <code>PROVISIONED</code> capacity billing mode.</p>
              <ul>
                 <li>
                    <p>
                       <code>PROVISIONED</code> - We recommend using <code>PROVISIONED</code> for predictable workloads. <code>PROVISIONED</code> sets the billing mode to <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual">Provisioned Mode</a>.</p>
                 </li>
                 <li>
                    <p>
                       <code>PAY_PER_REQUEST</code> - We recommend using <code>PAY_PER_REQUEST</code> for unpredictable workloads. <code>PAY_PER_REQUEST</code> sets the billing mode to <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand">On-Demand Mode</a>.
                 </p>
                 </li>
              </ul>
     */
    public let globalTableBillingMode: BillingMode?
    /// <p>Represents the settings of a global secondary index for a global table that will be modified.</p>
    public let globalTableGlobalSecondaryIndexSettingsUpdate: [GlobalTableGlobalSecondaryIndexSettingsUpdate]?
    /// <p>The name of the global table</p>
    public let globalTableName: String?
    /**
     <p>Auto scaling settings for managing provisioned write capacity for the global
                 table.</p>
     */
    public let globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate?
    /**
     <p>The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException.</code>
              </p>
     */
    public let globalTableProvisionedWriteCapacityUnits: Int?
    /// <p>Represents the settings for a global table in a Region that will be modified.</p>
    public let replicaSettingsUpdate: [ReplicaSettingsUpdate]?

    public init (
        globalTableBillingMode: BillingMode? = nil,
        globalTableGlobalSecondaryIndexSettingsUpdate: [GlobalTableGlobalSecondaryIndexSettingsUpdate]? = nil,
        globalTableName: String? = nil,
        globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: AutoScalingSettingsUpdate? = nil,
        globalTableProvisionedWriteCapacityUnits: Int? = nil,
        replicaSettingsUpdate: [ReplicaSettingsUpdate]? = nil
    )
    {
        self.globalTableBillingMode = globalTableBillingMode
        self.globalTableGlobalSecondaryIndexSettingsUpdate = globalTableGlobalSecondaryIndexSettingsUpdate
        self.globalTableName = globalTableName
        self.globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate = globalTableProvisionedWriteCapacityAutoScalingSettingsUpdate
        self.globalTableProvisionedWriteCapacityUnits = globalTableProvisionedWriteCapacityUnits
        self.replicaSettingsUpdate = replicaSettingsUpdate
    }
}
