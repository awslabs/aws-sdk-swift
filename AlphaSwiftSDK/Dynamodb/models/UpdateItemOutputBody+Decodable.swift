// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateItemOutputBody: Equatable {
    public let attributes: [String:AttributeValue]?
    public let consumedCapacity: ConsumedCapacity?
    public let itemCollectionMetrics: ItemCollectionMetrics?
}

extension UpdateItemOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case attributes = "Attributes"
        case consumedCapacity = "ConsumedCapacity"
        case itemCollectionMetrics = "ItemCollectionMetrics"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let attributesContainer = try containerValues.decodeIfPresent([String:AttributeValue].self, forKey: .attributes)
        var attributesDecoded0: [String:AttributeValue]? = nil
        if let attributesContainer = attributesContainer {
            attributesDecoded0 = [String:AttributeValue]()
            for (key0, attributevalue0) in attributesContainer {
                attributesDecoded0?[key0] = attributevalue0
            }
        }
        attributes = attributesDecoded0
        let consumedCapacityDecoded = try containerValues.decodeIfPresent(ConsumedCapacity.self, forKey: .consumedCapacity)
        consumedCapacity = consumedCapacityDecoded
        let itemCollectionMetricsDecoded = try containerValues.decodeIfPresent(ItemCollectionMetrics.self, forKey: .itemCollectionMetrics)
        itemCollectionMetrics = itemCollectionMetricsDecoded
    }
}
