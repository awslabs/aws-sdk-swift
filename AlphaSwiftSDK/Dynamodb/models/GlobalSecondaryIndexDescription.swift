// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the properties of a global secondary index.</p>
public struct GlobalSecondaryIndexDescription: Equatable {
    /**
     <p>Indicates whether the index is currently backfilling. <i>Backfilling</i> is the process of reading items from
           the table and determining whether they can be added to the index. (Not all items will qualify:  For example, a partition key
           cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed,
           the backfilling operation is complete and <code>Backfilling</code> is false.</p>
              <p>You can delete an index that is being created during the <code>Backfilling</code> phase
              when <code>IndexStatus</code> is set to CREATING and <code>Backfilling</code> is true. You
              can't delete the index that is being created when <code>IndexStatus</code> is set to
              CREATING and <code>Backfilling</code> is false. </p>
              <note>
                 <p>For indexes that were created during a <code>CreateTable</code> operation, the <code>Backfilling</code> attribute does not appear in the <code>DescribeTable</code> output.</p>
              </note>
     */
    public let backfilling: Bool?
    /// <p>The Amazon Resource Name (ARN) that uniquely identifies the index.</p>
    public let indexArn: String?
    /// <p>The name of the global secondary index.</p>
    public let indexName: String?
    /// <p>The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.</p>
    public let indexSizeBytes: Int
    /**
     <p>The current state of the global secondary index:</p>
              <ul>
                 <li>
                    <p>
                       <code>CREATING</code> - The index is being created.</p>
                 </li>
                 <li>
                    <p>
                       <code>UPDATING</code> - The index is being updated.</p>
                 </li>
                 <li>
                    <p>
                       <code>DELETING</code> - The index is being deleted.</p>
                 </li>
                 <li>
                    <p>
                       <code>ACTIVE</code> - The index is ready for use.</p>
                 </li>
              </ul>
     */
    public let indexStatus: IndexStatus?
    /// <p>The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.</p>
    public let itemCount: Int
    /**
     <p>The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:</p>
              <ul>
                 <li>
                    <p>
                       <code>HASH</code> - partition key</p>
                 </li>
                 <li>
                    <p>
                       <code>RANGE</code> - sort key</p>
                 </li>
              </ul>
              <note>
                 <p>The partition key of an item is also known as its <i>hash attribute</i>.  The
             term "hash attribute" derives from DynamoDB's usage of an internal hash function to
             evenly distribute data items across partitions, based on their partition key values.</p>
                 <p>The sort key of an item is also known as its <i>range attribute</i>.
             The term "range attribute" derives from the way DynamoDB stores items with the same
             partition key physically close together, in sorted order by the sort key value.</p>
              </note>
     */
    public let keySchema: [KeySchemaElement]?
    /**
     <p>Represents attributes that are copied (projected) from the table into the global
              secondary index. These are in addition to the primary key attributes and index key
              attributes, which are automatically projected. </p>
     */
    public let projection: Projection?
    /**
     <p>Represents the provisioned throughput settings for the specified global secondary index.</p>
              <p>For current minimum and maximum provisioned throughput values, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Service, Account, and Table Quotas</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
     */
    public let provisionedThroughput: ProvisionedThroughputDescription?

    public init (
        backfilling: Bool? = nil,
        indexArn: String? = nil,
        indexName: String? = nil,
        indexSizeBytes: Int = 0,
        indexStatus: IndexStatus? = nil,
        itemCount: Int = 0,
        keySchema: [KeySchemaElement]? = nil,
        projection: Projection? = nil,
        provisionedThroughput: ProvisionedThroughputDescription? = nil
    )
    {
        self.backfilling = backfilling
        self.indexArn = indexArn
        self.indexName = indexName
        self.indexSizeBytes = indexSizeBytes
        self.indexStatus = indexStatus
        self.itemCount = itemCount
        self.keySchema = keySchema
        self.projection = projection
        self.provisionedThroughput = provisionedThroughput
    }
}
