// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.</p>
public struct ProvisionedThroughputDescription: Equatable {
    /// <p>The date and time of the last provisioned throughput decrease for this table.</p>
    public let lastDecreaseDateTime: Date?
    /// <p>The date and time of the last provisioned throughput increase for this table.</p>
    public let lastIncreaseDateTime: Date?
    /**
     <p>The number of provisioned throughput decreases for this table during this UTC calendar day.
              For current maximums on provisioned throughput decreases, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Service, Account, and Table Quotas</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
     */
    public let numberOfDecreasesToday: Int?
    /**
     <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a
             <code>ThrottlingException</code>. Eventually consistent reads require less effort than strongly
           consistent reads, so a setting of 50 <code>ReadCapacityUnits</code> per second provides 100
           eventually consistent <code>ReadCapacityUnits</code> per second.</p>
     */
    public let readCapacityUnits: Int?
    /**
     <p>The maximum number of writes consumed per second before DynamoDB returns a
             <code>ThrottlingException</code>.</p>
     */
    public let writeCapacityUnits: Int?

    public init (
        lastDecreaseDateTime: Date? = nil,
        lastIncreaseDateTime: Date? = nil,
        numberOfDecreasesToday: Int? = nil,
        readCapacityUnits: Int? = nil,
        writeCapacityUnits: Int? = nil
    )
    {
        self.lastDecreaseDateTime = lastDecreaseDateTime
        self.lastIncreaseDateTime = lastIncreaseDateTime
        self.numberOfDecreasesToday = numberOfDecreasesToday
        self.readCapacityUnits = readCapacityUnits
        self.writeCapacityUnits = writeCapacityUnits
    }
}
