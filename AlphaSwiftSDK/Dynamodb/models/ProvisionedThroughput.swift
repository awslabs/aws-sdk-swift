// Code generated by smithy-swift-codegen. DO NOT EDIT!



/**
 <p>Represents the provisioned throughput settings for a specified table or index. The settings
       can be modified using the <code>UpdateTable</code> operation.</p>
          <p>For current minimum and maximum provisioned throughput values, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html">Service, Account, and Table Quotas</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
 */
public struct ProvisionedThroughput: Equatable {
    /**
     <p>The maximum number of strongly consistent reads consumed per second before DynamoDB returns a
             <code>ThrottlingException</code>. For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
             Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
             <p>If read/write capacity mode is <code>PAY_PER_REQUEST</code> the value is set to 0.</p>
     */
    public let readCapacityUnits: Int?
    /**
     <p>The maximum number of writes consumed per second before DynamoDB returns a
             <code>ThrottlingException</code>. For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput">Specifying Read and Write
             Requirements</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
             <p>If read/write capacity mode is <code>PAY_PER_REQUEST</code> the value is set to 0.</p>
     */
    public let writeCapacityUnits: Int?

    public init (
        readCapacityUnits: Int? = nil,
        writeCapacityUnits: Int? = nil
    )
    {
        self.readCapacityUnits = readCapacityUnits
        self.writeCapacityUnits = writeCapacityUnits
    }
}
