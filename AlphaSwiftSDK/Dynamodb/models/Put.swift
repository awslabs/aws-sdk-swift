// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents a request to perform a <code>PutItem</code> operation.</p>
public struct Put: Equatable {
    /// <p>A condition that must be satisfied in order for a conditional update to succeed.</p>
    public let conditionExpression: String?
    /// <p>One or more substitution tokens for attribute names in an expression.</p>
    public let expressionAttributeNames: [String:String]?
    /// <p>One or more values that can be substituted in an expression.</p>
    public let expressionAttributeValues: [String:AttributeValue]?
    /**
     <p>A map of attribute name to attribute values, representing the primary key
             of the item to be written by <code>PutItem</code>. All of the table's primary key
             attributes must be specified, and their data types must match those of the table's
             key schema. If any attributes are present in the item that are part of an index
             key schema for the table, their types must match the index key schema. </p>
     */
    public let item: [String:AttributeValue]?
    /**
     <p>Use <code>ReturnValuesOnConditionCheckFailure</code> to
             get the item attributes if the <code>Put</code> condition fails.
             For <code>ReturnValuesOnConditionCheckFailure</code>, the valid
             values are: NONE and ALL_OLD.</p>
     */
    public let returnValuesOnConditionCheckFailure: ReturnValuesOnConditionCheckFailure?
    /// <p>Name of the table in which to write the item.</p>
    public let tableName: String?

    public init (
        conditionExpression: String? = nil,
        expressionAttributeNames: [String:String]? = nil,
        expressionAttributeValues: [String:AttributeValue]? = nil,
        item: [String:AttributeValue]? = nil,
        returnValuesOnConditionCheckFailure: ReturnValuesOnConditionCheckFailure? = nil,
        tableName: String? = nil
    )
    {
        self.conditionExpression = conditionExpression
        self.expressionAttributeNames = expressionAttributeNames
        self.expressionAttributeValues = expressionAttributeValues
        self.item = item
        self.returnValuesOnConditionCheckFailure = returnValuesOnConditionCheckFailure
        self.tableName = tableName
    }
}
