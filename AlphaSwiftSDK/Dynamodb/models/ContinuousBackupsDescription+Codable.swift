// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ContinuousBackupsDescription: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case continuousBackupsStatus = "ContinuousBackupsStatus"
        case pointInTimeRecoveryDescription = "PointInTimeRecoveryDescription"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let continuousBackupsStatus = continuousBackupsStatus {
            try encodeContainer.encode(continuousBackupsStatus.rawValue, forKey: .continuousBackupsStatus)
        }
        if let pointInTimeRecoveryDescription = pointInTimeRecoveryDescription {
            try encodeContainer.encode(pointInTimeRecoveryDescription, forKey: .pointInTimeRecoveryDescription)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let continuousBackupsStatusDecoded = try containerValues.decodeIfPresent(ContinuousBackupsStatus.self, forKey: .continuousBackupsStatus)
        continuousBackupsStatus = continuousBackupsStatusDecoded
        let pointInTimeRecoveryDescriptionDecoded = try containerValues.decodeIfPresent(PointInTimeRecoveryDescription.self, forKey: .pointInTimeRecoveryDescription)
        pointInTimeRecoveryDescription = pointInTimeRecoveryDescriptionDecoded
    }
}
