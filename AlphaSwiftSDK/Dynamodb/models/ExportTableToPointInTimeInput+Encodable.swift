// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ExportTableToPointInTimeInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case clientToken = "ClientToken"
        case exportFormat = "ExportFormat"
        case exportTime = "ExportTime"
        case s3Bucket = "S3Bucket"
        case s3BucketOwner = "S3BucketOwner"
        case s3Prefix = "S3Prefix"
        case s3SseAlgorithm = "S3SseAlgorithm"
        case s3SseKmsKeyId = "S3SseKmsKeyId"
        case tableArn = "TableArn"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let clientToken = clientToken {
            try encodeContainer.encode(clientToken, forKey: .clientToken)
        }
        if let exportFormat = exportFormat {
            try encodeContainer.encode(exportFormat.rawValue, forKey: .exportFormat)
        }
        if let exportTime = exportTime {
            try encodeContainer.encode(exportTime.timeIntervalSince1970, forKey: .exportTime)
        }
        if let s3Bucket = s3Bucket {
            try encodeContainer.encode(s3Bucket, forKey: .s3Bucket)
        }
        if let s3BucketOwner = s3BucketOwner {
            try encodeContainer.encode(s3BucketOwner, forKey: .s3BucketOwner)
        }
        if let s3Prefix = s3Prefix {
            try encodeContainer.encode(s3Prefix, forKey: .s3Prefix)
        }
        if let s3SseAlgorithm = s3SseAlgorithm {
            try encodeContainer.encode(s3SseAlgorithm.rawValue, forKey: .s3SseAlgorithm)
        }
        if let s3SseKmsKeyId = s3SseKmsKeyId {
            try encodeContainer.encode(s3SseKmsKeyId, forKey: .s3SseKmsKeyId)
        }
        if let tableArn = tableArn {
            try encodeContainer.encode(tableArn, forKey: .tableArn)
        }
    }
}
