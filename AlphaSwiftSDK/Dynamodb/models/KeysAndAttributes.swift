// Code generated by smithy-swift-codegen. DO NOT EDIT!



/**
 <p>Represents a set of primary keys and, for each key, the attributes to retrieve from the table.</p>
          <p>For each primary key, you must provide <i>all</i> of the key attributes. For example, with a
       simple primary key, you only need to provide the partition key. For a composite
       primary key, you must provide <i>both</i> the partition key and the sort key.</p>
 */
public struct KeysAndAttributes: Equatable {
    /**
     <p>This is a legacy parameter.  Use <code>ProjectionExpression</code> instead.  For more information, see
              <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.html">Legacy Conditional Parameters</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
     */
    public let attributesToGet: [String]?
    /**
     <p>The consistency of a read operation. If set to <code>true</code>, then a strongly consistent
           read is used; otherwise, an eventually consistent read is used.</p>
     */
    public let consistentRead: Bool?
    /**
     <p>One or more substitution tokens for attribute names in an expression. The following are some use cases for using <code>ExpressionAttributeNames</code>:</p>
              <ul>
                 <li>
                    <p>To access an attribute whose name conflicts with a DynamoDB reserved word.</p>
                 </li>
                 <li>
                    <p>To create a placeholder for repeating occurrences of an attribute name in an expression.</p>
                 </li>
                 <li>
                    <p>To prevent special characters in an attribute name from being misinterpreted in an expression.</p>
                 </li>
              </ul>
              <p>Use the <b>#</b> character in an expression to dereference an attribute name. For example, consider the following attribute name:</p>
              <ul>
                 <li>
                    <p>
                       <code>Percentile</code>
                    </p>
                 </li>
              </ul>
              <p>The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html">Reserved Words</a> in the <i>Amazon DynamoDB Developer Guide</i>). To work around this, you could specify the following for <code>ExpressionAttributeNames</code>:</p>
              <ul>
                 <li>
                    <p>
                       <code>{"#P":"Percentile"}</code>
                    </p>
                 </li>
              </ul>
              <p>You could then use this substitution in an expression, as in this example:</p>
              <ul>
                 <li>
                    <p>
                       <code>#P = :val</code>
                    </p>
                 </li>
              </ul>
              <note>
                 <p>Tokens that begin with the <b>:</b> character are <i>expression attribute values</i>, which are placeholders for the actual value at runtime.</p>
              </note>
              <p>For more information on expression attribute names, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html">Accessing Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
     */
    public let expressionAttributeNames: [String:String]?
    /// <p>The primary key attribute values that define the items and the attributes associated with the items.</p>
    public let keys: [[String:AttributeValue]?]?
    /**
     <p>A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars,
              sets, or elements of a JSON document. The attributes in the <code>ProjectionExpression</code> must be separated by
              commas.</p>
              <p>If no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.</p>
              <p>For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html">Accessing Item Attributes</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
     */
    public let projectionExpression: String?

    public init (
        attributesToGet: [String]? = nil,
        consistentRead: Bool? = nil,
        expressionAttributeNames: [String:String]? = nil,
        keys: [[String:AttributeValue]?]? = nil,
        projectionExpression: String? = nil
    )
    {
        self.attributesToGet = attributesToGet
        self.consistentRead = consistentRead
        self.expressionAttributeNames = expressionAttributeNames
        self.keys = keys
        self.projectionExpression = projectionExpression
    }
}
