// Code generated by smithy-swift-codegen. DO NOT EDIT!



/**
 <p>The capacity units consumed by an operation. The data returned includes the total
       provisioned throughput consumed, along with statistics for the table and any indexes involved
       in the operation. <code>ConsumedCapacity</code> is only returned if the request asked for it.
       For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html">Provisioned
         Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
 */
public struct ConsumedCapacity: Equatable {
    /// <p>The total number of capacity units consumed by the operation.</p>
    public let capacityUnits: Double?
    /// <p>The amount of throughput consumed on each global index affected by the operation.</p>
    public let globalSecondaryIndexes: [String:Capacity]?
    /// <p>The amount of throughput consumed on each local index affected by the operation.</p>
    public let localSecondaryIndexes: [String:Capacity]?
    /// <p>The total number of read capacity units consumed by the operation.</p>
    public let readCapacityUnits: Double?
    /// <p>The amount of throughput consumed on the table affected by the operation.</p>
    public let table: Capacity?
    /// <p>The name of the table that was affected by the operation.</p>
    public let tableName: String?
    /// <p>The total number of write capacity units consumed by the operation.</p>
    public let writeCapacityUnits: Double?

    public init (
        capacityUnits: Double? = nil,
        globalSecondaryIndexes: [String:Capacity]? = nil,
        localSecondaryIndexes: [String:Capacity]? = nil,
        readCapacityUnits: Double? = nil,
        table: Capacity? = nil,
        tableName: String? = nil,
        writeCapacityUnits: Double? = nil
    )
    {
        self.capacityUnits = capacityUnits
        self.globalSecondaryIndexes = globalSecondaryIndexes
        self.localSecondaryIndexes = localSecondaryIndexes
        self.readCapacityUnits = readCapacityUnits
        self.table = table
        self.tableName = tableName
        self.writeCapacityUnits = writeCapacityUnits
    }
}
