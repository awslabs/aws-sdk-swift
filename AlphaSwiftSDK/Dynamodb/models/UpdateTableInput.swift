// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the input of an <code>UpdateTable</code> operation.</p>
public struct UpdateTableInput: Equatable {
    /// <p>An array of attributes that describe the key schema for the table and indexes. If you are adding a new global secondary index to the table, <code>AttributeDefinitions</code> must include the key element(s) of the new index.</p>
    public let attributeDefinitions: [AttributeDefinition]?
    /**
     <p>Controls how you are charged for read and write throughput and how you manage capacity.
           When switching from pay-per-request to provisioned capacity, initial provisioned capacity values must be set. The initial
           provisioned capacity values are estimated based on the consumed read and write capacity of your table and global secondary indexes
           over the past 30 minutes.</p>
              <ul>
                 <li>
                    <p>
                       <code>PROVISIONED</code> - We recommend using <code>PROVISIONED</code> for predictable workloads. <code>PROVISIONED</code> sets the billing mode to <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual">Provisioned Mode</a>.</p>
                 </li>
                 <li>
                    <p>
                       <code>PAY_PER_REQUEST</code> - We recommend using <code>PAY_PER_REQUEST</code> for unpredictable workloads. <code>PAY_PER_REQUEST</code> sets the billing mode to <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand">On-Demand Mode</a>.
                 </p>
                 </li>
              </ul>
     */
    public let billingMode: BillingMode?
    /**
     <p>An array of one or more global secondary indexes for the table. For each index in the array, you can request one action:</p>
              <ul>
                 <li>
                    <p>
                       <code>Create</code> - add a new global secondary index to the table.</p>
                 </li>
                 <li>
                    <p>
                       <code>Update</code> - modify the provisioned throughput settings of an existing global secondary index.</p>
                 </li>
                 <li>
                    <p>
                       <code>Delete</code> - remove a global secondary index from the table.</p>
                 </li>
              </ul>
              <p>You can create or delete only one global secondary index per <code>UpdateTable</code> operation.</p>
              <p>For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.OnlineOps.html">Managing Global Secondary
             Indexes</a> in the <i>Amazon DynamoDB Developer Guide</i>. </p>
     */
    public let globalSecondaryIndexUpdates: [GlobalSecondaryIndexUpdate]?
    /// <p>The new provisioned throughput settings for the specified table or index.</p>
    public let provisionedThroughput: ProvisionedThroughput?
    /**
     <p>A list of replica update actions (create, delete, or update) for the table.</p>
              <note>
                 <p>This property only applies to <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html">Version 2019.11.21</a> of global tables.</p>
              </note>
     */
    public let replicaUpdates: [ReplicationGroupUpdate]?
    /// <p>The new server-side encryption settings for the specified table.</p>
    public let sSESpecification: SSESpecification?
    /**
     <p>Represents the DynamoDB Streams configuration for the table.</p>
              <note>
                 <p>You receive a <code>ResourceInUseException</code> if you try to enable a stream on a
                     table that already has a stream, or if you try to disable a stream on a table that
                     doesn't have a stream.</p>
              </note>
     */
    public let streamSpecification: StreamSpecification?
    /// <p>The name of the table to be updated.</p>
    public let tableName: String?

    public init (
        attributeDefinitions: [AttributeDefinition]? = nil,
        billingMode: BillingMode? = nil,
        globalSecondaryIndexUpdates: [GlobalSecondaryIndexUpdate]? = nil,
        provisionedThroughput: ProvisionedThroughput? = nil,
        replicaUpdates: [ReplicationGroupUpdate]? = nil,
        sSESpecification: SSESpecification? = nil,
        streamSpecification: StreamSpecification? = nil,
        tableName: String? = nil
    )
    {
        self.attributeDefinitions = attributeDefinitions
        self.billingMode = billingMode
        self.globalSecondaryIndexUpdates = globalSecondaryIndexUpdates
        self.provisionedThroughput = provisionedThroughput
        self.replicaUpdates = replicaUpdates
        self.sSESpecification = sSESpecification
        self.streamSpecification = streamSpecification
        self.tableName = tableName
    }
}
