// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum FilterNameStringType {
    case all
    case description
    case name
    case tagkey
    case tagvalue
    case sdkUnknown(String)
}

extension FilterNameStringType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [FilterNameStringType] {
        return [
            .all,
            .description,
            .name,
            .tagkey,
            .tagvalue,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .all: return "all"
        case .description: return "description"
        case .name: return "name"
        case .tagkey: return "tag-key"
        case .tagvalue: return "tag-value"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = FilterNameStringType(rawValue: rawValue) ?? FilterNameStringType.sdkUnknown(rawValue)
    }
}
