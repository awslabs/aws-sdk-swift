// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListSecretVersionIdsInput: Equatable {
    /**
     <p>(Optional) Specifies that you want the results to include versions that do not have any
           staging labels attached to them. Such versions are considered deprecated and are subject to
           deletion by Secrets Manager as needed.</p>
     */
    public let includeDeprecated: Bool
    /**
     <p>(Optional) Limits the number of results you want to include in
         the response. If you don't include this parameter, it defaults to a value that's
         specific to the operation. If additional items exist beyond the maximum you specify, the
         <code>NextToken</code> response element is present and has a value (isn't null). Include
         that value as the <code>NextToken</code> request parameter in the next call to the operation to
         get the next part of the results. Note that Secrets Manager might return fewer results than the maximum
         even when there are more results available. You should check <code>NextToken</code> after every
         operation to ensure that you receive all of the results.</p>
     */
    public let maxResults: Int
    /**
     <p>(Optional) Use this parameter in a request if you receive a
         <code>NextToken</code> response in a previous request indicating there's more
         output available. In a subsequent call, set it to the value of the previous call
         <code>NextToken</code> response to indicate where the output should continue from.</p>
     */
    public let nextToken: String?
    /**
     <p>The identifier for the secret containing the versions you want to list. You can specify
           either the Amazon Resource Name (ARN) or the friendly name of the secret.</p>
              <note>
                 <p>If you specify an ARN, we generally recommend that you specify a complete ARN. You can
             specify a partial ARN too—for example, if you don’t include the final hyphen and six random
             characters that Secrets Manager adds at the end of the ARN when you created the secret. A partial ARN
             match can work as long as it uniquely matches only one secret. However, if your secret has a
             name that ends in a hyphen followed by six characters (before Secrets Manager adds the hyphen and six
             characters to the ARN) and you try to use that as a partial ARN, then those characters cause
             Secrets Manager to assume that you’re specifying a complete ARN. This confusion can cause unexpected
             results. To avoid this situation, we recommend that you don’t create secret names ending
             with a hyphen followed by six characters.</p>
                 <p>If you specify an incomplete ARN without the random suffix, and instead provide the
             'friendly name', you <i>must</i> not include the random suffix. If you do include the random suffix added by Secrets Manager,
             you receive either a <i>ResourceNotFoundException</i> or an <i>AccessDeniedException</i> error, depending on your permissions.</p>
             </note>
     */
    public let secretId: String?

    public init (
        includeDeprecated: Bool = false,
        maxResults: Int = 0,
        nextToken: String? = nil,
        secretId: String? = nil
    )
    {
        self.includeDeprecated = includeDeprecated
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.secretId = secretId
    }
}
