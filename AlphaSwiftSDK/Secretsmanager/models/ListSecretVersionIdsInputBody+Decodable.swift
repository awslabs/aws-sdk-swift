// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListSecretVersionIdsInputBody: Equatable {
    public let secretId: String?
    public let maxResults: Int
    public let nextToken: String?
    public let includeDeprecated: Bool
}

extension ListSecretVersionIdsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case includeDeprecated = "IncludeDeprecated"
        case maxResults = "MaxResults"
        case nextToken = "NextToken"
        case secretId = "SecretId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let secretIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .secretId)
        secretId = secretIdDecoded
        let maxResultsDecoded = try containerValues.decode(Int.self, forKey: .maxResults)
        maxResults = maxResultsDecoded
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
        let includeDeprecatedDecoded = try containerValues.decode(Bool.self, forKey: .includeDeprecated)
        includeDeprecated = includeDeprecatedDecoded
    }
}
