// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ValidateResourcePolicyOutputBody: Equatable {
    public let policyValidationPassed: Bool
    public let validationErrors: [ValidationErrorsEntry]?
}

extension ValidateResourcePolicyOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case policyValidationPassed = "PolicyValidationPassed"
        case validationErrors = "ValidationErrors"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let policyValidationPassedDecoded = try containerValues.decode(Bool.self, forKey: .policyValidationPassed)
        policyValidationPassed = policyValidationPassedDecoded
        let validationErrorsContainer = try containerValues.decodeIfPresent([ValidationErrorsEntry].self, forKey: .validationErrors)
        var validationErrorsDecoded0:[ValidationErrorsEntry]? = nil
        if let validationErrorsContainer = validationErrorsContainer {
            validationErrorsDecoded0 = [ValidationErrorsEntry]()
            for structure0 in validationErrorsContainer {
                validationErrorsDecoded0?.append(structure0)
            }
        }
        validationErrors = validationErrorsDecoded0
    }
}
