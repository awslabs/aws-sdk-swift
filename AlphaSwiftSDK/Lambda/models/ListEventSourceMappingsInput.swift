// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListEventSourceMappingsInput: Equatable {
    /**
     <p>The Amazon Resource Name (ARN) of the event source.</p>
              <ul>
                 <li>
                    <p>
                       <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p>
                 </li>
                 <li>
                    <p>
                       <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p>
                 </li>
                 <li>
                    <p>
                       <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p>
                 </li>
                 <li>
                    <p>
                       <b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the cluster.</p>
                 </li>
              </ul>
     */
    public let eventSourceArn: String?
    /**
     <p>The name of the Lambda function.</p>
              <p class="title">
                 <b>Name formats</b>
              </p>
              <ul>
                 <li>
                    <p>
                       <b>Function name</b> - <code>MyFunction</code>.</p>
                 </li>
                 <li>
                    <p>
                       <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p>
                 </li>
                 <li>
                    <p>
                       <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p>
                 </li>
                 <li>
                    <p>
                       <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p>
                 </li>
              </ul>
              <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64
           characters in length.</p>
     */
    public let functionName: String?
    /// <p>A pagination token returned by a previous call.</p>
    public let marker: String?
    /// <p>The maximum number of event source mappings to return.</p>
    public let maxItems: Int?

    public init (
        eventSourceArn: String? = nil,
        functionName: String? = nil,
        marker: String? = nil,
        maxItems: Int? = nil
    )
    {
        self.eventSourceArn = eventSourceArn
        self.functionName = functionName
        self.marker = marker
        self.maxItems = maxItems
    }
}
