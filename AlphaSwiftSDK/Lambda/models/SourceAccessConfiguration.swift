// Code generated by smithy-swift-codegen. DO NOT EDIT!



/**
 <p>
       (MQ) The Secrets Manager secret that stores your broker credentials. To store your secret, use the following format:
       <code>	  {
         "username": "your username",
         "password": "your password"
         }</code>
          </p>
 */
public struct SourceAccessConfiguration: Equatable {
    /**
     <p>To reference the secret, use the following format:
           <code>[
             {
             "Type": "BASIC_AUTH",
             "URI": "secretARN"
             }
             ]</code>
              </p>
              <p>The value of <code>Type</code> is always <code>BASIC_AUTH</code>. To encrypt the secret, you can use customer or service managed keys. When using a customer managed KMS key, the Lambda execution role requires <code>kms:Decrypt</code> permissions.</p>
     */
    public let type: SourceAccessType?
    /**
     <p>To reference the secret, use the following format:
           <code>[
             {
             "Type": "BASIC_AUTH",
             "URI": "secretARN"
             }
             ]</code>
              </p>
              <p>The value of <code>Type</code> is always <code>BASIC_AUTH</code>. To encrypt the secret, you can use customer or service managed keys. When using a customer managed KMS key, the Lambda execution role requires <code>kms:Decrypt</code> permissions.</p>
     */
    public let uRI: String?

    public init (
        type: SourceAccessType? = nil,
        uRI: String? = nil
    )
    {
        self.type = type
        self.uRI = uRI
    }
}
