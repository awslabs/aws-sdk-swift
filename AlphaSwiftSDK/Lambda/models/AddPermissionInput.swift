// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct AddPermissionInput: Equatable {
    /**
     <p>The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or
             <code>lambda:GetFunction</code>.</p>
     */
    public let action: String?
    /// <p>For Alexa Smart Home functions, a token that must be supplied by the invoker.</p>
    public let eventSourceToken: String?
    /**
     <p>The name of the Lambda function, version, or alias.</p>
              <p class="title">
                 <b>Name formats</b>
              </p>
              <ul>
                 <li>
                    <p>
                       <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p>
                 </li>
                 <li>
                    <p>
                       <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p>
                 </li>
                 <li>
                    <p>
                       <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p>
                 </li>
              </ul>
              <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN.
           If you specify only the function name, it is limited to 64 characters in length.</p>
     */
    public let functionName: String?
    /**
     <p>The AWS service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or
             <code>SourceAccount</code> to limit who can invoke the function through that service.</p>
     */
    public let principal: String?
    /// <p>Specify a version or alias to add permissions to a published version of the function.</p>
    public let qualifier: String?
    /**
     <p>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a
           policy that has changed since you last read it.</p>
     */
    public let revisionId: String?
    /**
     <p>For Amazon S3, the ID of the account that owns the resource. Use this together with <code>SourceArn</code> to
           ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted
           by its owner and recreated by another account.</p>
     */
    public let sourceAccount: String?
    /**
     <p>For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or
           Amazon SNS topic.</p>
     */
    public let sourceArn: String?
    /// <p>A statement identifier that differentiates the statement from others in the same policy.</p>
    public let statementId: String?

    public init (
        action: String? = nil,
        eventSourceToken: String? = nil,
        functionName: String? = nil,
        principal: String? = nil,
        qualifier: String? = nil,
        revisionId: String? = nil,
        sourceAccount: String? = nil,
        sourceArn: String? = nil,
        statementId: String? = nil
    )
    {
        self.action = action
        self.eventSourceToken = eventSourceToken
        self.functionName = functionName
        self.principal = principal
        self.qualifier = qualifier
        self.revisionId = revisionId
        self.sourceAccount = sourceAccount
        self.sourceArn = sourceArn
        self.statementId = statementId
    }
}
