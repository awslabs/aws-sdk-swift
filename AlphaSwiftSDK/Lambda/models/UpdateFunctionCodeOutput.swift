// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Details about a function's configuration.</p>
public struct UpdateFunctionCodeOutput: Equatable {
    /// <p>The SHA256 hash of the function's deployment package.</p>
    public let codeSha256: String?
    /// <p>The size of the function's deployment package, in bytes.</p>
    public let codeSize: Int
    /// <p>The function's dead letter queue.</p>
    public let deadLetterConfig: DeadLetterConfig?
    /// <p>The function's description.</p>
    public let description: String?
    /// <p>The function's environment variables.</p>
    public let environment: EnvironmentResponse?
    /// <p>Connection settings for an Amazon EFS file system.</p>
    public let fileSystemConfigs: [FileSystemConfig]?
    /// <p>The function's Amazon Resource Name (ARN).</p>
    public let functionArn: String?
    /// <p>The name of the function.</p>
    public let functionName: String?
    /// <p>The function that Lambda calls to begin executing your function.</p>
    public let handler: String?
    /// <p>The function's image configuration values.</p>
    public let imageConfigResponse: ImageConfigResponse?
    /**
     <p>The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've
           configured a customer managed CMK.</p>
     */
    public let kMSKeyArn: String?
    /// <p>The date and time that the function was last updated, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>
    public let lastModified: String?
    /**
     <p>The status of the last update that was performed on the function. This is first set to <code>Successful</code>
           after function creation completes.</p>
     */
    public let lastUpdateStatus: LastUpdateStatus?
    /// <p>The reason for the last update that was performed on the function.</p>
    public let lastUpdateStatusReason: String?
    /// <p>The reason code for the last update that was performed on the function.</p>
    public let lastUpdateStatusReasonCode: LastUpdateStatusReasonCode?
    /**
     <p>The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">
           layers</a>.</p>
     */
    public let layers: [Layer]?
    /// <p>For Lambda@Edge functions, the ARN of the master function.</p>
    public let masterArn: String?
    /// <p>The amount of memory available to the function at runtime. </p>
    public let memorySize: Int?
    /// <p>The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for .zip file archive.</p>
    public let packageType: PackageType?
    /// <p>The latest updated revision of the function or alias.</p>
    public let revisionId: String?
    /// <p>The function's execution role.</p>
    public let role: String?
    /// <p>The runtime environment for the Lambda function.</p>
    public let runtime: Runtime?
    /// <p>The ARN of the signing job.</p>
    public let signingJobArn: String?
    /// <p>The ARN of the signing profile version.</p>
    public let signingProfileVersionArn: String?
    /**
     <p>The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by
           invoking it.</p>
     */
    public let state: State?
    /// <p>The reason for the function's current state.</p>
    public let stateReason: String?
    /**
     <p>The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or
           modify the function.</p>
     */
    public let stateReasonCode: StateReasonCode?
    /// <p>The amount of time in seconds that Lambda allows a function to run before stopping it.</p>
    public let timeout: Int?
    /// <p>The function's AWS X-Ray tracing configuration.</p>
    public let tracingConfig: TracingConfigResponse?
    /// <p>The version of the Lambda function.</p>
    public let version: String?
    /// <p>The function's networking configuration.</p>
    public let vpcConfig: VpcConfigResponse?

    public init (
        codeSha256: String? = nil,
        codeSize: Int = 0,
        deadLetterConfig: DeadLetterConfig? = nil,
        description: String? = nil,
        environment: EnvironmentResponse? = nil,
        fileSystemConfigs: [FileSystemConfig]? = nil,
        functionArn: String? = nil,
        functionName: String? = nil,
        handler: String? = nil,
        imageConfigResponse: ImageConfigResponse? = nil,
        kMSKeyArn: String? = nil,
        lastModified: String? = nil,
        lastUpdateStatus: LastUpdateStatus? = nil,
        lastUpdateStatusReason: String? = nil,
        lastUpdateStatusReasonCode: LastUpdateStatusReasonCode? = nil,
        layers: [Layer]? = nil,
        masterArn: String? = nil,
        memorySize: Int? = nil,
        packageType: PackageType? = nil,
        revisionId: String? = nil,
        role: String? = nil,
        runtime: Runtime? = nil,
        signingJobArn: String? = nil,
        signingProfileVersionArn: String? = nil,
        state: State? = nil,
        stateReason: String? = nil,
        stateReasonCode: StateReasonCode? = nil,
        timeout: Int? = nil,
        tracingConfig: TracingConfigResponse? = nil,
        version: String? = nil,
        vpcConfig: VpcConfigResponse? = nil
    )
    {
        self.codeSha256 = codeSha256
        self.codeSize = codeSize
        self.deadLetterConfig = deadLetterConfig
        self.description = description
        self.environment = environment
        self.fileSystemConfigs = fileSystemConfigs
        self.functionArn = functionArn
        self.functionName = functionName
        self.handler = handler
        self.imageConfigResponse = imageConfigResponse
        self.kMSKeyArn = kMSKeyArn
        self.lastModified = lastModified
        self.lastUpdateStatus = lastUpdateStatus
        self.lastUpdateStatusReason = lastUpdateStatusReason
        self.lastUpdateStatusReasonCode = lastUpdateStatusReasonCode
        self.layers = layers
        self.masterArn = masterArn
        self.memorySize = memorySize
        self.packageType = packageType
        self.revisionId = revisionId
        self.role = role
        self.runtime = runtime
        self.signingJobArn = signingJobArn
        self.signingProfileVersionArn = signingProfileVersionArn
        self.state = state
        self.stateReason = stateReason
        self.stateReasonCode = stateReasonCode
        self.timeout = timeout
        self.tracingConfig = tracingConfig
        self.version = version
        self.vpcConfig = vpcConfig
    }
}
