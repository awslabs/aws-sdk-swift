// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CampaignSmsMessage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case body = "Body"
        case messageType = "MessageType"
        case senderId = "SenderId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let body = body {
            try encodeContainer.encode(body, forKey: .body)
        }
        if let messageType = messageType {
            try encodeContainer.encode(messageType.rawValue, forKey: .messageType)
        }
        if let senderId = senderId {
            try encodeContainer.encode(senderId, forKey: .senderId)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .body)
        body = bodyDecoded
        let messageTypeDecoded = try containerValues.decodeIfPresent(MessageType.self, forKey: .messageType)
        messageType = messageTypeDecoded
        let senderIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .senderId)
        senderId = senderIdDecoded
    }
}
