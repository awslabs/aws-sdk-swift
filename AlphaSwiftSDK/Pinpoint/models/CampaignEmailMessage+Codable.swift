// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CampaignEmailMessage: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case body = "Body"
        case fromAddress = "FromAddress"
        case htmlBody = "HtmlBody"
        case title = "Title"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let body = body {
            try encodeContainer.encode(body, forKey: .body)
        }
        if let fromAddress = fromAddress {
            try encodeContainer.encode(fromAddress, forKey: .fromAddress)
        }
        if let htmlBody = htmlBody {
            try encodeContainer.encode(htmlBody, forKey: .htmlBody)
        }
        if let title = title {
            try encodeContainer.encode(title, forKey: .title)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let bodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .body)
        body = bodyDecoded
        let fromAddressDecoded = try containerValues.decodeIfPresent(String.self, forKey: .fromAddress)
        fromAddress = fromAddressDecoded
        let htmlBodyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .htmlBody)
        htmlBody = htmlBodyDecoded
        let titleDecoded = try containerValues.decodeIfPresent(String.self, forKey: .title)
        title = titleDecoded
    }
}
