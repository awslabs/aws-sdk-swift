// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Specifies the default settings for a one-time SMS message that's sent directly to an endpoint.</p>
public struct SMSMessage: Equatable {
    /// <p>The body of the SMS message.</p>
    public let body: String?
    /// <p>The SMS program name that you provided to AWS Support when you requested your dedicated number.</p>
    public let keyword: String?
    /// <p>This field is reserved for future use.</p>
    public let mediaUrl: String?
    /// <p>The SMS message type. Valid values are TRANSACTIONAL (for messages that are critical or time-sensitive, such as a one-time passwords) and PROMOTIONAL (for messsages that aren't critical or time-sensitive, such as marketing messages).</p>
    public let messageType: MessageType?
    /// <p>The number to send the SMS message from. This value should be one of the dedicated long or short codes that's assigned to your AWS account. If you don't specify a long or short code, Amazon Pinpoint assigns a random long code to the SMS message and sends the message from that code.</p>
    public let originationNumber: String?
    /// <p>The sender ID to display as the sender of the message on a recipient's device. Support for sender IDs varies by country or region.</p>
    public let senderId: String?
    /// <p>The message variables to use in the SMS message. You can override the default variables with individual address variables.</p>
    public let substitutions: [String:[String]?]?

    public init (
        body: String? = nil,
        keyword: String? = nil,
        mediaUrl: String? = nil,
        messageType: MessageType? = nil,
        originationNumber: String? = nil,
        senderId: String? = nil,
        substitutions: [String:[String]?]? = nil
    )
    {
        self.body = body
        self.keyword = keyword
        self.mediaUrl = mediaUrl
        self.messageType = messageType
        self.originationNumber = originationNumber
        self.senderId = senderId
        self.substitutions = substitutions
    }
}
