// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum JobStatus {
    case completed
    case completing
    case created
    case failed
    case failing
    case initializing
    case pendingJob
    case preparingForInitialization
    case processing
    case sdkUnknown(String)
}

extension JobStatus : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [JobStatus] {
        return [
            .completed,
            .completing,
            .created,
            .failed,
            .failing,
            .initializing,
            .pendingJob,
            .preparingForInitialization,
            .processing,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .completed: return "COMPLETED"
        case .completing: return "COMPLETING"
        case .created: return "CREATED"
        case .failed: return "FAILED"
        case .failing: return "FAILING"
        case .initializing: return "INITIALIZING"
        case .pendingJob: return "PENDING_JOB"
        case .preparingForInitialization: return "PREPARING_FOR_INITIALIZATION"
        case .processing: return "PROCESSING"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = JobStatus(rawValue: rawValue) ?? JobStatus.sdkUnknown(rawValue)
    }
}
