// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SegmentBehaviors: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case recency = "Recency"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let recency = recency {
            try encodeContainer.encode(recency, forKey: .recency)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let recencyDecoded = try containerValues.decodeIfPresent(RecencyDimension.self, forKey: .recency)
        recency = recencyDecoded
    }
}
