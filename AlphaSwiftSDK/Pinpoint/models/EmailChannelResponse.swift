// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about the status and settings of the email channel for an application.</p>
public struct EmailChannelResponse: Equatable {
    /// <p>The unique identifier for the application that the email channel applies to.</p>
    public let applicationId: String?
    /// <p>The <a href="https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html">Amazon SES configuration set</a> that's applied to messages that are sent through the channel.</p>
    public let configurationSet: String?
    /// <p>The date and time, in ISO 8601 format, when the email channel was enabled.</p>
    public let creationDate: String?
    /// <p>Specifies whether the email channel is enabled for the application.</p>
    public let enabled: Bool
    /// <p>The verified email address that email is sent from when you send email through the channel.</p>
    public let fromAddress: String?
    /// <p>(Not used) This property is retained only for backward compatibility.</p>
    public let hasCredential: Bool
    /// <p>(Deprecated) An identifier for the email channel. This property is retained only for backward compatibility.</p>
    public let id: String?
    /// <p>The Amazon Resource Name (ARN) of the identity, verified with Amazon Simple Email Service (Amazon SES), that's used when you send email through the channel.</p>
    public let identity: String?
    /// <p>Specifies whether the email channel is archived.</p>
    public let isArchived: Bool
    /// <p>The user who last modified the email channel.</p>
    public let lastModifiedBy: String?
    /// <p>The date and time, in ISO 8601 format, when the email channel was last modified.</p>
    public let lastModifiedDate: String?
    /// <p>The maximum number of emails that can be sent through the channel each second.</p>
    public let messagesPerSecond: Int
    /// <p>The type of messaging or notification platform for the channel. For the email channel, this value is EMAIL.</p>
    public let platform: String?
    /// <p>The ARN of the AWS Identity and Access Management (IAM) role that Amazon Pinpoint uses to submit email-related event data for the channel.</p>
    public let roleArn: String?
    /// <p>The current version of the email channel.</p>
    public let version: Int

    public init (
        applicationId: String? = nil,
        configurationSet: String? = nil,
        creationDate: String? = nil,
        enabled: Bool = false,
        fromAddress: String? = nil,
        hasCredential: Bool = false,
        id: String? = nil,
        identity: String? = nil,
        isArchived: Bool = false,
        lastModifiedBy: String? = nil,
        lastModifiedDate: String? = nil,
        messagesPerSecond: Int = 0,
        platform: String? = nil,
        roleArn: String? = nil,
        version: Int = 0
    )
    {
        self.applicationId = applicationId
        self.configurationSet = configurationSet
        self.creationDate = creationDate
        self.enabled = enabled
        self.fromAddress = fromAddress
        self.hasCredential = hasCredential
        self.id = id
        self.identity = identity
        self.isArchived = isArchived
        self.lastModifiedBy = lastModifiedBy
        self.lastModifiedDate = lastModifiedDate
        self.messagesPerSecond = messagesPerSecond
        self.platform = platform
        self.roleArn = roleArn
        self.version = version
    }
}
