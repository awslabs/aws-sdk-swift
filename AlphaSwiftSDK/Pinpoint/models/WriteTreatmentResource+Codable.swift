// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension WriteTreatmentResource: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case customDeliveryConfiguration = "CustomDeliveryConfiguration"
        case messageConfiguration = "MessageConfiguration"
        case schedule = "Schedule"
        case sizePercent = "SizePercent"
        case templateConfiguration = "TemplateConfiguration"
        case treatmentDescription = "TreatmentDescription"
        case treatmentName = "TreatmentName"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let customDeliveryConfiguration = customDeliveryConfiguration {
            try encodeContainer.encode(customDeliveryConfiguration, forKey: .customDeliveryConfiguration)
        }
        if let messageConfiguration = messageConfiguration {
            try encodeContainer.encode(messageConfiguration, forKey: .messageConfiguration)
        }
        if let schedule = schedule {
            try encodeContainer.encode(schedule, forKey: .schedule)
        }
        if sizePercent != 0 {
            try encodeContainer.encode(sizePercent, forKey: .sizePercent)
        }
        if let templateConfiguration = templateConfiguration {
            try encodeContainer.encode(templateConfiguration, forKey: .templateConfiguration)
        }
        if let treatmentDescription = treatmentDescription {
            try encodeContainer.encode(treatmentDescription, forKey: .treatmentDescription)
        }
        if let treatmentName = treatmentName {
            try encodeContainer.encode(treatmentName, forKey: .treatmentName)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let customDeliveryConfigurationDecoded = try containerValues.decodeIfPresent(CustomDeliveryConfiguration.self, forKey: .customDeliveryConfiguration)
        customDeliveryConfiguration = customDeliveryConfigurationDecoded
        let messageConfigurationDecoded = try containerValues.decodeIfPresent(MessageConfiguration.self, forKey: .messageConfiguration)
        messageConfiguration = messageConfigurationDecoded
        let scheduleDecoded = try containerValues.decodeIfPresent(Schedule.self, forKey: .schedule)
        schedule = scheduleDecoded
        let sizePercentDecoded = try containerValues.decode(Int.self, forKey: .sizePercent)
        sizePercent = sizePercentDecoded
        let templateConfigurationDecoded = try containerValues.decodeIfPresent(TemplateConfiguration.self, forKey: .templateConfiguration)
        templateConfiguration = templateConfigurationDecoded
        let treatmentDescriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .treatmentDescription)
        treatmentDescription = treatmentDescriptionDecoded
        let treatmentNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .treatmentName)
        treatmentName = treatmentNameDecoded
    }
}
