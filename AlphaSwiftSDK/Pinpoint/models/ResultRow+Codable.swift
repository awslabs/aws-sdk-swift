// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension ResultRow: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case groupedBys = "GroupedBys"
        case values = "Values"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let groupedBys = groupedBys {
            var groupedBysContainer = encodeContainer.nestedUnkeyedContainer(forKey: .groupedBys)
            for listofresultrowvalue0 in groupedBys {
                try groupedBysContainer.encode(listofresultrowvalue0)
            }
        }
        if let values = values {
            var valuesContainer = encodeContainer.nestedUnkeyedContainer(forKey: .values)
            for listofresultrowvalue0 in values {
                try valuesContainer.encode(listofresultrowvalue0)
            }
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupedBysContainer = try containerValues.decodeIfPresent([ResultRowValue].self, forKey: .groupedBys)
        var groupedBysDecoded0:[ResultRowValue]? = nil
        if let groupedBysContainer = groupedBysContainer {
            groupedBysDecoded0 = [ResultRowValue]()
            for structure0 in groupedBysContainer {
                groupedBysDecoded0?.append(structure0)
            }
        }
        groupedBys = groupedBysDecoded0
        let valuesContainer = try containerValues.decodeIfPresent([ResultRowValue].self, forKey: .values)
        var valuesDecoded0:[ResultRowValue]? = nil
        if let valuesContainer = valuesContainer {
            valuesDecoded0 = [ResultRowValue]()
            for structure0 in valuesContainer {
                valuesDecoded0?.append(structure0)
            }
        }
        values = valuesDecoded0
    }
}
