// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Provides information about a phone number.</p>
public struct NumberValidateResponse: Equatable {
    /// <p>The carrier or service provider that the phone number is currently registered with. In some countries and regions, this value may be the carrier or service provider that the phone number was originally registered with.</p>
    public let carrier: String?
    /// <p>The name of the city where the phone number was originally registered.</p>
    public let city: String?
    /// <p>The cleansed phone number, in E.164 format, for the location where the phone number was originally registered.</p>
    public let cleansedPhoneNumberE164: String?
    /// <p>The cleansed phone number, in the format for the location where the phone number was originally registered.</p>
    public let cleansedPhoneNumberNational: String?
    /// <p>The name of the country or region where the phone number was originally registered.</p>
    public let country: String?
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region where the phone number was originally registered.</p>
    public let countryCodeIso2: String?
    /// <p>The numeric code for the country or region where the phone number was originally registered.</p>
    public let countryCodeNumeric: String?
    /// <p>The name of the county where the phone number was originally registered.</p>
    public let county: String?
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, that was sent in the request body.</p>
    public let originalCountryCodeIso2: String?
    /// <p>The phone number that was sent in the request body.</p>
    public let originalPhoneNumber: String?
    /**
     <p>The description of the phone type. Valid values are: MOBILE, LANDLINE, VOIP,
                       INVALID, PREPAID, and OTHER.</p>
     */
    public let phoneType: String?
    /// <p>The phone type, represented by an integer. Valid values are: 0 (mobile), 1 (landline), 2 (VoIP), 3 (invalid), 4 (other), and 5 (prepaid).</p>
    public let phoneTypeCode: Int
    /// <p>The time zone for the location where the phone number was originally registered.</p>
    public let timezone: String?
    /// <p>The postal or ZIP code for the location where the phone number was originally registered.</p>
    public let zipCode: String?

    public init (
        carrier: String? = nil,
        city: String? = nil,
        cleansedPhoneNumberE164: String? = nil,
        cleansedPhoneNumberNational: String? = nil,
        country: String? = nil,
        countryCodeIso2: String? = nil,
        countryCodeNumeric: String? = nil,
        county: String? = nil,
        originalCountryCodeIso2: String? = nil,
        originalPhoneNumber: String? = nil,
        phoneType: String? = nil,
        phoneTypeCode: Int = 0,
        timezone: String? = nil,
        zipCode: String? = nil
    )
    {
        self.carrier = carrier
        self.city = city
        self.cleansedPhoneNumberE164 = cleansedPhoneNumberE164
        self.cleansedPhoneNumberNational = cleansedPhoneNumberNational
        self.country = country
        self.countryCodeIso2 = countryCodeIso2
        self.countryCodeNumeric = countryCodeNumeric
        self.county = county
        self.originalCountryCodeIso2 = originalCountryCodeIso2
        self.originalPhoneNumber = originalPhoneNumber
        self.phoneType = phoneType
        self.phoneTypeCode = phoneTypeCode
        self.timezone = timezone
        self.zipCode = zipCode
    }
}
