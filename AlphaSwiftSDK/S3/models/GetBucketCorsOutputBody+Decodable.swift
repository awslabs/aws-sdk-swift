// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetBucketCorsOutputBody: Equatable {
    public let cORSRules: [CORSRule]?
}

extension GetBucketCorsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case cORSRules = "CORSRule"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        if containerValues.contains(.cORSRules) {
            let cORSRulesWrappedContainer = containerValues.nestedContainerNonThrowable(keyedBy: CodingKeys.self, forKey: .cORSRules)
            if cORSRulesWrappedContainer != nil {
                let cORSRulesContainer = try containerValues.decodeIfPresent([CORSRule].self, forKey: .cORSRules)
                var cORSRulesBuffer:[CORSRule]? = nil
                if let cORSRulesContainer = cORSRulesContainer {
                    cORSRulesBuffer = [CORSRule]()
                    for structureContainer0 in cORSRulesContainer {
                        cORSRulesBuffer?.append(structureContainer0)
                    }
                }
                cORSRules = cORSRulesBuffer
            } else {
                cORSRules = []
            }
        } else {
            cORSRules = nil
        }
    }
}
