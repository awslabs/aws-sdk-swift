// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CopyPartResult: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case eTag = "ETag"
        case lastModified = "LastModified"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let eTag = eTag {
            try container.encode(eTag, forKey: Key("eTag"))
        }
        if let lastModified = lastModified {
            try container.encode(TimestampWrapper(lastModified, format: .dateTime), forKey: Key("lastModified"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let eTagDecoded = try containerValues.decodeIfPresent(String.self, forKey: .eTag)
        eTag = eTagDecoded
        let lastModifiedDecoded = try containerValues.decodeIfPresent(String.self, forKey: .lastModified)
        var lastModifiedBuffer:Date? = nil
        if let lastModifiedDecoded = lastModifiedDecoded {
            lastModifiedBuffer = try TimestampWrapperDecoder.parseDateStringValue(lastModifiedDecoded, format: .dateTime)
        }
        lastModified = lastModifiedBuffer
    }
}
