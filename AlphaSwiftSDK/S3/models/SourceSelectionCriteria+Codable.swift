// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SourceSelectionCriteria: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case replicaModifications = "ReplicaModifications"
        case sseKmsEncryptedObjects = "SseKmsEncryptedObjects"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let replicaModifications = replicaModifications {
            try container.encode(replicaModifications, forKey: Key("replicaModifications"))
        }
        if let sseKmsEncryptedObjects = sseKmsEncryptedObjects {
            try container.encode(sseKmsEncryptedObjects, forKey: Key("sseKmsEncryptedObjects"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let sseKmsEncryptedObjectsDecoded = try containerValues.decodeIfPresent(SseKmsEncryptedObjects.self, forKey: .sseKmsEncryptedObjects)
        sseKmsEncryptedObjects = sseKmsEncryptedObjectsDecoded
        let replicaModificationsDecoded = try containerValues.decodeIfPresent(ReplicaModifications.self, forKey: .replicaModifications)
        replicaModifications = replicaModificationsDecoded
    }
}
