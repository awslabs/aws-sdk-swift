// Code generated by smithy-swift-codegen. DO NOT EDIT!



/**
 <p>Describes how uncompressed comma-separated values (CSV)-formatted results are
          formatted.</p>
 */
public struct CSVOutput: Equatable {
    /**
     <p>The value used to separate individual fields in a record. You can specify an arbitrary
              delimiter.</p>
     */
    public let fieldDelimiter: String?
    /**
     <p>A single character used for escaping when the field delimiter is part of the value. For
              example, if the value is <code>a, b</code>, Amazon S3 wraps this field value in quotation marks,
              as follows: <code>" a , b "</code>.</p>
     */
    public let quoteCharacter: String?
    /**
     <p>The single character used for escaping the quote character inside an already escaped
              value.</p>
     */
    public let quoteEscapeCharacter: String?
    /**
     <p>Indicates whether to use quotation marks around output fields. </p>
              <ul>
                 <li>
                    <p>
                       <code>ALWAYS</code>: Always use quotation marks for output fields.</p>
                 </li>
                 <li>
                    <p>
                       <code>ASNEEDED</code>: Use quotation marks for output fields when needed.</p>
                 </li>
              </ul>
     */
    public let quoteFields: QuoteFields?
    /**
     <p>A single character used to separate individual records in the output. Instead of the
              default value, you can specify an arbitrary delimiter.</p>
     */
    public let recordDelimiter: String?

    public init (
        fieldDelimiter: String? = nil,
        quoteCharacter: String? = nil,
        quoteEscapeCharacter: String? = nil,
        quoteFields: QuoteFields? = nil,
        recordDelimiter: String? = nil
    )
    {
        self.fieldDelimiter = fieldDelimiter
        self.quoteCharacter = quoteCharacter
        self.quoteEscapeCharacter = quoteEscapeCharacter
        self.quoteFields = quoteFields
        self.recordDelimiter = recordDelimiter
    }
}
