// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListObjectsV2Output: Equatable {
    /**
     <p>All of the keys rolled up into a common prefix count as a single return when calculating
              the number of returns.</p>

              <p>A response can contain <code>CommonPrefixes</code> only if you specify a
              delimiter.</p>

              <p>
                 <code>CommonPrefixes</code> contains all (if there are any) keys between
                 <code>Prefix</code> and the next occurrence of the string specified by a
              delimiter.</p>

              <p>
                 <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory
              specified by <code>Prefix</code>.</p>

              <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash
                 (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is
                 <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a
              single return when calculating the number of returns. </p>
     */
    public let commonPrefixes: [CommonPrefix]?
    /// <p>Metadata about each object returned.</p>
    public let contents: [Object]?
    /// <p> If ContinuationToken was sent with the request, it is included in the response.</p>
    public let continuationToken: String?
    /**
     <p>Causes keys that contain the same string between the prefix and the first occurrence of
              the delimiter to be rolled up into a single result element in the CommonPrefixes
              collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up
              result counts as only one return against the <code>MaxKeys</code> value.</p>
     */
    public let delimiter: String?
    /**
     <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>

              <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the
              response, and returns encoded key name values in the following response elements:</p>

              <p>
                 <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
     */
    public let encodingType: EncodingType?
    /**
     <p>Set to false if all of the results were returned. Set to true if more keys are available
              to return. If the number of results exceeds that specified by MaxKeys, all of the results
              might not be returned.</p>
     */
    public let isTruncated: Bool
    /**
     <p>KeyCount is the number of keys returned with this request. KeyCount will always be less
              than equals to MaxKeys field. Say you ask for 50 keys, your result will include less than
              equals 50 keys </p>
     */
    public let keyCount: Int
    /**
     <p>Sets the maximum number of keys returned in the response. By default the API returns up
              to 1,000 key names. The response might contain fewer keys but will never contain
              more.</p>
     */
    public let maxKeys: Int
    /**
     <p>The bucket name.</p>
              <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
              <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
     */
    public let name: String?
    /**
     <p>
                 <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which
              means there are more keys in the bucket that can be listed. The next list requests to Amazon S3
              can be continued with this <code>NextContinuationToken</code>.
                 <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
     */
    public let nextContinuationToken: String?
    /// <p> Keys that begin with the indicated prefix.</p>
    public let prefix: String?
    /// <p>If StartAfter was sent with the request, it is included in the response.</p>
    public let startAfter: String?

    public init (
        commonPrefixes: [CommonPrefix]? = nil,
        contents: [Object]? = nil,
        continuationToken: String? = nil,
        delimiter: String? = nil,
        encodingType: EncodingType? = nil,
        isTruncated: Bool = false,
        keyCount: Int = 0,
        maxKeys: Int = 0,
        name: String? = nil,
        nextContinuationToken: String? = nil,
        prefix: String? = nil,
        startAfter: String? = nil
    )
    {
        self.commonPrefixes = commonPrefixes
        self.contents = contents
        self.continuationToken = continuationToken
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.isTruncated = isTruncated
        self.keyCount = keyCount
        self.maxKeys = maxKeys
        self.name = name
        self.nextContinuationToken = nextContinuationToken
        self.prefix = prefix
        self.startAfter = startAfter
    }
}
