// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListMultipartUploadsInput: Equatable {
    /**
     <p>The name of the bucket to which the multipart upload was initiated. </p>
              <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
              <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
     */
    public let bucket: String?
    /**
     <p>Character you use to group keys.</p>
              <p>All keys that contain the same string between the prefix, if specified, and the first
              occurrence of the delimiter after the prefix are grouped under a single result element,
                 <code>CommonPrefixes</code>. If you don't specify the prefix parameter, then the
              substring starts at the beginning of the key. The keys that are grouped under
                 <code>CommonPrefixes</code> result element are not returned elsewhere in the
              response.</p>
     */
    public let delimiter: String?
    /**
     <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding
              method to use. An object key may contain any Unicode character; however, XML 1.0 parser
              cannot parse some characters, such as characters with an ASCII value from 0 to 10. For
              characters that are not supported in XML 1.0, you can add this parameter to request that
              Amazon S3 encode the keys in the response.</p>
     */
    public let encodingType: EncodingType?
    /// <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
    public let expectedBucketOwner: String?
    /**
     <p>Together with upload-id-marker, this parameter specifies the multipart upload after
              which listing should begin.</p>
              <p>If <code>upload-id-marker</code> is not specified, only the keys lexicographically
              greater than the specified <code>key-marker</code> will be included in the list.</p>

              <p>If <code>upload-id-marker</code> is specified, any multipart uploads for a key equal to
              the <code>key-marker</code> might also be included, provided those multipart uploads have
              upload IDs lexicographically greater than the specified
              <code>upload-id-marker</code>.</p>
     */
    public let keyMarker: String?
    /**
     <p>Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response
              body. 1,000 is the maximum number of uploads that can be returned in a response.</p>
     */
    public let maxUploads: Int
    /**
     <p>Lists in-progress uploads only for those keys that begin with the specified prefix. You
              can use prefixes to separate a bucket into different grouping of keys. (You can think of
              using prefix to make groups in the same way you'd use a folder in a file system.)</p>
     */
    public let prefix: String?
    /**
     <p>Together with key-marker, specifies the multipart upload after which listing should
              begin. If key-marker is not specified, the upload-id-marker parameter is ignored.
              Otherwise, any multipart uploads for a key equal to the key-marker might be included in the
              list only if they have an upload ID lexicographically greater than the specified
                 <code>upload-id-marker</code>.</p>
     */
    public let uploadIdMarker: String?

    public init (
        bucket: String? = nil,
        delimiter: String? = nil,
        encodingType: EncodingType? = nil,
        expectedBucketOwner: String? = nil,
        keyMarker: String? = nil,
        maxUploads: Int = 0,
        prefix: String? = nil,
        uploadIdMarker: String? = nil
    )
    {
        self.bucket = bucket
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.expectedBucketOwner = expectedBucketOwner
        self.keyMarker = keyMarker
        self.maxUploads = maxUploads
        self.prefix = prefix
        self.uploadIdMarker = uploadIdMarker
    }
}
