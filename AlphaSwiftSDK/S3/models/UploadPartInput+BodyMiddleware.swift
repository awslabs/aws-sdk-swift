// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct UploadPartInputBodyMiddleware: Middleware {
    public let id: String = "UploadPartInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<UploadPartInput>,
                  next: H) -> Swift.Result<OperationOutput<UploadPartOutput, UploadPartOutputError>, Swift.Error>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let body = input.operationInput.body {
            let data = body
            let body = HttpBody.data(data)
            input.builder.withBody(body)
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<UploadPartInput>
    public typealias MOutput = OperationOutput<UploadPartOutput, UploadPartOutputError>
    public typealias Context = HttpContext
}
