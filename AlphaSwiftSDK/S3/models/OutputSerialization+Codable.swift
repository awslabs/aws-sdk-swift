// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension OutputSerialization: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case cSV = "CSV"
        case jSON = "JSON"
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: Key.self)
        if encoder.codingPath.isEmpty {
            try container.encode("http://s3.amazonaws.com/doc/2006-03-01/", forKey: Key("xmlns"))
        }
        if let cSV = cSV {
            try container.encode(cSV, forKey: Key("cSV"))
        }
        if let jSON = jSON {
            try container.encode(jSON, forKey: Key("jSON"))
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let cSVDecoded = try containerValues.decodeIfPresent(CSVOutput.self, forKey: .cSV)
        cSV = cSVDecoded
        let jSONDecoded = try containerValues.decodeIfPresent(JSONOutput.self, forKey: .jSON)
        jSON = jSONDecoded
    }
}
