// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListObjectsV2InputQueryItemMiddleware: Middleware {
    public let id: String = "ListObjectsV2InputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListObjectsV2Input>,
                  next: H) -> Swift.Result<OperationOutput<ListObjectsV2Output, ListObjectsV2OutputError>, Swift.Error>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        input.builder.withQueryItem(URLQueryItem(name: "list-type", value: "2"))
        if let continuationToken = input.operationInput.continuationToken {
            let continuationTokenQueryItem = URLQueryItem(name: "continuation-token".urlPercentEncoding(), value: String(continuationToken).urlPercentEncoding())
            input.builder.withQueryItem(continuationTokenQueryItem)
        }
        if let delimiter = input.operationInput.delimiter {
            let delimiterQueryItem = URLQueryItem(name: "delimiter".urlPercentEncoding(), value: String(delimiter).urlPercentEncoding())
            input.builder.withQueryItem(delimiterQueryItem)
        }
        let fetchOwnerQueryItem = URLQueryItem(name: "fetch-owner".urlPercentEncoding(), value: String(input.operationInput.fetchOwner).urlPercentEncoding())
        input.builder.withQueryItem(fetchOwnerQueryItem)
        if let encodingType = input.operationInput.encodingType {
            let encodingTypeQueryItem = URLQueryItem(name: "encoding-type".urlPercentEncoding(), value: String(encodingType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(encodingTypeQueryItem)
        }
        if let startAfter = input.operationInput.startAfter {
            let startAfterQueryItem = URLQueryItem(name: "start-after".urlPercentEncoding(), value: String(startAfter).urlPercentEncoding())
            input.builder.withQueryItem(startAfterQueryItem)
        }
        if let prefix = input.operationInput.prefix {
            let prefixQueryItem = URLQueryItem(name: "prefix".urlPercentEncoding(), value: String(prefix).urlPercentEncoding())
            input.builder.withQueryItem(prefixQueryItem)
        }
        let maxKeysQueryItem = URLQueryItem(name: "max-keys".urlPercentEncoding(), value: String(input.operationInput.maxKeys).urlPercentEncoding())
        input.builder.withQueryItem(maxKeysQueryItem)
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListObjectsV2Input>
    public typealias MOutput = OperationOutput<ListObjectsV2Output, ListObjectsV2OutputError>
    public typealias Context = HttpContext
}
