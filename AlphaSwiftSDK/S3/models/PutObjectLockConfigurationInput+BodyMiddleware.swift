// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct PutObjectLockConfigurationInputBodyMiddleware: Middleware {
    public let id: String = "PutObjectLockConfigurationInputBodyMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<PutObjectLockConfigurationInput>,
                  next: H) -> Swift.Result<OperationOutput<PutObjectLockConfigurationOutput, PutObjectLockConfigurationOutputError>, Swift.Error>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let objectLockConfiguration = input.operationInput.objectLockConfiguration {
            do {
                let encoder = context.getEncoder()
                let data = try encoder.encode(objectLockConfiguration)
                let body = HttpBody.data(data)
                input.builder.withBody(body)
            } catch let err {
                return .failure(err)
            }
        }
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<PutObjectLockConfigurationInput>
    public typealias MOutput = OperationOutput<PutObjectLockConfigurationOutput, PutObjectLockConfigurationOutputError>
    public typealias Context = HttpContext
}
