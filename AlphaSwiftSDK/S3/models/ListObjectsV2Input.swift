// Code generated by smithy-swift-codegen. DO NOT EDIT!



public struct ListObjectsV2Input: Equatable {
    /**
     <p>Bucket name to list. </p>
              <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
              <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>
     */
    public let bucket: String?
    /**
     <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a
              token. ContinuationToken is obfuscated and is not a real key.</p>
     */
    public let continuationToken: String?
    /// <p>A delimiter is a character you use to group keys.</p>
    public let delimiter: String?
    /// <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
    public let encodingType: EncodingType?
    /// <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>
    public let expectedBucketOwner: String?
    /**
     <p>The owner field is not present in listV2 by default, if you want to return owner field
              with each key in the result then set the fetch owner field to true.</p>
     */
    public let fetchOwner: Bool
    /**
     <p>Sets the maximum number of keys returned in the response. By default the API returns up
              to 1,000 key names. The response might contain fewer keys but will never contain
              more.</p>
     */
    public let maxKeys: Int
    /// <p>Limits the response to keys that begin with the specified prefix.</p>
    public let prefix: String?
    /**
     <p>Confirms that the requester knows that she or he will be charged for the list objects
              request in V2 style. Bucket owners need not specify this parameter in their
              requests.</p>
     */
    public let requestPayer: RequestPayer?
    /**
     <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this
              specified key. StartAfter can be any key in the bucket.</p>
     */
    public let startAfter: String?

    public init (
        bucket: String? = nil,
        continuationToken: String? = nil,
        delimiter: String? = nil,
        encodingType: EncodingType? = nil,
        expectedBucketOwner: String? = nil,
        fetchOwner: Bool = false,
        maxKeys: Int = 0,
        prefix: String? = nil,
        requestPayer: RequestPayer? = nil,
        startAfter: String? = nil
    )
    {
        self.bucket = bucket
        self.continuationToken = continuationToken
        self.delimiter = delimiter
        self.encodingType = encodingType
        self.expectedBucketOwner = expectedBucketOwner
        self.fetchOwner = fetchOwner
        self.maxKeys = maxKeys
        self.prefix = prefix
        self.requestPayer = requestPayer
        self.startAfter = startAfter
    }
}
