// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

public struct ListObjectsInputQueryItemMiddleware: Middleware {
    public let id: String = "ListObjectsInputQueryItemMiddleware"

    public init() {}

    public func handle<H>(context: Context,
                  input: SerializeStepInput<ListObjectsInput>,
                  next: H) -> Swift.Result<OperationOutput<ListObjectsOutput, ListObjectsOutputError>, Swift.Error>
    where H: Handler,
    Self.MInput == H.Input,
    Self.MOutput == H.Output,
    Self.Context == H.Context
    {
        if let delimiter = input.operationInput.delimiter {
            let delimiterQueryItem = URLQueryItem(name: "delimiter".urlPercentEncoding(), value: String(delimiter).urlPercentEncoding())
            input.builder.withQueryItem(delimiterQueryItem)
        }
        if let encodingType = input.operationInput.encodingType {
            let encodingTypeQueryItem = URLQueryItem(name: "encoding-type".urlPercentEncoding(), value: String(encodingType.rawValue).urlPercentEncoding())
            input.builder.withQueryItem(encodingTypeQueryItem)
        }
        if let marker = input.operationInput.marker {
            let markerQueryItem = URLQueryItem(name: "marker".urlPercentEncoding(), value: String(marker).urlPercentEncoding())
            input.builder.withQueryItem(markerQueryItem)
        }
        if let prefix = input.operationInput.prefix {
            let prefixQueryItem = URLQueryItem(name: "prefix".urlPercentEncoding(), value: String(prefix).urlPercentEncoding())
            input.builder.withQueryItem(prefixQueryItem)
        }
        let maxKeysQueryItem = URLQueryItem(name: "max-keys".urlPercentEncoding(), value: String(input.operationInput.maxKeys).urlPercentEncoding())
        input.builder.withQueryItem(maxKeysQueryItem)
        return next.handle(context: context, input: input)
    }

    public typealias MInput = SerializeStepInput<ListObjectsInput>
    public typealias MOutput = OperationOutput<ListObjectsOutput, ListObjectsOutputError>
    public typealias Context = HttpContext
}
