// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension GetOpenIdTokenInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case identityId = "IdentityId"
        case logins = "Logins"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let identityId = identityId {
            try encodeContainer.encode(identityId, forKey: .identityId)
        }
        if let logins = logins {
            var loginsContainer = encodeContainer.nestedContainer(keyedBy: Key.self, forKey: .logins)
            for (dictKey0, loginsmap0) in logins {
                try loginsContainer.encode(loginsmap0, forKey: Key(stringValue: dictKey0))
            }
        }
    }
}
