// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>
public struct GetOpenIdTokenForDeveloperIdentityInput: Equatable {
    /// <p>A unique identifier in the format REGION:GUID.</p>
    public let identityId: String?
    /// <p>An identity pool ID in the format REGION:GUID.</p>
    public let identityPoolId: String?
    /**
     <p>A set of optional name-value pairs that map provider names to provider tokens. Each
              name-value pair represents a user from a public provider or developer provider. If the user
              is from a developer provider, the name-value pair will follow the syntax
                 <code>"developer_provider_name": "developer_user_identifier"</code>. The developer
              provider is the "domain" by which Cognito will refer to your users; you provided this
              domain while creating/updating the identity pool. The developer user identifier is an
              identifier from your backend that uniquely identifies a user. When you create an identity
              pool, you can specify the supported logins.</p>
     */
    public let logins: [String:String]?
    /**
     <p>The expiration time of the token, in seconds. You can specify a custom expiration
              time for the token so that you can cache it. If you don't provide an expiration time, the
              token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS
              credentials, which are valid for a maximum of one hour. The maximum token duration you can
              set is 24 hours. You should take care in setting the expiration time for a token, as there
              are significant security implications: an attacker could use a leaked token to access your
              AWS resources for the token's duration.</p>
              <note>
                 <p>Please provide for a small grace period, usually no more than 5 minutes, to account for clock skew.</p>
              </note>
     */
    public let tokenDuration: Int?

    public init (
        identityId: String? = nil,
        identityPoolId: String? = nil,
        logins: [String:String]? = nil,
        tokenDuration: Int? = nil
    )
    {
        self.identityId = identityId
        self.identityPoolId = identityPoolId
        self.logins = logins
        self.tokenDuration = tokenDuration
    }
}
