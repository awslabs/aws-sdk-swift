// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListIdentitiesOutputBody: Equatable {
    public let identityPoolId: String?
    public let identities: [IdentityDescription]?
    public let nextToken: String?
}

extension ListIdentitiesOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case identities = "Identities"
        case identityPoolId = "IdentityPoolId"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let identitiesContainer = try containerValues.decodeIfPresent([IdentityDescription].self, forKey: .identities)
        var identitiesDecoded0:[IdentityDescription]? = nil
        if let identitiesContainer = identitiesContainer {
            identitiesDecoded0 = [IdentityDescription]()
            for structure0 in identitiesContainer {
                identitiesDecoded0?.append(structure0)
            }
        }
        identities = identitiesDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
