// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct GetIdInputBody: Equatable {
    public let accountId: String?
    public let identityPoolId: String?
    public let logins: [String:String]?
}

extension GetIdInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accountId = "AccountId"
        case identityPoolId = "IdentityPoolId"
        case logins = "Logins"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accountIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accountId)
        accountId = accountIdDecoded
        let identityPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .identityPoolId)
        identityPoolId = identityPoolIdDecoded
        let loginsContainer = try containerValues.decodeIfPresent([String:String].self, forKey: .logins)
        var loginsDecoded0: [String:String]? = nil
        if let loginsContainer = loginsContainer {
            loginsDecoded0 = [String:String]()
            for (key0, identityprovidertoken0) in loginsContainer {
                loginsDecoded0?[key0] = identityprovidertoken0
            }
        }
        logins = loginsDecoded0
    }
}
