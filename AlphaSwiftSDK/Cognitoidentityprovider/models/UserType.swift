// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// <p>The user type.</p>
public struct UserType: Equatable {
    /// <p>A container with information about the user type attributes.</p>
    public let attributes: [AttributeType]?
    /// <p>Specifies whether the user is enabled.</p>
    public let enabled: Bool
    /// <p>The MFA options for the user.</p>
    public let mFAOptions: [MFAOptionType]?
    /// <p>The creation date of the user.</p>
    public let userCreateDate: Date?
    /// <p>The last modified date of the user.</p>
    public let userLastModifiedDate: Date?
    /**
     <p>The user status. Can be one of the following:</p>
             <ul>
                 <li>
                     <p>UNCONFIRMED - User has been created but not confirmed.</p>
                 </li>
                 <li>
                     <p>CONFIRMED - User has been confirmed.</p>
                 </li>
                 <li>
                     <p>ARCHIVED - User is no longer active.</p>
                 </li>
                 <li>
                     <p>COMPROMISED - User is disabled due to a potential security threat.</p>
                 </li>
                 <li>
                     <p>UNKNOWN - User status is not known.</p>
                 </li>
                 <li>
                     <p>RESET_REQUIRED - User is confirmed, but the user must request a code and reset
                         his or her password before he or she can sign in.</p>
                 </li>
                 <li>
                     <p>FORCE_CHANGE_PASSWORD - The user is confirmed and the user can sign in using a
                         temporary password, but on first sign-in, the user must change his or her
                         password to a new value before doing anything else. </p>
                 </li>
              </ul>
     */
    public let userStatus: UserStatusType?
    /// <p>The user name of the user you wish to describe.</p>
    public let username: String?

    public init (
        attributes: [AttributeType]? = nil,
        enabled: Bool = false,
        mFAOptions: [MFAOptionType]? = nil,
        userCreateDate: Date? = nil,
        userLastModifiedDate: Date? = nil,
        userStatus: UserStatusType? = nil,
        username: String? = nil
    )
    {
        self.attributes = attributes
        self.enabled = enabled
        self.mFAOptions = mFAOptions
        self.userCreateDate = userCreateDate
        self.userLastModifiedDate = userLastModifiedDate
        self.userStatus = userStatus
        self.username = username
    }
}
