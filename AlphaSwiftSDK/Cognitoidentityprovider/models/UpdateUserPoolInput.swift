// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Represents the request to update the user pool.</p>
public struct UpdateUserPoolInput: Equatable {
    /**
     <p>Use this setting to define which verified available method a user can use to recover
                 their password when they call <code>ForgotPassword</code>. It allows you to define a
                 preferred method when a user has more than one method available. With this setting, SMS
                 does not qualify for a valid password recovery mechanism if the user also has SMS MFA
                 enabled. In the absence of this setting, Cognito uses the legacy behavior to determine
                 the recovery method where SMS is preferred over email.</p>
     */
    public let accountRecoverySetting: AccountRecoverySettingType?
    /// <p>The configuration for <code>AdminCreateUser</code> requests.</p>
    public let adminCreateUserConfig: AdminCreateUserConfigType?
    /**
     <p>The attributes that are automatically verified when the Amazon Cognito service makes a
                 request to update user pools.</p>
     */
    public let autoVerifiedAttributes: [VerifiedAttributeType]?
    /// <p>Device configuration.</p>
    public let deviceConfiguration: DeviceConfigurationType?
    /// <p>Email configuration.</p>
    public let emailConfiguration: EmailConfigurationType?
    /// <p>The contents of the email verification message.</p>
    public let emailVerificationMessage: String?
    /// <p>The subject of the email verification message.</p>
    public let emailVerificationSubject: String?
    /**
     <p>The AWS Lambda configuration information from the request to update the user
                 pool.</p>
     */
    public let lambdaConfig: LambdaConfigType?
    /**
     <p>Can be one of the following values:</p>
             <ul>
                 <li>
                     <p>
                         <code>OFF</code> - MFA tokens are not required and cannot be specified during
                         user registration.</p>
                 </li>
                 <li>
                     <p>
                         <code>ON</code> - MFA tokens are required for all user registrations. You can
                         only specify required when you are initially creating a user pool.</p>
                 </li>
                 <li>
                     <p>
                         <code>OPTIONAL</code> - Users have the option when registering to create an MFA
                         token.</p>
                 </li>
              </ul>
     */
    public let mfaConfiguration: UserPoolMfaType?
    /// <p>A container with the policies you wish to update in a user pool.</p>
    public let policies: UserPoolPolicyType?
    /// <p>The contents of the SMS authentication message.</p>
    public let smsAuthenticationMessage: String?
    /// <p>SMS configuration.</p>
    public let smsConfiguration: SmsConfigurationType?
    /// <p>A container with information about the SMS verification message.</p>
    public let smsVerificationMessage: String?
    /**
     <p>Used to enable advanced security risk detection. Set the key
                     <code>AdvancedSecurityMode</code> to the value "AUDIT".</p>
     */
    public let userPoolAddOns: UserPoolAddOnsType?
    /// <p>The user pool ID for the user pool you want to update.</p>
    public let userPoolId: String?
    /**
     <p>The tag keys and values to assign to the user pool. A tag is a label that you can use
                 to categorize and manage user pools in different ways, such as by purpose, owner,
                 environment, or other criteria.</p>
     */
    public let userPoolTags: [String:String]?
    /// <p>The template for verification messages.</p>
    public let verificationMessageTemplate: VerificationMessageTemplateType?

    public init (
        accountRecoverySetting: AccountRecoverySettingType? = nil,
        adminCreateUserConfig: AdminCreateUserConfigType? = nil,
        autoVerifiedAttributes: [VerifiedAttributeType]? = nil,
        deviceConfiguration: DeviceConfigurationType? = nil,
        emailConfiguration: EmailConfigurationType? = nil,
        emailVerificationMessage: String? = nil,
        emailVerificationSubject: String? = nil,
        lambdaConfig: LambdaConfigType? = nil,
        mfaConfiguration: UserPoolMfaType? = nil,
        policies: UserPoolPolicyType? = nil,
        smsAuthenticationMessage: String? = nil,
        smsConfiguration: SmsConfigurationType? = nil,
        smsVerificationMessage: String? = nil,
        userPoolAddOns: UserPoolAddOnsType? = nil,
        userPoolId: String? = nil,
        userPoolTags: [String:String]? = nil,
        verificationMessageTemplate: VerificationMessageTemplateType? = nil
    )
    {
        self.accountRecoverySetting = accountRecoverySetting
        self.adminCreateUserConfig = adminCreateUserConfig
        self.autoVerifiedAttributes = autoVerifiedAttributes
        self.deviceConfiguration = deviceConfiguration
        self.emailConfiguration = emailConfiguration
        self.emailVerificationMessage = emailVerificationMessage
        self.emailVerificationSubject = emailVerificationSubject
        self.lambdaConfig = lambdaConfig
        self.mfaConfiguration = mfaConfiguration
        self.policies = policies
        self.smsAuthenticationMessage = smsAuthenticationMessage
        self.smsConfiguration = smsConfiguration
        self.smsVerificationMessage = smsVerificationMessage
        self.userPoolAddOns = userPoolAddOns
        self.userPoolId = userPoolId
        self.userPoolTags = userPoolTags
        self.verificationMessageTemplate = verificationMessageTemplate
    }
}
