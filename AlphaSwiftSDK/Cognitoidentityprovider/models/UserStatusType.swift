// Code generated by smithy-swift-codegen. DO NOT EDIT!



public enum UserStatusType {
    case archived
    case compromised
    case confirmed
    case forceChangePassword
    case resetRequired
    case unconfirmed
    case unknown
    case sdkUnknown(String)
}

extension UserStatusType : Equatable, RawRepresentable, Codable, CaseIterable, Hashable {
    public static var allCases: [UserStatusType] {
        return [
            .archived,
            .compromised,
            .confirmed,
            .forceChangePassword,
            .resetRequired,
            .unconfirmed,
            .unknown,
            .sdkUnknown("")
        ]
    }
    public init?(rawValue: String) {
        let value = Self.allCases.first(where: { $0.rawValue == rawValue })
        self = value ?? Self.sdkUnknown(rawValue)
    }
    public var rawValue: String {
        switch self {
        case .archived: return "ARCHIVED"
        case .compromised: return "COMPROMISED"
        case .confirmed: return "CONFIRMED"
        case .forceChangePassword: return "FORCE_CHANGE_PASSWORD"
        case .resetRequired: return "RESET_REQUIRED"
        case .unconfirmed: return "UNCONFIRMED"
        case .unknown: return "UNKNOWN"
        case let .sdkUnknown(s): return s
        }
    }
    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        let rawValue = try container.decode(RawValue.self)
        self = UserStatusType(rawValue: rawValue) ?? UserStatusType.sdkUnknown(rawValue)
    }
}
