// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetUserSettingsInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case mFAOptions = "MFAOptions"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accessToken = accessToken {
            try encodeContainer.encode(accessToken, forKey: .accessToken)
        }
        if let mFAOptions = mFAOptions {
            var mFAOptionsContainer = encodeContainer.nestedUnkeyedContainer(forKey: .mFAOptions)
            for mfaoptionlisttype0 in mFAOptions {
                try mFAOptionsContainer.encode(mfaoptionlisttype0)
            }
        }
    }
}
