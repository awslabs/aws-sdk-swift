// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SignUpOutputBody: Equatable {
    public let userConfirmed: Bool
    public let codeDeliveryDetails: CodeDeliveryDetailsType?
    public let userSub: String?
}

extension SignUpOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case codeDeliveryDetails = "CodeDeliveryDetails"
        case userConfirmed = "UserConfirmed"
        case userSub = "UserSub"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userConfirmedDecoded = try containerValues.decode(Bool.self, forKey: .userConfirmed)
        userConfirmed = userConfirmedDecoded
        let codeDeliveryDetailsDecoded = try containerValues.decodeIfPresent(CodeDeliveryDetailsType.self, forKey: .codeDeliveryDetails)
        codeDeliveryDetails = codeDeliveryDetailsDecoded
        let userSubDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userSub)
        userSub = userSubDecoded
    }
}
