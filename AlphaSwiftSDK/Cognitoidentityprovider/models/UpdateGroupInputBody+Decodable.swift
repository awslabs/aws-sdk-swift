// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateGroupInputBody: Equatable {
    public let groupName: String?
    public let userPoolId: String?
    public let description: String?
    public let roleArn: String?
    public let precedence: Int?
}

extension UpdateGroupInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case description = "Description"
        case groupName = "GroupName"
        case precedence = "Precedence"
        case roleArn = "RoleArn"
        case userPoolId = "UserPoolId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let groupNameDecoded = try containerValues.decodeIfPresent(String.self, forKey: .groupName)
        groupName = groupNameDecoded
        let userPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let descriptionDecoded = try containerValues.decodeIfPresent(String.self, forKey: .description)
        description = descriptionDecoded
        let roleArnDecoded = try containerValues.decodeIfPresent(String.self, forKey: .roleArn)
        roleArn = roleArnDecoded
        let precedenceDecoded = try containerValues.decodeIfPresent(Int.self, forKey: .precedence)
        precedence = precedenceDecoded
    }
}
