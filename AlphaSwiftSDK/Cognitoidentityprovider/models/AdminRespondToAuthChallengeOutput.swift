// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Responds to the authentication challenge, as an administrator.</p>
public struct AdminRespondToAuthChallengeOutput: Equatable {
    /// <p>The result returned by the server in response to the authentication request.</p>
    public let authenticationResult: AuthenticationResultType?
    /// <p>The name of the challenge. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html">AdminInitiateAuth</a>.</p>
    public let challengeName: ChallengeNameType?
    /// <p>The challenge parameters. For more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminInitiateAuth.html">AdminInitiateAuth</a>.</p>
    public let challengeParameters: [String:String]?
    /**
     <p>The session which should be passed both ways in challenge-response calls to the
                 service. If the caller needs to
                 go through another challenge, they return a session with other challenge parameters.
                 This session should be passed as it is to the next <code>RespondToAuthChallenge</code>
                 API call.</p>
     */
    public let session: String?

    public init (
        authenticationResult: AuthenticationResultType? = nil,
        challengeName: ChallengeNameType? = nil,
        challengeParameters: [String:String]? = nil,
        session: String? = nil
    )
    {
        self.authenticationResult = authenticationResult
        self.challengeName = challengeName
        self.challengeParameters = challengeParameters
        self.session = session
    }
}
