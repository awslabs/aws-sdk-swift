// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Initiates the authentication request.</p>
public struct InitiateAuthInput: Equatable {
    /**
     <p>The Amazon Pinpoint analytics metadata for collecting metrics for
                     <code>InitiateAuth</code> calls.</p>
     */
    public let analyticsMetadata: AnalyticsMetadataType?
    /**
     <p>The authentication flow for this call to execute. The API action will depend on this
                 value. For example: </p>
             <ul>
                 <li>
                     <p>
                       <code>REFRESH_TOKEN_AUTH</code> will take in a valid refresh token and return
                         new tokens.</p>
                 </li>
                 <li>
                     <p>
                       <code>USER_SRP_AUTH</code> will take in <code>USERNAME</code> and
                             <code>SRP_A</code> and return the SRP variables to be used for next
                         challenge execution.</p>
                 </li>
                 <li>
                     <p>
                       <code>USER_PASSWORD_AUTH</code> will take in <code>USERNAME</code> and
                             <code>PASSWORD</code> and return the next challenge or tokens.</p>
                 </li>
              </ul>
             <p>Valid values include:</p>
             <ul>
                 <li>
                     <p>
                       <code>USER_SRP_AUTH</code>: Authentication flow for the Secure Remote Password
                         (SRP) protocol.</p>
                 </li>
                 <li>
                     <p>
                       <code>REFRESH_TOKEN_AUTH</code>/<code>REFRESH_TOKEN</code>: Authentication
                         flow for refreshing the access token and ID token by supplying a valid refresh
                         token.</p>
                 </li>
                 <li>
                     <p>
                       <code>CUSTOM_AUTH</code>: Custom authentication flow.</p>
                 </li>
                 <li>
                     <p>
                       <code>USER_PASSWORD_AUTH</code>: Non-SRP authentication flow; USERNAME and
                         PASSWORD are passed directly. If a user migration Lambda trigger is set, this
                         flow will invoke the user migration Lambda if the USERNAME is not found in the
                         user pool. </p>
                 </li>
                 <li>
                     <p>
                       <code>ADMIN_USER_PASSWORD_AUTH</code>: Admin-based user password
                         authentication. This replaces the <code>ADMIN_NO_SRP_AUTH</code> authentication
                         flow. In this flow, Cognito receives the password in the request instead of
                         using the SRP process to verify passwords.</p>
                 </li>
              </ul>
             <p>
                 <code>ADMIN_NO_SRP_AUTH</code> is not a valid value.</p>
     */
    public let authFlow: AuthFlowType?
    /**
     <p>The authentication parameters. These are inputs corresponding to the
                     <code>AuthFlow</code> that you are invoking. The required values depend on the value
                 of <code>AuthFlow</code>:</p>
             <ul>
                 <li>
                     <p>For <code>USER_SRP_AUTH</code>: <code>USERNAME</code> (required),
                             <code>SRP_A</code> (required), <code>SECRET_HASH</code> (required if the app
                         client is configured with a client secret), <code>DEVICE_KEY</code>.</p>
                 </li>
                 <li>
                     <p>For <code>REFRESH_TOKEN_AUTH/REFRESH_TOKEN</code>: <code>REFRESH_TOKEN</code>
                         (required), <code>SECRET_HASH</code> (required if the app client is configured
                         with a client secret), <code>DEVICE_KEY</code>.</p>
                 </li>
                 <li>
                     <p>For <code>CUSTOM_AUTH</code>: <code>USERNAME</code> (required),
                             <code>SECRET_HASH</code> (if app client is configured with client secret),
                         <code>DEVICE_KEY</code>. To start the authentication flow with password verification, include <code>ChallengeName: SRP_A</code> and <code>SRP_A: (The SRP_A Value)</code>.</p>
                 </li>
              </ul>
     */
    public let authParameters: [String:String]?
    /// <p>The app client ID.</p>
    public let clientId: String?
    /**
     <p>A map of custom key-value pairs that you can provide as input for certain custom
                 workflows that this action triggers.</p>
             <p>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
                 When you use the InitiateAuth API action, Amazon Cognito invokes the AWS Lambda
                 functions that are specified for various triggers. The ClientMetadata value is passed as
                 input to the functions for only the following triggers:</p>
             <ul>
                 <li>
                     <p>Pre signup</p>
                 </li>
                 <li>
                     <p>Pre authentication</p>
                 </li>
                 <li>
                     <p>User migration</p>
                 </li>
              </ul>

             <p>When Amazon Cognito invokes the functions for these triggers, it passes a JSON
                 payload, which the function receives as input. This payload contains a
                     <code>validationData</code> attribute, which provides the data that you assigned to
                 the ClientMetadata parameter in your InitiateAuth request. In your function code in AWS
                 Lambda, you can process the <code>validationData</code> value to enhance your workflow
                 for your specific needs.</p>

             <p>When you use the InitiateAuth API action, Amazon Cognito also invokes the functions
                 for the following triggers, but it does not provide the ClientMetadata value as
                 input:</p>

             <ul>
                 <li>
                     <p>Post authentication</p>
                 </li>
                 <li>
                     <p>Custom message</p>
                 </li>
                 <li>
                     <p>Pre token generation</p>
                 </li>
                 <li>
                     <p>Create auth challenge</p>
                 </li>
                 <li>
                     <p>Define auth challenge</p>
                 </li>
                 <li>
                     <p>Verify auth challenge</p>
                 </li>
              </ul>

             <p>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing User Pool Workflows with Lambda Triggers</a> in the
                     <i>Amazon Cognito Developer Guide</i>.</p>
             <note>
                 <p>Take the following limitations into consideration when you use the ClientMetadata
                     parameter:</p>
                 <ul>
                    <li>
                         <p>Amazon Cognito does not store the ClientMetadata value. This data is
                             available only to AWS Lambda triggers that are assigned to a user pool to
                             support custom workflows. If your user pool configuration does not include
                             triggers, the ClientMetadata parameter serves no purpose.</p>
                     </li>
                    <li>
                         <p>Amazon Cognito does not validate the ClientMetadata value.</p>
                     </li>
                    <li>
                         <p>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use
                             it to provide sensitive information.</p>
                     </li>
                 </ul>
             </note>
     */
    public let clientMetadata: [String:String]?
    /**
     <p>Contextual data such as the user's device fingerprint, IP address, or location used
                 for evaluating the risk of an unexpected event by Amazon Cognito advanced
                 security.</p>
     */
    public let userContextData: UserContextDataType?

    public init (
        analyticsMetadata: AnalyticsMetadataType? = nil,
        authFlow: AuthFlowType? = nil,
        authParameters: [String:String]? = nil,
        clientId: String? = nil,
        clientMetadata: [String:String]? = nil,
        userContextData: UserContextDataType? = nil
    )
    {
        self.analyticsMetadata = analyticsMetadata
        self.authFlow = authFlow
        self.authParameters = authParameters
        self.clientId = clientId
        self.clientMetadata = clientMetadata
        self.userContextData = userContextData
    }
}
