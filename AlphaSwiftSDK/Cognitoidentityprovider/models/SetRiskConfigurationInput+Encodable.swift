// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension SetRiskConfigurationInput: Encodable, Reflection {
    enum CodingKeys: String, CodingKey {
        case accountTakeoverRiskConfiguration = "AccountTakeoverRiskConfiguration"
        case clientId = "ClientId"
        case compromisedCredentialsRiskConfiguration = "CompromisedCredentialsRiskConfiguration"
        case riskExceptionConfiguration = "RiskExceptionConfiguration"
        case userPoolId = "UserPoolId"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let accountTakeoverRiskConfiguration = accountTakeoverRiskConfiguration {
            try encodeContainer.encode(accountTakeoverRiskConfiguration, forKey: .accountTakeoverRiskConfiguration)
        }
        if let clientId = clientId {
            try encodeContainer.encode(clientId, forKey: .clientId)
        }
        if let compromisedCredentialsRiskConfiguration = compromisedCredentialsRiskConfiguration {
            try encodeContainer.encode(compromisedCredentialsRiskConfiguration, forKey: .compromisedCredentialsRiskConfiguration)
        }
        if let riskExceptionConfiguration = riskExceptionConfiguration {
            try encodeContainer.encode(riskExceptionConfiguration, forKey: .riskExceptionConfiguration)
        }
        if let userPoolId = userPoolId {
            try encodeContainer.encode(userPoolId, forKey: .userPoolId)
        }
    }
}
