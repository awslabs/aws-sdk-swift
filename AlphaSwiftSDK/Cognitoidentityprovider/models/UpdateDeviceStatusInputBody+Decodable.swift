// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct UpdateDeviceStatusInputBody: Equatable {
    public let accessToken: String?
    public let deviceKey: String?
    public let deviceRememberedStatus: DeviceRememberedStatusType?
}

extension UpdateDeviceStatusInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case deviceKey = "DeviceKey"
        case deviceRememberedStatus = "DeviceRememberedStatus"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let deviceKeyDecoded = try containerValues.decodeIfPresent(String.self, forKey: .deviceKey)
        deviceKey = deviceKeyDecoded
        let deviceRememberedStatusDecoded = try containerValues.decodeIfPresent(DeviceRememberedStatusType.self, forKey: .deviceRememberedStatus)
        deviceRememberedStatus = deviceRememberedStatusDecoded
    }
}
