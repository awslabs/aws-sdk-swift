// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>Contains information about the schema attribute.</p>
public struct SchemaAttributeType: Equatable {
    /**
     <p>Specifies whether a user pool attribute is required. If the attribute is required and
                 the user does not provide a value, registration or sign-in will fail.</p>
     */
    public let `required`: Bool
    /// <p>The attribute data type.</p>
    public let attributeDataType: AttributeDataType?
    /**
     <note>
                 <p>We recommend that you use <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes">WriteAttributes</a> in the user pool client to control how attributes can
                     be mutated for new use cases instead of using
                     <code>DeveloperOnlyAttribute</code>.</p>
             </note>
             <p>Specifies whether the attribute type is developer only. This attribute can only be
                 modified by an administrator. Users will not be able to modify this attribute using
                 their access token. For example, <code>DeveloperOnlyAttribute</code> can be modified
                 using AdminUpdateUserAttributes but cannot be updated
                 using UpdateUserAttributes.</p>
     */
    public let developerOnlyAttribute: Bool
    /**
     <p>Specifies whether the value of the attribute can be changed.</p>
             <p>For any user pool attribute that's mapped to an identity provider attribute, you must
                 set this parameter to <code>true</code>. Amazon Cognito updates mapped attributes when
                 users sign in to your application through an identity provider. If an attribute is
                 immutable, Amazon Cognito throws an error when it attempts to update the attribute. For
                 more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html">Specifying Identity Provider Attribute Mappings for Your User
                     Pool</a>.</p>
     */
    public let mutable: Bool
    /// <p>A schema attribute of the name type.</p>
    public let name: String?
    /// <p>Specifies the constraints for an attribute of the number type.</p>
    public let numberAttributeConstraints: NumberAttributeConstraintsType?
    /// <p>Specifies the constraints for an attribute of the string type.</p>
    public let stringAttributeConstraints: StringAttributeConstraintsType?

    public init (
        `required`: Bool = false,
        attributeDataType: AttributeDataType? = nil,
        developerOnlyAttribute: Bool = false,
        mutable: Bool = false,
        name: String? = nil,
        numberAttributeConstraints: NumberAttributeConstraintsType? = nil,
        stringAttributeConstraints: StringAttributeConstraintsType? = nil
    )
    {
        self.`required` = `required`
        self.attributeDataType = attributeDataType
        self.developerOnlyAttribute = developerOnlyAttribute
        self.mutable = mutable
        self.name = name
        self.numberAttributeConstraints = numberAttributeConstraints
        self.stringAttributeConstraints = stringAttributeConstraints
    }
}
