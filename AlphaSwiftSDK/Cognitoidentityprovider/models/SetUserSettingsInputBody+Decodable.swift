// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct SetUserSettingsInputBody: Equatable {
    public let accessToken: String?
    public let mFAOptions: [MFAOptionType]?
}

extension SetUserSettingsInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case accessToken = "AccessToken"
        case mFAOptions = "MFAOptions"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let accessTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .accessToken)
        accessToken = accessTokenDecoded
        let mFAOptionsContainer = try containerValues.decodeIfPresent([MFAOptionType].self, forKey: .mFAOptions)
        var mFAOptionsDecoded0:[MFAOptionType]? = nil
        if let mFAOptionsContainer = mFAOptionsContainer {
            mFAOptionsDecoded0 = [MFAOptionType]()
            for structure0 in mFAOptionsContainer {
                mFAOptionsDecoded0?.append(structure0)
            }
        }
        mFAOptions = mFAOptionsDecoded0
    }
}
