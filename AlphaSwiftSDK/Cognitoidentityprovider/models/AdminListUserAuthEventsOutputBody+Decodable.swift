// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AdminListUserAuthEventsOutputBody: Equatable {
    public let authEvents: [AuthEventType]?
    public let nextToken: String?
}

extension AdminListUserAuthEventsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case authEvents = "AuthEvents"
        case nextToken = "NextToken"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let authEventsContainer = try containerValues.decodeIfPresent([AuthEventType].self, forKey: .authEvents)
        var authEventsDecoded0:[AuthEventType]? = nil
        if let authEventsContainer = authEventsContainer {
            authEventsDecoded0 = [AuthEventType]()
            for structure0 in authEventsContainer {
                authEventsDecoded0?.append(structure0)
            }
        }
        authEvents = authEventsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
