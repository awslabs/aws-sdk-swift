// Code generated by smithy-swift-codegen. DO NOT EDIT!



/// <p>The request representing the confirmation for a password reset.</p>
public struct ConfirmForgotPasswordInput: Equatable {
    /**
     <p>The Amazon Pinpoint analytics metadata for collecting metrics for
                     <code>ConfirmForgotPassword</code> calls.</p>
     */
    public let analyticsMetadata: AnalyticsMetadataType?
    /// <p>The app client ID of the app associated with the user pool.</p>
    public let clientId: String?
    /**
     <p>A map of custom key-value pairs that you can provide as input for any custom workflows
                 that this action triggers. </p>
             <p>You create custom workflows by assigning AWS Lambda functions to user pool triggers.
                 When you use the ConfirmForgotPassword API action, Amazon Cognito invokes the function
                 that is assigned to the <i>post confirmation</i> trigger. When Amazon
                 Cognito invokes this function, it passes a JSON payload, which the function receives as
                 input. This payload contains a <code>clientMetadata</code> attribute, which provides the
                 data that you assigned to the ClientMetadata parameter in your ConfirmForgotPassword
                 request. In your function code in AWS Lambda, you can process the
                     <code>clientMetadata</code> value to enhance your workflow for your specific
                 needs.</p>
             <p>For more information, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html">Customizing User Pool Workflows with Lambda Triggers</a> in the
                     <i>Amazon Cognito Developer Guide</i>.</p>
             <note>
                 <p>Take the following limitations into consideration when you use the ClientMetadata
                     parameter:</p>
                 <ul>
                    <li>
                         <p>Amazon Cognito does not store the ClientMetadata value. This data is
                             available only to AWS Lambda triggers that are assigned to a user pool to
                             support custom workflows. If your user pool configuration does not include
                             triggers, the ClientMetadata parameter serves no purpose.</p>
                     </li>
                    <li>
                         <p>Amazon Cognito does not validate the ClientMetadata value.</p>
                     </li>
                    <li>
                         <p>Amazon Cognito does not encrypt the the ClientMetadata value, so don't use
                             it to provide sensitive information.</p>
                     </li>
                 </ul>
             </note>
     */
    public let clientMetadata: [String:String]?
    /**
     <p>The confirmation code sent by a user's request to retrieve a forgotten password. For
                 more information, see <a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ForgotPassword.html">ForgotPassword</a>.</p>
     */
    public let confirmationCode: String?
    /// <p>The password sent by a user's request to retrieve a forgotten password.</p>
    public let password: String?
    /**
     <p>A keyed-hash message authentication code (HMAC) calculated using the secret key of a
                 user pool client and username plus the client ID in the message.</p>
     */
    public let secretHash: String?
    /**
     <p>Contextual data such as the user's device fingerprint, IP address, or location used
                 for evaluating the risk of an unexpected event by Amazon Cognito advanced
                 security.</p>
     */
    public let userContextData: UserContextDataType?
    /**
     <p>The user name of the user for whom you want to enter a code to retrieve a forgotten
                 password.</p>
     */
    public let username: String?

    public init (
        analyticsMetadata: AnalyticsMetadataType? = nil,
        clientId: String? = nil,
        clientMetadata: [String:String]? = nil,
        confirmationCode: String? = nil,
        password: String? = nil,
        secretHash: String? = nil,
        userContextData: UserContextDataType? = nil,
        username: String? = nil
    )
    {
        self.analyticsMetadata = analyticsMetadata
        self.clientId = clientId
        self.clientMetadata = clientMetadata
        self.confirmationCode = confirmationCode
        self.password = password
        self.secretHash = secretHash
        self.userContextData = userContextData
        self.username = username
    }
}
