// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension AccountTakeoverActionsType: Codable, Reflection {
    enum CodingKeys: String, CodingKey {
        case highAction = "HighAction"
        case lowAction = "LowAction"
        case mediumAction = "MediumAction"
    }

    public func encode(to encoder: Encoder) throws {
        var encodeContainer = encoder.container(keyedBy: CodingKeys.self)
        if let highAction = highAction {
            try encodeContainer.encode(highAction, forKey: .highAction)
        }
        if let lowAction = lowAction {
            try encodeContainer.encode(lowAction, forKey: .lowAction)
        }
        if let mediumAction = mediumAction {
            try encodeContainer.encode(mediumAction, forKey: .mediumAction)
        }
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let lowActionDecoded = try containerValues.decodeIfPresent(AccountTakeoverActionType.self, forKey: .lowAction)
        lowAction = lowActionDecoded
        let mediumActionDecoded = try containerValues.decodeIfPresent(AccountTakeoverActionType.self, forKey: .mediumAction)
        mediumAction = mediumActionDecoded
        let highActionDecoded = try containerValues.decodeIfPresent(AccountTakeoverActionType.self, forKey: .highAction)
        highAction = highActionDecoded
    }
}
