// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct AddCustomAttributesInputBody: Equatable {
    public let userPoolId: String?
    public let customAttributes: [SchemaAttributeType]?
}

extension AddCustomAttributesInputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case customAttributes = "CustomAttributes"
        case userPoolId = "UserPoolId"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolIdDecoded = try containerValues.decodeIfPresent(String.self, forKey: .userPoolId)
        userPoolId = userPoolIdDecoded
        let customAttributesContainer = try containerValues.decodeIfPresent([SchemaAttributeType].self, forKey: .customAttributes)
        var customAttributesDecoded0:[SchemaAttributeType]? = nil
        if let customAttributesContainer = customAttributesContainer {
            customAttributesDecoded0 = [SchemaAttributeType]()
            for structure0 in customAttributesContainer {
                customAttributesDecoded0?.append(structure0)
            }
        }
        customAttributes = customAttributesDecoded0
    }
}
