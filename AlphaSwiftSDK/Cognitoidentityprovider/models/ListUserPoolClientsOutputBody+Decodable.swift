// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

struct ListUserPoolClientsOutputBody: Equatable {
    public let userPoolClients: [UserPoolClientDescription]?
    public let nextToken: String?
}

extension ListUserPoolClientsOutputBody: Decodable {
    enum CodingKeys: String, CodingKey {
        case nextToken = "NextToken"
        case userPoolClients = "UserPoolClients"
    }

    public init (from decoder: Decoder) throws {
        let containerValues = try decoder.container(keyedBy: CodingKeys.self)
        let userPoolClientsContainer = try containerValues.decodeIfPresent([UserPoolClientDescription].self, forKey: .userPoolClients)
        var userPoolClientsDecoded0:[UserPoolClientDescription]? = nil
        if let userPoolClientsContainer = userPoolClientsContainer {
            userPoolClientsDecoded0 = [UserPoolClientDescription]()
            for structure0 in userPoolClientsContainer {
                userPoolClientsDecoded0?.append(structure0)
            }
        }
        userPoolClients = userPoolClientsDecoded0
        let nextTokenDecoded = try containerValues.decodeIfPresent(String.self, forKey: .nextToken)
        nextToken = nextTokenDecoded
    }
}
