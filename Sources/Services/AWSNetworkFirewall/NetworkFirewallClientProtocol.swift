// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// This is the API Reference for Network Firewall. This guide is for developers who need detailed information about the Network Firewall API actions, data types, and errors.
///
/// * The REST API requires you to handle connection details, such as calculating signatures, handling request retries, and error handling. For general information about using the Amazon Web Services REST APIs, see [Amazon Web Services APIs](https://docs.aws.amazon.com/general/latest/gr/aws-apis.html). To access Network Firewall using the REST API endpoint: https://network-firewall..amazonaws.com
///
/// * Alternatively, you can use one of the Amazon Web Services SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see [Amazon Web Services SDKs](http://aws.amazon.com/tools/#SDKs).
///
/// * For descriptions of Network Firewall features, including and step-by-step instructions on how to use them through the Network Firewall console, see the [Network Firewall Developer Guide](https://docs.aws.amazon.com/network-firewall/latest/developerguide/).
///
///
/// Network Firewall is a stateful, managed, network firewall and intrusion detection and prevention service for Amazon Virtual Private Cloud (Amazon VPC). With Network Firewall, you can filter traffic at the perimeter of your VPC. This includes filtering traffic going to and coming from an internet gateway, NAT gateway, or over VPN or Direct Connect. Network Firewall uses rules that are compatible with Suricata, a free, open source network analysis and threat detection engine. Network Firewall supports Suricata version 6.0.9. For information about Suricata, see the [Suricata website](https://suricata.io/). You can use Network Firewall to monitor and protect your VPC traffic in a number of ways. The following are just a few examples:
///
/// * Allow domains or IP addresses for known Amazon Web Services service endpoints, such as Amazon S3, and block all other forms of traffic.
///
/// * Use custom lists of known bad domains to limit the types of domain names that your applications can access.
///
/// * Perform deep packet inspection on traffic entering or leaving your VPC.
///
/// * Use stateful protocol detection to filter protocols like HTTPS, regardless of the port used.
///
///
/// To enable Network Firewall for your VPCs, you perform steps in both Amazon VPC and in Network Firewall. For information about using Amazon VPC, see [Amazon VPC User Guide](https://docs.aws.amazon.com/vpc/latest/userguide/). To start using Network Firewall, do the following:
///
/// * (Optional) If you don't already have a VPC that you want to protect, create it in Amazon VPC.
///
/// * In Amazon VPC, in each Availability Zone where you want to have a firewall endpoint, create a subnet for the sole use of Network Firewall.
///
/// * In Network Firewall, create stateless and stateful rule groups, to define the components of the network traffic filtering behavior that you want your firewall to have.
///
/// * In Network Firewall, create a firewall policy that uses your rule groups and specifies additional default traffic filtering behavior.
///
/// * In Network Firewall, create a firewall and specify your new firewall policy and VPC subnets. Network Firewall creates a firewall endpoint in each subnet that you specify, with the behavior that's defined in the firewall policy.
///
/// * In Amazon VPC, use ingress routing enhancements to route traffic through the new firewall endpoints.
public protocol NetworkFirewallClientProtocol {
    /// Performs the `AssociateFirewallPolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Associates a [FirewallPolicy] to a [Firewall]. A firewall policy defines how to monitor and manage your VPC network traffic, using a collection of inspection rule groups and other settings. Each firewall requires one firewall policy association, and you can use the same firewall policy for multiple firewalls.
    ///
    /// - Parameter AssociateFirewallPolicyInput : [no documentation found]
    ///
    /// - Returns: `AssociateFirewallPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func associateFirewallPolicy(input: AssociateFirewallPolicyInput) async throws -> AssociateFirewallPolicyOutput
    /// Performs the `AssociateSubnets` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Associates the specified subnets in the Amazon VPC to the firewall. You can specify one subnet for each of the Availability Zones that the VPC spans. This request creates an Network Firewall firewall endpoint in each of the subnets. To enable the firewall's protections, you must also modify the VPC's route tables for each subnet's Availability Zone, to redirect the traffic that's coming into and going out of the zone through the firewall endpoint.
    ///
    /// - Parameter AssociateSubnetsInput : [no documentation found]
    ///
    /// - Returns: `AssociateSubnetsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InsufficientCapacityException` : Amazon Web Services doesn't currently have enough available capacity to fulfill your request. Try your request later.
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func associateSubnets(input: AssociateSubnetsInput) async throws -> AssociateSubnetsOutput
    /// Performs the `CreateFirewall` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Creates an Network Firewall [Firewall] and accompanying [FirewallStatus] for a VPC. The firewall defines the configuration settings for an Network Firewall firewall. The settings that you can define at creation include the firewall policy, the subnets in your VPC to use for the firewall endpoints, and any tags that are attached to the firewall Amazon Web Services resource. After you create a firewall, you can provide additional settings, like the logging configuration. To update the settings for a firewall, you use the operations that apply to the settings themselves, for example [UpdateLoggingConfiguration], [AssociateSubnets], and [UpdateFirewallDeleteProtection]. To manage a firewall's tags, use the standard Amazon Web Services resource tagging operations, [ListTagsForResource], [TagResource], and [UntagResource]. To retrieve information about firewalls, use [ListFirewalls] and [DescribeFirewall].
    ///
    /// - Parameter CreateFirewallInput : [no documentation found]
    ///
    /// - Returns: `CreateFirewallOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InsufficientCapacityException` : Amazon Web Services doesn't currently have enough available capacity to fulfill your request. Try your request later.
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `LimitExceededException` : Unable to perform the operation because doing so would violate a limit setting.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func createFirewall(input: CreateFirewallInput) async throws -> CreateFirewallOutput
    /// Performs the `CreateFirewallPolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Creates the firewall policy for the firewall according to the specifications. An Network Firewall firewall policy defines the behavior of a firewall, in a collection of stateless and stateful rule groups and other settings. You can use one firewall policy for multiple firewalls.
    ///
    /// - Parameter CreateFirewallPolicyInput : [no documentation found]
    ///
    /// - Returns: `CreateFirewallPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InsufficientCapacityException` : Amazon Web Services doesn't currently have enough available capacity to fulfill your request. Try your request later.
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `LimitExceededException` : Unable to perform the operation because doing so would violate a limit setting.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func createFirewallPolicy(input: CreateFirewallPolicyInput) async throws -> CreateFirewallPolicyOutput
    /// Performs the `CreateRuleGroup` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Creates the specified stateless or stateful rule group, which includes the rules for network traffic inspection, a capacity setting, and tags. You provide your rule group specification in your request using either RuleGroup or Rules.
    ///
    /// - Parameter CreateRuleGroupInput : [no documentation found]
    ///
    /// - Returns: `CreateRuleGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InsufficientCapacityException` : Amazon Web Services doesn't currently have enough available capacity to fulfill your request. Try your request later.
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `LimitExceededException` : Unable to perform the operation because doing so would violate a limit setting.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func createRuleGroup(input: CreateRuleGroupInput) async throws -> CreateRuleGroupOutput
    /// Performs the `CreateTLSInspectionConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Creates an Network Firewall TLS inspection configuration. A TLS inspection configuration contains Certificate Manager certificate associations between and the scope configurations that Network Firewall uses to decrypt and re-encrypt traffic traveling through your firewall. After you create a TLS inspection configuration, you can associate it with a new firewall policy. To update the settings for a TLS inspection configuration, use [UpdateTLSInspectionConfiguration]. To manage a TLS inspection configuration's tags, use the standard Amazon Web Services resource tagging operations, [ListTagsForResource], [TagResource], and [UntagResource]. To retrieve information about TLS inspection configurations, use [ListTLSInspectionConfigurations] and [DescribeTLSInspectionConfiguration]. For more information about TLS inspection configurations, see [Inspecting SSL/TLS traffic with TLS inspection configurations](https://docs.aws.amazon.com/network-firewall/latest/developerguide/tls-inspection.html) in the Network Firewall Developer Guide.
    ///
    /// - Parameter CreateTLSInspectionConfigurationInput : [no documentation found]
    ///
    /// - Returns: `CreateTLSInspectionConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InsufficientCapacityException` : Amazon Web Services doesn't currently have enough available capacity to fulfill your request. Try your request later.
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `LimitExceededException` : Unable to perform the operation because doing so would violate a limit setting.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func createTLSInspectionConfiguration(input: CreateTLSInspectionConfigurationInput) async throws -> CreateTLSInspectionConfigurationOutput
    /// Performs the `DeleteFirewall` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Deletes the specified [Firewall] and its [FirewallStatus]. This operation requires the firewall's DeleteProtection flag to be FALSE. You can't revert this operation. You can check whether a firewall is in use by reviewing the route tables for the Availability Zones where you have firewall subnet mappings. Retrieve the subnet mappings by calling [DescribeFirewall]. You define and update the route tables through Amazon VPC. As needed, update the route tables for the zones to remove the firewall endpoints. When the route tables no longer use the firewall endpoints, you can remove the firewall safely. To delete a firewall, remove the delete protection if you need to using [UpdateFirewallDeleteProtection], then delete the firewall by calling [DeleteFirewall].
    ///
    /// - Parameter DeleteFirewallInput : [no documentation found]
    ///
    /// - Returns: `DeleteFirewallOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    /// - `UnsupportedOperationException` : The operation you requested isn't supported by Network Firewall.
    func deleteFirewall(input: DeleteFirewallInput) async throws -> DeleteFirewallOutput
    /// Performs the `DeleteFirewallPolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Deletes the specified [FirewallPolicy].
    ///
    /// - Parameter DeleteFirewallPolicyInput : [no documentation found]
    ///
    /// - Returns: `DeleteFirewallPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    /// - `UnsupportedOperationException` : The operation you requested isn't supported by Network Firewall.
    func deleteFirewallPolicy(input: DeleteFirewallPolicyInput) async throws -> DeleteFirewallPolicyOutput
    /// Performs the `DeleteResourcePolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Deletes a resource policy that you created in a [PutResourcePolicy] request.
    ///
    /// - Parameter DeleteResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `DeleteResourcePolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidResourcePolicyException` : The policy statement failed validation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func deleteResourcePolicy(input: DeleteResourcePolicyInput) async throws -> DeleteResourcePolicyOutput
    /// Performs the `DeleteRuleGroup` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Deletes the specified [RuleGroup].
    ///
    /// - Parameter DeleteRuleGroupInput : [no documentation found]
    ///
    /// - Returns: `DeleteRuleGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    /// - `UnsupportedOperationException` : The operation you requested isn't supported by Network Firewall.
    func deleteRuleGroup(input: DeleteRuleGroupInput) async throws -> DeleteRuleGroupOutput
    /// Performs the `DeleteTLSInspectionConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Deletes the specified [TLSInspectionConfiguration].
    ///
    /// - Parameter DeleteTLSInspectionConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DeleteTLSInspectionConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func deleteTLSInspectionConfiguration(input: DeleteTLSInspectionConfigurationInput) async throws -> DeleteTLSInspectionConfigurationOutput
    /// Performs the `DescribeFirewall` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Returns the data objects for the specified firewall.
    ///
    /// - Parameter DescribeFirewallInput : [no documentation found]
    ///
    /// - Returns: `DescribeFirewallOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeFirewall(input: DescribeFirewallInput) async throws -> DescribeFirewallOutput
    /// Performs the `DescribeFirewallPolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Returns the data objects for the specified firewall policy.
    ///
    /// - Parameter DescribeFirewallPolicyInput : [no documentation found]
    ///
    /// - Returns: `DescribeFirewallPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeFirewallPolicy(input: DescribeFirewallPolicyInput) async throws -> DescribeFirewallPolicyOutput
    /// Performs the `DescribeLoggingConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Returns the logging configuration for the specified firewall.
    ///
    /// - Parameter DescribeLoggingConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DescribeLoggingConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeLoggingConfiguration(input: DescribeLoggingConfigurationInput) async throws -> DescribeLoggingConfigurationOutput
    /// Performs the `DescribeResourcePolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves a resource policy that you created in a [PutResourcePolicy] request.
    ///
    /// - Parameter DescribeResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `DescribeResourcePolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeResourcePolicy(input: DescribeResourcePolicyInput) async throws -> DescribeResourcePolicyOutput
    /// Performs the `DescribeRuleGroup` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Returns the data objects for the specified rule group.
    ///
    /// - Parameter DescribeRuleGroupInput : [no documentation found]
    ///
    /// - Returns: `DescribeRuleGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeRuleGroup(input: DescribeRuleGroupInput) async throws -> DescribeRuleGroupOutput
    /// Performs the `DescribeRuleGroupMetadata` operation on the `NetworkFirewall_20201112` service.
    ///
    /// High-level information about a rule group, returned by operations like create and describe. You can use the information provided in the metadata to retrieve and manage a rule group. You can retrieve all objects for a rule group by calling [DescribeRuleGroup].
    ///
    /// - Parameter DescribeRuleGroupMetadataInput : [no documentation found]
    ///
    /// - Returns: `DescribeRuleGroupMetadataOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeRuleGroupMetadata(input: DescribeRuleGroupMetadataInput) async throws -> DescribeRuleGroupMetadataOutput
    /// Performs the `DescribeTLSInspectionConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Returns the data objects for the specified TLS inspection configuration.
    ///
    /// - Parameter DescribeTLSInspectionConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DescribeTLSInspectionConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func describeTLSInspectionConfiguration(input: DescribeTLSInspectionConfigurationInput) async throws -> DescribeTLSInspectionConfigurationOutput
    /// Performs the `DisassociateSubnets` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Removes the specified subnet associations from the firewall. This removes the firewall endpoints from the subnets and removes any network filtering protections that the endpoints were providing.
    ///
    /// - Parameter DisassociateSubnetsInput : [no documentation found]
    ///
    /// - Returns: `DisassociateSubnetsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidOperationException` : The operation failed because it's not valid. For example, you might have tried to delete a rule group or firewall policy that's in use.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func disassociateSubnets(input: DisassociateSubnetsInput) async throws -> DisassociateSubnetsOutput
    /// Performs the `ListFirewallPolicies` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves the metadata for the firewall policies that you have defined. Depending on your setting for max results and the number of firewall policies, a single call might not return the full list.
    ///
    /// - Parameter ListFirewallPoliciesInput : [no documentation found]
    ///
    /// - Returns: `ListFirewallPoliciesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func listFirewallPolicies(input: ListFirewallPoliciesInput) async throws -> ListFirewallPoliciesOutput
    /// Performs the `ListFirewalls` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves the metadata for the firewalls that you have defined. If you provide VPC identifiers in your request, this returns only the firewalls for those VPCs. Depending on your setting for max results and the number of firewalls, a single call might not return the full list.
    ///
    /// - Parameter ListFirewallsInput : [no documentation found]
    ///
    /// - Returns: `ListFirewallsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func listFirewalls(input: ListFirewallsInput) async throws -> ListFirewallsOutput
    /// Performs the `ListRuleGroups` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves the metadata for the rule groups that you have defined. Depending on your setting for max results and the number of rule groups, a single call might not return the full list.
    ///
    /// - Parameter ListRuleGroupsInput : [no documentation found]
    ///
    /// - Returns: `ListRuleGroupsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func listRuleGroups(input: ListRuleGroupsInput) async throws -> ListRuleGroupsOutput
    /// Performs the `ListTagsForResource` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves the tags associated with the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each Amazon Web Services resource, up to 50 tags for a resource. You can tag the Amazon Web Services resources that you manage through Network Firewall: firewalls, firewall policies, and rule groups.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutput
    /// Performs the `ListTLSInspectionConfigurations` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Retrieves the metadata for the TLS inspection configurations that you have defined. Depending on your setting for max results and the number of TLS inspection configurations, a single call might not return the full list.
    ///
    /// - Parameter ListTLSInspectionConfigurationsInput : [no documentation found]
    ///
    /// - Returns: `ListTLSInspectionConfigurationsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func listTLSInspectionConfigurations(input: ListTLSInspectionConfigurationsInput) async throws -> ListTLSInspectionConfigurationsOutput
    /// Performs the `PutResourcePolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Creates or updates an IAM policy for your rule group or firewall policy. Use this to share rule groups and firewall policies between accounts. This operation works in conjunction with the Amazon Web Services Resource Access Manager (RAM) service to manage resource sharing for Network Firewall. Use this operation to create or update a resource policy for your rule group or firewall policy. In the policy, you specify the accounts that you want to share the resource with and the operations that you want the accounts to be able to perform. When you add an account in the resource policy, you then run the following Resource Access Manager (RAM) operations to access and accept the shared rule group or firewall policy.
    ///
    /// * [GetResourceShareInvitations](https://docs.aws.amazon.com/ram/latest/APIReference/API_GetResourceShareInvitations.html) - Returns the Amazon Resource Names (ARNs) of the resource share invitations.
    ///
    /// * [AcceptResourceShareInvitation](https://docs.aws.amazon.com/ram/latest/APIReference/API_AcceptResourceShareInvitation.html) - Accepts the share invitation for a specified resource share.
    ///
    ///
    /// For additional information about resource sharing using RAM, see [Resource Access Manager User Guide](https://docs.aws.amazon.com/ram/latest/userguide/what-is.html).
    ///
    /// - Parameter PutResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `PutResourcePolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidResourcePolicyException` : The policy statement failed validation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func putResourcePolicy(input: PutResourcePolicyInput) async throws -> PutResourcePolicyOutput
    /// Performs the `TagResource` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Adds the specified tags to the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each Amazon Web Services resource, up to 50 tags for a resource. You can tag the Amazon Web Services resources that you manage through Network Firewall: firewalls, firewall policies, and rule groups.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutput
    /// Performs the `UntagResource` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Removes the tags with the specified keys from the specified resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing. For example, you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each Amazon Web Services resource, up to 50 tags for a resource. You can manage tags for the Amazon Web Services resources that you manage through Network Firewall: firewalls, firewall policies, and rule groups.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutput
    /// Performs the `UpdateFirewallDeleteProtection` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Modifies the flag, DeleteProtection, which indicates whether it is possible to delete the firewall. If the flag is set to TRUE, the firewall is protected against deletion. This setting helps protect against accidentally deleting a firewall that's in use.
    ///
    /// - Parameter UpdateFirewallDeleteProtectionInput : [no documentation found]
    ///
    /// - Returns: `UpdateFirewallDeleteProtectionOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ResourceOwnerCheckException` : Unable to change the resource because your account doesn't own it.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateFirewallDeleteProtection(input: UpdateFirewallDeleteProtectionInput) async throws -> UpdateFirewallDeleteProtectionOutput
    /// Performs the `UpdateFirewallDescription` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Modifies the description for the specified firewall. Use the description to help you identify the firewall when you're working with it.
    ///
    /// - Parameter UpdateFirewallDescriptionInput : [no documentation found]
    ///
    /// - Returns: `UpdateFirewallDescriptionOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateFirewallDescription(input: UpdateFirewallDescriptionInput) async throws -> UpdateFirewallDescriptionOutput
    /// Performs the `UpdateFirewallEncryptionConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// A complex type that contains settings for encryption of your firewall resources.
    ///
    /// - Parameter UpdateFirewallEncryptionConfigurationInput : [no documentation found]
    ///
    /// - Returns: `UpdateFirewallEncryptionConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ResourceOwnerCheckException` : Unable to change the resource because your account doesn't own it.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateFirewallEncryptionConfiguration(input: UpdateFirewallEncryptionConfigurationInput) async throws -> UpdateFirewallEncryptionConfigurationOutput
    /// Performs the `UpdateFirewallPolicy` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Updates the properties of the specified firewall policy.
    ///
    /// - Parameter UpdateFirewallPolicyInput : [no documentation found]
    ///
    /// - Returns: `UpdateFirewallPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateFirewallPolicy(input: UpdateFirewallPolicyInput) async throws -> UpdateFirewallPolicyOutput
    /// Performs the `UpdateFirewallPolicyChangeProtection` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Modifies the flag, ChangeProtection, which indicates whether it is possible to change the firewall. If the flag is set to TRUE, the firewall is protected from changes. This setting helps protect against accidentally changing a firewall that's in use.
    ///
    /// - Parameter UpdateFirewallPolicyChangeProtectionInput : [no documentation found]
    ///
    /// - Returns: `UpdateFirewallPolicyChangeProtectionOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ResourceOwnerCheckException` : Unable to change the resource because your account doesn't own it.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateFirewallPolicyChangeProtection(input: UpdateFirewallPolicyChangeProtectionInput) async throws -> UpdateFirewallPolicyChangeProtectionOutput
    /// Performs the `UpdateLoggingConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Sets the logging configuration for the specified firewall. To change the logging configuration, retrieve the [LoggingConfiguration] by calling [DescribeLoggingConfiguration], then change it and provide the modified object to this update call. You must change the logging configuration one [LogDestinationConfig] at a time inside the retrieved [LoggingConfiguration] object. You can perform only one of the following actions in any call to UpdateLoggingConfiguration:
    ///
    /// * Create a new log destination object by adding a single LogDestinationConfig array element to LogDestinationConfigs.
    ///
    /// * Delete a log destination object by removing a single LogDestinationConfig array element from LogDestinationConfigs.
    ///
    /// * Change the LogDestination setting in a single LogDestinationConfig array element.
    ///
    ///
    /// You can't change the LogDestinationType or LogType in a LogDestinationConfig. To change these settings, delete the existing LogDestinationConfig object and create a new one, using two separate calls to this update operation.
    ///
    /// - Parameter UpdateLoggingConfigurationInput : [no documentation found]
    ///
    /// - Returns: `UpdateLoggingConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `LogDestinationPermissionException` : Unable to send logs to a configured logging destination.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateLoggingConfiguration(input: UpdateLoggingConfigurationInput) async throws -> UpdateLoggingConfigurationOutput
    /// Performs the `UpdateRuleGroup` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Updates the rule settings for the specified rule group. You use a rule group by reference in one or more firewall policies. When you modify a rule group, you modify all firewall policies that use the rule group. To update a rule group, first call [DescribeRuleGroup] to retrieve the current [RuleGroup] object, update the object as needed, and then provide the updated object to this call.
    ///
    /// - Parameter UpdateRuleGroupInput : [no documentation found]
    ///
    /// - Returns: `UpdateRuleGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateRuleGroup(input: UpdateRuleGroupInput) async throws -> UpdateRuleGroupOutput
    /// Performs the `UpdateSubnetChangeProtection` operation on the `NetworkFirewall_20201112` service.
    ///
    ///
    ///
    /// - Parameter UpdateSubnetChangeProtectionInput : [no documentation found]
    ///
    /// - Returns: `UpdateSubnetChangeProtectionOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ResourceOwnerCheckException` : Unable to change the resource because your account doesn't own it.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateSubnetChangeProtection(input: UpdateSubnetChangeProtectionInput) async throws -> UpdateSubnetChangeProtectionOutput
    /// Performs the `UpdateTLSInspectionConfiguration` operation on the `NetworkFirewall_20201112` service.
    ///
    /// Updates the TLS inspection configuration settings for the specified TLS inspection configuration. You use a TLS inspection configuration by referencing it in one or more firewall policies. When you modify a TLS inspection configuration, you modify all firewall policies that use the TLS inspection configuration. To update a TLS inspection configuration, first call [DescribeTLSInspectionConfiguration] to retrieve the current [TLSInspectionConfiguration] object, update the object as needed, and then provide the updated object to this call.
    ///
    /// - Parameter UpdateTLSInspectionConfigurationInput : [no documentation found]
    ///
    /// - Returns: `UpdateTLSInspectionConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Your request is valid, but Network Firewall couldn't perform the operation because of a system problem. Retry your request.
    /// - `InvalidRequestException` : The operation failed because of a problem with your request. Examples include:
    ///
    /// * You specified an unsupported parameter name or value.
    ///
    /// * You tried to update a property with a value that isn't among the available types.
    ///
    /// * Your request references an ARN that is malformed, or corresponds to a resource that isn't valid in the context of the request.
    /// - `InvalidTokenException` : The token you provided is stale or isn't valid for the operation.
    /// - `ResourceNotFoundException` : Unable to locate a resource using the parameters that you provided.
    /// - `ThrottlingException` : Unable to process the request due to throttling limitations.
    func updateTLSInspectionConfiguration(input: UpdateTLSInspectionConfigurationInput) async throws -> UpdateTLSInspectionConfigurationOutput
}

public enum NetworkFirewallClientTypes {}
