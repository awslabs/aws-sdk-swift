// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// CodePipeline Overview This is the CodePipeline API Reference. This guide provides descriptions of the actions and data types for CodePipeline. Some functionality for your pipeline can only be configured through the API. For more information, see the [CodePipeline User Guide](https://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html). You can use the CodePipeline API to work with pipelines, stages, actions, and transitions. Pipelines are models of automated release processes. Each pipeline is uniquely named, and consists of stages, actions, and transitions. You can work with pipelines by calling:
///
/// * [CreatePipeline], which creates a uniquely named pipeline.
///
/// * [DeletePipeline], which deletes the specified pipeline.
///
/// * [GetPipeline], which returns information about the pipeline structure and pipeline metadata, including the pipeline Amazon Resource Name (ARN).
///
/// * [GetPipelineExecution], which returns information about a specific execution of a pipeline.
///
/// * [GetPipelineState], which returns information about the current state of the stages and actions of a pipeline.
///
/// * [ListActionExecutions], which returns action-level details for past executions. The details include full stage and action-level details, including individual action duration, status, any errors that occurred during the execution, and input and output artifact location details.
///
/// * [ListPipelines], which gets a summary of all of the pipelines associated with your account.
///
/// * [ListPipelineExecutions], which gets a summary of the most recent executions for a pipeline.
///
/// * [StartPipelineExecution], which runs the most recent revision of an artifact through the pipeline.
///
/// * [StopPipelineExecution], which stops the specified pipeline execution from continuing through the pipeline.
///
/// * [UpdatePipeline], which updates a pipeline with edits or changes to the structure of the pipeline.
///
///
/// Pipelines include stages. Each stage contains one or more actions that must complete before the next stage begins. A stage results in success or failure. If a stage fails, the pipeline stops at that stage and remains stopped until either a new version of an artifact appears in the source location, or a user takes action to rerun the most recent artifact through the pipeline. You can call [GetPipelineState], which displays the status of a pipeline, including the status of stages in the pipeline, or [GetPipeline], which returns the entire structure of the pipeline, including the stages of that pipeline. For more information about the structure of stages and actions, see [CodePipeline Pipeline Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html). Pipeline stages include actions that are categorized into categories such as source or build actions performed in a stage of a pipeline. For example, you can use a source action to import artifacts into a pipeline from a source such as Amazon S3. Like stages, you do not work with actions directly in most cases, but you do define and interact with actions when working with pipeline operations such as [CreatePipeline] and [GetPipelineState]. Valid action categories are:
///
/// * Source
///
/// * Build
///
/// * Test
///
/// * Deploy
///
/// * Approval
///
/// * Invoke
///
///
/// Pipelines also include transitions, which allow the transition of artifacts from one stage to the next in a pipeline after the actions in one stage complete. You can work with transitions by calling:
///
/// * [DisableStageTransition], which prevents artifacts from transitioning to the next stage in a pipeline.
///
/// * [EnableStageTransition], which enables transition of artifacts between stages in a pipeline.
///
///
/// Using the API to integrate with CodePipeline For third-party integrators or developers who want to create their own integrations with CodePipeline, the expected sequence varies from the standard API user. To integrate with CodePipeline, developers need to work with the following items: Jobs, which are instances of an action. For example, a job for a source action might import a revision of an artifact from a source. You can work with jobs by calling:
///
/// * [AcknowledgeJob], which confirms whether a job worker has received the specified job.
///
/// * [GetJobDetails], which returns the details of a job.
///
/// * [PollForJobs], which determines whether there are any jobs to act on.
///
/// * [PutJobFailureResult], which provides details of a job failure.
///
/// * [PutJobSuccessResult], which provides details of a job success.
///
///
/// Third party jobs, which are instances of an action created by a partner action and integrated into CodePipeline. Partner actions are created by members of the Amazon Web Services Partner Network. You can work with third party jobs by calling:
///
/// * [AcknowledgeThirdPartyJob], which confirms whether a job worker has received the specified job.
///
/// * [GetThirdPartyJobDetails], which requests the details of a job for a partner action.
///
/// * [PollForThirdPartyJobs], which determines whether there are any jobs to act on.
///
/// * [PutThirdPartyJobFailureResult], which provides details of a job failure.
///
/// * [PutThirdPartyJobSuccessResult], which provides details of a job success.
public protocol CodePipelineClientProtocol {
    /// Returns information about a specified job and whether that job has been received by the job worker. Used for custom actions only.
    ///
    /// - Parameter AcknowledgeJobInput : Represents the input of an AcknowledgeJob action.
    ///
    /// - Returns: `AcknowledgeJobOutputResponse` : Represents the output of an AcknowledgeJob action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNonceException` : The nonce was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func acknowledgeJob(input: AcknowledgeJobInput) async throws -> AcknowledgeJobOutputResponse
    /// Confirms a job worker has received the specified job. Used for partner actions only.
    ///
    /// - Parameter AcknowledgeThirdPartyJobInput : Represents the input of an AcknowledgeThirdPartyJob action.
    ///
    /// - Returns: `AcknowledgeThirdPartyJobOutputResponse` : Represents the output of an AcknowledgeThirdPartyJob action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidClientTokenException` : The client token was specified in an invalid format
    /// - `InvalidNonceException` : The nonce was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func acknowledgeThirdPartyJob(input: AcknowledgeThirdPartyJobInput) async throws -> AcknowledgeThirdPartyJobOutputResponse
    /// Creates a new custom action that can be used in all pipelines associated with the Amazon Web Services account. Only used for custom actions.
    ///
    /// - Parameter CreateCustomActionTypeInput : Represents the input of a CreateCustomActionType operation.
    ///
    /// - Returns: `CreateCustomActionTypeOutputResponse` : Represents the output of a CreateCustomActionType operation.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `InvalidTagsException` : The specified resource tags are invalid.
    /// - `LimitExceededException` : The number of pipelines associated with the Amazon Web Services account has exceeded the limit allowed for the account.
    /// - `TooManyTagsException` : The tags limit for a resource has been exceeded.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func createCustomActionType(input: CreateCustomActionTypeInput) async throws -> CreateCustomActionTypeOutputResponse
    /// Creates a pipeline. In the pipeline structure, you must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores.
    ///
    /// - Parameter CreatePipelineInput : Represents the input of a CreatePipeline action.
    ///
    /// - Returns: `CreatePipelineOutputResponse` : Represents the output of a CreatePipeline action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `InvalidActionDeclarationException` : The action declaration was specified in an invalid format.
    /// - `InvalidBlockerDeclarationException` : Reserved for future use.
    /// - `InvalidStageDeclarationException` : The stage declaration was specified in an invalid format.
    /// - `InvalidStructureException` : The structure was specified in an invalid format.
    /// - `InvalidTagsException` : The specified resource tags are invalid.
    /// - `LimitExceededException` : The number of pipelines associated with the Amazon Web Services account has exceeded the limit allowed for the account.
    /// - `PipelineNameInUseException` : The specified pipeline name is already in use.
    /// - `TooManyTagsException` : The tags limit for a resource has been exceeded.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func createPipeline(input: CreatePipelineInput) async throws -> CreatePipelineOutputResponse
    /// Marks a custom action as deleted. PollForJobs for the custom action fails after the action is marked for deletion. Used for custom actions only. To re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.
    ///
    /// - Parameter DeleteCustomActionTypeInput : Represents the input of a DeleteCustomActionType operation. The custom action will be marked as deleted.
    ///
    /// - Returns: `DeleteCustomActionTypeOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func deleteCustomActionType(input: DeleteCustomActionTypeInput) async throws -> DeleteCustomActionTypeOutputResponse
    /// Deletes the specified pipeline.
    ///
    /// - Parameter DeletePipelineInput : Represents the input of a DeletePipeline action.
    ///
    /// - Returns: `DeletePipelineOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func deletePipeline(input: DeletePipelineInput) async throws -> DeletePipelineOutputResponse
    /// Deletes a previously created webhook by name. Deleting the webhook stops CodePipeline from starting a pipeline every time an external event occurs. The API returns successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.
    ///
    /// - Parameter DeleteWebhookInput : [no documentation found]
    ///
    /// - Returns: `DeleteWebhookOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func deleteWebhook(input: DeleteWebhookInput) async throws -> DeleteWebhookOutputResponse
    /// Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently supported only for webhooks that target an action type of GitHub.
    ///
    /// - Parameter DeregisterWebhookWithThirdPartyInput : [no documentation found]
    ///
    /// - Returns: `DeregisterWebhookWithThirdPartyOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ValidationException` : The validation was specified in an invalid format.
    /// - `WebhookNotFoundException` : The specified webhook was entered in an invalid format or cannot be found.
    func deregisterWebhookWithThirdParty(input: DeregisterWebhookWithThirdPartyInput) async throws -> DeregisterWebhookWithThirdPartyOutputResponse
    /// Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.
    ///
    /// - Parameter DisableStageTransitionInput : Represents the input of a DisableStageTransition action.
    ///
    /// - Returns: `DisableStageTransitionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `StageNotFoundException` : The stage was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func disableStageTransition(input: DisableStageTransitionInput) async throws -> DisableStageTransitionOutputResponse
    /// Enables artifacts in a pipeline to transition to a stage in a pipeline.
    ///
    /// - Parameter EnableStageTransitionInput : Represents the input of an EnableStageTransition action.
    ///
    /// - Returns: `EnableStageTransitionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `StageNotFoundException` : The stage was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func enableStageTransition(input: EnableStageTransitionInput) async throws -> EnableStageTransitionOutputResponse
    /// Returns information about an action type created for an external provider, where the action is to be used by customers of the external provider. The action can be created with any supported integration model.
    ///
    /// - Parameter GetActionTypeInput : [no documentation found]
    ///
    /// - Returns: `GetActionTypeOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionTypeNotFoundException` : The specified action type cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getActionType(input: GetActionTypeInput) async throws -> GetActionTypeOutputResponse
    /// Returns information about a job. Used for custom actions only. When this API is called, CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.
    ///
    /// - Parameter GetJobDetailsInput : Represents the input of a GetJobDetails action.
    ///
    /// - Returns: `GetJobDetailsOutputResponse` : Represents the output of a GetJobDetails action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getJobDetails(input: GetJobDetailsInput) async throws -> GetJobDetailsOutputResponse
    /// Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with [UpdatePipeline].
    ///
    /// - Parameter GetPipelineInput : Represents the input of a GetPipeline action.
    ///
    /// - Returns: `GetPipelineOutputResponse` : Represents the output of a GetPipeline action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `PipelineVersionNotFoundException` : The pipeline version was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getPipeline(input: GetPipelineInput) async throws -> GetPipelineOutputResponse
    /// Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.
    ///
    /// - Parameter GetPipelineExecutionInput : Represents the input of a GetPipelineExecution action.
    ///
    /// - Returns: `GetPipelineExecutionOutputResponse` : Represents the output of a GetPipelineExecution action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `PipelineExecutionNotFoundException` : The pipeline execution was specified in an invalid format or cannot be found, or an execution ID does not belong to the specified pipeline.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getPipelineExecution(input: GetPipelineExecutionInput) async throws -> GetPipelineExecutionOutputResponse
    /// Returns information about the state of a pipeline, including the stages and actions. Values returned in the revisionId and revisionUrl fields indicate the source revision information, such as the commit ID, for the current state.
    ///
    /// - Parameter GetPipelineStateInput : Represents the input of a GetPipelineState action.
    ///
    /// - Returns: `GetPipelineStateOutputResponse` : Represents the output of a GetPipelineState action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getPipelineState(input: GetPipelineStateInput) async throws -> GetPipelineStateOutputResponse
    /// Requests the details of a job for a third party action. Used for partner actions only. When this API is called, CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.
    ///
    /// - Parameter GetThirdPartyJobDetailsInput : Represents the input of a GetThirdPartyJobDetails action.
    ///
    /// - Returns: `GetThirdPartyJobDetailsOutputResponse` : Represents the output of a GetThirdPartyJobDetails action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidClientTokenException` : The client token was specified in an invalid format
    /// - `InvalidJobException` : The job was specified in an invalid format or cannot be found.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func getThirdPartyJobDetails(input: GetThirdPartyJobDetailsInput) async throws -> GetThirdPartyJobDetailsOutputResponse
    /// Lists the action executions that have occurred in a pipeline.
    ///
    /// - Parameter ListActionExecutionsInput : [no documentation found]
    ///
    /// - Returns: `ListActionExecutionsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `PipelineExecutionNotFoundException` : The pipeline execution was specified in an invalid format or cannot be found, or an execution ID does not belong to the specified pipeline.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listActionExecutions(input: ListActionExecutionsInput) async throws -> ListActionExecutionsOutputResponse
    /// Gets a summary of all CodePipeline action types associated with your account.
    ///
    /// - Parameter ListActionTypesInput : Represents the input of a ListActionTypes action.
    ///
    /// - Returns: `ListActionTypesOutputResponse` : Represents the output of a ListActionTypes action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listActionTypes(input: ListActionTypesInput) async throws -> ListActionTypesOutputResponse
    /// Gets a summary of the most recent executions for a pipeline.
    ///
    /// - Parameter ListPipelineExecutionsInput : Represents the input of a ListPipelineExecutions action.
    ///
    /// - Returns: `ListPipelineExecutionsOutputResponse` : Represents the output of a ListPipelineExecutions action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listPipelineExecutions(input: ListPipelineExecutionsInput) async throws -> ListPipelineExecutionsOutputResponse
    /// Gets a summary of all of the pipelines associated with your account.
    ///
    /// - Parameter ListPipelinesInput : Represents the input of a ListPipelines action.
    ///
    /// - Returns: `ListPipelinesOutputResponse` : Represents the output of a ListPipelines action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listPipelines(input: ListPipelinesInput) async throws -> ListPipelinesOutputResponse
    /// Gets the set of key-value pairs (metadata) that are used to manage the resource.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidArnException` : The specified resource ARN is invalid.
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `ResourceNotFoundException` : The resource was specified in an invalid format.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Gets a listing of all the webhooks in this Amazon Web Services Region for this account. The output lists all webhooks and includes the webhook URL and ARN and the configuration for each webhook.
    ///
    /// - Parameter ListWebhooksInput : [no documentation found]
    ///
    /// - Returns: `ListWebhooksOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidNextTokenException` : The next token was specified in an invalid format. Make sure that the next token you provide is the token returned by a previous call.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func listWebhooks(input: ListWebhooksInput) async throws -> ListWebhooksOutputResponse
    /// Returns information about any jobs for CodePipeline to act on. PollForJobs is valid only for action types with "Custom" in the owner field. If the action type contains AWS or ThirdParty in the owner field, the PollForJobs action returns an error. When this API is called, CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.
    ///
    /// - Parameter PollForJobsInput : Represents the input of a PollForJobs action.
    ///
    /// - Returns: `PollForJobsOutputResponse` : Represents the output of a PollForJobs action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionTypeNotFoundException` : The specified action type cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func pollForJobs(input: PollForJobsInput) async throws -> PollForJobsOutputResponse
    /// Determines whether there are any third party jobs for a job worker to act on. Used for partner actions only. When this API is called, CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts.
    ///
    /// - Parameter PollForThirdPartyJobsInput : Represents the input of a PollForThirdPartyJobs action.
    ///
    /// - Returns: `PollForThirdPartyJobsOutputResponse` : Represents the output of a PollForThirdPartyJobs action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionTypeNotFoundException` : The specified action type cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func pollForThirdPartyJobs(input: PollForThirdPartyJobsInput) async throws -> PollForThirdPartyJobsOutputResponse
    /// Provides information to CodePipeline about new revisions to a source.
    ///
    /// - Parameter PutActionRevisionInput : Represents the input of a PutActionRevision action.
    ///
    /// - Returns: `PutActionRevisionOutputResponse` : Represents the output of a PutActionRevision action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionNotFoundException` : The specified action cannot be found.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `StageNotFoundException` : The stage was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putActionRevision(input: PutActionRevisionInput) async throws -> PutActionRevisionOutputResponse
    /// Provides the response to a manual approval request to CodePipeline. Valid responses include Approved and Rejected.
    ///
    /// - Parameter PutApprovalResultInput : Represents the input of a PutApprovalResult action.
    ///
    /// - Returns: `PutApprovalResultOutputResponse` : Represents the output of a PutApprovalResult action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionNotFoundException` : The specified action cannot be found.
    /// - `ApprovalAlreadyCompletedException` : The approval action has already been approved or rejected.
    /// - `InvalidApprovalTokenException` : The approval request already received a response or has expired.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `StageNotFoundException` : The stage was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putApprovalResult(input: PutApprovalResultInput) async throws -> PutApprovalResultOutputResponse
    /// Represents the failure of a job as returned to the pipeline by a job worker. Used for custom actions only.
    ///
    /// - Parameter PutJobFailureResultInput : Represents the input of a PutJobFailureResult action.
    ///
    /// - Returns: `PutJobFailureResultOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidJobStateException` : The job state was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putJobFailureResult(input: PutJobFailureResultInput) async throws -> PutJobFailureResultOutputResponse
    /// Represents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.
    ///
    /// - Parameter PutJobSuccessResultInput : Represents the input of a PutJobSuccessResult action.
    ///
    /// - Returns: `PutJobSuccessResultOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidJobStateException` : The job state was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `OutputVariablesSizeExceededException` : Exceeded the total size limit for all variables in the pipeline.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putJobSuccessResult(input: PutJobSuccessResultInput) async throws -> PutJobSuccessResultOutputResponse
    /// Represents the failure of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
    ///
    /// - Parameter PutThirdPartyJobFailureResultInput : Represents the input of a PutThirdPartyJobFailureResult action.
    ///
    /// - Returns: `PutThirdPartyJobFailureResultOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidClientTokenException` : The client token was specified in an invalid format
    /// - `InvalidJobStateException` : The job state was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putThirdPartyJobFailureResult(input: PutThirdPartyJobFailureResultInput) async throws -> PutThirdPartyJobFailureResultOutputResponse
    /// Represents the success of a third party job as returned to the pipeline by a job worker. Used for partner actions only.
    ///
    /// - Parameter PutThirdPartyJobSuccessResultInput : Represents the input of a PutThirdPartyJobSuccessResult action.
    ///
    /// - Returns: `PutThirdPartyJobSuccessResultOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidClientTokenException` : The client token was specified in an invalid format
    /// - `InvalidJobStateException` : The job state was specified in an invalid format.
    /// - `JobNotFoundException` : The job was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putThirdPartyJobSuccessResult(input: PutThirdPartyJobSuccessResultInput) async throws -> PutThirdPartyJobSuccessResultOutputResponse
    /// Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there's a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.
    ///
    /// - Parameter PutWebhookInput : [no documentation found]
    ///
    /// - Returns: `PutWebhookOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `InvalidTagsException` : The specified resource tags are invalid.
    /// - `InvalidWebhookAuthenticationParametersException` : The specified authentication type is in an invalid format.
    /// - `InvalidWebhookFilterPatternException` : The specified event filter rule is in an invalid format.
    /// - `LimitExceededException` : The number of pipelines associated with the Amazon Web Services account has exceeded the limit allowed for the account.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `TooManyTagsException` : The tags limit for a resource has been exceeded.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func putWebhook(input: PutWebhookInput) async throws -> PutWebhookOutputResponse
    /// Configures a connection between the webhook that was created and the external tool with events to be detected.
    ///
    /// - Parameter RegisterWebhookWithThirdPartyInput : [no documentation found]
    ///
    /// - Returns: `RegisterWebhookWithThirdPartyOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ValidationException` : The validation was specified in an invalid format.
    /// - `WebhookNotFoundException` : The specified webhook was entered in an invalid format or cannot be found.
    func registerWebhookWithThirdParty(input: RegisterWebhookWithThirdPartyInput) async throws -> RegisterWebhookWithThirdPartyOutputResponse
    /// Resumes the pipeline execution by retrying the last failed actions in a stage. You can retry a stage immediately if any of the actions in the stage fail. When you retry, all actions that are still in progress continue working, and failed actions are triggered again.
    ///
    /// - Parameter RetryStageExecutionInput : Represents the input of a RetryStageExecution action.
    ///
    /// - Returns: `RetryStageExecutionOutputResponse` : Represents the output of a RetryStageExecution action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : Your request cannot be handled because the pipeline is busy handling ongoing activities. Try again later.
    /// - `NotLatestPipelineExecutionException` : The stage has failed in a later run of the pipeline and the pipelineExecutionId associated with the request is out of date.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `StageNotFoundException` : The stage was specified in an invalid format or cannot be found.
    /// - `StageNotRetryableException` : Unable to retry. The pipeline structure or stage state might have changed while actions awaited retry, or the stage contains no failed actions.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func retryStageExecution(input: RetryStageExecutionInput) async throws -> RetryStageExecutionOutputResponse
    /// Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.
    ///
    /// - Parameter StartPipelineExecutionInput : Represents the input of a StartPipelineExecution action.
    ///
    /// - Returns: `StartPipelineExecutionOutputResponse` : Represents the output of a StartPipelineExecution action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : Your request cannot be handled because the pipeline is busy handling ongoing activities. Try again later.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func startPipelineExecution(input: StartPipelineExecutionInput) async throws -> StartPipelineExecutionOutputResponse
    /// Stops the specified pipeline execution. You choose to either stop the pipeline execution by completing in-progress actions without starting subsequent actions, or by abandoning in-progress actions. While completing or abandoning in-progress actions, the pipeline execution is in a Stopping state. After all in-progress actions are completed or abandoned, the pipeline execution is in a Stopped state.
    ///
    /// - Parameter StopPipelineExecutionInput : [no documentation found]
    ///
    /// - Returns: `StopPipelineExecutionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : Your request cannot be handled because the pipeline is busy handling ongoing activities. Try again later.
    /// - `DuplicatedStopRequestException` : The pipeline execution is already in a Stopping state. If you already chose to stop and wait, you cannot make that request again. You can choose to stop and abandon now, but be aware that this option can lead to failed tasks or out of sequence tasks. If you already chose to stop and abandon, you cannot make that request again.
    /// - `PipelineExecutionNotStoppableException` : Unable to stop the pipeline execution. The execution might already be in a Stopped state, or it might no longer be in progress.
    /// - `PipelineNotFoundException` : The pipeline was specified in an invalid format or cannot be found.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func stopPipelineExecution(input: StopPipelineExecutionInput) async throws -> StopPipelineExecutionOutputResponse
    /// Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `InvalidArnException` : The specified resource ARN is invalid.
    /// - `InvalidTagsException` : The specified resource tags are invalid.
    /// - `ResourceNotFoundException` : The resource was specified in an invalid format.
    /// - `TooManyTagsException` : The tags limit for a resource has been exceeded.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes tags from an Amazon Web Services resource.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConcurrentModificationException` : Unable to modify the tag due to a simultaneous update request.
    /// - `InvalidArnException` : The specified resource ARN is invalid.
    /// - `InvalidTagsException` : The specified resource tags are invalid.
    /// - `ResourceNotFoundException` : The resource was specified in an invalid format.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider. Use a JSON file with the action definition and UpdateActionType to provide the full structure.
    ///
    /// - Parameter UpdateActionTypeInput : [no documentation found]
    ///
    /// - Returns: `UpdateActionTypeOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ActionTypeNotFoundException` : The specified action type cannot be found.
    /// - `RequestFailedException` : The request failed because of an unknown error, exception, or failure.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func updateActionType(input: UpdateActionTypeInput) async throws -> UpdateActionTypeOutputResponse
    /// Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure and UpdatePipeline to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.
    ///
    /// - Parameter UpdatePipelineInput : Represents the input of an UpdatePipeline action.
    ///
    /// - Returns: `UpdatePipelineOutputResponse` : Represents the output of an UpdatePipeline action.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidActionDeclarationException` : The action declaration was specified in an invalid format.
    /// - `InvalidBlockerDeclarationException` : Reserved for future use.
    /// - `InvalidStageDeclarationException` : The stage declaration was specified in an invalid format.
    /// - `InvalidStructureException` : The structure was specified in an invalid format.
    /// - `LimitExceededException` : The number of pipelines associated with the Amazon Web Services account has exceeded the limit allowed for the account.
    /// - `ValidationException` : The validation was specified in an invalid format.
    func updatePipeline(input: UpdatePipelineInput) async throws -> UpdatePipelineOutputResponse
}

public enum CodePipelineClientTypes {}
