//
// Copyright Amazon.com Inc. or its affiliates.
// All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

// Code generated by smithy-swift-codegen. DO NOT EDIT!

import class ClientRuntime.EndpointsRequestContext
import let AWSClientRuntime.awsPartitionJSON
import protocol ClientRuntime.EndpointsRequestContextProviding
import struct ClientRuntime.DefaultEndpointResolver
import struct ClientRuntime.StaticEndpointResolver
import struct SmithyHTTPAPI.Endpoint

public struct EndpointParams {
    /// Override the endpoint used to send this request
    public let endpoint: Swift.String?
    /// The ARN of the Key Value Store
    public let kvsARN: Swift.String?
    /// The AWS region used to dispatch the request.
    public let region: Swift.String?
    /// When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.
    public let useFIPS: Swift.Bool

    public init(
        endpoint: Swift.String? = nil,
        kvsARN: Swift.String? = nil,
        region: Swift.String? = nil,
        useFIPS: Swift.Bool = false
    )
    {
        self.endpoint = endpoint
        self.kvsARN = kvsARN
        self.region = region
        self.useFIPS = useFIPS
    }
    public init (authSchemeParams: CloudFrontKeyValueStoreAuthSchemeResolverParameters) {
        self.endpoint = authSchemeParams.endpoint
        self.kvsARN = authSchemeParams.kvsARN
        self.region = authSchemeParams.region
        self.useFIPS = authSchemeParams.useFIPS
    }
}

extension EndpointParams: ClientRuntime.EndpointsRequestContextProviding {

    public var context: ClientRuntime.EndpointsRequestContext {
        get throws {
            let context = try ClientRuntime.EndpointsRequestContext()
            try context.add(name: "Endpoint", value: self.endpoint)
            try context.add(name: "KvsARN", value: self.kvsARN)
            try context.add(name: "Region", value: self.region)
            try context.add(name: "UseFIPS", value: self.useFIPS)
            return context
        }
    }
}

public protocol EndpointResolver {
    func resolve(params: EndpointParams) throws -> SmithyHTTPAPI.Endpoint
}

typealias DefaultEndpointResolver = ClientRuntime.DefaultEndpointResolver<EndpointParams>

extension DefaultEndpointResolver {
    private static let ruleSet = "{\"version\":\"1.0\",\"parameters\":{\"KvsARN\":{\"required\":false,\"documentation\":\"The ARN of the Key Value Store\",\"type\":\"String\"},\"Region\":{\"builtIn\":\"AWS::Region\",\"required\":false,\"documentation\":\"The AWS region used to dispatch the request.\",\"type\":\"String\"},\"UseFIPS\":{\"builtIn\":\"AWS::UseFIPS\",\"required\":true,\"default\":false,\"documentation\":\"When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.\",\"type\":\"Boolean\"},\"Endpoint\":{\"builtIn\":\"SDK::Endpoint\",\"required\":false,\"documentation\":\"Override the endpoint used to send this request\",\"type\":\"String\"}},\"rules\":[{\"conditions\":[{\"fn\":\"booleanEquals\",\"argv\":[{\"ref\":\"UseFIPS\"},false]}],\"rules\":[{\"conditions\":[{\"fn\":\"isSet\",\"argv\":[{\"ref\":\"KvsARN\"}]}],\"rules\":[{\"conditions\":[{\"fn\":\"aws.parseArn\",\"argv\":[{\"ref\":\"KvsARN\"}],\"assign\":\"parsedArn\"}],\"rules\":[{\"conditions\":[{\"fn\":\"stringEquals\",\"argv\":[{\"fn\":\"getAttr\",\"argv\":[{\"ref\":\"parsedArn\"},\"service\"]},\"cloudfront\"]}],\"rules\":[{\"conditions\":[{\"fn\":\"stringEquals\",\"argv\":[{\"fn\":\"getAttr\",\"argv\":[{\"ref\":\"parsedArn\"},\"region\"]},\"\"]}],\"rules\":[{\"conditions\":[{\"fn\":\"getAttr\",\"argv\":[{\"ref\":\"parsedArn\"},\"resourceId[0]\"],\"assign\":\"arnType\"}],\"rules\":[{\"conditions\":[{\"fn\":\"not\",\"argv\":[{\"fn\":\"stringEquals\",\"argv\":[{\"ref\":\"arnType\"},\"\"]}]}],\"rules\":[{\"conditions\":[{\"fn\":\"stringEquals\",\"argv\":[{\"ref\":\"arnType\"},\"key-value-store\"]}],\"rules\":[{\"conditions\":[{\"fn\":\"stringEquals\",\"argv\":[{\"fn\":\"getAttr\",\"argv\":[{\"ref\":\"parsedArn\"},\"partition\"]},\"aws\"]}],\"rules\":[{\"conditions\":[{\"fn\":\"isSet\",\"argv\":[{\"ref\":\"Region\"}]}],\"rules\":[{\"conditions\":[{\"fn\":\"aws.partition\",\"argv\":[{\"ref\":\"Region\"}],\"assign\":\"partitionResult\"}],\"rules\":[{\"conditions\":[{\"fn\":\"stringEquals\",\"argv\":[{\"fn\":\"getAttr\",\"argv\":[{\"ref\":\"partitionResult\"},\"name\"]},\"{parsedArn#partition}\"]}],\"rules\":[{\"conditions\":[{\"fn\":\"isSet\",\"argv\":[{\"ref\":\"Endpoint\"}]}],\"rules\":[{\"conditions\":[{\"fn\":\"parseURL\",\"argv\":[{\"ref\":\"Endpoint\"}],\"assign\":\"url\"}],\"rules\":[{\"conditions\":[],\"endpoint\":{\"url\":\"{url#scheme}://{parsedArn#accountId}.{url#authority}{url#path}\",\"properties\":{\"authSchemes\":[{\"name\":\"sigv4a\",\"signingName\":\"cloudfront-keyvaluestore\",\"signingRegionSet\":[\"*\"]}]},\"headers\":{}},\"type\":\"endpoint\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Provided endpoint is not a valid URL\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"endpoint\":{\"url\":\"https://{parsedArn#accountId}.cloudfront-kvs.global.api.aws\",\"properties\":{\"authSchemes\":[{\"name\":\"sigv4a\",\"signingName\":\"cloudfront-keyvaluestore\",\"signingRegionSet\":[\"*\"]}]},\"headers\":{}},\"type\":\"endpoint\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Client was configured for partition `{partitionResult#name}` but Kvs ARN has `{parsedArn#partition}`\",\"type\":\"error\"}],\"type\":\"tree\"}],\"type\":\"tree\"},{\"conditions\":[{\"fn\":\"isSet\",\"argv\":[{\"ref\":\"Endpoint\"}]}],\"rules\":[{\"conditions\":[{\"fn\":\"parseURL\",\"argv\":[{\"ref\":\"Endpoint\"}],\"assign\":\"url\"}],\"rules\":[{\"conditions\":[],\"endpoint\":{\"url\":\"{url#scheme}://{parsedArn#accountId}.{url#authority}{url#path}\",\"properties\":{\"authSchemes\":[{\"name\":\"sigv4a\",\"signingName\":\"cloudfront-keyvaluestore\",\"signingRegionSet\":[\"*\"]}]},\"headers\":{}},\"type\":\"endpoint\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Provided endpoint is not a valid URL\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"endpoint\":{\"url\":\"https://{parsedArn#accountId}.cloudfront-kvs.global.api.aws\",\"properties\":{\"authSchemes\":[{\"name\":\"sigv4a\",\"signingName\":\"cloudfront-keyvaluestore\",\"signingRegionSet\":[\"*\"]}]},\"headers\":{}},\"type\":\"endpoint\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"CloudFront-KeyValueStore is not supported in partition `{parsedArn#partition}`\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"ARN resource type is invalid. Expected `key-value-store`, found: `{arnType}`\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"No resource type found in the KVS ARN. Resource type must be `key-value-store`.\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"No resource type found in the KVS ARN. Resource type must be `key-value-store`.\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Provided ARN must be a global resource ARN. Found: `{parsedArn#region}`\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Provided ARN is not a valid CloudFront Service ARN. Found: `{parsedArn#service}`\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"KVS ARN must be a valid ARN\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"KVS ARN must be provided to use this service\",\"type\":\"error\"}],\"type\":\"tree\"},{\"conditions\":[],\"error\":\"Invalid Configuration: FIPS is not supported with CloudFront-KeyValueStore.\",\"type\":\"error\"}]}"

    init() throws {
        try self.init(partitions: AWSClientRuntime.awsPartitionJSON, ruleSet: Self.ruleSet)
    }
}

extension DefaultEndpointResolver: EndpointResolver {}

typealias StaticEndpointResolver = ClientRuntime.StaticEndpointResolver<EndpointParams>

extension StaticEndpointResolver: EndpointResolver {}
