// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Neptune Data API The Amazon Neptune data API provides SDK support for more than 40 of Neptune's data operations, including data loading, query execution, data inquiry, and machine learning. It supports the Gremlin and openCypher query languages, and is available in all SDK languages. It automatically signs API requests and greatly simplifies integrating Neptune into your applications.
public protocol NeptunedataClientProtocol {
    /// Cancels a Gremlin query. See [Gremlin query cancellation](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-api-status-cancel.html) for more information.
    ///
    /// - Parameter CancelGremlinQueryInput : [no documentation found]
    ///
    /// - Returns: `CancelGremlinQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelGremlinQuery(input: CancelGremlinQueryInput) async throws -> CancelGremlinQueryOutputResponse
    /// Cancels a specified load job. This is an HTTP DELETE request. See [Neptune Loader Get-Status API](https://docs.aws.amazon.com/neptune/latest/userguide/load-api-reference-status.htm) for more information.
    ///
    /// - Parameter CancelLoaderJobInput : [no documentation found]
    ///
    /// - Returns: `CancelLoaderJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `BulkLoadIdNotFoundException` : Raised when a specified bulk-load job ID cannot be found.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InternalFailureException` : Raised when the processing of the request failed unexpectedly.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `LoadUrlAccessDeniedException` : Raised when access is denied to a specified load URL.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelLoaderJob(input: CancelLoaderJobInput) async throws -> CancelLoaderJobOutputResponse
    /// Cancels a Neptune ML data processing job. See [The ]dataprocessing command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).
    ///
    /// - Parameter CancelMLDataProcessingJobInput : [no documentation found]
    ///
    /// - Returns: `CancelMLDataProcessingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelMLDataProcessingJob(input: CancelMLDataProcessingJobInput) async throws -> CancelMLDataProcessingJobOutputResponse
    /// Cancels a Neptune ML model training job. See [Model training using the ]modeltraining command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).
    ///
    /// - Parameter CancelMLModelTrainingJobInput : [no documentation found]
    ///
    /// - Returns: `CancelMLModelTrainingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelMLModelTrainingJob(input: CancelMLModelTrainingJobInput) async throws -> CancelMLModelTrainingJobOutputResponse
    /// Cancels a specified model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).
    ///
    /// - Parameter CancelMLModelTransformJobInput : [no documentation found]
    ///
    /// - Returns: `CancelMLModelTransformJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelMLModelTransformJob(input: CancelMLModelTransformJobInput) async throws -> CancelMLModelTransformJobOutputResponse
    /// Cancels a specified openCypher query. See [Neptune openCypher status endpoint](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-status.html) for more information.
    ///
    /// - Parameter CancelOpenCypherQueryInput : [no documentation found]
    ///
    /// - Returns: `CancelOpenCypherQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidNumericDataException` : Raised when invalid numerical data is encountered when servicing a request.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func cancelOpenCypherQuery(input: CancelOpenCypherQueryInput) async throws -> CancelOpenCypherQueryOutputResponse
    /// Creates a new Neptune ML inference endpoint that lets you query one specific model that the model-training process constructed. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).
    ///
    /// - Parameter CreateMLEndpointInput : [no documentation found]
    ///
    /// - Returns: `CreateMLEndpointOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func createMLEndpoint(input: CreateMLEndpointInput) async throws -> CreateMLEndpointOutputResponse
    /// Cancels the creation of a Neptune ML inference endpoint. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).
    ///
    /// - Parameter DeleteMLEndpointInput : [no documentation found]
    ///
    /// - Returns: `DeleteMLEndpointOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func deleteMLEndpoint(input: DeleteMLEndpointInput) async throws -> DeleteMLEndpointOutputResponse
    /// Deletes statistics for Gremlin and openCypher (property graph) data.
    ///
    /// - Parameter DeletePropertygraphStatisticsInput : [no documentation found]
    ///
    /// - Returns: `DeletePropertygraphStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func deletePropertygraphStatistics(input: DeletePropertygraphStatisticsInput) async throws -> DeletePropertygraphStatisticsOutputResponse
    /// Deletes SPARQL statistics
    ///
    /// - Parameter DeleteSparqlStatisticsInput : [no documentation found]
    ///
    /// - Returns: `DeleteSparqlStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func deleteSparqlStatistics(input: DeleteSparqlStatisticsInput) async throws -> DeleteSparqlStatisticsOutputResponse
    /// The fast reset REST API lets you reset a Neptune graph quicky and easily, removing all of its data. Neptune fast reset is a two-step process. First you call ExecuteFastReset with action set to initiateDatabaseReset. This returns a UUID token which you then include when calling ExecuteFastReset again with action set to performDatabaseReset. See [Empty an Amazon Neptune DB cluster using the fast reset API](https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-fast-reset.html).
    ///
    /// - Parameter ExecuteFastResetInput : [no documentation found]
    ///
    /// - Returns: `ExecuteFastResetOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MethodNotAllowedException` : Raised when the HTTP method used by a request is not supported by the endpoint being used.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `ServerShutdownException` : Raised when the server shuts down while processing a request.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeFastReset(input: ExecuteFastResetInput) async throws -> ExecuteFastResetOutputResponse
    /// Executes a Gremlin Explain query. Amazon Neptune has added a Gremlin feature named explain that provides is a self-service tool for understanding the execution approach being taken by the Neptune engine for the query. You invoke it by adding an explain parameter to an HTTP call that submits a Gremlin query. The explain feature provides information about the logical structure of query execution plans. You can use this information to identify potential evaluation and execution bottlenecks and to tune your query, as explained in [Tuning Gremlin queries](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-traversal-tuning.html). You can also use query hints to improve query execution plans.
    ///
    /// - Parameter ExecuteGremlinExplainQueryInput : [no documentation found]
    ///
    /// - Returns: `ExecuteGremlinExplainQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `CancelledByUserException` : Raised when a user cancelled a request.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MalformedQueryException` : Raised when a query is submitted that is syntactically incorrect or does not pass additional validation.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `QueryLimitExceededException` : Raised when the number of active queries exceeds what the server can process. The query in question can be retried when the system is less busy.
    /// - `QueryLimitException` : Raised when the size of a query exceeds the system limit.
    /// - `QueryTooLargeException` : Raised when the body of a query is too large.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeGremlinExplainQuery(input: ExecuteGremlinExplainQueryInput) async throws -> ExecuteGremlinExplainQueryOutputResponse
    /// Executes a Gremlin Profile query, which runs a specified traversal, collects various metrics about the run, and produces a profile report as output. See [Gremlin profile API in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-profile-api.html) for details.
    ///
    /// - Parameter ExecuteGremlinProfileQueryInput : [no documentation found]
    ///
    /// - Returns: `ExecuteGremlinProfileQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `CancelledByUserException` : Raised when a user cancelled a request.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MalformedQueryException` : Raised when a query is submitted that is syntactically incorrect or does not pass additional validation.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `QueryLimitExceededException` : Raised when the number of active queries exceeds what the server can process. The query in question can be retried when the system is less busy.
    /// - `QueryLimitException` : Raised when the size of a query exceeds the system limit.
    /// - `QueryTooLargeException` : Raised when the body of a query is too large.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeGremlinProfileQuery(input: ExecuteGremlinProfileQueryInput) async throws -> ExecuteGremlinProfileQueryOutputResponse
    /// This commands executes a Gremlin query. Amazon Neptune is compatible with Apache TinkerPop3 and Gremlin, so you can use the Gremlin traversal language to query the graph, as described under [The Graph](https://tinkerpop.apache.org/docs/current/reference/#graph) in the Apache TinkerPop3 documentation. More details can also be found in [Accessing a Neptune graph with Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin.html).
    ///
    /// - Parameter ExecuteGremlinQueryInput : [no documentation found]
    ///
    /// - Returns: `ExecuteGremlinQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `CancelledByUserException` : Raised when a user cancelled a request.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MalformedQueryException` : Raised when a query is submitted that is syntactically incorrect or does not pass additional validation.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `QueryLimitExceededException` : Raised when the number of active queries exceeds what the server can process. The query in question can be retried when the system is less busy.
    /// - `QueryLimitException` : Raised when the size of a query exceeds the system limit.
    /// - `QueryTooLargeException` : Raised when the body of a query is too large.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeGremlinQuery(input: ExecuteGremlinQueryInput) async throws -> ExecuteGremlinQueryOutputResponse
    /// Executes an openCypher explain request. See [The openCypher explain feature](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-explain.html) for more information.
    ///
    /// - Parameter ExecuteOpenCypherExplainQueryInput : [no documentation found]
    ///
    /// - Returns: `ExecuteOpenCypherExplainQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `CancelledByUserException` : Raised when a user cancelled a request.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidNumericDataException` : Raised when invalid numerical data is encountered when servicing a request.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MalformedQueryException` : Raised when a query is submitted that is syntactically incorrect or does not pass additional validation.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `QueryLimitExceededException` : Raised when the number of active queries exceeds what the server can process. The query in question can be retried when the system is less busy.
    /// - `QueryLimitException` : Raised when the size of a query exceeds the system limit.
    /// - `QueryTooLargeException` : Raised when the body of a query is too large.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeOpenCypherExplainQuery(input: ExecuteOpenCypherExplainQueryInput) async throws -> ExecuteOpenCypherExplainQueryOutputResponse
    /// Executes an openCypher query. See [Accessing the Neptune Graph with openCypher](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher.html) for more information. Neptune supports building graph applications using openCypher, which is currently one of the most popular query languages among developers working with graph databases. Developers, business analysts, and data scientists like openCypher's declarative, SQL-inspired syntax because it provides a familiar structure in which to querying property graphs. The openCypher language was originally developed by Neo4j, then open-sourced in 2015 and contributed to the [openCypher project](https://opencypher.org/) under an Apache 2 open-source license.
    ///
    /// - Parameter ExecuteOpenCypherQueryInput : [no documentation found]
    ///
    /// - Returns: `ExecuteOpenCypherQueryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `CancelledByUserException` : Raised when a user cancelled a request.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidNumericDataException` : Raised when invalid numerical data is encountered when servicing a request.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MalformedQueryException` : Raised when a query is submitted that is syntactically incorrect or does not pass additional validation.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `QueryLimitExceededException` : Raised when the number of active queries exceeds what the server can process. The query in question can be retried when the system is less busy.
    /// - `QueryLimitException` : Raised when the size of a query exceeds the system limit.
    /// - `QueryTooLargeException` : Raised when the body of a query is too large.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func executeOpenCypherQuery(input: ExecuteOpenCypherQueryInput) async throws -> ExecuteOpenCypherQueryOutputResponse
    /// Check the status of the graph database on the host.
    ///
    /// - Parameter GetEngineStatusInput : [no documentation found]
    ///
    /// - Returns: `GetEngineStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InternalFailureException` : Raised when the processing of the request failed unexpectedly.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getEngineStatus(input: GetEngineStatusInput) async throws -> GetEngineStatusOutputResponse
    /// Gets the status of a specified Gremlin query.
    ///
    /// - Parameter GetGremlinQueryStatusInput : [no documentation found]
    ///
    /// - Returns: `GetGremlinQueryStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getGremlinQueryStatus(input: GetGremlinQueryStatusInput) async throws -> GetGremlinQueryStatusOutputResponse
    /// Gets status information about a specified load job. Neptune keeps track of the most recent 1,024 bulk load jobs, and stores the last 10,000 error details per job. See [Neptune Loader Get-Status API](https://docs.aws.amazon.com/neptune/latest/userguide/load-api-reference-status.htm) for more information.
    ///
    /// - Parameter GetLoaderJobStatusInput : [no documentation found]
    ///
    /// - Returns: `GetLoaderJobStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `BulkLoadIdNotFoundException` : Raised when a specified bulk-load job ID cannot be found.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InternalFailureException` : Raised when the processing of the request failed unexpectedly.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `LoadUrlAccessDeniedException` : Raised when access is denied to a specified load URL.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getLoaderJobStatus(input: GetLoaderJobStatusInput) async throws -> GetLoaderJobStatusOutputResponse
    /// Retrieves information about a specified data processing job. See [The ]dataprocessing command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).
    ///
    /// - Parameter GetMLDataProcessingJobInput : [no documentation found]
    ///
    /// - Returns: `GetMLDataProcessingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getMLDataProcessingJob(input: GetMLDataProcessingJobInput) async throws -> GetMLDataProcessingJobOutputResponse
    /// Retrieves details about an inference endpoint. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).
    ///
    /// - Parameter GetMLEndpointInput : [no documentation found]
    ///
    /// - Returns: `GetMLEndpointOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getMLEndpoint(input: GetMLEndpointInput) async throws -> GetMLEndpointOutputResponse
    /// Retrieves information about a Neptune ML model training job. See [Model training using the ]modeltraining command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).
    ///
    /// - Parameter GetMLModelTrainingJobInput : [no documentation found]
    ///
    /// - Returns: `GetMLModelTrainingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getMLModelTrainingJob(input: GetMLModelTrainingJobInput) async throws -> GetMLModelTrainingJobOutputResponse
    /// Gets information about a specified model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).
    ///
    /// - Parameter GetMLModelTransformJobInput : [no documentation found]
    ///
    /// - Returns: `GetMLModelTransformJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getMLModelTransformJob(input: GetMLModelTransformJobInput) async throws -> GetMLModelTransformJobOutputResponse
    /// Retrieves the status of a specified openCypher query.
    ///
    /// - Parameter GetOpenCypherQueryStatusInput : [no documentation found]
    ///
    /// - Returns: `GetOpenCypherQueryStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidNumericDataException` : Raised when invalid numerical data is encountered when servicing a request.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getOpenCypherQueryStatus(input: GetOpenCypherQueryStatusInput) async throws -> GetOpenCypherQueryStatusOutputResponse
    /// Gets property graph statistics (Gremlin and openCypher).
    ///
    /// - Parameter GetPropertygraphStatisticsInput : [no documentation found]
    ///
    /// - Returns: `GetPropertygraphStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getPropertygraphStatistics(input: GetPropertygraphStatisticsInput) async throws -> GetPropertygraphStatisticsOutputResponse
    /// Gets a stream for a property graph. With the Neptune Streams feature, you can generate a complete sequence of change-log entries that record every change made to your graph data as it happens. GetPropertygraphStream lets you collect these change-log entries for a property graph. The Neptune streams feature needs to be enabled on your Neptune DBcluster. To enable streams, set the [neptune_streams](https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html#parameters-db-cluster-parameters-neptune_streams) DB cluster parameter to 1. See [Capturing graph changes in real time using Neptune streams](https://docs.aws.amazon.com/neptune/latest/userguide/streams.html).
    ///
    /// - Parameter GetPropertygraphStreamInput : [no documentation found]
    ///
    /// - Returns: `GetPropertygraphStreamOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `ExpiredStreamException` : Raised when a request attempts to access an stream that has expired.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `StreamRecordsNotFoundException` : Raised when stream records requested by a query cannot be found.
    /// - `ThrottlingException` : Raised when the rate of requests exceeds the maximum throughput. Requests can be retried after encountering this exception.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getPropertygraphStream(input: GetPropertygraphStreamInput) async throws -> GetPropertygraphStreamOutputResponse
    /// Gets a graph summary for a property graph.
    ///
    /// - Parameter GetPropertygraphSummaryInput : [no documentation found]
    ///
    /// - Returns: `GetPropertygraphSummaryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getPropertygraphSummary(input: GetPropertygraphSummaryInput) async throws -> GetPropertygraphSummaryOutputResponse
    /// Gets a graph summary for an RDF graph.
    ///
    /// - Parameter GetRDFGraphSummaryInput : [no documentation found]
    ///
    /// - Returns: `GetRDFGraphSummaryOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getRDFGraphSummary(input: GetRDFGraphSummaryInput) async throws -> GetRDFGraphSummaryOutputResponse
    /// Gets RDF statistics (SPARQL).
    ///
    /// - Parameter GetSparqlStatisticsInput : [no documentation found]
    ///
    /// - Returns: `GetSparqlStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getSparqlStatistics(input: GetSparqlStatisticsInput) async throws -> GetSparqlStatisticsOutputResponse
    /// Gets a stream for an RDF graph. With the Neptune Streams feature, you can generate a complete sequence of change-log entries that record every change made to your graph data as it happens. GetSparqlStream lets you collect these change-log entries for an RDF graph. The Neptune streams feature needs to be enabled on your Neptune DBcluster. To enable streams, set the [neptune_streams](https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html#parameters-db-cluster-parameters-neptune_streams) DB cluster parameter to 1. See [Capturing graph changes in real time using Neptune streams](https://docs.aws.amazon.com/neptune/latest/userguide/streams.html).
    ///
    /// - Parameter GetSparqlStreamInput : [no documentation found]
    ///
    /// - Returns: `GetSparqlStreamOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `ExpiredStreamException` : Raised when a request attempts to access an stream that has expired.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MemoryLimitExceededException` : Raised when a request fails because of insufficient memory resources. The request can be retried.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `StreamRecordsNotFoundException` : Raised when stream records requested by a query cannot be found.
    /// - `ThrottlingException` : Raised when the rate of requests exceeds the maximum throughput. Requests can be retried after encountering this exception.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func getSparqlStream(input: GetSparqlStreamInput) async throws -> GetSparqlStreamOutputResponse
    /// Lists active Gremlin queries. See [Gremlin query status API](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-api-status.html) for details about the output.
    ///
    /// - Parameter ListGremlinQueriesInput : [no documentation found]
    ///
    /// - Returns: `ListGremlinQueriesOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listGremlinQueries(input: ListGremlinQueriesInput) async throws -> ListGremlinQueriesOutputResponse
    /// Retrieves a list of the loadIds for all active loader jobs.
    ///
    /// - Parameter ListLoaderJobsInput : [no documentation found]
    ///
    /// - Returns: `ListLoaderJobsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `BulkLoadIdNotFoundException` : Raised when a specified bulk-load job ID cannot be found.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InternalFailureException` : Raised when the processing of the request failed unexpectedly.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `LoadUrlAccessDeniedException` : Raised when access is denied to a specified load URL.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listLoaderJobs(input: ListLoaderJobsInput) async throws -> ListLoaderJobsOutputResponse
    /// Returns a list of Neptune ML data processing jobs. See [Listing active data-processing jobs using the Neptune ML dataprocessing command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html#machine-learning-api-dataprocessing-list-jobs).
    ///
    /// - Parameter ListMLDataProcessingJobsInput : [no documentation found]
    ///
    /// - Returns: `ListMLDataProcessingJobsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listMLDataProcessingJobs(input: ListMLDataProcessingJobsInput) async throws -> ListMLDataProcessingJobsOutputResponse
    /// Lists existing inference endpoints. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).
    ///
    /// - Parameter ListMLEndpointsInput : [no documentation found]
    ///
    /// - Returns: `ListMLEndpointsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listMLEndpoints(input: ListMLEndpointsInput) async throws -> ListMLEndpointsOutputResponse
    /// Lists Neptune ML model-training jobs. See [Model training using the ]modeltraining command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).
    ///
    /// - Parameter ListMLModelTrainingJobsInput : [no documentation found]
    ///
    /// - Returns: `ListMLModelTrainingJobsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listMLModelTrainingJobs(input: ListMLModelTrainingJobsInput) async throws -> ListMLModelTrainingJobsOutputResponse
    /// Returns a list of model transform job IDs. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).
    ///
    /// - Parameter ListMLModelTransformJobsInput : [no documentation found]
    ///
    /// - Returns: `ListMLModelTransformJobsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listMLModelTransformJobs(input: ListMLModelTransformJobsInput) async throws -> ListMLModelTransformJobsOutputResponse
    /// Lists active openCypher queries. See [Neptune openCypher status endpoint](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-status.html) for more information.
    ///
    /// - Parameter ListOpenCypherQueriesInput : [no documentation found]
    ///
    /// - Returns: `ListOpenCypherQueriesOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConcurrentModificationException` : Raised when a request attempts to modify data that is concurrently being modified by another process.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `FailureByQueryException` : Raised when a request fails.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidNumericDataException` : Raised when invalid numerical data is encountered when servicing a request.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `ParsingException` : Raised when a parsing issue is encountered.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `TimeLimitExceededException` : Raised when the an operation exceeds the time limit allowed for it.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func listOpenCypherQueries(input: ListOpenCypherQueriesInput) async throws -> ListOpenCypherQueriesOutputResponse
    /// Manages the generation and use of property graph statistics.
    ///
    /// - Parameter ManagePropertygraphStatisticsInput : [no documentation found]
    ///
    /// - Returns: `ManagePropertygraphStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func managePropertygraphStatistics(input: ManagePropertygraphStatisticsInput) async throws -> ManagePropertygraphStatisticsOutputResponse
    /// Manages the generation and use of RDF graph statistics.
    ///
    /// - Parameter ManageSparqlStatisticsInput : [no documentation found]
    ///
    /// - Returns: `ManageSparqlStatisticsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : Raised in case of an authentication or authorization failure.
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `ReadOnlyViolationException` : Raised when a request attempts to write to a read-only resource.
    /// - `StatisticsNotAvailableException` : Raised when statistics needed to satisfy a request are not available.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func manageSparqlStatistics(input: ManageSparqlStatisticsInput) async throws -> ManageSparqlStatisticsOutputResponse
    /// Starts a Neptune bulk loader job to load data from an Amazon S3 bucket into a Neptune DB instance. See [Using the Amazon Neptune Bulk Loader to Ingest Data](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load.html).
    ///
    /// - Parameter StartLoaderJobInput : [no documentation found]
    ///
    /// - Returns: `StartLoaderJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `BulkLoadIdNotFoundException` : Raised when a specified bulk-load job ID cannot be found.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InternalFailureException` : Raised when the processing of the request failed unexpectedly.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `LoadUrlAccessDeniedException` : Raised when access is denied to a specified load URL.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `S3Exception` : Raised when there is a problem accessing Amazon S3.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func startLoaderJob(input: StartLoaderJobInput) async throws -> StartLoaderJobOutputResponse
    /// Creates a new Neptune ML data processing job for processing the graph data exported from Neptune for training. See [The ]dataprocessing command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).
    ///
    /// - Parameter StartMLDataProcessingJobInput : [no documentation found]
    ///
    /// - Returns: `StartMLDataProcessingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func startMLDataProcessingJob(input: StartMLDataProcessingJobInput) async throws -> StartMLDataProcessingJobOutputResponse
    /// Creates a new Neptune ML model training job. See [Model training using the ]modeltraining command(https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).
    ///
    /// - Parameter StartMLModelTrainingJobInput : [no documentation found]
    ///
    /// - Returns: `StartMLModelTrainingJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func startMLModelTrainingJob(input: StartMLModelTrainingJobInput) async throws -> StartMLModelTrainingJobOutputResponse
    /// Creates a new model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).
    ///
    /// - Parameter StartMLModelTransformJobInput : [no documentation found]
    ///
    /// - Returns: `StartMLModelTransformJobOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `BadRequestException` : Raised when a request is submitted that cannot be processed.
    /// - `ClientTimeoutException` : Raised when a request timed out in the client.
    /// - `ConstraintViolationException` : Raised when a value in a request field did not satisfy required constraints.
    /// - `IllegalArgumentException` : Raised when an argument in a request is not supported.
    /// - `InvalidArgumentException` : Raised when an argument in a request has an invalid value.
    /// - `InvalidParameterException` : Raised when a parameter value is not valid.
    /// - `MissingParameterException` : Raised when a required parameter is missing.
    /// - `MLResourceNotFoundException` : Raised when a specified machine-learning resource could not be found.
    /// - `PreconditionsFailedException` : Raised when a precondition for processing a request is not satisfied.
    /// - `TooManyRequestsException` : Raised when the number of requests being processed exceeds the limit.
    /// - `UnsupportedOperationException` : Raised when a request attempts to initiate an operation that is not supported.
    func startMLModelTransformJob(input: StartMLModelTransformJobInput) async throws -> StartMLModelTransformJobOutputResponse
}

public enum NeptunedataClientTypes {}
