// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// The operations for managing an Amazon MSK cluster.
public protocol KafkaClientProtocol {
    /// Associates one or more Scram Secrets with an Amazon MSK cluster.
    func batchAssociateScramSecret(input: BatchAssociateScramSecretInput) async throws -> BatchAssociateScramSecretOutputResponse
    /// Disassociates one or more Scram Secrets from an Amazon MSK cluster.
    func batchDisassociateScramSecret(input: BatchDisassociateScramSecretInput) async throws -> BatchDisassociateScramSecretOutputResponse
    /// Creates a new MSK cluster.
    func createCluster(input: CreateClusterInput) async throws -> CreateClusterOutputResponse
    /// Creates a new MSK cluster.
    func createClusterV2(input: CreateClusterV2Input) async throws -> CreateClusterV2OutputResponse
    /// Creates a new MSK configuration.
    func createConfiguration(input: CreateConfigurationInput) async throws -> CreateConfigurationOutputResponse
    /// Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in the request.
    func deleteCluster(input: DeleteClusterInput) async throws -> DeleteClusterOutputResponse
    /// Deletes an MSK Configuration.
    func deleteConfiguration(input: DeleteConfigurationInput) async throws -> DeleteConfigurationOutputResponse
    /// Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.
    func describeCluster(input: DescribeClusterInput) async throws -> DescribeClusterOutputResponse
    /// Returns a description of the cluster operation specified by the ARN.
    func describeClusterOperation(input: DescribeClusterOperationInput) async throws -> DescribeClusterOperationOutputResponse
    /// Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.
    func describeClusterV2(input: DescribeClusterV2Input) async throws -> DescribeClusterV2OutputResponse
    /// Returns a description of this MSK configuration.
    func describeConfiguration(input: DescribeConfigurationInput) async throws -> DescribeConfigurationOutputResponse
    /// Returns a description of this revision of the configuration.
    func describeConfigurationRevision(input: DescribeConfigurationRevisionInput) async throws -> DescribeConfigurationRevisionOutputResponse
    /// A list of brokers that a client application can use to bootstrap.
    func getBootstrapBrokers(input: GetBootstrapBrokersInput) async throws -> GetBootstrapBrokersOutputResponse
    /// Gets the Apache Kafka versions to which you can update the MSK cluster.
    func getCompatibleKafkaVersions(input: GetCompatibleKafkaVersionsInput) async throws -> GetCompatibleKafkaVersionsOutputResponse
    /// Returns a list of all the operations that have been performed on the specified MSK cluster.
    func listClusterOperations(input: ListClusterOperationsInput) async throws -> ListClusterOperationsOutputResponse
    /// Returns a list of all the MSK clusters in the current Region.
    func listClusters(input: ListClustersInput) async throws -> ListClustersOutputResponse
    /// Returns a list of all the MSK clusters in the current Region.
    func listClustersV2(input: ListClustersV2Input) async throws -> ListClustersV2OutputResponse
    /// Returns a list of all the MSK configurations in this Region.
    func listConfigurationRevisions(input: ListConfigurationRevisionsInput) async throws -> ListConfigurationRevisionsOutputResponse
    /// Returns a list of all the MSK configurations in this Region.
    func listConfigurations(input: ListConfigurationsInput) async throws -> ListConfigurationsOutputResponse
    /// Returns a list of Apache Kafka versions.
    func listKafkaVersions(input: ListKafkaVersionsInput) async throws -> ListKafkaVersionsOutputResponse
    /// Returns a list of the broker nodes in the cluster.
    func listNodes(input: ListNodesInput) async throws -> ListNodesOutputResponse
    /// Returns a list of the Scram Secrets associated with an Amazon MSK cluster.
    func listScramSecrets(input: ListScramSecretsInput) async throws -> ListScramSecretsOutputResponse
    /// Returns a list of the tags associated with the specified resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Reboots brokers.
    func rebootBroker(input: RebootBrokerInput) async throws -> RebootBrokerOutputResponse
    /// Adds tags to the specified MSK resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes the tags associated with the keys that are provided in the query.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates the number of broker nodes in the cluster.
    func updateBrokerCount(input: UpdateBrokerCountInput) async throws -> UpdateBrokerCountOutputResponse
    /// Updates the EBS storage associated with MSK brokers.
    func updateBrokerStorage(input: UpdateBrokerStorageInput) async throws -> UpdateBrokerStorageOutputResponse
    /// Updates EC2 instance type.
    func updateBrokerType(input: UpdateBrokerTypeInput) async throws -> UpdateBrokerTypeOutputResponse
    /// Updates the cluster with the configuration that is specified in the request body.
    func updateClusterConfiguration(input: UpdateClusterConfigurationInput) async throws -> UpdateClusterConfigurationOutputResponse
    /// Updates the Apache Kafka version for the cluster.
    func updateClusterKafkaVersion(input: UpdateClusterKafkaVersionInput) async throws -> UpdateClusterKafkaVersionOutputResponse
    /// Updates an MSK configuration.
    func updateConfiguration(input: UpdateConfigurationInput) async throws -> UpdateConfigurationOutputResponse
    /// Updates the cluster's connectivity configuration.
    func updateConnectivity(input: UpdateConnectivityInput) async throws -> UpdateConnectivityOutputResponse
    /// Updates the monitoring settings for the cluster. You can use this operation to specify which Apache Kafka metrics you want Amazon MSK to send to Amazon CloudWatch. You can also specify settings for open monitoring with Prometheus.
    func updateMonitoring(input: UpdateMonitoringInput) async throws -> UpdateMonitoringOutputResponse
    /// Updates the security settings for the cluster. You can use this operation to specify encryption and authentication on existing clusters.
    func updateSecurity(input: UpdateSecurityInput) async throws -> UpdateSecurityOutputResponse
    /// Updates cluster broker volume size (or) sets cluster storage mode to TIERED.
    func updateStorage(input: UpdateStorageInput) async throws -> UpdateStorageOutputResponse
}

public protocol KafkaClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum KafkaClientTypes {}
