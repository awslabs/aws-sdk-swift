// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// Resource Groups lets you organize Amazon Web Services resources such as Amazon Elastic Compute Cloud instances, Amazon Relational Database Service databases, and Amazon Simple Storage Service buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource Groups enable you to automate management tasks, such as those in Amazon Web Services Systems Manager Automation documents, on tag-related resources in Amazon Web Services Systems Manager. Groups of tagged resources also let you quickly view a custom console in Amazon Web Services Systems Manager that shows Config compliance and other monitoring data about member resources. To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs. For more information about Resource Groups, see the [Resource Groups User Guide](https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html). Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.
///
/// * Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities
///
/// * Applying, editing, and removing tags from resource groups
///
/// * Resolving resource group member ARNs so they can be returned as search results
///
/// * Getting data about resources that are members of a group
///
/// * Searching Amazon Web Services resources based on a resource query
public protocol ResourceGroupsClientProtocol {
    /// Creates a resource group with the specified name and description. You can optionally include either a resource query or a service configuration. For more information about constructing a resource query, see [Build queries and groups in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/getting_started-query.html) in the Resource Groups User Guide. For more information about service-linked groups and service configurations, see [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:CreateGroup
    func createGroup(input: CreateGroupInput) async throws -> CreateGroupOutputResponse
    /// Deletes the specified resource group. Deleting a resource group does not delete any resources that are members of the group; it only deletes the group structure. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:DeleteGroup
    func deleteGroup(input: DeleteGroupInput) async throws -> DeleteGroupOutputResponse
    /// Retrieves the current status of optional features in Resource Groups.
    func getAccountSettings(input: GetAccountSettingsInput) async throws -> GetAccountSettingsOutputResponse
    /// Returns information about a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroup
    func getGroup(input: GetGroupInput) async throws -> GetGroupOutputResponse
    /// Retrieves the service configuration associated with the specified resource group. For details about the service configuration syntax, see [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroupConfiguration
    func getGroupConfiguration(input: GetGroupConfigurationInput) async throws -> GetGroupConfigurationOutputResponse
    /// Retrieves the resource query associated with the specified resource group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetGroupQuery
    func getGroupQuery(input: GetGroupQueryInput) async throws -> GetGroupQueryOutputResponse
    /// Returns a list of tags that are associated with a resource group, specified by an ARN. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GetTags
    func getTags(input: GetTagsInput) async throws -> GetTagsOutputResponse
    /// Adds the specified resources to the specified group. You can use this operation with only resource groups that are configured with the following types:
    ///
    /// * AWS::EC2::HostManagement
    ///
    /// * AWS::EC2::CapacityReservationPool
    ///
    ///
    /// Other resource group type and resource types aren't currently supported by this operation. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:GroupResources
    func groupResources(input: GroupResourcesInput) async throws -> GroupResourcesOutputResponse
    /// Returns a list of ARNs of the resources that are members of a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:ListGroupResources
    ///
    /// * cloudformation:DescribeStacks
    ///
    /// * cloudformation:ListStackResources
    ///
    /// * tag:GetResources
    func listGroupResources(input: ListGroupResourcesInput) async throws -> ListGroupResourcesOutputResponse
    /// Returns a list of existing Resource Groups in your account. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:ListGroups
    func listGroups(input: ListGroupsInput) async throws -> ListGroupsOutputResponse
    /// Attaches a service configuration to the specified group. This occurs asynchronously, and can take time to complete. You can use [GetGroupConfiguration] to check the status of the update. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:PutGroupConfiguration
    func putGroupConfiguration(input: PutGroupConfigurationInput) async throws -> PutGroupConfigurationOutputResponse
    /// Returns a list of Amazon Web Services resource identifiers that matches the specified query. The query uses the same format as a resource query in a [CreateGroup] or [UpdateGroupQuery] operation. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:SearchResources
    ///
    /// * cloudformation:DescribeStacks
    ///
    /// * cloudformation:ListStackResources
    ///
    /// * tag:GetResources
    func searchResources(input: SearchResourcesInput) async throws -> SearchResourcesOutputResponse
    /// Adds tags to a resource group with the specified ARN. Existing tags on a resource group are not changed if they are not specified in the request parameters. Do not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:Tag
    func tag(input: TagInput) async throws -> TagOutputResponse
    /// Removes the specified resources from the specified group. This operation works only with static groups that you populated using the [GroupResources] operation. It doesn't work with any resource groups that are automatically populated by tag-based or CloudFormation stack-based queries. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UngroupResources
    func ungroupResources(input: UngroupResourcesInput) async throws -> UngroupResourcesOutputResponse
    /// Deletes tags from a specified resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:Untag
    func untag(input: UntagInput) async throws -> UntagOutputResponse
    /// Turns on or turns off optional features in Resource Groups. The preceding example shows that the request to turn on group lifecycle events is IN_PROGRESS. You can call the [GetAccountSettings] operation to check for completion by looking for GroupLifecycleEventsStatus to change to ACTIVE.
    func updateAccountSettings(input: UpdateAccountSettingsInput) async throws -> UpdateAccountSettingsOutputResponse
    /// Updates the description for an existing group. You cannot update the name of a resource group. Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UpdateGroup
    func updateGroup(input: UpdateGroupInput) async throws -> UpdateGroupOutputResponse
    /// Updates the resource query of a group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag). Minimum permissions To run this command, you must have the following permissions:
    ///
    /// * resource-groups:UpdateGroupQuery
    func updateGroupQuery(input: UpdateGroupQueryInput) async throws -> UpdateGroupQueryOutputResponse
}

public protocol ResourceGroupsClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum ResourceGroupsClientTypes {}
