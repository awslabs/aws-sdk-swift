// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// This is the AWS HealthImaging API Reference. AWS HealthImaging is an AWS service for storing, accessing, and analyzing medical images. For an introduction to the service, see the [ AWS HealthImaging Developer Guide ](https://docs.aws.amazon.com/medical-imaging/latest/devguide). We recommend using one of the AWS Software Development Kits (SDKs) for your programming language, as they take care of request authentication, serialization, and connection management. For more information, see [Tools to build on AWS](http://aws.amazon.com/developer/tools). For information about using AWS HealthImaging API actions in one of the language-specific AWS SDKs, refer to the See Also link at the end of each section that describes an API action or data type. The following sections list AWS HealthImaging API actions categorized according to functionality. Links are provided to actions within this Reference, along with links back to corresponding sections in the AWS HealthImaging Developer Guide so you can view console procedures and CLI/SDK code examples. Data store actions
///
/// * [CreateDatastore](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_CreateDatastore.html) – See [Creating a data store](https://docs.aws.amazon.com/medical-imaging/latest/devguide/create-data-store.html).
///
/// * [GetDatastore](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetDatastore.html) – See [Getting data store properties](https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-data-store.html).
///
/// * [ListDatastores](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListDatastores.html) – See [Listing data stores](https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-data-stores.html).
///
/// * [DeleteDatastore](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_DeleteDatastore.html) – See [Deleting a data store](https://docs.aws.amazon.com/medical-imaging/latest/devguide/delete-data-store.html).
///
///
/// Import job actions
///
/// * [StartDICOMImportJob](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_StartDICOMImportJob.html) – See [Starting an import job](https://docs.aws.amazon.com/medical-imaging/latest/devguide/start-dicom-import-job.html).
///
/// * [GetDICOMImportJob](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetDICOMImportJob.html) – See [Getting import job properties](https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-dicom-import-job.html).
///
/// * [ListDICOMImportJobs](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListDICOMImportJobs.html) – See [Listing import jobs](https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-dicom-import-jobs.html).
///
///
/// Image set access actions
///
/// * [SearchImageSets](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_SearchImageSets.html) – See [Searching image sets](https://docs.aws.amazon.com/medical-imaging/latest/devguide/search-image-sets.html).
///
/// * [GetImageSet](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageSet.html) – See [Getting image set properties](https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-set-properties.html).
///
/// * [GetImageSetMetadata](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageSetMetadata.html) – See [Getting image set metadata](https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-set-metadata.html).
///
/// * [GetImageFrame](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_GetImageFrame.html) – See [Getting image set pixel data](https://docs.aws.amazon.com/medical-imaging/latest/devguide/get-image-frame.html).
///
///
/// Image set modification actions
///
/// * [ListImageSetVersions](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListImageSetVersions.html) – See [Listing image set versions](https://docs.aws.amazon.com/medical-imaging/latest/devguide/list-image-set-versions.html).
///
/// * [UpdateImageSetMetadata](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_UpdateImageSetMetadata.html) – See [Updating image set metadata](https://docs.aws.amazon.com/medical-imaging/latest/devguide/update-image-set-metadata.html).
///
/// * [CopyImageSet](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_CopyImageSet.html) – See [Copying an image set](https://docs.aws.amazon.com/medical-imaging/latest/devguide/copy-image-set.html).
///
/// * [DeleteImageSet](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_DeleteImageSet.html) – See [Deleting an image set](https://docs.aws.amazon.com/medical-imaging/latest/devguide/delete-image-set.html).
///
///
/// Tagging actions
///
/// * [TagResource](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_TagResource.html) – See [Tagging a data store](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html) and [Tagging an image set](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html).
///
/// * [ListTagsForResource](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_ListTagsForResource.html) – See [Tagging a data store](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html) and [Tagging an image set](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html).
///
/// * [UntagResource](https://docs.aws.amazon.com/medical-imaging/latest/APIReference/API_UntagResource.html) – See [Tagging a data store](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-data-store.html) and [Tagging an image set](https://docs.aws.amazon.com/medical-imaging/latest/devguide/tag-list-untag-image-set.html).
public protocol MedicalImagingClientProtocol {
    /// Copy an image set.
    func copyImageSet(input: CopyImageSetInput) async throws -> CopyImageSetOutputResponse
    /// Create a data store.
    func createDatastore(input: CreateDatastoreInput) async throws -> CreateDatastoreOutputResponse
    /// Delete a data store. Before a data store can be deleted, you must first delete all image sets within it.
    func deleteDatastore(input: DeleteDatastoreInput) async throws -> DeleteDatastoreOutputResponse
    /// Delete an image set.
    func deleteImageSet(input: DeleteImageSetInput) async throws -> DeleteImageSetOutputResponse
    /// Get data store properties.
    func getDatastore(input: GetDatastoreInput) async throws -> GetDatastoreOutputResponse
    /// Get the import job properties to learn more about the job or job progress.
    func getDICOMImportJob(input: GetDICOMImportJobInput) async throws -> GetDICOMImportJobOutputResponse
    /// Get an image frame (pixel data) for an image set.
    func getImageFrame(input: GetImageFrameInput) async throws -> GetImageFrameOutputResponse
    /// Get image set properties.
    func getImageSet(input: GetImageSetInput) async throws -> GetImageSetOutputResponse
    /// Get metadata attributes for an image set.
    func getImageSetMetadata(input: GetImageSetMetadataInput) async throws -> GetImageSetMetadataOutputResponse
    /// List data stores created by this AWS account.
    func listDatastores(input: ListDatastoresInput) async throws -> ListDatastoresOutputResponse
    /// List import jobs created by this AWS account for a specific data store.
    func listDICOMImportJobs(input: ListDICOMImportJobsInput) async throws -> ListDICOMImportJobsOutputResponse
    /// List image set versions.
    func listImageSetVersions(input: ListImageSetVersionsInput) async throws -> ListImageSetVersionsOutputResponse
    /// Lists all tags associated with a medical imaging resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Search image sets based on defined input attributes.
    func searchImageSets(input: SearchImageSetsInput) async throws -> SearchImageSetsOutputResponse
    /// Start importing bulk data into an ACTIVE data store. The import job imports DICOM P10 files found in the S3 prefix specified by the inputS3Uri parameter. The import job stores processing results in the file specified by the outputS3Uri parameter.
    func startDICOMImportJob(input: StartDICOMImportJobInput) async throws -> StartDICOMImportJobOutputResponse
    /// Adds a user-specifed key and value tag to a medical imaging resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes tags from a medical imaging resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Update image set metadata attributes.
    func updateImageSetMetadata(input: UpdateImageSetMetadataInput) async throws -> UpdateImageSetMetadataOutputResponse
}

public enum MedicalImagingClientTypes {}
