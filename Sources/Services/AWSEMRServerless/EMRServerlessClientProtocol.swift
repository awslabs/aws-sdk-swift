// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks. The API reference to Amazon EMR Serverless is emr-serverless. The emr-serverless prefix is used in the following scenarios:
///
/// * It is the prefix in the CLI commands for Amazon EMR Serverless. For example, aws emr-serverless start-job-run.
///
/// * It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, "Action": ["emr-serverless:StartJobRun"]. For more information, see [Policy actions for Amazon EMR Serverless](https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions).
///
/// * It is the prefix used in Amazon EMR Serverless service endpoints. For example, emr-serverless.us-east-2.amazonaws.com.
public protocol EMRServerlessClientProtocol {
    /// Performs the `CancelJobRun` operation on the `AwsToledoWebService` service.
    ///
    /// Cancels a job run.
    ///
    /// - Parameter CancelJobRunInput : [no documentation found]
    ///
    /// - Returns: `CancelJobRunOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func cancelJobRun(input: CancelJobRunInput) async throws -> CancelJobRunOutput
    /// Performs the `CreateApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Creates an application.
    ///
    /// - Parameter CreateApplicationInput : [no documentation found]
    ///
    /// - Returns: `CreateApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The request could not be processed because of conflict in the current state of the resource.
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func createApplication(input: CreateApplicationInput) async throws -> CreateApplicationOutput
    /// Performs the `DeleteApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Deletes an application. An application has to be in a stopped or created state in order to be deleted.
    ///
    /// - Parameter DeleteApplicationInput : [no documentation found]
    ///
    /// - Returns: `DeleteApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func deleteApplication(input: DeleteApplicationInput) async throws -> DeleteApplicationOutput
    /// Performs the `GetApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Displays detailed information about a specified application.
    ///
    /// - Parameter GetApplicationInput : [no documentation found]
    ///
    /// - Returns: `GetApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func getApplication(input: GetApplicationInput) async throws -> GetApplicationOutput
    /// Performs the `GetDashboardForJobRun` operation on the `AwsToledoWebService` service.
    ///
    /// Creates and returns a URL that you can use to access the application UIs for a job run. For jobs in a running state, the application UI is a live user interface such as the Spark or Tez web UI. For completed jobs, the application UI is a persistent application user interface such as the Spark History Server or persistent Tez UI. The URL is valid for one hour after you generate it. To access the application UI after that hour elapses, you must invoke the API again to generate a new URL.
    ///
    /// - Parameter GetDashboardForJobRunInput : [no documentation found]
    ///
    /// - Returns: `GetDashboardForJobRunOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func getDashboardForJobRun(input: GetDashboardForJobRunInput) async throws -> GetDashboardForJobRunOutput
    /// Performs the `GetJobRun` operation on the `AwsToledoWebService` service.
    ///
    /// Displays detailed information about a job run.
    ///
    /// - Parameter GetJobRunInput : [no documentation found]
    ///
    /// - Returns: `GetJobRunOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func getJobRun(input: GetJobRunInput) async throws -> GetJobRunOutput
    /// Performs the `ListApplications` operation on the `AwsToledoWebService` service.
    ///
    /// Lists applications based on a set of parameters.
    ///
    /// - Parameter ListApplicationsInput : [no documentation found]
    ///
    /// - Returns: `ListApplicationsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func listApplications(input: ListApplicationsInput) async throws -> ListApplicationsOutput
    /// Performs the `ListJobRuns` operation on the `AwsToledoWebService` service.
    ///
    /// Lists job runs based on a set of parameters.
    ///
    /// - Parameter ListJobRunsInput : [no documentation found]
    ///
    /// - Returns: `ListJobRunsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func listJobRuns(input: ListJobRunsInput) async throws -> ListJobRunsOutput
    /// Performs the `ListTagsForResource` operation on the `AwsToledoWebService` service.
    ///
    /// Lists the tags assigned to the resources.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutput
    /// Performs the `StartApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Starts a specified application and initializes initial capacity if configured.
    ///
    /// - Parameter StartApplicationInput : [no documentation found]
    ///
    /// - Returns: `StartApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ServiceQuotaExceededException` : The maximum number of resources per account has been reached.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func startApplication(input: StartApplicationInput) async throws -> StartApplicationOutput
    /// Performs the `StartJobRun` operation on the `AwsToledoWebService` service.
    ///
    /// Starts a job run.
    ///
    /// - Parameter StartJobRunInput : [no documentation found]
    ///
    /// - Returns: `StartJobRunOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The request could not be processed because of conflict in the current state of the resource.
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func startJobRun(input: StartJobRunInput) async throws -> StartJobRunOutput
    /// Performs the `StopApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Stops a specified application and releases initial capacity if configured. All scheduled and running jobs must be completed or cancelled before stopping an application.
    ///
    /// - Parameter StopApplicationInput : [no documentation found]
    ///
    /// - Returns: `StopApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func stopApplication(input: StopApplicationInput) async throws -> StopApplicationOutput
    /// Performs the `TagResource` operation on the `AwsToledoWebService` service.
    ///
    /// Assigns tags to resources. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize your Amazon Web Services resources by attributes such as purpose, owner, or environment. When you have many resources of the same type, you can quickly identify a specific resource based on the tags you've assigned to it.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutput
    /// Performs the `UntagResource` operation on the `AwsToledoWebService` service.
    ///
    /// Removes tags from resources.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutput
    /// Performs the `UpdateApplication` operation on the `AwsToledoWebService` service.
    ///
    /// Updates a specified application. An application has to be in a stopped or created state in order to be updated.
    ///
    /// - Parameter UpdateApplicationInput : [no documentation found]
    ///
    /// - Returns: `UpdateApplicationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : Request processing failed because of an error or failure with the service.
    /// - `ResourceNotFoundException` : The specified resource was not found.
    /// - `ValidationException` : The input fails to satisfy the constraints specified by an Amazon Web Services service.
    func updateApplication(input: UpdateApplicationInput) async throws -> UpdateApplicationOutput
}

public enum EMRServerlessClientTypes {}
