// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.
public protocol DataBrewClientProtocol {
    /// Deletes one or more versions of a recipe at a time. The entire request will be rejected if:
    ///
    /// * The recipe does not exist.
    ///
    /// * There is an invalid version identifier in the list of versions.
    ///
    /// * The version list is empty.
    ///
    /// * The version list size exceeds 50.
    ///
    /// * The version list contains duplicate entries.
    ///
    ///
    /// The request will complete successfully, but with partial failures, if:
    ///
    /// * A version does not exist.
    ///
    /// * A version is being used by a job.
    ///
    /// * You specify LATEST_WORKING, but it's being used by a project.
    ///
    /// * The version fails to be deleted.
    ///
    ///
    /// The LATEST_WORKING version will only be deleted if the recipe has no other versions. If you try to delete LATEST_WORKING while other versions exist (or if they can't be deleted), then LATEST_WORKING will be listed as partial failure in the response.
    func batchDeleteRecipeVersion(input: BatchDeleteRecipeVersionInput) async throws -> BatchDeleteRecipeVersionOutputResponse
    /// Creates a new DataBrew dataset.
    func createDataset(input: CreateDatasetInput) async throws -> CreateDatasetOutputResponse
    /// Creates a new job to analyze a dataset and create its data profile.
    func createProfileJob(input: CreateProfileJobInput) async throws -> CreateProfileJobOutputResponse
    /// Creates a new DataBrew project.
    func createProject(input: CreateProjectInput) async throws -> CreateProjectOutputResponse
    /// Creates a new DataBrew recipe.
    func createRecipe(input: CreateRecipeInput) async throws -> CreateRecipeOutputResponse
    /// Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe
    func createRecipeJob(input: CreateRecipeJobInput) async throws -> CreateRecipeJobOutputResponse
    /// Creates a new ruleset that can be used in a profile job to validate the data quality of a dataset.
    func createRuleset(input: CreateRulesetInput) async throws -> CreateRulesetOutputResponse
    /// Creates a new schedule for one or more DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.
    func createSchedule(input: CreateScheduleInput) async throws -> CreateScheduleOutputResponse
    /// Deletes a dataset from DataBrew.
    func deleteDataset(input: DeleteDatasetInput) async throws -> DeleteDatasetOutputResponse
    /// Deletes the specified DataBrew job.
    func deleteJob(input: DeleteJobInput) async throws -> DeleteJobOutputResponse
    /// Deletes an existing DataBrew project.
    func deleteProject(input: DeleteProjectInput) async throws -> DeleteProjectOutputResponse
    /// Deletes a single version of a DataBrew recipe.
    func deleteRecipeVersion(input: DeleteRecipeVersionInput) async throws -> DeleteRecipeVersionOutputResponse
    /// Deletes a ruleset.
    func deleteRuleset(input: DeleteRulesetInput) async throws -> DeleteRulesetOutputResponse
    /// Deletes the specified DataBrew schedule.
    func deleteSchedule(input: DeleteScheduleInput) async throws -> DeleteScheduleOutputResponse
    /// Returns the definition of a specific DataBrew dataset.
    func describeDataset(input: DescribeDatasetInput) async throws -> DescribeDatasetOutputResponse
    /// Returns the definition of a specific DataBrew job.
    func describeJob(input: DescribeJobInput) async throws -> DescribeJobOutputResponse
    /// Represents one run of a DataBrew job.
    func describeJobRun(input: DescribeJobRunInput) async throws -> DescribeJobRunOutputResponse
    /// Returns the definition of a specific DataBrew project.
    func describeProject(input: DescribeProjectInput) async throws -> DescribeProjectOutputResponse
    /// Returns the definition of a specific DataBrew recipe corresponding to a particular version.
    func describeRecipe(input: DescribeRecipeInput) async throws -> DescribeRecipeOutputResponse
    /// Retrieves detailed information about the ruleset.
    func describeRuleset(input: DescribeRulesetInput) async throws -> DescribeRulesetOutputResponse
    /// Returns the definition of a specific DataBrew schedule.
    func describeSchedule(input: DescribeScheduleInput) async throws -> DescribeScheduleOutputResponse
    /// Lists all of the DataBrew datasets.
    func listDatasets(input: ListDatasetsInput) async throws -> ListDatasetsOutputResponse
    /// Lists all of the previous runs of a particular DataBrew job.
    func listJobRuns(input: ListJobRunsInput) async throws -> ListJobRunsOutputResponse
    /// Lists all of the DataBrew jobs that are defined.
    func listJobs(input: ListJobsInput) async throws -> ListJobsOutputResponse
    /// Lists all of the DataBrew projects that are defined.
    func listProjects(input: ListProjectsInput) async throws -> ListProjectsOutputResponse
    /// Lists all of the DataBrew recipes that are defined.
    func listRecipes(input: ListRecipesInput) async throws -> ListRecipesOutputResponse
    /// Lists the versions of a particular DataBrew recipe, except for LATEST_WORKING.
    func listRecipeVersions(input: ListRecipeVersionsInput) async throws -> ListRecipeVersionsOutputResponse
    /// List all rulesets available in the current account or rulesets associated with a specific resource (dataset).
    func listRulesets(input: ListRulesetsInput) async throws -> ListRulesetsOutputResponse
    /// Lists the DataBrew schedules that are defined.
    func listSchedules(input: ListSchedulesInput) async throws -> ListSchedulesOutputResponse
    /// Lists all the tags for a DataBrew resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Publishes a new version of a DataBrew recipe.
    func publishRecipe(input: PublishRecipeInput) async throws -> PublishRecipeOutputResponse
    /// Performs a recipe step within an interactive DataBrew session that's currently open.
    func sendProjectSessionAction(input: SendProjectSessionActionInput) async throws -> SendProjectSessionActionOutputResponse
    /// Runs a DataBrew job.
    func startJobRun(input: StartJobRunInput) async throws -> StartJobRunOutputResponse
    /// Creates an interactive session, enabling you to manipulate data in a DataBrew project.
    func startProjectSession(input: StartProjectSessionInput) async throws -> StartProjectSessionOutputResponse
    /// Stops a particular run of a job.
    func stopJobRun(input: StopJobRunInput) async throws -> StopJobRunOutputResponse
    /// Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes metadata tags from a DataBrew resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Modifies the definition of an existing DataBrew dataset.
    func updateDataset(input: UpdateDatasetInput) async throws -> UpdateDatasetOutputResponse
    /// Modifies the definition of an existing profile job.
    func updateProfileJob(input: UpdateProfileJobInput) async throws -> UpdateProfileJobOutputResponse
    /// Modifies the definition of an existing DataBrew project.
    func updateProject(input: UpdateProjectInput) async throws -> UpdateProjectOutputResponse
    /// Modifies the definition of the LATEST_WORKING version of a DataBrew recipe.
    func updateRecipe(input: UpdateRecipeInput) async throws -> UpdateRecipeOutputResponse
    /// Modifies the definition of an existing DataBrew recipe job.
    func updateRecipeJob(input: UpdateRecipeJobInput) async throws -> UpdateRecipeJobOutputResponse
    /// Updates specified ruleset.
    func updateRuleset(input: UpdateRulesetInput) async throws -> UpdateRulesetOutputResponse
    /// Modifies the definition of an existing DataBrew schedule.
    func updateSchedule(input: UpdateScheduleInput) async throws -> UpdateScheduleOutputResponse
}

public enum DataBrewClientTypes {}
