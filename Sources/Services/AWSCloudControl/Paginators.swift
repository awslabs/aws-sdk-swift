// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension CloudControlClient {
    /// Paginate over `[ListResourceRequestsOutputResponse]` results.
    ///
    /// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
    /// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
    /// until then. If there are errors in your request, you will see the failures only after you start iterating.
    /// - Parameters:
    ///     - input: A `[ListResourceRequestsInput]` to start pagination
    /// - Returns: An `AsyncSequence` that can iterate over `ListResourceRequestsOutputResponse`
    public func listResourceRequestsPaginated(input: ListResourceRequestsInput) -> ClientRuntime.PaginatorSequence<ListResourceRequestsInput, ListResourceRequestsOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListResourceRequestsInput, ListResourceRequestsOutputResponse>(input: input, inputKey: \ListResourceRequestsInput.nextToken, outputKey: \ListResourceRequestsOutputResponse.nextToken, paginationFunction: self.listResourceRequests(input:))
    }
}

extension ListResourceRequestsInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListResourceRequestsInput {
        return ListResourceRequestsInput(
            maxResults: self.maxResults,
            nextToken: token,
            resourceRequestStatusFilter: self.resourceRequestStatusFilter
        )}
}

extension PaginatorSequence where Input == ListResourceRequestsInput, Output == ListResourceRequestsOutputResponse {
    /// This paginator transforms the `AsyncSequence` returned by `listResourceRequestsPaginated`
    /// to access the nested member `[CloudControlClientTypes.ProgressEvent]`
    /// - Returns: `[CloudControlClientTypes.ProgressEvent]`
    public func resourceRequestStatusSummaries() async throws -> [CloudControlClientTypes.ProgressEvent] {
        return try await self.asyncCompactMap { item in item.resourceRequestStatusSummaries }
    }
}
extension CloudControlClient {
    /// Paginate over `[ListResourcesOutputResponse]` results.
    ///
    /// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
    /// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
    /// until then. If there are errors in your request, you will see the failures only after you start iterating.
    /// - Parameters:
    ///     - input: A `[ListResourcesInput]` to start pagination
    /// - Returns: An `AsyncSequence` that can iterate over `ListResourcesOutputResponse`
    public func listResourcesPaginated(input: ListResourcesInput) -> ClientRuntime.PaginatorSequence<ListResourcesInput, ListResourcesOutputResponse> {
        return ClientRuntime.PaginatorSequence<ListResourcesInput, ListResourcesOutputResponse>(input: input, inputKey: \ListResourcesInput.nextToken, outputKey: \ListResourcesOutputResponse.nextToken, paginationFunction: self.listResources(input:))
    }
}

extension ListResourcesInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListResourcesInput {
        return ListResourcesInput(
            maxResults: self.maxResults,
            nextToken: token,
            resourceModel: self.resourceModel,
            roleArn: self.roleArn,
            typeName: self.typeName,
            typeVersionId: self.typeVersionId
        )}
}

extension PaginatorSequence where Input == ListResourcesInput, Output == ListResourcesOutputResponse {
    /// This paginator transforms the `AsyncSequence` returned by `listResourcesPaginated`
    /// to access the nested member `[CloudControlClientTypes.ResourceDescription]`
    /// - Returns: `[CloudControlClientTypes.ResourceDescription]`
    public func resourceDescriptions() async throws -> [CloudControlClientTypes.ResourceDescription] {
        return try await self.asyncCompactMap { item in item.resourceDescriptions }
    }
}
