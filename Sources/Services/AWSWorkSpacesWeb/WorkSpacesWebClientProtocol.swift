// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// WorkSpaces Web is a low cost, fully managed WorkSpace built specifically to facilitate secure, web-based workloads. WorkSpaces Web makes it easy for customers to safely provide their employees with access to internal websites and SaaS web applications without the administrative burden of appliances or specialized client software. WorkSpaces Web provides simple policy tools tailored for user interactions, while offloading common tasks like capacity management, scaling, and maintaining browser images.
public protocol WorkSpacesWebClientProtocol {
    /// Associates a browser settings resource with a web portal.
    func associateBrowserSettings(input: AssociateBrowserSettingsInput) async throws -> AssociateBrowserSettingsOutputResponse
    /// Associates a network settings resource with a web portal.
    func associateNetworkSettings(input: AssociateNetworkSettingsInput) async throws -> AssociateNetworkSettingsOutputResponse
    /// Associates a trust store with a web portal.
    func associateTrustStore(input: AssociateTrustStoreInput) async throws -> AssociateTrustStoreOutputResponse
    /// Associates a user access logging settings resource with a web portal.
    func associateUserAccessLoggingSettings(input: AssociateUserAccessLoggingSettingsInput) async throws -> AssociateUserAccessLoggingSettingsOutputResponse
    /// Associates a user settings resource with a web portal.
    func associateUserSettings(input: AssociateUserSettingsInput) async throws -> AssociateUserSettingsOutputResponse
    /// Creates a browser settings resource that can be associated with a web portal. Once associated with a web portal, browser settings control how the browser will behave once a user starts a streaming session for the web portal.
    func createBrowserSettings(input: CreateBrowserSettingsInput) async throws -> CreateBrowserSettingsOutputResponse
    /// Creates an identity provider resource that is then associated with a web portal.
    func createIdentityProvider(input: CreateIdentityProviderInput) async throws -> CreateIdentityProviderOutputResponse
    /// Creates a network settings resource that can be associated with a web portal. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC.
    func createNetworkSettings(input: CreateNetworkSettingsInput) async throws -> CreateNetworkSettingsOutputResponse
    /// Creates a web portal.
    func createPortal(input: CreatePortalInput) async throws -> CreatePortalOutputResponse
    /// Creates a trust store that can be associated with a web portal. A trust store contains certificate authority (CA) certificates. Once associated with a web portal, the browser in a streaming session will recognize certificates that have been issued using any of the CAs in the trust store. If your organization has internal websites that use certificates issued by private CAs, you should add the private CA certificate to the trust store.
    func createTrustStore(input: CreateTrustStoreInput) async throws -> CreateTrustStoreOutputResponse
    /// Creates a user access logging settings resource that can be associated with a web portal.
    func createUserAccessLoggingSettings(input: CreateUserAccessLoggingSettingsInput) async throws -> CreateUserAccessLoggingSettingsOutputResponse
    /// Creates a user settings resource that can be associated with a web portal. Once associated with a web portal, user settings control how users can transfer data between a streaming session and the their local devices.
    func createUserSettings(input: CreateUserSettingsInput) async throws -> CreateUserSettingsOutputResponse
    /// Deletes browser settings.
    func deleteBrowserSettings(input: DeleteBrowserSettingsInput) async throws -> DeleteBrowserSettingsOutputResponse
    /// Deletes the identity provider.
    func deleteIdentityProvider(input: DeleteIdentityProviderInput) async throws -> DeleteIdentityProviderOutputResponse
    /// Deletes network settings.
    func deleteNetworkSettings(input: DeleteNetworkSettingsInput) async throws -> DeleteNetworkSettingsOutputResponse
    /// Deletes a web portal.
    func deletePortal(input: DeletePortalInput) async throws -> DeletePortalOutputResponse
    /// Deletes the trust store.
    func deleteTrustStore(input: DeleteTrustStoreInput) async throws -> DeleteTrustStoreOutputResponse
    /// Deletes user access logging settings.
    func deleteUserAccessLoggingSettings(input: DeleteUserAccessLoggingSettingsInput) async throws -> DeleteUserAccessLoggingSettingsOutputResponse
    /// Deletes user settings.
    func deleteUserSettings(input: DeleteUserSettingsInput) async throws -> DeleteUserSettingsOutputResponse
    /// Disassociates browser settings from a web portal.
    func disassociateBrowserSettings(input: DisassociateBrowserSettingsInput) async throws -> DisassociateBrowserSettingsOutputResponse
    /// Disassociates network settings from a web portal.
    func disassociateNetworkSettings(input: DisassociateNetworkSettingsInput) async throws -> DisassociateNetworkSettingsOutputResponse
    /// Disassociates a trust store from a web portal.
    func disassociateTrustStore(input: DisassociateTrustStoreInput) async throws -> DisassociateTrustStoreOutputResponse
    /// Disassociates user access logging settings from a web portal.
    func disassociateUserAccessLoggingSettings(input: DisassociateUserAccessLoggingSettingsInput) async throws -> DisassociateUserAccessLoggingSettingsOutputResponse
    /// Disassociates user settings from a web portal.
    func disassociateUserSettings(input: DisassociateUserSettingsInput) async throws -> DisassociateUserSettingsOutputResponse
    /// Gets browser settings.
    func getBrowserSettings(input: GetBrowserSettingsInput) async throws -> GetBrowserSettingsOutputResponse
    /// Gets the identity provider.
    func getIdentityProvider(input: GetIdentityProviderInput) async throws -> GetIdentityProviderOutputResponse
    /// Gets the network settings.
    func getNetworkSettings(input: GetNetworkSettingsInput) async throws -> GetNetworkSettingsOutputResponse
    /// Gets the web portal.
    func getPortal(input: GetPortalInput) async throws -> GetPortalOutputResponse
    /// Gets the service provider metadata.
    func getPortalServiceProviderMetadata(input: GetPortalServiceProviderMetadataInput) async throws -> GetPortalServiceProviderMetadataOutputResponse
    /// Gets the trust store.
    func getTrustStore(input: GetTrustStoreInput) async throws -> GetTrustStoreOutputResponse
    /// Gets the trust store certificate.
    func getTrustStoreCertificate(input: GetTrustStoreCertificateInput) async throws -> GetTrustStoreCertificateOutputResponse
    /// Gets user access logging settings.
    func getUserAccessLoggingSettings(input: GetUserAccessLoggingSettingsInput) async throws -> GetUserAccessLoggingSettingsOutputResponse
    /// Gets user settings.
    func getUserSettings(input: GetUserSettingsInput) async throws -> GetUserSettingsOutputResponse
    /// Retrieves a list of browser settings.
    func listBrowserSettings(input: ListBrowserSettingsInput) async throws -> ListBrowserSettingsOutputResponse
    /// Retrieves a list of identity providers for a specific web portal.
    func listIdentityProviders(input: ListIdentityProvidersInput) async throws -> ListIdentityProvidersOutputResponse
    /// Retrieves a list of network settings.
    func listNetworkSettings(input: ListNetworkSettingsInput) async throws -> ListNetworkSettingsOutputResponse
    /// Retrieves a list or web portals.
    func listPortals(input: ListPortalsInput) async throws -> ListPortalsOutputResponse
    /// Retrieves a list of tags for a resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Retrieves a list of trust store certificates.
    func listTrustStoreCertificates(input: ListTrustStoreCertificatesInput) async throws -> ListTrustStoreCertificatesOutputResponse
    /// Retrieves a list of trust stores.
    func listTrustStores(input: ListTrustStoresInput) async throws -> ListTrustStoresOutputResponse
    /// Retrieves a list of user access logging settings.
    func listUserAccessLoggingSettings(input: ListUserAccessLoggingSettingsInput) async throws -> ListUserAccessLoggingSettingsOutputResponse
    /// Retrieves a list of user settings.
    func listUserSettings(input: ListUserSettingsInput) async throws -> ListUserSettingsOutputResponse
    /// Adds or overwrites one or more tags for the specified resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes one or more tags from the specified resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates browser settings.
    func updateBrowserSettings(input: UpdateBrowserSettingsInput) async throws -> UpdateBrowserSettingsOutputResponse
    /// Updates the identity provider.
    func updateIdentityProvider(input: UpdateIdentityProviderInput) async throws -> UpdateIdentityProviderOutputResponse
    /// Updates network settings.
    func updateNetworkSettings(input: UpdateNetworkSettingsInput) async throws -> UpdateNetworkSettingsOutputResponse
    /// Updates a web portal.
    func updatePortal(input: UpdatePortalInput) async throws -> UpdatePortalOutputResponse
    /// Updates the trust store.
    func updateTrustStore(input: UpdateTrustStoreInput) async throws -> UpdateTrustStoreOutputResponse
    /// Updates the user access logging settings.
    func updateUserAccessLoggingSettings(input: UpdateUserAccessLoggingSettingsInput) async throws -> UpdateUserAccessLoggingSettingsOutputResponse
    /// Updates the user settings.
    func updateUserSettings(input: UpdateUserSettingsInput) async throws -> UpdateUserSettingsOutputResponse
}

public protocol WorkSpacesWebClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum WorkSpacesWebClientTypes {}
