// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// This is the Amazon Omics API Reference. For an introduction to the service, see [What is Amazon Omics?](https://docs.aws.amazon.com/omics/latest/dev/) in the Amazon Omics Developer Guide.
public protocol OmicsClientProtocol {
    /// Deletes one or more read sets.
    func batchDeleteReadSet(input: BatchDeleteReadSetInput) async throws -> BatchDeleteReadSetOutputResponse
    /// Cancels an annotation import job.
    func cancelAnnotationImportJob(input: CancelAnnotationImportJobInput) async throws -> CancelAnnotationImportJobOutputResponse
    /// Cancels a run.
    func cancelRun(input: CancelRunInput) async throws -> CancelRunOutputResponse
    /// Cancels a variant import job.
    func cancelVariantImportJob(input: CancelVariantImportJobInput) async throws -> CancelVariantImportJobOutputResponse
    /// Creates an annotation store.
    func createAnnotationStore(input: CreateAnnotationStoreInput) async throws -> CreateAnnotationStoreOutputResponse
    /// Creates a reference store.
    func createReferenceStore(input: CreateReferenceStoreInput) async throws -> CreateReferenceStoreOutputResponse
    /// Creates a run group.
    func createRunGroup(input: CreateRunGroupInput) async throws -> CreateRunGroupOutputResponse
    /// Creates a sequence store.
    func createSequenceStore(input: CreateSequenceStoreInput) async throws -> CreateSequenceStoreOutputResponse
    /// Creates a variant store.
    func createVariantStore(input: CreateVariantStoreInput) async throws -> CreateVariantStoreOutputResponse
    /// Creates a workflow.
    func createWorkflow(input: CreateWorkflowInput) async throws -> CreateWorkflowOutputResponse
    /// Deletes an annotation store.
    func deleteAnnotationStore(input: DeleteAnnotationStoreInput) async throws -> DeleteAnnotationStoreOutputResponse
    /// Deletes a genome reference.
    func deleteReference(input: DeleteReferenceInput) async throws -> DeleteReferenceOutputResponse
    /// Deletes a genome reference store.
    func deleteReferenceStore(input: DeleteReferenceStoreInput) async throws -> DeleteReferenceStoreOutputResponse
    /// Deletes a workflow run.
    func deleteRun(input: DeleteRunInput) async throws -> DeleteRunOutputResponse
    /// Deletes a workflow run group.
    func deleteRunGroup(input: DeleteRunGroupInput) async throws -> DeleteRunGroupOutputResponse
    /// Deletes a sequence store.
    func deleteSequenceStore(input: DeleteSequenceStoreInput) async throws -> DeleteSequenceStoreOutputResponse
    /// Deletes a variant store.
    func deleteVariantStore(input: DeleteVariantStoreInput) async throws -> DeleteVariantStoreOutputResponse
    /// Deletes a workflow.
    func deleteWorkflow(input: DeleteWorkflowInput) async throws -> DeleteWorkflowOutputResponse
    /// Gets information about an annotation import job.
    func getAnnotationImportJob(input: GetAnnotationImportJobInput) async throws -> GetAnnotationImportJobOutputResponse
    /// Gets information about an annotation store.
    func getAnnotationStore(input: GetAnnotationStoreInput) async throws -> GetAnnotationStoreOutputResponse
    /// Gets a file from a read set.
    func getReadSet(input: GetReadSetInput) async throws -> GetReadSetOutputResponse
    /// Gets information about a read set activation job.
    func getReadSetActivationJob(input: GetReadSetActivationJobInput) async throws -> GetReadSetActivationJobOutputResponse
    /// Gets information about a read set export job.
    func getReadSetExportJob(input: GetReadSetExportJobInput) async throws -> GetReadSetExportJobOutputResponse
    /// Gets information about a read set import job.
    func getReadSetImportJob(input: GetReadSetImportJobInput) async throws -> GetReadSetImportJobOutputResponse
    /// Gets details about a read set.
    func getReadSetMetadata(input: GetReadSetMetadataInput) async throws -> GetReadSetMetadataOutputResponse
    /// Gets a reference file.
    func getReference(input: GetReferenceInput) async throws -> GetReferenceOutputResponse
    /// Gets information about a reference import job.
    func getReferenceImportJob(input: GetReferenceImportJobInput) async throws -> GetReferenceImportJobOutputResponse
    /// Gets information about a genome reference's metadata.
    func getReferenceMetadata(input: GetReferenceMetadataInput) async throws -> GetReferenceMetadataOutputResponse
    /// Gets information about a reference store.
    func getReferenceStore(input: GetReferenceStoreInput) async throws -> GetReferenceStoreOutputResponse
    /// Gets information about a workflow run.
    func getRun(input: GetRunInput) async throws -> GetRunOutputResponse
    /// Gets information about a workflow run group.
    func getRunGroup(input: GetRunGroupInput) async throws -> GetRunGroupOutputResponse
    /// Gets information about a workflow run task.
    func getRunTask(input: GetRunTaskInput) async throws -> GetRunTaskOutputResponse
    /// Gets information about a sequence store.
    func getSequenceStore(input: GetSequenceStoreInput) async throws -> GetSequenceStoreOutputResponse
    /// Gets information about a variant import job.
    func getVariantImportJob(input: GetVariantImportJobInput) async throws -> GetVariantImportJobOutputResponse
    /// Gets information about a variant store.
    func getVariantStore(input: GetVariantStoreInput) async throws -> GetVariantStoreOutputResponse
    /// Gets information about a workflow.
    func getWorkflow(input: GetWorkflowInput) async throws -> GetWorkflowOutputResponse
    /// Retrieves a list of annotation import jobs.
    func listAnnotationImportJobs(input: ListAnnotationImportJobsInput) async throws -> ListAnnotationImportJobsOutputResponse
    /// Retrieves a list of annotation stores.
    func listAnnotationStores(input: ListAnnotationStoresInput) async throws -> ListAnnotationStoresOutputResponse
    /// Retrieves a list of read set activation jobs.
    func listReadSetActivationJobs(input: ListReadSetActivationJobsInput) async throws -> ListReadSetActivationJobsOutputResponse
    /// Retrieves a list of read set export jobs.
    func listReadSetExportJobs(input: ListReadSetExportJobsInput) async throws -> ListReadSetExportJobsOutputResponse
    /// Retrieves a list of read set import jobs.
    func listReadSetImportJobs(input: ListReadSetImportJobsInput) async throws -> ListReadSetImportJobsOutputResponse
    /// Retrieves a list of read sets.
    func listReadSets(input: ListReadSetsInput) async throws -> ListReadSetsOutputResponse
    /// Retrieves a list of reference import jobs.
    func listReferenceImportJobs(input: ListReferenceImportJobsInput) async throws -> ListReferenceImportJobsOutputResponse
    /// Retrieves a list of references.
    func listReferences(input: ListReferencesInput) async throws -> ListReferencesOutputResponse
    /// Retrieves a list of reference stores.
    func listReferenceStores(input: ListReferenceStoresInput) async throws -> ListReferenceStoresOutputResponse
    /// Retrieves a list of run groups.
    func listRunGroups(input: ListRunGroupsInput) async throws -> ListRunGroupsOutputResponse
    /// Retrieves a list of runs.
    func listRuns(input: ListRunsInput) async throws -> ListRunsOutputResponse
    /// Retrieves a list of tasks for a run.
    func listRunTasks(input: ListRunTasksInput) async throws -> ListRunTasksOutputResponse
    /// Retrieves a list of sequence stores.
    func listSequenceStores(input: ListSequenceStoresInput) async throws -> ListSequenceStoresOutputResponse
    /// Retrieves a list of tags for a resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Retrieves a list of variant import jobs.
    func listVariantImportJobs(input: ListVariantImportJobsInput) async throws -> ListVariantImportJobsOutputResponse
    /// Retrieves a list of variant stores.
    func listVariantStores(input: ListVariantStoresInput) async throws -> ListVariantStoresOutputResponse
    /// Retrieves a list of workflows.
    func listWorkflows(input: ListWorkflowsInput) async throws -> ListWorkflowsOutputResponse
    /// Starts an annotation import job.
    func startAnnotationImportJob(input: StartAnnotationImportJobInput) async throws -> StartAnnotationImportJobOutputResponse
    /// Starts a read set activation job.
    func startReadSetActivationJob(input: StartReadSetActivationJobInput) async throws -> StartReadSetActivationJobOutputResponse
    /// Starts a read set export job.
    func startReadSetExportJob(input: StartReadSetExportJobInput) async throws -> StartReadSetExportJobOutputResponse
    /// Starts a read set import job.
    func startReadSetImportJob(input: StartReadSetImportJobInput) async throws -> StartReadSetImportJobOutputResponse
    /// Starts a reference import job.
    func startReferenceImportJob(input: StartReferenceImportJobInput) async throws -> StartReferenceImportJobOutputResponse
    /// Starts a run.
    func startRun(input: StartRunInput) async throws -> StartRunOutputResponse
    /// Starts a variant import job.
    func startVariantImportJob(input: StartVariantImportJobInput) async throws -> StartVariantImportJobOutputResponse
    /// Tags a resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes tags from a resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates an annotation store.
    func updateAnnotationStore(input: UpdateAnnotationStoreInput) async throws -> UpdateAnnotationStoreOutputResponse
    /// Updates a run group.
    func updateRunGroup(input: UpdateRunGroupInput) async throws -> UpdateRunGroupOutputResponse
    /// Updates a variant store.
    func updateVariantStore(input: UpdateVariantStoreInput) async throws -> UpdateVariantStoreOutputResponse
    /// Updates a workflow.
    func updateWorkflow(input: UpdateWorkflowInput) async throws -> UpdateWorkflowOutputResponse
}

public protocol OmicsClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum OmicsClientTypes {}
