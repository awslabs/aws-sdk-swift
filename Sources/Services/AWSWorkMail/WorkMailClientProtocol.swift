// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or other native iOS and Android email applications. You can integrate WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored. The WorkMail API is designed for the following scenarios:
///
/// * Listing and describing organizations
///
///
///
///
/// * Managing users
///
///
///
///
/// * Managing groups
///
///
///
///
/// * Managing resources
///
///
/// All WorkMail API operations are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the WorkMail site, the IAM user gains full administrative visibility into the entire WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.
public protocol WorkMailClientProtocol {
    /// Adds a member (user or group) to the resource's set of delegates.
    ///
    /// - Parameter AssociateDelegateToResourceInput : [no documentation found]
    ///
    /// - Returns: `AssociateDelegateToResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func associateDelegateToResource(input: AssociateDelegateToResourceInput) async throws -> AssociateDelegateToResourceOutput
    /// Adds a member (user or group) to the group's set.
    ///
    /// - Parameter AssociateMemberToGroupInput : [no documentation found]
    ///
    /// - Returns: `AssociateMemberToGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func associateMemberToGroup(input: AssociateMemberToGroupInput) async throws -> AssociateMemberToGroupOutput
    /// Assumes an impersonation role for the given WorkMail organization. This method returns an authentication token you can use to make impersonated calls.
    ///
    /// - Parameter AssumeImpersonationRoleInput : [no documentation found]
    ///
    /// - Returns: `AssumeImpersonationRoleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func assumeImpersonationRole(input: AssumeImpersonationRoleInput) async throws -> AssumeImpersonationRoleOutput
    /// Cancels a mailbox export job. If the mailbox export job is near completion, it might not be possible to cancel it.
    ///
    /// - Parameter CancelMailboxExportJobInput : [no documentation found]
    ///
    /// - Returns: `CancelMailboxExportJobOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func cancelMailboxExportJob(input: CancelMailboxExportJobInput) async throws -> CancelMailboxExportJobOutput
    /// Adds an alias to the set of a given member (user or group) of WorkMail.
    ///
    /// - Parameter CreateAliasInput : [no documentation found]
    ///
    /// - Returns: `CreateAliasOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EmailAddressInUseException` : The email address that you're trying to assign is already created for a different user, group, or resource.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `MailDomainStateException` : After a domain has been added to the organization, it must be verified. The domain is not yet verified.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func createAlias(input: CreateAliasInput) async throws -> CreateAliasOutput
    /// Creates an AvailabilityConfiguration for the given WorkMail organization and domain.
    ///
    /// - Parameter CreateAvailabilityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `CreateAvailabilityConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func createAvailabilityConfiguration(input: CreateAvailabilityConfigurationInput) async throws -> CreateAvailabilityConfigurationOutput
    /// Creates a group that can be used in WorkMail by calling the [RegisterToWorkMail] operation.
    ///
    /// - Parameter CreateGroupInput : [no documentation found]
    ///
    /// - Returns: `CreateGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ReservedNameException` : This user, group, or resource name is not allowed in WorkMail.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func createGroup(input: CreateGroupInput) async throws -> CreateGroupOutput
    /// Creates an impersonation role for the given WorkMail organization. Idempotency ensures that an API request completes no more than one time. With an idempotent request, if the original request completes successfully, any subsequent retries also complete successfully without performing any further actions.
    ///
    /// - Parameter CreateImpersonationRoleInput : [no documentation found]
    ///
    /// - Returns: `CreateImpersonationRoleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func createImpersonationRole(input: CreateImpersonationRoleInput) async throws -> CreateImpersonationRoleOutput
    /// Creates a new mobile device access rule for the specified WorkMail organization.
    ///
    /// - Parameter CreateMobileDeviceAccessRuleInput : [no documentation found]
    ///
    /// - Returns: `CreateMobileDeviceAccessRuleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func createMobileDeviceAccessRule(input: CreateMobileDeviceAccessRuleInput) async throws -> CreateMobileDeviceAccessRuleOutput
    /// Creates a new WorkMail organization. Optionally, you can choose to associate an existing AWS Directory Service directory with your organization. If an AWS Directory Service directory ID is specified, the organization alias must match the directory alias. If you choose not to associate an existing directory with your organization, then we create a new WorkMail directory for you. For more information, see [Adding an organization](https://docs.aws.amazon.com/workmail/latest/adminguide/add_new_organization.html) in the WorkMail Administrator Guide. You can associate multiple email domains with an organization, then choose your default email domain from the WorkMail console. You can also associate a domain that is managed in an Amazon Route 53 public hosted zone. For more information, see [Adding a domain](https://docs.aws.amazon.com/workmail/latest/adminguide/add_domain.html) and [Choosing the default domain](https://docs.aws.amazon.com/workmail/latest/adminguide/default_domain.html) in the WorkMail Administrator Guide. Optionally, you can use a customer managed key from AWS Key Management Service (AWS KMS) to encrypt email for your organization. If you don't associate an AWS KMS key, WorkMail creates a default, AWS managed key for you.
    ///
    /// - Parameter CreateOrganizationInput : [no documentation found]
    ///
    /// - Returns: `CreateOrganizationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryInUseException` : The directory is already in use by another WorkMail organization in the same account and Region.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    func createOrganization(input: CreateOrganizationInput) async throws -> CreateOrganizationOutput
    /// Creates a new WorkMail resource.
    ///
    /// - Parameter CreateResourceInput : [no documentation found]
    ///
    /// - Returns: `CreateResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ReservedNameException` : This user, group, or resource name is not allowed in WorkMail.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func createResource(input: CreateResourceInput) async throws -> CreateResourceOutput
    /// Creates a user who can be used in WorkMail by calling the [RegisterToWorkMail] operation.
    ///
    /// - Parameter CreateUserInput : [no documentation found]
    ///
    /// - Returns: `CreateUserOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `InvalidPasswordException` : The supplied password doesn't match the minimum security constraints, such as length or use of special characters.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ReservedNameException` : This user, group, or resource name is not allowed in WorkMail.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func createUser(input: CreateUserInput) async throws -> CreateUserOutput
    /// Deletes an access control rule for the specified WorkMail organization. Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.
    ///
    /// - Parameter DeleteAccessControlRuleInput : [no documentation found]
    ///
    /// - Returns: `DeleteAccessControlRuleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteAccessControlRule(input: DeleteAccessControlRuleInput) async throws -> DeleteAccessControlRuleOutput
    /// Remove one or more specified aliases from a set of aliases for a given user.
    ///
    /// - Parameter DeleteAliasInput : [no documentation found]
    ///
    /// - Returns: `DeleteAliasOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteAlias(input: DeleteAliasInput) async throws -> DeleteAliasOutput
    /// Deletes the AvailabilityConfiguration for the given WorkMail organization and domain.
    ///
    /// - Parameter DeleteAvailabilityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DeleteAvailabilityConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteAvailabilityConfiguration(input: DeleteAvailabilityConfigurationInput) async throws -> DeleteAvailabilityConfigurationOutput
    /// Deletes the email monitoring configuration for a specified organization.
    ///
    /// - Parameter DeleteEmailMonitoringConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DeleteEmailMonitoringConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteEmailMonitoringConfiguration(input: DeleteEmailMonitoringConfigurationInput) async throws -> DeleteEmailMonitoringConfigurationOutput
    /// Deletes a group from WorkMail.
    ///
    /// - Parameter DeleteGroupInput : [no documentation found]
    ///
    /// - Returns: `DeleteGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func deleteGroup(input: DeleteGroupInput) async throws -> DeleteGroupOutput
    /// Deletes an impersonation role for the given WorkMail organization.
    ///
    /// - Parameter DeleteImpersonationRoleInput : [no documentation found]
    ///
    /// - Returns: `DeleteImpersonationRoleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteImpersonationRole(input: DeleteImpersonationRoleInput) async throws -> DeleteImpersonationRoleOutput
    /// Deletes permissions granted to a member (user or group).
    ///
    /// - Parameter DeleteMailboxPermissionsInput : [no documentation found]
    ///
    /// - Returns: `DeleteMailboxPermissionsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteMailboxPermissions(input: DeleteMailboxPermissionsInput) async throws -> DeleteMailboxPermissionsOutput
    /// Deletes the mobile device access override for the given WorkMail organization, user, and device. Deleting already deleted and non-existing overrides does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.
    ///
    /// - Parameter DeleteMobileDeviceAccessOverrideInput : [no documentation found]
    ///
    /// - Returns: `DeleteMobileDeviceAccessOverrideOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteMobileDeviceAccessOverride(input: DeleteMobileDeviceAccessOverrideInput) async throws -> DeleteMobileDeviceAccessOverrideOutput
    /// Deletes a mobile device access rule for the specified WorkMail organization. Deleting already deleted and non-existing rules does not produce an error. In those cases, the service sends back an HTTP 200 response with an empty HTTP body.
    ///
    /// - Parameter DeleteMobileDeviceAccessRuleInput : [no documentation found]
    ///
    /// - Returns: `DeleteMobileDeviceAccessRuleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteMobileDeviceAccessRule(input: DeleteMobileDeviceAccessRuleInput) async throws -> DeleteMobileDeviceAccessRuleOutput
    /// Deletes an WorkMail organization and all underlying AWS resources managed by WorkMail as part of the organization. You can choose whether to delete the associated directory. For more information, see [Removing an organization](https://docs.aws.amazon.com/workmail/latest/adminguide/remove_organization.html) in the WorkMail Administrator Guide.
    ///
    /// - Parameter DeleteOrganizationInput : [no documentation found]
    ///
    /// - Returns: `DeleteOrganizationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteOrganization(input: DeleteOrganizationInput) async throws -> DeleteOrganizationOutput
    /// Deletes the specified resource.
    ///
    /// - Parameter DeleteResourceInput : [no documentation found]
    ///
    /// - Returns: `DeleteResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func deleteResource(input: DeleteResourceInput) async throws -> DeleteResourceOutput
    /// Deletes the specified retention policy from the specified organization.
    ///
    /// - Parameter DeleteRetentionPolicyInput : [no documentation found]
    ///
    /// - Returns: `DeleteRetentionPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deleteRetentionPolicy(input: DeleteRetentionPolicyInput) async throws -> DeleteRetentionPolicyOutput
    /// Deletes a user from WorkMail and all subsequent systems. Before you can delete a user, the user state must be DISABLED. Use the [DescribeUser] action to confirm the user state. Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes for 30 days before they are permanently removed.
    ///
    /// - Parameter DeleteUserInput : [no documentation found]
    ///
    /// - Returns: `DeleteUserOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func deleteUser(input: DeleteUserInput) async throws -> DeleteUserOutput
    /// Mark a user, group, or resource as no longer used in WorkMail. This action disassociates the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days before they are permanently removed. The functionality in the console is Disable.
    ///
    /// - Parameter DeregisterFromWorkMailInput : [no documentation found]
    ///
    /// - Returns: `DeregisterFromWorkMailOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deregisterFromWorkMail(input: DeregisterFromWorkMailInput) async throws -> DeregisterFromWorkMailOutput
    /// Removes a domain from WorkMail, stops email routing to WorkMail, and removes the authorization allowing WorkMail use. SES keeps the domain because other applications may use it. You must first remove any email address used by WorkMail entities before you remove the domain.
    ///
    /// - Parameter DeregisterMailDomainInput : [no documentation found]
    ///
    /// - Returns: `DeregisterMailDomainOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidCustomSesConfigurationException` : You SES configuration has customizations that WorkMail cannot save. The error message lists the invalid setting. For examples of invalid settings, refer to [CreateReceiptRule](https://docs.aws.amazon.com/ses/latest/APIReference/API_CreateReceiptRule.html).
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainInUseException` : The domain you're trying to change is in use by another user or organization in your account. See the error message for details.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func deregisterMailDomain(input: DeregisterMailDomainInput) async throws -> DeregisterMailDomainOutput
    /// Describes the current email monitoring configuration for a specified organization.
    ///
    /// - Parameter DescribeEmailMonitoringConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DescribeEmailMonitoringConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func describeEmailMonitoringConfiguration(input: DescribeEmailMonitoringConfigurationInput) async throws -> DescribeEmailMonitoringConfigurationOutput
    /// Returns basic details about an entity in WorkMail.
    ///
    /// - Parameter DescribeEntityInput : [no documentation found]
    ///
    /// - Returns: `DescribeEntityOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func describeEntity(input: DescribeEntityInput) async throws -> DescribeEntityOutput
    /// Returns the data available for the group.
    ///
    /// - Parameter DescribeGroupInput : [no documentation found]
    ///
    /// - Returns: `DescribeGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func describeGroup(input: DescribeGroupInput) async throws -> DescribeGroupOutput
    /// Lists the settings in a DMARC policy for a specified organization.
    ///
    /// - Parameter DescribeInboundDmarcSettingsInput : [no documentation found]
    ///
    /// - Returns: `DescribeInboundDmarcSettingsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func describeInboundDmarcSettings(input: DescribeInboundDmarcSettingsInput) async throws -> DescribeInboundDmarcSettingsOutput
    /// Describes the current status of a mailbox export job.
    ///
    /// - Parameter DescribeMailboxExportJobInput : [no documentation found]
    ///
    /// - Returns: `DescribeMailboxExportJobOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func describeMailboxExportJob(input: DescribeMailboxExportJobInput) async throws -> DescribeMailboxExportJobOutput
    /// Provides more information regarding a given organization based on its identifier.
    ///
    /// - Parameter DescribeOrganizationInput : [no documentation found]
    ///
    /// - Returns: `DescribeOrganizationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    func describeOrganization(input: DescribeOrganizationInput) async throws -> DescribeOrganizationOutput
    /// Returns the data available for the resource.
    ///
    /// - Parameter DescribeResourceInput : [no documentation found]
    ///
    /// - Returns: `DescribeResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func describeResource(input: DescribeResourceInput) async throws -> DescribeResourceOutput
    /// Provides information regarding the user.
    ///
    /// - Parameter DescribeUserInput : [no documentation found]
    ///
    /// - Returns: `DescribeUserOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func describeUser(input: DescribeUserInput) async throws -> DescribeUserOutput
    /// Removes a member from the resource's set of delegates.
    ///
    /// - Parameter DisassociateDelegateFromResourceInput : [no documentation found]
    ///
    /// - Returns: `DisassociateDelegateFromResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func disassociateDelegateFromResource(input: DisassociateDelegateFromResourceInput) async throws -> DisassociateDelegateFromResourceOutput
    /// Removes a member from a group.
    ///
    /// - Parameter DisassociateMemberFromGroupInput : [no documentation found]
    ///
    /// - Returns: `DisassociateMemberFromGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func disassociateMemberFromGroup(input: DisassociateMemberFromGroupInput) async throws -> DisassociateMemberFromGroupOutput
    /// Gets the effects of an organization's access control rules as they apply to a specified IPv4 address, access protocol action, and user ID or impersonation role ID. You must provide either the user ID or impersonation role ID. Impersonation role ID can only be used with Action EWS.
    ///
    /// - Parameter GetAccessControlEffectInput : [no documentation found]
    ///
    /// - Returns: `GetAccessControlEffectOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func getAccessControlEffect(input: GetAccessControlEffectInput) async throws -> GetAccessControlEffectOutput
    /// Gets the default retention policy details for the specified organization.
    ///
    /// - Parameter GetDefaultRetentionPolicyInput : [no documentation found]
    ///
    /// - Returns: `GetDefaultRetentionPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func getDefaultRetentionPolicy(input: GetDefaultRetentionPolicyInput) async throws -> GetDefaultRetentionPolicyOutput
    /// Gets the impersonation role details for the given WorkMail organization.
    ///
    /// - Parameter GetImpersonationRoleInput : [no documentation found]
    ///
    /// - Returns: `GetImpersonationRoleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func getImpersonationRole(input: GetImpersonationRoleInput) async throws -> GetImpersonationRoleOutput
    /// Tests whether the given impersonation role can impersonate a target user.
    ///
    /// - Parameter GetImpersonationRoleEffectInput : [no documentation found]
    ///
    /// - Returns: `GetImpersonationRoleEffectOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func getImpersonationRoleEffect(input: GetImpersonationRoleEffectInput) async throws -> GetImpersonationRoleEffectOutput
    /// Requests a user's mailbox details for a specified organization and user.
    ///
    /// - Parameter GetMailboxDetailsInput : [no documentation found]
    ///
    /// - Returns: `GetMailboxDetailsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func getMailboxDetails(input: GetMailboxDetailsInput) async throws -> GetMailboxDetailsOutput
    /// Gets details for a mail domain, including domain records required to configure your domain with recommended security.
    ///
    /// - Parameter GetMailDomainInput : [no documentation found]
    ///
    /// - Returns: `GetMailDomainOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func getMailDomain(input: GetMailDomainInput) async throws -> GetMailDomainOutput
    /// Simulates the effect of the mobile device access rules for the given attributes of a sample access event. Use this method to test the effects of the current set of mobile device access rules for the WorkMail organization for a particular user's attributes.
    ///
    /// - Parameter GetMobileDeviceAccessEffectInput : [no documentation found]
    ///
    /// - Returns: `GetMobileDeviceAccessEffectOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func getMobileDeviceAccessEffect(input: GetMobileDeviceAccessEffectInput) async throws -> GetMobileDeviceAccessEffectOutput
    /// Gets the mobile device access override for the given WorkMail organization, user, and device.
    ///
    /// - Parameter GetMobileDeviceAccessOverrideInput : [no documentation found]
    ///
    /// - Returns: `GetMobileDeviceAccessOverrideOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func getMobileDeviceAccessOverride(input: GetMobileDeviceAccessOverrideInput) async throws -> GetMobileDeviceAccessOverrideOutput
    /// Lists the access control rules for the specified organization.
    ///
    /// - Parameter ListAccessControlRulesInput : [no documentation found]
    ///
    /// - Returns: `ListAccessControlRulesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listAccessControlRules(input: ListAccessControlRulesInput) async throws -> ListAccessControlRulesOutput
    /// Creates a paginated call to list the aliases associated with a given entity.
    ///
    /// - Parameter ListAliasesInput : [no documentation found]
    ///
    /// - Returns: `ListAliasesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listAliases(input: ListAliasesInput) async throws -> ListAliasesOutput
    /// List all the AvailabilityConfiguration's for the given WorkMail organization.
    ///
    /// - Parameter ListAvailabilityConfigurationsInput : [no documentation found]
    ///
    /// - Returns: `ListAvailabilityConfigurationsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listAvailabilityConfigurations(input: ListAvailabilityConfigurationsInput) async throws -> ListAvailabilityConfigurationsOutput
    /// Returns an overview of the members of a group. Users and groups can be members of a group.
    ///
    /// - Parameter ListGroupMembersInput : [no documentation found]
    ///
    /// - Returns: `ListGroupMembersOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listGroupMembers(input: ListGroupMembersInput) async throws -> ListGroupMembersOutput
    /// Returns summaries of the organization's groups.
    ///
    /// - Parameter ListGroupsInput : [no documentation found]
    ///
    /// - Returns: `ListGroupsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listGroups(input: ListGroupsInput) async throws -> ListGroupsOutput
    /// Returns all the groups to which an entity belongs.
    ///
    /// - Parameter ListGroupsForEntityInput : [no documentation found]
    ///
    /// - Returns: `ListGroupsForEntityOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listGroupsForEntity(input: ListGroupsForEntityInput) async throws -> ListGroupsForEntityOutput
    /// Lists all the impersonation roles for the given WorkMail organization.
    ///
    /// - Parameter ListImpersonationRolesInput : [no documentation found]
    ///
    /// - Returns: `ListImpersonationRolesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listImpersonationRoles(input: ListImpersonationRolesInput) async throws -> ListImpersonationRolesOutput
    /// Lists the mailbox export jobs started for the specified organization within the last seven days.
    ///
    /// - Parameter ListMailboxExportJobsInput : [no documentation found]
    ///
    /// - Returns: `ListMailboxExportJobsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listMailboxExportJobs(input: ListMailboxExportJobsInput) async throws -> ListMailboxExportJobsOutput
    /// Lists the mailbox permissions associated with a user, group, or resource mailbox.
    ///
    /// - Parameter ListMailboxPermissionsInput : [no documentation found]
    ///
    /// - Returns: `ListMailboxPermissionsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listMailboxPermissions(input: ListMailboxPermissionsInput) async throws -> ListMailboxPermissionsOutput
    /// Lists the mail domains in a given WorkMail organization.
    ///
    /// - Parameter ListMailDomainsInput : [no documentation found]
    ///
    /// - Returns: `ListMailDomainsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listMailDomains(input: ListMailDomainsInput) async throws -> ListMailDomainsOutput
    /// Lists all the mobile device access overrides for any given combination of WorkMail organization, user, or device.
    ///
    /// - Parameter ListMobileDeviceAccessOverridesInput : [no documentation found]
    ///
    /// - Returns: `ListMobileDeviceAccessOverridesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listMobileDeviceAccessOverrides(input: ListMobileDeviceAccessOverridesInput) async throws -> ListMobileDeviceAccessOverridesOutput
    /// Lists the mobile device access rules for the specified WorkMail organization.
    ///
    /// - Parameter ListMobileDeviceAccessRulesInput : [no documentation found]
    ///
    /// - Returns: `ListMobileDeviceAccessRulesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listMobileDeviceAccessRules(input: ListMobileDeviceAccessRulesInput) async throws -> ListMobileDeviceAccessRulesOutput
    /// Returns summaries of the customer's organizations.
    ///
    /// - Parameter ListOrganizationsInput : [no documentation found]
    ///
    /// - Returns: `ListOrganizationsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    func listOrganizations(input: ListOrganizationsInput) async throws -> ListOrganizationsOutput
    /// Lists the delegates associated with a resource. Users and groups can be resource delegates and answer requests on behalf of the resource.
    ///
    /// - Parameter ListResourceDelegatesInput : [no documentation found]
    ///
    /// - Returns: `ListResourceDelegatesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func listResourceDelegates(input: ListResourceDelegatesInput) async throws -> ListResourceDelegatesOutput
    /// Returns summaries of the organization's resources.
    ///
    /// - Parameter ListResourcesInput : [no documentation found]
    ///
    /// - Returns: `ListResourcesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func listResources(input: ListResourcesInput) async throws -> ListResourcesOutput
    /// Lists the tags applied to an WorkMail organization resource.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutput
    /// Returns summaries of the organization's users.
    ///
    /// - Parameter ListUsersInput : [no documentation found]
    ///
    /// - Returns: `ListUsersOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func listUsers(input: ListUsersInput) async throws -> ListUsersOutput
    /// Adds a new access control rule for the specified organization. The rule allows or denies access to the organization for the specified IPv4 addresses, access protocol actions, user IDs and impersonation IDs. Adding a new rule with the same name as an existing rule replaces the older rule.
    ///
    /// - Parameter PutAccessControlRuleInput : [no documentation found]
    ///
    /// - Returns: `PutAccessControlRuleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func putAccessControlRule(input: PutAccessControlRuleInput) async throws -> PutAccessControlRuleOutput
    /// Creates or updates the email monitoring configuration for a specified organization.
    ///
    /// - Parameter PutEmailMonitoringConfigurationInput : [no documentation found]
    ///
    /// - Returns: `PutEmailMonitoringConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func putEmailMonitoringConfiguration(input: PutEmailMonitoringConfigurationInput) async throws -> PutEmailMonitoringConfigurationOutput
    /// Enables or disables a DMARC policy for a given organization.
    ///
    /// - Parameter PutInboundDmarcSettingsInput : [no documentation found]
    ///
    /// - Returns: `PutInboundDmarcSettingsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func putInboundDmarcSettings(input: PutInboundDmarcSettingsInput) async throws -> PutInboundDmarcSettingsOutput
    /// Sets permissions for a user, group, or resource. This replaces any pre-existing permissions.
    ///
    /// - Parameter PutMailboxPermissionsInput : [no documentation found]
    ///
    /// - Returns: `PutMailboxPermissionsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func putMailboxPermissions(input: PutMailboxPermissionsInput) async throws -> PutMailboxPermissionsOutput
    /// Creates or updates a mobile device access override for the given WorkMail organization, user, and device.
    ///
    /// - Parameter PutMobileDeviceAccessOverrideInput : [no documentation found]
    ///
    /// - Returns: `PutMobileDeviceAccessOverrideOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func putMobileDeviceAccessOverride(input: PutMobileDeviceAccessOverrideInput) async throws -> PutMobileDeviceAccessOverrideOutput
    /// Puts a retention policy to the specified organization.
    ///
    /// - Parameter PutRetentionPolicyInput : [no documentation found]
    ///
    /// - Returns: `PutRetentionPolicyOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func putRetentionPolicy(input: PutRetentionPolicyInput) async throws -> PutRetentionPolicyOutput
    /// Registers a new domain in WorkMail and SES, and configures it for use by WorkMail. Emails received by SES for this domain are routed to the specified WorkMail organization, and WorkMail has permanent permission to use the specified domain for sending your users' emails.
    ///
    /// - Parameter RegisterMailDomainInput : [no documentation found]
    ///
    /// - Returns: `RegisterMailDomainOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `MailDomainInUseException` : The domain you're trying to change is in use by another user or organization in your account. See the error message for details.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func registerMailDomain(input: RegisterMailDomainInput) async throws -> RegisterMailDomainOutput
    /// Registers an existing and disabled user, group, or resource for WorkMail use by associating a mailbox and calendaring capabilities. It performs no change if the user, group, or resource is enabled and fails if the user, group, or resource is deleted. This operation results in the accumulation of costs. For more information, see [Pricing](https://aws.amazon.com/workmail/pricing). The equivalent console functionality for this operation is Enable. Users can either be created by calling the [CreateUser] API operation or they can be synchronized from your directory. For more information, see [DeregisterFromWorkMail].
    ///
    /// - Parameter RegisterToWorkMailInput : [no documentation found]
    ///
    /// - Returns: `RegisterToWorkMailOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EmailAddressInUseException` : The email address that you're trying to assign is already created for a different user, group, or resource.
    /// - `EntityAlreadyRegisteredException` : The user, group, or resource that you're trying to register is already registered.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `MailDomainStateException` : After a domain has been added to the organization, it must be verified. The domain is not yet verified.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func registerToWorkMail(input: RegisterToWorkMailInput) async throws -> RegisterToWorkMailOutput
    /// Allows the administrator to reset the password for a user.
    ///
    /// - Parameter ResetPasswordInput : [no documentation found]
    ///
    /// - Returns: `ResetPasswordOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `InvalidPasswordException` : The supplied password doesn't match the minimum security constraints, such as length or use of special characters.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func resetPassword(input: ResetPasswordInput) async throws -> ResetPasswordOutput
    /// Starts a mailbox export job to export MIME-format email messages and calendar items from the specified mailbox to the specified Amazon Simple Storage Service (Amazon S3) bucket. For more information, see [Exporting mailbox content](https://docs.aws.amazon.com/workmail/latest/adminguide/mail-export.html) in the WorkMail Administrator Guide.
    ///
    /// - Parameter StartMailboxExportJobInput : [no documentation found]
    ///
    /// - Returns: `StartMailboxExportJobOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func startMailboxExportJob(input: StartMailboxExportJobInput) async throws -> StartMailboxExportJobOutput
    /// Applies the specified tags to the specified WorkMailorganization resource.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    /// - `TooManyTagsException` : The resource can have up to 50 user-applied tags.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutput
    /// Performs a test on an availability provider to ensure that access is allowed. For EWS, it verifies the provided credentials can be used to successfully log in. For Lambda, it verifies that the Lambda function can be invoked and that the resource access policy was configured to deny anonymous access. An anonymous invocation is one done without providing either a SourceArn or SourceAccount header. The request must contain either one provider definition (EwsProvider or LambdaProvider) or the DomainName parameter. If the DomainName parameter is provided, the configuration stored under the DomainName will be tested.
    ///
    /// - Parameter TestAvailabilityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `TestAvailabilityConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func testAvailabilityConfiguration(input: TestAvailabilityConfigurationInput) async throws -> TestAvailabilityConfigurationOutput
    /// Untags the specified tags from the specified WorkMail organization resource.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutput
    /// Updates an existing AvailabilityConfiguration for the given WorkMail organization and domain.
    ///
    /// - Parameter UpdateAvailabilityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `UpdateAvailabilityConfigurationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func updateAvailabilityConfiguration(input: UpdateAvailabilityConfigurationInput) async throws -> UpdateAvailabilityConfigurationOutput
    /// Updates the default mail domain for an organization. The default mail domain is used by the WorkMail AWS Console to suggest an email address when enabling a mail user. You can only have one default domain.
    ///
    /// - Parameter UpdateDefaultMailDomainInput : [no documentation found]
    ///
    /// - Returns: `UpdateDefaultMailDomainOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `MailDomainStateException` : After a domain has been added to the organization, it must be verified. The domain is not yet verified.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func updateDefaultMailDomain(input: UpdateDefaultMailDomainInput) async throws -> UpdateDefaultMailDomainOutput
    /// Updates attibutes in a group.
    ///
    /// - Parameter UpdateGroupInput : [no documentation found]
    ///
    /// - Returns: `UpdateGroupOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func updateGroup(input: UpdateGroupInput) async throws -> UpdateGroupOutput
    /// Updates an impersonation role for the given WorkMail organization.
    ///
    /// - Parameter UpdateImpersonationRoleInput : [no documentation found]
    ///
    /// - Returns: `UpdateImpersonationRoleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `LimitExceededException` : The request exceeds the limit of the resource.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `ResourceNotFoundException` : The resource cannot be found.
    func updateImpersonationRole(input: UpdateImpersonationRoleInput) async throws -> UpdateImpersonationRoleOutput
    /// Updates a user's current mailbox quota for a specified organization and user.
    ///
    /// - Parameter UpdateMailboxQuotaInput : [no documentation found]
    ///
    /// - Returns: `UpdateMailboxQuotaOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func updateMailboxQuota(input: UpdateMailboxQuotaInput) async throws -> UpdateMailboxQuotaOutput
    /// Updates a mobile device access rule for the specified WorkMail organization.
    ///
    /// - Parameter UpdateMobileDeviceAccessRuleInput : [no documentation found]
    ///
    /// - Returns: `UpdateMobileDeviceAccessRuleOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    func updateMobileDeviceAccessRule(input: UpdateMobileDeviceAccessRuleInput) async throws -> UpdateMobileDeviceAccessRuleOutput
    /// Updates the primary email for a user, group, or resource. The current email is moved into the list of aliases (or swapped between an existing alias and the current primary email), and the email provided in the input is promoted as the primary.
    ///
    /// - Parameter UpdatePrimaryEmailAddressInput : [no documentation found]
    ///
    /// - Returns: `UpdatePrimaryEmailAddressOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EmailAddressInUseException` : The email address that you're trying to assign is already created for a different user, group, or resource.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `MailDomainStateException` : After a domain has been added to the organization, it must be verified. The domain is not yet verified.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func updatePrimaryEmailAddress(input: UpdatePrimaryEmailAddressInput) async throws -> UpdatePrimaryEmailAddressOutput
    /// Updates data for the resource. To have the latest information, it must be preceded by a [DescribeResource] call. The dataset in the request should be the one expected when performing another DescribeResource call.
    ///
    /// - Parameter UpdateResourceInput : [no documentation found]
    ///
    /// - Returns: `UpdateResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EmailAddressInUseException` : The email address that you're trying to assign is already created for a different user, group, or resource.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidConfigurationException` : The configuration for a resource isn't valid. A resource must either be able to auto-respond to requests or have at least one delegate associated that can do so on its behalf.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `MailDomainNotFoundException` : The domain specified is not found in your organization.
    /// - `MailDomainStateException` : After a domain has been added to the organization, it must be verified. The domain is not yet verified.
    /// - `NameAvailabilityException` : The user, group, or resource name isn't unique in WorkMail.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func updateResource(input: UpdateResourceInput) async throws -> UpdateResourceOutput
    /// Updates data for the user. To have the latest information, it must be preceded by a [DescribeUser] call. The dataset in the request should be the one expected when performing another DescribeUser call.
    ///
    /// - Parameter UpdateUserInput : [no documentation found]
    ///
    /// - Returns: `UpdateUserOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `DirectoryServiceAuthenticationFailedException` : The directory service doesn't recognize the credentials supplied by WorkMail.
    /// - `DirectoryUnavailableException` : The directory is unavailable. It might be located in another Region or deleted.
    /// - `EntityNotFoundException` : The identifier supplied for the user, group, or resource does not exist in your organization.
    /// - `EntityStateException` : You are performing an operation on a user, group, or resource that isn't in the expected state, such as trying to delete an active user.
    /// - `InvalidParameterException` : One or more of the input parameters don't match the service's restrictions.
    /// - `OrganizationNotFoundException` : An operation received a valid organization identifier that either doesn't belong or exist in the system.
    /// - `OrganizationStateException` : The organization must have a valid state to perform certain operations on the organization or its members.
    /// - `UnsupportedOperationException` : You can't perform a write operation against a read-only directory.
    func updateUser(input: UpdateUserInput) async throws -> UpdateUserOutput
}

public enum WorkMailClientTypes {}
