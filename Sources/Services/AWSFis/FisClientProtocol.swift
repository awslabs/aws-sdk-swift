// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Fault Injection Simulator is a managed service that enables you to perform fault injection experiments on your Amazon Web Services workloads. For more information, see the [Fault Injection Simulator User Guide](https://docs.aws.amazon.com/fis/latest/userguide/).
public protocol FisClientProtocol {
    /// Creates an experiment template. An experiment template includes the following components:
    ///
    /// * Targets: A target can be a specific resource in your Amazon Web Services environment, or one or more resources that match criteria that you specify, for example, resources that have specific tags.
    ///
    /// * Actions: The actions to carry out on the target. You can specify multiple actions, the duration of each action, and when to start each action during an experiment.
    ///
    /// * Stop conditions: If a stop condition is triggered while an experiment is running, the experiment is automatically stopped. You can define a stop condition as a CloudWatch alarm.
    ///
    ///
    /// For more information, see [Experiment templates](https://docs.aws.amazon.com/fis/latest/userguide/experiment-templates.html) in the Fault Injection Simulator User Guide.
    func createExperimentTemplate(input: CreateExperimentTemplateInput) async throws -> CreateExperimentTemplateOutputResponse
    /// Deletes the specified experiment template.
    func deleteExperimentTemplate(input: DeleteExperimentTemplateInput) async throws -> DeleteExperimentTemplateOutputResponse
    /// Gets information about the specified FIS action.
    func getAction(input: GetActionInput) async throws -> GetActionOutputResponse
    /// Gets information about the specified experiment.
    func getExperiment(input: GetExperimentInput) async throws -> GetExperimentOutputResponse
    /// Gets information about the specified experiment template.
    func getExperimentTemplate(input: GetExperimentTemplateInput) async throws -> GetExperimentTemplateOutputResponse
    /// Gets information about the specified resource type.
    func getTargetResourceType(input: GetTargetResourceTypeInput) async throws -> GetTargetResourceTypeOutputResponse
    /// Lists the available FIS actions.
    func listActions(input: ListActionsInput) async throws -> ListActionsOutputResponse
    /// Lists your experiments.
    func listExperiments(input: ListExperimentsInput) async throws -> ListExperimentsOutputResponse
    /// Lists your experiment templates.
    func listExperimentTemplates(input: ListExperimentTemplatesInput) async throws -> ListExperimentTemplatesOutputResponse
    /// Lists the tags for the specified resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Lists the target resource types.
    func listTargetResourceTypes(input: ListTargetResourceTypesInput) async throws -> ListTargetResourceTypesOutputResponse
    /// Starts running an experiment from the specified experiment template.
    func startExperiment(input: StartExperimentInput) async throws -> StartExperimentOutputResponse
    /// Stops the specified experiment.
    func stopExperiment(input: StopExperimentInput) async throws -> StopExperimentOutputResponse
    /// Applies the specified tags to the specified resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes the specified tags from the specified resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates the specified experiment template.
    func updateExperimentTemplate(input: UpdateExperimentTemplateInput) async throws -> UpdateExperimentTemplateOutputResponse
}

public enum FisClientTypes {}
