// Code generated by smithy-swift-codegen. DO NOT EDIT!

import AWSClientRuntime
import ClientRuntime

/// Cloud Map With Cloud Map, you can configure public DNS, private DNS, or HTTP namespaces that your microservice applications run in. When an instance becomes available, you can call the Cloud Map API to register the instance with Cloud Map. For public or private DNS namespaces, Cloud Map automatically creates DNS records and an optional health check. Clients that submit public or private DNS queries, or HTTP requests, for the service receive an answer that contains up to eight healthy records.
public protocol ServiceDiscoveryClientProtocol {
    /// Creates an HTTP namespace. Service instances registered using an HTTP namespace can be discovered using a DiscoverInstances request but can't be discovered using DNS. For the current quota on the number of namespaces that you can create using the same Amazon Web Services account, see [Cloud Map quotas](https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html) in the Cloud Map Developer Guide.
    func createHttpNamespace(input: CreateHttpNamespaceInput) async throws -> CreateHttpNamespaceOutputResponse
    /// Creates a private namespace based on DNS, which is visible only inside a specified Amazon VPC. The namespace defines your service naming scheme. For example, if you name your namespace example.com and name your service backend, the resulting DNS name for the service is backend.example.com. Service instances that are registered using a private DNS namespace can be discovered using either a DiscoverInstances request or using DNS. For the current quota on the number of namespaces that you can create using the same Amazon Web Services account, see [Cloud Map quotas](https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html) in the Cloud Map Developer Guide.
    func createPrivateDnsNamespace(input: CreatePrivateDnsNamespaceInput) async throws -> CreatePrivateDnsNamespaceOutputResponse
    /// Creates a public namespace based on DNS, which is visible on the internet. The namespace defines your service naming scheme. For example, if you name your namespace example.com and name your service backend, the resulting DNS name for the service is backend.example.com. You can discover instances that were registered with a public DNS namespace by using either a DiscoverInstances request or using DNS. For the current quota on the number of namespaces that you can create using the same Amazon Web Services account, see [Cloud Map quotas](https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html) in the Cloud Map Developer Guide. The CreatePublicDnsNamespace API operation is not supported in the Amazon Web Services GovCloud (US) Regions.
    func createPublicDnsNamespace(input: CreatePublicDnsNamespaceInput) async throws -> CreatePublicDnsNamespaceOutputResponse
    /// Creates a service. This action defines the configuration for the following entities:
    ///
    /// * For public and private DNS namespaces, one of the following combinations of DNS records in Amazon Route 53:
    ///
    /// * A
    ///
    /// * AAAA
    ///
    /// * A and AAAA
    ///
    /// * SRV
    ///
    /// * CNAME
    ///
    ///
    ///
    ///
    /// * Optionally, a health check
    ///
    ///
    /// After you create the service, you can submit a [RegisterInstance](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html) request, and Cloud Map uses the values in the configuration to create the specified entities. For the current quota on the number of instances that you can register using the same namespace and using the same service, see [Cloud Map quotas](https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html) in the Cloud Map Developer Guide.
    func createService(input: CreateServiceInput) async throws -> CreateServiceOutputResponse
    /// Deletes a namespace from the current account. If the namespace still contains one or more services, the request fails.
    func deleteNamespace(input: DeleteNamespaceInput) async throws -> DeleteNamespaceOutputResponse
    /// Deletes a specified service. If the service still contains one or more registered instances, the request fails.
    func deleteService(input: DeleteServiceInput) async throws -> DeleteServiceOutputResponse
    /// Deletes the Amazon Route 53 DNS records and health check, if any, that Cloud Map created for the specified instance.
    func deregisterInstance(input: DeregisterInstanceInput) async throws -> DeregisterInstanceOutputResponse
    /// Discovers registered instances for a specified namespace and service. You can use DiscoverInstances to discover instances for any type of namespace. For public and private DNS namespaces, you can also use DNS queries to discover instances.
    func discoverInstances(input: DiscoverInstancesInput) async throws -> DiscoverInstancesOutputResponse
    /// Gets information about a specified instance.
    func getInstance(input: GetInstanceInput) async throws -> GetInstanceOutputResponse
    /// Gets the current health status (Healthy, Unhealthy, or Unknown) of one or more instances that are associated with a specified service. There's a brief delay between when you register an instance and when the health status for the instance is available.
    func getInstancesHealthStatus(input: GetInstancesHealthStatusInput) async throws -> GetInstancesHealthStatusOutputResponse
    /// Gets information about a namespace.
    func getNamespace(input: GetNamespaceInput) async throws -> GetNamespaceOutputResponse
    /// Gets information about any operation that returns an operation ID in the response, such as a CreateService request. To get a list of operations that match specified criteria, see [ListOperations](https://docs.aws.amazon.com/cloud-map/latest/api/API_ListOperations.html).
    func getOperation(input: GetOperationInput) async throws -> GetOperationOutputResponse
    /// Gets the settings for a specified service.
    func getService(input: GetServiceInput) async throws -> GetServiceOutputResponse
    /// Lists summary information about the instances that you registered by using a specified service.
    func listInstances(input: ListInstancesInput) async throws -> ListInstancesOutputResponse
    /// Lists summary information about the namespaces that were created by the current Amazon Web Services account.
    func listNamespaces(input: ListNamespacesInput) async throws -> ListNamespacesOutputResponse
    /// Lists operations that match the criteria that you specify.
    func listOperations(input: ListOperationsInput) async throws -> ListOperationsOutputResponse
    /// Lists summary information for all the services that are associated with one or more specified namespaces.
    func listServices(input: ListServicesInput) async throws -> ListServicesOutputResponse
    /// Lists tags for the specified resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Creates or updates one or more records and, optionally, creates a health check based on the settings in a specified service. When you submit a RegisterInstance request, the following occurs:
    ///
    /// * For each DNS record that you define in the service that's specified by ServiceId, a record is created or updated in the hosted zone that's associated with the corresponding namespace.
    ///
    /// * If the service includes HealthCheckConfig, a health check is created based on the settings in the health check configuration.
    ///
    /// * The health check, if any, is associated with each of the new or updated records.
    ///
    ///
    /// One RegisterInstance request must complete before you can submit another request and specify the same service ID and instance ID. For more information, see [CreateService](https://docs.aws.amazon.com/cloud-map/latest/api/API_CreateService.html). When Cloud Map receives a DNS query for the specified DNS name, it returns the applicable value:
    ///
    /// * If the health check is healthy: returns all the records
    ///
    /// * If the health check is unhealthy: returns the applicable value for the last healthy instance
    ///
    /// * If you didn't specify a health check configuration: returns all the records
    ///
    ///
    /// For the current quota on the number of instances that you can register using the same namespace and using the same service, see [Cloud Map quotas](https://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html) in the Cloud Map Developer Guide.
    func registerInstance(input: RegisterInstanceInput) async throws -> RegisterInstanceOutputResponse
    /// Adds one or more tags to the specified resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes one or more tags from the specified resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates an HTTP namespace.
    func updateHttpNamespace(input: UpdateHttpNamespaceInput) async throws -> UpdateHttpNamespaceOutputResponse
    /// Submits a request to change the health status of a custom health check to healthy or unhealthy. You can use UpdateInstanceCustomHealthStatus to change the status only for custom health checks, which you define using HealthCheckCustomConfig when you create a service. You can't use it to change the status for Route 53 health checks, which you define using HealthCheckConfig. For more information, see [HealthCheckCustomConfig](https://docs.aws.amazon.com/cloud-map/latest/api/API_HealthCheckCustomConfig.html).
    func updateInstanceCustomHealthStatus(input: UpdateInstanceCustomHealthStatusInput) async throws -> UpdateInstanceCustomHealthStatusOutputResponse
    /// Updates a private DNS namespace.
    func updatePrivateDnsNamespace(input: UpdatePrivateDnsNamespaceInput) async throws -> UpdatePrivateDnsNamespaceOutputResponse
    /// Updates a public DNS namespace.
    func updatePublicDnsNamespace(input: UpdatePublicDnsNamespaceInput) async throws -> UpdatePublicDnsNamespaceOutputResponse
    /// Submits a request to perform the following operations:
    ///
    /// * Update the TTL setting for existing DnsRecords configurations
    ///
    /// * Add, update, or delete HealthCheckConfig for a specified service You can't add, update, or delete a HealthCheckCustomConfig configuration.
    ///
    ///
    /// For public and private DNS namespaces, note the following:
    ///
    /// * If you omit any existing DnsRecords or HealthCheckConfig configurations from an UpdateService request, the configurations are deleted from the service.
    ///
    /// * If you omit an existing HealthCheckCustomConfig configuration from an UpdateService request, the configuration isn't deleted from the service.
    ///
    ///
    /// When you update settings for a service, Cloud Map also updates the corresponding settings in all the records and health checks that were created by using the specified service.
    func updateService(input: UpdateServiceInput) async throws -> UpdateServiceOutputResponse
}

public protocol ServiceDiscoveryClientConfigurationProtocol : AWSClientRuntime.AWSClientConfiguration {
    var endpointResolver: EndpointResolver { get }
}

public enum ServiceDiscoveryClientTypes {}
