// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// The FinSpace management service provides the APIs for managing FinSpace environments.
public protocol FinspaceClientProtocol {
    /// Create a new FinSpace environment.
    func createEnvironment(input: CreateEnvironmentInput) async throws -> CreateEnvironmentOutputResponse
    /// Creates a changeset for a kdb database. A changeset allows you to add and delete existing files by using an ordered list of change requests.
    func createKxChangeset(input: CreateKxChangesetInput) async throws -> CreateKxChangesetOutputResponse
    /// Creates a new kdb cluster.
    func createKxCluster(input: CreateKxClusterInput) async throws -> CreateKxClusterOutputResponse
    /// Creates a new kdb database in the environment.
    func createKxDatabase(input: CreateKxDatabaseInput) async throws -> CreateKxDatabaseOutputResponse
    /// Creates a managed kdb environment for the account.
    func createKxEnvironment(input: CreateKxEnvironmentInput) async throws -> CreateKxEnvironmentOutputResponse
    /// Creates a user in FinSpace kdb environment with an associated IAM role.
    func createKxUser(input: CreateKxUserInput) async throws -> CreateKxUserOutputResponse
    /// Delete an FinSpace environment.
    func deleteEnvironment(input: DeleteEnvironmentInput) async throws -> DeleteEnvironmentOutputResponse
    /// Deletes a kdb cluster.
    func deleteKxCluster(input: DeleteKxClusterInput) async throws -> DeleteKxClusterOutputResponse
    /// Deletes the specified database and all of its associated data. This action is irreversible. You must copy any data out of the database before deleting it if the data is to be retained.
    func deleteKxDatabase(input: DeleteKxDatabaseInput) async throws -> DeleteKxDatabaseOutputResponse
    /// Deletes the kdb environment. This action is irreversible. Deleting a kdb environment will remove all the associated data and any services running in it.
    func deleteKxEnvironment(input: DeleteKxEnvironmentInput) async throws -> DeleteKxEnvironmentOutputResponse
    /// Deletes a user in the specified kdb environment.
    func deleteKxUser(input: DeleteKxUserInput) async throws -> DeleteKxUserOutputResponse
    /// Returns the FinSpace environment object.
    func getEnvironment(input: GetEnvironmentInput) async throws -> GetEnvironmentOutputResponse
    /// Returns information about a kdb changeset.
    func getKxChangeset(input: GetKxChangesetInput) async throws -> GetKxChangesetOutputResponse
    /// Retrieves information about a kdb cluster.
    func getKxCluster(input: GetKxClusterInput) async throws -> GetKxClusterOutputResponse
    /// Retrieves a connection string for a user to connect to a kdb cluster. You must call this API using the same role that you have defined while creating a user.
    func getKxConnectionString(input: GetKxConnectionStringInput) async throws -> GetKxConnectionStringOutputResponse
    /// Returns database information for the specified environment ID.
    func getKxDatabase(input: GetKxDatabaseInput) async throws -> GetKxDatabaseOutputResponse
    /// Retrieves all the information for the specified kdb environment.
    func getKxEnvironment(input: GetKxEnvironmentInput) async throws -> GetKxEnvironmentOutputResponse
    /// Retrieves information about the specified kdb user.
    func getKxUser(input: GetKxUserInput) async throws -> GetKxUserOutputResponse
    /// A list of all of your FinSpace environments.
    func listEnvironments(input: ListEnvironmentsInput) async throws -> ListEnvironmentsOutputResponse
    /// Returns a list of all the changesets for a database.
    func listKxChangesets(input: ListKxChangesetsInput) async throws -> ListKxChangesetsOutputResponse
    /// Lists all the nodes in a kdb cluster.
    func listKxClusterNodes(input: ListKxClusterNodesInput) async throws -> ListKxClusterNodesOutputResponse
    /// Returns a list of clusters.
    func listKxClusters(input: ListKxClustersInput) async throws -> ListKxClustersOutputResponse
    /// Returns a list of all the databases in the kdb environment.
    func listKxDatabases(input: ListKxDatabasesInput) async throws -> ListKxDatabasesOutputResponse
    /// Returns a list of kdb environments created in an account.
    func listKxEnvironments(input: ListKxEnvironmentsInput) async throws -> ListKxEnvironmentsOutputResponse
    /// Lists all the users in a kdb environment.
    func listKxUsers(input: ListKxUsersInput) async throws -> ListKxUsersOutputResponse
    /// A list of all tags for a resource.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Adds metadata tags to a FinSpace resource.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes metadata tags from a FinSpace resource.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Update your FinSpace environment.
    func updateEnvironment(input: UpdateEnvironmentInput) async throws -> UpdateEnvironmentOutputResponse
    /// Updates the databases mounted on a kdb cluster, which includes the changesetId and all the dbPaths to be cached. This API does not allow you to change a database name or add a database if you created a cluster without one. Using this API you can point a cluster to a different changeset and modify a list of partitions being cached.
    func updateKxClusterDatabases(input: UpdateKxClusterDatabasesInput) async throws -> UpdateKxClusterDatabasesOutputResponse
    /// Updates information for the given kdb database.
    func updateKxDatabase(input: UpdateKxDatabaseInput) async throws -> UpdateKxDatabaseOutputResponse
    /// Updates information for the given kdb environment.
    func updateKxEnvironment(input: UpdateKxEnvironmentInput) async throws -> UpdateKxEnvironmentOutputResponse
    /// Updates environment network to connect to your internal network by using a transit gateway. This API supports request to create a transit gateway attachment from FinSpace VPC to your transit gateway ID and create a custom Route-53 outbound resolvers. Once you send a request to update a network, you cannot change it again. Network update might require termination of any clusters that are running in the existing network.
    func updateKxEnvironmentNetwork(input: UpdateKxEnvironmentNetworkInput) async throws -> UpdateKxEnvironmentNetworkOutputResponse
    /// Updates the user details. You can only update the IAM role associated with a user.
    func updateKxUser(input: UpdateKxUserInput) async throws -> UpdateKxUserOutputResponse
}

public enum FinspaceClientTypes {}
