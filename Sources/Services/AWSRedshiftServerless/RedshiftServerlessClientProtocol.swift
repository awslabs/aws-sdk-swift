// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// This is an interface reference for Amazon Redshift Serverless. It contains documentation for one of the programming or command line interfaces you can use to manage Amazon Redshift Serverless. Amazon Redshift Serverless automatically provisions data warehouse capacity and intelligently scales the underlying resources based on workload demands. Amazon Redshift Serverless adjusts capacity in seconds to deliver consistently high performance and simplified operations for even the most demanding and volatile workloads. Amazon Redshift Serverless lets you focus on using your data to acquire new insights for your business and customers. To learn more about Amazon Redshift Serverless, see [What is Amazon Redshift Serverless](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-whatis.html).
public protocol RedshiftServerlessClientProtocol {
    /// Converts a recovery point to a snapshot. For more information about recovery points and snapshots, see [Working with snapshots and recovery points](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-snapshots-recovery.html).
    ///
    /// - Parameter ConvertRecoveryPointToSnapshotInput : [no documentation found]
    ///
    /// - Returns: `ConvertRecoveryPointToSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `TooManyTagsException` : The request exceeded the number of tags allowed for a resource.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func convertRecoveryPointToSnapshot(input: ConvertRecoveryPointToSnapshotInput) async throws -> ConvertRecoveryPointToSnapshotOutputResponse
    /// Creates an Amazon Redshift Serverless managed VPC endpoint.
    ///
    /// - Parameter CreateEndpointAccessInput : [no documentation found]
    ///
    /// - Returns: `CreateEndpointAccessOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func createEndpointAccess(input: CreateEndpointAccessInput) async throws -> CreateEndpointAccessOutputResponse
    /// Creates a namespace in Amazon Redshift Serverless.
    ///
    /// - Parameter CreateNamespaceInput : [no documentation found]
    ///
    /// - Returns: `CreateNamespaceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `TooManyTagsException` : The request exceeded the number of tags allowed for a resource.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func createNamespace(input: CreateNamespaceInput) async throws -> CreateNamespaceOutputResponse
    /// Creates a snapshot of all databases in a namespace. For more information about snapshots, see [ Working with snapshots and recovery points](https://docs.aws.amazon.com/redshift/latest/mgmt/serverless-snapshots-recovery.html).
    ///
    /// - Parameter CreateSnapshotInput : [no documentation found]
    ///
    /// - Returns: `CreateSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `TooManyTagsException` : The request exceeded the number of tags allowed for a resource.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func createSnapshot(input: CreateSnapshotInput) async throws -> CreateSnapshotOutputResponse
    /// Creates a usage limit for a specified Amazon Redshift Serverless usage type. The usage limit is identified by the returned usage limit identifier.
    ///
    /// - Parameter CreateUsageLimitInput : [no documentation found]
    ///
    /// - Returns: `CreateUsageLimitOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func createUsageLimit(input: CreateUsageLimitInput) async throws -> CreateUsageLimitOutputResponse
    /// Creates an workgroup in Amazon Redshift Serverless.
    ///
    /// - Parameter CreateWorkgroupInput : [no documentation found]
    ///
    /// - Returns: `CreateWorkgroupOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InsufficientCapacityException` : There is an insufficient capacity to perform the action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `TooManyTagsException` : The request exceeded the number of tags allowed for a resource.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func createWorkgroup(input: CreateWorkgroupInput) async throws -> CreateWorkgroupOutputResponse
    /// Deletes an Amazon Redshift Serverless managed VPC endpoint.
    ///
    /// - Parameter DeleteEndpointAccessInput : [no documentation found]
    ///
    /// - Returns: `DeleteEndpointAccessOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteEndpointAccess(input: DeleteEndpointAccessInput) async throws -> DeleteEndpointAccessOutputResponse
    /// Deletes a namespace from Amazon Redshift Serverless. Before you delete the namespace, you can create a final snapshot that has all of the data within the namespace.
    ///
    /// - Parameter DeleteNamespaceInput : [no documentation found]
    ///
    /// - Returns: `DeleteNamespaceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteNamespace(input: DeleteNamespaceInput) async throws -> DeleteNamespaceOutputResponse
    /// Deletes the specified resource policy.
    ///
    /// - Parameter DeleteResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `DeleteResourcePolicyOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteResourcePolicy(input: DeleteResourcePolicyInput) async throws -> DeleteResourcePolicyOutputResponse
    /// Deletes a snapshot from Amazon Redshift Serverless.
    ///
    /// - Parameter DeleteSnapshotInput : [no documentation found]
    ///
    /// - Returns: `DeleteSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteSnapshot(input: DeleteSnapshotInput) async throws -> DeleteSnapshotOutputResponse
    /// Deletes a usage limit from Amazon Redshift Serverless.
    ///
    /// - Parameter DeleteUsageLimitInput : [no documentation found]
    ///
    /// - Returns: `DeleteUsageLimitOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteUsageLimit(input: DeleteUsageLimitInput) async throws -> DeleteUsageLimitOutputResponse
    /// Deletes a workgroup.
    ///
    /// - Parameter DeleteWorkgroupInput : [no documentation found]
    ///
    /// - Returns: `DeleteWorkgroupOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func deleteWorkgroup(input: DeleteWorkgroupInput) async throws -> DeleteWorkgroupOutputResponse
    /// Returns a database user name and temporary password with temporary authorization to log in to Amazon Redshift Serverless. By default, the temporary credentials expire in 900 seconds. You can optionally specify a duration between 900 seconds (15 minutes) and 3600 seconds (60 minutes). The Identity and Access Management (IAM) user or role that runs GetCredentials must have an IAM policy attached that allows access to all necessary actions and resources. If the DbName parameter is specified, the IAM policy must allow access to the resource dbname for the specified database name.
    ///
    /// - Parameter GetCredentialsInput : [no documentation found]
    ///
    /// - Returns: `GetCredentialsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getCredentials(input: GetCredentialsInput) async throws -> GetCredentialsOutputResponse
    /// Returns information, such as the name, about a VPC endpoint.
    ///
    /// - Parameter GetEndpointAccessInput : [no documentation found]
    ///
    /// - Returns: `GetEndpointAccessOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getEndpointAccess(input: GetEndpointAccessInput) async throws -> GetEndpointAccessOutputResponse
    /// Returns information about a namespace in Amazon Redshift Serverless.
    ///
    /// - Parameter GetNamespaceInput : [no documentation found]
    ///
    /// - Returns: `GetNamespaceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getNamespace(input: GetNamespaceInput) async throws -> GetNamespaceOutputResponse
    /// Returns information about a recovery point.
    ///
    /// - Parameter GetRecoveryPointInput : [no documentation found]
    ///
    /// - Returns: `GetRecoveryPointOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getRecoveryPoint(input: GetRecoveryPointInput) async throws -> GetRecoveryPointOutputResponse
    /// Returns a resource policy.
    ///
    /// - Parameter GetResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `GetResourcePolicyOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getResourcePolicy(input: GetResourcePolicyInput) async throws -> GetResourcePolicyOutputResponse
    /// Returns information about a specific snapshot.
    ///
    /// - Parameter GetSnapshotInput : [no documentation found]
    ///
    /// - Returns: `GetSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getSnapshot(input: GetSnapshotInput) async throws -> GetSnapshotOutputResponse
    /// Returns information about a TableRestoreStatus object.
    ///
    /// - Parameter GetTableRestoreStatusInput : [no documentation found]
    ///
    /// - Returns: `GetTableRestoreStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getTableRestoreStatus(input: GetTableRestoreStatusInput) async throws -> GetTableRestoreStatusOutputResponse
    /// Returns information about a usage limit.
    ///
    /// - Parameter GetUsageLimitInput : [no documentation found]
    ///
    /// - Returns: `GetUsageLimitOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getUsageLimit(input: GetUsageLimitInput) async throws -> GetUsageLimitOutputResponse
    /// Returns information about a specific workgroup.
    ///
    /// - Parameter GetWorkgroupInput : [no documentation found]
    ///
    /// - Returns: `GetWorkgroupOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func getWorkgroup(input: GetWorkgroupInput) async throws -> GetWorkgroupOutputResponse
    /// Returns an array of EndpointAccess objects and relevant information.
    ///
    /// - Parameter ListEndpointAccessInput : [no documentation found]
    ///
    /// - Returns: `ListEndpointAccessOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listEndpointAccess(input: ListEndpointAccessInput) async throws -> ListEndpointAccessOutputResponse
    /// Returns information about a list of specified namespaces.
    ///
    /// - Parameter ListNamespacesInput : [no documentation found]
    ///
    /// - Returns: `ListNamespacesOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listNamespaces(input: ListNamespacesInput) async throws -> ListNamespacesOutputResponse
    /// Returns an array of recovery points.
    ///
    /// - Parameter ListRecoveryPointsInput : [no documentation found]
    ///
    /// - Returns: `ListRecoveryPointsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listRecoveryPoints(input: ListRecoveryPointsInput) async throws -> ListRecoveryPointsOutputResponse
    /// Returns a list of snapshots.
    ///
    /// - Parameter ListSnapshotsInput : [no documentation found]
    ///
    /// - Returns: `ListSnapshotsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listSnapshots(input: ListSnapshotsInput) async throws -> ListSnapshotsOutputResponse
    /// Returns information about an array of TableRestoreStatus objects.
    ///
    /// - Parameter ListTableRestoreStatusInput : [no documentation found]
    ///
    /// - Returns: `ListTableRestoreStatusOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InvalidPaginationException` : The provided pagination token is invalid.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listTableRestoreStatus(input: ListTableRestoreStatusInput) async throws -> ListTableRestoreStatusOutputResponse
    /// Lists the tags assigned to a resource.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutputResponse
    /// Lists all usage limits within Amazon Redshift Serverless.
    ///
    /// - Parameter ListUsageLimitsInput : [no documentation found]
    ///
    /// - Returns: `ListUsageLimitsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `InvalidPaginationException` : The provided pagination token is invalid.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listUsageLimits(input: ListUsageLimitsInput) async throws -> ListUsageLimitsOutputResponse
    /// Returns information about a list of specified workgroups.
    ///
    /// - Parameter ListWorkgroupsInput : [no documentation found]
    ///
    /// - Returns: `ListWorkgroupsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func listWorkgroups(input: ListWorkgroupsInput) async throws -> ListWorkgroupsOutputResponse
    /// Creates or updates a resource policy. Currently, you can use policies to share snapshots across Amazon Web Services accounts.
    ///
    /// - Parameter PutResourcePolicyInput : [no documentation found]
    ///
    /// - Returns: `PutResourcePolicyOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func putResourcePolicy(input: PutResourcePolicyInput) async throws -> PutResourcePolicyOutputResponse
    /// Restore the data from a recovery point.
    ///
    /// - Parameter RestoreFromRecoveryPointInput : [no documentation found]
    ///
    /// - Returns: `RestoreFromRecoveryPointOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func restoreFromRecoveryPoint(input: RestoreFromRecoveryPointInput) async throws -> RestoreFromRecoveryPointOutputResponse
    /// Restores a namespace from a snapshot.
    ///
    /// - Parameter RestoreFromSnapshotInput : [no documentation found]
    ///
    /// - Returns: `RestoreFromSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ServiceQuotaExceededException` : The service limit was exceeded.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func restoreFromSnapshot(input: RestoreFromSnapshotInput) async throws -> RestoreFromSnapshotOutputResponse
    /// Restores a table from a snapshot to your Amazon Redshift Serverless instance. You can't use this operation to restore tables with [interleaved sort keys](https://docs.aws.amazon.com/redshift/latest/dg/t_Sorting_data.html#t_Sorting_data-interleaved).
    ///
    /// - Parameter RestoreTableFromSnapshotInput : [no documentation found]
    ///
    /// - Returns: `RestoreTableFromSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func restoreTableFromSnapshot(input: RestoreTableFromSnapshotInput) async throws -> RestoreTableFromSnapshotOutputResponse
    /// Assigns one or more tags to a resource.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `TooManyTagsException` : The request exceeded the number of tags allowed for a resource.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutputResponse
    /// Removes a tag or set of tags from a resource.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutputResponse
    /// Updates an Amazon Redshift Serverless managed endpoint.
    ///
    /// - Parameter UpdateEndpointAccessInput : [no documentation found]
    ///
    /// - Returns: `UpdateEndpointAccessOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func updateEndpointAccess(input: UpdateEndpointAccessInput) async throws -> UpdateEndpointAccessOutputResponse
    /// Updates a namespace with the specified settings. Unless required, you can't update multiple parameters in one request. For example, you must specify both adminUsername and adminUserPassword to update either field, but you can't update both kmsKeyId and logExports in a single request.
    ///
    /// - Parameter UpdateNamespaceInput : [no documentation found]
    ///
    /// - Returns: `UpdateNamespaceOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func updateNamespace(input: UpdateNamespaceInput) async throws -> UpdateNamespaceOutputResponse
    /// Updates a snapshot.
    ///
    /// - Parameter UpdateSnapshotInput : [no documentation found]
    ///
    /// - Returns: `UpdateSnapshotOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func updateSnapshot(input: UpdateSnapshotInput) async throws -> UpdateSnapshotOutputResponse
    /// Update a usage limit in Amazon Redshift Serverless. You can't update the usage type or period of a usage limit.
    ///
    /// - Parameter UpdateUsageLimitInput : [no documentation found]
    ///
    /// - Returns: `UpdateUsageLimitOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func updateUsageLimit(input: UpdateUsageLimitInput) async throws -> UpdateUsageLimitOutputResponse
    /// Updates a workgroup with the specified configuration settings. You can't update multiple parameters in one request. For example, you can update baseCapacity or port in a single request, but you can't update both in the same request.
    ///
    /// - Parameter UpdateWorkgroupInput : [no documentation found]
    ///
    /// - Returns: `UpdateWorkgroupOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `ConflictException` : The submitted action has conflicts.
    /// - `InsufficientCapacityException` : There is an insufficient capacity to perform the action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The resource could not be found.
    /// - `ValidationException` : The input failed to satisfy the constraints specified by an AWS service.
    func updateWorkgroup(input: UpdateWorkgroupInput) async throws -> UpdateWorkgroupOutputResponse
}

public enum RedshiftServerlessClientTypes {}
