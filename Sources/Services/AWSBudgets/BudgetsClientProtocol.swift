// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Use the Amazon Web Services Budgets API to plan your service usage, service costs, and instance reservations. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Amazon Web Services Budgets feature. Budgets provide you with a way to see the following information:
///
/// * How close your plan is to your budgeted amount or to the free tier limits
///
/// * Your usage-to-date, including how much you've used of your Reserved Instances (RIs)
///
/// * Your current estimated charges from Amazon Web Services, and how much your predicted usage will accrue in charges by the end of the month
///
/// * How much of your budget has been used
///
///
/// Amazon Web Services updates your budget status several times a day. Budgets track your unblended costs, subscriptions, refunds, and RIs. You can create the following types of budgets:
///
/// * Cost budgets - Plan how much you want to spend on a service.
///
/// * Usage budgets - Plan how much you want to use one or more services.
///
/// * RI utilization budgets - Define a utilization threshold, and receive alerts when your RI usage falls below that threshold. This lets you see if your RIs are unused or under-utilized.
///
/// * RI coverage budgets - Define a coverage threshold, and receive alerts when the number of your instance hours that are covered by RIs fall below that threshold. This lets you see how much of your instance usage is covered by a reservation.
///
///
/// Service Endpoint The Amazon Web Services Budgets API provides the following endpoint:
///
/// * https://budgets.amazonaws.com
///
///
/// For information about costs that are associated with the Amazon Web Services Budgets API, see [Amazon Web Services Cost Management Pricing](https://aws.amazon.com/aws-cost-management/pricing/).
public protocol BudgetsClientProtocol {
    /// Creates a budget and, if included, notifications and subscribers. Only one of BudgetLimit or PlannedBudgetLimits can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the BudgetLimit syntax. For PlannedBudgetLimits, see the [Examples](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples) section.
    func createBudget(input: CreateBudgetInput) async throws -> CreateBudgetOutputResponse
    /// Creates a budget action.
    func createBudgetAction(input: CreateBudgetActionInput) async throws -> CreateBudgetActionOutputResponse
    /// Creates a notification. You must create the budget before you create the associated notification.
    func createNotification(input: CreateNotificationInput) async throws -> CreateNotificationOutputResponse
    /// Creates a subscriber. You must create the associated budget and notification before you create the subscriber.
    func createSubscriber(input: CreateSubscriberInput) async throws -> CreateSubscriberOutputResponse
    /// Deletes a budget. You can delete your budget at any time. Deleting a budget also deletes the notifications and subscribers that are associated with that budget.
    func deleteBudget(input: DeleteBudgetInput) async throws -> DeleteBudgetOutputResponse
    /// Deletes a budget action.
    func deleteBudgetAction(input: DeleteBudgetActionInput) async throws -> DeleteBudgetActionOutputResponse
    /// Deletes a notification. Deleting a notification also deletes the subscribers that are associated with the notification.
    func deleteNotification(input: DeleteNotificationInput) async throws -> DeleteNotificationOutputResponse
    /// Deletes a subscriber. Deleting the last subscriber to a notification also deletes the notification.
    func deleteSubscriber(input: DeleteSubscriberInput) async throws -> DeleteSubscriberOutputResponse
    /// Describes a budget. The Request Syntax section shows the BudgetLimit syntax. For PlannedBudgetLimits, see the [Examples](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples) section.
    func describeBudget(input: DescribeBudgetInput) async throws -> DescribeBudgetOutputResponse
    /// Describes a budget action detail.
    func describeBudgetAction(input: DescribeBudgetActionInput) async throws -> DescribeBudgetActionOutputResponse
    /// Describes a budget action history detail.
    func describeBudgetActionHistories(input: DescribeBudgetActionHistoriesInput) async throws -> DescribeBudgetActionHistoriesOutputResponse
    /// Describes all of the budget actions for an account.
    func describeBudgetActionsForAccount(input: DescribeBudgetActionsForAccountInput) async throws -> DescribeBudgetActionsForAccountOutputResponse
    /// Describes all of the budget actions for a budget.
    func describeBudgetActionsForBudget(input: DescribeBudgetActionsForBudgetInput) async throws -> DescribeBudgetActionsForBudgetOutputResponse
    /// Lists the budget names and notifications that are associated with an account.
    func describeBudgetNotificationsForAccount(input: DescribeBudgetNotificationsForAccountInput) async throws -> DescribeBudgetNotificationsForAccountOutputResponse
    /// Describes the history for DAILY, MONTHLY, and QUARTERLY budgets. Budget history isn't available for ANNUAL budgets.
    func describeBudgetPerformanceHistory(input: DescribeBudgetPerformanceHistoryInput) async throws -> DescribeBudgetPerformanceHistoryOutputResponse
    /// Lists the budgets that are associated with an account. The Request Syntax section shows the BudgetLimit syntax. For PlannedBudgetLimits, see the [Examples](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples) section.
    func describeBudgets(input: DescribeBudgetsInput) async throws -> DescribeBudgetsOutputResponse
    /// Lists the notifications that are associated with a budget.
    func describeNotificationsForBudget(input: DescribeNotificationsForBudgetInput) async throws -> DescribeNotificationsForBudgetOutputResponse
    /// Lists the subscribers that are associated with a notification.
    func describeSubscribersForNotification(input: DescribeSubscribersForNotificationInput) async throws -> DescribeSubscribersForNotificationOutputResponse
    /// Executes a budget action.
    func executeBudgetAction(input: ExecuteBudgetActionInput) async throws -> ExecuteBudgetActionOutputResponse
    /// Updates a budget. You can change every part of a budget except for the budgetName and the calculatedSpend. When you modify a budget, the calculatedSpend drops to zero until Amazon Web Services has new usage data to use for forecasting. Only one of BudgetLimit or PlannedBudgetLimits can be present in the syntax at one time. Use the syntax that matches your case. The Request Syntax section shows the BudgetLimit syntax. For PlannedBudgetLimits, see the [Examples](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples) section.
    func updateBudget(input: UpdateBudgetInput) async throws -> UpdateBudgetOutputResponse
    /// Updates a budget action.
    func updateBudgetAction(input: UpdateBudgetActionInput) async throws -> UpdateBudgetActionOutputResponse
    /// Updates a notification.
    func updateNotification(input: UpdateNotificationInput) async throws -> UpdateNotificationOutputResponse
    /// Updates a subscriber.
    func updateSubscriber(input: UpdateSubscriberInput) async throws -> UpdateSubscriberOutputResponse
}

public enum BudgetsClientTypes {}
