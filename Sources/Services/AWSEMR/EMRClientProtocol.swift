// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon EMR is a web service that makes it easier to process large amounts of data efficiently. Amazon EMR uses Hadoop processing combined with several Amazon Web Services services to do tasks such as web indexing, data mining, log file analysis, machine learning, scientific simulation, and data warehouse management.
public protocol EMRClientProtocol {
    /// Adds an instance fleet to a running cluster. The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x.
    ///
    /// - Parameter AddInstanceFleetInput : [no documentation found]
    ///
    /// - Returns: `AddInstanceFleetOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func addInstanceFleet(input: AddInstanceFleetInput) async throws -> AddInstanceFleetOutputResponse
    /// Adds one or more instance groups to a running cluster.
    ///
    /// - Parameter AddInstanceGroupsInput : Input to an AddInstanceGroups call.
    ///
    /// - Returns: `AddInstanceGroupsOutputResponse` : Output from an AddInstanceGroups call.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func addInstanceGroups(input: AddInstanceGroupsInput) async throws -> AddInstanceGroupsOutputResponse
    /// AddJobFlowSteps adds new steps to a running cluster. A maximum of 256 steps are allowed in each job flow. If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using SSH to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop. A step specifies the location of a JAR file stored either on the master node of the cluster or in Amazon S3. Each step is performed by the main function of the main class of the JAR file. The main class can be specified either in the manifest of the JAR or by using the MainFunction parameter of the step. Amazon EMR executes each step in the order listed. For a step to be considered complete, the main function must exit with a zero exit code and all Hadoop jobs started while the step was running must have completed and run successfully. You can only add steps to a cluster that is in one of the following states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING. The string values passed into HadoopJarStep object cannot exceed a total of 10240 characters.
    ///
    /// - Parameter AddJobFlowStepsInput : The input argument to the [AddJobFlowSteps] operation.
    ///
    /// - Returns: `AddJobFlowStepsOutputResponse` : The output for the [AddJobFlowSteps] operation.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func addJobFlowSteps(input: AddJobFlowStepsInput) async throws -> AddJobFlowStepsOutputResponse
    /// Adds tags to an Amazon EMR resource, such as a cluster or an Amazon EMR Studio. Tags make it easier to associate resources in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see [Tag Clusters](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html).
    ///
    /// - Parameter AddTagsInput : This input identifies an Amazon EMR resource and a list of tags to attach.
    ///
    /// - Returns: `AddTagsOutputResponse` : This output indicates the result of adding tags to a resource.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func addTags(input: AddTagsInput) async throws -> AddTagsOutputResponse
    /// Cancels a pending step or steps in a running cluster. Available only in Amazon EMR versions 4.8.0 and later, excluding version 5.0.0. A maximum of 256 steps are allowed in each CancelSteps request. CancelSteps is idempotent but asynchronous; it does not guarantee that a step will be canceled, even if the request is successfully submitted. When you use Amazon EMR releases 5.28.0 and later, you can cancel steps that are in a PENDING or RUNNING state. In earlier versions of Amazon EMR, you can only cancel steps that are in a PENDING state.
    ///
    /// - Parameter CancelStepsInput : The input argument to the [CancelSteps] operation.
    ///
    /// - Returns: `CancelStepsOutputResponse` : The output for the [CancelSteps] operation.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func cancelSteps(input: CancelStepsInput) async throws -> CancelStepsOutputResponse
    /// Creates a security configuration, which is stored in the service and can be specified when a cluster is created.
    ///
    /// - Parameter CreateSecurityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `CreateSecurityConfigurationOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func createSecurityConfiguration(input: CreateSecurityConfigurationInput) async throws -> CreateSecurityConfigurationOutputResponse
    /// Creates a new Amazon EMR Studio.
    ///
    /// - Parameter CreateStudioInput : [no documentation found]
    ///
    /// - Returns: `CreateStudioOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func createStudio(input: CreateStudioInput) async throws -> CreateStudioOutputResponse
    /// Maps a user or group to the Amazon EMR Studio specified by StudioId, and applies a session policy to refine Studio permissions for that user or group. Use CreateStudioSessionMapping to assign users to a Studio when you use IAM Identity Center authentication. For instructions on how to assign users to a Studio when you use IAM authentication, see [Assign a user or group to your EMR Studio](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio-manage-users.html#emr-studio-assign-users-groups).
    ///
    /// - Parameter CreateStudioSessionMappingInput : [no documentation found]
    ///
    /// - Returns: `CreateStudioSessionMappingOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func createStudioSessionMapping(input: CreateStudioSessionMappingInput) async throws -> CreateStudioSessionMappingOutputResponse
    /// Deletes a security configuration.
    ///
    /// - Parameter DeleteSecurityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DeleteSecurityConfigurationOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func deleteSecurityConfiguration(input: DeleteSecurityConfigurationInput) async throws -> DeleteSecurityConfigurationOutputResponse
    /// Removes an Amazon EMR Studio from the Studio metadata store.
    ///
    /// - Parameter DeleteStudioInput : [no documentation found]
    ///
    /// - Returns: `DeleteStudioOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func deleteStudio(input: DeleteStudioInput) async throws -> DeleteStudioOutputResponse
    /// Removes a user or group from an Amazon EMR Studio.
    ///
    /// - Parameter DeleteStudioSessionMappingInput : [no documentation found]
    ///
    /// - Returns: `DeleteStudioSessionMappingOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func deleteStudioSessionMapping(input: DeleteStudioSessionMappingInput) async throws -> DeleteStudioSessionMappingOutputResponse
    /// Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on.
    ///
    /// - Parameter DescribeClusterInput : This input determines which cluster to describe.
    ///
    /// - Returns: `DescribeClusterOutputResponse` : This output contains the description of the cluster.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeCluster(input: DescribeClusterInput) async throws -> DescribeClusterOutputResponse
    /// This API is no longer supported and will eventually be removed. We recommend you use [ListClusters], [DescribeCluster], [ListSteps], [ListInstanceGroups] and [ListBootstrapActions] instead. DescribeJobFlows returns a list of job flows that match all of the supplied parameters. The parameters can include a list of job flow IDs, job flow states, and restrictions on job flow creation date and time. Regardless of supplied parameters, only job flows created within the last two months are returned. If no parameters are supplied, then job flows matching either of the following criteria are returned:
    ///
    /// * Job flows created and completed in the last two weeks
    ///
    /// * Job flows created within the last two months that are in one of the following states: RUNNING, WAITING, SHUTTING_DOWN, STARTING
    ///
    ///
    /// Amazon EMR can return a maximum of 512 job flow descriptions.
    @available(*, deprecated)
    ///
    /// - Parameter DescribeJobFlowsInput : The input for the [DescribeJobFlows] operation.
    ///
    /// - Returns: `DescribeJobFlowsOutputResponse` : The output for the [DescribeJobFlows] operation.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func describeJobFlows(input: DescribeJobFlowsInput) async throws -> DescribeJobFlowsOutputResponse
    /// Provides details of a notebook execution.
    ///
    /// - Parameter DescribeNotebookExecutionInput : [no documentation found]
    ///
    /// - Returns: `DescribeNotebookExecutionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeNotebookExecution(input: DescribeNotebookExecutionInput) async throws -> DescribeNotebookExecutionOutputResponse
    /// Provides Amazon EMR release label details, such as the releases available the Region where the API request is run, and the available applications for a specific Amazon EMR release label. Can also list Amazon EMR releases that support a specified version of Spark.
    ///
    /// - Parameter DescribeReleaseLabelInput : [no documentation found]
    ///
    /// - Returns: `DescribeReleaseLabelOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeReleaseLabel(input: DescribeReleaseLabelInput) async throws -> DescribeReleaseLabelOutputResponse
    /// Provides the details of a security configuration by returning the configuration JSON.
    ///
    /// - Parameter DescribeSecurityConfigurationInput : [no documentation found]
    ///
    /// - Returns: `DescribeSecurityConfigurationOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeSecurityConfiguration(input: DescribeSecurityConfigurationInput) async throws -> DescribeSecurityConfigurationOutputResponse
    /// Provides more detail about the cluster step.
    ///
    /// - Parameter DescribeStepInput : This input determines which step to describe.
    ///
    /// - Returns: `DescribeStepOutputResponse` : This output contains the description of the cluster step.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeStep(input: DescribeStepInput) async throws -> DescribeStepOutputResponse
    /// Returns details for the specified Amazon EMR Studio including ID, Name, VPC, Studio access URL, and so on.
    ///
    /// - Parameter DescribeStudioInput : [no documentation found]
    ///
    /// - Returns: `DescribeStudioOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func describeStudio(input: DescribeStudioInput) async throws -> DescribeStudioOutputResponse
    /// Returns the auto-termination policy for an Amazon EMR cluster.
    ///
    /// - Parameter GetAutoTerminationPolicyInput : [no documentation found]
    ///
    /// - Returns: `GetAutoTerminationPolicyOutputResponse` : [no documentation found]
    func getAutoTerminationPolicy(input: GetAutoTerminationPolicyInput) async throws -> GetAutoTerminationPolicyOutputResponse
    /// Returns the Amazon EMR block public access configuration for your Amazon Web Services account in the current Region. For more information see [Configure Block Public Access for Amazon EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html) in the Amazon EMR Management Guide.
    ///
    /// - Parameter GetBlockPublicAccessConfigurationInput : [no documentation found]
    ///
    /// - Returns: `GetBlockPublicAccessConfigurationOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func getBlockPublicAccessConfiguration(input: GetBlockPublicAccessConfigurationInput) async throws -> GetBlockPublicAccessConfigurationOutputResponse
    /// Provides temporary, HTTP basic credentials that are associated with a given runtime IAM role and used by a cluster with fine-grained access control activated. You can use these credentials to connect to cluster endpoints that support username and password authentication.
    ///
    /// - Parameter GetClusterSessionCredentialsInput : [no documentation found]
    ///
    /// - Returns: `GetClusterSessionCredentialsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func getClusterSessionCredentials(input: GetClusterSessionCredentialsInput) async throws -> GetClusterSessionCredentialsOutputResponse
    /// Fetches the attached managed scaling policy for an Amazon EMR cluster.
    ///
    /// - Parameter GetManagedScalingPolicyInput : [no documentation found]
    ///
    /// - Returns: `GetManagedScalingPolicyOutputResponse` : [no documentation found]
    func getManagedScalingPolicy(input: GetManagedScalingPolicyInput) async throws -> GetManagedScalingPolicyOutputResponse
    /// Fetches mapping details for the specified Amazon EMR Studio and identity (user or group).
    ///
    /// - Parameter GetStudioSessionMappingInput : [no documentation found]
    ///
    /// - Returns: `GetStudioSessionMappingOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func getStudioSessionMapping(input: GetStudioSessionMappingInput) async throws -> GetStudioSessionMappingOutputResponse
    /// Provides information about the bootstrap actions associated with a cluster.
    ///
    /// - Parameter ListBootstrapActionsInput : This input determines which bootstrap actions to retrieve.
    ///
    /// - Returns: `ListBootstrapActionsOutputResponse` : This output contains the bootstrap actions detail.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listBootstrapActions(input: ListBootstrapActionsInput) async throws -> ListBootstrapActionsOutputResponse
    /// Provides the status of all clusters visible to this Amazon Web Services account. Allows you to filter the list of clusters based on certain criteria; for example, filtering by cluster creation date and time or by status. This call returns a maximum of 50 clusters in unsorted order per call, but returns a marker to track the paging of the cluster list across multiple ListClusters calls.
    ///
    /// - Parameter ListClustersInput : This input determines how the ListClusters action filters the list of clusters that it returns.
    ///
    /// - Returns: `ListClustersOutputResponse` : This contains a ClusterSummaryList with the cluster details; for example, the cluster IDs, names, and status.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listClusters(input: ListClustersInput) async throws -> ListClustersOutputResponse
    /// Lists all available details about the instance fleets in a cluster. The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.
    ///
    /// - Parameter ListInstanceFleetsInput : [no documentation found]
    ///
    /// - Returns: `ListInstanceFleetsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listInstanceFleets(input: ListInstanceFleetsInput) async throws -> ListInstanceFleetsOutputResponse
    /// Provides all available details about the instance groups in a cluster.
    ///
    /// - Parameter ListInstanceGroupsInput : This input determines which instance groups to retrieve.
    ///
    /// - Returns: `ListInstanceGroupsOutputResponse` : This input determines which instance groups to retrieve.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listInstanceGroups(input: ListInstanceGroupsInput) async throws -> ListInstanceGroupsOutputResponse
    /// Provides information for all active Amazon EC2 instances and Amazon EC2 instances terminated in the last 30 days, up to a maximum of 2,000. Amazon EC2 instances in any of the following states are considered active: AWAITING_FULFILLMENT, PROVISIONING, BOOTSTRAPPING, RUNNING.
    ///
    /// - Parameter ListInstancesInput : This input determines which instances to list.
    ///
    /// - Returns: `ListInstancesOutputResponse` : This output contains the list of instances.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listInstances(input: ListInstancesInput) async throws -> ListInstancesOutputResponse
    /// Provides summaries of all notebook executions. You can filter the list based on multiple criteria such as status, time range, and editor id. Returns a maximum of 50 notebook executions and a marker to track the paging of a longer notebook execution list across multiple ListNotebookExecutions calls.
    ///
    /// - Parameter ListNotebookExecutionsInput : [no documentation found]
    ///
    /// - Returns: `ListNotebookExecutionsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listNotebookExecutions(input: ListNotebookExecutionsInput) async throws -> ListNotebookExecutionsOutputResponse
    /// Retrieves release labels of Amazon EMR services in the Region where the API is called.
    ///
    /// - Parameter ListReleaseLabelsInput : [no documentation found]
    ///
    /// - Returns: `ListReleaseLabelsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listReleaseLabels(input: ListReleaseLabelsInput) async throws -> ListReleaseLabelsOutputResponse
    /// Lists all the security configurations visible to this account, providing their creation dates and times, and their names. This call returns a maximum of 50 clusters per call, but returns a marker to track the paging of the cluster list across multiple ListSecurityConfigurations calls.
    ///
    /// - Parameter ListSecurityConfigurationsInput : [no documentation found]
    ///
    /// - Returns: `ListSecurityConfigurationsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listSecurityConfigurations(input: ListSecurityConfigurationsInput) async throws -> ListSecurityConfigurationsOutputResponse
    /// Provides a list of steps for the cluster in reverse order unless you specify stepIds with the request or filter by StepStates. You can specify a maximum of 10 stepIDs. The CLI automatically paginates results to return a list greater than 50 steps. To return more than 50 steps using the CLI, specify a Marker, which is a pagination token that indicates the next set of steps to retrieve.
    ///
    /// - Parameter ListStepsInput : This input determines which steps to list.
    ///
    /// - Returns: `ListStepsOutputResponse` : This output contains the list of steps returned in reverse order. This means that the last step is the first element in the list.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listSteps(input: ListStepsInput) async throws -> ListStepsOutputResponse
    /// Returns a list of all Amazon EMR Studios associated with the Amazon Web Services account. The list includes details such as ID, Studio Access URL, and creation time for each Studio.
    ///
    /// - Parameter ListStudiosInput : [no documentation found]
    ///
    /// - Returns: `ListStudiosOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listStudios(input: ListStudiosInput) async throws -> ListStudiosOutputResponse
    /// Returns a list of all user or group session mappings for the Amazon EMR Studio specified by StudioId.
    ///
    /// - Parameter ListStudioSessionMappingsInput : [no documentation found]
    ///
    /// - Returns: `ListStudioSessionMappingsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listStudioSessionMappings(input: ListStudioSessionMappingsInput) async throws -> ListStudioSessionMappingsOutputResponse
    /// A list of the instance types that Amazon EMR supports. You can filter the list by Amazon Web Services Region and Amazon EMR release.
    ///
    /// - Parameter ListSupportedInstanceTypesInput : [no documentation found]
    ///
    /// - Returns: `ListSupportedInstanceTypesOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func listSupportedInstanceTypes(input: ListSupportedInstanceTypesInput) async throws -> ListSupportedInstanceTypesOutputResponse
    /// Modifies the number of steps that can be executed concurrently for the cluster specified using ClusterID.
    ///
    /// - Parameter ModifyClusterInput : [no documentation found]
    ///
    /// - Returns: `ModifyClusterOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func modifyCluster(input: ModifyClusterInput) async throws -> ModifyClusterOutputResponse
    /// Modifies the target On-Demand and target Spot capacities for the instance fleet with the specified InstanceFleetID within the cluster specified using ClusterID. The call either succeeds or fails atomically. The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.
    ///
    /// - Parameter ModifyInstanceFleetInput : [no documentation found]
    ///
    /// - Returns: `ModifyInstanceFleetOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func modifyInstanceFleet(input: ModifyInstanceFleetInput) async throws -> ModifyInstanceFleetOutputResponse
    /// ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group. The input parameters include the new target instance count for the group and the instance group ID. The call will either succeed or fail atomically.
    ///
    /// - Parameter ModifyInstanceGroupsInput : Change the size of some instance groups.
    ///
    /// - Returns: `ModifyInstanceGroupsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func modifyInstanceGroups(input: ModifyInstanceGroupsInput) async throws -> ModifyInstanceGroupsOutputResponse
    /// Creates or updates an automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates Amazon EC2 instances in response to the value of a CloudWatch metric.
    ///
    /// - Parameter PutAutoScalingPolicyInput : [no documentation found]
    ///
    /// - Returns: `PutAutoScalingPolicyOutputResponse` : [no documentation found]
    func putAutoScalingPolicy(input: PutAutoScalingPolicyInput) async throws -> PutAutoScalingPolicyOutputResponse
    /// Auto-termination is supported in Amazon EMR releases 5.30.0 and 6.1.0 and later. For more information, see [Using an auto-termination policy](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-auto-termination-policy.html). Creates or updates an auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see [Control cluster termination](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html).
    ///
    /// - Parameter PutAutoTerminationPolicyInput : [no documentation found]
    ///
    /// - Returns: `PutAutoTerminationPolicyOutputResponse` : [no documentation found]
    func putAutoTerminationPolicy(input: PutAutoTerminationPolicyInput) async throws -> PutAutoTerminationPolicyOutputResponse
    /// Creates or updates an Amazon EMR block public access configuration for your Amazon Web Services account in the current Region. For more information see [Configure Block Public Access for Amazon EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html) in the Amazon EMR Management Guide.
    ///
    /// - Parameter PutBlockPublicAccessConfigurationInput : [no documentation found]
    ///
    /// - Returns: `PutBlockPublicAccessConfigurationOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func putBlockPublicAccessConfiguration(input: PutBlockPublicAccessConfigurationInput) async throws -> PutBlockPublicAccessConfigurationOutputResponse
    /// Creates or updates a managed scaling policy for an Amazon EMR cluster. The managed scaling policy defines the limits for resources, such as Amazon EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
    ///
    /// - Parameter PutManagedScalingPolicyInput : [no documentation found]
    ///
    /// - Returns: `PutManagedScalingPolicyOutputResponse` : [no documentation found]
    func putManagedScalingPolicy(input: PutManagedScalingPolicyInput) async throws -> PutManagedScalingPolicyOutputResponse
    /// Removes an automatic scaling policy from a specified instance group within an Amazon EMR cluster.
    ///
    /// - Parameter RemoveAutoScalingPolicyInput : [no documentation found]
    ///
    /// - Returns: `RemoveAutoScalingPolicyOutputResponse` : [no documentation found]
    func removeAutoScalingPolicy(input: RemoveAutoScalingPolicyInput) async throws -> RemoveAutoScalingPolicyOutputResponse
    /// Removes an auto-termination policy from an Amazon EMR cluster.
    ///
    /// - Parameter RemoveAutoTerminationPolicyInput : [no documentation found]
    ///
    /// - Returns: `RemoveAutoTerminationPolicyOutputResponse` : [no documentation found]
    func removeAutoTerminationPolicy(input: RemoveAutoTerminationPolicyInput) async throws -> RemoveAutoTerminationPolicyOutputResponse
    /// Removes a managed scaling policy from a specified Amazon EMR cluster.
    ///
    /// - Parameter RemoveManagedScalingPolicyInput : [no documentation found]
    ///
    /// - Returns: `RemoveManagedScalingPolicyOutputResponse` : [no documentation found]
    func removeManagedScalingPolicy(input: RemoveManagedScalingPolicyInput) async throws -> RemoveManagedScalingPolicyOutputResponse
    /// Removes tags from an Amazon EMR resource, such as a cluster or Amazon EMR Studio. Tags make it easier to associate resources in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see [Tag Clusters](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html). The following example removes the stack tag with value Prod from a cluster:
    ///
    /// - Parameter RemoveTagsInput : This input identifies an Amazon EMR resource and a list of tags to remove.
    ///
    /// - Returns: `RemoveTagsOutputResponse` : This output indicates the result of removing tags from the resource.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func removeTags(input: RemoveTagsInput) async throws -> RemoveTagsOutputResponse
    /// RunJobFlow creates and starts running a new cluster (job flow). The cluster runs the steps specified. After the steps complete, the cluster stops and the HDFS partition is lost. To prevent loss of data, configure the last step of the job flow to store results in Amazon S3. If the [JobFlowInstancesConfig]KeepJobFlowAliveWhenNoSteps parameter is set to TRUE, the cluster transitions to the WAITING state rather than shutting down after the steps have completed. For additional protection, you can set the [JobFlowInstancesConfig]TerminationProtected parameter to TRUE to lock the cluster and prevent it from being terminated by API call, user intervention, or in the event of a job flow error. A maximum of 256 steps are allowed in each job flow. If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using the SSH shell to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop. For long-running clusters, we recommend that you periodically store your results. The instance fleets configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. The RunJobFlow request can contain InstanceFleets parameters or InstanceGroups parameters, but not both.
    ///
    /// - Parameter RunJobFlowInput : Input to the [RunJobFlow] operation.
    ///
    /// - Returns: `RunJobFlowOutputResponse` : The result of the [RunJobFlow] operation.
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func runJobFlow(input: RunJobFlowInput) async throws -> RunJobFlowOutputResponse
    /// SetTerminationProtection locks a cluster (job flow) so the Amazon EC2 instances in the cluster cannot be terminated by user intervention, an API call, or in the event of a job-flow error. The cluster still terminates upon successful completion of the job flow. Calling SetTerminationProtection on a cluster is similar to calling the Amazon EC2 DisableAPITermination API on all Amazon EC2 instances in a cluster. SetTerminationProtection is used to prevent accidental termination of a cluster and to ensure that in the event of an error, the instances persist so that you can recover any data stored in their ephemeral instance storage. To terminate a cluster that has been locked by setting SetTerminationProtection to true, you must first unlock the job flow by a subsequent call to SetTerminationProtection in which you set the value to false. For more information, see[Managing Cluster Termination](https://docs.aws.amazon.com/emr/latest/ManagementGuide/UsingEMR_TerminationProtection.html) in the Amazon EMR Management Guide.
    ///
    /// - Parameter SetTerminationProtectionInput : The input argument to the [TerminationProtection] operation.
    ///
    /// - Returns: `SetTerminationProtectionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func setTerminationProtection(input: SetTerminationProtectionInput) async throws -> SetTerminationProtectionOutputResponse
    /// The SetVisibleToAllUsers parameter is no longer supported. Your cluster may be visible to all users in your account. To restrict cluster access using an IAM policy, see [Identity and Access Management for Amazon EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-access-IAM.html). Sets the [Cluster$VisibleToAllUsers] value for an Amazon EMR cluster. When true, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions that their IAM policies allow. When false, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions on the cluster, regardless of IAM permissions policies attached to other IAM principals. This action works on running clusters. When you create a cluster, use the [RunJobFlowInput$VisibleToAllUsers] parameter. For more information, see [Understanding the Amazon EMR Cluster VisibleToAllUsers Setting](https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_IAM_emr-with-IAM.html#security_set_visible_to_all_users) in the Amazon EMR Management Guide.
    ///
    /// - Parameter SetVisibleToAllUsersInput : The input to the SetVisibleToAllUsers action.
    ///
    /// - Returns: `SetVisibleToAllUsersOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func setVisibleToAllUsers(input: SetVisibleToAllUsersInput) async throws -> SetVisibleToAllUsersOutputResponse
    /// Starts a notebook execution.
    ///
    /// - Parameter StartNotebookExecutionInput : [no documentation found]
    ///
    /// - Returns: `StartNotebookExecutionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func startNotebookExecution(input: StartNotebookExecutionInput) async throws -> StartNotebookExecutionOutputResponse
    /// Stops a notebook execution.
    ///
    /// - Parameter StopNotebookExecutionInput : [no documentation found]
    ///
    /// - Returns: `StopNotebookExecutionOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func stopNotebookExecution(input: StopNotebookExecutionInput) async throws -> StopNotebookExecutionOutputResponse
    /// TerminateJobFlows shuts a list of clusters (job flows) down. When a job flow is shut down, any step not yet completed is canceled and the Amazon EC2 instances on which the cluster is running are stopped. Any log files not already saved are uploaded to Amazon S3 if a LogUri was specified when the cluster was created. The maximum number of clusters allowed is 10. The call to TerminateJobFlows is asynchronous. Depending on the configuration of the cluster, it may take up to 1-5 minutes for the cluster to completely terminate and release allocated resources, such as Amazon EC2 instances.
    ///
    /// - Parameter TerminateJobFlowsInput : Input to the [TerminateJobFlows] operation.
    ///
    /// - Returns: `TerminateJobFlowsOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    func terminateJobFlows(input: TerminateJobFlowsInput) async throws -> TerminateJobFlowsOutputResponse
    /// Updates an Amazon EMR Studio configuration, including attributes such as name, description, and subnets.
    ///
    /// - Parameter UpdateStudioInput : [no documentation found]
    ///
    /// - Returns: `UpdateStudioOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : This exception occurs when there is an internal failure in the Amazon EMR service.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func updateStudio(input: UpdateStudioInput) async throws -> UpdateStudioOutputResponse
    /// Updates the session policy attached to the user or group for the specified Amazon EMR Studio.
    ///
    /// - Parameter UpdateStudioSessionMappingInput : [no documentation found]
    ///
    /// - Returns: `UpdateStudioSessionMappingOutputResponse` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerError` : Indicates that an error occurred while processing the request and that the request was not completed.
    /// - `InvalidRequestException` : This exception occurs when there is something wrong with user input.
    func updateStudioSessionMapping(input: UpdateStudioSessionMappingInput) async throws -> UpdateStudioSessionMappingOutputResponse
}

public enum EMRClientTypes {}
