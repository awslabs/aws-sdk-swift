// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

extension IoTFleetWiseClient {
    /// Paginate over `[GetVehicleStatusOutput]` results.
    ///
    /// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
    /// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
    /// until then. If there are errors in your request, you will see the failures only after you start iterating.
    /// - Parameters:
    ///     - input: A `[GetVehicleStatusInput]` to start pagination
    /// - Returns: An `AsyncSequence` that can iterate over `GetVehicleStatusOutput`
    public func getVehicleStatusPaginated(input: GetVehicleStatusInput) -> ClientRuntime.PaginatorSequence<GetVehicleStatusInput, GetVehicleStatusOutput> {
<<<<<<< HEAD
        return ClientRuntime.PaginatorSequence<GetVehicleStatusInput, GetVehicleStatusOutput>(input: input, inputKey: \GetVehicleStatusInput.nextToken, outputKey: \GetVehicleStatusOutput.nextToken, paginationFunction: self.getVehicleStatus(input:))
=======
        return ClientRuntime.PaginatorSequence<GetVehicleStatusInput, GetVehicleStatusOutput>(input: input, inputKey: \.nextToken, outputKey: \.nextToken, paginationFunction: self.getVehicleStatus(input:))
>>>>>>> main
    }
}

extension GetVehicleStatusInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> GetVehicleStatusInput {
        return GetVehicleStatusInput(
            maxResults: self.maxResults,
            nextToken: token,
            vehicleName: self.vehicleName
        )}
}

<<<<<<< HEAD
extension PaginatorSequence where Input == GetVehicleStatusInput, Output == GetVehicleStatusOutput {
=======
extension PaginatorSequence where OperationStackInput == GetVehicleStatusInput, OperationStackOutput == GetVehicleStatusOutput {
>>>>>>> main
    /// This paginator transforms the `AsyncSequence` returned by `getVehicleStatusPaginated`
    /// to access the nested member `[IoTFleetWiseClientTypes.VehicleStatus]`
    /// - Returns: `[IoTFleetWiseClientTypes.VehicleStatus]`
    public func campaigns() async throws -> [IoTFleetWiseClientTypes.VehicleStatus] {
        return try await self.asyncCompactMap { item in item.campaigns }
    }
}
