//
// Copyright Amazon.com Inc. or its affiliates.
// All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

// Code generated by smithy-swift-codegen. DO NOT EDIT!

@_spi(SmithyReadWrite) import ClientRuntime
import Foundation
import class SmithyHTTPAPI.HTTPResponse
@_spi(SmithyReadWrite) import class SmithyJSON.Reader
@_spi(SmithyReadWrite) import class SmithyJSON.Writer
import enum ClientRuntime.ErrorFault
import enum SmithyReadWrite.ReaderError
@_spi(SmithyReadWrite) import enum SmithyReadWrite.ReadingClosures
@_spi(SmithyReadWrite) import enum SmithyReadWrite.WritingClosures
@_spi(SmithyTimestamps) import enum SmithyTimestamps.TimestampFormat
import protocol AWSClientRuntime.AWSServiceError
import protocol ClientRuntime.HTTPError
import protocol ClientRuntime.ModeledError
@_spi(SmithyReadWrite) import protocol SmithyReadWrite.SmithyReader
@_spi(SmithyReadWrite) import protocol SmithyReadWrite.SmithyWriter
@_spi(SmithyReadWrite) import struct AWSClientRuntime.AWSJSONError
@_spi(UnknownAWSHTTPServiceError) import struct AWSClientRuntime.UnknownAWSHTTPServiceError
@_spi(SmithyTimestamps) import struct SmithyTimestamps.TimestampFormatter

extension ApplicationAutoScalingClientTypes {

    public enum AdjustmentType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case changeincapacity
        case exactcapacity
        case percentchangeincapacity
        case sdkUnknown(Swift.String)

        public static var allCases: [AdjustmentType] {
            return [
                .changeincapacity,
                .exactcapacity,
                .percentchangeincapacity
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .changeincapacity: return "ChangeInCapacity"
            case .exactcapacity: return "ExactCapacity"
            case .percentchangeincapacity: return "PercentChangeInCapacity"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents a CloudWatch alarm associated with a scaling policy.
    public struct Alarm {
        /// The Amazon Resource Name (ARN) of the alarm.
        /// This member is required.
        public var alarmARN: Swift.String?
        /// The name of the alarm.
        /// This member is required.
        public var alarmName: Swift.String?

        public init(
            alarmARN: Swift.String? = nil,
            alarmName: Swift.String? = nil
        )
        {
            self.alarmARN = alarmARN
            self.alarmName = alarmName
        }
    }

}

/// Concurrent updates caused an exception, for example, if you request an update to an Application Auto Scaling resource that already has a pending update.
public struct ConcurrentUpdateException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "ConcurrentUpdateException" }
    public static var fault: ClientRuntime.ErrorFault { .server }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

/// The service encountered an internal error.
public struct InternalServiceException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "InternalServiceException" }
    public static var fault: ClientRuntime.ErrorFault { .server }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

/// The specified object could not be found. For any operation that depends on the existence of a scalable target, this exception is thrown if the scalable target with the specified service namespace, resource ID, and scalable dimension does not exist. For any operation that deletes or deregisters a resource, this exception is thrown if the resource cannot be found.
public struct ObjectNotFoundException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "ObjectNotFoundException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

/// An exception was thrown for a validation issue. Review the available parameters for the API request.
public struct ValidationException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "ValidationException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

extension ApplicationAutoScalingClientTypes {

    public enum ScalableDimension: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case appstreamfleetdesiredcapacity
        case cassandratablereadcapacityunits
        case cassandratablewritecapacityunits
        case comprehenddocclassifierendpointinferenceunits
        case comprehendentityrecognizerendpointinferenceunits
        case customresourcescalabledimension
        case dynamodbindexreadcapacityunits
        case dynamodbindexwritecapacityunits
        case dynamodbtablereadcapacityunits
        case dynamodbtablewritecapacityunits
        case ec2spotfleetrequesttargetcapacity
        case ecsservicedesiredcount
        case emrinstancegroupinstancecount
        case elasticachereplicationgroupnodegroups
        case elasticachereplicationgroupreplicas
        case kafkabrokerstoragevolumesize
        case lambdafunctionprovisionedconcurrency
        case neptuneclusterreadreplicacount
        case rdsclusterreadreplicacount
        case sagemakerinferencecomponentdesiredcopycount
        case sagemakervariantdesiredinstancecount
        case sagemakervariantdesiredprovisionedconcurrency
        case workspacesworkspacespooldesiredusersessions
        case sdkUnknown(Swift.String)

        public static var allCases: [ScalableDimension] {
            return [
                .appstreamfleetdesiredcapacity,
                .cassandratablereadcapacityunits,
                .cassandratablewritecapacityunits,
                .comprehenddocclassifierendpointinferenceunits,
                .comprehendentityrecognizerendpointinferenceunits,
                .customresourcescalabledimension,
                .dynamodbindexreadcapacityunits,
                .dynamodbindexwritecapacityunits,
                .dynamodbtablereadcapacityunits,
                .dynamodbtablewritecapacityunits,
                .ec2spotfleetrequesttargetcapacity,
                .ecsservicedesiredcount,
                .emrinstancegroupinstancecount,
                .elasticachereplicationgroupnodegroups,
                .elasticachereplicationgroupreplicas,
                .kafkabrokerstoragevolumesize,
                .lambdafunctionprovisionedconcurrency,
                .neptuneclusterreadreplicacount,
                .rdsclusterreadreplicacount,
                .sagemakerinferencecomponentdesiredcopycount,
                .sagemakervariantdesiredinstancecount,
                .sagemakervariantdesiredprovisionedconcurrency,
                .workspacesworkspacespooldesiredusersessions
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .appstreamfleetdesiredcapacity: return "appstream:fleet:DesiredCapacity"
            case .cassandratablereadcapacityunits: return "cassandra:table:ReadCapacityUnits"
            case .cassandratablewritecapacityunits: return "cassandra:table:WriteCapacityUnits"
            case .comprehenddocclassifierendpointinferenceunits: return "comprehend:document-classifier-endpoint:DesiredInferenceUnits"
            case .comprehendentityrecognizerendpointinferenceunits: return "comprehend:entity-recognizer-endpoint:DesiredInferenceUnits"
            case .customresourcescalabledimension: return "custom-resource:ResourceType:Property"
            case .dynamodbindexreadcapacityunits: return "dynamodb:index:ReadCapacityUnits"
            case .dynamodbindexwritecapacityunits: return "dynamodb:index:WriteCapacityUnits"
            case .dynamodbtablereadcapacityunits: return "dynamodb:table:ReadCapacityUnits"
            case .dynamodbtablewritecapacityunits: return "dynamodb:table:WriteCapacityUnits"
            case .ec2spotfleetrequesttargetcapacity: return "ec2:spot-fleet-request:TargetCapacity"
            case .ecsservicedesiredcount: return "ecs:service:DesiredCount"
            case .emrinstancegroupinstancecount: return "elasticmapreduce:instancegroup:InstanceCount"
            case .elasticachereplicationgroupnodegroups: return "elasticache:replication-group:NodeGroups"
            case .elasticachereplicationgroupreplicas: return "elasticache:replication-group:Replicas"
            case .kafkabrokerstoragevolumesize: return "kafka:broker-storage:VolumeSize"
            case .lambdafunctionprovisionedconcurrency: return "lambda:function:ProvisionedConcurrency"
            case .neptuneclusterreadreplicacount: return "neptune:cluster:ReadReplicaCount"
            case .rdsclusterreadreplicacount: return "rds:cluster:ReadReplicaCount"
            case .sagemakerinferencecomponentdesiredcopycount: return "sagemaker:inference-component:DesiredCopyCount"
            case .sagemakervariantdesiredinstancecount: return "sagemaker:variant:DesiredInstanceCount"
            case .sagemakervariantdesiredprovisionedconcurrency: return "sagemaker:variant:DesiredProvisionedConcurrency"
            case .workspacesworkspacespooldesiredusersessions: return "workspaces:workspacespool:DesiredUserSessions"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {

    public enum ServiceNamespace: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case appstream
        case cassandra
        case comprehend
        case customResource
        case dynamodb
        case ec2
        case ecs
        case elasticache
        case emr
        case kafka
        case lambda
        case neptune
        case rds
        case sagemaker
        case workspaces
        case sdkUnknown(Swift.String)

        public static var allCases: [ServiceNamespace] {
            return [
                .appstream,
                .cassandra,
                .comprehend,
                .customResource,
                .dynamodb,
                .ec2,
                .ecs,
                .elasticache,
                .emr,
                .kafka,
                .lambda,
                .neptune,
                .rds,
                .sagemaker,
                .workspaces
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .appstream: return "appstream"
            case .cassandra: return "cassandra"
            case .comprehend: return "comprehend"
            case .customResource: return "custom-resource"
            case .dynamodb: return "dynamodb"
            case .ec2: return "ec2"
            case .ecs: return "ecs"
            case .elasticache: return "elasticache"
            case .emr: return "elasticmapreduce"
            case .kafka: return "kafka"
            case .lambda: return "lambda"
            case .neptune: return "neptune"
            case .rds: return "rds"
            case .sagemaker: return "sagemaker"
            case .workspaces: return "workspaces"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

public struct DeleteScalingPolicyInput {
    /// The name of the scaling policy.
    /// This member is required.
    public var policyName: Swift.String?
    /// The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        policyName: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.policyName = policyName
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
    }
}

public struct DeleteScalingPolicyOutput {

    public init() { }
}

public struct DeleteScheduledActionInput {
    /// The identifier of the resource associated with the scheduled action. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The name of the scheduled action.
    /// This member is required.
    public var scheduledActionName: Swift.String?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        scheduledActionName: Swift.String? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.scheduledActionName = scheduledActionName
        self.serviceNamespace = serviceNamespace
    }
}

public struct DeleteScheduledActionOutput {

    public init() { }
}

public struct DeregisterScalableTargetInput {
    /// The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
    }
}

public struct DeregisterScalableTargetOutput {

    public init() { }
}

/// The next token supplied was invalid.
public struct InvalidNextTokenException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "InvalidNextTokenException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

public struct DescribeScalableTargetsInput {
    /// The maximum number of scalable targets. This value can be between 1 and 50. The default value is 50. If this parameter is used, the operation returns up to MaxResults results at a time, along with a NextToken value. To get the next set of results, include the NextToken value in a subsequent call. If this parameter is not used, the operation returns up to 50 results and a NextToken value, if applicable.
    public var maxResults: Swift.Int?
    /// The token for the next set of results.
    public var nextToken: Swift.String?
    /// The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    public var resourceIds: [Swift.String]?
    /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property. If you specify a scalable dimension, you must also specify a resource ID.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        resourceIds: [Swift.String]? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceIds = resourceIds
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Specifies whether the scaling activities for a scalable target are in a suspended state.
    public struct SuspendedState {
        /// Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Set the value to true if you don't want Application Auto Scaling to remove capacity when a scaling policy is triggered. The default is false.
        public var dynamicScalingInSuspended: Swift.Bool?
        /// Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Set the value to true if you don't want Application Auto Scaling to add capacity when a scaling policy is triggered. The default is false.
        public var dynamicScalingOutSuspended: Swift.Bool?
        /// Whether scheduled scaling is suspended. Set the value to true if you don't want Application Auto Scaling to add or remove capacity by initiating scheduled actions. The default is false.
        public var scheduledScalingSuspended: Swift.Bool?

        public init(
            dynamicScalingInSuspended: Swift.Bool? = nil,
            dynamicScalingOutSuspended: Swift.Bool? = nil,
            scheduledScalingSuspended: Swift.Bool? = nil
        )
        {
            self.dynamicScalingInSuspended = dynamicScalingInSuspended
            self.dynamicScalingOutSuspended = dynamicScalingOutSuspended
            self.scheduledScalingSuspended = scheduledScalingSuspended
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a scalable target.
    public struct ScalableTarget {
        /// The Unix timestamp for when the scalable target was created.
        /// This member is required.
        public var creationTime: Foundation.Date?
        /// The maximum value to scale to in response to a scale-out activity.
        /// This member is required.
        public var maxCapacity: Swift.Int?
        /// The minimum value to scale to in response to a scale-in activity.
        /// This member is required.
        public var minCapacity: Swift.Int?
        /// The identifier of the resource associated with the scalable target. This string consists of the resource type and unique identifier.
        ///
        /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
        ///
        /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
        ///
        /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
        ///
        /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
        ///
        /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
        ///
        /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
        ///
        /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
        ///
        /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
        ///
        /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
        ///
        /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
        ///
        /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
        ///
        /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
        ///
        /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
        ///
        /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
        ///
        /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
        ///
        /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
        ///
        /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
        /// This member is required.
        public var resourceId: Swift.String?
        /// The ARN of an IAM role that allows Application Auto Scaling to modify the scalable target on your behalf.
        /// This member is required.
        public var roleARN: Swift.String?
        /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property.
        ///
        /// * ecs:service:DesiredCount - The task count of an ECS service.
        ///
        /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
        ///
        /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
        ///
        /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
        ///
        /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
        ///
        /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
        ///
        /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
        ///
        /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
        ///
        /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
        ///
        /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
        ///
        /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
        ///
        /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
        ///
        /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
        ///
        /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
        ///
        /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
        ///
        /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
        ///
        /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
        ///
        /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
        ///
        /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
        ///
        /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
        ///
        /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
        ///
        /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
        ///
        /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
        /// This member is required.
        public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
        /// The ARN of the scalable target.
        public var scalableTargetARN: Swift.String?
        /// The namespace of the Amazon Web Services service that provides the resource, or a custom-resource.
        /// This member is required.
        public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
        /// Specifies whether the scaling activities for a scalable target are in a suspended state.
        public var suspendedState: ApplicationAutoScalingClientTypes.SuspendedState?

        public init(
            creationTime: Foundation.Date? = nil,
            maxCapacity: Swift.Int? = nil,
            minCapacity: Swift.Int? = nil,
            resourceId: Swift.String? = nil,
            roleARN: Swift.String? = nil,
            scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
            scalableTargetARN: Swift.String? = nil,
            serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
            suspendedState: ApplicationAutoScalingClientTypes.SuspendedState? = nil
        )
        {
            self.creationTime = creationTime
            self.maxCapacity = maxCapacity
            self.minCapacity = minCapacity
            self.resourceId = resourceId
            self.roleARN = roleARN
            self.scalableDimension = scalableDimension
            self.scalableTargetARN = scalableTargetARN
            self.serviceNamespace = serviceNamespace
            self.suspendedState = suspendedState
        }
    }

}

public struct DescribeScalableTargetsOutput {
    /// The token required to get the next set of results. This value is null if there are no more results to return.
    public var nextToken: Swift.String?
    /// The scalable targets that match the request parameters.
    public var scalableTargets: [ApplicationAutoScalingClientTypes.ScalableTarget]?

    public init(
        nextToken: Swift.String? = nil,
        scalableTargets: [ApplicationAutoScalingClientTypes.ScalableTarget]? = nil
    )
    {
        self.nextToken = nextToken
        self.scalableTargets = scalableTargets
    }
}

public struct DescribeScalingActivitiesInput {
    /// Specifies whether to include activities that aren't scaled (not scaled activities) in the response. Not scaled activities are activities that aren't completed or started for various reasons, such as preventing infinite scaling loops. For help interpreting the not scaled reason details in the response, see [Scaling activities for Application Auto Scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scaling-activities.html).
    public var includeNotScaledActivities: Swift.Bool?
    /// The maximum number of scalable targets. This value can be between 1 and 50. The default value is 50. If this parameter is used, the operation returns up to MaxResults results at a time, along with a NextToken value. To get the next set of results, include the NextToken value in a subsequent call. If this parameter is not used, the operation returns up to 50 results and a NextToken value, if applicable.
    public var maxResults: Swift.Int?
    /// The token for the next set of results.
    public var nextToken: Swift.String?
    /// The identifier of the resource associated with the scaling activity. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property. If you specify a scalable dimension, you must also specify a resource ID.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        includeNotScaledActivities: Swift.Bool? = nil,
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.includeNotScaledActivities = includeNotScaledActivities
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Describes the reason for an activity that isn't scaled (not scaled activity), in machine-readable format. For help interpreting the not scaled reason details, see [Scaling activities for Application Auto Scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-scaling-activities.html) in the Application Auto Scaling User Guide.
    public struct NotScaledReason {
        /// A code that represents the reason for not scaling. Valid values:
        ///
        /// * AutoScalingAnticipatedFlapping
        ///
        /// * TargetServicePutResourceAsUnscalable
        ///
        /// * AlreadyAtMaxCapacity
        ///
        /// * AlreadyAtMinCapacity
        ///
        /// * AlreadyAtDesiredCapacity
        /// This member is required.
        public var code: Swift.String?
        /// The current capacity.
        public var currentCapacity: Swift.Int?
        /// The maximum capacity.
        public var maxCapacity: Swift.Int?
        /// The minimum capacity.
        public var minCapacity: Swift.Int?

        public init(
            code: Swift.String? = nil,
            currentCapacity: Swift.Int? = nil,
            maxCapacity: Swift.Int? = nil,
            minCapacity: Swift.Int? = nil
        )
        {
            self.code = code
            self.currentCapacity = currentCapacity
            self.maxCapacity = maxCapacity
            self.minCapacity = minCapacity
        }
    }

}

extension ApplicationAutoScalingClientTypes {

    public enum ScalingActivityStatusCode: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case failed
        case inprogress
        case overridden
        case pending
        case successful
        case unfulfilled
        case sdkUnknown(Swift.String)

        public static var allCases: [ScalingActivityStatusCode] {
            return [
                .failed,
                .inprogress,
                .overridden,
                .pending,
                .successful,
                .unfulfilled
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .failed: return "Failed"
            case .inprogress: return "InProgress"
            case .overridden: return "Overridden"
            case .pending: return "Pending"
            case .successful: return "Successful"
            case .unfulfilled: return "Unfulfilled"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents a scaling activity.
    public struct ScalingActivity {
        /// The unique identifier of the scaling activity.
        /// This member is required.
        public var activityId: Swift.String?
        /// A simple description of what caused the scaling activity to happen.
        /// This member is required.
        public var cause: Swift.String?
        /// A simple description of what action the scaling activity intends to accomplish.
        /// This member is required.
        public var description: Swift.String?
        /// The details about the scaling activity.
        public var details: Swift.String?
        /// The Unix timestamp for when the scaling activity ended.
        public var endTime: Foundation.Date?
        /// Machine-readable data that describes the reason for a not scaled activity. Only available when [DescribeScalingActivities](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_DescribeScalingActivities.html) includes not scaled activities.
        public var notScaledReasons: [ApplicationAutoScalingClientTypes.NotScaledReason]?
        /// The identifier of the resource associated with the scaling activity. This string consists of the resource type and unique identifier.
        ///
        /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
        ///
        /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
        ///
        /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
        ///
        /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
        ///
        /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
        ///
        /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
        ///
        /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
        ///
        /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
        ///
        /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
        ///
        /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
        ///
        /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
        ///
        /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
        ///
        /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
        ///
        /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
        ///
        /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
        ///
        /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
        ///
        /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
        /// This member is required.
        public var resourceId: Swift.String?
        /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
        ///
        /// * ecs:service:DesiredCount - The task count of an ECS service.
        ///
        /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
        ///
        /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
        ///
        /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
        ///
        /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
        ///
        /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
        ///
        /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
        ///
        /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
        ///
        /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
        ///
        /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
        ///
        /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
        ///
        /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
        ///
        /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
        ///
        /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
        ///
        /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
        ///
        /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
        ///
        /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
        ///
        /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
        ///
        /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
        ///
        /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
        ///
        /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
        ///
        /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
        ///
        /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
        /// This member is required.
        public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
        /// The namespace of the Amazon Web Services service that provides the resource, or a custom-resource.
        /// This member is required.
        public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
        /// The Unix timestamp for when the scaling activity began.
        /// This member is required.
        public var startTime: Foundation.Date?
        /// Indicates the status of the scaling activity.
        /// This member is required.
        public var statusCode: ApplicationAutoScalingClientTypes.ScalingActivityStatusCode?
        /// A simple message about the current status of the scaling activity.
        public var statusMessage: Swift.String?

        public init(
            activityId: Swift.String? = nil,
            cause: Swift.String? = nil,
            description: Swift.String? = nil,
            details: Swift.String? = nil,
            endTime: Foundation.Date? = nil,
            notScaledReasons: [ApplicationAutoScalingClientTypes.NotScaledReason]? = nil,
            resourceId: Swift.String? = nil,
            scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
            serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
            startTime: Foundation.Date? = nil,
            statusCode: ApplicationAutoScalingClientTypes.ScalingActivityStatusCode? = nil,
            statusMessage: Swift.String? = nil
        )
        {
            self.activityId = activityId
            self.cause = cause
            self.description = description
            self.details = details
            self.endTime = endTime
            self.notScaledReasons = notScaledReasons
            self.resourceId = resourceId
            self.scalableDimension = scalableDimension
            self.serviceNamespace = serviceNamespace
            self.startTime = startTime
            self.statusCode = statusCode
            self.statusMessage = statusMessage
        }
    }

}

public struct DescribeScalingActivitiesOutput {
    /// The token required to get the next set of results. This value is null if there are no more results to return.
    public var nextToken: Swift.String?
    /// A list of scaling activity objects.
    public var scalingActivities: [ApplicationAutoScalingClientTypes.ScalingActivity]?

    public init(
        nextToken: Swift.String? = nil,
        scalingActivities: [ApplicationAutoScalingClientTypes.ScalingActivity]? = nil
    )
    {
        self.nextToken = nextToken
        self.scalingActivities = scalingActivities
    }
}

/// Failed access to resources caused an exception. This exception is thrown when Application Auto Scaling is unable to retrieve the alarms associated with a scaling policy due to a client error, for example, if the role ARN specified for a scalable target does not have permission to call the CloudWatch [DescribeAlarms](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarms.html) on your behalf.
public struct FailedResourceAccessException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "FailedResourceAccessException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

public struct DescribeScalingPoliciesInput {
    /// The maximum number of scalable targets. This value can be between 1 and 10. The default value is 10. If this parameter is used, the operation returns up to MaxResults results at a time, along with a NextToken value. To get the next set of results, include the NextToken value in a subsequent call. If this parameter is not used, the operation returns up to 10 results and a NextToken value, if applicable.
    public var maxResults: Swift.Int?
    /// The token for the next set of results.
    public var nextToken: Swift.String?
    /// The names of the scaling policies to describe.
    public var policyNames: [Swift.String]?
    /// The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property. If you specify a scalable dimension, you must also specify a resource ID.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        policyNames: [Swift.String]? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.policyNames = policyNames
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
    }
}

extension ApplicationAutoScalingClientTypes {

    public enum PolicyType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case stepscaling
        case targettrackingscaling
        case sdkUnknown(Swift.String)

        public static var allCases: [PolicyType] {
            return [
                .stepscaling,
                .targettrackingscaling
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .stepscaling: return "StepScaling"
            case .targettrackingscaling: return "TargetTrackingScaling"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {

    public enum MetricAggregationType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case average
        case maximum
        case minimum
        case sdkUnknown(Swift.String)

        public static var allCases: [MetricAggregationType] {
            return [
                .average,
                .maximum,
                .minimum
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .average: return "Average"
            case .maximum: return "Maximum"
            case .minimum: return "Minimum"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents a step adjustment for a [StepScalingPolicyConfiguration](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html). Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. For the following examples, suppose that you have an alarm with a breach threshold of 50:
    ///
    /// * To initiate the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.
    ///
    /// * To initiate the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.
    ///
    ///
    /// There are a few rules for the step adjustments for your step policy:
    ///
    /// * The ranges of your step adjustments can't overlap or have a gap.
    ///
    /// * At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.
    ///
    /// * At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.
    ///
    /// * The upper and lower bound can't be null in the same step adjustment.
    public struct StepAdjustment {
        /// The lower bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the lower bound is inclusive (the metric must be greater than or equal to the threshold plus the lower bound). Otherwise, it's exclusive (the metric must be greater than the threshold plus the lower bound). A null value indicates negative infinity.
        public var metricIntervalLowerBound: Swift.Double?
        /// The upper bound for the difference between the alarm threshold and the CloudWatch metric. If the metric value is above the breach threshold, the upper bound is exclusive (the metric must be less than the threshold plus the upper bound). Otherwise, it's inclusive (the metric must be less than or equal to the threshold plus the upper bound). A null value indicates positive infinity. The upper bound must be greater than the lower bound.
        public var metricIntervalUpperBound: Swift.Double?
        /// The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a non-negative value.
        /// This member is required.
        public var scalingAdjustment: Swift.Int?

        public init(
            metricIntervalLowerBound: Swift.Double? = nil,
            metricIntervalUpperBound: Swift.Double? = nil,
            scalingAdjustment: Swift.Int? = nil
        )
        {
            self.metricIntervalLowerBound = metricIntervalLowerBound
            self.metricIntervalUpperBound = metricIntervalUpperBound
            self.scalingAdjustment = scalingAdjustment
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a step scaling policy configuration to use with Application Auto Scaling. For more information, see [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the Application Auto Scaling User Guide.
    public struct StepScalingPolicyConfiguration {
        /// Specifies how the ScalingAdjustment value in a [StepAdjustment](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepAdjustment.html) is interpreted (for example, an absolute number or a percentage). The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity. AdjustmentType is required if you are adding a new step scaling policy configuration.
        public var adjustmentType: ApplicationAutoScalingClientTypes.AdjustmentType?
        /// The amount of time, in seconds, to wait for a previous scaling activity to take effect. If not specified, the default value is 300. For more information, see [Cooldown period](https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown) in the Application Auto Scaling User Guide.
        public var cooldown: Swift.Int?
        /// The aggregation type for the CloudWatch metrics. Valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average.
        public var metricAggregationType: ApplicationAutoScalingClientTypes.MetricAggregationType?
        /// The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Amazon ECS service by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the service has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Application Auto Scaling scales out the service by 2 tasks.
        public var minAdjustmentMagnitude: Swift.Int?
        /// A set of adjustments that enable you to scale based on the size of the alarm breach. At least one step adjustment is required if you are adding a new step scaling policy configuration.
        public var stepAdjustments: [ApplicationAutoScalingClientTypes.StepAdjustment]?

        public init(
            adjustmentType: ApplicationAutoScalingClientTypes.AdjustmentType? = nil,
            cooldown: Swift.Int? = nil,
            metricAggregationType: ApplicationAutoScalingClientTypes.MetricAggregationType? = nil,
            minAdjustmentMagnitude: Swift.Int? = nil,
            stepAdjustments: [ApplicationAutoScalingClientTypes.StepAdjustment]? = nil
        )
        {
            self.adjustmentType = adjustmentType
            self.cooldown = cooldown
            self.metricAggregationType = metricAggregationType
            self.minAdjustmentMagnitude = minAdjustmentMagnitude
            self.stepAdjustments = stepAdjustments
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Describes the dimension names and values associated with a metric.
    public struct MetricDimension {
        /// The name of the dimension.
        /// This member is required.
        public var name: Swift.String?
        /// The value of the dimension.
        /// This member is required.
        public var value: Swift.String?

        public init(
            name: Swift.String? = nil,
            value: Swift.String? = nil
        )
        {
            self.name = name
            self.value = value
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Describes the dimension of a metric.
    public struct TargetTrackingMetricDimension {
        /// The name of the dimension.
        /// This member is required.
        public var name: Swift.String?
        /// The value of the dimension.
        /// This member is required.
        public var value: Swift.String?

        public init(
            name: Swift.String? = nil,
            value: Swift.String? = nil
        )
        {
            self.name = name
            self.value = value
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a specific metric. Metric is a property of the [TargetTrackingMetricStat] object.
    public struct TargetTrackingMetric {
        /// The dimensions for the metric. For the list of available dimensions, see the Amazon Web Services documentation available from the table in [Amazon Web Services services that publish CloudWatch metrics ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide. Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
        public var dimensions: [ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension]?
        /// The name of the metric.
        public var metricName: Swift.String?
        /// The namespace of the metric. For more information, see the table in [Amazon Web Services services that publish CloudWatch metrics ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide.
        public var namespace: Swift.String?

        public init(
            dimensions: [ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension]? = nil,
            metricName: Swift.String? = nil,
            namespace: Swift.String? = nil
        )
        {
            self.dimensions = dimensions
            self.metricName = metricName
            self.namespace = namespace
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// This structure defines the CloudWatch metric to return, along with the statistic and unit. For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the Amazon CloudWatch User Guide.
    public struct TargetTrackingMetricStat {
        /// The CloudWatch metric to return, including the metric name, namespace, and dimensions. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
        /// This member is required.
        public var metric: ApplicationAutoScalingClientTypes.TargetTrackingMetric?
        /// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the Amazon CloudWatch User Guide. The most commonly used metric for scaling is Average.
        /// This member is required.
        public var stat: Swift.String?
        /// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the Amazon CloudWatch API Reference.
        public var unit: Swift.String?

        public init(
            metric: ApplicationAutoScalingClientTypes.TargetTrackingMetric? = nil,
            stat: Swift.String? = nil,
            unit: Swift.String? = nil
        )
        {
            self.metric = metric
            self.stat = stat
            self.unit = unit
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// The metric data to return. Also defines whether this call is returning data for one metric only, or whether it is performing a math expression on the values of returned metric statistics to create a new time series. A time series is a series of data points, each of which is associated with a timestamp. For more information and examples, see [Create a target tracking scaling policy for Application Auto Scaling using metric math](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking-metric-math.html) in the Application Auto Scaling User Guide.
    public struct TargetTrackingMetricDataQuery {
        /// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the Id of the other metrics to refer to those metrics, and can also use the Id of other expressions to use the result of those expressions. Conditional: Within each TargetTrackingMetricDataQuery object, you must specify either Expression or MetricStat, but not both.
        public var expression: Swift.String?
        /// A short name that identifies the object's results in the response. This name must be unique among all MetricDataQuery objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
        /// This member is required.
        public var id: Swift.String?
        /// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
        public var label: Swift.String?
        /// Information about the metric data to return. Conditional: Within each MetricDataQuery object, you must specify either Expression or MetricStat, but not both.
        public var metricStat: ApplicationAutoScalingClientTypes.TargetTrackingMetricStat?
        /// Indicates whether to return the timestamps and raw data values of this metric. If you use any math expressions, specify true for this value for only the final math expression that the metric specification is based on. You must specify false for ReturnData for all the other metrics and expressions used in the metric specification. If you are only retrieving metrics and not performing any math expressions, do not specify anything for ReturnData. This sets it to its default (true).
        public var returnData: Swift.Bool?

        public init(
            expression: Swift.String? = nil,
            id: Swift.String? = nil,
            label: Swift.String? = nil,
            metricStat: ApplicationAutoScalingClientTypes.TargetTrackingMetricStat? = nil,
            returnData: Swift.Bool? = nil
        )
        {
            self.expression = expression
            self.id = id
            self.label = label
            self.metricStat = metricStat
            self.returnData = returnData
        }
    }

}

extension ApplicationAutoScalingClientTypes {

    public enum MetricStatistic: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case average
        case maximum
        case minimum
        case samplecount
        case sum
        case sdkUnknown(Swift.String)

        public static var allCases: [MetricStatistic] {
            return [
                .average,
                .maximum,
                .minimum,
                .samplecount,
                .sum
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .average: return "Average"
            case .maximum: return "Maximum"
            case .minimum: return "Minimum"
            case .samplecount: return "SampleCount"
            case .sum: return "Sum"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling. For information about the available metrics for a service, see [Amazon Web Services services that publish CloudWatch metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html) in the Amazon CloudWatch User Guide. To create your customized metric specification:
    ///
    /// * Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the Amazon CloudWatch User Guide.
    ///
    /// * Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases.
    ///
    ///
    /// For more information about the CloudWatch terminology below, see [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) in the Amazon CloudWatch User Guide.
    public struct CustomizedMetricSpecification {
        /// The dimensions of the metric. Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
        public var dimensions: [ApplicationAutoScalingClientTypes.MetricDimension]?
        /// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that's returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).
        public var metricName: Swift.String?
        /// The metrics to include in the target tracking scaling policy, as a metric data query. This can include both raw metric and metric math expressions.
        public var metrics: [ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery]?
        /// The namespace of the metric.
        public var namespace: Swift.String?
        /// The statistic of the metric.
        public var statistic: ApplicationAutoScalingClientTypes.MetricStatistic?
        /// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the Amazon CloudWatch API Reference.
        public var unit: Swift.String?

        public init(
            dimensions: [ApplicationAutoScalingClientTypes.MetricDimension]? = nil,
            metricName: Swift.String? = nil,
            metrics: [ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery]? = nil,
            namespace: Swift.String? = nil,
            statistic: ApplicationAutoScalingClientTypes.MetricStatistic? = nil,
            unit: Swift.String? = nil
        )
        {
            self.dimensions = dimensions
            self.metricName = metricName
            self.metrics = metrics
            self.namespace = namespace
            self.statistic = statistic
            self.unit = unit
        }
    }

}

extension ApplicationAutoScalingClientTypes {

    public enum MetricType: Swift.Equatable, Swift.RawRepresentable, Swift.CaseIterable, Swift.Hashable {
        case albrequestcountpertarget
        case appstreamaveragecapacityutilization
        case cassandrareadcapacityutilization
        case cassandrawritecapacityutilization
        case comprehendinferenceutilization
        case dynamodbreadcapacityutilization
        case dynamodbwritecapacityutilization
        case ec2spotfleetrequestaveragecpuutilization
        case ec2spotfleetrequestaveragenetworkin
        case ec2spotfleetrequestaveragenetworkout
        case ecsserviceaveragecpuutilization
        case ecsserviceaveragememoryutilization
        case elasticachedatabasecapacityusagecountedforevictpercentage
        case elasticachedatabasememoryusagecountedforevictpercentage
        case elasticacheprimaryenginecpuutilization
        case elasticachereplicaenginecpuutilization
        case kafkabrokerstorageutilization
        case lambdaprovisionedconcurrencyutilization
        case neptunereaderaveragecpuutilization
        case rdsreaderaveragecpuutilization
        case rdsreaderaveragedatabaseconnections
        case sagemakerinferencecomponentinvocationspercopy
        case sagemakervariantinvocationsperinstance
        case sagemakervariantprovisionedconcurrencyutilization
        case workspacesaverageusersessionscapacityutilization
        case sdkUnknown(Swift.String)

        public static var allCases: [MetricType] {
            return [
                .albrequestcountpertarget,
                .appstreamaveragecapacityutilization,
                .cassandrareadcapacityutilization,
                .cassandrawritecapacityutilization,
                .comprehendinferenceutilization,
                .dynamodbreadcapacityutilization,
                .dynamodbwritecapacityutilization,
                .ec2spotfleetrequestaveragecpuutilization,
                .ec2spotfleetrequestaveragenetworkin,
                .ec2spotfleetrequestaveragenetworkout,
                .ecsserviceaveragecpuutilization,
                .ecsserviceaveragememoryutilization,
                .elasticachedatabasecapacityusagecountedforevictpercentage,
                .elasticachedatabasememoryusagecountedforevictpercentage,
                .elasticacheprimaryenginecpuutilization,
                .elasticachereplicaenginecpuutilization,
                .kafkabrokerstorageutilization,
                .lambdaprovisionedconcurrencyutilization,
                .neptunereaderaveragecpuutilization,
                .rdsreaderaveragecpuutilization,
                .rdsreaderaveragedatabaseconnections,
                .sagemakerinferencecomponentinvocationspercopy,
                .sagemakervariantinvocationsperinstance,
                .sagemakervariantprovisionedconcurrencyutilization,
                .workspacesaverageusersessionscapacityutilization
            ]
        }

        public init?(rawValue: Swift.String) {
            let value = Self.allCases.first(where: { $0.rawValue == rawValue })
            self = value ?? Self.sdkUnknown(rawValue)
        }

        public var rawValue: Swift.String {
            switch self {
            case .albrequestcountpertarget: return "ALBRequestCountPerTarget"
            case .appstreamaveragecapacityutilization: return "AppStreamAverageCapacityUtilization"
            case .cassandrareadcapacityutilization: return "CassandraReadCapacityUtilization"
            case .cassandrawritecapacityutilization: return "CassandraWriteCapacityUtilization"
            case .comprehendinferenceutilization: return "ComprehendInferenceUtilization"
            case .dynamodbreadcapacityutilization: return "DynamoDBReadCapacityUtilization"
            case .dynamodbwritecapacityutilization: return "DynamoDBWriteCapacityUtilization"
            case .ec2spotfleetrequestaveragecpuutilization: return "EC2SpotFleetRequestAverageCPUUtilization"
            case .ec2spotfleetrequestaveragenetworkin: return "EC2SpotFleetRequestAverageNetworkIn"
            case .ec2spotfleetrequestaveragenetworkout: return "EC2SpotFleetRequestAverageNetworkOut"
            case .ecsserviceaveragecpuutilization: return "ECSServiceAverageCPUUtilization"
            case .ecsserviceaveragememoryutilization: return "ECSServiceAverageMemoryUtilization"
            case .elasticachedatabasecapacityusagecountedforevictpercentage: return "ElastiCacheDatabaseCapacityUsageCountedForEvictPercentage"
            case .elasticachedatabasememoryusagecountedforevictpercentage: return "ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage"
            case .elasticacheprimaryenginecpuutilization: return "ElastiCachePrimaryEngineCPUUtilization"
            case .elasticachereplicaenginecpuutilization: return "ElastiCacheReplicaEngineCPUUtilization"
            case .kafkabrokerstorageutilization: return "KafkaBrokerStorageUtilization"
            case .lambdaprovisionedconcurrencyutilization: return "LambdaProvisionedConcurrencyUtilization"
            case .neptunereaderaveragecpuutilization: return "NeptuneReaderAverageCPUUtilization"
            case .rdsreaderaveragecpuutilization: return "RDSReaderAverageCPUUtilization"
            case .rdsreaderaveragedatabaseconnections: return "RDSReaderAverageDatabaseConnections"
            case .sagemakerinferencecomponentinvocationspercopy: return "SageMakerInferenceComponentInvocationsPerCopy"
            case .sagemakervariantinvocationsperinstance: return "SageMakerVariantInvocationsPerInstance"
            case .sagemakervariantprovisionedconcurrencyutilization: return "SageMakerVariantProvisionedConcurrencyUtilization"
            case .workspacesaverageusersessionscapacityutilization: return "WorkSpacesAverageUserSessionsCapacityUtilization"
            case let .sdkUnknown(s): return s
            }
        }
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling. For more information, [Predefined metrics for target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/monitor-cloudwatch-metrics.html#predefined-metrics) in the Application Auto Scaling User Guide.
    public struct PredefinedMetricSpecification {
        /// The metric type. The ALBRequestCountPerTarget metric type applies only to Spot Fleets and ECS services.
        /// This member is required.
        public var predefinedMetricType: ApplicationAutoScalingClientTypes.MetricType?
        /// Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ALBRequestCountPerTarget and there is a target group attached to the Spot Fleet or ECS service. You create the resource label by appending the final portion of the load balancer ARN and the final portion of the target group ARN into a single value, separated by a forward slash (/). The format of the resource label is: app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff. Where:
        ///
        /// * app// is the final portion of the load balancer ARN
        ///
        /// * targetgroup// is the final portion of the target group ARN.
        ///
        ///
        /// To find the ARN for an Application Load Balancer, use the [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operation. To find the ARN for the target group, use the [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) API operation.
        public var resourceLabel: Swift.String?

        public init(
            predefinedMetricType: ApplicationAutoScalingClientTypes.MetricType? = nil,
            resourceLabel: Swift.String? = nil
        )
        {
            self.predefinedMetricType = predefinedMetricType
            self.resourceLabel = resourceLabel
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a target tracking scaling policy configuration to use with Application Auto Scaling. For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) in the Application Auto Scaling User Guide.
    public struct TargetTrackingScalingPolicyConfiguration {
        /// A customized metric. You can specify either a predefined metric or a customized metric.
        public var customizedMetricSpecification: ApplicationAutoScalingClientTypes.CustomizedMetricSpecification?
        /// Indicates whether scale in by the target tracking scaling policy is disabled. If the value is true, scale in is disabled and the target tracking scaling policy won't remove capacity from the scalable target. Otherwise, scale in is enabled and the target tracking scaling policy can remove capacity from the scalable target. The default value is false.
        public var disableScaleIn: Swift.Bool?
        /// A predefined metric. You can specify either a predefined metric or a customized metric.
        public var predefinedMetricSpecification: ApplicationAutoScalingClientTypes.PredefinedMetricSpecification?
        /// The amount of time, in seconds, after a scale-in activity completes before another scale-in activity can start. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the Application Auto Scaling User Guide.
        public var scaleInCooldown: Swift.Int?
        /// The amount of time, in seconds, to wait for a previous scale-out activity to take effect. For more information and for default values, see [Define cooldown periods](https://docs.aws.amazon.com/autoscaling/application/userguide/target-tracking-scaling-policy-overview.html#target-tracking-cooldown) in the Application Auto Scaling User Guide.
        public var scaleOutCooldown: Swift.Int?
        /// The target value for the metric. Although this property accepts numbers of type Double, it won't accept values that are either too small or too large. Values must be in the range of -2^360 to 2^360. The value must be a valid number based on the choice of metric. For example, if the metric is CPU utilization, then the target value is a percent value that represents how much of the CPU can be used before scaling out. If the scaling policy specifies the ALBRequestCountPerTarget predefined metric, specify the target utilization as the optimal average request count per target during any one-minute interval.
        /// This member is required.
        public var targetValue: Swift.Double?

        public init(
            customizedMetricSpecification: ApplicationAutoScalingClientTypes.CustomizedMetricSpecification? = nil,
            disableScaleIn: Swift.Bool? = nil,
            predefinedMetricSpecification: ApplicationAutoScalingClientTypes.PredefinedMetricSpecification? = nil,
            scaleInCooldown: Swift.Int? = nil,
            scaleOutCooldown: Swift.Int? = nil,
            targetValue: Swift.Double? = nil
        )
        {
            self.customizedMetricSpecification = customizedMetricSpecification
            self.disableScaleIn = disableScaleIn
            self.predefinedMetricSpecification = predefinedMetricSpecification
            self.scaleInCooldown = scaleInCooldown
            self.scaleOutCooldown = scaleOutCooldown
            self.targetValue = targetValue
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a scaling policy to use with Application Auto Scaling. For more information about configuring scaling policies for a specific service, see [Amazon Web Services services that you can use with Application Auto Scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/integrated-services-list.html) in the Application Auto Scaling User Guide.
    public struct ScalingPolicy {
        /// The CloudWatch alarms associated with the scaling policy.
        public var alarms: [ApplicationAutoScalingClientTypes.Alarm]?
        /// The Unix timestamp for when the scaling policy was created.
        /// This member is required.
        public var creationTime: Foundation.Date?
        /// The Amazon Resource Name (ARN) of the scaling policy.
        /// This member is required.
        public var policyARN: Swift.String?
        /// The name of the scaling policy.
        /// This member is required.
        public var policyName: Swift.String?
        /// The scaling policy type. The following policy types are supported: TargetTrackingScaling—Not supported for Amazon EMR StepScaling—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune.
        /// This member is required.
        public var policyType: ApplicationAutoScalingClientTypes.PolicyType?
        /// The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
        ///
        /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
        ///
        /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
        ///
        /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
        ///
        /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
        ///
        /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
        ///
        /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
        ///
        /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
        ///
        /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
        ///
        /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
        ///
        /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
        ///
        /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
        ///
        /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
        ///
        /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
        ///
        /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
        ///
        /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
        ///
        /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
        ///
        /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
        /// This member is required.
        public var resourceId: Swift.String?
        /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
        ///
        /// * ecs:service:DesiredCount - The task count of an ECS service.
        ///
        /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
        ///
        /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
        ///
        /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
        ///
        /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
        ///
        /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
        ///
        /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
        ///
        /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
        ///
        /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
        ///
        /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
        ///
        /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
        ///
        /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
        ///
        /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
        ///
        /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
        ///
        /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
        ///
        /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
        ///
        /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
        ///
        /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
        ///
        /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
        ///
        /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
        ///
        /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
        ///
        /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
        ///
        /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
        /// This member is required.
        public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
        /// The namespace of the Amazon Web Services service that provides the resource, or a custom-resource.
        /// This member is required.
        public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
        /// A step scaling policy.
        public var stepScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration?
        /// A target tracking scaling policy.
        public var targetTrackingScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration?

        public init(
            alarms: [ApplicationAutoScalingClientTypes.Alarm]? = nil,
            creationTime: Foundation.Date? = nil,
            policyARN: Swift.String? = nil,
            policyName: Swift.String? = nil,
            policyType: ApplicationAutoScalingClientTypes.PolicyType? = nil,
            resourceId: Swift.String? = nil,
            scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
            serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
            stepScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration? = nil,
            targetTrackingScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration? = nil
        )
        {
            self.alarms = alarms
            self.creationTime = creationTime
            self.policyARN = policyARN
            self.policyName = policyName
            self.policyType = policyType
            self.resourceId = resourceId
            self.scalableDimension = scalableDimension
            self.serviceNamespace = serviceNamespace
            self.stepScalingPolicyConfiguration = stepScalingPolicyConfiguration
            self.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration
        }
    }

}

public struct DescribeScalingPoliciesOutput {
    /// The token required to get the next set of results. This value is null if there are no more results to return.
    public var nextToken: Swift.String?
    /// Information about the scaling policies.
    public var scalingPolicies: [ApplicationAutoScalingClientTypes.ScalingPolicy]?

    public init(
        nextToken: Swift.String? = nil,
        scalingPolicies: [ApplicationAutoScalingClientTypes.ScalingPolicy]? = nil
    )
    {
        self.nextToken = nextToken
        self.scalingPolicies = scalingPolicies
    }
}

public struct DescribeScheduledActionsInput {
    /// The maximum number of scheduled action results. This value can be between 1 and 50. The default value is 50. If this parameter is used, the operation returns up to MaxResults results at a time, along with a NextToken value. To get the next set of results, include the NextToken value in a subsequent call. If this parameter is not used, the operation returns up to 50 results and a NextToken value, if applicable.
    public var maxResults: Swift.Int?
    /// The token for the next set of results.
    public var nextToken: Swift.String?
    /// The identifier of the resource associated with the scheduled action. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property. If you specify a scalable dimension, you must also specify a resource ID.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The names of the scheduled actions to describe.
    public var scheduledActionNames: [Swift.String]?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?

    public init(
        maxResults: Swift.Int? = nil,
        nextToken: Swift.String? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        scheduledActionNames: [Swift.String]? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil
    )
    {
        self.maxResults = maxResults
        self.nextToken = nextToken
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.scheduledActionNames = scheduledActionNames
        self.serviceNamespace = serviceNamespace
    }
}

extension ApplicationAutoScalingClientTypes {
    /// Represents the minimum and maximum capacity for a scheduled action.
    public struct ScalableTargetAction {
        /// The maximum capacity. Although you can specify a large maximum capacity, note that service quotas may impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see [Service endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html) in the Amazon Web Services General Reference.
        public var maxCapacity: Swift.Int?
        /// The minimum capacity. When the scheduled action runs, the resource will have at least this much capacity, but it might have more depending on other settings, such as the target utilization level of a target tracking scaling policy.
        public var minCapacity: Swift.Int?

        public init(
            maxCapacity: Swift.Int? = nil,
            minCapacity: Swift.Int? = nil
        )
        {
            self.maxCapacity = maxCapacity
            self.minCapacity = minCapacity
        }
    }

}

extension ApplicationAutoScalingClientTypes {
    /// Represents a scheduled action.
    public struct ScheduledAction {
        /// The date and time that the scheduled action was created.
        /// This member is required.
        public var creationTime: Foundation.Date?
        /// The date and time that the action is scheduled to end, in UTC.
        public var endTime: Foundation.Date?
        /// The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
        ///
        /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
        ///
        /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
        ///
        /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
        ///
        /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
        ///
        /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
        ///
        /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
        ///
        /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
        ///
        /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
        ///
        /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
        ///
        /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
        ///
        /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
        ///
        /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
        ///
        /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
        ///
        /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
        ///
        /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
        ///
        /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
        ///
        /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
        ///
        /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
        /// This member is required.
        public var resourceId: Swift.String?
        /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
        ///
        /// * ecs:service:DesiredCount - The task count of an ECS service.
        ///
        /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
        ///
        /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
        ///
        /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
        ///
        /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
        ///
        /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
        ///
        /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
        ///
        /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
        ///
        /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
        ///
        /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
        ///
        /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
        ///
        /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
        ///
        /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
        ///
        /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
        ///
        /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
        ///
        /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
        ///
        /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
        ///
        /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
        ///
        /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
        ///
        /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
        ///
        /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
        ///
        /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
        ///
        /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
        public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
        /// The new minimum and maximum capacity. You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.
        public var scalableTargetAction: ApplicationAutoScalingClientTypes.ScalableTargetAction?
        /// The schedule for this action. The following formats are supported:
        ///
        /// * At expressions - "at(yyyy-mm-ddThh:mm:ss)"
        ///
        /// * Rate expressions - "rate(value unit)"
        ///
        /// * Cron expressions - "cron(fields)"
        ///
        ///
        /// At expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval. At and cron expressions use Universal Coordinated Time (UTC) by default. The cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year]. For rate expressions, value is a positive integer and unit is minute | minutes | hour | hours | day | days. For more information, see [Schedule recurring scaling actions using cron expressions](https://docs.aws.amazon.com/autoscaling/application/userguide/scheduled-scaling-using-cron-expressions.html) in the Application Auto Scaling User Guide.
        /// This member is required.
        public var schedule: Swift.String?
        /// The Amazon Resource Name (ARN) of the scheduled action.
        /// This member is required.
        public var scheduledActionARN: Swift.String?
        /// The name of the scheduled action.
        /// This member is required.
        public var scheduledActionName: Swift.String?
        /// The namespace of the Amazon Web Services service that provides the resource, or a custom-resource.
        /// This member is required.
        public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
        /// The date and time that the action is scheduled to begin, in UTC.
        public var startTime: Foundation.Date?
        /// The time zone used when referring to the date and time of a scheduled action, when the scheduled action uses an at or cron expression.
        public var timezone: Swift.String?

        public init(
            creationTime: Foundation.Date? = nil,
            endTime: Foundation.Date? = nil,
            resourceId: Swift.String? = nil,
            scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
            scalableTargetAction: ApplicationAutoScalingClientTypes.ScalableTargetAction? = nil,
            schedule: Swift.String? = nil,
            scheduledActionARN: Swift.String? = nil,
            scheduledActionName: Swift.String? = nil,
            serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
            startTime: Foundation.Date? = nil,
            timezone: Swift.String? = nil
        )
        {
            self.creationTime = creationTime
            self.endTime = endTime
            self.resourceId = resourceId
            self.scalableDimension = scalableDimension
            self.scalableTargetAction = scalableTargetAction
            self.schedule = schedule
            self.scheduledActionARN = scheduledActionARN
            self.scheduledActionName = scheduledActionName
            self.serviceNamespace = serviceNamespace
            self.startTime = startTime
            self.timezone = timezone
        }
    }

}

public struct DescribeScheduledActionsOutput {
    /// The token required to get the next set of results. This value is null if there are no more results to return.
    public var nextToken: Swift.String?
    /// Information about the scheduled actions.
    public var scheduledActions: [ApplicationAutoScalingClientTypes.ScheduledAction]?

    public init(
        nextToken: Swift.String? = nil,
        scheduledActions: [ApplicationAutoScalingClientTypes.ScheduledAction]? = nil
    )
    {
        self.nextToken = nextToken
        self.scheduledActions = scheduledActions
    }
}

/// The specified resource doesn't exist.
public struct ResourceNotFoundException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
        /// The name of the Application Auto Scaling resource. This value is an Amazon Resource Name (ARN).
        public internal(set) var resourceName: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "ResourceNotFoundException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil,
        resourceName: Swift.String? = nil
    )
    {
        self.properties.message = message
        self.properties.resourceName = resourceName
    }
}

public struct ListTagsForResourceInput {
    /// Specify the ARN of the scalable target. For example: arn:aws:application-autoscaling:us-east-1:123456789012:scalable-target/1234abcd56ab78cd901ef1234567890ab123 To get the ARN for a scalable target, use [DescribeScalableTargets].
    /// This member is required.
    public var resourceARN: Swift.String?

    public init(
        resourceARN: Swift.String? = nil
    )
    {
        self.resourceARN = resourceARN
    }
}

public struct ListTagsForResourceOutput {
    /// A list of tags. Each tag consists of a tag key and a tag value.
    public var tags: [Swift.String: Swift.String]?

    public init(
        tags: [Swift.String: Swift.String]? = nil
    )
    {
        self.tags = tags
    }
}

/// A per-account resource limit is exceeded. For more information, see [Application Auto Scaling service quotas](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-limits.html).
public struct LimitExceededException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "LimitExceededException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil
    )
    {
        self.properties.message = message
    }
}

public struct PutScalingPolicyInput {
    /// The name of the scaling policy. You cannot change the name of a scaling policy, but you can delete the original scaling policy and create a new scaling policy with the same settings and a different name.
    /// This member is required.
    public var policyName: Swift.String?
    /// The scaling policy type. This parameter is required if you are creating a scaling policy. The following policy types are supported: TargetTrackingScaling—Not supported for Amazon EMR. StepScaling—Not supported for DynamoDB, Amazon Comprehend, Lambda, Amazon Keyspaces, Amazon MSK, Amazon ElastiCache, or Neptune. For more information, see [Target tracking scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html) and [Step scaling policies](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html) in the Application Auto Scaling User Guide.
    public var policyType: ApplicationAutoScalingClientTypes.PolicyType?
    /// The identifier of the resource associated with the scaling policy. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
    /// A step scaling policy. This parameter is required if you are creating a policy and the policy type is StepScaling.
    public var stepScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration?
    /// A target tracking scaling policy. Includes support for predefined or customized metrics. This parameter is required if you are creating a policy and the policy type is TargetTrackingScaling.
    public var targetTrackingScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration?

    public init(
        policyName: Swift.String? = nil,
        policyType: ApplicationAutoScalingClientTypes.PolicyType? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
        stepScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration? = nil,
        targetTrackingScalingPolicyConfiguration: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration? = nil
    )
    {
        self.policyName = policyName
        self.policyType = policyType
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
        self.stepScalingPolicyConfiguration = stepScalingPolicyConfiguration
        self.targetTrackingScalingPolicyConfiguration = targetTrackingScalingPolicyConfiguration
    }
}

public struct PutScalingPolicyOutput {
    /// The CloudWatch alarms created for the target tracking scaling policy.
    public var alarms: [ApplicationAutoScalingClientTypes.Alarm]?
    /// The Amazon Resource Name (ARN) of the resulting scaling policy.
    /// This member is required.
    public var policyARN: Swift.String?

    public init(
        alarms: [ApplicationAutoScalingClientTypes.Alarm]? = nil,
        policyARN: Swift.String? = nil
    )
    {
        self.alarms = alarms
        self.policyARN = policyARN
    }
}

public struct PutScheduledActionInput {
    /// The date and time for the recurring schedule to end, in UTC.
    public var endTime: Foundation.Date?
    /// The identifier of the resource associated with the scheduled action. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// The scalable dimension. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The new minimum and maximum capacity. You can set both values or just one. At the scheduled time, if the current capacity is below the minimum capacity, Application Auto Scaling scales out to the minimum capacity. If the current capacity is above the maximum capacity, Application Auto Scaling scales in to the maximum capacity.
    public var scalableTargetAction: ApplicationAutoScalingClientTypes.ScalableTargetAction?
    /// The schedule for this action. The following formats are supported:
    ///
    /// * At expressions - "at(yyyy-mm-ddThh:mm:ss)"
    ///
    /// * Rate expressions - "rate(value unit)"
    ///
    /// * Cron expressions - "cron(fields)"
    ///
    ///
    /// At expressions are useful for one-time schedules. Cron expressions are useful for scheduled actions that run periodically at a specified date and time, and rate expressions are useful for scheduled actions that run at a regular interval. At and cron expressions use Universal Coordinated Time (UTC) by default. The cron format consists of six fields separated by white spaces: [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year]. For rate expressions, value is a positive integer and unit is minute | minutes | hour | hours | day | days. For more information, see [Schedule recurring scaling actions using cron expressions](https://docs.aws.amazon.com/autoscaling/application/userguide/scheduled-scaling-using-cron-expressions.html) in the Application Auto Scaling User Guide.
    public var schedule: Swift.String?
    /// The name of the scheduled action. This name must be unique among all other scheduled actions on the specified scalable target.
    /// This member is required.
    public var scheduledActionName: Swift.String?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
    /// The date and time for this scheduled action to start, in UTC.
    public var startTime: Foundation.Date?
    /// Specifies the time zone used when setting a scheduled action by using an at or cron expression. If a time zone is not provided, UTC is used by default. Valid values are the canonical names of the IANA time zones supported by Joda-Time (such as Etc/GMT+9 or Pacific/Tahiti). For more information, see [https://www.joda.org/joda-time/timezones.html](https://www.joda.org/joda-time/timezones.html).
    public var timezone: Swift.String?

    public init(
        endTime: Foundation.Date? = nil,
        resourceId: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        scalableTargetAction: ApplicationAutoScalingClientTypes.ScalableTargetAction? = nil,
        schedule: Swift.String? = nil,
        scheduledActionName: Swift.String? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
        startTime: Foundation.Date? = nil,
        timezone: Swift.String? = nil
    )
    {
        self.endTime = endTime
        self.resourceId = resourceId
        self.scalableDimension = scalableDimension
        self.scalableTargetAction = scalableTargetAction
        self.schedule = schedule
        self.scheduledActionName = scheduledActionName
        self.serviceNamespace = serviceNamespace
        self.startTime = startTime
        self.timezone = timezone
    }
}

public struct PutScheduledActionOutput {

    public init() { }
}

public struct RegisterScalableTargetInput {
    /// The maximum value that you plan to scale out to. When a scaling policy is in effect, Application Auto Scaling can scale out (expand) as needed to the maximum capacity limit in response to changing demand. This property is required when registering a new scalable target. Although you can specify a large maximum capacity, note that service quotas might impose lower limits. Each service has its own default quotas for the maximum capacity of the resource. If you want to specify a higher limit, you can request an increase. For more information, consult the documentation for that service. For information about the default quotas for each service, see [Service endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/aws-service-information.html) in the Amazon Web Services General Reference.
    public var maxCapacity: Swift.Int?
    /// The minimum value that you plan to scale in to. When a scaling policy is in effect, Application Auto Scaling can scale in (contract) as needed to the minimum capacity limit in response to changing demand. This property is required when registering a new scalable target. For the following resources, the minimum value allowed is 0.
    ///
    /// * AppStream 2.0 fleets
    ///
    /// * Aurora DB clusters
    ///
    /// * ECS services
    ///
    /// * EMR clusters
    ///
    /// * Lambda provisioned concurrency
    ///
    /// * SageMaker endpoint variants
    ///
    /// * SageMaker inference components
    ///
    /// * SageMaker serverless endpoint provisioned concurrency
    ///
    /// * Spot Fleets
    ///
    /// * custom resources
    ///
    ///
    /// It's strongly recommended that you specify a value greater than 0. A value greater than 0 means that data points are continuously reported to CloudWatch that scaling policies can use to scale on a metric like average CPU utilization. For all other resources, the minimum allowed value depends on the type of resource that you are using. If you provide a value that is lower than what a resource can accept, an error occurs. In which case, the error message will provide the minimum value that the resource can accept.
    public var minCapacity: Swift.Int?
    /// The identifier of the resource that is associated with the scalable target. This string consists of the resource type and unique identifier.
    ///
    /// * ECS service - The resource type is service and the unique identifier is the cluster name and service name. Example: service/my-cluster/my-service.
    ///
    /// * Spot Fleet - The resource type is spot-fleet-request and the unique identifier is the Spot Fleet request ID. Example: spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE.
    ///
    /// * EMR cluster - The resource type is instancegroup and the unique identifier is the cluster ID and instance group ID. Example: instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0.
    ///
    /// * AppStream 2.0 fleet - The resource type is fleet and the unique identifier is the fleet name. Example: fleet/sample-fleet.
    ///
    /// * DynamoDB table - The resource type is table and the unique identifier is the table name. Example: table/my-table.
    ///
    /// * DynamoDB global secondary index - The resource type is index and the unique identifier is the index name. Example: table/my-table/index/my-table-index.
    ///
    /// * Aurora DB cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:my-db-cluster.
    ///
    /// * SageMaker endpoint variant - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * Custom resources are not supported with a resource type. This parameter must specify the OutputValue from the CloudFormation template stack used to access the resources. The unique identifier is defined by the service provider. More information is available in our [GitHub repository](https://github.com/aws/aws-auto-scaling-custom-resource).
    ///
    /// * Amazon Comprehend document classification endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE.
    ///
    /// * Amazon Comprehend entity recognizer endpoint - The resource type and unique identifier are specified using the endpoint ARN. Example: arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE.
    ///
    /// * Lambda provisioned concurrency - The resource type is function and the unique identifier is the function name with a function version or alias name suffix that is not $LATEST. Example: function:my-function:prod or function:my-function:1.
    ///
    /// * Amazon Keyspaces table - The resource type is table and the unique identifier is the table name. Example: keyspace/mykeyspace/table/mytable.
    ///
    /// * Amazon MSK cluster - The resource type and unique identifier are specified using the cluster ARN. Example: arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5.
    ///
    /// * Amazon ElastiCache replication group - The resource type is replication-group and the unique identifier is the replication group name. Example: replication-group/mycluster.
    ///
    /// * Neptune cluster - The resource type is cluster and the unique identifier is the cluster name. Example: cluster:mycluster.
    ///
    /// * SageMaker serverless endpoint - The resource type is variant and the unique identifier is the resource ID. Example: endpoint/my-end-point/variant/KMeansClustering.
    ///
    /// * SageMaker inference component - The resource type is inference-component and the unique identifier is the resource ID. Example: inference-component/my-inference-component.
    ///
    /// * Pool of WorkSpaces - The resource type is workspacespool and the unique identifier is the pool ID. Example: workspacespool/wspool-123456.
    /// This member is required.
    public var resourceId: Swift.String?
    /// This parameter is required for services that do not support service-linked roles (such as Amazon EMR), and it must specify the ARN of an IAM role that allows Application Auto Scaling to modify the scalable target on your behalf. If the service supports service-linked roles, Application Auto Scaling uses a service-linked role, which it creates if it does not yet exist. For more information, see [How Application Auto Scaling works with IAM](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html).
    public var roleARN: Swift.String?
    /// The scalable dimension associated with the scalable target. This string consists of the service namespace, resource type, and scaling property.
    ///
    /// * ecs:service:DesiredCount - The task count of an ECS service.
    ///
    /// * elasticmapreduce:instancegroup:InstanceCount - The instance count of an EMR Instance Group.
    ///
    /// * ec2:spot-fleet-request:TargetCapacity - The target capacity of a Spot Fleet.
    ///
    /// * appstream:fleet:DesiredCapacity - The capacity of an AppStream 2.0 fleet.
    ///
    /// * dynamodb:table:ReadCapacityUnits - The provisioned read capacity for a DynamoDB table.
    ///
    /// * dynamodb:table:WriteCapacityUnits - The provisioned write capacity for a DynamoDB table.
    ///
    /// * dynamodb:index:ReadCapacityUnits - The provisioned read capacity for a DynamoDB global secondary index.
    ///
    /// * dynamodb:index:WriteCapacityUnits - The provisioned write capacity for a DynamoDB global secondary index.
    ///
    /// * rds:cluster:ReadReplicaCount - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition and Aurora PostgreSQL-compatible edition.
    ///
    /// * sagemaker:variant:DesiredInstanceCount - The number of EC2 instances for a SageMaker model endpoint variant.
    ///
    /// * custom-resource:ResourceType:Property - The scalable dimension for a custom resource provided by your own application or service.
    ///
    /// * comprehend:document-classifier-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend document classification endpoint.
    ///
    /// * comprehend:entity-recognizer-endpoint:DesiredInferenceUnits - The number of inference units for an Amazon Comprehend entity recognizer endpoint.
    ///
    /// * lambda:function:ProvisionedConcurrency - The provisioned concurrency for a Lambda function.
    ///
    /// * cassandra:table:ReadCapacityUnits - The provisioned read capacity for an Amazon Keyspaces table.
    ///
    /// * cassandra:table:WriteCapacityUnits - The provisioned write capacity for an Amazon Keyspaces table.
    ///
    /// * kafka:broker-storage:VolumeSize - The provisioned volume size (in GiB) for brokers in an Amazon MSK cluster.
    ///
    /// * elasticache:replication-group:NodeGroups - The number of node groups for an Amazon ElastiCache replication group.
    ///
    /// * elasticache:replication-group:Replicas - The number of replicas per node group for an Amazon ElastiCache replication group.
    ///
    /// * neptune:cluster:ReadReplicaCount - The count of read replicas in an Amazon Neptune DB cluster.
    ///
    /// * sagemaker:variant:DesiredProvisionedConcurrency - The provisioned concurrency for a SageMaker serverless endpoint.
    ///
    /// * sagemaker:inference-component:DesiredCopyCount - The number of copies across an endpoint for a SageMaker inference component.
    ///
    /// * workspaces:workspacespool:DesiredUserSessions - The number of user sessions for the WorkSpaces in the pool.
    /// This member is required.
    public var scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension?
    /// The namespace of the Amazon Web Services service that provides the resource. For a resource provided by your own application or service, use custom-resource instead.
    /// This member is required.
    public var serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace?
    /// An embedded object that contains attributes and attribute values that are used to suspend and resume automatic scaling. Setting the value of an attribute to true suspends the specified scaling activities. Setting it to false (default) resumes the specified scaling activities. Suspension Outcomes
    ///
    /// * For DynamicScalingInSuspended, while a suspension is in effect, all scale-in activities that are triggered by a scaling policy are suspended.
    ///
    /// * For DynamicScalingOutSuspended, while a suspension is in effect, all scale-out activities that are triggered by a scaling policy are suspended.
    ///
    /// * For ScheduledScalingSuspended, while a suspension is in effect, all scaling activities that involve scheduled actions are suspended.
    ///
    ///
    /// For more information, see [Suspend and resume scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-suspend-resume-scaling.html) in the Application Auto Scaling User Guide.
    public var suspendedState: ApplicationAutoScalingClientTypes.SuspendedState?
    /// Assigns one or more tags to the scalable target. Use this parameter to tag the scalable target when it is created. To tag an existing scalable target, use the [TagResource] operation. Each tag consists of a tag key and a tag value. Both the tag key and the tag value are required. You cannot have more than one tag on a scalable target with the same tag key. Use tags to control access to a scalable target. For more information, see [Tagging support for Application Auto Scaling](https://docs.aws.amazon.com/autoscaling/application/userguide/resource-tagging-support.html) in the Application Auto Scaling User Guide.
    public var tags: [Swift.String: Swift.String]?

    public init(
        maxCapacity: Swift.Int? = nil,
        minCapacity: Swift.Int? = nil,
        resourceId: Swift.String? = nil,
        roleARN: Swift.String? = nil,
        scalableDimension: ApplicationAutoScalingClientTypes.ScalableDimension? = nil,
        serviceNamespace: ApplicationAutoScalingClientTypes.ServiceNamespace? = nil,
        suspendedState: ApplicationAutoScalingClientTypes.SuspendedState? = nil,
        tags: [Swift.String: Swift.String]? = nil
    )
    {
        self.maxCapacity = maxCapacity
        self.minCapacity = minCapacity
        self.resourceId = resourceId
        self.roleARN = roleARN
        self.scalableDimension = scalableDimension
        self.serviceNamespace = serviceNamespace
        self.suspendedState = suspendedState
        self.tags = tags
    }
}

public struct RegisterScalableTargetOutput {
    /// The ARN of the scalable target.
    public var scalableTargetARN: Swift.String?

    public init(
        scalableTargetARN: Swift.String? = nil
    )
    {
        self.scalableTargetARN = scalableTargetARN
    }
}

/// The request contains too many tags. Try the request again with fewer tags.
public struct TooManyTagsException: ClientRuntime.ModeledError, AWSClientRuntime.AWSServiceError, ClientRuntime.HTTPError, Swift.Error {

    public struct Properties {
        public internal(set) var message: Swift.String? = nil
        /// The name of the Application Auto Scaling resource. This value is an Amazon Resource Name (ARN).
        public internal(set) var resourceName: Swift.String? = nil
    }

    public internal(set) var properties = Properties()
    public static var typeName: Swift.String { "TooManyTagsException" }
    public static var fault: ClientRuntime.ErrorFault { .client }
    public static var isRetryable: Swift.Bool { false }
    public static var isThrottling: Swift.Bool { false }
    public internal(set) var httpResponse = SmithyHTTPAPI.HTTPResponse()
    public internal(set) var message: Swift.String?
    public internal(set) var requestID: Swift.String?

    public init(
        message: Swift.String? = nil,
        resourceName: Swift.String? = nil
    )
    {
        self.properties.message = message
        self.properties.resourceName = resourceName
    }
}

public struct TagResourceInput {
    /// Identifies the Application Auto Scaling scalable target that you want to apply tags to. For example: arn:aws:application-autoscaling:us-east-1:123456789012:scalable-target/1234abcd56ab78cd901ef1234567890ab123 To get the ARN for a scalable target, use [DescribeScalableTargets].
    /// This member is required.
    public var resourceARN: Swift.String?
    /// The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a tag key and a tag value. You cannot have more than one tag on an Application Auto Scaling scalable target with the same tag key. If you specify an existing tag key with a different tag value, Application Auto Scaling replaces the current tag value with the specified one. For information about the rules that apply to tag keys and tag values, see [User-defined tag restrictions](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html) in the Amazon Web Services Billing User Guide.
    /// This member is required.
    public var tags: [Swift.String: Swift.String]?

    public init(
        resourceARN: Swift.String? = nil,
        tags: [Swift.String: Swift.String]? = nil
    )
    {
        self.resourceARN = resourceARN
        self.tags = tags
    }
}

public struct TagResourceOutput {

    public init() { }
}

public struct UntagResourceInput {
    /// Identifies the Application Auto Scaling scalable target from which to remove tags. For example: arn:aws:application-autoscaling:us-east-1:123456789012:scalable-target/1234abcd56ab78cd901ef1234567890ab123 To get the ARN for a scalable target, use [DescribeScalableTargets].
    /// This member is required.
    public var resourceARN: Swift.String?
    /// One or more tag keys. Specify only the tag keys, not the tag values.
    /// This member is required.
    public var tagKeys: [Swift.String]?

    public init(
        resourceARN: Swift.String? = nil,
        tagKeys: [Swift.String]? = nil
    )
    {
        self.resourceARN = resourceARN
        self.tagKeys = tagKeys
    }
}

public struct UntagResourceOutput {

    public init() { }
}

extension DeleteScalingPolicyInput {

    static func urlPathProvider(_ value: DeleteScalingPolicyInput) -> Swift.String? {
        return "/"
    }
}

extension DeleteScheduledActionInput {

    static func urlPathProvider(_ value: DeleteScheduledActionInput) -> Swift.String? {
        return "/"
    }
}

extension DeregisterScalableTargetInput {

    static func urlPathProvider(_ value: DeregisterScalableTargetInput) -> Swift.String? {
        return "/"
    }
}

extension DescribeScalableTargetsInput {

    static func urlPathProvider(_ value: DescribeScalableTargetsInput) -> Swift.String? {
        return "/"
    }
}

extension DescribeScalingActivitiesInput {

    static func urlPathProvider(_ value: DescribeScalingActivitiesInput) -> Swift.String? {
        return "/"
    }
}

extension DescribeScalingPoliciesInput {

    static func urlPathProvider(_ value: DescribeScalingPoliciesInput) -> Swift.String? {
        return "/"
    }
}

extension DescribeScheduledActionsInput {

    static func urlPathProvider(_ value: DescribeScheduledActionsInput) -> Swift.String? {
        return "/"
    }
}

extension ListTagsForResourceInput {

    static func urlPathProvider(_ value: ListTagsForResourceInput) -> Swift.String? {
        return "/"
    }
}

extension PutScalingPolicyInput {

    static func urlPathProvider(_ value: PutScalingPolicyInput) -> Swift.String? {
        return "/"
    }
}

extension PutScheduledActionInput {

    static func urlPathProvider(_ value: PutScheduledActionInput) -> Swift.String? {
        return "/"
    }
}

extension RegisterScalableTargetInput {

    static func urlPathProvider(_ value: RegisterScalableTargetInput) -> Swift.String? {
        return "/"
    }
}

extension TagResourceInput {

    static func urlPathProvider(_ value: TagResourceInput) -> Swift.String? {
        return "/"
    }
}

extension UntagResourceInput {

    static func urlPathProvider(_ value: UntagResourceInput) -> Swift.String? {
        return "/"
    }
}

extension DeleteScalingPolicyInput {

    static func write(value: DeleteScalingPolicyInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["PolicyName"].write(value.policyName)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DeleteScheduledActionInput {

    static func write(value: DeleteScheduledActionInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ScheduledActionName"].write(value.scheduledActionName)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DeregisterScalableTargetInput {

    static func write(value: DeregisterScalableTargetInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DescribeScalableTargetsInput {

    static func write(value: DescribeScalableTargetsInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MaxResults"].write(value.maxResults)
        try writer["NextToken"].write(value.nextToken)
        try writer["ResourceIds"].writeList(value.resourceIds, memberWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DescribeScalingActivitiesInput {

    static func write(value: DescribeScalingActivitiesInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["IncludeNotScaledActivities"].write(value.includeNotScaledActivities)
        try writer["MaxResults"].write(value.maxResults)
        try writer["NextToken"].write(value.nextToken)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DescribeScalingPoliciesInput {

    static func write(value: DescribeScalingPoliciesInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MaxResults"].write(value.maxResults)
        try writer["NextToken"].write(value.nextToken)
        try writer["PolicyNames"].writeList(value.policyNames, memberWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension DescribeScheduledActionsInput {

    static func write(value: DescribeScheduledActionsInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MaxResults"].write(value.maxResults)
        try writer["NextToken"].write(value.nextToken)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ScheduledActionNames"].writeList(value.scheduledActionNames, memberWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
    }
}

extension ListTagsForResourceInput {

    static func write(value: ListTagsForResourceInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["ResourceARN"].write(value.resourceARN)
    }
}

extension PutScalingPolicyInput {

    static func write(value: PutScalingPolicyInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["PolicyName"].write(value.policyName)
        try writer["PolicyType"].write(value.policyType)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
        try writer["StepScalingPolicyConfiguration"].write(value.stepScalingPolicyConfiguration, with: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration.write(value:to:))
        try writer["TargetTrackingScalingPolicyConfiguration"].write(value.targetTrackingScalingPolicyConfiguration, with: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration.write(value:to:))
    }
}

extension PutScheduledActionInput {

    static func write(value: PutScheduledActionInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["EndTime"].writeTimestamp(value.endTime, format: SmithyTimestamps.TimestampFormat.epochSeconds)
        try writer["ResourceId"].write(value.resourceId)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ScalableTargetAction"].write(value.scalableTargetAction, with: ApplicationAutoScalingClientTypes.ScalableTargetAction.write(value:to:))
        try writer["Schedule"].write(value.schedule)
        try writer["ScheduledActionName"].write(value.scheduledActionName)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
        try writer["StartTime"].writeTimestamp(value.startTime, format: SmithyTimestamps.TimestampFormat.epochSeconds)
        try writer["Timezone"].write(value.timezone)
    }
}

extension RegisterScalableTargetInput {

    static func write(value: RegisterScalableTargetInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MaxCapacity"].write(value.maxCapacity)
        try writer["MinCapacity"].write(value.minCapacity)
        try writer["ResourceId"].write(value.resourceId)
        try writer["RoleARN"].write(value.roleARN)
        try writer["ScalableDimension"].write(value.scalableDimension)
        try writer["ServiceNamespace"].write(value.serviceNamespace)
        try writer["SuspendedState"].write(value.suspendedState, with: ApplicationAutoScalingClientTypes.SuspendedState.write(value:to:))
        try writer["Tags"].writeMap(value.tags, valueWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), keyNodeInfo: "key", valueNodeInfo: "value", isFlattened: false)
    }
}

extension TagResourceInput {

    static func write(value: TagResourceInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["ResourceARN"].write(value.resourceARN)
        try writer["Tags"].writeMap(value.tags, valueWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), keyNodeInfo: "key", valueNodeInfo: "value", isFlattened: false)
    }
}

extension UntagResourceInput {

    static func write(value: UntagResourceInput?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["ResourceARN"].write(value.resourceARN)
        try writer["TagKeys"].writeList(value.tagKeys, memberWritingClosure: SmithyReadWrite.WritingClosures.writeString(value:to:), memberNodeInfo: "member", isFlattened: false)
    }
}

extension DeleteScalingPolicyOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DeleteScalingPolicyOutput {
        return DeleteScalingPolicyOutput()
    }
}

extension DeleteScheduledActionOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DeleteScheduledActionOutput {
        return DeleteScheduledActionOutput()
    }
}

extension DeregisterScalableTargetOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DeregisterScalableTargetOutput {
        return DeregisterScalableTargetOutput()
    }
}

extension DescribeScalableTargetsOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DescribeScalableTargetsOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = DescribeScalableTargetsOutput()
        value.nextToken = try reader["NextToken"].readIfPresent()
        value.scalableTargets = try reader["ScalableTargets"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.ScalableTarget.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension DescribeScalingActivitiesOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DescribeScalingActivitiesOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = DescribeScalingActivitiesOutput()
        value.nextToken = try reader["NextToken"].readIfPresent()
        value.scalingActivities = try reader["ScalingActivities"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.ScalingActivity.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension DescribeScalingPoliciesOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DescribeScalingPoliciesOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = DescribeScalingPoliciesOutput()
        value.nextToken = try reader["NextToken"].readIfPresent()
        value.scalingPolicies = try reader["ScalingPolicies"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.ScalingPolicy.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension DescribeScheduledActionsOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> DescribeScheduledActionsOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = DescribeScheduledActionsOutput()
        value.nextToken = try reader["NextToken"].readIfPresent()
        value.scheduledActions = try reader["ScheduledActions"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.ScheduledAction.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension ListTagsForResourceOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> ListTagsForResourceOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = ListTagsForResourceOutput()
        value.tags = try reader["Tags"].readMapIfPresent(valueReadingClosure: SmithyReadWrite.ReadingClosures.readString(from:), keyNodeInfo: "key", valueNodeInfo: "value", isFlattened: false)
        return value
    }
}

extension PutScalingPolicyOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> PutScalingPolicyOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = PutScalingPolicyOutput()
        value.alarms = try reader["Alarms"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.Alarm.read(from:), memberNodeInfo: "member", isFlattened: false)
        value.policyARN = try reader["PolicyARN"].readIfPresent() ?? ""
        return value
    }
}

extension PutScheduledActionOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> PutScheduledActionOutput {
        return PutScheduledActionOutput()
    }
}

extension RegisterScalableTargetOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> RegisterScalableTargetOutput {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let reader = responseReader
        var value = RegisterScalableTargetOutput()
        value.scalableTargetARN = try reader["ScalableTargetARN"].readIfPresent()
        return value
    }
}

extension TagResourceOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> TagResourceOutput {
        return TagResourceOutput()
    }
}

extension UntagResourceOutput {

    static func httpOutput(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> UntagResourceOutput {
        return UntagResourceOutput()
    }
}

enum DeleteScalingPolicyOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "ObjectNotFoundException": return try ObjectNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DeleteScheduledActionOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "ObjectNotFoundException": return try ObjectNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DeregisterScalableTargetOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "ObjectNotFoundException": return try ObjectNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DescribeScalableTargetsOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "InvalidNextTokenException": return try InvalidNextTokenException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DescribeScalingActivitiesOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "InvalidNextTokenException": return try InvalidNextTokenException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DescribeScalingPoliciesOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "FailedResourceAccessException": return try FailedResourceAccessException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "InvalidNextTokenException": return try InvalidNextTokenException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum DescribeScheduledActionsOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "InvalidNextTokenException": return try InvalidNextTokenException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum ListTagsForResourceOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ResourceNotFoundException": return try ResourceNotFoundException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum PutScalingPolicyOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "FailedResourceAccessException": return try FailedResourceAccessException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "LimitExceededException": return try LimitExceededException.makeError(baseError: baseError)
            case "ObjectNotFoundException": return try ObjectNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum PutScheduledActionOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "LimitExceededException": return try LimitExceededException.makeError(baseError: baseError)
            case "ObjectNotFoundException": return try ObjectNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum RegisterScalableTargetOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ConcurrentUpdateException": return try ConcurrentUpdateException.makeError(baseError: baseError)
            case "InternalServiceException": return try InternalServiceException.makeError(baseError: baseError)
            case "LimitExceededException": return try LimitExceededException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum TagResourceOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ResourceNotFoundException": return try ResourceNotFoundException.makeError(baseError: baseError)
            case "TooManyTagsException": return try TooManyTagsException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

enum UntagResourceOutputError {

    static func httpError(from httpResponse: SmithyHTTPAPI.HTTPResponse) async throws -> Swift.Error {
        let data = try await httpResponse.data()
        let responseReader = try SmithyJSON.Reader.from(data: data)
        let baseError = try AWSClientRuntime.AWSJSONError(httpResponse: httpResponse, responseReader: responseReader, noErrorWrapping: false)
        if let error = baseError.customError() { return error }
        switch baseError.code {
            case "ResourceNotFoundException": return try ResourceNotFoundException.makeError(baseError: baseError)
            case "ValidationException": return try ValidationException.makeError(baseError: baseError)
            default: return try AWSClientRuntime.UnknownAWSHTTPServiceError.makeError(baseError: baseError)
        }
    }
}

extension ValidationException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> ValidationException {
        let reader = baseError.errorBodyReader
        var value = ValidationException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension ObjectNotFoundException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> ObjectNotFoundException {
        let reader = baseError.errorBodyReader
        var value = ObjectNotFoundException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension ConcurrentUpdateException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> ConcurrentUpdateException {
        let reader = baseError.errorBodyReader
        var value = ConcurrentUpdateException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension InternalServiceException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> InternalServiceException {
        let reader = baseError.errorBodyReader
        var value = InternalServiceException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension InvalidNextTokenException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> InvalidNextTokenException {
        let reader = baseError.errorBodyReader
        var value = InvalidNextTokenException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension FailedResourceAccessException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> FailedResourceAccessException {
        let reader = baseError.errorBodyReader
        var value = FailedResourceAccessException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension ResourceNotFoundException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> ResourceNotFoundException {
        let reader = baseError.errorBodyReader
        var value = ResourceNotFoundException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.properties.resourceName = try reader["ResourceName"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension LimitExceededException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> LimitExceededException {
        let reader = baseError.errorBodyReader
        var value = LimitExceededException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension TooManyTagsException {

    static func makeError(baseError: AWSClientRuntime.AWSJSONError) throws -> TooManyTagsException {
        let reader = baseError.errorBodyReader
        var value = TooManyTagsException()
        value.properties.message = try reader["Message"].readIfPresent()
        value.properties.resourceName = try reader["ResourceName"].readIfPresent()
        value.httpResponse = baseError.httpResponse
        value.requestID = baseError.requestID
        value.message = baseError.message
        return value
    }
}

extension ApplicationAutoScalingClientTypes.ScalableTarget {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.ScalableTarget {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.ScalableTarget()
        value.serviceNamespace = try reader["ServiceNamespace"].readIfPresent() ?? .sdkUnknown("")
        value.resourceId = try reader["ResourceId"].readIfPresent() ?? ""
        value.scalableDimension = try reader["ScalableDimension"].readIfPresent() ?? .sdkUnknown("")
        value.minCapacity = try reader["MinCapacity"].readIfPresent() ?? 0
        value.maxCapacity = try reader["MaxCapacity"].readIfPresent() ?? 0
        value.roleARN = try reader["RoleARN"].readIfPresent() ?? ""
        value.creationTime = try reader["CreationTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds) ?? SmithyTimestamps.TimestampFormatter(format: .dateTime).date(from: "1970-01-01T00:00:00Z")
        value.suspendedState = try reader["SuspendedState"].readIfPresent(with: ApplicationAutoScalingClientTypes.SuspendedState.read(from:))
        value.scalableTargetARN = try reader["ScalableTargetARN"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.SuspendedState {

    static func write(value: ApplicationAutoScalingClientTypes.SuspendedState?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["DynamicScalingInSuspended"].write(value.dynamicScalingInSuspended)
        try writer["DynamicScalingOutSuspended"].write(value.dynamicScalingOutSuspended)
        try writer["ScheduledScalingSuspended"].write(value.scheduledScalingSuspended)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.SuspendedState {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.SuspendedState()
        value.dynamicScalingInSuspended = try reader["DynamicScalingInSuspended"].readIfPresent()
        value.dynamicScalingOutSuspended = try reader["DynamicScalingOutSuspended"].readIfPresent()
        value.scheduledScalingSuspended = try reader["ScheduledScalingSuspended"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.ScalingActivity {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.ScalingActivity {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.ScalingActivity()
        value.activityId = try reader["ActivityId"].readIfPresent() ?? ""
        value.serviceNamespace = try reader["ServiceNamespace"].readIfPresent() ?? .sdkUnknown("")
        value.resourceId = try reader["ResourceId"].readIfPresent() ?? ""
        value.scalableDimension = try reader["ScalableDimension"].readIfPresent() ?? .sdkUnknown("")
        value.description = try reader["Description"].readIfPresent() ?? ""
        value.cause = try reader["Cause"].readIfPresent() ?? ""
        value.startTime = try reader["StartTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds) ?? SmithyTimestamps.TimestampFormatter(format: .dateTime).date(from: "1970-01-01T00:00:00Z")
        value.endTime = try reader["EndTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds)
        value.statusCode = try reader["StatusCode"].readIfPresent() ?? .sdkUnknown("")
        value.statusMessage = try reader["StatusMessage"].readIfPresent()
        value.details = try reader["Details"].readIfPresent()
        value.notScaledReasons = try reader["NotScaledReasons"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.NotScaledReason.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension ApplicationAutoScalingClientTypes.NotScaledReason {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.NotScaledReason {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.NotScaledReason()
        value.code = try reader["Code"].readIfPresent() ?? ""
        value.maxCapacity = try reader["MaxCapacity"].readIfPresent()
        value.minCapacity = try reader["MinCapacity"].readIfPresent()
        value.currentCapacity = try reader["CurrentCapacity"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.ScalingPolicy {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.ScalingPolicy {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.ScalingPolicy()
        value.policyARN = try reader["PolicyARN"].readIfPresent() ?? ""
        value.policyName = try reader["PolicyName"].readIfPresent() ?? ""
        value.serviceNamespace = try reader["ServiceNamespace"].readIfPresent() ?? .sdkUnknown("")
        value.resourceId = try reader["ResourceId"].readIfPresent() ?? ""
        value.scalableDimension = try reader["ScalableDimension"].readIfPresent() ?? .sdkUnknown("")
        value.policyType = try reader["PolicyType"].readIfPresent() ?? .sdkUnknown("")
        value.stepScalingPolicyConfiguration = try reader["StepScalingPolicyConfiguration"].readIfPresent(with: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration.read(from:))
        value.targetTrackingScalingPolicyConfiguration = try reader["TargetTrackingScalingPolicyConfiguration"].readIfPresent(with: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration.read(from:))
        value.alarms = try reader["Alarms"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.Alarm.read(from:), memberNodeInfo: "member", isFlattened: false)
        value.creationTime = try reader["CreationTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds) ?? SmithyTimestamps.TimestampFormatter(format: .dateTime).date(from: "1970-01-01T00:00:00Z")
        return value
    }
}

extension ApplicationAutoScalingClientTypes.Alarm {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.Alarm {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.Alarm()
        value.alarmName = try reader["AlarmName"].readIfPresent() ?? ""
        value.alarmARN = try reader["AlarmARN"].readIfPresent() ?? ""
        return value
    }
}

extension ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration {

    static func write(value: ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["CustomizedMetricSpecification"].write(value.customizedMetricSpecification, with: ApplicationAutoScalingClientTypes.CustomizedMetricSpecification.write(value:to:))
        try writer["DisableScaleIn"].write(value.disableScaleIn)
        try writer["PredefinedMetricSpecification"].write(value.predefinedMetricSpecification, with: ApplicationAutoScalingClientTypes.PredefinedMetricSpecification.write(value:to:))
        try writer["ScaleInCooldown"].write(value.scaleInCooldown)
        try writer["ScaleOutCooldown"].write(value.scaleOutCooldown)
        try writer["TargetValue"].write(value.targetValue)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.TargetTrackingScalingPolicyConfiguration()
        value.targetValue = try reader["TargetValue"].readIfPresent() ?? 0.0
        value.predefinedMetricSpecification = try reader["PredefinedMetricSpecification"].readIfPresent(with: ApplicationAutoScalingClientTypes.PredefinedMetricSpecification.read(from:))
        value.customizedMetricSpecification = try reader["CustomizedMetricSpecification"].readIfPresent(with: ApplicationAutoScalingClientTypes.CustomizedMetricSpecification.read(from:))
        value.scaleOutCooldown = try reader["ScaleOutCooldown"].readIfPresent()
        value.scaleInCooldown = try reader["ScaleInCooldown"].readIfPresent()
        value.disableScaleIn = try reader["DisableScaleIn"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.CustomizedMetricSpecification {

    static func write(value: ApplicationAutoScalingClientTypes.CustomizedMetricSpecification?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Dimensions"].writeList(value.dimensions, memberWritingClosure: ApplicationAutoScalingClientTypes.MetricDimension.write(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["MetricName"].write(value.metricName)
        try writer["Metrics"].writeList(value.metrics, memberWritingClosure: ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery.write(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["Namespace"].write(value.namespace)
        try writer["Statistic"].write(value.statistic)
        try writer["Unit"].write(value.unit)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.CustomizedMetricSpecification {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.CustomizedMetricSpecification()
        value.metricName = try reader["MetricName"].readIfPresent()
        value.namespace = try reader["Namespace"].readIfPresent()
        value.dimensions = try reader["Dimensions"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.MetricDimension.read(from:), memberNodeInfo: "member", isFlattened: false)
        value.statistic = try reader["Statistic"].readIfPresent()
        value.unit = try reader["Unit"].readIfPresent()
        value.metrics = try reader["Metrics"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery.read(from:), memberNodeInfo: "member", isFlattened: false)
        return value
    }
}

extension ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery {

    static func write(value: ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Expression"].write(value.expression)
        try writer["Id"].write(value.id)
        try writer["Label"].write(value.label)
        try writer["MetricStat"].write(value.metricStat, with: ApplicationAutoScalingClientTypes.TargetTrackingMetricStat.write(value:to:))
        try writer["ReturnData"].write(value.returnData)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.TargetTrackingMetricDataQuery()
        value.expression = try reader["Expression"].readIfPresent()
        value.id = try reader["Id"].readIfPresent() ?? ""
        value.label = try reader["Label"].readIfPresent()
        value.metricStat = try reader["MetricStat"].readIfPresent(with: ApplicationAutoScalingClientTypes.TargetTrackingMetricStat.read(from:))
        value.returnData = try reader["ReturnData"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.TargetTrackingMetricStat {

    static func write(value: ApplicationAutoScalingClientTypes.TargetTrackingMetricStat?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Metric"].write(value.metric, with: ApplicationAutoScalingClientTypes.TargetTrackingMetric.write(value:to:))
        try writer["Stat"].write(value.stat)
        try writer["Unit"].write(value.unit)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.TargetTrackingMetricStat {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.TargetTrackingMetricStat()
        value.metric = try reader["Metric"].readIfPresent(with: ApplicationAutoScalingClientTypes.TargetTrackingMetric.read(from:))
        value.stat = try reader["Stat"].readIfPresent() ?? ""
        value.unit = try reader["Unit"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.TargetTrackingMetric {

    static func write(value: ApplicationAutoScalingClientTypes.TargetTrackingMetric?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Dimensions"].writeList(value.dimensions, memberWritingClosure: ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension.write(value:to:), memberNodeInfo: "member", isFlattened: false)
        try writer["MetricName"].write(value.metricName)
        try writer["Namespace"].write(value.namespace)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.TargetTrackingMetric {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.TargetTrackingMetric()
        value.dimensions = try reader["Dimensions"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension.read(from:), memberNodeInfo: "member", isFlattened: false)
        value.metricName = try reader["MetricName"].readIfPresent()
        value.namespace = try reader["Namespace"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension {

    static func write(value: ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Name"].write(value.name)
        try writer["Value"].write(value.value)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.TargetTrackingMetricDimension()
        value.name = try reader["Name"].readIfPresent() ?? ""
        value.value = try reader["Value"].readIfPresent() ?? ""
        return value
    }
}

extension ApplicationAutoScalingClientTypes.MetricDimension {

    static func write(value: ApplicationAutoScalingClientTypes.MetricDimension?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["Name"].write(value.name)
        try writer["Value"].write(value.value)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.MetricDimension {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.MetricDimension()
        value.name = try reader["Name"].readIfPresent() ?? ""
        value.value = try reader["Value"].readIfPresent() ?? ""
        return value
    }
}

extension ApplicationAutoScalingClientTypes.PredefinedMetricSpecification {

    static func write(value: ApplicationAutoScalingClientTypes.PredefinedMetricSpecification?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["PredefinedMetricType"].write(value.predefinedMetricType)
        try writer["ResourceLabel"].write(value.resourceLabel)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.PredefinedMetricSpecification {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.PredefinedMetricSpecification()
        value.predefinedMetricType = try reader["PredefinedMetricType"].readIfPresent() ?? .sdkUnknown("")
        value.resourceLabel = try reader["ResourceLabel"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration {

    static func write(value: ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["AdjustmentType"].write(value.adjustmentType)
        try writer["Cooldown"].write(value.cooldown)
        try writer["MetricAggregationType"].write(value.metricAggregationType)
        try writer["MinAdjustmentMagnitude"].write(value.minAdjustmentMagnitude)
        try writer["StepAdjustments"].writeList(value.stepAdjustments, memberWritingClosure: ApplicationAutoScalingClientTypes.StepAdjustment.write(value:to:), memberNodeInfo: "member", isFlattened: false)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.StepScalingPolicyConfiguration()
        value.adjustmentType = try reader["AdjustmentType"].readIfPresent()
        value.stepAdjustments = try reader["StepAdjustments"].readListIfPresent(memberReadingClosure: ApplicationAutoScalingClientTypes.StepAdjustment.read(from:), memberNodeInfo: "member", isFlattened: false)
        value.minAdjustmentMagnitude = try reader["MinAdjustmentMagnitude"].readIfPresent()
        value.cooldown = try reader["Cooldown"].readIfPresent()
        value.metricAggregationType = try reader["MetricAggregationType"].readIfPresent()
        return value
    }
}

extension ApplicationAutoScalingClientTypes.StepAdjustment {

    static func write(value: ApplicationAutoScalingClientTypes.StepAdjustment?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MetricIntervalLowerBound"].write(value.metricIntervalLowerBound)
        try writer["MetricIntervalUpperBound"].write(value.metricIntervalUpperBound)
        try writer["ScalingAdjustment"].write(value.scalingAdjustment)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.StepAdjustment {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.StepAdjustment()
        value.metricIntervalLowerBound = try reader["MetricIntervalLowerBound"].readIfPresent()
        value.metricIntervalUpperBound = try reader["MetricIntervalUpperBound"].readIfPresent()
        value.scalingAdjustment = try reader["ScalingAdjustment"].readIfPresent() ?? 0
        return value
    }
}

extension ApplicationAutoScalingClientTypes.ScheduledAction {

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.ScheduledAction {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.ScheduledAction()
        value.scheduledActionName = try reader["ScheduledActionName"].readIfPresent() ?? ""
        value.scheduledActionARN = try reader["ScheduledActionARN"].readIfPresent() ?? ""
        value.serviceNamespace = try reader["ServiceNamespace"].readIfPresent() ?? .sdkUnknown("")
        value.schedule = try reader["Schedule"].readIfPresent() ?? ""
        value.timezone = try reader["Timezone"].readIfPresent()
        value.resourceId = try reader["ResourceId"].readIfPresent() ?? ""
        value.scalableDimension = try reader["ScalableDimension"].readIfPresent()
        value.startTime = try reader["StartTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds)
        value.endTime = try reader["EndTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds)
        value.scalableTargetAction = try reader["ScalableTargetAction"].readIfPresent(with: ApplicationAutoScalingClientTypes.ScalableTargetAction.read(from:))
        value.creationTime = try reader["CreationTime"].readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat.epochSeconds) ?? SmithyTimestamps.TimestampFormatter(format: .dateTime).date(from: "1970-01-01T00:00:00Z")
        return value
    }
}

extension ApplicationAutoScalingClientTypes.ScalableTargetAction {

    static func write(value: ApplicationAutoScalingClientTypes.ScalableTargetAction?, to writer: SmithyJSON.Writer) throws {
        guard let value else { return }
        try writer["MaxCapacity"].write(value.maxCapacity)
        try writer["MinCapacity"].write(value.minCapacity)
    }

    static func read(from reader: SmithyJSON.Reader) throws -> ApplicationAutoScalingClientTypes.ScalableTargetAction {
        guard reader.hasContent else { throw SmithyReadWrite.ReaderError.requiredValueNotPresent }
        var value = ApplicationAutoScalingClientTypes.ScalableTargetAction()
        value.minCapacity = try reader["MinCapacity"].readIfPresent()
        value.maxCapacity = try reader["MaxCapacity"].readIfPresent()
        return value
    }
}

public enum ApplicationAutoScalingClientTypes {}
