// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// These interfaces allow you to apply the Amazon Web Services library of pre-defined controls to your organizational units, programmatically. In Amazon Web Services Control Tower, the terms "control" and "guardrail" are synonyms. To call these APIs, you'll need to know:
///
/// * the controlIdentifier for the control--or guardrail--you are targeting.
///
/// * the ARN associated with the target organizational unit (OU), which we call the targetIdentifier.
///
/// * the ARN associated with a resource that you wish to tag or untag.
///
///
/// To get the controlIdentifier for your Amazon Web Services Control Tower control: The controlIdentifier is an ARN that is specified for each control. You can view the controlIdentifier in the console on the Control details page, as well as in the documentation. The controlIdentifier is unique in each Amazon Web Services Region for each control. You can find the controlIdentifier for each Region and control in the [Tables of control metadata](https://docs.aws.amazon.com/controltower/latest/userguide/control-metadata-tables.html) in the Amazon Web Services Control Tower User Guide. A quick-reference list of control identifers for the Amazon Web Services Control Tower legacy Strongly recommended and Elective controls is given in [Resource identifiers for APIs and controls](https://docs.aws.amazon.com/controltower/latest/userguide/control-identifiers.html.html) in the [Controls reference guide section](https://docs.aws.amazon.com/controltower/latest/userguide/control-identifiers.html) of the Amazon Web Services Control Tower User Guide. Remember that Mandatory controls cannot be added or removed. ARN format: arn:aws:controltower:{REGION}::control/{CONTROL_NAME} Example: arn:aws:controltower:us-west-2::control/AWS-GR_AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED To get the targetIdentifier: The targetIdentifier is the ARN for an OU. In the Amazon Web Services Organizations console, you can find the ARN for the OU on the Organizational unit details page associated with that OU. OU ARN format: arn:${Partition}:organizations::${MasterAccountId}:ou/o-${OrganizationId}/ou-${OrganizationalUnitId} Details and examples
///
/// * [Control API input and output examples with CLI](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html)
///
/// * [Enable controls with CloudFormation](https://docs.aws.amazon.com/controltower/latest/userguide/enable-controls.html)
///
/// * [Control metadata tables](https://docs.aws.amazon.com/controltower/latest/userguide/control-metadata-tables.html)
///
/// * [List of identifiers for legacy controls](https://docs.aws.amazon.com/controltower/latest/userguide/control-identifiers.html)
///
/// * [Controls reference guide](https://docs.aws.amazon.com/controltower/latest/userguide/controls.html)
///
/// * [Controls library groupings](https://docs.aws.amazon.com/controltower/latest/userguide/controls-reference.html)
///
/// * [Creating Amazon Web Services Control Tower resources with Amazon Web Services CloudFormation](https://docs.aws.amazon.com/controltower/latest/userguide/creating-resources-with-cloudformation.html)
///
///
/// To view the open source resource repository on GitHub, see [aws-cloudformation/aws-cloudformation-resource-providers-controltower](https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-controltower) Recording API Requests Amazon Web Services Control Tower supports Amazon Web Services CloudTrail, a service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine which requests the Amazon Web Services Control Tower service received, who made the request and when, and so on. For more about Amazon Web Services Control Tower and its support for CloudTrail, see [Logging Amazon Web Services Control Tower Actions with Amazon Web Services CloudTrail](https://docs.aws.amazon.com/controltower/latest/userguide/logging-using-cloudtrail.html) in the Amazon Web Services Control Tower User Guide. To learn more about CloudTrail, including how to turn it on and find your log files, see the Amazon Web Services CloudTrail User Guide.
public protocol ControlTowerClientProtocol {
    /// Performs the `CreateLandingZone` operation on the `AWSControlTowerApis` service.
    ///
    /// Creates a new landing zone. This API call starts an asynchronous operation that creates and configures a landing zone, based on the parameters specified in the manifest JSON file.
    ///
    /// - Parameter CreateLandingZoneInput : [no documentation found]
    ///
    /// - Returns: `CreateLandingZoneOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func createLandingZone(input: CreateLandingZoneInput) async throws -> CreateLandingZoneOutput
    /// Performs the `DeleteLandingZone` operation on the `AWSControlTowerApis` service.
    ///
    /// Decommissions a landing zone. This API call starts an asynchronous operation that deletes Amazon Web Services Control Tower resources deployed in accounts managed by Amazon Web Services Control Tower.
    ///
    /// - Parameter DeleteLandingZoneInput : [no documentation found]
    ///
    /// - Returns: `DeleteLandingZoneOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func deleteLandingZone(input: DeleteLandingZoneInput) async throws -> DeleteLandingZoneOutput
    /// Performs the `DisableControl` operation on the `AWSControlTowerApis` service.
    ///
    /// This API call turns off a control. It starts an asynchronous operation that deletes Amazon Web Services resources on the specified organizational unit and the accounts it contains. The resources will vary according to the control that you specify. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter DisableControlInput : [no documentation found]
    ///
    /// - Returns: `DisableControlOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ServiceQuotaExceededException` : The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func disableControl(input: DisableControlInput) async throws -> DisableControlOutput
    /// Performs the `EnableControl` operation on the `AWSControlTowerApis` service.
    ///
    /// This API call activates a control. It starts an asynchronous operation that creates Amazon Web Services resources on the specified organizational unit and the accounts it contains. The resources created will vary according to the control that you specify. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter EnableControlInput : [no documentation found]
    ///
    /// - Returns: `EnableControlOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ServiceQuotaExceededException` : The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func enableControl(input: EnableControlInput) async throws -> EnableControlOutput
    /// Performs the `GetControlOperation` operation on the `AWSControlTowerApis` service.
    ///
    /// Returns the status of a particular EnableControl or DisableControl operation. Displays a message in case of error. Details for an operation are available for 90 days. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter GetControlOperationInput : [no documentation found]
    ///
    /// - Returns: `GetControlOperationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func getControlOperation(input: GetControlOperationInput) async throws -> GetControlOperationOutput
    /// Performs the `GetEnabledControl` operation on the `AWSControlTowerApis` service.
    ///
    /// Retrieves details about an enabled control. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter GetEnabledControlInput : [no documentation found]
    ///
    /// - Returns: `GetEnabledControlOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func getEnabledControl(input: GetEnabledControlInput) async throws -> GetEnabledControlOutput
    /// Performs the `GetLandingZone` operation on the `AWSControlTowerApis` service.
    ///
    /// Returns details about the landing zone. Displays a message in case of error.
    ///
    /// - Parameter GetLandingZoneInput : [no documentation found]
    ///
    /// - Returns: `GetLandingZoneOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func getLandingZone(input: GetLandingZoneInput) async throws -> GetLandingZoneOutput
    /// Performs the `GetLandingZoneOperation` operation on the `AWSControlTowerApis` service.
    ///
    /// Returns the status of the specified landing zone operation. Details for an operation are available for 60 days.
    ///
    /// - Parameter GetLandingZoneOperationInput : [no documentation found]
    ///
    /// - Returns: `GetLandingZoneOperationOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func getLandingZoneOperation(input: GetLandingZoneOperationInput) async throws -> GetLandingZoneOperationOutput
    /// Performs the `ListEnabledControls` operation on the `AWSControlTowerApis` service.
    ///
    /// Lists the controls enabled by Amazon Web Services Control Tower on the specified organizational unit and the accounts it contains. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter ListEnabledControlsInput : [no documentation found]
    ///
    /// - Returns: `ListEnabledControlsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func listEnabledControls(input: ListEnabledControlsInput) async throws -> ListEnabledControlsOutput
    /// Performs the `ListLandingZones` operation on the `AWSControlTowerApis` service.
    ///
    /// Returns the landing zone ARN for the landing zone deployed in your managed account. This API also creates an ARN for existing accounts that do not yet have a landing zone ARN. Returns one landing zone ARN.
    ///
    /// - Parameter ListLandingZonesInput : [no documentation found]
    ///
    /// - Returns: `ListLandingZonesOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func listLandingZones(input: ListLandingZonesInput) async throws -> ListLandingZonesOutput
    /// Performs the `ListTagsForResource` operation on the `AWSControlTowerApis` service.
    ///
    /// Returns a list of tags associated with the resource. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutput
    /// Performs the `ResetLandingZone` operation on the `AWSControlTowerApis` service.
    ///
    /// This API call resets a landing zone. It starts an asynchronous operation that resets the landing zone to the parameters specified in its original configuration.
    ///
    /// - Parameter ResetLandingZoneInput : [no documentation found]
    ///
    /// - Returns: `ResetLandingZoneOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func resetLandingZone(input: ResetLandingZoneInput) async throws -> ResetLandingZoneOutput
    /// Performs the `TagResource` operation on the `AWSControlTowerApis` service.
    ///
    /// Applies tags to a resource. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutput
    /// Performs the `UntagResource` operation on the `AWSControlTowerApis` service.
    ///
    /// Removes tags from a resource. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html).
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutput
    /// Performs the `UpdateEnabledControl` operation on the `AWSControlTowerApis` service.
    ///
    /// Updates the configuration of an already enabled control. If the enabled control shows an EnablementStatus of SUCCEEDED, supply parameters that are different from the currently configured parameters. Otherwise, Amazon Web Services Control Tower will not accept the request. If the enabled control shows an EnablementStatus of FAILED, Amazon Web Services Control Tower will update the control to match any valid parameters that you supply. If the DriftSummary status for the control shows as DRIFTED, you cannot call this API. Instead, you can update the control by calling DisableControl and again calling EnableControl, or you can run an extending governance operation. For usage examples, see [ the Amazon Web Services Control Tower User Guide ](https://docs.aws.amazon.com/controltower/latest/userguide/control-api-examples-short.html)
    ///
    /// - Parameter UpdateEnabledControlInput : [no documentation found]
    ///
    /// - Returns: `UpdateEnabledControlOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ServiceQuotaExceededException` : The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func updateEnabledControl(input: UpdateEnabledControlInput) async throws -> UpdateEnabledControlOutput
    /// Performs the `UpdateLandingZone` operation on the `AWSControlTowerApis` service.
    ///
    /// This API call updates the landing zone. It starts an asynchronous operation that updates the landing zone based on the new landing zone version, or on the changed parameters specified in the updated manifest file.
    ///
    /// - Parameter UpdateLandingZoneInput : [no documentation found]
    ///
    /// - Returns: `UpdateLandingZoneOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : Updating or deleting the resource can cause an inconsistent state.
    /// - `InternalServerException` : An unexpected error occurred during processing of a request.
    /// - `ResourceNotFoundException` : The request references a resource that does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling.
    /// - `ValidationException` : The input does not satisfy the constraints specified by an Amazon Web Services service.
    func updateLandingZone(input: UpdateLandingZoneInput) async throws -> UpdateLandingZoneOutput
}

public enum ControlTowerClientTypes {}
