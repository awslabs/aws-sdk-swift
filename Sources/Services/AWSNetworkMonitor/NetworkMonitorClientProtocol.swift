// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime

/// Amazon CloudWatch Network Monitor is an Amazon Web Services active network monitoring service that identifies if a network issues exists within the Amazon Web Services network or your own company network. Within Network Monitor you'll choose the source VPCs and subnets from the Amazon Web Services network in which you operate and then you'll choose the destination IP addresses from your on-premises network. From these sources and destinations, Network Monitor creates a monitor containing all the possible source and destination combinations, each of which is called a probe, within a single monitor. These probes then monitor network traffic to help you identify where network issues might be affecting your traffic. For more information, see [Using Amazon CloudWatch Network Monitor](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/what-is-network-monitor.html) in the Amazon CloudWatch User Guide.
public protocol NetworkMonitorClientProtocol {
    /// Performs the `CreateMonitor` operation on the `NetworkMonitor` service.
    ///
    /// Creates a monitor between a source subnet and destination IP address. Within a monitor you'll create one or more probes that monitor network traffic between your source Amazon Web Services VPC subnets and your destination IP addresses. Each probe then aggregates and sends metrics to Amazon CloudWatch.
    ///
    /// - Parameter CreateMonitorInput : [no documentation found]
    ///
    /// - Returns: `CreateMonitorOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : This operation attempted to create a resource that already exists.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ServiceQuotaExceededException` : This request exceeds a service quota.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func createMonitor(input: CreateMonitorInput) async throws -> CreateMonitorOutput
    /// Performs the `CreateProbe` operation on the `NetworkMonitor` service.
    ///
    /// Create a probe within a monitor. Once you create a probe, and it begins monitoring your network traffic, you'll incur billing charges for that probe.
    ///
    /// - Parameter CreateProbeInput : [no documentation found]
    ///
    /// - Returns: `CreateProbeOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ServiceQuotaExceededException` : This request exceeds a service quota.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func createProbe(input: CreateProbeInput) async throws -> CreateProbeOutput
    /// Performs the `DeleteMonitor` operation on the `NetworkMonitor` service.
    ///
    /// Deletes a specified monitor.
    ///
    /// - Parameter DeleteMonitorInput : [no documentation found]
    ///
    /// - Returns: `DeleteMonitorOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func deleteMonitor(input: DeleteMonitorInput) async throws -> DeleteMonitorOutput
    /// Performs the `DeleteProbe` operation on the `NetworkMonitor` service.
    ///
    /// Deletes the specified monitor. Once a probe is deleted you'll no longer incur any billing fees for that probe.
    ///
    /// - Parameter DeleteProbeInput : [no documentation found]
    ///
    /// - Returns: `DeleteProbeOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ServiceQuotaExceededException` : This request exceeds a service quota.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func deleteProbe(input: DeleteProbeInput) async throws -> DeleteProbeOutput
    /// Performs the `GetMonitor` operation on the `NetworkMonitor` service.
    ///
    /// Returns details about a specific monitor.
    ///
    /// - Parameter GetMonitorInput : [no documentation found]
    ///
    /// - Returns: `GetMonitorOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func getMonitor(input: GetMonitorInput) async throws -> GetMonitorOutput
    /// Performs the `GetProbe` operation on the `NetworkMonitor` service.
    ///
    /// Returns the details about a probe. You'll need both the monitorName and probeId.
    ///
    /// - Parameter GetProbeInput : [no documentation found]
    ///
    /// - Returns: `GetProbeOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func getProbe(input: GetProbeInput) async throws -> GetProbeOutput
    /// Performs the `ListMonitors` operation on the `NetworkMonitor` service.
    ///
    /// Returns a list of all of your monitors.
    ///
    /// - Parameter ListMonitorsInput : [no documentation found]
    ///
    /// - Returns: `ListMonitorsOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func listMonitors(input: ListMonitorsInput) async throws -> ListMonitorsOutput
    /// Performs the `ListTagsForResource` operation on the `NetworkMonitor` service.
    ///
    /// Lists the tags assigned to this resource.
    ///
    /// - Parameter ListTagsForResourceInput : [no documentation found]
    ///
    /// - Returns: `ListTagsForResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : This operation attempted to create a resource that already exists.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func listTagsForResource(input: ListTagsForResourceInput) async throws -> ListTagsForResourceOutput
    /// Performs the `TagResource` operation on the `NetworkMonitor` service.
    ///
    /// Adds key-value pairs to a monitor or probe.
    ///
    /// - Parameter TagResourceInput : [no documentation found]
    ///
    /// - Returns: `TagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : This operation attempted to create a resource that already exists.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func tagResource(input: TagResourceInput) async throws -> TagResourceOutput
    /// Performs the `UntagResource` operation on the `NetworkMonitor` service.
    ///
    /// Removes a key-value pair from a monitor or probe.
    ///
    /// - Parameter UntagResourceInput : [no documentation found]
    ///
    /// - Returns: `UntagResourceOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `ConflictException` : This operation attempted to create a resource that already exists.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func untagResource(input: UntagResourceInput) async throws -> UntagResourceOutput
    /// Performs the `UpdateMonitor` operation on the `NetworkMonitor` service.
    ///
    /// Updates the aggregationPeriod for a monitor. Monitors support an aggregationPeriod of either 30 or 60 seconds.
    ///
    /// - Parameter UpdateMonitorInput : [no documentation found]
    ///
    /// - Returns: `UpdateMonitorOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ServiceQuotaExceededException` : This request exceeds a service quota.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func updateMonitor(input: UpdateMonitorInput) async throws -> UpdateMonitorOutput
    /// Performs the `UpdateProbe` operation on the `NetworkMonitor` service.
    ///
    /// Updates a monitor probe. This action requires both the monitorName and probeId parameters. Run ListMonitors to get a list of monitor names. Run GetMonitor to get a list of probes and probe IDs.
    ///
    /// - Parameter UpdateProbeInput : [no documentation found]
    ///
    /// - Returns: `UpdateProbeOutput` : [no documentation found]
    ///
    /// - Throws: One of the exceptions listed below __Possible Exceptions__.
    ///
    /// __Possible Exceptions:__
    /// - `AccessDeniedException` : You do not have sufficient access to perform this action.
    /// - `InternalServerException` : The request processing has failed because of an unknown error, exception or failure.
    /// - `ResourceNotFoundException` : The specified resource does not exist.
    /// - `ServiceQuotaExceededException` : This request exceeds a service quota.
    /// - `ThrottlingException` : The request was denied due to request throttling
    /// - `ValidationException` : One of the parameters for the request is not valid.
    func updateProbe(input: UpdateProbeInput) async throws -> UpdateProbeOutput
}

public enum NetworkMonitorClientTypes {}
