// Code generated by smithy-swift-codegen. DO NOT EDIT!

import ClientRuntime


/// Paginate over `[DescribeHomeRegionControlsOutputResponse]` results.
///
/// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
/// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
/// until then. If there are errors in your request, you will see the failures only after you start iterating.
/// - Parameters:
///     - input: A `[DescribeHomeRegionControlsInput]` to start pagination
/// - Returns: An `AsyncSequence` that can iterate over `DescribeHomeRegionControlsOutputResponse`
extension MigrationHubConfigClient {
    public func describeHomeRegionControlsPaginated(input: DescribeHomeRegionControlsInput) -> ClientRuntime.PaginatorSequence<DescribeHomeRegionControlsInput, DescribeHomeRegionControlsOutputResponse> {
        return ClientRuntime.PaginatorSequence<DescribeHomeRegionControlsInput, DescribeHomeRegionControlsOutputResponse>(input: input, inputKey: \DescribeHomeRegionControlsInput.nextToken, outputKey: \DescribeHomeRegionControlsOutputResponse.nextToken, paginationFunction: self.describeHomeRegionControls(input:))
    }
}

extension DescribeHomeRegionControlsInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> DescribeHomeRegionControlsInput {
        return DescribeHomeRegionControlsInput(
            controlId: self.controlId,
            homeRegion: self.homeRegion,
            maxResults: self.maxResults,
            nextToken: token,
            target: self.target
        )}
}
