//
// Copyright Amazon.com Inc. or its affiliates.
// All Rights Reserved.
//
// SPDX-License-Identifier: Apache-2.0
//

// Code generated by smithy-swift-codegen. DO NOT EDIT!

import protocol ClientRuntime.PaginateToken
import struct ClientRuntime.PaginatorSequence

extension SSMQuickSetupClient {
    /// Paginate over `[ListConfigurationManagersOutput]` results.
    ///
    /// When this operation is called, an `AsyncSequence` is created. AsyncSequences are lazy so no service
    /// calls are made until the sequence is iterated over. This also means there is no guarantee that the request is valid
    /// until then. If there are errors in your request, you will see the failures only after you start iterating.
    /// - Parameters:
    ///     - input: A `[ListConfigurationManagersInput]` to start pagination
    /// - Returns: An `AsyncSequence` that can iterate over `ListConfigurationManagersOutput`
    public func listConfigurationManagersPaginated(input: ListConfigurationManagersInput) -> ClientRuntime.PaginatorSequence<ListConfigurationManagersInput, ListConfigurationManagersOutput> {
        return ClientRuntime.PaginatorSequence<ListConfigurationManagersInput, ListConfigurationManagersOutput>(input: input, inputKey: \.startingToken, outputKey: \.nextToken, paginationFunction: self.listConfigurationManagers(input:))
    }
}

extension ListConfigurationManagersInput: ClientRuntime.PaginateToken {
    public func usingPaginationToken(_ token: Swift.String) -> ListConfigurationManagersInput {
        return ListConfigurationManagersInput(
            filters: self.filters,
            maxItems: self.maxItems,
            startingToken: token
        )}
}

extension PaginatorSequence where OperationStackInput == ListConfigurationManagersInput, OperationStackOutput == ListConfigurationManagersOutput {
    /// This paginator transforms the `AsyncSequence` returned by `listConfigurationManagersPaginated`
    /// to access the nested member `[SSMQuickSetupClientTypes.ConfigurationManagerSummary]`
    /// - Returns: `[SSMQuickSetupClientTypes.ConfigurationManagerSummary]`
    public func configurationManagersList() async throws -> [SSMQuickSetupClientTypes.ConfigurationManagerSummary] {
        return try await self.asyncCompactMap { item in item.configurationManagersList }
    }
}
